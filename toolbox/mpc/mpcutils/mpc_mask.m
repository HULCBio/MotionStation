function mpc_mask(varargin)
% MPC_MASK Mask for MPC Simulink block

%   Authors: A. Bemporad
%   Copyright 1986-2004 The MathWorks, Inc.
%   $Revision: 1.1.8.11 $  $Date: 2004/04/16 22:09:47 $

% If mpc_mask is called with input arguments, a task has been created from
% the GUI => open mask invisible, add the mpcobject name to the edit box
% and programatically hit the ok button.

% Syntax with input args is:
% mpc_mask('openhidden',model,project,block,mpcctrlname)

if nargin==5
    blksystem = varargin{2};
    blk = varargin{4};
    proj = varargin{3};
    mpctext = varargin{5};
    if isempty(find_system('Name',blksystem))
        open_system(blksystem)
    end
    if isempty(blk)
        blk = mpc_getblockpath(blksystem); % Select the right block 
    end   
    if isempty(blk)
        return % There is no MPC block in the model
    end
    blkh = get_param(blk,'Handle');
else     
    blkh = gcbh;
    blk = gcb;
    blksystem = gcs;
    proj = [];
    mpctext = '';
end

% are any masks already open?
oldsh = get(0,'ShowHiddenHandles');
set(0,'ShowHiddenHandles','on');
fig = findobj('Type','figure', 'Tag', 'MPC_mask');
set(0,'ShowHiddenHandles',oldsh');
f = findobj(fig, 'flat', 'UserData', blkh);

% open the masks?
if ~isempty(f)
    if nargin==0 || ~strcmp(varargin{1},'openhidden')
        figure(f);
        set(f,'visible','on');
    end
    editBoxObj = findobj(f,'Tag','edit5'); % 
else 

    % get values from MPC Simulink block
    mpcobj = get_param(blk,'mpcobj');                  %'mpc(tf(1,[1 1]))'
    x0 = get_param(blk,'x0');                          %'[]'
    ref_from_ws = get_param(blk,'ref_from_ws');        %'off'
    ref_signal_name = get_param(blk,'ref_signal_name');%'[]'
    ref_preview = get_param(blk,'ref_preview');        %'on'
    md_from_ws = get_param(blk,'md_from_ws');          %'off'
    md_signal_name = get_param(blk,'md_signal_name');  %'[]'
    md_preview = get_param(blk,'md_preview');          %'on'
    project_name = get_param(blk,'project_name');      %
    task_name = get_param(blk,'task_name');            %
    md_inport= get_param(blk,'md_inport');             %'on'

    % UICONTROL wants 0 or 1, not 'on' or 'off' as the checkbox variable of the
    % block
    ref_from_ws=~strcmp(ref_from_ws,'off');
    ref_preview=~strcmp(ref_preview,'off');
    md_from_ws=~strcmp(md_from_ws,'off');
    md_preview=~strcmp(md_preview,'off');
    md_inport=~strcmp(md_inport,'off');

    ref_enabled = 'off';
    md_enabled = 'off';
    proj_enabled = 'off';
    if strcmp(blk,'mpclib/MPC Controller'),
        enabled = 'off'; % Gray out everything if the mask is invoked from the MPC Library
    else
        enabled = 'on';
        if ref_from_ws,
            ref_enabled = 'on';
        end
        if md_from_ws,
            md_enabled = 'on';
        end
    end

    % create the figure
    f = figure('Visible','off');

    EditHeight=1.54;

    % Define default colors
    global active gray
    active=[1 1 1];
    gray=get(0,'DefaultUIcontrolBackgroundColor');

    % Create mask figure
    set(f, 'Tag', 'MPC_mask', 'UserData', blkh, 'units', 'characters',...
    'numbertitle','off','name','MPC Simulink Block','Dockcontrols','off',...
    'position',[103.8 18 92 34.7-2.9],'MenuBar','none','Resize','off',...
    'NumberTitle','off','PaperPosition',get(0,'defaultfigurePaperPosition'),...
    'Color',gray,'HandleVisibility','off');

    frame1 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[1.8 21-2.9 88 13],...
    'String',{ 'Frame' },...
    'Style','frame',...
    'Tag','frame1','Enable',enabled);

    frame2 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[1.8 12.15 88.2 7.77-2.9],...
    'String',{ 'Frame' },...
    'Style','frame',...
    'Tag','frame2','Enable',enabled);

    frame3 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[1.8 4.69230769230769 88.2 6.15384615384615],...
    'String',{ 'Frame' },...
    'Style','frame',...
    'Tag','frame3','Enable',enabled);

    text1 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[3.2 33-2.9 27 1.3],...
    'String','MPC block (mask) (link)',...
    'Style','text',...
    'Tag','text1','Enable',enabled);

    editBoxObj = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[25 17.4-2.9 40 EditHeight],...
    'String', mpcobj,...
    'Style','edit',...
    'TooltipString','Insert an MPC object here',...
    'Tag','edit5','Enable',enabled,'Visible','on');


    tooltipstate = 'Initial state of the MPC controller (extended state estimate). Type HELP MPCSTATE for more info';

    editBoxX = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[25 12.46 40 EditHeight],...
    'String',x0,...
    'Style','edit',...
    'TooltipString',tooltipstate,...
    'Tag','edit6','Enable',enabled);

    editBoxRef = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[31.8 7.23076923076923 33.2 EditHeight],...
    'String',ref_signal_name,...
    'TooltipString','Output reference signal (structure with fields ''time'' and ''signals'' -- See ''To Workspace'' block)',...
    'Style','edit',...
    'Tag','edit1','Enable',ref_enabled);

    editBoxMD = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[31.8 5.3076923076923 33.2 EditHeight],...
    'String',md_signal_name,...
    'Style','edit',...
    'TooltipString','Measured disturbance signal (structure with fields ''time'' and ''signals'' -- See ''To Workspace'' block)',...
    'Tag','edit4','Enable',md_enabled);

    chkref_preview = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[69.8 7.15384615384615 17.2 1.61538461538462],...
    'String','Look ahead',...
    'TooltipString','Use future samples of reference signals (anticipative action)',...
    'Style','checkbox',...
    'Tag','checkbox4','Enable',ref_enabled,'Value',ref_preview);

    chkMD_preview = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[69.8 5.23076923076923 17.2 1.61538461538462],...
    'String','Look ahead',...
    'Style','checkbox',...
    'TooltipString','Use future samples of measured disturbance signals (anticipative action)',...
    'Tag','checkbox5','Enable',md_enabled,'Value',md_preview);

    refuis=[editBoxRef chkref_preview];
    chkref_from_ws = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[3 7.23076923076923 25 1.15],...
    'String','Reference signal',...
    'callback',{@ChkCallBack refuis},...
    'Style','checkbox',...
    'Value',ref_from_ws,...
    'TooltipString','Load reference signal from workspace','value',strcmp(ref_enabled,'on'),...
    'Tag','checkbox3','Enable',enabled);

    MDuis=[editBoxMD chkMD_preview];
    chkMD_from_ws = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[3 5.61538461538461 28 1.15],...
    'String','Measured disturbance',...
    'callback',{@ChkCallBack MDuis},...
    'Style','checkbox',...
    'Value',md_from_ws,...
    'TooltipString','Load measured disturbance signal from workspace',...
    'Tag','checkbox6','Enable',enabled);

    h6 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[7.6 19.15-2.9 12.4 1.31],...
    'String','Parameters',...
    'Style','text',...
    'Tag','text3','Enable',enabled);


    btnGUI = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[69 17.3-2.9 15.8 1.77],...
    'String','Design...','TooltipString','Run MPC Design Tool to design/edit an MPC controller or task',...
    'Tag','pushbutton10','Enable',enabled,'callback',{@GUICallBack f editBoxObj blk blksystem});


    chkMDInputPort = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[1.8 3 47.4 1.15],...
    'String','Enable input port for measured disturbance',...
    'Value',md_inport,...
    'Style','checkbox',...
    'Tag','checkbox1','Enable',enabled);%,...
    
    %'callback',{@MDInportCallBack});

    h13 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[5.6 10.2307692307692 12.4 1.15],...
    'String','Input signals',...
    'Style','text',...
    'Tag','text4','Enable',enabled);


    h18 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'HorizontalAlignment','left',...
    'Position',[3.6 8.92307692307692 12.4 1.15],...
    'String','Use custom',...
    'Style','text',...
    'Tag','text5','Enable',enabled);


    h20 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[22.8 0.62 15 1.77],...
    'String','OK',...
    'Tag','pushbutton3','Enable',enabled,...
    'callback',{@OKCallBack f enabled blk editBoxObj ...
         editBoxX ... 
        chkref_from_ws editBoxRef chkref_preview ...
        chkMD_from_ws editBoxMD chkMD_preview chkMDInputPort});

    msg = sprintf('%s%s\n\n%s\n\n%s%s%s%s',...
    'The MPC Controller block lets you design, simulate, and tune model predictive ',...
    'controllers',...
    'You can use the MPC Design Tool to create a new controller or modify an existing one. ',...
    'When simulating the MPC controller, you can specify the reference and measured ',...
    'expressions. If the Look Ahead option is selected, the MPC controller will take advantage ',...
    'of disturbance signals, either as external inputs, or as workspace variables or MATLAB ',...
    'of future values of these signals when computing current control actions.');

    h101 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'HorizontalAlignment','left',...
    'Position',[2.6 21.53-3 80 1.2*9],...
    'String',msg,...
    'Style','text',...
    'Tag','text101','Enable',enabled);

    h30 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[40 0.615384615384611 15 1.76923076923077],...
    'String','Cancel',...
    'Tag','pushbutton6','Enable',enabled,'callback',{@CancelCallBack f editBoxObj blk});


    h31 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[57.6 0.615384615384611 15 1.76923076923077],...
    'String','Help',...
    'Tag','pushbutton7','Enable',enabled,...
    'callback',{@HelpCallBack});


    h32 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'Position',[75 0.615384615384611 15 1.76923076923077],...
    'String','Apply',...
    'Tag','pushbutton8','Enable',enabled,...
    'callback',{@applyCallBack blk f editBoxObj editBoxX ... %chkObs ss_flag ...
        chkref_from_ws editBoxRef chkref_preview chkMD_from_ws editBoxMD chkMD_preview chkMDInputPort});


    h37 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'HorizontalAlignment','left',...
    'Position',[4.2 12.6153846153846 19.8 1.15],...
    'String','Initial controller state',...
    'Style','text','TooltipString',tooltipstate,...
    'Tag','text16','Enable',enabled);

    h115 = uicontrol(...
    'Parent',f,...
    'Units','characters',...
    'HorizontalAlignment','left',...
    'Position',[4.4 17.5-2.9 15.6 1.15],...
    'String','MPC controller',...
    'Style','text','TooltipString','Specify an MPC object',...
    'Tag','text16','Enable',enabled);

    % Save project and task names in mask's workspace
    setappdata(f,'project_name',project_name);
    setappdata(f,'task_name',task_name);
end

if nargin>=1
    
    % If this mask has been opened from the New Task menu - check that it 
    % doesn't already exist 
    if ~isempty(proj) && ~isempty(proj.find('-class','mpcnodes.MPCGUI','Block',blk))
        errordlg('An MPC task already exists for this block',...
            'MPC Toolbox','modal')
        return
    end      
    set(editBoxObj,'string', mpctext);
    feval(@GUICallBack,[],[],f, editBoxObj, blk, blksystem, proj);
else
    set(f, 'Visible','on');
    figure(f); % Bring it to front
end

%-------------------------------------------------------------------
% CALLBACKS
%-------------------------------------------------------------------
function applyCallBack(eventSrc, eventData, blk, hfig, editBoxObj,  editBoxX, ... 
chkref_from_ws, editBoxRef, chkref_preview, chkMD_from_ws, editBoxMD, chkMD_preview, chkMDInputPort)

mpcobj = get(editBoxObj,'string');
x0 = get(editBoxX,'string');
project_name=char(getappdata(hfig,'project_name'));
task_name=char(getappdata(hfig,'task_name'));

ref_from_ws = onoff(get(chkref_from_ws,'value'));
ref_signal_name = get(editBoxRef,'string');
ref_preview = onoff(get(chkref_preview,'value'));
md_from_ws = onoff(get(chkMD_from_ws,'value'));
md_signal_name = get(editBoxMD,'string');
md_preview = onoff(get(chkMD_preview,'value'));
md_inport = onoff(get(chkMDInputPort,'value'));

% Modify the I/O structure depending on whether external MDs are enabled
%mpc_block_resize(blk,strcmp(md_inport,'on'));

% >>>>> Problem: SET_PARAM also invokes MPC_INIT, i.e., the Initialization Command of the block
set_param(blk,'mpcobj',mpcobj,'x0',x0,... %'u0',u0,... %'ss_flag',ss_flag,...
'ref_from_ws',ref_from_ws,'ref_signal_name',ref_signal_name,'ref_preview',ref_preview,...
'md_from_ws',md_from_ws,'md_signal_name',md_signal_name,'md_preview',md_preview,...
'task_name',task_name,'md_inport',md_inport);

% If the mpcobject has been cleared, clear the number of mvs so that it
% does not become a hidden state that the user cannot change
if isempty(mpcobj)
   set_param(blk,'n_mv','0');
end
%-------------------------------------------------------------------
function str=onoff(value)
% Converts 1/0 to 'on'/'off', to avoid the following Matlab message:
% 'Specifying an enumerated value by its corresponding integer value is being phased out'

if value,
    str='on';
else
    str='off';
end

%-------------------------------------------------------------------
function OKCallBack(eventSrc, eventData,f, enabled ,blk, editBoxObj,  editBoxX, ... 
chkref_from_ws, editBoxRef, chkref_preview, chkMD_from_ws, editBoxMD, chkMD_preview, chkMDInputPort)

if strcmp(enabled,'on'),
    applyCallBack(eventSrc, eventData, blk, f, editBoxObj, editBoxX, ... 
    chkref_from_ws, editBoxRef, chkref_preview, chkMD_from_ws, editBoxMD, chkMD_preview, chkMDInputPort);
end

CloseMask(f,editBoxObj,blk);

%-------------------------------------------------------------------
function CancelCallBack(eventSrc, eventData,f,editBoxObj,blk)

CloseMask(f,editBoxObj,blk);

%-------------------------------------------------------------------
function HelpCallBack(eventSrc, eventData)

helpview([docroot, '/toolbox/mpc/mpc.map'], 'MPCmask');
return
% 
% uiwait(msgbox({...
% 'The MPC Controller block lets you design, simulate, and tune',...
% 'model predictive controllers.',...
% ' ',...
% 'MPC controllers are specified as @mpc objects in the workspace.',...
% 'You can use the MPC Design Tool to create a new controller or',...
% 'modify an existing one.',...
% ' ',...
% 'When simulating the MPC controller, you can specify the reference',...
% 'and measured disturbance signals, either as external inputs, or ',...
% 'as workspace variables or MATLAB expressions.',...
% 'If the Look Ahead option is selected, the MPC controller will take',...
% 'advantage of future values of these signals when computing current',...
% 'control actions.',...
% },'MPC Help','Help','modal'));

msg = sprintf('%s\n%s\n\n%s\n%s\n%s\n\n%s\n%s\n%s\n%s\n%s\n%s\n',...
'The MPC Controller block lets you design, simulate, and tune',...
'model predictive controllers.',...
'MPC controllers are specified as @mpc objects in the workspace.',...
'You can use the MPC Design Tool to create a new controller or',...
'modify an existing one.',...
'When simulating the MPC controller, you can specify the reference',...
'and measured disturbance signals, either as external inputs, or ',...
'as workspace variables or MATLAB expressions.',...
'If the Look Ahead option is selected, the MPC controller will take',...
'advantage of future values of these signals when computing current',...
'control actions.');
uiwait(msgbox({msg},'MPC Help','Help','modal'));
%-------------------------------------------------------------------
function GUICallBack(eventSrc, eventData, hfig,...
    editBoxObj, blk, blksystem, varargin)

persistent oldfilenames blocknames

if ~usejava('swing')
    error('Java Swing must be enabled to use the MPC Design Tool')
    return
end
   
if isempty(blocknames),
    % First block
    oldfilenames={''};
    blocknames={blk};
    block=1;
else
    nn=length(blocknames);
    block=[];
    for i=1:nn,
        if strcmp(blocknames{i},blk),
            block=i;
        end
    end
    if isempty(block),
        blocknames{nn+1}=blk;
        oldfilenames{nn+1}='';
        block=nn+1;
    end
end
oldfilename=oldfilenames{block};
    
% GUI already open ?
[GUIopen,hGUI] = mpc_getGUIstatus(blk);
    
mpcobjname = get(editBoxObj,'string');

% If no mpcobject is specified open an instance of the Simulink Control
% Manager with an option to use a linearized Simulink model
set_param(blk,'mpcobj',mpcobjname)
if isempty(mpcobjname)
    if ~license('test','Simulink_Control_Design')
        msg = ['Opening the MPC Design Tool without specifying a ',...
               'workspace MPC object requires the Simulink Control ',...
               'Designer to linearize the plant model'];      
        errordlg(msg, 'Model Predictive Control Toolbox','modal')
        return
    end     
    try
        [success,hRoot,hWS,hTree,hGUI,hProj,MPCNode] = ...
            mpc_openscm(blk, varargin{:});
    catch
        uiwait(errordlg(lasterr,'Linearization of MPC model','modal'));
        return
    end

    if ~success,
        return
    end

    setappdata(hfig,'hGUI',hGUI);
    setappdata(hfig,'GUIopen',1);
    project_name = hProj.Label;
    setappdata(hfig,'project_name',project_name);

    % (jgo) hTask may be a vector if there is more than one block
    % hTask=hWS.find('-class','mpcnodes.MPCGUI','Block',blk);
    task_name = hGUI.Label;
    setappdata(hfig,'task_name',task_name);

    % SETUP LISTENER (as in Destroy) to prompt the user to export the object to
    % the workspace once the GUI is closed. Otherwise in the meantime run a
    % simulation through MPC_INIT as in the case when the user edits an MPC
    % object with the GUI
    if ~isempty(MPCNode) 
        % If the "Obtain Plant Model From Linearized ..." is not checked
        % or linearization failed, MPCNode may be empty
        Ldestroy = handle.listener(MPCNode, 'ObjectBeingDestroyed', ...
            {@mpc_guimask 'lin_destroy' editBoxObj blk});

        % Move listener to ApplicationData, so it's always in scope
        setappdata(hfig,'ExportController',Ldestroy);
        setappdata(hfig,'editBoxObj',editBoxObj);

        mpcnames = get(MPCNode,{'Label'});
        mpcname = mpcnames{1};
        set(editBoxObj,'String',mpcname);
        set_param(blk,'mpcobj',mpcname);
    end

    return
end

isgood=evalin('base',sprintf('exist(''%s'',''var'');',mpcobjname));
if isgood,
    isgood=evalin('base',sprintf('isa(%s,''mpc'');',mpcobjname));
end
if ~isgood,
    msg = 'The MPC object must be a variable in the workspace.';
    uiwait(errordlg(msg,'MPC Object Design Error','modal'));
else
    if ~GUIopen,
        task_name=sprintf('MPCDesign%d',block);
        try
            [hRoot, hWS, hTree, hGUI, hProj]=evalin('base',sprintf('slmpctool(''initialize'',''%s'',[],''%s'',''%s'',{%s,''%s''});',...
                blksystem,task_name,blk,mpcobjname,mpcobjname));
        catch
            uiwait(errordlg(lasterr,'Opening MPC object in GUI','modal'));
            return
        end
        setappdata(hfig,'hGUI',hGUI);
        setappdata(hfig,'GUIopen',1);
        if ~isempty(hProj),
            project_name=hProj.Label;
        else
            project_name=[];
        end
        setappdata(hfig,'project_name',project_name);
        setappdata(hfig,'task_name',task_name);


        % Listener object for MPC object being destroyed in GUI, e.g.
        % because the GUI is closed
        MPCNode=hGUI.getMPCControllers.getChildren;
        MPCNode=MPCNode(1);
        Ldestroy = handle.listener(MPCNode, 'ObjectBeingDestroyed', ...
            {@mpc_guimask 'destroy' editBoxObj});

        % Move listener to ApplicationData, so it's always in scope
        setappdata(hfig,'ExportController',Ldestroy);
        setappdata(hfig,'editBoxObj',editBoxObj);
    else
        project_name=getappdata(hfig,'project_name');
        task_name=getappdata(hfig,'task_name');

        try
            evalin('base',sprintf('slmpctool(''initialize'',''%s'',[],''%s'',''%s'',{%s,''%s''});',...
                blksystem,task_name,blk,mpcobjname,mpcobjname));
        catch
            uiwait(errordlg(lasterr,'Opening MPC object in GUI','modal'));
            return
        end
    end
end


%-------------------------------------------------------------------
function ToggleCallBack(eventSrc, eventData, radio_other, uiyes,uino)

global active gray

% Change Enable property
newstatus=get(eventSrc,'value');
if ~newstatus,
    set(eventSrc,'value',1);
    return
end

set(radio_other,'value',~newstatus);
for i=1:length(uiyes),
    set(uiyes(i),'Enable',onoff(newstatus));
end
for i=1:length(uino),
    set(uino(i),'Enable',onoff(~newstatus));
end

%-------------------------------------------------------------------
% function MDInportCallBack(eventSrc, eventData)
% % Resize block if external MD signals are selected
% 
% newstatus=get(eventSrc,'value');
% mpc_block_resize(gcb,newstatus);
 

%-------------------------------------------------------------------
function ChkCallBack(eventSrc, eventData, uis)

global active gray

% Change Enable property
newstatus=get(eventSrc,'value');

for i=1:length(uis),
    set(uis(i),'Enable',onoff(newstatus));

end
%-------------------------------------------------------------------
function CloseMask(f,editBoxObj,blk)

fclosemask=1;

if fclosemask,
    set(f,'visible','off');
end
