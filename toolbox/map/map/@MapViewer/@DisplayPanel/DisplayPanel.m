function this = DisplayPanel(viewer)
%DisplayPanel

%   Copyright 1996-2004 The MathWorks, Inc.
%   $Revision: 1.1.6.4 $  $Date: 2004/02/01 21:56:28 $

viewerPosition = viewer.getPositionInPixels;

PanelHeight = 50; % Pixels
this = MapViewer.DisplayPanel('Parent',viewer.Figure,'Units','pixels',...
                              'Position',[2 2 viewerPosition(3)-4 PanelHeight],...
                              'XLim',[0 1],'YLim',[0 1],'Visible','off',...
                              'HandleVisibility','off');

% Created a recessed box look.
line('Parent',double(this),'XData',[0 1 1],'YData',[0 0 1],...
     'Color','white','LineWidth',2);
line('Parent',double(this),'XData',[0 0 1],'YData',[0 1 1],...
     'Color','black','LineWidth',2);

% Create Separators
%gray = [0.7 0.7 0.7];
%line('Parent',double(this),'XData',[0.12 0.12],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);
%line('Parent',double(this),'XData',[0.123 0.123],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);
%
%line('Parent',double(this),'XData',[0.28 0.28],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);
%line('Parent',double(this),'XData',[0.283 0.283],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);
%
%line('Parent',double(this),'XData',[0.44 0.44],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);
%line('Parent',double(this),'XData',[0.443 0.443],'YData',[0.04 1],'Color',gray,...
%     'LineWidth',1);

this.MapUnits = {'None','none';
                 'Kilometers','km';
                 'Meters','m';
%                 'Centimeters','cm';
%                 'Milimeters','mm';
%                 'Microns','u';
                 'Nautical Miles','nm';
                 'International Feet','ft';
%                 'Inches','in';
%                 'Yards','yd';
%                 'International Miles','mi';
                 'US Survey Feet','sf';
%                 'US Survey Miles','sm';
                };

createXYDisplay(this,viewer);
%createLonLatDisplay(this,viewer);
createScaleDisplay(this,viewer);
createMapUnitsDisplay(this,viewer);
createActiveLayerDisplay(this,viewer);

this.Listeners = [handle.listener(viewer.Figure,viewer.Figure.findprop('Position'),...
                                  'PropertyPostSet',{@resize this viewer}),...
                 ];

function resize(hSrc,event,this,viewer)
% Panel width stretches to fit figure.
p = get(this,'Position');
set(this,'Position',[p(1:2) event.NewValue(3)-4 p(4)]);

function localSetScale(hSrc,event,h)
oldscale = h.Axis.getScale;
err = false;
str = get(hSrc,'String');
% Remove commas
str(str==',') = [];
% Remove spaces
str(isspace(str)) = [];
if isempty(findstr(str,':'))
  num = 1;
  den = str2num(str);
  if isempty(den)
    err = true;
  end
else
  [values, count] = sscanf(str,'%f:%f');
  if count ~= 2
    err = true;
  else
    num = values(1);
    den = values(2);
  end
end
if err
  h.Axis.setScale(oldscale);
else
  h.Axis.setScale(num/den);
end

function ax = createXYDisplay(this,viewer)
c = viewer.Figure.Color;

pX = [this.PanelXMargin+10,...
      this.PanelYMargin+this.TextBoxHeight-3,...
      this.TextBoxWidth-50,...
      this.TextBoxHeight];

pY = [this.PanelXMargin+10,...
      this.PanelYMargin-3,...
      this.TextBoxWidth-50,...
      this.TextBoxHeight];

uicontrol('Parent',double(viewer.Figure),'Style','text','String','X:',...
          'Units','Pixels','Enable','inactive',...
          'Position',pX+[30 0 0 0],'HorizontalAlignment','left','BackgroundColor',c);

uicontrol('Parent',double(viewer.Figure),'Style','text','String','Y:',...
          'Units','Pixels','Enable','inactive',...
          'Position',pY+[30 0 0 0],'HorizontalAlignment','left','BackgroundColor',c);

%t = text('Parent',double(this),'String','X','Units','pixels','Position',[15 40]);
%t = text('Parent',double(this),'String','Y','Units','pixels',...
%         'Position',[15 8],'Rotation',90);
spacing = 25;

p = [this.PanelXMargin+this.TextBoxWidth-50,...
     this.PanelYMargin+this.TextBoxHeight+2,...
     this.TextBoxWidth+40,...
     this.TextBoxHeight];
     
% $$$ p = [this.PanelXMargin + this.TextBoxWidth + spacing,...
% $$$      this.PanelYMargin + this.TextBoxHeight + 2,...
% $$$      this.TextBoxWidth,...
% $$$      this.TextBoxHeight];
viewer.XDisplay = uicontrol(double(viewer.Figure),'Style','edit','Units','Pixels',...
                          'Enable','inactive','Position',p+[30 0 0 0]);

p = [this.PanelXMargin+this.TextBoxWidth-50,...
     this.PanelYMargin,...
     this.TextBoxWidth+40,...
     this.TextBoxHeight];
     
% $$$ p = [this.PanelXMargin + this.TextBoxWidth + spacing,...
% $$$      this.PanelYMargin,...
% $$$      this.TextBoxWidth,...
% $$$      this.TextBoxHeight];
viewer.YDisplay = uicontrol(double(viewer.Figure),'Style','edit','Units','Pixels',...
                            'Enable','inactive','Position',p+[30 0 0 0]);

% createXYDisplay

function ax = createLonLatDisplay(this,viewer)
spacing = 25;
c = viewer.Figure.Color;

p = [this.PanelXMargin + 2*this.TextBoxWidth + spacing-50,...
     this.PanelYMargin-3,...
     this.TextBoxWidth,...
     this.TextBoxHeight];

uicontrol('Parent',double(viewer.Figure),'Style','text','String','Lon.',...
          'Units','Pixels','Enable','inactive',...
          'Position',p,'HorizontalAlignment','left','BackgroundColor',c);

p = [this.PanelXMargin + 2*this.TextBoxWidth + spacing-50, ...
     this.PanelYMargin + this.TextBoxHeight-3,...
     this.TextBoxWidth, ...
     this.TextBoxHeight];

uicontrol('Parent',double(viewer.Figure),'Style','text','String','Lat.',...
          'Units','Pixels','Enable','inactive',...
          'Position',p,'HorizontalAlignment','left','BackgroundColor',c);

p = [this.PanelXMargin + 3*this.TextBoxWidth + spacing - 100,...
     this.PanelYMargin,...
     this.TextBoxWidth,...
     this.TextBoxHeight];

uicontrol(double(viewer.Figure),'Style','edit','enable','inactive','Units','Pixels',...
          'Position',p);
      
p = [this.PanelXMargin + 3*this.TextBoxWidth + spacing - 100,...
     this.PanelYMargin + this.TextBoxHeight + 2,...
     this.TextBoxWidth,...
     this.TextBoxHeight];
uicontrol(double(viewer.Figure),'Style','edit','enable','inactive','Units','Pixels',...
          'Position',p);

function ax = createScaleDisplay(this,viewer)
spacing = 25;
c = viewer.Figure.Color;

p = [this.PanelXMargin + 4*this.TextBoxWidth + 2*spacing - 100,...
     this.PanelYMargin + this.TextBoxHeight-3,...
     this.TextBoxWidth,...
     this.TextBoxHeight];

uicontrol('Parent',double(viewer.Figure),'Style','text','String','Scale:',...
          'Units','Pixels','Enable','inactive',...
          'Position',p-[30 0 0 0],'HorizontalAlignment','left','BackgroundColor',c);

p = [this.PanelXMargin + 5*this.TextBoxWidth + 2*spacing - 110,...
     this.PanelYMargin + this.TextBoxHeight+2,...
     getMapUnitStrLen(this) + 20,...
     this.TextBoxHeight];

viewer.ScaleDisplay = handle(uicontrol(double(viewer.Figure),'Style','Edit',...
                                        'Units','Pixels',...
                                        'Enable','inactive',...
                                        'SelectionHighlight','off',...
                                        'Position',p-[30 0 0 0],...
                                        'Callback',{@localSetScale viewer}));
% createScaleDisplay


function ax = createMapUnitsDisplay(this,viewer)
spacing = 25;
c = viewer.Figure.Color;

p = [this.PanelXMargin + 4*this.TextBoxWidth + 2*spacing - 100,...
     this.PanelYMargin - 3,...
     this.TextBoxWidth,...
     this.TextBoxHeight];

uicontrol('Parent',double(viewer.Figure),'Style','text','String','Map units:',...
          'Units','Pixels','Enable','inactive',...
          'Position',p-[30 0 0 0],'HorizontalAlignment','left','BackgroundColor',c);

p = [this.PanelXMargin + 5*this.TextBoxWidth + 2*spacing - 110,...
     this.PanelYMargin,...
     getMapUnitStrLen(this) + 20,...
     this.TextBoxHeight];

this.MapUnitsDisplay = uicontrol(double(viewer.Figure),'Style', ...
                                    'popupmenu','Units','Pixels', ...
                                    'Position',p-[30 0 0 0],'String',...
                                     this.MapUnits(:,1),...
                                    'HorizontalAlignment','left',...
                                    'Callback',{@localSetMapUnits this viewer});
% createMapUnitsDisplay


function createActiveLayerDisplay(this,viewer)
spacing = 25;
c = viewer.Figure.Color;

extraPadding = this.TextBoxWidth - (getMapUnitStrLen(this) + 20);

p = [this.PanelXMargin + 6*this.TextBoxWidth + 3*spacing - 110 - extraPadding,...
     this.PanelYMargin + this.TextBoxHeight-3,...
     this.TextBoxWidth + 20,...
     this.TextBoxHeight];

uicontrol(double(viewer.Figure),'Style','text','Units','Pixels', ...
          'Position',p,'String','Active layer:',...
          'HorizontalAlignment','left','BackgroundColor',c);

p = [this.PanelXMargin + 6*this.TextBoxWidth + 3*spacing - 110 - extraPadding,...
     this.PanelYMargin,...
     getMapUnitStrLen(this) + 20,...
     this.TextBoxHeight];
%     this.TextBoxWidth + 25,... % Make it a little bigger to hold long names

this.ActiveLayerDisplay = uicontrol(double(viewer.Figure),'Style', ...
                                    'popupmenu','Units','Pixels', ...
                                    'Position',p,'String',...
                                    [{'None'};viewer.getMap.getLayerOrder],...
                                    'HorizontalAlignment','left',...
                                    'Callback',{@localSetActiveLayer this viewer});

function localSetActiveLayer(hSrc,event,this,viewer)
val = get(this.ActiveLayerDisplay,'Value');
strs = get(this.ActiveLayerDisplay,'String');
activelayer = strs{val};
setActiveLayer(viewer,activelayer);

function localSetMapUnits(hSrc,event,this,viewer)
mapUnitsInd = get(this.MapUnitsDisplay,'Value');
mapUnitsStr = get(this.MapUnitsDisplay,'String');
mapUnitsTag = this.MapUnits{mapUnitsInd,2};

mapUnitsMenu = handle(findobj(get(viewer.Figure,'Children'),'Label','Set Map Units'));
selectedMapUnitMenu = findobj(mapUnitsMenu.Children,'Tag', mapUnitsTag);
set(mapUnitsMenu.Children,'Checked','off');
set(selectedMapUnitMenu,'Checked','on');

this.setMapUnits(viewer,mapUnitsTag);

function lenOut = getMapUnitStrLen(this)
% Get length of longest Map Unit
maxCharLen = length(strvcat(this.MapUnits{:,1})); 

% convert to size in pixels
lenOut = maxCharLen*5 + 10;