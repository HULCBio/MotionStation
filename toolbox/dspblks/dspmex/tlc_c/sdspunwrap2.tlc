%% $RCSfile: sdspunwrap2.tlc,v $
%% $Revision: 1.19.4.2 $  $Date: 2004/04/12 23:10:02 $
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%%
%% Abstract: Unwrap a vector of radian phase angles.

%implements sdspunwrap2 "C"

%% Function: BlockTypeSetup ====================================================
%function BlockTypeSetup(block, system) void

    %<Include_rt_header(block,"dspunwrap_rt")>

%endfunction %% BlockTypeSetup

%% Function: BlockInstanceSetup ===============================================
%%
%function BlockInstanceSetup(block, system) void

    %assign INPORT  = 0
    %assign OUTPORT = 0
 
    %assign framebased = LibBlockInputSignalIsFrameData(INPORT)

    %assign numDims = LibBlockInputSignalNumDimensions(INPORT)
    %assign inDims  = LibBlockInputSignalDimensions(INPORT)
    %assign inCols  = (numDims == 2) ? inDims[1] : 1
    %assign inRows  = inDims[0]
    %assign inplace = (LibBlockInputSignalBufferDstPort(INPORT) == OUTPORT)
    %assign cutoff  = SFcnParamSettings.Cutoff

    %assign running = SFcnParamSettings.Running
    %assign numChans = framebased ? inCols : (inRows*inCols)
    %assign numChans = (numDims == 2) ? numChans : 1
    %% If the input is a sample-based row, then we treat it
    %% as if it were a column instead of unwraping sclars. 
    %%
    %if(!framebased && inRows==1)
        %assign inRows = inCols
        %assign inCols = 1
    %endif
    %assign DtypeID    = LibBlockInputSignalDataTypeId(INPORT)
    %%Dwork indices

    %assign block = block  + INPORT + OUTPORT + framebased + ...
                    inCols + inRows + inplace + cutoff+ running + ...
                    numChans + DtypeID

%endfunction %% BlockInstanceSetup


%% Function: Start =============================================================
%% Abstract:
%%
%function Start(block, system) Output
%%
  %if !LibIsEqual(TID, "constant")
    %if running
        %<LibBlockDWork(FirstStep,"","",0)> = (boolean_T)1;
    %endif
  %endif
%%
%endfunction  %% Start

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
    /* Signal Processing Blockset Unwrap (%<ParamSettings.FunctionName>) - '%<Name>' */
    %assign Dnames = ["R", "D"]
    %assign dtype  = (DtypeID == tSS_SINGLE) ? 0 : 1
    %assign Dname  = Dnames[dtype]
    %assign runame = running ? "R" : "NR"
    %assign inoutname = inplace ? "IP" : "OP"
    %assign framename = running ? (framebased||(numChans==1) ? "F" : "S") : ""
    %assign lastname = runame + inoutname + framename
    MWDSP_Unwrap_%<Dname>_%<lastname>(\
                            %<LibBlockInputSignalAddr(INPORT, "", "", 0)>,\
    %if !inplace
                            %<LibBlockOutputSignalAddr(OUTPORT,  "", "", 0)>,\
    %endif
    %if running
                            %<LibBlockDWorkAddr(Prev, "", "", 0)>,\
                            %<LibBlockDWorkAddr(Cumsum, "", "", 0)>,\
    %endif
                            %<cutoff>,\
    %if framename != "S"
                            %<inCols>,\
                            %<inRows>\
    %else
                            %<numChans>\
    %endif
    %if running
                            , %<LibBlockDWorkAddr(FirstStep,"","",0)>\
    %endif
                            );
%endfunction

%% [EOF] sdspunwrap2.tlc

