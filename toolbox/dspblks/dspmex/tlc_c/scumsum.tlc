%% $Revision: 1.11.4.2 $
%% $RCSfile: scumsum.tlc,v $
%% $Date: 2004/04/12 23:08:02 $
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%%
%% Abstract: Target file for the S-Function scumsum.c
%%

%implements "scumsum" "C"

%% Function: Outputs ==========================================================
%%
%% Compute cumulative sum of input elements
%%
%function Outputs(block, system) Output
    /* Signal Processing Blockset Cumulative Sum (%<ParamSettings.FunctionName>) - '%<Name>' */
    %%
    %assign INPORT  = 0
    %assign OUTPORT = 0
    %assign c0      = LibBlockOutputSignalIsComplex(OUTPORT)
    %assign inplace = (LibBlockInputSignalBufferDstPort(INPORT) == OUTPORT)
    %assign N       = LibDataInputPortWidth(INPORT)
    %%
    %if N==1
		/* Scalar input - no code required */
		%%
    %elseif(inplace)
        %if !c0
            /* Real in-place algorithm: */
            {
                real_T *y     = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
                real_T *yprev = y++;  /* Skip over first element */
                int_T   width = %<N>;

                while(--width > 0) {
                    *y++ += *yprev++;
                }
            }
        %else
            {
                creal_T *y     = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
                creal_T *yprev = y++;  /* Skip over first element */
                int_T   width  = %<N>;

                while(--width > 0) {
                    y->re     += yprev->re;
                    (y++)->im += (yprev++)->im;
                }
            }
        %endif
    %else
        %if !c0
            {
            %%
            real_T *y = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
            real_T *yprev = y;

            *y++ = %<LibBlockInputSignal(INPORT, "", "", 0)>;
            %%
            %assign rollRegions1 = LibClipRollRegions(RollRegions, 2, -1)
            %assign rollVars = ["U"]
            %roll sigIdx = rollRegions1, lcv = RollThreshold, block, ...
				           "Roller", rollVars
                *y++ = *yprev++ + %<LibBlockInputSignal(INPORT, "",  lcv, sigIdx)>;
            %endroll
            }
        %else
            {
            creal_T *y = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
            creal_T *yprev = y;

            *y++ = %<LibBlockInputSignal(INPORT, "", "", 0)>;
            %%
            %assign rollRegions1 = LibClipRollRegions(RollRegions, 2, -1)
            %assign rollVars = ["U"]
            %roll sigIdx = rollRegions1, lcv = RollThreshold, block, ...
				           "Roller", rollVars
                %assign ur = LibBlockInputSignal(INPORT, "", lcv, "%<tRealPart>%<sigIdx>")
				%assign ui = LibBlockInputSignal(INPORT, "", lcv, "%<tImagPart>%<sigIdx>")
                y->re     = yprev->re     + %<ur>;
                (y++)->im = (yprev++)->im + %<ui>;
            %endroll
            }       
        %endif
    %endif

%endfunction %% Outputs

%% EOF: scumsum.tlc


