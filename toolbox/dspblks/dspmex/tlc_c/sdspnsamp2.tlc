%% $RCSfile: sdspnsamp2.tlc,v $
%% $Revision: 1.7.4.2 $ 
%% $Date: 2004/04/12 23:09:15 $
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%%
%% Abstract: Signal Processing Blockset Block which transitions from inactive to active level.
%% A high active level, outputs FALSE (0) for the first N samples; 
%% thereafter, outputs TRUE (1). A low active level, outputs TRUE (0) 
%% for the first N sample;thereafter, outputs FALSE (0).

%implements "sdspnsamp2" "C"

%include "event_port_handler.tlc"

%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void
%%
%<Include_rt_header(block,"dspeph_rt")>
%%
%endfunction %% BlockTypeSetup


%% Function: BlockInstanceSetup ===============================================
%%
%function BlockInstanceSetup(block, system) void
%%
%assign INPORT_RESET = 0  
%assign OUTPORT_NUM  = 0 
%assign OutputType   = LibBlockOutputSignalDataTypeName(OUTPORT_NUM,"")        
%assign activelevel  = LibBlockParameter(ACTLEVEL,  "", "", 0)
%%
%% Check for reset port
%%
%assign resetport = (SFcnParamSettings.IsResetPort == "Yes") ? 1 : 0
%%
%% Setup the event port handler:
%%
%if resetport
  %<EventPortHandlerInstanceSetup(block)>
  %if EventPortRequiresState(block)
    %assign ephdwork = EPHState
  %else
    %assign ephdwork = 0
  %endif
  %assign block = block + ephdwork
%endif
%%
%assign block = block + INPORT_RESET +  OUTPORT_NUM  + resetport + OutputType  
%%
%endfunction 
%% BlockInstanceSetup========================================================


%% Function: InitializeConditions =============================================
%%
%function InitializeConditions(block, system) Output
    /* Signal Processing Blockset N-Sample Enable  (%<ParamSettings.FunctionName>) - '%<Name>' */   
    %% Initialize Counter to zero
    %%     
    %<LibBlockDWork(Counter,"","",0)> = (uint32_T) 0;
    %%  
    %if resetport
      %<InitializeEventPortPrevStateCache(block, ephdwork)> \
    %endif   
%endfunction
%%InitializeConditions==================================================
   
  
%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
     /* Signal Processing Blockset N-Sample Enable  (%<ParamSettings.FunctionName>) - '%<Name>' */   
  %%
{          
  %assign samplecnt   = LibBlockDWork(Counter, "", "", 0)
  %assign targetcnt   = LibBlockParameter(TARGETCNT,  "", "", 0)
  %assign activelevel = LibBlockParameter(ACTLEVEL,  "", "", 0)
  {   
    %if resetport 
	 if(%<CheckEventPort(block, INPORT_RESET, ephdwork)>) 
	 {     
	   /* Reset iteration count. */
	   %<samplecnt> = 0;
     }
    %endif  
   %%Check is in active or inactive state
   if (%<samplecnt> == %<targetcnt>)  {       
     %%Active State%%
     %<LibBlockOutputSignal(OUTPORT_NUM,"","",0)> =  (%<OutputType>)(2 - %<activelevel>);
   } else { 
     %%Inactive state
     %<LibBlockOutputSignal(OUTPORT_NUM,"","",0)> = (%<OutputType>)(%<activelevel> - 1);
     (%<samplecnt>)++;               
   }
  }               
}
%endfunction
%%Outputs ==================================================

%% [EOF] sdspnsamp2.tlc
