%% $RCSfile: sdspm1norm.tlc,v $
%% $Revision: 1.8.4.2 $ 
%% $Date: 2004/04/12 23:08:55 $
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%%
%% Abstract: Matrix 1-Norm

%implements sdspm1norm "C"

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
  /* Signal Processing Blockset Matrix 1-Norm (%<ParamSettings.FunctionName>) - %<Name> */
  %%
  %assign INPORT  = 0
  %assign OUTPORT = 0
  %assign c0      = LibBlockOutputSignalIsComplex(OUTPORT)
  %assign M       = %<SFcnParamSettings.Rows>
  %assign N       = %<SFcnParamSettings.Cols>
  %assign contig  = IsInputPortContiguous(block, 0)
  %assign cplx    = LibBlockInputSignalIsComplex(INPORT) != 0
  %assign dtype   = cplx ? "creal_T" : "real_T"
  %%
  /* Compute maximum column (absolute value) sum */
  %%
  %if N==1
    %<LibBlockOutputSignal(OUTPORT, "", "", 0)> = \
    %<LibBlockInputSignal(INPORT, "", "", 0)>;
  %else
    %if contig
      %% Contiguous
      {
	%<dtype> *u = %<LibBlockInputSignalAddr(INPORT, "", "", 0)>;
	real_T  m1norm = 0.0;
	int_T   j;
	
	for(j=%<N>; j-- > 0; ) {
	  real_T sumabsAj = 0.0;
	  int_T  i;
	  for(i=%<M>; i-- > 0; ) {
	    %if !cplx
	      %% REAL
	      sumabsAj += fabs(*u++);
	    %else
	      %% COMPLEX
	      real_T cabsAij;
	      const creal_T uval = *u++;
	      CABS(uval, cabsAij);
	      sumabsAj += cabsAij;
	    %endif
	  }
	  m1norm = MAX(m1norm, sumabsAj);
	}
	%<LibBlockOutputSignal(OUTPORT, "", "", 0)> = m1norm;
      }
    %else
      %% Discontiguous
      {
	real_T m1norm   = 0.0;
	real_T sumabsAj = 0.0;
	int_T  cnt      = 1;     %% Start count at 1
	
	%assign rollVars = ["U"]
	%roll sigIdx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
	  %%
	  %if !cplx
	    %% REAL
	    sumabsAj += fabs(%<LibBlockInputSignal(INPORT, "", lcv, sigIdx)>);
	  %else
	    %% COMPLEX
	    {
	      real_T cabsAij;
	      CABS(%<LibBlockInputSignal(INPORT, "", lcv, sigIdx)>, cabsAij);
	      sumabsAj += cabsAij;
	    }
	  %endif
	  if ((cnt++ % %<M>) == 0) {
	    m1norm = MAX(m1norm, sumabsAj);
	    cnt = 1;
	    sumabsAj = 0.0;
	  }
	%endroll
	%<LibBlockOutputSignal(OUTPORT, "", "", 0)> = m1norm;
      }
    %endif
  %endif
  
%endfunction

%% [EOF] sdspm1norm.tlc
