%% sdspburg2.tlc
%% Abstract: TLC for Signal Processing Blockset Burg AR Estimation block. (sdspburg2)
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%% $Revision: 1.4.4.2 $ $Date: 2004/04/12 23:08:11 $

%implements sdspburg2 "C"

%% Function: BlockTypeSetup ====================================================
%function BlockTypeSetup(block, system) void

    %<Include_rt_header(block,"dspburg_rt")>

%endfunction %% BlockTypeSetup

%% Function: BlockInstanceSetup ================================================
%%
%function BlockInstanceSetup(block, system) void
    %assign INPORT   = 0
    %assign APORT    = 0
    %assign fcnAandK = 1
    %assign fcnA     = 2
    %assign fcnK     = 3

    %% Non-tunable parameters
    %assign ftype        = SFcnParamSettings.FType
    %assign InheritOrder = SFcnParamSettings.InheritOrder

    %%Get order based on inherit order option
    %assign N         = LibBlockInputSignalWidth(INPORT)
    %if InheritOrder
        %assign order = N - 1
    %else
        %assign order = SFcnParamSettings.Order
    %endif

    %%store data types
    %assign DTYPE_ID    = LibBlockInputSignalDataTypeId(INPORT)
    %assign INP_COMPLEX = LibBlockInputSignalIsComplex(INPORT)

    %assign block = block + INPORT + APORT + order + N
    %assign block = block + fcnAandK + fcnA + fcnK + ftype
    %assign block = block + DTYPE_ID + INP_COMPLEX
%endfunction %% BlockInstanceSetup

%% Function: Outputs ===========================================================
%%
%%Call run-time function based on data-type funcion type
%function Outputs(block, system) Output
    %assign FAKnam = ["A", "AK", "A", "K"]
    %assign dnam   = ["R", "C", "D", "Z"]                %% Data type
    %assign dtype  = (DTYPE_ID == tSS_SINGLE) ? 0 : 2    %% Double or single
    %assign din    = dnam[dtype+INP_COMPLEX]             %% Input Data type
    %assign FAK = FAKnam[ftype]                          %% Fcn type
    %assign portNumK = %<TLC_GetKPort(block)>
    %assign portNumG = %<TLC_GetGPort(block)>
    %assign C = INP_COMPLEX ? "c" : ""
    %assign R32 = (DTYPE_ID == tSS_SINGLE) ? "32" : ""
    /* Signal Processing Blockset Burg AR Estimator 
       (%<ParamSettings.FunctionName>) - '%<Name>' */

    %%call run time function based on data type and ftype
    MWDSP_Burg_%<FAK>_%<din>(\
                               %<N>,\
                               %<order>,\
                               %<LibBlockInputSignalAddr(INPORT, "", "", 0)>,\
                               %<LibBlockDWorkAddr(FERR, "", "", 0)>,\
                               %<LibBlockDWorkAddr(BERR, "", "", 0)>,\
    %if (ftype != fcnK)
                               %<LibBlockDWorkAddr(ANEW, "", "", 0)>,\
                               %<LibBlockOutputSignalAddr(APORT,  "", "", 0)>,\
    %endif
    %if (ftype != fcnA)
                               %<LibBlockOutputSignalAddr(portNumK,  "", "", 0)>,\
    %endif
                               %<LibBlockOutputSignalAddr(portNumG,  "", "", 0)>\
                            );
%endfunction  %% Outputs

%%Function: TLC_GetKPort =======================================================
%%This function returns the correct port number for output of reflection
%%coefficients
%function TLC_GetKPort(block)
    %if ftype == fcnAandK
        %return 1
    %elseif ftype == fcnK
        %return 0
    %endif

    %return -1
%endfunction %% TLC_GetKPort 

%%Function: TLC_GetGPort =======================================================
%%This function returns the correct port number for output of prediction gain
%function TLC_GetGPort(block)
    %if ftype == fcnAandK
        %return 2
    %else
        %return 1
    %endif
%endfunction %% TLC_GetGPort 

%% [EOF] sdspburg2.tlc

