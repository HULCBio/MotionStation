% DILATE    バイナリイメージに膨張処理を適用
%
% 注意：この関数は、削除される関数で、将来のバージョンでは、削除されます。
% IMDILATE を使ってください。
%
% BW2 = DILATE(BW1,SE) は、バイナリ構造を示す要素 SE を使って、バイナリ
% イメージ BW1 に膨張処理を行います。SE は、0と1を要素とする行列です。
% 
% BW2 = DILATE(BW1,SE,ALG) は、設定したアルゴリズムを使って、膨張処理を
% 行います。ALG は、つぎの中から設定する文字列です。
% 
% 'spatial'    - 空間領域でイメージを処理します。このアルゴリズムは、比
%                較的小さなイメージと、構造化要素が小さいものに対して、
%                有効に機能します。しかし、大きなイメージや、構造化要素
%                が大きいものに対しては速度が落ちる可能性があります。こ
%                れが、デフォルトのアルゴリズムです。
% 'frequency'  - 周波数領域でイメージを処理します。このアルゴリズムは、
%                大きいイメージに対して、'spatial'より高速になります。
%                しかし、非常に多くのメモリを使います。
% 
% spatial アルゴリズムと frequency アルゴリズムの出力する結果は同じです。
% しかし、処理速度とメモリ使用の間のトレードオフが異なります。より速く膨
% 張処理を行うには'frequency' アルゴリズムを設定してください。膨張処理中
% に "out of memory"メッセージが表示される場合、'spatial' アルゴリズムを
% 設定してください。
% 
% BW2 = DILATE(BW1,SE,...,N) は、膨張処理を N 回繰り返します。
% 
% クラスサポート
% -------------
% 入力イメージ BW1 は、double、または、uint8 のクラス共にサポートします。
% 出力イメージ BW2 は、クラス uint8 です。
% 
% 例題
%       BW1 = imread('text.tif');
%       SE = ones(6,2);
%       BW2 = dilate(BW1,SE);
%       imshow(BW1)
%       figure, imshow(BW2)
%
% 参考：BWMORPH, IMDILATE, IMERODE.



%   Copyright 1993-2002 The MathWorks, Inc.  
