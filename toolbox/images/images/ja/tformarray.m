% TFORMARRAY  多次元配列の幾何学的な変換
%
% B = TFORMARRAY(A,T,R,TDIMS_A,TDIMS_B,TSIZE_B,TMAP_B,F) は、配列 A に幾
% 何学的な変換を適用して、配列 B を出力します。
%
% TFORMARRAY は、IMTRANSFORM に似ていますが、高次元の配列や、入力/出力の
% 混在した次元、ユーザコントロールやカスタマイズがより必要となる問題に適
% しています。(IMTRANSFORM を使ってできることは、MAKETFORM, MAKERESAMPLER,
% FINDBOUNDS, TFORMARRAY を組み合わせてできます。しかし、2次元イメージに
% 関する多くの仕事では、IMTRANSFORM が、より簡単になります)
%
% 入力に関する簡単な記述
% ---------------------------
%   A         入力配列、または、イメージ
%   T         幾何学的な変換、通常は、MAKETFORM で作られます。
%   R         リサンプラ、通常は、MAKERESAMPLER で作られます。
%   TDIMS_A   入力変換次元をリストする行ベクトル
%   TDIMS_B   出力変換次元をリストする行ベクトル
%   TSIZE_B   変換次元の中の出力配列サイズ
%   TMAP_B    出力空間での点の位置を示す配列。幾何学的変換を指定する他の
%             方法を使うこともできます。
%   F         フル値の配列
%
% 入力の詳細記述
% ------------------------------
%   A         A は、任意の非スパース数値配列で、実数、複素数のどちらでも
%             構いません。また、logical でも構いません。
%
%   T         T は、特別な幾何学的な変換を定義する構造です。(TDIMS_B と 
%             TSIZE_B で定義するような)出力変換サブスクリプト空間の各位置
%             に対して、TFORMARRAY は、T と関数 TFORMINV を使い、(TDIMS_A
%             と SIZE(A) で定義するような)入力変換サブスクリプト空間の中
%             の対応する位置を計算します。
%
%             T が空の場合、TFORMARRAY は、直接リサンプリング関数として操
%             作し、TMAP_B の中で定義される各変換空間の位置で、または、
%             TAMP_B(TAMP_B が空でない場合) に定義されている個々の変換空
%             間位置で、値を計算するために、R に定義したリサンプラを適用
%             します。
%
%   R         R は、入力配列の値を指定した位置に内挿する方法を定義する構
%             造体です。R は、通常、MAKERESAMPLER で作成され、配列のエッ
%             ジの近くでの内挿を行う場合に使用する入力配列値をコントロー
%             ルすることと同様に、各次元に関する内挿法をコントロールする
%             ような細かなコントロールができます。
%
%   TDIMS_A   TDIMS_A と TDIMS_B は、幾何学的変換に含ませる入力配列と出
%   TDIMS_B   力配列の次元を示します。各次元は、ユニークで、正の整数です。
%             入力要素は、増加する順に配置されていますが、順番が問題です。
%             これは、配列 A と B の次元の間で、そして、変換子 T の入力
%             空間と出力空間の間で、厳密な意味での対応を指定している必要
%             があります。LENGTH(TDIMS_A) は、T.ndims_in と等価で、LENG-
%             TH(TDIMS_B) は、T.ndims_out と等価です。
%
%             たとえば、T が2次元変換 TDIMS_A = [2 1] と TDIMS_B = [1 2] 
%             と仮定します。そして、A の列次元と行次元は、それぞれ、最初
%             と2番目の入力空間次元に対応します。B の行次元と列次元は、
%             それぞれ、最初と2番目の出力空間次元に対応します。
%
%   TSIZE_B   TSIZE_B は、出力空間変換次元に関して、配列 B のサイズを指定
%             します。非変換次元に沿った B のサイズは、A のそれに対応した
%             サイズから直接、決定することに注意してください。たとえば、
%             T が2次元変換で、size(A) = [480 640 3 10]、TDIMS_B が、[2 
%             1]、TSIZE_B が [300 200] の場合、size(B) は、[200 300 3]に
%             なります。
%
%   TMAP_B    TMAP_B は、B の要素の位置と出力変換空間の中の位置の間の対応
%             を指定する別の方法を与えるオプションの配列です。たとえば、
%             TMAP_B は、出力空間の中の任意の位置の組で、イメージの重なり
%             具合を計算するために、使われます。TMAP_B が空でない場合、
%             TMAP_B のサイズは、つぎの型をしています。
%
%                 [D1 D2 D3 ... DN L]
%
%             ここで、N は、length(TDIMS_B) と等価です。ベクトル [D1 D2...
%             DN] は、TSIZE_B の代わりに使われます。TMAP_B が空でない場合
%             TSIZE_B は[]でなければなりません。
%
%             L の値は、T が空か否に依存します。T が空でない場合、L は、
%             T.ndims_out になり、TMAP_B の中の各 L-次元の点は、T を使っ
%             た入力空間配置に変換されます。T が空の場合、L は、LENGTH(
%             TDIMS_A) で、TMAP_B の中のL 次元の点は、入力空間での位置と
%             して、直接、使用されます。
%
%   F         F は、フル値を含む倍精度配列です。F の中のフル値は、つぎの
%             3つの状況で使われます。
%
%             (1) 分離可能なリサンプラがMAKERESAMPLER で作成され、その 
%                 PADMETHOD が'fill'、または、'bound' のいずれかに設定
%                 されている場合
% 
%             (2) カスタムサンプラが、'fill'、または、'bound' 付加手法
%                 をサポートして使われる場合
% 
%             (3) B の変換次元からA の変換次元へのマッピングが、いくつ
%                 かの点に対して、うまく定義できない場合。このような点
%                 は、TMAP_B、または、TFORMINV の出力に、NaNs を使って、
%                 入力変換空間の中に取り込まれているものです。
%
%             最初の2つは、フル値が、入力配列のエッジの外、または、近傍に
%             マップされる出力の位置に対する値を計算するために使われます。
%             フル値は、出力位置が、入力配列の外側にうまく射影されたとき
%             に、B の中にコピーされます。
% 
% フル値は、出力位置が、入力配列の外側に射影された場合に、B の中にコピー
% されます。'fill'や'bound'の詳細は、'help makeresampler' を参照してくだ
% さい。
%
%             F は、(NaN を含む)スカラです。この場合、その値は、非変換次
%             元すべてで置き換えられます。または、F は、非変換次元の中の
%             size(A) に依存した非スカラのサイズになります。特に、K が、
%             A のJ 番目の非変換次元の場合、SIZE(F,J) は、SIZE(A,K)、ま
%             たは、1 のいずれかになります。ユーサの利用し易いように、
%             TFORMARRAY は、いくつかの次元に渡って、F を単位サイズにコ
%             ピーします。コピーの後、SIZE(F,J) は、size(A,K) と等価にな
%             ります。
%
%             たとえば、A は、10 個のRGB イメージで、200 x 200 x 3 x 10 
%             のサイズをもっているとします。T は、2次元変換で、TDIMS_A 
%             と TDIMS_B は、共に [1 2] とします。言い換えれば、TFORM-
%             ARRAY は、10個の RGB イメージの個々についての各カラー平面
%             に同じ2次元変換を適用しようとしています。この場合、F にい
%             くつかのオプションを設定できます。
%
%             - F は、スカラです。この場合、同じフル値が、10個すべてのイ
%               メージの個々のカラー平面に使われます。
%
%             - F が、3 行 1 列のベクトル [R G B]' です。ここで、R, G, B 
%               は、10個のイメージの個々の対応するカラー平面用のフル値と
%               して使われます。これは、10個すべてのイメージに対して、同
%               じカラーをもつ、RGB "フルカラー"を指定していると解釈する
%               ことができます。
%
%             - F は、1 行 10 列のベクトルです。これは、10個のイメージに
%               対して、個々に異なるフル値を設定したものと解釈できます。
%               ここでは、3つのカラー平面で同じフル値を使います。
%
%             - F は、3 行 10 列の行列です。これは、10個のイメージに対し
%               て、個々に異なるフル値を設定したものと解釈できます。ここ
%               では、3つのカラー平面でも異なるフル値を使うことができます。
% 
% 例題
% -------
% 各正方形が一辺20ピクセルをもつ 2 行 2 列のチェックボードを作成します。
% そして、射影変換を使って、これを変換します。リサンプラを作成するとき、
% 'circular' の付加方法を使い、そのため、出力は、無限遠のチェックボード
% の遠近法を使ったものに見えます。出力次元をスワップします。100 行 100 
% 列の出力イメージを設定します。TMAP_B を指定しているので、TAMP_B を空に
% します。必要ないので、フル値も空にします。
%
%       I = checkerboard(20,1,1);
%       figure; imshow(I)
%       T = maketform('projective',[1 1; 41 1; 41 41;   1 41],...
%                                  [5 5; 40 5; 35 30; -10 30]);
%       R = makeresampler('cubic','circular');
%       J = tformarray(I,T,R,[1 2],[2 1],[100 100],[],[]);
%       figure; imshow(J)
%
% 参考： IMTRANSFORM, MAKERESAMPLER, MAKETFORM, FINDBOUNDS.



%   Copyright 1993-2002 The MathWorks, Inc.
