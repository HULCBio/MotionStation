% IM2COL   イメージブロックを列に再配列
%
% B = IM2COL(A,[M N],'distinct') は、イメージ A の M 行 N 列の大きさ
% のブロックに分割された各々のブロックを B の各列に再配列します。
% IM2COL は、M 行 N 列 の整数倍になるように、必要に応じて A にゼロを
% 付加します。A = [A11 A12;A21 A22]で、Aij が M 行 N 列の場合、
% B = [A11(:) A12(:);A21(:) A22(:)]になります。
%
% B = IM2COL(A,[M N],'sliding') は、A の個々に M 行 N 列の大きさのス
% ラィディングブロックにゼロを付加しないで B の各列に変換します。B 
% は M*N の行をもち、A の M 行 N 列の近傍と同じ列数をもっています。A
% の大きさが[MM NN]の場合、B のサイズは、(M*N)行(MM-M+1)*(NN-N+1)列
% です。B の各列は、NHOOD(:) として整形された A の近傍を含みます。こ
% こで、NHOOD は、A の M 行 N 列の近傍を含む行列です。IM2COL は、B 
% の各列を順序付け、通常の方法で行列を作成するように変形することがで
% きます。たとえば、SUM(B) のような各列にスカラを出力する関数を使う
% とします。つぎのステートメント群を使って、結果を、直接、(MM-M+1) 
% 行 (NN-N+1) 列の行列に格納します。
%
%      B = im2col(A,[M N],'sliding');
%      C = reshape(sum(B),MM-M+1,NN-N+1);
%
% B = IM2COL(A,[M N]) は、ブロックタイプのデフォルト 'sliding' を使
% 用します。
%
% B = IM2COL(A,'indexed',...) は、A をインデックス付きイメージとして
% 処理し、A のクラスが uint8 または uint16 の場合はゼロを、A のクラス
% が double のクラスの場合は、1を付加します。
%
% クラスサポート
% -------------
% 入力イメージ A は、数値または logical です。出力行列 B は、入力
% イメージと同じクラスです。
%
% 参考 : BLKPROC, COL2IM, COLFILT, NLFILTER


%   Copyright 1993-2002 The MathWorks, Inc.  
