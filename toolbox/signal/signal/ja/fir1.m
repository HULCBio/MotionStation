function [b,a] = fir1(N,Wn,varargin)
%FIR1   ウィンドウベースの有限インパルス応答フィルタの設計−標準応答
%   B = FIR1(N,Wn)は、N次のローパスディジタルFIRフィルタを設計し、
%   フィルタ係数を長さ(N+1)の行ベクトル B に出力します。カットオフ周波数
%   Wnは、0と1の間の数でなければなりません。
%   ここで、1はサンプリング周波数の1/2(Nyquist周波数)です。
%   係数Bは実数で、線形位相FIRフィルタです。フィルタの、Wnでの正規化され
%   たゲインは、-6 dBです。
%
%   B = FIR1(N,Wn,'high')は、N次のハイパスフィルタを設計します。
%   B = FIR1(N,Wn,'low') は、ローパスパスフィルタを設計します。
%
%   Wnが2要素ベクトルWn  = [W1 W2]の場合、FIR1は、通過帯域  W1 < W < W2を
%   もつN次のバンドパスフィルタを出力します。B = FIR1(N,Wn,'bandpass')を
%   指定することもできます。 Wn = [W1 W2]の場合、B = FIR1(N,Wn,'stop')は、
%   バンドストップフィルタを設計します。
%
%   Wnが多要素ベクトルWn  = [W1 W2 W3 W4 W5 ...Wn]の場合、FIR1は帯域 
%   0 < W < W1, W1 < W < W2, ..., WN < W < 1をもつN次の複数帯域フィルタを
%   出力します。
%
%   B = FIR1(N,Wn,'DC-1')は、複数帯域フィルタの最初の帯域を通過帯域としま
%   す。
%   B = FIR1(N,Wn,'DC-0')は、複数帯域フィルタの最初の帯域を遮断帯域としま
%   す。
%
%   B = FIR1(N,Wn,WIN) は、インパルス応答に対するウィンドウのために、
%   長さN+1のベクトルWINを使用してN次のFIRフィルタを設計します。
%   空あるいは省略の場合、FIR1 は、長さN+1のHamming ウィンドウを使用
%   します。
%   利用可能なウィンドウの完全なリストについては、関数WINDOWの
%   ヘルプを参照してください。
%   KAISER および CHEBWIN は、オプションの後に続く引数とともに指定され
%   ます。たとえば、B = FIR1(N,Wn,kaiser(N+1,4))  Kaiserウィンドウ
%   (beta = 4)を使用します。B = FIR1(N,Wn,'high',chebwin(N+1,R))は、relative
%   sidelobe attenuationをR dbとして、Chebyshevウィンドウを使用します。
%
%   Fs/2で、ゲインが0とならないフィルタすなわち、ハイパスとバンドストップ
%   フィルタに対して、フィルタ次数Nは必ず偶数でなければなりません。
%   そうでない場合、N は、1ずつ増加します。この場合、ウィンドウの長さは、
%   N+2と指定される必要があります。
%   
%   デフォルトで、FIR1は、ウィンドウ適用後の振幅が最初の通過帯域の中心で1
%   になるようにスケールされます。また、オプションの引数として 'noscale' 
%   を指定すると、このスケーリングを行いません。
%   たとえば、B = FIR1(N,Wn,'noscale'), B = FIR1(N,Wn,'high','noscale'), 
%   B = FIR1(N,Wn,wind,'noscale')です。
%   明示的にスケーリングを設定するには、つぎのようにします。
%
%   参考：   KAISERORD, FIRCLS1, FIR2, FIRLS, FIRCLS, CFIRPM,
%            FIRPM, FREQZ, FILTER, WINDOW.




%   Copyright 1988-2002 The MathWorks, Inc.
