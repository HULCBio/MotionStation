%%****************************************************************************
%%****************************************************************************
%%
%%              TLC Functions common for all Input and Output blocks
%%
%%              $Revision: 1.11 $
%%              $Date: 2002/04/14 18:53:41 $
%%              $Author: batserve $
%%
%%              Copyright 1994-2002 The MathWorks, Inc.
%%
%%****************************************************************************
%%****************************************************************************



%% Function: RTWinRegisterBoard ====================================================
%% Abstract:
%%      Add board into RTWinBoards if needed; 
%%      get board index in the RTWinBoards table.
%%

%function RTWinRegisterBoard(block) void

%% search for the board in the RTWinBoards table

%assign BoardIdx = -1
%foreach idx = RTWinBoards.BoardCount
  %with RTWinBoards.Board[%<idx>]
    %if Name == "%<DrvName>" && Address == %<DrvAddress>
      %assign BoardIdx = %<idx>
      %break
    %endif
  %endwith
%endforeach

%% if not found, add it to the table and emit the options array into code

%if BoardIdx == -1
  %assign optlen = SIZE(DrvOptions, 1)

  %assign tempVar = Board { Name  DrvName;  Address  DrvAddress; OptionsSize  %<optlen>}
  %assign RTWinBoards = RTWinBoards + Board
  %undef tempVar
  %assign BoardIdx = RTWinBoards.BoardCount
  %assign RTWinBoards.BoardCount = RTWinBoards.BoardCount + 1

  %if optlen >0
  %openfile optbuf

static double RTWinBoardOptions%<BoardIdx>[] = {
    %foreach idx = optlen
      %<DrvOptions[idx]>,
    %endforeach
};
    %closefile optbuf
    %<LibSourceFileCustomCode(optbuf, "header")>
  %endif

%endif

%% store the BoardIdx into block scope

%<LibAddIdentifier(block, "RTWinBoardIdx", BoardIdx)>

%endfunction %% RTWinRegisterBoard



%% Function: RTWinEmitBoards ====================================================
%% Abstract:
%%      Format and emit the RTWinBoards table into C code.
%%
%function RTWinEmitBoards() void

%if !RTWinBoards.BoardsCached
%openfile srcbuf

/* list of Real-Time Windows Target boards */

int RTWinBoardCount = %<RTWinBoards.BoardCount>;
RTWINBOARD RTWinBoards[%<RTWinBoards.BoardCount>] = {
%foreach idx = RTWinBoards.BoardCount
  %with RTWinBoards.Board[%<idx>]
    %if OptionsSize == 0
      { "%<Name>", %<Address>, 0, NULL },
    %else
      { "%<Name>", %<Address>, %<OptionsSize>, RTWinBoardOptions%<idx> },
    %endif
  %endwith
%endforeach
};

%closefile srcbuf
%<LibSourceFileCustomCode(srcbuf, "header")>
%assign RTWinBoards.BoardsCached = 1
%endif

%endfunction %% RTWinEmitBoards



%% Function: RTWinExpandScalar ====================================================
%% Abstract:
%%      Expand a scalar input or parameter to the block width
%%
%function RTWinExpandScalar(block, invalptr, inwidth, outwidth) Output
%%
%if (inwidth==1) && (outwidth>1)
  double val[%<outwidth>];
  double *valp = val;

  %roll idx = [1:%<outwidth>], lcv = RollThreshold, block, "Roller", ""
    *valp++ = *%<invalptr>;
  %endroll
  %assign valptr = "val"
%else
  %assign valptr = invalptr
%endif
%%
%return valptr

%endfunction %% RTWinExpandScalar



%% [EOF] rtwinlib.tlc
