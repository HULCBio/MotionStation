%% SYSTLC: Real-Time Windows Target \
%% TMF: rtwin.tmf MAKE: make_rtw EXTMODE: rtwinext

%%****************************************************************************
%%****************************************************************************
%%
%%              System TLC file for Real-Time Windows Target
%%
%%              $Revision: 1.26.2.3 $
%%              $Date: 2003/06/14 03:37:02 $
%%              $Author: batserve $
%%
%%              Copyright 1994-2003 The MathWorks, Inc.
%%
%%****************************************************************************
%%****************************************************************************


%% RTW settings for Real-Time Windows Target


%assign CodeFormat = "RealTime"
%assign TargetType = "RT"
%assign Language   = "C"

%% File system is not supported
%assign MatFileLogging = 0

%% Limit stack to 2kB and any individual variable to 1kB
%assign MaxStackSize = CAST("Number", 2048)
%assign MaxStackVariableSize = CAST("Number", MaxStackSize/2)


%% Real-Time Windows Target initialization

%assign tempVar = RTWinBoards { BoardsCached  0; BoardCount  0 }
%undef tempVar


%% Common initialization

%include "genmap.tlc"
%include "commonsetup.tlc"


%% Include main Real-Time Windows Target header

%<LibAddToCommonIncludes("rtwintgt.h")>


%% Generate the files

%include "commonentry.tlc"


%% The contents between 'BEGIN_RTW_OPTIONS' and 'END_RTW_OPTIONS' are strictly
%% written by the standard format. We need to use this structure in RTW
%% options GUI function rtwoptionsdlg.m file.
%%
/%
  BEGIN_RTW_OPTIONS

  rtwoptions(1).prompt        = 'Real-Time Windows Target build options';
  rtwoptions(1).type          = 'Category';
  rtwoptions(1).default       = 3;
  rtwoptions(1).enable        = 'on';
  rtwoptions(1).popupstrings  = '';
  rtwoptions(1).tlcvariable   = '';
  rtwoptions(1).tooltip       = '';
  rtwoptions(1).callback      = '';
  rtwoptions(1).opencallback  = '';
  rtwoptions(1).closecallback = '';
  rtwoptions(1).makevariable  = '';
  
  rtwoptions(2).prompt         = 'Compiler optimizations';
  rtwoptions(2).type           = 'Checkbox';
  rtwoptions(2).default        = 'on';
  rtwoptions(2).tlcvariable    = 'CCOptimize';
  rtwoptions(2).makevariable   = 'CC_OPTIMIZE';
  rtwoptions(2).tooltip        = ...
    ['Instructs the C compiler to generate real-time',sprintf('\n'), ...
    'code fully optimized for speed'];
  
  rtwoptions(3).prompt         = 'Generate assembly listings';
  rtwoptions(3).type           = 'Checkbox';
  rtwoptions(3).default        = 'off';
  rtwoptions(3).tlcvariable    = 'CCListing';
  rtwoptions(3).makevariable   = 'CC_LISTING';
  rtwoptions(3).tooltip        = ...
    ['Instructs the C compiler to generate assembly',sprintf('\n'), ...
    'listing for the generated code'];
  
  rtwoptions(4).prompt         = 'Rebuild all';
  rtwoptions(4).type           = 'Checkbox';
  rtwoptions(4).default        = 'off';
  rtwoptions(4).tlcvariable    = 'RebuildAll';
  rtwoptions(4).makevariable   = 'REBUILD_ALL';
  rtwoptions(4).tooltip        = ...
    ['Forces all the object files to be always rebuilt',sprintf('\n'), ...
    'regardless of their time stamps'];


  rtwoptions(5).prompt         = 'External Mode code generation options';
  rtwoptions(5).type           = 'Category';
  rtwoptions(5).enable         = 'on';  
  rtwoptions(5).default        = 5;   % number of items under this category
                                      % excluding this one.
  rtwoptions(5).popupstrings  = '';
  rtwoptions(5).tlcvariable   = '';
  rtwoptions(5).tooltip       = '';
  rtwoptions(5).callback      = '';
  rtwoptions(5).opencallback  = '';
  rtwoptions(5).closecallback = '';
  rtwoptions(5).makevariable  = '';

  rtwoptions(6).prompt         = 'External mode';
  rtwoptions(6).type           = 'Checkbox';
  rtwoptions(6).default        = 'off';
  rtwoptions(6).tlcvariable    = 'ExtMode';
  rtwoptions(6).makevariable   = 'EXT_MODE';
  rtwoptions(6).tooltip        = ...
    ['Adds communication support',sprintf('\n'), ...
    'for use with Simulink external mode'];
  
  % Enable/disable other external mode controls.
  rtwoptions(6).callback       = [ ...
    'DialogFig = get(gcbo,''Parent'');',...
    'sl(''extmodecallback'', ''extmode_checkbox_callback'', DialogFig);', ...
    ];

  rtwoptions(7).prompt         = 'Transport';
  rtwoptions(7).type           = 'Popup';
  rtwoptions(7).default        = 'sharedmem';
  rtwoptions(7).popupstrings   = ['sharedmem'];
  rtwoptions(7).tlcvariable    = 'ExtModeTransport';
  rtwoptions(7).makevariable   = 'EXTMODE_TRANSPORT';
  rtwoptions(7).tooltip        = ...
    ['Chooses transport mechanism for external mode'];

  % Synchronize with "External mode" checkbox option
  rtwoptions(7).opencallback   = [ ...
    'ExtModeTable = {''sharedmem'' ''rtwinext''};', ...
    'ud = DialogUserData;', ...
    'ud = extmodecallback(''transport_popup_opencallback'',model,DialogFig,ud,ExtModeTable);', ...
    'DialogUserData = ud;', ...
    ];
				
  % Set extmode mex-file according to extmode transport mechanism.
  rtwoptions(7).closecallback  = [ ...
    'ExtModeTable = {''sharedmem'' ''rtwinext''};', ...
    'ud = DialogUserData;', ...
    'ud = extmodecallback(''transport_popup_closecallback'',model,DialogFig,ud,ExtModeTable);', ...
    'DialogUserData = ud;', ...
    ];

  rtwoptions(8).prompt         = 'Static memory allocation';
  rtwoptions(8).type           = 'Checkbox';
  rtwoptions(8).default        = 'off';
  rtwoptions(8).tlcvariable    = 'ExtModeStaticAlloc';
  rtwoptions(8).makevariable   = 'EXTMODE_STATIC_ALLOC';
  rtwoptions(8).tooltip        = ...
    ['Forces external mode to use static',sprintf('\n'), ...
    'instead of dynamic memory allocation'];
  
  % Enable/disable external mode static allocation size selection.
  rtwoptions(8).callback       = [ ...
    'DialogFig = get(gcbo,''Parent'');',...
    'sl(''extmodecallback'', ''staticmem_checkbox_callback'', DialogFig);', ...
    ];

  % Synchronize with "External mode" checkbox option
  rtwoptions(8).opencallback   = [ ...
    'extmodecallback(''staticmem_checkbox_opencallback'',DialogFig);', ...
    ];
  
  rtwoptions(9).prompt         = 'Static memory buffer size';
  rtwoptions(9).type           = 'Edit';
  rtwoptions(9).default        = '1000000';
  rtwoptions(9).tlcvariable    = 'ExtModeStaticAllocSize';
  rtwoptions(9).makevariable   = 'EXTMODE_STATIC_ALLOC_SIZE';
  rtwoptions(9).tooltip        = ...
    ['Size of external mode static allocation buffer'];

  % Synchronize with "External mode static allocation" option
  rtwoptions(9).opencallback   = [ ...
    'extmodecallback(''staticmemsize_edit_opencallback'',DialogFig);', ...
    ];
				
  rtwoptions(10).prompt       = 'External mode testing';
  rtwoptions(10).type         = 'NonUI';
  rtwoptions(10).default      = '0';
  rtwoptions(10).tlcvariable  = 'ExtModeTesting';
  rtwoptions(10).makevariable = 'TMW_EXTMODE_TESTING';
  rtwoptions(10).tooltip      = ...
    ['Internal testing flag for Simulink external mode'];

  %----------------------------------------%
  % Configure RTW code generation settings %
  %----------------------------------------%

  rtwgensettings.BuildDirSuffix = '_rtwin';

  END_RTW_OPTIONS
 %/
/%
  BEGIN_CONFIGSET_TARGET_COMPONENT
 
  targetComponentClass = 'RTW.RTWinTargetCC';
  
  END_CONFIGSET_TARGET_COMPONENT
 %/