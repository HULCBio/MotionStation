%% $RCSfile: stic6x_dotprod.tlc,v $
%% $Revision: 1.1.6.1 $
%% $Date: 2004/01/22 18:32:32 $
%%
%% Copyright 2001-2003 The MathWorks, Inc.
%%
%% Abstract: TI C62/C64 DSPLIB "dotprod"
%%           (optimized fixed-point Vector Dot Product function)

%implements stic6x_dotprod "C"

%include "tiblksutil.tlc"

%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

  %<Include_ti_header(block, "dsp_dotprod")>

%endfunction %% BlockTypeSetup

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
  %%
  %assign INPORT_X = 0
  %assign INPORT_Y = 1
  %assign OUTPORT  = 0
  %assign inpWidth = LibBlockInputSignalWidth(INPORT_X)
  %assign outWidth = LibBlockOutputSignalWidth(OUTPORT)
  %%
  /* C%<chipID.Value[0]>x DSP Library dotprod (%<ParamSettings.FunctionName>) - '%<Name>' */
  %if (outWidth == 1)
    *(%<LibBlockOutputSignalAddr(OUTPORT,"","",0)>) = DSP_dotprod( (short *)%<LibBlockInputSignalAddr(INPORT_X,"","",0)>, (short *)%<LibBlockInputSignalAddr(INPORT_Y,"","",0)>, %<inpWidth> );
  %else
    %assign nSampsPerChan = inpWidth / outWidth
    {
      const short *x = %<LibBlockInputSignalAddr(INPORT_X,"","",0)>;
      const short *y = %<LibBlockInputSignalAddr(INPORT_Y,"","",0)>;
      int         *r = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
      int nChans = %<outWidth>;
      while(nChans--) {
%% TI does not const these input pointers in their header
        *r++  = DSP_dotprod((short *)x, (short *)y, %<nSampsPerChan>);
         x   += %<nSampsPerChan>;
         y   += %<nSampsPerChan>;
      }
    }
  %endif

%endfunction

%% [EOF] stic6x_dotprod.tlc
