%% $RCSfile: asap2userlib.tlc,v $
%% $Revision: 1.6 $ 
%% $Date: 2002/04/14 18:42:28 $
%%
%% Abstract:
%%   User ASAP2 library.
%%
%% Copyright 1994-2002 The MathWorks, Inc.
%%
%selectfile NULL_FILE

%% Function: ASAP2UserFcnWriteHead
%% Abstract: Text to include at beginning of ASAP2 file.
%%
%function ASAP2UserFcnWriteFileHead() Output
  /******************************************************************************
   *
   *  ASAP2 file:     %<ASAP2FileName>
   *
   %<SLibCommonHeaderInfo()>\
   *
   * (add additional file header information here)
   *
   ******************************************************************************/
%endfunction


%% Function: ASAP2UserFcnWriteHeader
%% Abstract: Define format for HEADER section of ASAP2 file.
%%
%function ASAP2UserFcnWriteHeader() Output
  /begin HEADER "Header Comments go here"
   
  /end HEADER
%endfunction


%% Function: ASAP2UserFcnWriteHardwareInterface
%% Abstract: Used to define hardware interface for ASAP2 file.
%%
%% NOTE: It may be easiest to inline separate files for each section:
%% For example:
%%   %include "./user_a2ml.txt"
%% 
%function ASAP2UserFcnWriteHardwareInterface() Output

     /begin MOD_PAR "%<ASAP2ModParComment>"

     /end MOD_PAR
    
     /begin MOD_COMMON  "%<ASAP2MOD_COMMON_Comment>" 
        BYTE_ORDER     %<ASAP2BYTE_ORDER>
     /end MOD_COMMON
%endfunction

%% Function: ASAP2UserFcnWriteFileTail
%% Abstract: Text to include at end of ASAP2 file.
%%
%function ASAP2UserFcnWriteFileTail() Output
  /* (add any file trailer comments here) */
  /* EOF %<ASAP2FileName> */
%endfunction


%% Function: ASAP2UserFcnDataTypeAlias
%% Abstract: Maps Simulink DataTypeId to desired data type name.
%%
%function ASAP2UserFcnDataTypeAlias(dtId) void
  %switch dtId
    %case tSS_BOOLEAN
      %return "UBYTE"
    %case tSS_UINT8
      %return "UBYTE"
    %case tSS_INT8
      %return "SBYTE"
    %case tSS_UINT16
      %return "UWORD"
    %case tSS_INT16
      %return "SWORD"
    %case tSS_UINT32
      %return "ULONG"
    %case tSS_INT32
      %return "SLONG"
    %case tSS_SINGLE
      %return "FLOAT32_IEEE"
    %case tSS_DOUBLE
      %return "FLOAT64_IEEE"
    %default
     %%START_ASSERT
       %assign errTxt = "Unhandled dataType. DataTypeID = %<dtId>"
       %<LibReportError(errTxt)>
     %%END_ASSERT
  %endswitch
%endfunction


%% Function: ASAP2UserFcnWriteMeasurement
%% Abstract: Defines format for writing out MEASUREMENTs.
%%
%function ASAP2UserFcnWriteMeasurement(signal) Output
  %assign dtId = LibASAP2GetDataTypeId(signal)
  /begin MEASUREMENT
    /* Name */                    %<LibASAP2GetSymbol(signal)>
    /* Long identifier */         "%<LibASAP2GetLongID(signal)>"
    /* Data type */               %<ASAP2UserFcnDataTypeAlias(dtId)>
    /* Conversion method */       %<LibASAP2GetCompuMethod(signal)>
    /* Resolution (Not used) */   0
    /* Accuracy (Not used) */     0
    /* Lower limit */             %<LibASAP2GetPhysicalMin(signal)>
    /* Upper limit */             %<LibASAP2GetPhysicalMax(signal)>
    ECU_ADDRESS                   %<LibASAP2GetAddress(signal)>
  /end MEASUREMENT
%selectfile ASAP2List
%<LibASAP2GetSymbol(signal)>
%selectfile ModelASAP2File
%endfunction


%% Function: ASAP2UserFcnWriteCompuMethods
%% Abstract: Defines format for writing out COMPU_METHODs.
%%
%function ASAP2UserFcnWriteCompuMethods(idx) Output
  /begin COMPU_METHOD
    /* Name of CompuMethod */     %<LibASAP2GetCompuMethodName(idx)>
    /* Long identifier */         "%<LibASAP2GetCompuMethodLongID(idx)>"
    /* Conversion Type */         %<LibASAP2GetCompuMethodConvType(idx)>
    /* Format */                  "%<LibASAP2GetCompuMethodFormat(idx)>"
    /* Units */                   "%<LibASAP2GetCompuMethodUnits(idx)>"
    /* Coefficients */            COEFFS %<LibASAP2GetCompuMethodCoeffs(idx)>
  /end COMPU_METHOD
%endfunction


%% [EOF] asap2userlib.tlc





