%% $RCSfile: asap2lookup1d.tlc,v $
%% $Revision: 1.4 $ 
%% $Date: 2002/04/14 18:42:22 $
%%
%% Abstract:
%%   Template definitions for Lookup1D.
%%
%% Copyright 1994-2002 The MathWorks, Inc.
%%
%selectfile NULL_FILE

%<LibASAP2RegisterTemplate("Lookup1D")>

%function ASAP2UserFcnRecordLayoutAlias_Lookup1D(dtId) void
  %switch dtId
    %case tSS_UINT8
      %return "Lookup1D_UBYTE"
    %case tSS_INT8
      %return "Lookup1D_BYTE"
    %case tSS_UINT16
      %return "Lookup1D_UWORD"
    %case tSS_INT16
      %return "Lookup1D_WORD"
    %case tSS_UINT32
      %return "Lookup1D_ULONG"
    %case tSS_INT32
      %return "Lookup1D_SLONG"
    %case tSS_SINGLE
      %return "Lookup1D_FLOAT32_IEEE"
    %case tSS_DOUBLE
      %return "Lookup1D_FLOAT64_IEEE"
    %default
     %%START_ASSERT
       %assign errTxt = "Unhandled dataType. DataTypeID = %<dtId>"
       %<LibReportError(errTxt)>
     %%END_ASSERT
  %endswitch
%endfunction

%function ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(dtId) void
  %switch dtId
    %case tSS_UINT8
      %return "Lookup1D_X_UBYTE"
    %case tSS_INT8
      %return "Lookup1D_X_BYTE"
    %case tSS_UINT16
      %return "Lookup1D_X_UWORD"
    %case tSS_INT16
      %return "Lookup1D_X_WORD"
    %case tSS_UINT32
      %return "Lookup1D_X_ULONG"
    %case tSS_INT32
      %return "Lookup1D_X_LONG"
    %case tSS_SINGLE
      %return "Lookup1D_X_FLOAT32_IEEE"
    %case tSS_DOUBLE
      %return "Lookup1D_X_FLOAT64_IEEE"
    %default
     %%START_ASSERT
       %assign errTxt = "Unhandled dataType. DataTypeID = %<dtId>"
       %<LibReportError(errTxt)>
     %%END_ASSERT
  %endswitch
%endfunction

%function ASAP2UserFcnWriteRecordLayout_Lookup1D() Output
 
    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_INT8)>
      FNC_VALUES  1 SBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT
    
    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_INT8)>
      AXIS_PTS_X  1 SBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_UINT8)>
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT
    
    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_UINT8)>
      AXIS_PTS_X  1 UBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_UINT16)>
      FNC_VALUES  1 UWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_UINT16)>
      AXIS_PTS_X  1 UWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_INT16)>
      FNC_VALUES  1 SWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_INT16)>
      AXIS_PTS_X  1 SWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_UINT32)>
      FNC_VALUES  1 ULONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_UINT32)>
      AXIS_PTS_X  1 ULONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_INT32)>
      FNC_VALUES  1 SLONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_INT32)>
      AXIS_PTS_X  1 SLONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_SINGLE)>
      FNC_VALUES  1 FLOAT32_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_SINGLE)>
      AXIS_PTS_X  1 FLOAT32_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(tSS_DOUBLE)>
      FNC_VALUES  1 FLOAT64_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(tSS_DOUBLE)>
      AXIS_PTS_X  1 FLOAT64_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

%endfunction


%function ASAP2UserFcnWriteCharacteristic_Lookup1D(paramGroup) Output
  %assign xParam = paramGroup.Member[0].Reference
  %assign yParam = paramGroup.Member[1].Reference
  %assign dtId = LibASAP2GetDataTypeId(xParam)
  
%selectfile ASAP2List
%<LibASAP2GetSymbol(yParam)>
%<LibASAP2GetSymbol(xParam)>
%selectfile ModelASAP2File

    /begin CHARACTERISTIC      
       /* Name                  */        %<LibASAP2GetSymbol(yParam)>
       /* Long Identifier       */        "%<LibASAP2GetLongID(yParam)>"
       %assign dtId = LibASAP2GetDataTypeId(yParam)
       /* Chracteristic Type    */        CURVE
       /* Memory Address        */        %<LibASAP2GetAddress(yParam)>
       /* Record Layout         */        %<ASAP2UserFcnRecordLayoutAlias_Lookup1D(dtId)>
       /* Maxdiff               */        0
       /* Conversion Method     */        %<LibASAP2GetCompuMethod(yParam)>
       /* Lower Limit           */        %<LibASAP2GetPhysicalMin(yParam)>
       /* Upper Limit           */        %<LibASAP2GetPhysicalMax(yParam)>
     /begin AXIS_DESCR                   /* Desription of X-Axis Points */
        /* Axis Type            */        COM_AXIS
        /* Reference to Input   */        NO_INPUT_QUANTITY
        /* Conversion Method    */        %<LibASAP2GetCompuMethod(xParam)>
        /* Number of Axis Pts   */        %<LibASAP2GetNumAxisPts(xParam)>
        /* Lower Limit          */        %<LibASAP2GetPhysicalMin(xParam)>
        /* Upper Limit          */        %<LibASAP2GetPhysicalMax(xParam)>
        AXIS_PTS_REF                      %<LibASAP2GetSymbol(xParam)>
     /end AXIS_DESCR
    /end CHARACTERISTIC
     
    %assign dtId = LibASAP2GetDataTypeId(xParam) 
    /begin AXIS_PTS
      /* Name                 */          %<LibASAP2GetSymbol(xParam)>
      /* Long Identifier      */          "%<LibASAP2GetLongID(xParam)>"
      /* Memory Adress        */          %<LibASAP2GetAddress(xParam)>
      /* Input Qualtity       */          NO_INPUT_QUANTITY
      /* Record Layout        */          %<ASAP2UserFcnRecordLayoutAlias_X_AXIS_Lookup1D(dtId)>
      /* Maximum Difference   */          0
      /* Conversion Method    */          %<LibASAP2GetCompuMethod(xParam)>
      /* Number of Axis Pts   */          %<LibASAP2GetNumAxisPts(xParam)>
      /* Lower Limit          */          %<LibASAP2GetPhysicalMin(xParam)>
      /* Upper Limit          */          %<LibASAP2GetPhysicalMax(xParam)>
    /end AXIS_PTS

%endfunction
