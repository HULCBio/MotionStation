%% File: profiling_control.tlc
%%
%% Abstract:
%%   Execution profiling control; initiates logging of execution profiling data
%%   and allows streaming of data to an output device.
%%
%% $Revision: 1.1.6.2 $
%% $Date: 2004/04/19 01:22:35 $
%%
%% Copyright 2003-2004 The MathWorks, Inc.

%implements profiling_control "C"

%addincludepath "../../configuration/environment"
%include "targetlib.tlc"

%% Function: BlockTypeSetup
%% Abstract:
%%
%function BlockTypeSetup(block,system) void

  %if !SLibCodeGenForSim() 

     %% Only generate code for real time not for PIL
		
     %openfile buffer
     #include "profile.h"
     %closefile buffer
     %<LibCacheIncludes(buffer)> 
     
   %endif
   
%endfunction %% BlockTypeSetup

%% Function: Outputs ========================================================
%% Abstract:
%%
%function Outputs(block,system) Output

    %if !SLibCodeGenForSim() 
      
      %assign mode = SFcnParamSettings.Mode
      
      %% Only generate code for real time not for PIL

      /* %<Type> Block: '%<Name>' 
      %switch mode
	  %case 1 %% control input
	    * Handle request to perform an execution profiling action */
	    if ( (profile_get_state() == PROFILING_INACTIVE) ) {
	      profile_begin();
	    }
	    %break
	  %case 2 %% data output
	    * Output logged execution profiling data */
	    %assign data_active = LibBlockOutputSignal(0,"","",0)
	    %assign data_addr = LibBlockOutputSignalAddr(1,"","",0)
	    { 
	    unsigned int data_available = 0;
	    if ( profile_get_state() == PROFILING_SEND_IN_PROGRESS ) {
	      data_available = profile_get_data(%<data_addr>);
	    }
	    if (data_available == 1) {
	      %<data_active> = TRUE;
	    } else {
	      %<data_active> = FALSE;
	    }
	    }
	    %break
	  %default
	    %exit "Unrecognized value mode = %<mode>"
	    %break
	%endswitch
    %endif
    
%endfunction %%Outputs




