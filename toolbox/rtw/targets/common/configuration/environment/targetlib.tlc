%% File: targetlib.tlc
%%
%% Abstract:
%%   Library functions for code generation with an Embedded Target
%%
%% $Revision: 1.9.4.3 $
%% $Date: 2004/04/19 01:20:29 $
%%
%% Copyright 2001-2004 The MathWorks, Inc.

%% Function: SLibCodeGenForSim ================================================
%% Abstract:
%%   Code generation for simulation for:
%%   - Accelerator
%%   - CodeFormat=="S-Function"
%%   - CodeGenForPIL
%%
%function SLibCodeGenForSim() void
  %if (Accelerator)
    %return 1
  %elseif (CodeFormat=="S-Function")
    %return 1
  %elseif ((EXISTS("CodeGenForPIL")) && (CodeGenForPIL==1))
    %return 1
  %else
    %return 0
  %endif

   %% use the Environment Controller RTW mode selector m-file
   %% mode == true --> Simulation target (no driver code gen)
   %% mode == false --> RTW target (driver code gen)
   %%%assign mode = FEVAL("rtwenvironmentmode","%<CompiledModel.Name>")
   %%%return mode
%endfunction

%%
%% Function SLibArrayFEVAL ================================================
%% 
%% Abstract:
%%    Allow FEVAL to MATLAB with multiple return values
%%
%%    Arguments:
%% 
%%    fname - the name of the MATLAB fcn to call.
%%    nout - the number of output arguments required from the MATLAB fcn.
%%    arrayArgs - an array containing the input arguments to the MATLAB fcn.
%%
%%    Returns: 
%%
%%    An array containing the requested output arguments from the MATLAB fcn call.
%%
%%
%function SLibArrayFEVAL(fname, nout, arrayArgs) 
   %% variable length argument list is in arrayArgs
   %% unwind it for the call to FEVAL
   %assign vararglist = ""
   %foreach arrayArg = SIZE(arrayArgs, 1)
      %if arrayArg == 0 
         %assign vararglist = "arrayArgs[%<arrayArg>]"
      %else
         %assign vararglist = "%<vararglist>, arrayArgs[%<arrayArg>]"
      %endif
   %endforeach
   
   %% use standard FEVAL to call the cellarrayfeval.m helper function
   %assign result = FEVAL("cellarrayfeval", fname, nout, %<vararglist>)
   %return result
%endfunction


%% 
%% Function SLibSafeFEVAL ===================================================
%%
%% Abstract:
%%    FEVAL to MATLAB, throwing any MATLAB error that occurs as a hard TLC error.
%%
%% Arguments:
%%
%% fname - the name of the MATLAB fcn to call
%% arrayArgs - an array containing the input arguments to the MATLAB fcn
%%
%% Returns:
%%
%% The FEVAL result
%%
%function SLibSafeFEVAL(fname, arrayArgs)
   %% variable length argument list is in arrayArgs
   %% unwind it for the call to FEVAL
   %assign vararglist = ""
   %foreach arrayArg = SIZE(arrayArgs, 1)
      %if arrayArg == 0 
         %assign vararglist = "arrayArgs[%<arrayArg>]"
      %else
         %assign vararglist = "%<vararglist>, arrayArgs[%<arrayArg>]"
      %endif
   %endforeach

   %% store current MATLAB error status
   %assign err_old = FEVAL("lasterr")
   %% clear MATLAB error status
   %matlab lasterr("")
  
   %% Make the FEVAL
   %assign result = FEVAL(fname, %<vararglist>)

   %% get new MATLAB error status
   %assign err = FEVAL("lasterr")
   %if !LibIsEmpty(err)
      %exit %<err>
   %endif
   %% restore MATLAB error status
   %matlab lasterr(err_old)
   %return result
%endfunction
