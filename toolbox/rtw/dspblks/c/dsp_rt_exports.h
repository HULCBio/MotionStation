/*
 * @(#)dsp_rt_exports.h    generated by: makeheader 4.21  Tue Mar 30 16:43:38 2004
 *
 *		built from:	../../../../src/include/pragma_interface.h
 *				dspacf/acf_fd_c_rt.c
 *				dspacf/acf_fd_d_rt.c
 *				dspacf/acf_fd_r_rt.c
 *				dspacf/acf_fd_z_rt.c
 *				dspacf/acf_fft_interleave_zpad_d_rt.c
 *				dspacf/acf_fft_interleave_zpad_r_rt.c
 *				dspacf/acf_td_c_rt.c
 *				dspacf/acf_td_d_rt.c
 *				dspacf/acf_td_r_rt.c
 *				dspacf/acf_td_z_rt.c
 *				dspacf/copy_and_zero_pad_cc_nchan_rt.c
 *				dspacf/copy_and_zero_pad_zz_nchan_rt.c
 *				dspallpole/allpole_df_a0scale_cc_rt.c
 *				dspallpole/allpole_df_a0scale_cr_rt.c
 *				dspallpole/allpole_df_a0scale_dd_rt.c
 *				dspallpole/allpole_df_a0scale_dz_rt.c
 *				dspallpole/allpole_df_a0scale_rc_rt.c
 *				dspallpole/allpole_df_a0scale_rr_rt.c
 *				dspallpole/allpole_df_a0scale_zd_rt.c
 *				dspallpole/allpole_df_a0scale_zz_rt.c
 *				dspallpole/allpole_df_cc_rt.c
 *				dspallpole/allpole_df_cr_rt.c
 *				dspallpole/allpole_df_dd_rt.c
 *				dspallpole/allpole_df_dz_rt.c
 *				dspallpole/allpole_df_rc_rt.c
 *				dspallpole/allpole_df_rr_rt.c
 *				dspallpole/allpole_df_zd_rt.c
 *				dspallpole/allpole_df_zz_rt.c
 *				dspallpole/allpole_lat_cc_rt.c
 *				dspallpole/allpole_lat_cr_rt.c
 *				dspallpole/allpole_lat_dd_rt.c
 *				dspallpole/allpole_lat_dz_rt.c
 *				dspallpole/allpole_lat_rc_rt.c
 *				dspallpole/allpole_lat_rr_rt.c
 *				dspallpole/allpole_lat_zd_rt.c
 *				dspallpole/allpole_lat_zz_rt.c
 *				dspallpole/allpole_tdf_a0scale_cc_rt.c
 *				dspallpole/allpole_tdf_a0scale_cr_rt.c
 *				dspallpole/allpole_tdf_a0scale_dd_rt.c
 *				dspallpole/allpole_tdf_a0scale_dz_rt.c
 *				dspallpole/allpole_tdf_a0scale_rc_rt.c
 *				dspallpole/allpole_tdf_a0scale_rr_rt.c
 *				dspallpole/allpole_tdf_a0scale_zd_rt.c
 *				dspallpole/allpole_tdf_a0scale_zz_rt.c
 *				dspallpole/allpole_tdf_cc_rt.c
 *				dspallpole/allpole_tdf_cr_rt.c
 *				dspallpole/allpole_tdf_dd_rt.c
 *				dspallpole/allpole_tdf_dz_rt.c
 *				dspallpole/allpole_tdf_rc_rt.c
 *				dspallpole/allpole_tdf_rr_rt.c
 *				dspallpole/allpole_tdf_zd_rt.c
 *				dspallpole/allpole_tdf_zz_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_cc_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_cr_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_dd_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_dz_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_rc_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_rr_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_zd_rt.c
 *				dspbiquad/bq4_df2t_1fpf_1sos_zz_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_cc_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_cr_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_dd_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_dz_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_rc_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_rr_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_zd_rt.c
 *				dspbiquad/bq4_df2t_1fpf_nsos_zz_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_cc_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_cr_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_dd_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_dz_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_rc_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_rr_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_zd_rt.c
 *				dspbiquad/bq5_df2t_1fpf_1sos_zz_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_cc_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_cr_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_dd_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_dz_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_rc_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_rr_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_zd_rt.c
 *				dspbiquad/bq5_df2t_1fpf_nsos_zz_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_cc_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_cr_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_dd_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_dz_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_rc_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_rr_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_zd_rt.c
 *				dspbiquad/bq6_df2t_1fpf_1sos_zz_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_cc_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_cr_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_dd_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_dz_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_rc_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_rr_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_zd_rt.c
 *				dspbiquad/bq6_df2t_1fpf_nsos_zz_rt.c
 *				dspburg/burg_a_c_rt.c
 *				dspburg/burg_a_d_rt.c
 *				dspburg/burg_a_r_rt.c
 *				dspburg/burg_a_z_rt.c
 *				dspburg/burg_ak_c_rt.c
 *				dspburg/burg_ak_d_rt.c
 *				dspburg/burg_ak_r_rt.c
 *				dspburg/burg_ak_z_rt.c
 *				dspburg/burg_k_c_rt.c
 *				dspburg/burg_k_d_rt.c
 *				dspburg/burg_k_r_rt.c
 *				dspburg/burg_k_z_rt.c
 *				dspchol/chol_c_rt.c
 *				dspchol/chol_d_rt.c
 *				dspchol/chol_r_rt.c
 *				dspchol/chol_z_rt.c
 *				dspcicfilter/cic_dec_lat_0808_rt.c
 *				dspcicfilter/cic_dec_lat_0816_rt.c
 *				dspcicfilter/cic_dec_lat_0832_rt.c
 *				dspcicfilter/cic_dec_lat_1608_rt.c
 *				dspcicfilter/cic_dec_lat_1616_rt.c
 *				dspcicfilter/cic_dec_lat_1632_rt.c
 *				dspcicfilter/cic_dec_lat_3208_rt.c
 *				dspcicfilter/cic_dec_lat_3216_rt.c
 *				dspcicfilter/cic_dec_lat_3232_rt.c
 *				dspcicfilter/cic_dec_zer_0808_rt.c
 *				dspcicfilter/cic_dec_zer_0816_rt.c
 *				dspcicfilter/cic_dec_zer_0832_rt.c
 *				dspcicfilter/cic_dec_zer_1608_rt.c
 *				dspcicfilter/cic_dec_zer_1616_rt.c
 *				dspcicfilter/cic_dec_zer_1632_rt.c
 *				dspcicfilter/cic_dec_zer_3208_rt.c
 *				dspcicfilter/cic_dec_zer_3216_rt.c
 *				dspcicfilter/cic_dec_zer_3232_rt.c
 *				dspcicfilter/cic_int_lat_0808_rt.c
 *				dspcicfilter/cic_int_lat_0816_rt.c
 *				dspcicfilter/cic_int_lat_0832_rt.c
 *				dspcicfilter/cic_int_lat_1608_rt.c
 *				dspcicfilter/cic_int_lat_1616_rt.c
 *				dspcicfilter/cic_int_lat_1632_rt.c
 *				dspcicfilter/cic_int_lat_3208_rt.c
 *				dspcicfilter/cic_int_lat_3216_rt.c
 *				dspcicfilter/cic_int_lat_3232_rt.c
 *				dspcicfilter/cic_int_zer_0808_rt.c
 *				dspcicfilter/cic_int_zer_0816_rt.c
 *				dspcicfilter/cic_int_zer_0832_rt.c
 *				dspcicfilter/cic_int_zer_1608_rt.c
 *				dspcicfilter/cic_int_zer_1616_rt.c
 *				dspcicfilter/cic_int_zer_1632_rt.c
 *				dspcicfilter/cic_int_zer_3208_rt.c
 *				dspcicfilter/cic_int_zer_3216_rt.c
 *				dspcicfilter/cic_int_zer_3232_rt.c
 *				dspconvcorr/conv_td_cc_rt.c
 *				dspconvcorr/conv_td_dd_rt.c
 *				dspconvcorr/conv_td_dz_rt.c
 *				dspconvcorr/conv_td_rc_rt.c
 *				dspconvcorr/conv_td_rr_rt.c
 *				dspconvcorr/conv_td_zz_rt.c
 *				dspconvcorr/copy_and_zpad_cc_rt.c
 *				dspconvcorr/copy_and_zpad_dz_rt.c
 *				dspconvcorr/copy_and_zpad_rc_rt.c
 *				dspconvcorr/copy_and_zpad_zz_rt.c
 *				dspconvcorr/corr_td_cc_rt.c
 *				dspconvcorr/corr_td_cr_rt.c
 *				dspconvcorr/corr_td_dd_rt.c
 *				dspconvcorr/corr_td_dz_rt.c
 *				dspconvcorr/corr_td_rc_rt.c
 *				dspconvcorr/corr_td_rr_rt.c
 *				dspconvcorr/corr_td_zd_rt.c
 *				dspconvcorr/corr_td_zz_rt.c
 *				dspendian/is_little_endian_rt.c
 *				dspeph/eph_zc_fcn_rt.c
 *				dspfbsub/bsub_nu_cc_c_rt.c
 *				dspfbsub/bsub_nu_cr_c_rt.c
 *				dspfbsub/bsub_nu_dd_d_rt.c
 *				dspfbsub/bsub_nu_dz_z_rt.c
 *				dspfbsub/bsub_nu_rc_c_rt.c
 *				dspfbsub/bsub_nu_rr_r_rt.c
 *				dspfbsub/bsub_nu_zd_z_rt.c
 *				dspfbsub/bsub_nu_zz_z_rt.c
 *				dspfbsub/bsub_u_cc_c_rt.c
 *				dspfbsub/bsub_u_cr_c_rt.c
 *				dspfbsub/bsub_u_dd_d_rt.c
 *				dspfbsub/bsub_u_dz_z_rt.c
 *				dspfbsub/bsub_u_rc_c_rt.c
 *				dspfbsub/bsub_u_rr_r_rt.c
 *				dspfbsub/bsub_u_zd_z_rt.c
 *				dspfbsub/bsub_u_zz_z_rt.c
 *				dspfbsub/fsub_nu_cc_c_rt.c
 *				dspfbsub/fsub_nu_cr_c_rt.c
 *				dspfbsub/fsub_nu_dd_d_rt.c
 *				dspfbsub/fsub_nu_dz_z_rt.c
 *				dspfbsub/fsub_nu_rc_c_rt.c
 *				dspfbsub/fsub_nu_rr_r_rt.c
 *				dspfbsub/fsub_nu_zd_z_rt.c
 *				dspfbsub/fsub_nu_zz_z_rt.c
 *				dspfbsub/fsub_u_cc_c_rt.c
 *				dspfbsub/fsub_u_cr_c_rt.c
 *				dspfbsub/fsub_u_dd_d_rt.c
 *				dspfbsub/fsub_u_dz_z_rt.c
 *				dspfbsub/fsub_u_rc_c_rt.c
 *				dspfbsub/fsub_u_rr_r_rt.c
 *				dspfbsub/fsub_u_zd_z_rt.c
 *				dspfbsub/fsub_u_zz_z_rt.c
 *				dspfft/copy_adjrow_intcol_br_c_rt.c
 *				dspfft/copy_adjrow_intcol_br_z_rt.c
 *				dspfft/copy_adjrow_intcol_c_rt.c
 *				dspfft/copy_adjrow_intcol_z_rt.c
 *				dspfft/copy_col_as_row_c_rt.c
 *				dspfft/copy_col_as_row_z_rt.c
 *				dspfft/copy_row_as_col_br_c_rt.c
 *				dspfft/copy_row_as_col_br_d_rt.c
 *				dspfft/copy_row_as_col_br_dz_rt.c
 *				dspfft/copy_row_as_col_br_rc_rt.c
 *				dspfft/copy_row_as_col_br_z_rt.c
 *				dspfft/copy_row_as_col_c_rt.c
 *				dspfft/copy_row_as_col_dz_rt.c
 *				dspfft/copy_row_as_col_rc_rt.c
 *				dspfft/copy_row_as_col_z_rt.c
 *				dspfft/fft_dbllen_tbl_c_rt.c
 *				dspfft/fft_dbllen_tbl_z_rt.c
 *				dspfft/fft_dbllen_trig_c_rt.c
 *				dspfft/fft_dbllen_trig_z_rt.c
 *				dspfft/fft_dblsig_br_c_rt.c
 *				dspfft/fft_dblsig_br_z_rt.c
 *				dspfft/fft_dblsig_c_rt.c
 *				dspfft/fft_dblsig_z_rt.c
 *				dspfft/fft_interleave_br_d_rt.c
 *				dspfft/fft_interleave_br_r_rt.c
 *				dspfft/fft_interleave_d_rt.c
 *				dspfft/fft_interleave_r_rt.c
 *				dspfft/fft_r2br_c_oop_rt.c
 *				dspfft/fft_r2br_c_rt.c
 *				dspfft/fft_r2br_dz_oop_rt.c
 *				dspfft/fft_r2br_rc_oop_rt.c
 *				dspfft/fft_r2br_z_oop_rt.c
 *				dspfft/fft_r2br_z_rt.c
 *				dspfft/fft_r2dif_tblm_c_rt.c
 *				dspfft/fft_r2dif_tblm_z_rt.c
 *				dspfft/fft_r2dif_tbls_c_rt.c
 *				dspfft/fft_r2dif_tbls_z_rt.c
 *				dspfft/fft_r2dif_trig_c_rt.c
 *				dspfft/fft_r2dif_trig_z_rt.c
 *				dspfft/fft_r2dit_tblm_c_rt.c
 *				dspfft/fft_r2dit_tblm_z_rt.c
 *				dspfft/fft_r2dit_tbls_c_rt.c
 *				dspfft/fft_r2dit_tbls_z_rt.c
 *				dspfft/fft_r2dit_trig_c_rt.c
 *				dspfft/fft_r2dit_trig_z_rt.c
 *				dspfft/fft_scaledata_dd_rt.c
 *				dspfft/fft_scaledata_dz_rt.c
 *				dspfft/fft_scaledata_rc_rt.c
 *				dspfft/fft_scaledata_rr_rt.c
 *				dspfft/ifft_addcssignals_c_c_oop_rt.c
 *				dspfft/ifft_addcssignals_c_cbr_oop_rt.c
 *				dspfft/ifft_addcssignals_d_z_oop_rt.c
 *				dspfft/ifft_addcssignals_d_zbr_oop_rt.c
 *				dspfft/ifft_addcssignals_r_c_oop_rt.c
 *				dspfft/ifft_addcssignals_r_cbr_oop_rt.c
 *				dspfft/ifft_addcssignals_z_z_oop_rt.c
 *				dspfft/ifft_addcssignals_z_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_c_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_cbr_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_d_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_dbr_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_r_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_rbr_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_z_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_tbl_zbr_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_c_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_cbr_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_d_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_dbr_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_r_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_rbr_cbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_z_zbr_oop_rt.c
 *				dspfft/ifft_dbllen_trig_zbr_zbr_oop_rt.c
 *				dspfft/ifft_deinterleave_d_d_inp_rt.c
 *				dspfft/ifft_deinterleave_r_r_inp_rt.c
 *				dspfilterbank/2chabank_fr_df_cc_rt.c
 *				dspfilterbank/2chabank_fr_df_cr_rt.c
 *				dspfilterbank/2chabank_fr_df_dd_rt.c
 *				dspfilterbank/2chabank_fr_df_rr_rt.c
 *				dspfilterbank/2chabank_fr_df_zd_rt.c
 *				dspfilterbank/2chabank_fr_df_zz_rt.c
 *				dspfilterbank/2chsbank_df_cc_rt.c
 *				dspfilterbank/2chsbank_df_cr_rt.c
 *				dspfilterbank/2chsbank_df_dd_rt.c
 *				dspfilterbank/2chsbank_df_rr_rt.c
 *				dspfilterbank/2chsbank_df_zd_rt.c
 *				dspfilterbank/2chsbank_df_zz_rt.c
 *				dspfir/fir_df_cc_rt.c
 *				dspfir/fir_df_cr_rt.c
 *				dspfir/fir_df_dd_rt.c
 *				dspfir/fir_df_dz_rt.c
 *				dspfir/fir_df_rc_rt.c
 *				dspfir/fir_df_rr_rt.c
 *				dspfir/fir_df_zd_rt.c
 *				dspfir/fir_df_zz_rt.c
 *				dspfir/fir_lat_cc_rt.c
 *				dspfir/fir_lat_cr_rt.c
 *				dspfir/fir_lat_dd_rt.c
 *				dspfir/fir_lat_dz_rt.c
 *				dspfir/fir_lat_rc_rt.c
 *				dspfir/fir_lat_rr_rt.c
 *				dspfir/fir_lat_zd_rt.c
 *				dspfir/fir_lat_zz_rt.c
 *				dspfir/fir_tdf_cc_rt.c
 *				dspfir/fir_tdf_cr_rt.c
 *				dspfir/fir_tdf_dd_rt.c
 *				dspfir/fir_tdf_dz_rt.c
 *				dspfir/fir_tdf_rc_rt.c
 *				dspfir/fir_tdf_rr_rt.c
 *				dspfir/fir_tdf_zd_rt.c
 *				dspfir/fir_tdf_zz_rt.c
 *				dspfirdn/firdn_df_dblbuf_cc_rt.c
 *				dspfirdn/firdn_df_dblbuf_cr_rt.c
 *				dspfirdn/firdn_df_dblbuf_dd_rt.c
 *				dspfirdn/firdn_df_dblbuf_dz_rt.c
 *				dspfirdn/firdn_df_dblbuf_rc_rt.c
 *				dspfirdn/firdn_df_dblbuf_rr_rt.c
 *				dspfirdn/firdn_df_dblbuf_zd_rt.c
 *				dspfirdn/firdn_df_dblbuf_zz_rt.c
 *				dspflip/flip_matrix_col_ip_rt.c
 *				dspflip/flip_matrix_col_op_rt.c
 *				dspflip/flip_matrix_row_ip_rt.c
 *				dspflip/flip_matrix_row_op_rt.c
 *				dspflip/flip_vector_ip_rt.c
 *				dspflip/flip_vector_op_rt.c
 *				dspg711/g711_enc_a_sat_rt.c
 *				dspg711/g711_enc_a_wrap_rt.c
 *				dspg711/g711_enc_mu_sat_rt.c
 *				dspg711/g711_enc_mu_wrap_rt.c
 *				dspgivensrot/rotg_d_rt.c
 *				dspgivensrot/rotg_r_rt.c
 *				dsphist/hist_binsearch_s08_rt.c
 *				dsphist/hist_binsearch_s16_rt.c
 *				dsphist/hist_binsearch_s32_rt.c
 *				dsphist/hist_binsearch_u08_rt.c
 *				dsphist/hist_binsearch_u16_rt.c
 *				dsphist/hist_binsearch_u32_rt.c
 *				dsphist/hist_c_rt.c
 *				dsphist/hist_d_rt.c
 *				dsphist/hist_r_rt.c
 *				dsphist/hist_z_rt.c
 *				dspic/ic_copy_channel_rt.c
 *				dspic/ic_copy_matrix_rt.c
 *				dspic/ic_copy_scalar_rt.c
 *				dspic/ic_copy_vector_rt.c
 *				dspic/ic_old_copy_fcns_rt.c
 *				dspiir/iir_df1_a0scale_cc_rt.c
 *				dspiir/iir_df1_a0scale_cr_rt.c
 *				dspiir/iir_df1_a0scale_dd_rt.c
 *				dspiir/iir_df1_a0scale_dz_rt.c
 *				dspiir/iir_df1_a0scale_rc_rt.c
 *				dspiir/iir_df1_a0scale_rr_rt.c
 *				dspiir/iir_df1_a0scale_zd_rt.c
 *				dspiir/iir_df1_a0scale_zz_rt.c
 *				dspiir/iir_df1_cc_rt.c
 *				dspiir/iir_df1_cr_rt.c
 *				dspiir/iir_df1_dd_rt.c
 *				dspiir/iir_df1_dz_rt.c
 *				dspiir/iir_df1_rc_rt.c
 *				dspiir/iir_df1_rr_rt.c
 *				dspiir/iir_df1_zd_rt.c
 *				dspiir/iir_df1_zz_rt.c
 *				dspiir/iir_df1t_a0scale_cc_rt.c
 *				dspiir/iir_df1t_a0scale_cr_rt.c
 *				dspiir/iir_df1t_a0scale_dd_rt.c
 *				dspiir/iir_df1t_a0scale_dz_rt.c
 *				dspiir/iir_df1t_a0scale_rc_rt.c
 *				dspiir/iir_df1t_a0scale_rr_rt.c
 *				dspiir/iir_df1t_a0scale_zd_rt.c
 *				dspiir/iir_df1t_a0scale_zz_rt.c
 *				dspiir/iir_df1t_cc_rt.c
 *				dspiir/iir_df1t_cr_rt.c
 *				dspiir/iir_df1t_dd_rt.c
 *				dspiir/iir_df1t_dz_rt.c
 *				dspiir/iir_df1t_rc_rt.c
 *				dspiir/iir_df1t_rr_rt.c
 *				dspiir/iir_df1t_zd_rt.c
 *				dspiir/iir_df1t_zz_rt.c
 *				dspiir/iir_df2_a0scale_cc_rt.c
 *				dspiir/iir_df2_a0scale_cr_rt.c
 *				dspiir/iir_df2_a0scale_dd_rt.c
 *				dspiir/iir_df2_a0scale_dz_rt.c
 *				dspiir/iir_df2_a0scale_rc_rt.c
 *				dspiir/iir_df2_a0scale_rr_rt.c
 *				dspiir/iir_df2_a0scale_zd_rt.c
 *				dspiir/iir_df2_a0scale_zz_rt.c
 *				dspiir/iir_df2_cc_rt.c
 *				dspiir/iir_df2_cr_rt.c
 *				dspiir/iir_df2_dd_rt.c
 *				dspiir/iir_df2_dz_rt.c
 *				dspiir/iir_df2_rc_rt.c
 *				dspiir/iir_df2_rr_rt.c
 *				dspiir/iir_df2_zd_rt.c
 *				dspiir/iir_df2_zz_rt.c
 *				dspiir/iir_df2t_a0scale_cc_rt.c
 *				dspiir/iir_df2t_a0scale_cr_rt.c
 *				dspiir/iir_df2t_a0scale_dd_rt.c
 *				dspiir/iir_df2t_a0scale_dz_rt.c
 *				dspiir/iir_df2t_a0scale_rc_rt.c
 *				dspiir/iir_df2t_a0scale_rr_rt.c
 *				dspiir/iir_df2t_a0scale_zd_rt.c
 *				dspiir/iir_df2t_a0scale_zz_rt.c
 *				dspiir/iir_df2t_cc_rt.c
 *				dspiir/iir_df2t_cr_rt.c
 *				dspiir/iir_df2t_dd_rt.c
 *				dspiir/iir_df2t_dz_rt.c
 *				dspiir/iir_df2t_rc_rt.c
 *				dspiir/iir_df2t_rr_rt.c
 *				dspiir/iir_df2t_zd_rt.c
 *				dspiir/iir_df2t_zz_rt.c
 *				dspinterp/interp_fir_d_rt.c
 *				dspinterp/interp_fir_r_rt.c
 *				dspinterp/interp_lin_d_rt.c
 *				dspinterp/interp_lin_r_rt.c
 *				dspintsignext/int32signext_rt.c
 *				dspisfinite/isfinite_d_rt.c
 *				dspisfinite/isfinite_r_rt.c
 *				dspldl/ldl_c_rt.c
 *				dspldl/ldl_d_rt.c
 *				dspldl/ldl_r_rt.c
 *				dspldl/ldl_z_rt.c
 *				dsplevdurb/levdurb_a_c_rt.c
 *				dsplevdurb/levdurb_a_d_rt.c
 *				dsplevdurb/levdurb_a_r_rt.c
 *				dsplevdurb/levdurb_a_z_rt.c
 *				dsplevdurb/levdurb_ak_c_rt.c
 *				dsplevdurb/levdurb_ak_d_rt.c
 *				dsplevdurb/levdurb_ak_r_rt.c
 *				dsplevdurb/levdurb_ak_z_rt.c
 *				dsplevdurb/levdurb_akp_c_rt.c
 *				dsplevdurb/levdurb_akp_d_rt.c
 *				dsplevdurb/levdurb_akp_r_rt.c
 *				dsplevdurb/levdurb_akp_z_rt.c
 *				dsplevdurb/levdurb_ap_c_rt.c
 *				dsplevdurb/levdurb_ap_d_rt.c
 *				dsplevdurb/levdurb_ap_r_rt.c
 *				dsplevdurb/levdurb_ap_z_rt.c
 *				dsplpc2cc/cc2lpc_d_rt.c
 *				dsplpc2cc/cc2lpc_r_rt.c
 *				dsplpc2cc/lpc2cc_d_rt.c
 *				dsplpc2cc/lpc2cc_r_rt.c
 *				dsplsp2poly/lsp2poly_evenord_d_rt.c
 *				dsplsp2poly/lsp2poly_evenord_r_rt.c
 *				dsplsp2poly/lsp2poly_oddord_d_rt.c
 *				dsplsp2poly/lsp2poly_oddord_r_rt.c
 *				dsplu/lu_c_rt.c
 *				dsplu/lu_d_rt.c
 *				dsplu/lu_r_rt.c
 *				dsplu/lu_z_rt.c
 *				dspmmult/matmult_cc_rt.c
 *				dspmmult/matmult_cr_rt.c
 *				dspmmult/matmult_dd_rt.c
 *				dspmmult/matmult_dz_rt.c
 *				dspmmult/matmult_rc_rt.c
 *				dspmmult/matmult_rr_rt.c
 *				dspmmult/matmult_zd_rt.c
 *				dspmmult/matmult_zz_rt.c
 *				dsppad/pad_cols_mixed_rt.c
 *				dsppad/pad_cols_rt.c
 *				dsppad/pad_copy_io_trunc_cols_rt.c
 *				dsppad/pad_pre_cols_mixed_rt.c
 *				dsppad/pad_pre_cols_rt.c
 *				dsppad/pad_pre_rows_cols_mixed_rt.c
 *				dsppad/pad_pre_rows_cols_rt.c
 *				dsppad/pad_pre_rows_mixed_rt.c
 *				dsppad/pad_pre_rows_rt.c
 *				dsppad/pad_rows_cols_mixed_rt.c
 *				dsppad/pad_rows_cols_rt.c
 *				dsppad/pad_rows_mixed_rt.c
 *				dsppad/pad_rows_rt.c
 *				dsppinv/pinv_c_rt.c
 *				dsppinv/pinv_d_rt.c
 *				dsppinv/pinv_r_rt.c
 *				dsppinv/pinv_z_rt.c
 *				dsppoly2lsf/poly2lsfn_d_rt.c
 *				dsppoly2lsf/poly2lsfn_r_rt.c
 *				dsppoly2lsf/poly2lsfr_d_rt.c
 *				dsppoly2lsf/poly2lsfr_r_rt.c
 *				dsppoly2lsf/poly2lsp_d_rt.c
 *				dsppoly2lsf/poly2lsp_r_rt.c
 *				dsppolyval/polyval_cc_rt.c
 *				dsppolyval/polyval_cr_rt.c
 *				dsppolyval/polyval_dd_rt.c
 *				dsppolyval/polyval_dz_rt.c
 *				dsppolyval/polyval_rc_rt.c
 *				dsppolyval/polyval_rr_rt.c
 *				dsppolyval/polyval_zd_rt.c
 *				dsppolyval/polyval_zz_rt.c
 *				dspqrdc/qrcompqy_c_rt.c
 *				dspqrdc/qrcompqy_d_rt.c
 *				dspqrdc/qrcompqy_mixd_c_rt.c
 *				dspqrdc/qrcompqy_mixd_z_rt.c
 *				dspqrdc/qrcompqy_r_rt.c
 *				dspqrdc/qrcompqy_z_rt.c
 *				dspqrdc/qrdc_c_rt.c
 *				dspqrdc/qrdc_d_rt.c
 *				dspqrdc/qrdc_r_rt.c
 *				dspqrdc/qrdc_z_rt.c
 *				dspqrdc/qre_c_rt.c
 *				dspqrdc/qre_d_rt.c
 *				dspqrdc/qre_r_rt.c
 *				dspqrdc/qre_z_rt.c
 *				dspqrdc/qreslv_c_rt.c
 *				dspqrdc/qreslv_d_rt.c
 *				dspqrdc/qreslv_mixd_c_rt.c
 *				dspqrdc/qreslv_mixd_z_rt.c
 *				dspqrdc/qreslv_r_rt.c
 *				dspqrdc/qreslv_z_rt.c
 *				dspqsrt/sort_ins_idx_d_rt.c
 *				dspqsrt/sort_ins_idx_r_rt.c
 *				dspqsrt/sort_ins_idx_s08_rt.c
 *				dspqsrt/sort_ins_idx_s16_rt.c
 *				dspqsrt/sort_ins_idx_s32_rt.c
 *				dspqsrt/sort_ins_idx_u08_rt.c
 *				dspqsrt/sort_ins_idx_u16_rt.c
 *				dspqsrt/sort_ins_idx_u32_rt.c
 *				dspqsrt/sort_ins_val_d_rt.c
 *				dspqsrt/sort_ins_val_r_rt.c
 *				dspqsrt/sort_ins_val_s08_rt.c
 *				dspqsrt/sort_ins_val_s16_rt.c
 *				dspqsrt/sort_ins_val_s32_rt.c
 *				dspqsrt/sort_ins_val_u08_rt.c
 *				dspqsrt/sort_ins_val_u16_rt.c
 *				dspqsrt/sort_ins_val_u32_rt.c
 *				dspqsrt/sort_qk_idx_d_rt.c
 *				dspqsrt/sort_qk_idx_r_rt.c
 *				dspqsrt/sort_qk_idx_s08_rt.c
 *				dspqsrt/sort_qk_idx_s16_rt.c
 *				dspqsrt/sort_qk_idx_s32_rt.c
 *				dspqsrt/sort_qk_idx_u08_rt.c
 *				dspqsrt/sort_qk_idx_u16_rt.c
 *				dspqsrt/sort_qk_idx_u32_rt.c
 *				dspqsrt/sort_qk_val_d_rt.c
 *				dspqsrt/sort_qk_val_r_rt.c
 *				dspqsrt/sort_qk_val_s08_rt.c
 *				dspqsrt/sort_qk_val_s16_rt.c
 *				dspqsrt/sort_qk_val_s32_rt.c
 *				dspqsrt/sort_qk_val_u08_rt.c
 *				dspqsrt/sort_qk_val_u16_rt.c
 *				dspqsrt/sort_qk_val_u32_rt.c
 *				dspqsrt/srt_qid_findpivot_d_rt.c
 *				dspqsrt/srt_qid_findpivot_r_rt.c
 *				dspqsrt/srt_qid_partition_d_rt.c
 *				dspqsrt/srt_qid_partition_r_rt.c
 *				dspqsrt/srt_qkrec_c_rt.c
 *				dspqsrt/srt_qkrec_d_rt.c
 *				dspqsrt/srt_qkrec_r_rt.c
 *				dspqsrt/srt_qkrec_z_rt.c
 *				dsprandsrc/randsrc_gc_c_rt.c
 *				dsprandsrc/randsrc_gc_d_rt.c
 *				dsprandsrc/randsrc_gc_r_rt.c
 *				dsprandsrc/randsrc_gc_z_rt.c
 *				dsprandsrc/randsrc_gz_c_rt.c
 *				dsprandsrc/randsrc_gz_d_rt.c
 *				dsprandsrc/randsrc_gz_r_rt.c
 *				dsprandsrc/randsrc_gz_z_rt.c
 *				dsprandsrc/randsrc_u_c_rt.c
 *				dsprandsrc/randsrc_u_d_rt.c
 *				dsprandsrc/randsrc_u_r_rt.c
 *				dsprandsrc/randsrc_u_z_rt.c
 *				dsprandsrc/randsrccreateseeds_32_rt.c
 *				dsprandsrc/randsrccreateseeds_64_rt.c
 *				dsprandsrc/randsrcinitstate_gc_32_rt.c
 *				dsprandsrc/randsrcinitstate_gc_64_rt.c
 *				dsprandsrc/randsrcinitstate_gz_rt.c
 *				dsprandsrc/randsrcinitstate_u_32_rt.c
 *				dsprandsrc/randsrcinitstate_u_64_rt.c
 *				dsprc2ac/lpc2ac_d_rt.c
 *				dsprc2ac/lpc2ac_r_rt.c
 *				dsprc2ac/rc2ac_d_rt.c
 *				dsprc2ac/rc2ac_r_rt.c
 *				dsprc2lpc/lpc2rc_d_rt.c
 *				dsprc2lpc/lpc2rc_r_rt.c
 *				dsprc2lpc/rc2lpc_d_rt.c
 *				dsprc2lpc/rc2lpc_r_rt.c
 *				dsprebuff/buf_copy_frame_to_mem_OL_1ch_rt.c
 *				dsprebuff/buf_copy_frame_to_mem_OL_rt.c
 *				dsprebuff/buf_copy_input_to_output_1ch_rt.c
 *				dsprebuff/buf_copy_input_to_output_rt.c
 *				dsprebuff/buf_copy_scalar_to_mem_OL_1ch_rt.c
 *				dsprebuff/buf_copy_scalar_to_mem_OL_rt.c
 *				dsprebuff/buf_copy_scalar_to_mem_UL_1ch_rt.c
 *				dsprebuff/buf_copy_scalar_to_mem_UL_rt.c
 *				dsprebuff/buf_output_frame_1ch_rt.c
 *				dsprebuff/buf_output_frame_rt.c
 *				dsprebuff/buf_output_scalar_1ch_rt.c
 *				dsprebuff/buf_output_scalar_rt.c
 *				dspsvd/svd_c_rt.c
 *				dspsvd/svd_d_rt.c
 *				dspsvd/svd_r_rt.c
 *				dspsvd/svd_z_rt.c
 *				dspsvd/svdcopy_rt.c
 *				dspunwrap/unwrap_d_nrip_rt.c
 *				dspunwrap/unwrap_d_nrop_rt.c
 *				dspunwrap/unwrap_d_ripf_rt.c
 *				dspunwrap/unwrap_d_rips_rt.c
 *				dspunwrap/unwrap_d_ropf_rt.c
 *				dspunwrap/unwrap_d_rops_rt.c
 *				dspunwrap/unwrap_r_nrip_rt.c
 *				dspunwrap/unwrap_r_nrop_rt.c
 *				dspunwrap/unwrap_r_ripf_rt.c
 *				dspunwrap/unwrap_r_rips_rt.c
 *				dspunwrap/unwrap_r_ropf_rt.c
 *				dspunwrap/unwrap_r_rops_rt.c
 *				dspupfir/upfir_copydata_rt.c
 *				dspupfir/upfir_df_dblbuf_cc_rt.c
 *				dspupfir/upfir_df_dblbuf_cr_rt.c
 *				dspupfir/upfir_df_dblbuf_dd_rt.c
 *				dspupfir/upfir_df_dblbuf_dz_rt.c
 *				dspupfir/upfir_df_dblbuf_rc_rt.c
 *				dspupfir/upfir_df_dblbuf_rr_rt.c
 *				dspupfir/upfir_df_dblbuf_zd_rt.c
 *				dspupfir/upfir_df_dblbuf_zz_rt.c
 *				dspupfirdn/upfirdn_cc_rt.c
 *				dspupfirdn/upfirdn_cr_rt.c
 *				dspupfirdn/upfirdn_dd_rt.c
 *				dspupfirdn/upfirdn_dz_rt.c
 *				dspupfirdn/upfirdn_rc_rt.c
 *				dspupfirdn/upfirdn_rr_rt.c
 *				dspupfirdn/upfirdn_zd_rt.c
 *				dspupfirdn/upfirdn_zz_rt.c
 *				dspvfdly/vfdly_clip_d_rt.c
 *				dspvfdly/vfdly_clip_r_rt.c
 *				dspvfdly/vfdly_fir_c_rt.c
 *				dspvfdly/vfdly_fir_d_rt.c
 *				dspvfdly/vfdly_fir_r_rt.c
 *				dspvfdly/vfdly_fir_z_rt.c
 *				dspvfdly/vfdly_lin_c_rt.c
 *				dspvfdly/vfdly_lin_d_rt.c
 *				dspvfdly/vfdly_lin_r_rt.c
 *				dspvfdly/vfdly_lin_z_rt.c
 *				dspwindow/window_1ch_c_rt.c
 *				dspwindow/window_1ch_d_rt.c
 *				dspwindow/window_1ch_r_rt.c
 *				dspwindow/window_1ch_z_rt.c
 *				dspwindow/window_nch_c_rt.c
 *				dspwindow/window_nch_d_rt.c
 *				dspwindow/window_nch_r_rt.c
 *				dspwindow/window_nch_z_rt.c
 *				modver/modver.cpp
 */

#ifndef dsp_rt_exports_h
#define dsp_rt_exports_h


/*
 * Prevent g++ from making copies of vtable and typeinfo data
 * in every compilation unit.  By allowing for only one, we can
 * save space and prevent some situations where the linker fails
 * to coalesce them properly into a single entry.
 *
 * References:
 *    http://gcc.gnu.org/onlinedocs/gcc/Vague-Linkage.html#Vague%20Linkage
 *    http://gcc.gnu.org/onlinedocs/gcc/C---Interface.html
 */

#ifdef __cplusplus
#  ifdef GLNX86
#    pragma interface
#  endif
#endif


#ifdef __cplusplus
    extern "C" {
#endif

IMPORT_FCN void MWDSP_ACF_FD_C(
    const creal32_T *inPtr,
    int_T         inRows,
    creal32_T       *outPtr,
    int_T         outRows,
    int_T         outChans,
    int_T         N,
    creal32_T       *buff,
    const real32_T  *twid_tbl
);

IMPORT_FCN void MWDSP_ACF_FD_D(
    const real_T *inPtr,
    int_T         inRows,
    real_T       *outPtr,
    int_T         outRows,
    int_T         outChans,
    int_T         N,
    creal_T       *buff,
    const real_T  *twid_tbl
);

IMPORT_FCN void MWDSP_ACF_FD_R(
    const real32_T *inPtr,
    int_T           inRows,
    real32_T       *outPtr,
    int_T           outRows,
    int_T           outChans,
    int_T           N,
    creal32_T      *buff,
    const real32_T *twid_tbl
);

IMPORT_FCN void MWDSP_ACF_FD_Z(
    const creal_T *inPtr,
    int_T         inRows,
    creal_T       *outPtr,
    int_T         outRows,
    int_T         outChans,
    int_T         N,
    creal_T       *buff,
    const real_T  *twid_tbl
);

IMPORT_FCN void MWDSP_ACF_FFTInterleave_ZPad_D(
    const real_T *inPtr,
    int_T         inRows,
    creal_T       *buff,
    int_T         N,
    int_T         nChans
    );

IMPORT_FCN void MWDSP_ACF_FFTInterleave_ZPad_R(
    const real32_T *inPtr,
    int_T         inRows,
    creal32_T       *buff,
    int_T         N,
    int_T         nChans
    );

IMPORT_FCN void MWDSP_ACF_TD_C(
    const creal32_T *inPtr,
    int_T           inRows,
    creal32_T       *outPtr,
    int_T           outRows,
    int_T           outChans
);

IMPORT_FCN void MWDSP_ACF_TD_D(
    const real_T  *inPtr,
    int_T         inRows,
    real_T        *outPtr,
    int_T         outRows,
    int_T         outChans
);

IMPORT_FCN void MWDSP_ACF_TD_R(
    const real32_T  *inPtr,
    int_T           inRows,
    real32_T        *outPtr,
    int_T           outRows,
    int_T           outChans
);

IMPORT_FCN void MWDSP_ACF_TD_Z(
    const creal_T *inPtr,
    int_T         inRows,
    creal_T       *outPtr,
    int_T         outRows,
    int_T         outChans
);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_CC_Nchan(const creal32_T *u, const int_T Nu, creal32_T *y, const int_T Ny, int_T Nchan);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_ZZ_Nchan(const creal_T *u, const int_T Nu, creal_T *y, const int_T Ny, int_T Nchan);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_CC( 
                       const creal32_T      *u,
                       creal32_T            *y,
                       creal32_T  * const    mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal32_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_CR( 
                       const creal32_T      *u,
                       creal32_T            *y,
                       creal32_T  *const     mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real32_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_DD( 
                       const real_T      *u,
                       real_T            *y,
                       real_T     * const mem_base,
                       int32_T             *offset_mem,
                       const int_T        numDelays,
                       const int_T        sampsPerChan,
                       const int_T        numChans,
                       const real_T  * const a,
                       const boolean_T    one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_DZ( 
                       const real_T         *u,
                       creal_T              *y,
                       creal_T       * const mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_RC( 
                       const real32_T      *u,
                       creal32_T           *y,
                       creal32_T    * const mem_base,
                       int32_T               *offset_mem,
                       const int_T          numDelays,
                       const int_T          sampsPerChan,
                       const int_T          numChans,
                       const creal32_T  * const a,
                       const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_RR(
                       const real32_T      *u,
                       real32_T            *y,
                       real32_T     * const mem_base,
                       int32_T               *offset_mem,
                       const int_T          numDelays,
                       const int_T          sampsPerChan,
                       const int_T          numChans,
                       const real32_T  * const a,
                       const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_ZD(
                       const creal_T         *u,
                       creal_T               *y,
                       creal_T        * const mem_base,
                       int32_T                 *offset_mem,
                       const int_T            numDelays,
                       const int_T            sampsPerChan,
                       const int_T            numChans,
                       const real_T  * const a,
                       const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_A0Scale_ZZ(
                       const creal_T        *u,
                       creal_T              *y,
                       creal_T       * const mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_CC( 
                       const creal32_T      *u,
                       creal32_T            *y,
                       creal32_T * const    mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal32_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_CR( 
                       const creal32_T      *u,
                       creal32_T            *y,
                       creal32_T  * const    mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real32_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_DD( 
                       const real_T         *u,
                       real_T               *y,
                       real_T  * const       mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_DZ( 
                       const real_T         *u,
                       creal_T              *y,
                       creal_T       * const mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_RC(
                       const real32_T      *u,
                       creal32_T           *y,
                       creal32_T    * const mem_base,
                       int32_T               *offset_mem,
                       const int_T          numDelays,
                       const int_T          sampsPerChan,
                       const int_T          numChans,
                       const creal32_T  * const a,
                       const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_RR(
                       const real32_T      *u,
                       real32_T            *y,
                       real32_T     * const mem_base,
                       int32_T               *offset_mem,
                       const int_T          numDelays,
                       const int_T          sampsPerChan,
                       const int_T          numChans,
                       const real32_T  * const a,
                       const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_ZD(
                       const creal_T        *u,
                       creal_T              *y,
                       creal_T       * const mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_DF_ZZ(
                       const creal_T        *u,
                       creal_T              *y,
                       creal_T       * const mem_base,
                       int32_T                *offset_mem,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T  * const a,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_CC(const creal32_T         *u,
                          creal32_T               *y,
                          creal32_T               *mem_first,
                          const int_T             sampsPerChan,
                          const int_T             numChans,
                          const creal32_T * const K_first,
                          const int_T             ordK,
                          const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_CR(const creal32_T        *u,
                          creal32_T              *y,
                          creal32_T              *mem_first,
                          const int_T            sampsPerChan,
                          const int_T            numChans,
                          const real32_T * const K_first,
                          const int_T            ordK,
                          const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_DD(const real_T         *u,
                          real_T               *y,
                          real_T               *mem_first,
                          const int_T          sampsPerChan,
                          const int_T          numChans,
                          const real_T * const K_first,
                          const int_T          ordK,
                          const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_DZ(const real_T          *u,
                          creal_T               *y,
                          creal_T               *mem_first,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const creal_T * const K_first,
                          const int_T           ordK,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_RC(const real32_T          *u,
                          creal32_T               *y,
                          creal32_T               *mem_first,
                          const int_T             sampsPerChan,
                          const int_T             numChans,
                          const creal32_T * const K_first,
                          const int_T             ordK,
                          const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_RR(const real32_T         *u,
                          real32_T               *y,
                          real32_T               *mem_first,
                          const int_T            sampsPerChan,
                          const int_T            numChans,
                          const real32_T * const K_first,
                          const int_T            ordK,
                          const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_ZD(const creal_T        *u,
                          creal_T              *y,
                          creal_T              *mem_first,
                          const int_T          sampsPerChan,
                          const int_T          numChans,
                          const real_T * const K_first,
                          const int_T          ordK,
                          const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_Lat_ZZ(const creal_T         *u,
                          creal_T               *y,
                          creal_T               *mem_first,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const creal_T * const K_first,
                          const int_T           ordK,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_CC(const creal32_T         *u,
                                  creal32_T               *y,
                                  creal32_T * const       mem_base,
                                  const int_T             numDelays,
                                  const int_T             sampsPerChan,
                                  const int_T             numChans,
                                  const creal32_T * const den,
                                  const int_T             ordDEN,
                                  const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_CR(const creal32_T         *u,
                                  creal32_T               *y,
                                  creal32_T * const       mem_base,
                                  const int_T             numDelays,
                                  const int_T             sampsPerChan,
                                  const int_T             numChans,
                                  const real32_T * const  den,
                                  const int_T             ordDEN,
                                  const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_DD(const real_T         *u,
                                  real_T               *y,
                                  real_T * const       mem_base,
                                  const int_T          numDelays,
                                  const int_T          sampsPerChan,
                                  const int_T          numChans,
                                  const real_T * const den,
                                  const int_T          ordDEN,
                                  const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_DZ(const real_T          *u,
                                  creal_T               *y,
                                  creal_T * const       mem_base,
                                  const int_T           numDelays,
                                  const int_T           sampsPerChan,
                                  const int_T           numChans,
                                  const creal_T * const den,
                                  const int_T           ordDEN,
                                  const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_RC(const real32_T          *u,
                                  creal32_T               *y,
                                  creal32_T * const       mem_base,
                                  const int_T             numDelays,
                                  const int_T             sampsPerChan,
                                  const int_T             numChans,
                                  const creal32_T * const den,
                                  const int_T             ordDEN,
                                  const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_RR(const real32_T         *u,
                          real32_T               *y,
                          real32_T * const       mem_base,
                          const int_T            numDelays,
                          const int_T            sampsPerChan,
                          const int_T            numChans,
                          const real32_T * const den,
                          const int_T            ordDEN,
                          const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_ZD(const creal_T         *u,
                          creal_T               *y,
                          creal_T * const       mem_base,
                          const int_T           numDelays,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const real_T * const  den,
                          const int_T           ordDEN,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_A0Scale_ZZ(const creal_T         *u,
                          creal_T               *y,
                          creal_T * const       mem_base,
                          const int_T           numDelays,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const creal_T * const den,
                          const int_T           ordDEN,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_CC(const creal32_T         *u,
                          creal32_T               *y,
                          creal32_T * const       mem_base,
                          const int_T             numDelays,
                          const int_T             sampsPerChan,
                          const int_T             numChans,
                          const creal32_T * const den,
                          const int_T             ordDEN,
                          const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_CR(const creal32_T         *u,
                          creal32_T               *y,
                          creal32_T * const       mem_base,
                          const int_T             numDelays,
                          const int_T             sampsPerChan,
                          const int_T             numChans,
                          const real32_T * const  den,
                          const int_T             ordDEN,
                          const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_DD(const real_T         *u,
                               real_T               *y,
                               real_T * const       mem_base,
                               const int_T          numDelays,
                               const int_T          sampsPerChan,
                               const int_T          numChans,
                               const real_T * const den,
                               const int_T          ordDEN,
                               const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_DZ(const real_T          *u,
                          creal_T               *y,
                          creal_T * const       mem_base,
                          const int_T           numDelays,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const creal_T * const den,
                          const int_T           ordDEN,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_RC(const real32_T          *u,
                          creal32_T               *y,
                          creal32_T * const       mem_base,
                          const int_T             numDelays,
                          const int_T             sampsPerChan,
                          const int_T             numChans,
                          const creal32_T * const den,
                          const int_T             ordDEN,
                          const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_RR(const real32_T         *u,
                          real32_T               *y,
                          real32_T * const       mem_base,
                          const int_T            numDelays,
                          const int_T            sampsPerChan,
                          const int_T            numChans,
                          const real32_T * const den,
                          const int_T            ordDEN,
                          const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_ZD(const creal_T         *u,
                          creal_T               *y,
                          creal_T * const       mem_base,
                          const int_T           numDelays,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const real_T * const  den,
                          const int_T           ordDEN,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_AllPole_TDF_ZZ(const creal_T         *u,
                          creal_T               *y,
                          creal_T * const       mem_base,
                          const int_T           numDelays,
                          const int_T           sampsPerChan,
                          const int_T           numChans,
                          const creal_T * const den,
                          const int_T           ordDEN,
                          const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_1sos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ4_DF2T_1fpf_Nsos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_1sos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ5_DF2T_1fpf_Nsos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const creal32_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const real32_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const real_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const creal_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const creal32_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const real32_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const real_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_1sos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const creal_T  a0inv,
                                  const int_T sampsPerChan,
                                  const int_T numChans);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_CC (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const creal32_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_CR (const creal32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const real32_T *coeffs,
                                  const real32_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_DD (const real_T *u,
                                  real_T *y,
                                  real_T *state,
                                  const real_T *coeffs,
                                  const real_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_DZ (const real_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const creal_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_RC (const real32_T *u,
                                  creal32_T *y,
                                  creal32_T *state,
                                  const creal32_T *coeffs,
                                  const creal32_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_RR (const real32_T *u,
                                  real32_T *y,
                                  real32_T *state,
                                  const real32_T *coeffs,
                                  const real32_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_ZD (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const real_T *coeffs,
                                  const real_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_BQ6_DF2T_1fpf_Nsos_ZZ (const creal_T *u,
                                  creal_T *y,
                                  creal_T *state,
                                  const creal_T *coeffs,
                                  const creal_T *a0invs,
                                  const int_T sampsPerChan,
                                  const int_T numChans,
                                  const int_T numSections);

IMPORT_FCN void MWDSP_Burg_A_C(const int_T      N,             /* Input array length */
                    const int_T      order,         /* Order of estimation */
                    const creal32_T *u,             /* Input pointer */
                          creal32_T *ef,            /* Intermediate variable */
                          creal32_T *eb,            /* Intermediate variable */
                          creal32_T *anew,          /* Intermediate AR coeffients */
                          creal32_T *Acoef,         /* A - Output pointer */
                          real32_T  *Error
                    );

IMPORT_FCN void MWDSP_Burg_A_D(const int_T  N,             /* Input array length */
                    const int_T  order,         /* Order of estimation */
                    const real_T *u,            /* Input pointer */
                          real_T *ef,           /* Intermediate variable */
                          real_T *eb,           /* Intermediate variable */
                          real_T *anew,         /* Intermediate AR coeffients */
                          real_T *Acoef,        /* A - Output pointer */
                          real_T *Error
                    );

IMPORT_FCN void MWDSP_Burg_A_R(const int_T     N,             /* Input array length */
                    const int_T     order,         /* Order of estimation */
                    const real32_T *u,            /* Input pointer */
                          real32_T *ef,           /* Intermediate variable */
                          real32_T *eb,           /* Intermediate variable */
                          real32_T *anew,         /* Intermediate AR coeffients */
                          real32_T *Acoef,        /* A - Output pointer */
                          real32_T *Error
                    );

IMPORT_FCN void MWDSP_Burg_A_Z(const int_T    N,             /* Input array length */
                    const int_T    order,         /* Order of estimation */
                    const creal_T *u,             /* Input pointer */
                          creal_T *ef,            /* Intermediate variable */
                          creal_T *eb,            /* Intermediate variable */
                          creal_T *anew,          /* Intermediate AR coeffients */
                          creal_T *Acoef,         /* A - Output pointer */
                          real_T  *Error
                    );

IMPORT_FCN void MWDSP_Burg_AK_C(const int_T      N,             /* Input array length */
                     const int_T      order,         /* Order of estimation */
                     const creal32_T *u,             /* Input pointer */
                           creal32_T *ef,            /* Intermediate variable */
                           creal32_T *eb,            /* Intermediate variable */
                           creal32_T *anew,          /* Intermediate AR coeffients */
                           creal32_T *Acoef,         /* A - Output pointer */
                           creal32_T *Kcoef,         /* A - Output pointer */
                           real32_T  *Error
                     );

IMPORT_FCN void MWDSP_Burg_AK_D(const int_T   N,             /* Input array length */
                     const int_T   order,         /* Order of estimation */
                     const real_T *u,                /* Input pointer */
                           real_T *ef,               /* Intermediate variable */
                           real_T *eb,               /* Intermediate variable */
                           real_T *anew,             /* Intermediate AR coeffients */
                           real_T *Acoef,            /* A - Output pointer */
                           real_T *Kcoef,            /* A - Output pointer */
                           real_T *Error
                     );

IMPORT_FCN void MWDSP_Burg_AK_R(const int_T     N,             /* Input array length */
                     const int_T     order,         /* Order of estimation */
                     const real32_T *u,           /* Input pointer */
                           real32_T *ef,          /* Intermediate variable */
                           real32_T *eb,          /* Intermediate variable */
                           real32_T *anew,        /* Intermediate AR coeffients */
                           real32_T *Acoef,       /* A - Output pointer */
                           real32_T *Kcoef,       /* A - Output pointer */
                           real32_T *Error
                     );

IMPORT_FCN void MWDSP_Burg_AK_Z(const int_T    N,             /* Input array length */
                     const int_T    order,         /* Order of estimation */
                     const creal_T *u,             /* Input pointer */
                           creal_T *ef,            /* Intermediate variable */
                           creal_T *eb,            /* Intermediate variable */
                           creal_T *anew,          /* Intermediate AR coeffients */
                           creal_T *Acoef,         /* A - Output pointer */
                           creal_T *Kcoef,         /* A - Output pointer */
                           real_T  *Error
                     );

IMPORT_FCN void MWDSP_Burg_K_C(const int_T      N,             /* Input array length */
                    const int_T      order,         /* Order of estimation */
                    const creal32_T *u,             /* Input pointer */
                          creal32_T *ef,            /* Intermediate variable */
                          creal32_T *eb,            /* Intermediate variable */
                          creal32_T *Kcoef,         /* A - Output pointer */
                          real32_T  *Error
                    );

IMPORT_FCN void MWDSP_Burg_K_D(const int_T   N,             /* Input array length */
                    const int_T   order,         /* Order of estimation */
                    const real_T *u,             /* Input pointer */
                          real_T *ef,            /* Intermediate variable */
                          real_T *eb,            /* Intermediate variable */
                          real_T *Kcoef,         /* A - Output pointer */
                          real_T *Error
                    );

IMPORT_FCN void MWDSP_Burg_K_R(const int_T     N,             /* Input array length */
                    const int_T     order,         /* Order of estimation */
                    const real32_T *u,             /* Input pointer */
                          real32_T *ef,            /* Intermediate variable */
                          real32_T *eb,            /* Intermediate variable */
                          real32_T *Kcoef,         /* A - Output pointer */
                          real32_T *Error
                    );

IMPORT_FCN void MWDSP_Burg_K_Z(const int_T    N,             /* Input array length */
                    const int_T    order,         /* Order of estimation */
                    const creal_T *u,             /* Input pointer */
                          creal_T *ef,            /* Intermediate variable */
                          creal_T *eb,            /* Intermediate variable */
                          creal_T *Kcoef,         /* A - Output pointer */
                          real_T  *Error
                    );

IMPORT_FCN void MWDSP_Chol_C(creal32_T *A, int_T n);

IMPORT_FCN void MWDSP_Chol_D(real_T *A, int_T n);

IMPORT_FCN void MWDSP_Chol_R(real32_T *A, int_T n);

IMPORT_FCN void MWDSP_Chol_Z(creal_T *A, int_T n);

IMPORT_FCN void MWDSP_CICDecLat0808(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat0816(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat0832(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat1608(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat1616(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat1632(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat3208(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat3216(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecLat3232(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer0808(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer0816(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer0832(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer1608(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer1616(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer1632(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer3208(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer3216(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICDecZer3232(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    const int32_T *stgShifts,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat0808(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat0816(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat0832(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat1608(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat1616(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat1632(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat3208(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat3216(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntLat3232(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer0808(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer0816(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer0832(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int8_T  *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer1608(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer1616(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer1632(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int16_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer3208(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int8_T        *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer3216(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int16_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_CICIntZer3232(
    int            R,
    int            N,
    int            nChans,
    int            nFrames,
    const int32_T *inp,
    int32_T       *out,
    int32_T       *states,
    int            statesPerChanSize,
    const int32_T *stgInpWLs,
    int32_T        finalOutShiftVal,
    int            phase,
    int            ioStride);

IMPORT_FCN void MWDSP_Conv_TD_CC(
    const creal32_T  *inPtrA,
    int_T            nRowsA,
    boolean_T        multiChanA,
    const creal32_T  *inPtrB,
    int_T            nRowsB,
    boolean_T        multiChanB,
    creal32_T        *outPtr,
    int_T            nRowsY,
    int_T            nChansY
);

IMPORT_FCN void MWDSP_Conv_TD_DD(
    const real_T  *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const real_T  *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    real_T        *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN void MWDSP_Conv_TD_DZ(
    const real_T  *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const creal_T  *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    creal_T        *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN void MWDSP_Conv_TD_RC(
    const real32_T   *inPtrA,
    int_T            nRowsA,
    boolean_T        multiChanA,
    const creal32_T  *inPtrB,
    int_T            nRowsB,
    boolean_T        multiChanB,
    creal32_T        *outPtr,
    int_T            nRowsY,
    int_T            nChansY
);

IMPORT_FCN void MWDSP_Conv_TD_RR(
    const real32_T  *inPtrA,
    int_T           nRowsA,
    boolean_T       multiChanA,
    const real32_T  *inPtrB,
    int_T           nRowsB,
    boolean_T       multiChanB,
    real32_T        *outPtr,
    int_T           nRowsY,
    int_T           nChansY
);

IMPORT_FCN void MWDSP_Conv_TD_ZZ(
    const creal_T  *inPtrA,
    int_T          nRowsA,
    boolean_T      multiChanA,
    const creal_T  *inPtrB,
    int_T          nRowsB,
    boolean_T      multiChanB,
    creal_T        *outPtr,
    int_T          nRowsY,
    int_T          nChansY
);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_CC(const creal32_T *u, const int_T Nu, creal32_T *y, const int_T Ny);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_DZ(const real_T *u, const int_T Nu, creal_T *y, const int_T Ny);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_RC(const real32_T *u, const int_T Nu, creal32_T *y, const int_T Ny);

IMPORT_FCN void MWDSP_Copy_and_ZeroPad_ZZ(const creal_T *u, const int_T Nu, creal_T *y, const int_T Ny);

IMPORT_FCN void MWDSP_Corr_TD_CC(
    const creal32_T *inPtrA,
    int_T           nRowsA,
    boolean_T       multiChanA,
    const creal32_T *inPtrB,
    int_T           nRowsB,
    boolean_T       multiChanB,
    creal32_T       *outPtr,
    int_T           nRowsY,
    int_T           nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_CR(
    const creal32_T *inPtrA,
    int_T           nRowsA,
    boolean_T       multiChanA,
    const real32_T  *inPtrB,
    int_T           nRowsB,
    boolean_T       multiChanB,
    creal32_T       *outPtr,
    int_T           nRowsY,
    int_T           nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_DD(
    const real_T  *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const real_T  *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    real_T        *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_DZ(
    const real_T  *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const creal_T *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    creal_T       *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_RC(
    const real32_T  *inPtrA,
    int_T           nRowsA,
    boolean_T       multiChanA,
    const creal32_T *inPtrB,
    int_T           nRowsB,
    boolean_T       multiChanB,
    creal32_T       *outPtr,
    int_T           nRowsY,
    int_T           nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_RR(
    const real32_T  *inPtrA,
    int_T           nRowsA,
    boolean_T       multiChanA,
    const real32_T  *inPtrB,
    int_T           nRowsB,
    boolean_T       multiChanB,
    real32_T        *outPtr,
    int_T           nRowsY,
    int_T           nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_ZD(
    const creal_T *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const real_T  *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    creal_T       *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN void MWDSP_Corr_TD_ZZ(
    const creal_T *inPtrA,
    int_T         nRowsA,
    boolean_T     multiChanA,
    const creal_T *inPtrB,
    int_T         nRowsB,
    boolean_T     multiChanB,
    creal_T       *outPtr,
    int_T         nRowsY,
    int_T         nChansY
);

IMPORT_FCN int_T isLittleEndian(void);

IMPORT_FCN EventPortEvent MWDSP_EPHZCFcn(EventPortMode      direction,
                                     EventPortSigState *prevSigStatePtr,
                                     EventPortSigState  currSigState);

IMPORT_FCN void MWDSP_BSub_NU_CC_C(
        const creal32_T *pU,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_NU_CR_C(
        const creal32_T *pU,
        const real32_T  *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_NU_DD_D(
        const real_T *pU,
        const real_T *pb,
              real_T  *x,
        const int_T    N,
        const int_T    P
        );

IMPORT_FCN void MWDSP_BSub_NU_DZ_Z(
        const real_T  *pU,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_BSub_NU_RC_C(
        const real32_T  *pU,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_NU_RR_R(
        const real32_T *pU,
        const real32_T *pb,
              real32_T  *x,
        const int_T      N,
        const int_T      P
        );

IMPORT_FCN void MWDSP_BSub_NU_ZD_Z(
        const creal_T *pU,
        const real_T  *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_BSub_NU_ZZ_Z(
        const creal_T *pU,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_BSub_U_CC_C(
        const creal32_T *pU,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_U_CR_C(
        const creal32_T *pU,
        const real32_T  *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_U_DD_D(
        const real_T *pU,
        const real_T *pb,
              real_T  *x,
        const int_T    N,
        const int_T    P
        );

IMPORT_FCN void MWDSP_BSub_U_DZ_Z(
        const real_T  *pU,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_BSub_U_RC_C(
        const real32_T  *pU,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_BSub_U_RR_R(
        const real32_T *pU,
        const real32_T *pb,
              real32_T  *x,
        const int_T      N,
        const int_T      P
        );

IMPORT_FCN void MWDSP_BSub_U_ZD_Z(
        const creal_T *pU,
        const real_T  *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_BSub_U_ZZ_Z(
        const creal_T *pU,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_NU_CC_C(
        const creal32_T *pL,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_NU_CR_C(
        const creal32_T *pL,
        const real32_T  *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_NU_DD_D(
        const real_T  *pL,
        const real_T  *pb,
              real_T   *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_NU_DZ_Z(
        const real_T  *pL,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_NU_RC_C(
        const real32_T  *pL,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_NU_RR_R(
        const real32_T *pL,
        const real32_T *pb,
              real32_T  *x,
        const int_T      N,
        const int_T      P
        );

IMPORT_FCN void MWDSP_FSub_NU_ZD_Z(
        const creal_T *pL,
        const real_T  *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_NU_ZZ_Z(
        const creal_T *pL,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_U_CC_C(
        const creal32_T *pL,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_U_CR_C(
        const creal32_T *pL,
        const real32_T  *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_U_DD_D(
        const real_T  *pL,
        const real_T  *pb,
              real_T   *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_U_DZ_Z(
        const real_T  *pL,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_U_RC_C(
        const real32_T  *pL,
        const creal32_T *pb,
              creal32_T  *x,
        const int_T       N,
        const int_T       P
        );

IMPORT_FCN void MWDSP_FSub_U_RR_R(
        const real32_T *pL,
        const real32_T *pb,
              real32_T  *x,
        const int_T      N,
        const int_T      P
        );

IMPORT_FCN void MWDSP_FSub_U_ZD_Z(
        const creal_T *pL,
        const real_T  *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_FSub_U_ZZ_Z(
        const creal_T *pL,
        const creal_T *pb,
              creal_T  *x,
        const int_T     N,
        const int_T     P
        );

IMPORT_FCN void MWDSP_copyAdjRowsIntColBR_C(
     creal32_T *y, 
     const real32_T *x,
     const int_T nCols,
     const int_T nRows,
     const int_T rowIdx);

IMPORT_FCN void MWDSP_copyAdjRowsIntColBR_Z(
     creal_T *y, 
     const real_T *x,
     const int_T nCols,
     const int_T nRows,
     const int_T rowIdx);

IMPORT_FCN void MWDSP_copyAdjRowsIntCol_C(
     creal32_T *y, 
     const real32_T *x,
     const int_T nCols,
     const int_T nRows,
     const int_T rowIdx);

IMPORT_FCN void MWDSP_copyAdjRowsIntCol_Z(
     creal_T *y, 
     const real_T *x,
     const int_T nCols,
     const int_T nRows,
     const int_T rowIdx);

IMPORT_FCN void MWDSP_CopyColAsRow_C(
    creal32_T          *y,
    const creal32_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyColAsRow_Z(
    creal_T          *y,
    const creal_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsColBR_C(
    creal32_T          *y,
    const creal32_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsColBR_D(
    real_T           *y,
    const real_T     *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsColBR_DZ(
    creal_T          *y,
    const real_T     *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsColBR_RC(
    creal32_T          *y,
    const real32_T     *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsColBR_Z(
    creal_T          *y,
    const creal_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsCol_C(
    creal32_T          *y,
    const creal32_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsCol_DZ(
    creal_T          *y,
    const real_T     *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsCol_RC(
    creal32_T          *y,
    const real32_T     *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_CopyRowAsCol_Z(
    creal_T          *y,
    const creal_T    *x,
    const int_T       nCols,
    const int_T       nRows,
    const int_T       rowIdx
    );

IMPORT_FCN void MWDSP_DblLen_TBL_C(
    creal32_T      *y,
    const int_T     nRows,
    const real32_T *twiddleTable,
    const int_T     twiddleStep
    );

IMPORT_FCN void MWDSP_DblLen_TBL_Z(
    creal_T      *y,
    const int_T   nRows,
    const real_T *twiddleTable,
    const int_T   twiddleStep
    );

IMPORT_FCN void MWDSP_DblLen_TRIG_C(
    creal32_T  *y,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_DblLen_TRIG_Z(
    creal_T  *y,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_DblSig_BR_C(
    creal32_T  *y,
    int_T       nChans,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_DblSig_BR_Z(
    creal_T    *y,
    int_T       nChans,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_DblSig_C(
    creal32_T  *y,
    int_T       nChans,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_DblSig_Z(
    creal_T    *y,
    int_T       nChans,
    const int_T nRows
    );

IMPORT_FCN void MWDSP_FFTInterleave_BR_D(
    creal_T      *y,
    const real_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_FFTInterleave_BR_R(
    creal32_T      *y,
    const real32_T *u,
    const int_T     nChans,
    const int_T     nRows
    );

IMPORT_FCN void MWDSP_FFTInterleave_D(
    creal_T      *y,
    const real_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_FFTInterleave_R(
    creal32_T      *y,
    const real32_T *u,
    const int_T     nChans,
    const int_T     nRows
    );

IMPORT_FCN void MWDSP_R2BR_C_OOP(
    creal32_T       *y,
    const creal32_T *x,
    int_T            nChans,
    const int_T      nRows,
    const int_T      fftLen
    );

IMPORT_FCN void MWDSP_R2BR_C(
    creal32_T  *y,
    int_T       nChans,
    const int_T nRows,
    const int_T fftLen
    );

IMPORT_FCN void MWDSP_R2BR_DZ_OOP(
    creal_T       *y,
    const  real_T *x,
    int_T          nChans,
    const int_T    nRows,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_R2BR_RC_OOP(
    creal32_T       *y,
    const  real32_T *x,
    int_T            nChans,
    const int_T      nRows,
    const int_T      fftLen
    );

IMPORT_FCN void MWDSP_R2BR_Z_OOP(
    creal_T       *y,
    const creal_T *x,
    int_T          nChans,
    const int_T    nRows,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_R2BR_Z(
    creal_T    *y,
    int_T       nChans,
    const int_T nRows,
    const int_T fftLen
    );

IMPORT_FCN void MWDSP_R2DIF_TBLM_C(
    creal32_T      *y,
    int_T           nChans,
    const int_T     nRows,
    const int_T     fftLen,
    const real32_T *twiddleTable,
    const int_T     twiddleStep,
    const int_T     isInverse
    );

IMPORT_FCN void MWDSP_R2DIF_TBLM_Z(
    creal_T      *y,
    int_T         nChans,
    const int_T   nRows,
    const int_T   fftLen,
    const real_T *twiddleTable,
    const int_T   twiddleStep,
    const int_T   isInverse
    );

IMPORT_FCN void MWDSP_R2DIF_TBLS_C(
    creal32_T      *y,
    int_T           nChans,
    const int_T     nRows,
    const int_T     fftLen,
    const real32_T *twiddleTable,
    const int_T     twiddleStep,
    const int_T     isInverse
    );

IMPORT_FCN void MWDSP_R2DIF_TBLS_Z(
    creal_T      *y,
    int_T         nChans,
    const int_T   nRows,
    const int_T   fftLen,
    const real_T *twiddleTable,
    const int_T   twiddleStep,
    const int_T   isInverse
    );

IMPORT_FCN void MWDSP_R2DIF_TRIG_C(
    creal32_T   *y,
    int_T        nChans,
    const int_T  nRows,
    const int_T  fftLen,
    const int_T  isInverse
    );

IMPORT_FCN void MWDSP_R2DIF_TRIG_Z(
    creal_T    *y,
    int_T       nChans,
    const int_T nRows,
    const int_T fftLen,
    const int_T isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TBLM_C(
    creal32_T      *y,
    int_T           nChans,
    const int_T     nRows,
    const int_T     fftLen,
    const real32_T *twiddleTable,
    const int_T     twiddleStep,
    const int_T     isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TBLM_Z(
    creal_T      *y,
    int_T         nChans,
    const int_T   nRows,
    const int_T   fftLen,
    const real_T *twiddleTable,
    const int_T   twiddleStep,
    const int_T   isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TBLS_C(
    creal32_T      *y,
    int_T           nChans,
    const int_T     nRows,
    const int_T     fftLen,
    const real32_T *twiddleTable,
    const int_T     twiddleStep,
    const int_T     isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TBLS_Z(
    creal_T      *y,
    int_T         nChans,
    const int_T   nRows,
    const int_T   fftLen,
    const real_T *twiddleTable,
    const int_T   twiddleStep,
    const int_T   isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TRIG_C(
    creal32_T  *y,
    int_T       nChans,
    const int_T nRows,
    const int_T fftLen,
    const int_T isInverse
    );

IMPORT_FCN void MWDSP_R2DIT_TRIG_Z(
    creal_T    *y,
    int_T       nChans,
    const int_T nRows,
    const int_T fftLen,
    const int_T isInverse
    );

IMPORT_FCN void MWDSP_ScaleData_DD(
    real_T      *realData,
    int_T        cnt,
    const real_T scaleFactor
    );

IMPORT_FCN void MWDSP_ScaleData_DZ(
    creal_T     *cplxData,
    int_T        cnt,
    const real_T scaleFactor
    );

IMPORT_FCN void MWDSP_ScaleData_RC(
    creal32_T     *cplxData,
    int_T          cnt,
    const real32_T scaleFactor
    );

IMPORT_FCN void MWDSP_ScaleData_RR(
    real32_T      *realData,
    int_T          cnt,
    const real32_T scaleFactor
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_C_C_OOP(
    creal32_T *y,
    const creal32_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_C_Cbr_OOP(
    creal32_T *y,
    const creal32_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_D_Z_Oop(
    creal_T *y,
    const real_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_D_Zbr_Oop(
    creal_T *y,
    const real_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_R_C_Oop(
    creal32_T *y,
    const real32_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_R_Cbr_Oop(
    creal32_T *y,
    const real32_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_Z_Z_OOP(
    creal_T *y,
    const creal_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_AddCSSignals_Z_Zbr_OOP(
    creal_T *y,
    const creal_T *u,
    const int_T   nChans,
    const int_T   nRows
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_C_Cbr_Oop(
    creal32_T       *y,
    const creal32_T *x,
    const int_T      fftLen,
    const real32_T  *twiddleTable,
    const int_T      twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_Cbr_Cbr_Oop(
    creal32_T       *y,
    const creal32_T *x,
    const int_T    fftLen,
    const real32_T  *twiddleTable,
    const int_T      twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_D_Zbr_Oop(
    creal_T       *y,
    const real_T  *x,
    const int_T    fftLen,
    const real_T  *twiddleTable,
    const int_T    twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_Dbr_Zbr_Oop(
    creal_T       *y,
    const real_T  *x,
    const int_T    fftLen,
    const real_T  *twiddleTable,
    const int_T    twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_R_Cbr_Oop(
    creal32_T       *y,
    const real32_T  *x,
    const int_T      fftLen,
    const real32_T  *twiddleTable,
    const int_T      twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_Rbr_Cbr_Oop(
    creal32_T       *y,
    const real32_T  *x,
    const int_T      fftLen,
    const real32_T  *twiddleTable,
    const int_T      twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_Z_Zbr_Oop(
    creal_T       *y,
    const creal_T *x,
    const int_T    fftLen,
    const real_T  *twiddleTable,
    const int_T    twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TBL_Zbr_Zbr_Oop(
    creal_T       *y,
    const creal_T *x,
    const int_T    fftLen,
    const real_T  *twiddleTable,
    const int_T    twiddleStep
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_C_Cbr_Oop(
    creal32_T       *y,
    const creal32_T *x,
    const int_T      fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_Cbr_Cbr_Oop(
    creal32_T       *y,
    const creal32_T *x,
    const int_T      fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_D_Zbr_Oop(
    creal_T       *y,
    const real_T  *x,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_Dbr_Zbr_Oop(
    creal_T       *y,
    const real_T  *x,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_R_Cbr_Oop(
    creal32_T      *y,
    const real32_T *x,
    const int_T     fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_Rbr_Cbr_Oop(
    creal32_T      *y,
    const real32_T *x,
    const int_T     fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_Z_Zbr_Oop(
    creal_T       *y,
    const creal_T *x,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_Ifft_DblLen_TRIG_Zbr_Zbr_Oop(
    creal_T       *y,
    const creal_T *x,
    const int_T    fftLen
    );

IMPORT_FCN void MWDSP_Ifft_Deinterleave_D_D_Inp(real_T *y, const int_T nChans, const int_T N, real_T *tmp);

IMPORT_FCN void MWDSP_Ifft_Deinterleave_R_R_Inp(real32_T *y, const int_T nChans, const int_T N, real32_T *tmp);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_CC(
    const creal32_T       *u,      
          creal32_T       *filtLongOutputBase,
          creal32_T       *filtShortOutputBase,            
          creal32_T       *tap0,              
          creal32_T       *sums,              
    const creal32_T *const filtLong,  
    const creal32_T *const filtShort,          
          int32_T         *tapIdx,            
          int32_T         *phaseIdx,
    const int_T          numChans,
    const int_T          inFrameSize,
    const int_T          polyphaseFiltLenLong,
    const int_T          polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_CR(
    const creal32_T       *u,      
          creal32_T       *filtLongOutputBase,
          creal32_T       *filtShortOutputBase,            
          creal32_T       *tap0,              
          creal32_T       *sums,              
    const real32_T *const  filtLong,  
    const real32_T *const  filtShort,          
          int32_T         *tapIdx,            
          int32_T         *phaseIdx,
    const int_T          numChans,
    const int_T          inFrameSize,
    const int_T          polyphaseFiltLenLong,
    const int_T          polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_DD(
    const real_T        *u,      
          real_T        *filtLongOutputBase,
          real_T        *filtShortOutputBase,            
          real_T        *tap0,              
          real_T        *sums,              
    const real_T *const  filtLong,  
    const real_T *const  filtShort,          
          int32_T         *tapIdx,            
          int32_T         *phaseIdx,
    const int_T          numChans,
    const int_T          inFrameSize,          
    const int_T          polyphaseFiltLenLong,
    const int_T          polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_RR(
    const real32_T        *u,      
          real32_T        *filtLongOutputBase,
          real32_T        *filtShortOutputBase,            
          real32_T        *tap0,              
          real32_T        *sums,              
    const real32_T *const  filtLong,  
    const real32_T *const  filtShort,          
          int32_T          *tapIdx,            
          int32_T          *phaseIdx,
    const int_T           numChans,
    const int_T           inFrameSize,          
    const int_T           polyphaseFiltLenLong,
    const int_T           polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_ZD(
    const creal_T       *u,      
          creal_T       *filtLongOutputBase,
          creal_T       *filtShortOutputBase,            
          creal_T       *tap0,              
          creal_T       *sums,              
    const real_T *const  filtLong,  
    const real_T *const  filtShort,          
          int32_T         *tapIdx,            
          int32_T         *phaseIdx,
    const int_T          numChans,
    const int_T          inFrameSize,
    const int_T          polyphaseFiltLenLong,
    const int_T          polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChABank_Fr_DF_ZZ(
    const creal_T       *u,      
          creal_T       *filtLongOutputBase,
          creal_T       *filtShortOutputBase,            
          creal_T       *tap0,              
          creal_T       *sums,              
    const creal_T *const filtLong,  
    const creal_T *const filtShort,          
          int32_T         *tapIdx,            
          int32_T         *phaseIdx,
    const int_T          numChans,
    const int_T          inFrameSize,
    const int_T          polyphaseFiltLenLong,
    const int_T          polyphaseFiltLenShort
);

IMPORT_FCN void MWDSP_2ChSBank_DF_CC(
    const creal32_T        *inputToLongFilt, 
    const creal32_T        *inputToShortFilt, 
          creal32_T        *out,
          creal32_T        *longFiltTapBuf,
          creal32_T        *shortFiltTapBuf,              
    const creal32_T *const  longFilt,  
    const creal32_T *const  shortFilt,          
          int32_T          *longFiltTapIdx, 
          int32_T          *shortFiltTapIdx, 
    const int_T           numChans,
    const int_T           inFrameSize,          
    const int_T           polyphaseLongFiltLen,
    const int_T           polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_2ChSBank_DF_CR(
    const creal32_T       *inputToLongFilt, 
    const creal32_T       *inputToShortFilt, 
          creal32_T       *out,
          creal32_T       *longFiltTapBuf,
          creal32_T       *shortFiltTapBuf,              
    const real32_T *const  longFilt,  
    const real32_T *const  shortFilt,          
          int32_T         *longFiltTapIdx, 
          int32_T         *shortFiltTapIdx, 
    const int_T          numChans,
    const int_T          inFrameSize,          
    const int_T          polyphaseLongFiltLen,
    const int_T          polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_2ChSBank_DF_DD(
    const real_T        *inputToLongFilt, 
    const real_T        *inputToShortFilt, 
          real_T        *out,
          real_T        *longFiltTapBuf,
          real_T        *shortFiltTapBuf,              
    const real_T *const  longFilt,  
    const real_T *const  shortFilt,          
          int32_T         *longFiltTapIdx, 
          int32_T         *shortFiltTapIdx, 
    const int_T          numChans,
    const int_T          inFrameSize,          
    const int_T          polyphaseLongFiltLen,
    const int_T          polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_2ChSBank_DF_RR(
    const real32_T        *inputToLongFilt, 
    const real32_T        *inputToShortFilt, 
          real32_T        *out,
          real32_T        *longFiltTapBuf,
          real32_T        *shortFiltTapBuf,              
    const real32_T *const  longFilt,  
    const real32_T *const  shortFilt,          
          int32_T           *longFiltTapIdx, 
          int32_T           *shortFiltTapIdx, 
    const int_T            numChans,
    const int_T            inFrameSize,          
    const int_T            polyphaseLongFiltLen,
    const int_T            polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_2ChSBank_DF_ZD(
    const creal_T       *inputToLongFilt, 
    const creal_T       *inputToShortFilt, 
          creal_T       *out,
          creal_T       *longFiltTapBuf,
          creal_T       *shortFiltTapBuf,              
    const real_T *const  longFilt,  
    const real_T *const  shortFilt,          
          int32_T         *longFiltTapIdx, 
          int32_T         *shortFiltTapIdx, 
    const int_T          numChans,
    const int_T          inFrameSize,          
    const int_T          polyphaseLongFiltLen,
    const int_T          polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_2ChSBank_DF_ZZ(
    const creal_T        *inputToLongFilt, 
    const creal_T        *inputToShortFilt, 
          creal_T        *out,
          creal_T        *longFiltTapBuf,
          creal_T        *shortFiltTapBuf,              
    const creal_T *const  longFilt,  
    const creal_T *const  shortFilt,          
          int32_T          *longFiltTapIdx, 
          int32_T          *shortFiltTapIdx, 
    const int_T           numChans,
    const int_T           inFrameSize,          
    const int_T           polyphaseLongFiltLen,
    const int_T           polyphaseShortFiltLen
);

IMPORT_FCN void MWDSP_FIR_DF_CC(const creal32_T        *u,
                            creal32_T        *y,
                            creal32_T * const mem_base,
                            int32_T          *mem_offset,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal32_T * const b,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_CR(const creal32_T        *u,
                            creal32_T        *y,
                            creal32_T * const mem_base,
                            int32_T          *mem_offset,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const real32_T * const  b,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_DD(const real_T        *u,
                            real_T        *y,
                            real_T * const mem_base,
                            int32_T         *mem_offset,
                      const int_T          numDelays,
                      const int_T          sampsPerChan,
                      const int_T          numChans,
                      const real_T * const b,
                      const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_DZ(const real_T         *u,
                           creal_T        *y,
                           creal_T * const mem_base,
                           int32_T          *mem_offset,
                     const int_T           numDelays,
                     const int_T           sampsPerChan,
                     const int_T           numChans,
                     const creal_T * const b,
                     const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_RC(const real32_T         *u,
                           creal32_T        *y,
                           creal32_T * const mem_base,
                           int32_T            *mem_offset,
                     const int_T             numDelays,
                     const int_T             sampsPerChan,
                     const int_T             numChans,
                     const creal32_T * const b,
                     const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_RR(const real32_T        *u,
                            real32_T        *y,
                            real32_T * const mem_base,
                            int32_T           *mem_offset,
                      const int_T            numDelays,
                      const int_T            sampsPerChan,
                      const int_T            numChans,
                      const real32_T * const b,
                      const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_ZD(const creal_T        *u,
                            creal_T        *y,
                            creal_T * const mem_base,
                            int32_T          *mem_offset,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const real_T * const  b,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_DF_ZZ(const creal_T        *u,
                            creal_T        *y,
                            creal_T * const mem_base,
                            int32_T          *mem_offset,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal_T * const b,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_CC(const creal32_T         *u,
                      creal32_T               *y,
                      creal32_T *             mem_base,
                      const int_T             sampsPerChan,
                      const int_T             numChans,
                      const creal32_T * const K_first,
                      const int_T             ordK,
                      const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_CR(const creal32_T        *u,
                      creal32_T              *y,
                      creal32_T *            mem_base,
                      const int_T            sampsPerChan,
                      const int_T            numChans,
                      const real32_T * const K_first,
                      const int_T            ordK,
                      const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_DD(const real_T         *u,
                      real_T               *y,
                      real_T *             mem_base,
                      const int_T          sampsPerChan,
                      const int_T          numChans,
                      const real_T * const K_first,
                      const int_T          ordK,
                      const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_DZ(const real_T          *u,
                      creal_T               *y,
                      creal_T *             mem_base,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal_T * const K_first,
                      const int_T           ordK,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_RC(const real32_T          *u,
                      creal32_T               *y,
                      creal32_T *             mem_base,
                      const int_T             sampsPerChan,
                      const int_T             numChans,
                      const creal32_T * const K_first,
                      const int_T             ordK,
                      const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_RR(const real32_T         *u,
                      real32_T               *y,
                      real32_T *             mem_base,
                      const int_T            sampsPerChan,
                      const int_T            numChans,
                      const real32_T * const K_first,
                      const int_T            ordK,
                      const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_ZD(const creal_T        *u,
                      creal_T              *y,
                      creal_T *            mem_base,
                      const int_T          sampsPerChan,
                      const int_T          numChans,
                      const real_T * const K_first,
                      const int_T          ordK,
                      const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_FIR_Lat_ZZ(const creal_T         *u,
                      creal_T               *y,
                      creal_T *             mem_base,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal_T * const K_first,
                      const int_T           ordK,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_CC(const creal32_T         *u,
                      creal32_T               *y,
                      creal32_T * const       mem_base,
                      const int_T             numDelays,
                      const int_T             sampsPerChan,
                      const int_T             numChans,
                      const creal32_T * const num,
                      const int_T             ordNUM,
                      const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_CR(const creal32_T         *u,
                      creal32_T               *y,
                      creal32_T * const       mem_base,
                      const int_T             numDelays,
                      const int_T             sampsPerChan,
                      const int_T             numChans,
                      const real32_T * const  num,
                      const int_T             ordNUM,
                      const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_DD(const real_T         *u,
                      real_T               *y,
                      real_T * const       mem_base,
                      const int_T          numDelays,
                      const int_T          sampsPerChan,
                      const int_T          numChans,
                      const real_T * const num,
                      const int_T          ordNUM,
                      const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_DZ(const real_T          *u,
                      creal_T               *y,
                      creal_T * const       mem_base,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal_T * const num,
                      const int_T           ordNUM,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_RC(const real32_T          *u,
                      creal32_T               *y,
                      creal32_T * const       mem_base,
                      const int_T             numDelays,
                      const int_T             sampsPerChan,
                      const int_T             numChans,
                      const creal32_T * const num,
                      const int_T             ordNUM,
                      const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_RR(const real32_T         *u,
                      real32_T               *y,
                      real32_T * const       mem_base,
                      const int_T            numDelays,
                      const int_T            sampsPerChan,
                      const int_T            numChans,
                      const real32_T * const num,
                      const int_T            ordNUM,
                      const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_ZD(const creal_T         *u,
                      creal_T               *y,
                      creal_T * const       mem_base,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const real_T * const  num,
                      const int_T           ordNUM,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIR_TDF_ZZ(const creal_T         *u,
                      creal_T               *y,
                      creal_T * const       mem_base,
                      const int_T           numDelays,
                      const int_T           sampsPerChan,
                      const int_T           numChans,
                      const creal_T * const num,
                      const int_T           ordNUM,
                      const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_CC(
    const creal32_T   *u,
          creal32_T   *yout,
          creal32_T   *tap0,
          creal32_T   *sums,
    const creal32_T   *filter,
    const creal32_T   **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_CR(
    const creal32_T   *u,
          creal32_T   *yout,
          creal32_T   *tap0,
          creal32_T   *sums,
    const real32_T    *filter,
    const real32_T   **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_DD(
    const real_T    *u,      
          real_T    *yout,             
          real_T    *tap0,              
          real_T    *sums,              
    const real_T    *filter,            
    const real_T   **cffPtr,            
          int32_T     *tapIdx,            
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_DZ(
    const real_T    *u,
          creal_T   *yout,
          real_T    *tap0,
          creal_T   *sums,
    const creal_T   *filter,
    const creal_T  **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_RC(
    const real32_T    *u,
          creal32_T   *yout,
          real32_T    *tap0,
          creal32_T   *sums,
    const creal32_T   *filter,
    const creal32_T  **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_RR(
    const real32_T    *u,
          real32_T    *yout,
          real32_T    *tap0,
          real32_T    *sums,
    const real32_T    *filter,
    const real32_T   **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_ZD(
    const creal_T   *u,
          creal_T   *yout,
          creal_T   *tap0,
          creal_T   *sums,
    const real_T    *filter,
    const real_T   **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FIRDn_DF_DblBuf_ZZ(
    const creal_T   *u,
          creal_T   *yout,
          creal_T   *tap0,
          creal_T   *sums,
    const creal_T   *filter,
    const creal_T   **cffPtr,
          int32_T     *tapIdx,
          int32_T     *outIdx,
          int32_T     *phaseIdx,
          boolean_T *wrtBuf,
    const int_T     filtLen,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     outFrameSize,
    const int_T     dFactor,
    const int_T     polyphaseFiltLen,
    const int_T     outElem
);

IMPORT_FCN void MWDSP_FlipMatrixColIP(byte_T  *y,
                           int_T    numRows,
                           int_T    numCols,
                           int_T    bytesPerElement);

IMPORT_FCN void MWDSP_FlipMatrixColOP(const byte_T *u,
                           byte_T       *y,
                           int_T         numRows,
                           int_T         numCols,
                           int_T         bytesPerElement);

IMPORT_FCN void MWDSP_FlipMatrixRowIP(byte_T  *y,
                           int_T    numRows,
                           int_T    numCols,
                           int_T    bytesPerElement);

IMPORT_FCN void MWDSP_FlipMatrixRowOP(const byte_T *u,
                           byte_T       *y,
                           int_T         numRows,
                           int_T         numCols,
                           int_T         bytesPerElement);

IMPORT_FCN void MWDSP_FlipVectorIP(byte_T  *y,
                        int_T  numRows,
                        int_T  numCols,
                        int_T  bytesPerElement);

IMPORT_FCN void MWDSP_FlipVectorOP(const byte_T *u,
                        byte_T       *y,
                        int_T        numRows,
                        int_T        numCols,
                        int_T        bytesPerElement);

IMPORT_FCN void MWDSP_G711EncASat(const int16_T *u, uint8_T *y, int nElems);

IMPORT_FCN void MWDSP_G711EncAWrap(const int16_T *u, uint8_T *y, int nElems);

IMPORT_FCN void MWDSP_G711EncMuSat(const int16_T *u, uint8_T *y, int nElems);

IMPORT_FCN void MWDSP_G711EncMuWrap(const int16_T *u, uint8_T *y, int nElems);

IMPORT_FCN void rotg(real_T *x, real_T *y, real_T *c, real_T *s);

IMPORT_FCN void rotg32(real32_T *x, real32_T *y, real32_T *c, real32_T *s);

IMPORT_FCN void MWDSP_Hist_BinSearch_S08(int_T     firstBin, 
                                         int_T     lastBin, 
                                         int8_T    data, 
                                         const int8_T    *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_Hist_BinSearch_S16(int_T     firstBin, 
                                         int_T     lastBin, 
                                         int16_T   data, 
                                         const int16_T   *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_Hist_BinSearch_S32(int_T     firstBin, 
                                         int_T     lastBin, 
                                         int32_T   data, 
                                         const int32_T   *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_Hist_BinSearch_U08(int_T     firstBin, 
                                         int_T     lastBin, 
                                         uint8_T   data, 
                                         const uint8_T   *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_Hist_BinSearch_U16(int_T     firstBin, 
                                         int_T     lastBin, 
                                         uint16_T  data, 
                                         const uint16_T  *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_Hist_BinSearch_U32(int_T     firstBin, 
                                         int_T     lastBin, 
                                         uint32_T  data, 
                                         const uint32_T  *bin,
                                         uint32_T  *hist );

IMPORT_FCN void MWDSP_HistC(
        const creal32_T *u_data,
        real32_T *y,
        int_T nChans,
        int_T nSamps,
        real32_T umin,
        real32_T umax, 
        int_T Nbins,
        real32_T idelta);

IMPORT_FCN void MWDSP_HistD(
        const real_T *u_data,
        real_T *y,
        int_T nChans,
        int_T nSamps,
        real_T umin,
        real_T umax, 
        int_T Nbins,
        real_T idelta);

IMPORT_FCN void MWDSP_HistR(
        const real32_T *u_data,
        real32_T *y,
        int_T nChans,
        int_T nSamps,
        real32_T umin,
        real32_T umax, 
        int_T Nbins,
        real32_T idelta);

IMPORT_FCN void MWDSP_HistZ(
        const creal_T *u_data,
        real_T *y,
        int_T nChans,
        int_T nSamps,
        real_T umin,
        real_T umax, 
        int_T Nbins,
        real_T idelta);

IMPORT_FCN void MWDSP_CopyChannelICs( byte_T       *dstBuff, 
                           const byte_T *ICBuff, 
                           int_T         numChans, 
                           const int_T   sampsPerChan,
                           const int_T   bytesPerElem );

IMPORT_FCN void MWDSP_CopyMatrixICs( byte_T       *dstBuff, 
                          const byte_T *ICBuff, 
                          const int_T   numElems, 
                          const int_T   bytesPerElem );

IMPORT_FCN void MWDSP_CopyScalarICs( byte_T       *dstBuff, 
                          const byte_T *ICBuff, 
                          int_T         numElems, 
                          const int_T   bytesPerElem );

IMPORT_FCN void MWDSP_CopyVectorICs( byte_T       *dstBuff, 
                          const byte_T *ICBuff, 
                          int_T         numChans, 
                          const int_T   bytesPerChan );

IMPORT_FCN void MWDSP_CopyScalarICs( byte_T       *dstBuff, 
                                 const byte_T *ICBuff, 
                                 int_T         numElems, 
                                 const int_T   bytesPerElem );

IMPORT_FCN void MWDSP_DelayCopyScalarICs(byte_T *buffer,
                              byte_T *ICPtr,
                              const int_T nChansXdWorkRows,
                              const int_T  bytesPerElement
                              );

IMPORT_FCN void MWDSP_DelayCopyVectorICs(byte_T *buffer,
                              byte_T *ICPtr,
                              int_T nChans,
                              const int_T dWorkRows,
                              const int_T bytesPerElement
                              );

IMPORT_FCN void MWDSP_DelayCopy3DSampMatrixICs(byte_T *buffer,
                                    byte_T *ICPtr,
                                    int_T nChans,
                                    const int_T dWorkRows,
                                    const int_T bytesPerElement,
                                    const int_T dataPortWidth
                                    );

IMPORT_FCN void MWDSP_DelayCopy3DFrameMatrixICs(byte_T *buffer,
                                     byte_T *ICPtr,
                                     int_T nChans,
                                     const int_T dWorkRows,
                                     const int_T bytesPerElement
                                     );

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_CC(const creal32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal32_T * const b,
                                    const int_T          ordNUM,
                                    const creal32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_CR(const creal32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real32_T * const b,
                                    const int_T          ordNUM,
                                    const real32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_DD(const real_T           *u,
                                    real_T           *y,
                                    real_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real_T * const b,
                                    const int_T          ordNUM,
                                    const real_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_DZ(const real_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal_T * const b,
                                    const int_T          ordNUM,
                                    const creal_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_RC(const real32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal32_T * const b,
                                    const int_T          ordNUM,
                                    const creal32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_RR(const real32_T           *u,
                                    real32_T           *y,
                                    real32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real32_T * const b,
                                    const int_T          ordNUM,
                                    const real32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_ZD(const creal_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real_T * const b,
                                    const int_T          ordNUM,
                                    const real_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_A0Scale_ZZ(const creal_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal_T * const b,
                                    const int_T          ordNUM,
                                    const creal_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_CC(const creal32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal32_T * const b,
                                    const int_T          ordNUM,
                                    const creal32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_CR(const creal32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real32_T * const b,
                                    const int_T          ordNUM,
                                    const real32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_DD(  const real_T           *u,
                        real_T           *y,
                        real_T * const    mem_base,
                        int32_T               *mem_offset,
                        const int_T          numDelays,
                        const int_T          sampsPerChan,
                        const int_T          numChans,
                        const real_T * const b,
                        const int_T          ordNUM,
                        const real_T * const a,
                        const int_T          ordDEN,
                        const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_DZ(const real_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal_T * const b,
                                    const int_T          ordNUM,
                                    const creal_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_RC(const real32_T           *u,
                                    creal32_T           *y,
                                    creal32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal32_T * const b,
                                    const int_T          ordNUM,
                                    const creal32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_RR(const real32_T           *u,
                                    real32_T           *y,
                                    real32_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real32_T * const b,
                                    const int_T          ordNUM,
                                    const real32_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_ZD(const creal_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const real_T * const b,
                                    const int_T          ordNUM,
                                    const real_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1_ZZ(const creal_T           *u,
                                    creal_T           *y,
                                    creal_T * const    mem_base,
                                    int32_T               *mem_offset,
                                    const int_T          numDelays,
                                    const int_T          sampsPerChan,
                                    const int_T          numChans,
                                    const creal_T * const b,
                                    const int_T          ordNUM,
                                    const creal_T * const a,
                                    const int_T          ordDEN,
                                    const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_CC( const creal32_T          *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal32_T * const tnum,
                         const int_T          ordNUM,
                         const creal32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_CR( const creal32_T          *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real32_T * const tnum,
                         const int_T          ordNUM,
                         const real32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_DD( const real_T         *u,
                         real_T               *y,
                         real_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real_T * const tnum,
                         const int_T          ordNUM,
                         const real_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_DZ( const real_T          *u,
                         creal_T              *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal_T * const tnum,
                         const int_T          ordNUM,
                         const creal_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_RC( const real32_T         *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal32_T * const tnum,
                         const int_T          ordNUM,
                         const creal32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_RR( const real32_T         *u,
                         real32_T               *y,
                         real32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real32_T * const tnum,
                         const int_T          ordNUM,
                         const real32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_ZD( const creal_T          *u,
                         creal_T               *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real_T * const tnum,
                         const int_T          ordNUM,
                         const real_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_A0Scale_ZZ( const creal_T          *u,
                         creal_T               *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal_T * const tnum,
                         const int_T          ordNUM,
                         const creal_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_CC( const creal32_T          *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal32_T * const tnum,
                         const int_T          ordNUM,
                         const creal32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_CR( const creal32_T          *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real32_T * const tnum,
                         const int_T          ordNUM,
                         const real32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_DD( const real_T         *u,
                         real_T               *y,
                         real_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real_T * const tnum,
                         const int_T          ordNUM,
                         const real_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_DZ( const real_T          *u,
                         creal_T              *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal_T * const tnum,
                         const int_T          ordNUM,
                         const creal_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_RC( const real32_T         *u,
                         creal32_T               *y,
                         creal32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal32_T * const tnum,
                         const int_T          ordNUM,
                         const creal32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_RR( const real32_T         *u,
                         real32_T               *y,
                         real32_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real32_T * const tnum,
                         const int_T          ordNUM,
                         const real32_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_ZD( const creal_T          *u,
                         creal_T               *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const real_T * const tnum,
                         const int_T          ordNUM,
                         const real_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF1T_ZZ( const creal_T          *u,
                         creal_T               *y,
                         creal_T * const       mem_base,
                         const int_T          numDelays,
                         const int_T          sampsPerChan,
                         const int_T          numChans,
                         const creal_T * const tnum,
                         const int_T          ordNUM,
                         const creal_T * const tden,
                         const int_T          ordDEN,
                         const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_CC( const creal32_T         *u,
                               creal32_T               *y,
                               creal32_T       * const mem_base,
                               int32_T                   *mem_offset,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const creal32_T * const b, 
                               const int_T             ordNUM,
                               const creal32_T * const a,
                               const int_T             ordDEN, 
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_CR( const creal32_T         *u,
                               creal32_T               *y,
                               creal32_T       * const mem_base,
                               int32_T                   *mem_offset,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const real32_T  * const b, 
                               const int_T             ordNUM,
                               const real32_T  * const a,
                               const int_T             ordDEN, 
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_DD( const real_T           *u,
                               real_T                 *y,
                               real_T         * const mem_base,
                               int32_T                 *mem_offset,
                               const int_T            numDelays,
                               const int_T            sampsPerChan,
                               const int_T            numChans,
                               const real_T   * const b, 
                               const int_T            ordNUM,
                               const real_T   * const a,
                               const int_T            ordDEN, 
                               const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_DZ( const real_T           *u,
                               creal_T                *y,
                               creal_T        * const mem_base,
                               int32_T                 *mem_offset,
                               const int_T            numDelays,
                               const int_T            sampsPerChan,
                               const int_T            numChans,
                               const creal_T  * const b, 
                               const int_T            ordNUM,
                               const creal_T  * const a,
                               const int_T            ordDEN, 
                               const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_RC( const real32_T          *u,
                               creal32_T               *y,
                               creal32_T       * const mem_base,
                               int32_T                   *mem_offset,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const creal32_T * const b, 
                               const int_T             ordNUM,
                               const creal32_T * const a,
                               const int_T             ordDEN, 
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_RR (const real32_T         *u,
                               real32_T               *y,
                               real32_T        * const mem_base,
                               int32_T                   *mem_offset,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const real32_T  * const b, 
                               const int_T             ordNUM,
                               const real32_T  * const a,
                               const int_T             ordDEN, 
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_ZD( const creal_T           *u,
                               creal_T                *y,
                               creal_T        * const mem_base,
                               int32_T                 *mem_offset,
                               const int_T            numDelays,
                               const int_T            sampsPerChan,
                               const int_T            numChans,
                               const real_T  * const b, 
                               const int_T            ordNUM,
                               const real_T  * const a,
                               const int_T            ordDEN, 
                               const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_A0Scale_ZZ (const creal_T           *u,
                               creal_T                *y,
                               creal_T        * const mem_base,
                               int32_T                 *mem_offset,
                               const int_T            numDelays,
                               const int_T            sampsPerChan,
                               const int_T            numChans,
                               const creal_T  * const b, 
                               const int_T            ordNUM,
                               const creal_T  * const a,
                               const int_T            ordDEN, 
                               const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_CC( const creal32_T         *u,
                       creal32_T               *y,
                       creal32_T       * const mem_base,
                       int32_T                   *mem_offset,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const creal32_T * const b, 
                       const int_T             ordNUM,
                       const creal32_T * const a,
                       const int_T             ordDEN, 
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_CR( const creal32_T         *u,
                       creal32_T               *y,
                       creal32_T       * const mem_base,
                       int32_T                   *mem_offset,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const real32_T  * const b, 
                       const int_T             ordNUM,
                       const real32_T  * const a,
                       const int_T             ordDEN, 
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_DD( const real_T          *u,
                       real_T                *y,
                       real_T        * const mem_base,
                       int32_T                 *mem_offset,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real_T  * const b, 
                       const int_T           ordNUM,
                       const real_T  * const a,
                       const int_T           ordDEN, 
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_DZ( const real_T           *u,
                       creal_T                *y,
                       creal_T        * const mem_base,
                       int32_T                 *mem_offset,
                       const int_T            numDelays,
                       const int_T            sampsPerChan,
                       const int_T            numChans,
                       const creal_T  * const b, 
                       const int_T            ordNUM,
                       const creal_T  * const a,
                       const int_T            ordDEN, 
                       const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_RC( const real32_T          *u,
                       creal32_T               *y,
                       creal32_T       * const mem_base,
                       int32_T                   *mem_offset,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const creal32_T * const b, 
                       const int_T             ordNUM,
                       const creal32_T * const a,
                       const int_T             ordDEN, 
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_RR (const real32_T         *u,
                       real32_T               *y,
                       real32_T        * const mem_base,
                       int32_T                   *mem_offset,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const real32_T  * const b, 
                       const int_T             ordNUM,
                       const real32_T  * const a,
                       const int_T             ordDEN, 
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_ZD( const creal_T          *u,
                       creal_T                *y,
                       creal_T        * const mem_base,
                       int32_T                 *mem_offset,
                       const int_T            numDelays,
                       const int_T            sampsPerChan,
                       const int_T            numChans,
                       const real_T   * const b, 
                       const int_T            ordNUM,
                       const real_T   * const a,
                       const int_T            ordDEN, 
                       const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2_ZZ( const creal_T          *u,
                       creal_T                *y,
                       creal_T        * const mem_base,
                       int32_T                 *mem_offset,
                       const int_T            numDelays,
                       const int_T            sampsPerChan,
                       const int_T            numChans,
                       const creal_T  * const b, 
                       const int_T            ordNUM,
                       const creal_T  * const a,
                       const int_T            ordDEN, 
                       const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_CC(const creal32_T         *u,
                               creal32_T               *y,
                               creal32_T * const       mem_base,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const creal32_T * const tnum,
                               const int_T             ordNUM,
                               const creal32_T * const tden,
                               const int_T             ordDEN,
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_CR(const creal32_T         *u,
                               creal32_T               *y,
                               creal32_T * const       mem_base,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const real32_T * const  tnum,
                               const int_T             ordNUM,
                               const real32_T * const  tden,
                               const int_T             ordDEN,
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_DD(const real_T               *u,
                               real_T               *y,
                               real_T * const       mem_base,
                               const int_T          numDelays,
                               const int_T          sampsPerChan,
                               const int_T          numChans,
                               const real_T * const tnum,
                               const int_T          ordNUM,
                               const real_T * const tden,
                               const int_T          ordDEN,
                               const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_DZ(const real_T          *u,
                               creal_T               *y,
                               creal_T * const       mem_base,
                               const int_T           numDelays,
                               const int_T           sampsPerChan,
                               const int_T           numChans,
                               const creal_T * const tnum,
                               const int_T           ordNUM,
                               const creal_T * const tden,
                               const int_T           ordDEN,
                               const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_RC(const real32_T          *u,
                               creal32_T               *y,
                               creal32_T * const       mem_base,
                               const int_T             numDelays,
                               const int_T             sampsPerChan,
                               const int_T             numChans,
                               const creal32_T * const tnum,
                               const int_T             ordNUM,
                               const creal32_T * const tden,
                               const int_T             ordDEN,
                               const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_RR(const real32_T         *u,
                               real32_T               *y,
                               real32_T * const       mem_base,
                               const int_T            numDelays,
                               const int_T            sampsPerChan,
                               const int_T            numChans,
                               const real32_T * const tnum,
                               const int_T            ordNUM,
                               const real32_T * const tden,
                               const int_T            ordDEN,
                               const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_ZD(const creal_T         *u,
                               creal_T               *y,
                               creal_T * const       mem_base,
                               const int_T           numDelays,
                               const int_T           sampsPerChan,
                               const int_T           numChans,
                               const real_T * const  tnum,
                               const int_T           ordNUM,
                               const real_T * const  tden,
                               const int_T           ordDEN,
                               const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_A0Scale_ZZ(const creal_T         *u,
                               creal_T               *y,
                               creal_T * const       mem_base,
                               const int_T           numDelays,
                               const int_T           sampsPerChan,
                               const int_T           numChans,
                               const creal_T * const tnum,
                               const int_T           ordNUM,
                               const creal_T * const tden,
                               const int_T           ordDEN,
                               const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_CC(const creal32_T         *u,
                       creal32_T               *y,
                       creal32_T * const       mem_base,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const creal32_T * const tnum,
                       const int_T             ordNUM,
                       const creal32_T * const tden,
                       const int_T             ordDEN,
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_CR(const creal32_T         *u,
                       creal32_T               *y,
                       creal32_T * const       mem_base,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const real32_T * const  tnum,
                       const int_T             ordNUM,
                       const real32_T * const  tden,
                       const int_T             ordDEN,
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_DD(const real_T               *u,
                       real_T               *y,
                       real_T * const       mem_base,
                       const int_T          numDelays,
                       const int_T          sampsPerChan,
                       const int_T          numChans,
                       const real_T * const tnum,
                       const int_T          ordNUM,
                       const real_T * const tden,
                       const int_T          ordDEN,
                       const boolean_T      one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_DZ(const real_T          *u,
                       creal_T               *y,
                       creal_T * const       mem_base,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T * const tnum,
                       const int_T           ordNUM,
                       const creal_T * const tden,
                       const int_T           ordDEN,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_RC(const real32_T          *u,
                       creal32_T               *y,
                       creal32_T * const       mem_base,
                       const int_T             numDelays,
                       const int_T             sampsPerChan,
                       const int_T             numChans,
                       const creal32_T * const tnum,
                       const int_T             ordNUM,
                       const creal32_T * const tden,
                       const int_T             ordDEN,
                       const boolean_T         one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_RR(const real32_T         *u,
                       real32_T               *y,
                       real32_T * const       mem_base,
                       const int_T            numDelays,
                       const int_T            sampsPerChan,
                       const int_T            numChans,
                       const real32_T * const tnum,
                       const int_T            ordNUM,
                       const real32_T * const tden,
                       const int_T            ordDEN,
                       const boolean_T        one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_ZD(const creal_T         *u,
                       creal_T               *y,
                       creal_T * const       mem_base,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const real_T * const  tnum,
                       const int_T           ordNUM,
                       const real_T * const  tden,
                       const int_T           ordDEN,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_IIR_DF2T_ZZ(const creal_T         *u,
                       creal_T               *y,
                       creal_T * const       mem_base,
                       const int_T           numDelays,
                       const int_T           sampsPerChan,
                       const int_T           numChans,
                       const creal_T * const tnum,
                       const int_T           ordNUM,
                       const creal_T * const tden,
                       const int_T           ordDEN,
                       const boolean_T       one_fpf);

IMPORT_FCN void MWDSP_Interp_FIR_D(real_T *y, const real_T * const u, const real_T *iptr, const int_T nSamps, 
                        int_T nChans, const int_T nSampsI, const int_T nChansI, 
                        const real_T * const filt, const int_T filtlen, const int_T nphases);

IMPORT_FCN void MWDSP_Interp_FIR_R(real32_T *y, const real32_T * const u, const real32_T *iptr, const int_T nSamps, 
                        int_T nChans, const int_T nSampsI, const int_T nChansI, 
                        const real32_T * const filt, const int_T filtlen, const int_T nphases);

IMPORT_FCN void MWDSP_Interp_Lin_D(real_T *y, const real_T * const u, const real_T *iptr,
                        const int_T nSamps, int_T nChans, const int_T nSampsI, 
                        const int_T nChansI);

IMPORT_FCN void MWDSP_Interp_Lin_R(real32_T *y, const real32_T * const u, const real32_T *iptr, const int_T nSamps, 
                        int_T nChans, const int_T nSampsI, const int_T nChansI);

IMPORT_FCN int_T dspIsFinite(double x);

IMPORT_FCN int_T dspIsFinite32(float x);

IMPORT_FCN void MWDSP_LDL_C(
                 creal32_T  *A,    /* Output Matrix */
                 creal32_T  *V,    /* Intermediate array */
                 int_T       n,    /* Number of square matrix rows (or columns)*/ 
                 boolean_T  *state /* Boolean signaling positive definiteness */
                 );

IMPORT_FCN void MWDSP_LDL_D(
                 real_T    *A,     /* Output Matrix */
                 real_T    *V,     /* Intermediate array */
                 int_T      n,     /* Number of square matrix rows (or columns)*/
                 boolean_T *state  /* Boolean signaling positive definiteness */
                 );

IMPORT_FCN void MWDSP_LDL_R(
                 real32_T  *A,      /* Output Matrix */
                 real32_T  *V,      /* Intermediate array */
                 int_T      n,      /* Number of square matrix rows (or columns)*/
                 boolean_T *state   /* Boolean signaling positive definiteness */
                 );

IMPORT_FCN void MWDSP_LDL_Z(
                 creal_T  *A,      /* Output Matrix */
                 creal_T  *V,      /* Intermediate array */
                 int_T     n,      /* Number of square matrix rows (or columns)*/ 
                 boolean_T *state  /* Boolean signaling positive definiteness */
                 );

IMPORT_FCN void MWDSP_LevDurb_A_C(
    const creal32_T *u,     /* *u    Input pointer      */ 
          creal32_T *y_A,   /* *y_A  A output pointer   */
    const int_T      N      /*  N    Input array length */
    );

IMPORT_FCN void MWDSP_LevDurb_A_D(
    const real_T *u,   /* *u   Input pointer */ 
          real_T *y_A, /* *y_A A output pointer */ 
    const int_T   N    /* N    Input array length */
    );

IMPORT_FCN void MWDSP_LevDurb_A_R(
    const real32_T *u,   /* *u   Input pointer */ 
          real32_T *y_A, /* *y_A A output pointer */ 
    const int_T     N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_A_Z(
    const creal_T *u,   /* *u   Input pointer */ 
          creal_T *y_A, /* *y_A   A output pointer */ 
    const int_T    N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AK_C(
    const creal32_T *u,   /* *u   Input pointer */ 
          creal32_T *y_A, /* *y_A A output pointer */ 
          creal32_T *y_K, /* *y_K K output pointer */ 
    const int_T      N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AK_D(
    const real_T *u,   /* *u   Input pointer */ 
          real_T *y_A, /* *y_A A output pointer */ 
          real_T *y_K, /* *y_K K output pointer */ 
    const int_T   N    /* N    Input array length */    
    );

IMPORT_FCN void MWDSP_LevDurb_AK_R(
    const real32_T *u,   /* *u   Input pointer */ 
          real32_T *y_A, /* *y_A A output pointer*/ 
          real32_T *y_K, /* *y_K K output pointer */ 
    const int_T     N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AK_Z(
    const creal_T *u,   /* *u   Input pointer */ 
          creal_T *y_A, /* *y_A A output pointer */ 
          creal_T *y_K, /* *y_K K output pointer */ 
    const int_T    N   /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AKP_C(
    const creal32_T *u,   /* *u   Input pointer */ 
          creal32_T *y_A, /* *y_A A output pointer */ 
          creal32_T *y_K, /* *y_K K output pointer */ 
          real32_T  *y_P, /* *y_P P output pointer  */ 
    const int_T      N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AKP_D(
    const real_T *u,   /* *u   Input pointer      */ 
          real_T *y_A, /* *y_A A output pointer   */ 
          real_T *y_K, /* *y_K K output pointer   */ 
          real_T *y_P, /* *y_P P output pointer   */ 
    const int_T   N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AKP_R(
    const real32_T *u,   /* *u   Input pointer */ 
          real32_T *y_A, /* *y_A A output pointer */ 
          real32_T *y_K, /* *y_K K output pointer */ 
          real32_T *y_P, /* *y_P P output pointer  */ 
    const int_T     N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AKP_Z(
    const creal_T *u,   /* *u   Input pointer */ 
          creal_T *y_A, /* *y_A A output pointer */ 
          creal_T *y_K, /* *y_K K output pointer */ 
          real_T  *y_P, /* *y_P P output pointer  */ 
    const int_T    N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AP_C(
    const creal32_T *u,   /* *u   Input pointer */ 
          creal32_T *y_A, /* *y_A A output pointer */ 
          real32_T  *y_P, /* *y_P P output pointer  */ 
    const int_T      N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AP_D(
    const real_T *u,   /* *u   Input pointer */ 
          real_T *y_A, /* *y_A A output pointer */ 
          real_T *y_P, /* *y_P P output pointer  */ 
    const int_T   N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AP_R(
    const real32_T *u,   /* *u   Input pointer */ 
          real32_T *y_A, /* *y_A A output pointer */ 
          real32_T *y_P, /* *y_P P output pointer  */ 
    const int_T     N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_LevDurb_AP_Z(
    const creal_T *u,   /* *u   Input pointer */ 
          creal_T *y_A, /* *y_A   A output pointer */ 
          real_T  *y_P, /* *y_P P output pointer  */ 
    const int_T    N    /* N    Input array length */ 
    );

IMPORT_FCN void MWDSP_Cc2Lpc_D(
        const real_T  *cc,      /* pointer to the cepstrum coefficients input port */
        real_T        *lpc,     /* pointer to the LP coefficients output port */
        const int_T    Np       /* Order of LPC polynomial (length of LP coefficients - 1) */
       );

IMPORT_FCN void MWDSP_Cc2Lpc_R(
        const real32_T  *cc,      /* pointer to the cepstrum coefficients input port */
        real32_T        *lpc,     /* pointer to the LP coefficients output port */
        const int_T      Np       /* Order of LPC polynomial (length of LP coefficients - 1) */
       );

IMPORT_FCN void MWDSP_Lpc2Cc_D(
        const real_T *lpc,     /* pointer to LP coefficients input port */
        real_T       *cc,      /* pointer to cepstrum coefficients output port*/
        const int_T   Np,      /* Order of LPC polynomial (Length - 1) */
        const int_T   Ncc      /* Length of output CC polynomial*/
       );

IMPORT_FCN void MWDSP_Lpc2Cc_R(
        const real32_T *lpc,     /* pointer to input port which points to LP coefficients */
        real32_T       *cc,      /* pointer to output port pointing to the cepstrum coefficients */
        const int_T     Np,      /* Order of LPC polynomial (Length - 1) */
        const int_T     Ncc      /* Length of output CC polynomial */
       );

IMPORT_FCN void MWDSP_Lsp2Poly_Evenord_D(const real_T *lsp, const int_T P, real_T *g1, real_T *g2, real_T *Az);

IMPORT_FCN void MWDSP_Lsp2Poly_Evenord_R(const real32_T *lsp, const int_T P, real32_T *g1, real32_T *g2, real32_T *Az);

IMPORT_FCN void MWDSP_Lsp2Poly_Oddord_D(const real_T *lsp, const int_T P, real_T *g1, real_T *g2, real_T *Az);

IMPORT_FCN void MWDSP_Lsp2Poly_Oddord_R(const real32_T *lsp, const int_T P, real32_T *g1, real32_T *g2, real32_T *Az);

IMPORT_FCN void MWDSP_lu_C(
          creal32_T *A,       /* Input Pointer */ 
          real32_T  *piv,     /* Output (P) Pointer */ 
    const int_T      n,       /* P-port width */ 
          boolean_T *singular /* Singularity of input */
    );

IMPORT_FCN void MWDSP_lu_D(
          real_T    *A,       /* Input Pointer */ 
          real_T    *piv,     /* Ouyput (P) Pointer */
    const int_T      n,       /* P-port width */ 
          boolean_T *singular /* Singularity of input */
    );

IMPORT_FCN void MWDSP_lu_R(
          real32_T  *A,       /* Input Pointer */ 
          real32_T  *piv,     /* Ouyput (P) Pointer */ 
    const int_T      n,       /* P-port width */ 
          boolean_T *singular /* Singularity of input */
    );

IMPORT_FCN void MWDSP_lu_Z(
          creal_T   *A,       /* Input Pointer */ 
          real_T    *piv,     /* Ouyput (P) Pointer */
    const int_T      n,       /* P-port width */ 
          boolean_T *singular /* Singularity of input */
    );

IMPORT_FCN void MWDSP_MatMult_CC(
    creal32_T *y,
    const creal32_T *A,
    const creal32_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_CR(
    creal32_T *y,
    const creal32_T *A,
    const real32_T  *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_DD(
    real_T *y,
    const real_T *A,
    const real_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_DZ(
    creal_T *y,
    const real_T  *A,
    const creal_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_RC(
    creal32_T *y,
    const real32_T  *A,
    const creal32_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_RR(
    real32_T *y,
    const real32_T *A,
    const real32_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_ZD(
    creal_T *y,
    const creal_T *A,
    const real_T  *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_MatMult_ZZ(
    creal_T *y,
    const creal_T *A,
    const creal_T *B,
    const int dims[3]);

IMPORT_FCN void MWDSP_PadAlongColsMixed(
    const byte_T *u,          /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,          /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,   /* pointer to value to pad output array
                               * (complexity must match complexity of y)
                               */
    byte_T       *zero,       /* pointer to data-typed "real zero" representation */
    int_T numInpRows,         /* number of rows in the input array     */
    int_T numInpCols,         /* number of columns in the input array  */
    int_T numExtraRows,       /* number of extra rows to pad in output array */
    int_T bytesPerRealElement /* number of bytes per input sample */
    );

IMPORT_FCN void MWDSP_PadAlongCols(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T numInpCols,        /* number of columns in the input array  */
    int_T bytesPerInpCol,    /* number of bytes in each column of input array */
    int_T numExtraRows,      /* number of extra rows to pad in output array */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PadCopyOnlyTruncAlongCols(
    const byte_T *u,       /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,       /* pointer to output array (any data type, any complexity) */
    int_T bytesPerInpCol,  /* number of bytes in each column of input array */
    int_T bytesPerOutCol,  /* number of bytes in each column of output array */
    int_T numOutCols       /* number of columns in the output array  */
    );

IMPORT_FCN void MWDSP_PadPreAlongColsMixed(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y) */
    byte_T       *zero,      /* pointer to data-typed "real zero" representation */

    int_T numInpRows,         /* number of rows in the input array     */
    int_T numInpCols,         /* number of columns in the input array  */
    int_T numExtraRows,       /* number of extra rows to pad in output array */
    int_T bytesPerRealElement /* number of bytes per input sample */
    );

IMPORT_FCN void MWDSP_PadPreAlongCols(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T numInpCols,        /* number of columns in the input array  */
    int_T bytesPerInpCol,    /* number of bytes in each column of input array */
    int_T numExtraRows,      /* number of extra rows to pad in output array */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PadPreAlongRowsColsMixed(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y) */
    byte_T       *zero,      /* pointer to data-typed "real zero" representation */
    int_T numInpRows,              /* number of rows in the input array     */
    int_T numInpCols,              /* number of columns in the input array  */
    int_T numExtraRows,            /* number of extra rows to pad in output array */
    int_T numExtraFullOutColSamps, /* number of extra column samples to pad in output array */
    int_T bytesPerRealElement      /* number of bytes per input sample */
    );

IMPORT_FCN void MWDSP_PadPreAlongRowsCols(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T numInpCols,        /* number of columns in the input array  */
    int_T bytesPerInpCol,    /* number of bytes in each column of input array */
    int_T numExtraRows,      /* number of extra rows to pad in output array */
    int_T numExtraFullOutColSamps, /* number of extra column samples to pad in output array */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PadPreAlongRowsMixed(
    const byte_T *u,          /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,          /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,   /* pointer to value to pad output array
                               * (complexity must match complexity of y)
                               */
    byte_T       *zero,       /* pointer to data-typed "real zero" representation */
    int_T totalInputSamps,    /* total number of input samples */
    int_T totalSampsToPad,    /* total number of samples to pad */
    int_T bytesPerRealElement /* number of bytes per input sample */
    );

IMPORT_FCN void MWDSP_PadPreAlongRows(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T totalInputBytes,   /* total number of bytes in the input array */
    int_T totalSampsToPad,   /* total number of samples to pad */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PadAlongRowsColsMixed(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y) */
    byte_T       *zero,      /* pointer to data-typed "real zero" representation */

    int_T numInpRows,              /* number of rows in the input array     */
    int_T numInpCols,              /* number of columns in the input array  */
    int_T numExtraRows,            /* number of extra rows to pad in output array */
    int_T numExtraFullOutColSamps, /* number of extra column samples to pad in output array */
    int_T bytesPerRealElement      /* number of bytes in each input sample */
    );

IMPORT_FCN void MWDSP_PadAlongRowsCols(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T numInpCols,        /* number of columns in the input array  */
    int_T bytesPerInpCol,    /* number of bytes in each column of input array */
    int_T numExtraRows,      /* number of extra rows to pad in output array */
    int_T numExtraFullOutColSamps, /* number of extra column samples to pad in output array */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PadAlongRowsMixed(
    const byte_T *u,          /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,          /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,   /* pointer to value to pad output array
                               * (complexity must match complexity of y)
                               */
    byte_T       *zero,       /* pointer to data-typed "real zero" representation */
    int_T totalInputSamps,    /* total number of samples in the input array */
    int_T totalSampsToPad,    /* total number of samples to pad */
    int_T bytesPerRealElement /* number of bytes per input sample */
    );

IMPORT_FCN void MWDSP_PadAlongRows(
    const byte_T *u,         /* pointer to input array  (any data type, any complexity) */
    byte_T       *y,         /* pointer to output array (any data type, any complexity) */
    byte_T       *padValue,  /* pointer to value to pad output array
                              * (complexity must match complexity of y)
                              */
    int_T totalInputBytes,   /* total number of bytes in the input array */
    int_T totalSampsToPad,   /* total number of samples to pad */
    int_T bytesPerElement    /* number of bytes in each sample */
    );

IMPORT_FCN void MWDSP_PINV_C(creal32_T *pS, creal32_T *pU, creal32_T *pV, creal32_T *pX, int_T M, int_T N);

IMPORT_FCN void MWDSP_PINV_D(real_T *pS, real_T *pU, real_T *pV, real_T *pX, int_T M, int_T N);

IMPORT_FCN void MWDSP_PINV_R(real32_T *pS, real32_T *pU, real32_T *pV, real32_T *pX, int_T M, int_T N);

IMPORT_FCN void MWDSP_PINV_Z(creal_T *pS, creal_T *pU, creal_T *pV, creal_T *pX, int_T M, int_T N);

IMPORT_FCN int_T MWDSP_Poly2Lsfn_D(
        real_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real_T      *G1,        /* pointer to D_work G1 */
        real_T      *G2,        /* pointer to D_Work G2 */
        const int_T NSteps,     /* Number of root search steps */
        const int_T NBisects,   /* Number of bisections for root refinement */
        const int_T M1,         /* Order of the de-convolved symmetric polynomial G1*/
        const int_T M2,         /* Order of the de-convolved symmetric polynomial G2*/
        real_T      *bptr,      /* pointer to one of the D-works, used within cheby_poly_solve */
        const int_T P           /* Order of LPC polynomial */
       );

IMPORT_FCN int_T MWDSP_Poly2Lsfn_R(
        real32_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real32_T      *G1,        /* pointer to D_work G1 */
        real32_T      *G2,        /* pointer to D_Work G2 */
        const int_T    NSteps,    /* Number of root search steps */
        const int_T    NBisects,  /* Number of bisections for root refinement */
        const int_T    M1,        /* Order of the de-convolved symmetric polynomial G1*/
        const int_T    M2,        /* Order of the de-convolved symmetric polynomial G2*/
        real32_T      *bptr,      /* pointer to one of the D-works, used within cheby_poly_solve */
        const int_T    P          /* Order of LPC polynomial */
       );

IMPORT_FCN int_T MWDSP_Poly2Lsfr_D(
        real_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real_T      *G1,        /* pointer to D_work G1 */
        real_T      *G2,        /* pointer to D_Work G2 */
        const int_T NSteps,     /* Number of root search steps */
        const int_T NBisects,   /* Number of bisections for root refinement */
        const int_T M1,         /* Order of the de-convolved symmetric polynomial G1*/
        const int_T M2,         /* Order of the de-convolved symmetric polynomial G2*/
        real_T      *bptr,      /* pointer to one of the D-works, used within cheby_poly_solve */
        const int_T P           /* Order of LPC polynomial */
       );

IMPORT_FCN int_T MWDSP_Poly2Lsfr_R(
        real32_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real32_T      *G1,        /* pointer to D_work G1 */
        real32_T      *G2,        /* pointer to D_Work G2 */
        const int_T    NSteps,    /* Number of root search steps */
        const int_T    NBisects,  /* Number of bisections for root refinement */
        const int_T    M1,        /* Order of the de-convolved symmetric polynomial G1*/
        const int_T    M2,        /* Order of the de-convolved symmetric polynomial G2*/
        real32_T      *bptr,      /* pointer to one of the D-works, used within cheby_poly_solve */
        const int_T    P          /* Order of LPC polynomial */
       );

IMPORT_FCN int_T MWDSP_Poly2Lsp_D(
        real_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real_T      *G1,        /* pointer to D_work G1 */
        real_T      *G2,        /* pointer to D_Work G2 */
        const int_T NSteps,     /* Number of root search steps */
        const int_T NBisects,   /* Number of bisections for root refinement */
        const int_T M1,         /* Order of the de-convolved symmetric polynomial G1*/
        const int_T M2,         /* Order of the de-convolved symmetric polynomial G2*/
        real_T      *bptr       /* pointer to one of the D-works, used within cheby_poly_solve */
       );

IMPORT_FCN int_T MWDSP_Poly2Lsp_R(
        real32_T      *lsp,       /* pointer to output port LSP/LSFr/LSFn */
        real32_T      *G1,        /* pointer to D_work G1 */
        real32_T      *G2,        /* pointer to D_Work G2 */
        const int_T    NSteps,    /* Number of root search steps */
        const int_T    NBisects,  /* Number of bisections for root refinement */
        const int_T    M1,        /* Order of the de-convolved symmetric polynomial G1*/
        const int_T    M2,        /* Order of the de-convolved symmetric polynomial G2*/
        real32_T      *bptr       /* pointer to one of the D-works, used within cheby_poly_solve */
       );

IMPORT_FCN void MWDSP_polyval_CC(
    const creal32_T *u,          /* Input pointer */ 
          creal32_T *y,          /* Output pointer */ 
    const creal32_T *pCoeffs,    /* Pointer to coefficients */
    const int_T      N,          /* Number of coefficients */
    const int_T      n           /* Width of INPORT1*/ 
    );

IMPORT_FCN void MWDSP_polyval_CR(
    const creal32_T *u,       /* Input pointer */ 
          creal32_T *y,       /* Output pointer */ 
    const real32_T  *pCoeffs, /* Pointer to coefficients */
    const int_T      N,       /* Number of coefficients */  
    const int_T      n        /* Width of INPORT1*/ 
    );

IMPORT_FCN void MWDSP_polyval_DD(
    const real_T *u,            /* Input pointer */
          real_T *y,            /* Output pointer */ 
    const real_T *pCoeffs,      /* Pointer to coefficients */
    const int_T   N,            /* Number of coefficients */
    const int_T   n             /* Width of INPORT1*/ 
    );

IMPORT_FCN void MWDSP_polyval_DZ(
    const real_T  *u,         /* Input pointer */ 
          creal_T *y,         /* Output pointer */ 
    const creal_T *pCoeffs,   /* Pointer to coefficients */
    const int_T    N,         /* Number of coefficients */
    const int_T    n          /* Width of INPORT1*/ 
    );

IMPORT_FCN void MWDSP_polyval_RC(
    const real32_T  *u,        /* Input pointer */ 
          creal32_T *y,        /* Output pointer */ 
    const creal32_T *pCoeffs,  /* Pointer to coefficients */
    const int_T      N,        /* Number of coefficients */  
    const int_T      n         /* Width of INPORT1*/    
    );

IMPORT_FCN void MWDSP_polyval_RR(
    const real32_T *u,         /* Input pointer */ 
          real32_T *y,         /* Output pointer */ 
    const real32_T *pCoeffs,   /* Pointer to coefficients */
    const int_T     N,         /* Number of coefficients */
    const int_T     n          /* Width of INPORT1*/
    );

IMPORT_FCN void MWDSP_polyval_ZD(
    const creal_T *u,         /* Input pointer */ 
          creal_T *y,         /* Output pointer */ 
    const real_T  *pCoeffs,   /* Pointer to coefficients */
    const int_T    N,         /* Number of coefficients */
    const int_T    n          /* Width of INPORT1*/
    );

IMPORT_FCN void MWDSP_polyval_ZZ(
    const creal_T *u,          /* Input pointer */ 
          creal_T *y,          /* Output pointer */ 
    const creal_T *cplxCoeffs, /* Pointer to coefficients */
    const int_T    N,          /* Number of coefficients */
    const int_T    n           /* Width of INPORT1*/
    );

IMPORT_FCN void MWDSP_qrCompqyC (
    int_T	n,
    int_T	j,
    creal32_T	*qr,
    creal32_T	*qrauxj,
    creal32_T	*y
    );

IMPORT_FCN void MWDSP_qrCompqyD (
    int_T	n,
    int_T	j,
    real_T	*qr,
    real_T	*qrauxj,
    real_T	*y
    );

IMPORT_FCN void MWDSP_qrCompqyMixdC(
    int_T	n,
    int_T	j,
    real32_T	*qr,
    real32_T	*qrauxj,
    creal32_T	*y
    );

IMPORT_FCN void MWDSP_qrCompqyMixdZ(
    int_T	n,
    int_T	j,
    real_T	*qr,
    real_T	*qrauxj,
    creal_T	*y
    );

IMPORT_FCN void MWDSP_qrCompqyR (
    int_T	n,
    int_T	j,
    real32_T	*qr,
    real32_T	*qrauxj,
    real32_T	*y
    );

IMPORT_FCN void MWDSP_qrCompqyZ (
    int_T	n,
    int_T	j,
    creal_T	*qr,
    creal_T	*qrauxj,
    creal_T	*y
    );

IMPORT_FCN void MWDSP_qrdcC(
    int_T		m,		/* rows in x */
    int_T		n,		/* columns in x */
    creal32_T	*x,		/* input matrix */				
    creal32_T	*qraux,	/* auxilliary vector */
    int_T		*jpvt,	/* pivot info */
    creal32_T	*work	/* work vector */
    );

IMPORT_FCN void MWDSP_qrdcD(
    int_T	m,		/* rows in x */
    int_T	n,		/* columns in x */
    real_T	*x,		/* input matrix */
    real_T	*qraux,	/* auxilliary vector */
    int_T	*jpvt,	/* pivot info */
    real_T	*work	/* work vector */
    );

IMPORT_FCN void MWDSP_qrdcR(
    int_T	m,		/* rows in x */
    int_T	n,		/* columns in x */
    real32_T	*x,		/* input matrix */
    real32_T	*qraux,	/* auxilliary vector */
    int_T	    *jpvt,	/* pivot info */
    real32_T	*work	/* work vector */
    );

IMPORT_FCN void MWDSP_qrdcZ(
    int_T		m,		/* rows in x */
    int_T		n,		/* columns in x */
    creal_T	*x,		/* input matrix */				
    creal_T	*qraux,	/* auxilliary vector */
    int_T		*jpvt,	/* pivot info */
    creal_T	*work	/* work vector */
    );

IMPORT_FCN void MWDSP_QRE_C(int_T m, int_T n, creal32_T *q, creal32_T *r, real32_T *e,
        creal32_T *qraux, creal32_T *work, int_T *jpvt, creal32_T *s);

IMPORT_FCN void MWDSP_QRE_D(int_T m, int_T n, real_T *q, real_T *r, real_T *e,
        real_T *qraux, real_T *work, int_T *jpvt, real_T *s);

IMPORT_FCN void MWDSP_QRE_R(int_T m, int_T n, real32_T *q, real32_T *r, real32_T *e,
        real32_T *qraux, real32_T *work, int_T *jpvt, real32_T *s);

IMPORT_FCN void MWDSP_QRE_Z(int_T m, int_T n, creal_T *q, creal_T *r, real_T *e,
        creal_T *qraux, creal_T *work, int_T *jpvt, creal_T *s);

IMPORT_FCN void MWDSP_qreslvC(
                int_T    m,
                int_T    n,
			    int_T    p,
                creal32_T  *qr,
                creal32_T  *bx,
                creal32_T  *qraux,
                int_T    *jpvt,
                creal32_T  *x,
                real32_T epsval);

IMPORT_FCN void MWDSP_qreslvD(
                int_T	 m,
                int_T	 n,
			    int_T	 p,
                real_T	*qr,
                real_T	*bx,
                real_T	*qraux,
                int_T	*jpvt,
                real_T	*x,
                real_T   epsval);

IMPORT_FCN void MWDSP_qreslvMixdC(
                    int_T	 m,
                    int_T	 n,
			        int_T	 p,
                    real32_T      *qr,
                    creal32_T     *bx,
                    real32_T	*qraux,
                    int_T	*jpvt,
                    creal32_T     *x,
                    real32_T epsval);

IMPORT_FCN void MWDSP_qreslvMixdZ(
                    int_T	 m,
                    int_T	 n,
			        int_T	 p,
                    real_T      *qr,
                    creal_T     *bx,
                    real_T	*qraux,
                    int_T	*jpvt,
                    creal_T     *x,
                    real_T epsval);

IMPORT_FCN void MWDSP_qreslvR(
                int_T	 m,
                int_T	 n,
			    int_T	 p,
                real32_T	*qr,
                real32_T	*bx,
                real32_T	*qraux,
                int_T	*jpvt,
                real32_T	*x,
                real32_T epsval);

IMPORT_FCN void MWDSP_qreslvZ(
                int_T    m,
                int_T    n,
			    int_T    p,
                creal_T  *qr,
                creal_T  *bx,
                creal_T  *qraux,
                int_T    *jpvt,
                creal_T  *x,
                real_T    epsval);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_D(const real_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_R(const real32_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_S08(const int8_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_S16(const int16_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_S32(const int32_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_U08(const uint8_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_U16(const uint16_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Idx_U32(const uint32_T *a, uint32_T *idx, int_T n);

IMPORT_FCN void MWDSP_Sort_Ins_Val_D(real_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_R(real32_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_S08(int8_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_S16(int16_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_S32(int32_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_U08(uint8_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_U16(uint16_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Ins_Val_U32(uint32_T *a, int_T n );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_D(const real_T *dataArray, uint32_T *idxArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_R(const real32_T *dataArray, uint32_T *idxArray,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_S08(const int8_T *dataArray, uint32_T *idxArray,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_S16(const int16_T *dataArray, uint32_T *idxArray,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_S32(const int32_T *dataArray, uint32_T *idxArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_U08(const uint8_T *dataArray, uint32_T *idxArray,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_U16(const uint16_T *dataArray, uint32_T *idxArray,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Idx_U32(const uint32_T *dataArray, uint32_T *idxArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_D(real_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_R(real32_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_S08(int8_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_S16(int16_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_S32(int32_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_U08(uint8_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_U16(uint16_T *dataArray, int_T i, int_T j );

IMPORT_FCN void MWDSP_Sort_Qk_Val_U32(uint32_T *dataArray, int_T i, int_T j );

IMPORT_FCN boolean_T MWDSP_SrtQidFindPivotD(const real_T *qid_array, int_T *qid_index,
                               int_T i, int_T j, int_T *pivot );

IMPORT_FCN boolean_T MWDSP_SrtQidFindPivotR(const real32_T *qid_array, int_T *qid_index,
                               int_T i, int_T j, int_T *pivot );

IMPORT_FCN int_T MWDSP_SrtQidPartitionD(const real_T *qid_array, int_T *qid_index,
                           int_T i, int_T j, int_T pivot );

IMPORT_FCN int_T MWDSP_SrtQidPartitionR(const real32_T *qid_array, int_T *qid_index,
                           int_T i, int_T j, int_T pivot );

IMPORT_FCN void MWDSP_SrtQkRecC(const creal32_T *qid_array, int_T *qid_index, real32_T *sort,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_SrtQkRecD(const real_T *qid_array, int_T *qid_index, int_T i, int_T j );

IMPORT_FCN void MWDSP_SrtQkRecR(const real32_T *qid_array, int_T *qid_index,
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_SrtQkRecZ(const creal_T *qid_array, int_T *qid_index, real_T *sort, 
                        int_T i, int_T j );

IMPORT_FCN void MWDSP_RandSrc_GC_C(creal32_T *y,          /* output signal */   
                        const creal32_T *mean, /* vector of means */ 
                        int_T meanLen,         /* length of mean vector */
                        const real32_T *std,   /* vector of xformed-std-devs */
                        int_T stdLen,          /* length of std vector */ 
                        real32_T *state,       /* state vectors */ 
                        int_T nChans,          /* number of channels */
                        int_T nSamps,          /* number of samples per chan*/
                        real32_T* cltVec,      /* work space for uniform
                                                * variates */
                        int_T cltLen);          /* length of clt vector */

IMPORT_FCN void MWDSP_RandSrc_GC_D(real64_T *y,          /* output signal */            
                        const real64_T *mean, /* vector of means */          
                        int_T meanLen,        /* length of mean vector */    
                        const real64_T *std,  /* vector of xformed-std-devs*/
                        int_T stdLen,         /* length of std vector */     
                        real64_T *state,      /* state vectors */            
                        int_T nChans,         /* number of channels */       
                        int_T nSamps,         /* number of samples per chan*/
                        real64_T* cltVec,     /* work space for uniform 
                                               * variates */
                        int_T cltLen);         /* length of clt vector */

IMPORT_FCN void MWDSP_RandSrc_GC_R(real32_T *y,          /* output signal */          
                        const real32_T *mean, /* vector of means */        
                        int_T meanLen,        /* length of mean vector */     
                        const real32_T *std,  /* vector of xformed-std-devs */
                        int_T stdLen,         /* length of std vector */    
                        real32_T *state,      /* state vectors */           
                        int_T nChans,         /* number of channels */      
                        int_T nSamps,         /* number of samples per chan*/  
                        real32_T* cltVec,     /* work space for uniform 
                                               * variates */
                        int_T cltLen);         /* length of clt vector */

IMPORT_FCN void MWDSP_RandSrc_GC_Z(creal64_T *y,           /* output signal */
                        const creal64_T *mean,  /* vector of means */
                        int_T meanLen,          /* length of mean vector */
                        const real64_T *std,    /* vector of xformed-std-devs*/
                        int_T stdLen,           /* length of std vector */    
                        real64_T *state,        /* state vectors */    
                        int_T nChans,           /* number of channels */
                        int_T nSamps,           /* number of samples per chan*/
                        real64_T* cltVec,       /* work space for uniform 
                                                 * variates */
                        int_T cltLen);           /* length of clt vector */

IMPORT_FCN void MWDSP_RandSrc_GZ_C(creal32_T *outPtr,     /* output signal */ 
                        const creal32_T *mean, /* vector of means */
                        int_T meanLen,         /* length of mean vector */
                        const real32_T *std,   /* vector of xformed-std-devs */
                        int_T stdLen,          /* length of std vector */
                        uint32_T *state,       /* state vectors */
                        int_T nChans,          /* number of channels */
                        int_T nSamps);          /* number of samples/channel */

IMPORT_FCN void MWDSP_RandSrc_GZ_D(real64_T *outPtr,     /* output signal */ 
                        const real64_T *mean, /* vector of means */
                        int_T meanLen,        /* length of mean vector */
                        const real64_T *std,  /* vector of std deviations */
                        int_T stdLen,         /* length of std vector */
                        uint32_T *state,      /* state vectors */
                        int_T nChans,         /* number of channels */
                        int_T nSamps);         /* number of samples/channel */

IMPORT_FCN void MWDSP_RandSrc_GZ_R(real32_T *outPtr,     /* output signal */ 
                        const real32_T *mean, /* vector of means */
                        int_T meanLen,        /* length of mean vector */
                        const real32_T *std,  /* vector of std deviations */
                        int_T stdLen,         /* length of std vector */
                        uint32_T *state,      /* state vectors */
                        int_T nChans,         /* number of channels */
                        int_T nSamps);         /* number of samples/channel */

IMPORT_FCN void MWDSP_RandSrc_GZ_Z(creal64_T *outPtr,     /* output signal */ 
                        const creal64_T *mean, /* vector of means */
                        int_T meanLen,         /* length of mean vector */
                        const real64_T *std,   /* vector of xformed-std-devs */
                        int_T stdLen,          /* length of std vector */
                        uint32_T *state,       /* state vectors */
                        int_T nChans,          /* number of channels */
                        int_T nSamps);          /* number of samples/channel */

IMPORT_FCN void MWDSP_RandSrc_U_C(creal32_T *y,    /* output signal */ 
                       const real32_T *min,   /* vector of mins */
                       int_T minLen,    /* length of min vector */
                       const real32_T *max,   /* vector of maxs */
                       int_T maxLen,    /* length of max vector */
                       real32_T *state, /* state vectors */
                       int_T nChans,    /* number of channels */
                       int_T nSamps);    /* number of samples per channel */

IMPORT_FCN void MWDSP_RandSrc_U_D(real64_T *y,     /* output signal */ 
                       const real64_T *min,   /* vector of mins */
                       int_T minLen,    /* length of min vector */
                       const real64_T *max,   /* vector of maxs */
                       int_T maxLen,    /* length of max vector */
                       real64_T *state, /* state vectors */
                       int_T nChans,    /* number of channels */
                       int_T nSamps);    /* number of samples per channel */

IMPORT_FCN void MWDSP_RandSrc_U_R(real32_T *y,     /* output signal */ 
                       const real32_T *min,   /* vector of mins */
                       int_T minLen,    /* length of min vector */
                       const real32_T *max,   /* vector of maxs */
                       int_T maxLen,    /* length of max vector */
                       real32_T *state, /* state vectors */
                       int_T nChans,    /* number of channels */
                       int_T nSamps);    /* number of samples per channel */

IMPORT_FCN void MWDSP_RandSrc_U_Z(creal64_T *y,    /* output signal */ 
                       const real64_T *min,   /* vector of mins */
                       int_T minLen,    /* length of min vector */
                       const real64_T *max,   /* vector of maxs */
                       int_T maxLen,    /* length of max vector */
                       real64_T *state, /* state vectors */
                       int_T nChans,    /* number of channels */
                       int_T nSamps);    /* number of samples per channel */

IMPORT_FCN void MWDSP_RandSrcCreateSeeds_32(uint32_T  initSeed,
                                 uint32_T *seedArray,
                                 uint32_T  numSeeds);

IMPORT_FCN void MWDSP_RandSrcCreateSeeds_64(uint32_T  initSeed,
                                 uint32_T *seedArray,
                                 uint32_T  numSeeds);

IMPORT_FCN void MWDSP_RandSrcInitState_GC_32(const uint32_T *seed,  /* seed value vector */
                                  real32_T       *state, /* state vectors */
                                  int_T          nChans); /* number channels */

IMPORT_FCN void MWDSP_RandSrcInitState_GC_64(const uint32_T *seed,  /* seed value vector */
                                  real64_T       *state, /* state vectors */
                                  int_T          nChans); /* number channels */

IMPORT_FCN void MWDSP_RandSrcInitState_GZ(const uint32_T *seed,  /* seed value vector */
                                     uint32_T *state, /* state vectors */
                                     int_T    nChans); /* number of channels */

IMPORT_FCN void MWDSP_RandSrcInitState_U_32(const uint32_T *seed,  /* seed value vector */
                                 real32_T       *state, /* state vectors */
                                 int_T          nChans); /* number of channels */

IMPORT_FCN void MWDSP_RandSrcInitState_U_64(const uint32_T *seed,  /* seed value vector */
                                 real64_T       *state, /* state vectors */
                                 int_T          nChans); /* number of channels */

IMPORT_FCN void MWDSP_Lpc2Ac_D(
        const real_T *lpc,     /* pointer to input port which points to LP coefficients */
        const real_T *perr,    /* pointer to input port pointing to prediction error */
        real_T       *ac,      /* pointer to output port pointing to the autocorrelation coefficients */
        real_T       *L,       /* Vector L which contains LPC of order 1 ... M , padded with zeros. */ 
        const int_T   M        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Lpc2Ac_R(
        const real32_T *lpc,     /* pointer to input port which points to LP coefficients */
        const real32_T *perr,    /* pointer to input port pointing to prediction error */
        real32_T       *ac,      /* pointer to output port pointing to the autocorrelation coefficients */
        real32_T       *L,       /* LPC of order 1 ... M , padded with zeros. */ 
        const int_T     M        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Rc2Ac_D(
        const real_T *rc,      /* pointer to input port which points to LP coefficients */
        const real_T *perr,    /* pointer to input port pointing to prediction error */
        real_T       *ac,      /* pointer to output port pointing to the autocorrelation coefficients */
        real_T       *L,       /* Vector L which contains LPC of order 1 ... M , padded with zeros. */ 
        const int_T   M        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Rc2Ac_R(
        const real32_T *rc,      /* pointer to input port which points to LP coefficients */
        const real32_T *perr,    /* pointer to input port pointing to prediction error */
        real32_T       *ac,      /* pointer to output port pointing to the autocorrelation coefficients */
        real32_T       *L,       /* Vector L which contains LPC of order 1 ... M , padded with zeros. */ 
        const int_T     M        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Lpc2Rc_D(
        const real_T *lpc,     /* pointer to input port which points to LP coefficients */
        real_T       *rc,      /* pointer to output port pointing to the reflection coefficients */
        const int_T   P        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Lpc2Rc_R(
        const real32_T *lpc,     /* pointer to input port which points to LP coefficients */
        real32_T       *rc,      /* pointer to output port pointing to the reflection coefficients */
        const int_T     P        /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Rc2Lpc_D(
        const real_T *rc,       /* pointer to input port which contains the reflection coefficients */
        real_T       *lpc,      /* pointer to output port holding the LP coefficients */
        const int_T   P         /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Rc2Lpc_R(
        const real32_T *rc,   /* pointer to input port which contains the reflection coefficients */
        real32_T       *lpc,  /* pointer to output port holding the LP coefficients */
        const int_T     P     /* Order of LPC polynomial */
       );

IMPORT_FCN void MWDSP_Buf_CopyFrame_OL_1ch(
    const byte_T   *u,                  
          byte_T  **inBufPtr,
          byte_T   *memBase,
    const int_T     shiftPerElement,
    const int_T     bufLenTimesBpe,
    const int_T     F
);

IMPORT_FCN void MWDSP_Buf_CopyFrame_OL(
    const byte_T   *u,                  
          byte_T  **inBufPtr,
          byte_T   *memBase,
    const int_T     shiftPerElement,
    const int_T     bufLenTimesBpe,
    const int_T     nChans,
    const int_T     F
);

IMPORT_FCN void MWDSP_Buf_CopyInputToOutput_1ch(
    const byte_T *u,
    byte_T       *y,
    int32_T      *cnt,
    const int_T   bytesPerElement,
    const int_T   nBytesToCopy,
    const int_T   F,
    const int_T   N
);

IMPORT_FCN void MWDSP_Buf_CopyInputToOutput(
    const byte_T *u,
    byte_T       *y,
    int32_T      *cnt,
    const int_T   bytesPerElement,
    const int_T   nBytesToCopy,
    const int_T   F,
    const int_T   N,
    const int_T   nChans
);

IMPORT_FCN void MWDSP_Buf_CopyScalar_OL_1ch(
    const byte_T        *u,                  
          byte_T       **inBufPtr,
          byte_T        *memBase,
    const int_T          shiftPerElement,
    const int_T          bufLenTimesBpe
);

IMPORT_FCN void MWDSP_Buf_CopyScalar_OL(
    const byte_T        *u,                  
          byte_T       **inBufPtr,
          byte_T        *memBase,
    const int_T          shiftPerElement,
    const int_T          bufLenTimesBpe,
    const int_T          nChans
);

IMPORT_FCN void MWDSP_Buf_CopyScalar_UL_1ch(
    const byte_T   *u,                  
          byte_T  **inBufPtr,
          byte_T   *memBase,
    const int_T     shiftPerElement,
    const int_T     bufLenTimesBpe,
          int32_T  *ul_count,
    const int_T     N,
    const int_T     V
);

IMPORT_FCN void MWDSP_Buf_CopyScalar_UL(
    const byte_T   *u,                  
          byte_T  **inBufPtr,
          byte_T   *memBase,
    const int_T     shiftPerElement,
    const int_T     bufLenTimesBpe,
    const int_T     nChans,
          int32_T  *ul_count,
    const int_T     N,
    const int_T     V
);

IMPORT_FCN void MWDSP_Buf_OutputFrame_1ch(
          byte_T  *y,                  
          byte_T **outBufPtr,
          byte_T  *memBase,
    const int_T    shiftPerElement,
    const int_T    bufLenTimesBpe,
    const int_T    N,
    const int_T    VTimesBpe
);

IMPORT_FCN void MWDSP_Buf_OutputFrame(
          byte_T  *y,                  
          byte_T **outBufPtr,
          byte_T  *memBase,
    const int_T    nChans,
    const int_T    shiftPerElement,
    const int_T    bufLenTimesBpe,
    const int_T    N,
    const int_T    VTimesBpe
);

IMPORT_FCN void MWDSP_Buf_OutputScalar_1ch(
          byte_T  *y,                  
          byte_T **outBufPtr,
          byte_T  *memBase,
    const int_T    shiftPerElement,
    const int_T    bufLenTimesBpe
);

IMPORT_FCN void MWDSP_Buf_OutputScalar(
          byte_T  *y,                  
          byte_T **outBufPtr,
          byte_T  *memBase,
    const int_T    nChans,
    const int_T    shiftPerElement,
    const int_T    bufLenTimesBpe
);

IMPORT_FCN void MWDSP_SVD_Copy_Z(const creal_T *pA, creal_T *pX, const int_T M, const int_T N);

IMPORT_FCN void MWDSP_SVD_Copy_D(const real_T *pA, real_T *pX, const int_T M, const int_T N);

IMPORT_FCN void MWDSP_SVD_Copy_C(const creal32_T *pA, creal32_T *pX, const int_T M, const int_T N);

IMPORT_FCN void MWDSP_SVD_Copy_R(const real32_T *pA, real32_T *pX, const int_T M, const int_T N);

IMPORT_FCN void MWDSP_SVD_CopyOutput_Z(real_T *pOS, creal_T *pS, int_T P);

IMPORT_FCN void MWDSP_SVD_CopyOutput_D(real_T *pOS, real_T *pS, int_T P);

IMPORT_FCN void MWDSP_SVD_CopyOutput_C(real32_T *pOS, creal32_T *pS, int_T P);

IMPORT_FCN void MWDSP_SVD_CopyOutput_R(real32_T *pOS, real32_T *pS, int_T P);

IMPORT_FCN void MWDSP_Unwrap_D_NRIP(      real_T *y,
                         const real_T cutoff,
                               int_T  inCols,
                               int_T  inRows
                        );

IMPORT_FCN void MWDSP_Unwrap_D_NROP(const real_T *u,
                               real_T *y, 
                         const real_T  cutoff,           
                               int_T   inCols,
                               int_T   inRows
                         );

IMPORT_FCN void MWDSP_Unwrap_D_RIPF(      real_T    *y,
                               real_T    *prev,
                               real_T    *pcumsum,                          
                         const real_T     cutoff,
                               int_T      inCols,
                               int_T      inRows,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_D_RIPS(      real_T    *y, 
                               real_T    *prev,
                               real_T    *pcumsum,
                         const real_T     cutoff,                          
                               int_T      numChans,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_D_ROPF(const real_T    *u,
                               real_T    *y, 
                               real_T    *prev,
                               real_T    *pcumsum,                          
                         const real_T     cutoff,
                               int_T      inCols,
                               int_T      inRows,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_D_ROPS(const real_T    *u,
                               real_T    *y, 
                               real_T    *prev,
                               real_T    *pcumsum,
                         const real_T     cutoff,
                               int_T      numChans,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_R_NRIP(      real32_T *y,
                         const real32_T cutoff,
                               int_T    inCols,
                               int_T    inRows
                        );

IMPORT_FCN void MWDSP_Unwrap_R_NROP(const real32_T *u,
                               real32_T *y, 
                         const real32_T cutoff,           
                               int_T    inCols,
                               int_T    inRows
                        );

IMPORT_FCN void MWDSP_Unwrap_R_RIPF(      real32_T *y,
                               real32_T *prev,
                               real32_T *pcumsum,                          
                         const real32_T cutoff,
                               int_T  inCols,
                               int_T  inRows,
                               boolean_T  *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_R_RIPS(      real32_T  *y, 
                               real32_T  *prev,
                               real32_T  *pcumsum,
                         const real32_T   cutoff,                          
                               int_T      numChans,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_R_ROPF(const real32_T  *u,
                               real32_T  *y, 
                               real32_T  *prev,
                               real32_T  *pcumsum,                          
                         const real32_T   cutoff,
                               int_T      inCols,
                               int_T      inRows,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_Unwrap_R_ROPS(const real32_T *u,
                               real32_T *y, 
                               real32_T *prev,
                               real32_T *pcumsum,
                         const real32_T cutoff,
                               int_T    numChans,
                               boolean_T *firstime
                        );

IMPORT_FCN void MWDSP_UpFIR_CopyDataToOutPort(
    const byte_T *outBufBase,                  
          byte_T *y,
          int32_T  *rdIdx,
    const int_T   outFrameSize,
    const int_T   numChans,
    const int_T   bytesPerElem,
    const int_T   bytesToCopy,
    const int_T   perChanOutBufElems,
    const int_T   perChanOutBufBytes,
    const int_T   outBufBaseOffsetInBytes,
    const int_T   rdIdxSpan
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_CC(
    const creal32_T   *u,
          creal32_T   *out,
          creal32_T   *tap0,
    const creal32_T   *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_CR(
    const creal32_T   *u,
          creal32_T   *out,
          creal32_T   *tap0,
    const real32_T    *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_DD(
    const real_T    *u,                 /* input port*/
          real_T    *out,               /* double length output buffer to hold filter output */
          real_T    *tap0,              /* points to input buffer start address per channel */
    const real_T    *filter,            /* FIR coeff */
          int32_T     *tapIdx,            /* points to input TapDelayBuffer location to read in u */
          boolean_T *wrtBuf,            /* determines which one of the two double buffer to store out */
    const int_T     numChans,           /* number of channels */
    const int_T     inFrameSize,        /* input frame size */
    const int_T     iFactor,            /* interpolation factor */
    const int_T     polyphaseFiltLen,   /* length of each polyphase filter */
    const int_T     eachOutBufSize      /* number of elements in each one of the double output buffer */
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_DZ(
    const real_T    *u,
          creal_T   *out,
          real_T    *tap0,
    const creal_T   *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_RC(
    const real32_T    *u,
          creal32_T   *out,
          real32_T    *tap0,
    const creal32_T   *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_RR(
    const real32_T    *u,
          real32_T    *out,
          real32_T    *tap0,
    const real32_T    *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_ZD(
    const creal_T   *u,
          creal_T   *out,
          creal_T   *tap0,
    const real_T    *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIR_DF_DblBuf_ZZ(
    const creal_T   *u,
          creal_T   *out,
          creal_T   *tap0,
    const creal_T   *filter,
          int32_T     *tapIdx,
          boolean_T *wrtBuf,
    const int_T     numChans,
    const int_T     inFrameSize,
    const int_T     iFactor,
    const int_T     polyphaseFiltLen,
    const int_T     eachOutBufSize
);

IMPORT_FCN void MWDSP_UpFIRDn_CC(   const creal32_T *u,            /* input port*/
                               creal32_T *y,            /* output port*/
                               creal32_T *tap0,         /* points to input buffer start address per channel */
                               creal32_T *sums,         /* points to output of each interp phase per channel */
                               creal32_T *outBuf,       /* points to output buffer start address per channel */
                         const creal32_T * const filter,/* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_CR(   const creal32_T *u,            /* input port*/
                               creal32_T *y,            /* output port*/
                               creal32_T *tap0,         /* points to input buffer start address per channel */
                               creal32_T *sums,         /* points to output of each interp phase per channel */
                               creal32_T *outBuf,       /* points to output buffer start address per channel */
                         const real32_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_DD(   const real_T *u,             /* input port*/
                               real_T *y,             /* output port*/
                               real_T *tap0,          /* points to input buffer start address per channel */
                               real_T *sums,          /* points to output of each interp phase per channel */
                               real_T *outBuf,        /* points to output buffer start address per channel */
                         const real_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_DZ(   const real_T  *u,             /* input port*/
                               creal_T *y,             /* output port*/
                               real_T  *tap0,          /* points to input buffer start address per channel */
                               creal_T *sums,          /* points to output of each interp phase per channel */
                               creal_T *outBuf,        /* points to output buffer start address per channel */
                         const creal_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,         /* points to input buffer location to read in u */
                               int32_T  *outIdx,         /* points to output buffer data for transfer to y */
                         const int_T  numChans,        /* number of channels */
                         const int_T  inFrameSize,     /* input frame size */
                         const int_T  iFactor,         /* interpolation factor */
                         const int_T  dFactor,         /* decimation factor */
                         const int_T  subOrder,        /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,         /* input buffer size per channel */
                         const int_T  outLen,          /* output buffer size per channel */
                         const int_T  n0,              /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1               /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_RC(   const real32_T  *u,             /* input port*/
                               creal32_T *y,             /* output port*/
                               real32_T  *tap0,          /* points to input buffer start address per channel */
                               creal32_T *sums,          /* points to output of each interp phase per channel */
                               creal32_T *outBuf,        /* points to output buffer start address per channel */
                         const creal32_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,         /* points to input buffer location to read in u */
                               int32_T  *outIdx,         /* points to output buffer data for transfer to y */
                         const int_T  numChans,        /* number of channels */
                         const int_T  inFrameSize,     /* input frame size */
                         const int_T  iFactor,         /* interpolation factor */
                         const int_T  dFactor,         /* decimation factor */
                         const int_T  subOrder,        /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,         /* input buffer size per channel */
                         const int_T  outLen,          /* output buffer size per channel */
                         const int_T  n0,              /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1               /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_RR(   const real32_T *u,             /* input port*/
                               real32_T *y,             /* output port*/
                               real32_T *tap0,          /* points to input buffer start address per channel */
                               real32_T *sums,          /* points to output of each interp phase per channel */
                               real32_T *outBuf,        /* points to output buffer start address per channel */
                         const real32_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_ZD(   const creal_T *u,            /* input port*/
                               creal_T *y,            /* output port*/
                               creal_T *tap0,         /* points to input buffer start address per channel */
                               creal_T *sums,         /* points to output of each interp phase per channel */
                               creal_T *outBuf,       /* points to output buffer start address per channel */
                         const real_T * const filter, /* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_UpFIRDn_ZZ(   const creal_T *u,            /* input port*/
                               creal_T *y,            /* output port*/
                               creal_T *tap0,         /* points to input buffer start address per channel */
                               creal_T *sums,         /* points to output of each interp phase per channel */
                               creal_T *outBuf,       /* points to output buffer start address per channel */
                         const creal_T * const filter,/* FIR coeff */
                               int32_T  *tapIdx,        /* points to input buffer location to read in u */
                               int32_T  *outIdx,        /* points to output buffer data for transfer to y */
                         const int_T  numChans,       /* number of channels */
                         const int_T  inFrameSize,    /* input frame size */
                         const int_T  iFactor,        /* interpolation factor */
                         const int_T  dFactor,        /* decimation factor */
                         const int_T  subOrder,       /* order of each iFactor*dFactor polyphase subfilter */
                         const int_T  memSize,        /* input buffer size per channel */
                         const int_T  outLen,         /* output buffer size per channel */
                         const int_T  n0,             /* inputs to each interpolation phase is separated by n0 samples */
                         const int_T  n1              /* outputs of each interpolation phase is separated by n1 samples */
                         );

IMPORT_FCN void MWDSP_Vfdly_FIR_C(
     const real32_T  * const filtptr, 
     const int_T             filtlen, 
     const int_T             nphases ,
     const creal32_T * const buffptr, 
     const int_T             buflen, 
     creal32_T             **yptr, 
     int_T                   ti,
     const int_T             buffstart , 
     const real32_T          frac);

IMPORT_FCN void MWDSP_Vfdly_FIR_D(
     const real_T * const filtptr, 
     const int_T          filtlen, 
     const int_T          nphases ,
     const real_T * const buffptr, 
     const int_T          buflen, 
     real_T             **yptr, 
     int_T                ti,
     const int_T          buffstart , 
     const real_T         frac);

IMPORT_FCN void MWDSP_Vfdly_FIR_R(
     const real32_T * const filtptr, 
     const int_T            filtlen, 
     const int_T            nphases ,
     const real32_T * const buffptr, 
     const int_T            buflen, 
     real32_T             **yptr, 
     int_T                  ti,
     const int_T            buffstart , 
     const real32_T         frac);

IMPORT_FCN void MWDSP_Vfdly_FIR_Z(
     const real_T  * const filtptr, 
     const int_T           filtlen, 
     const int_T           nphases ,
     const creal_T * const buffptr, 
     const int_T           buflen, 
     creal_T             **yptr, 
     int_T                 ti,
     const int_T           buffstart , 
     const real_T          frac);

IMPORT_FCN void MWDSP_Vfdly_Lin_C(
     const creal32_T * const buffptr, 
     const int_T             buflen, 
     creal32_T             **yptr, 
     int_T                   ti,
     const int_T             buffstart, 
     const real32_T          frac);

IMPORT_FCN void MWDSP_Vfdly_Lin_D(
     const real_T * const buffptr, 
     const int_T          buflen, 
     real_T             **yptr, 
     int_T                ti,
     const int_T          buffstart, 
     const real_T         frac);

IMPORT_FCN void MWDSP_Vfdly_Lin_R(
     const real32_T * const buffptr, 
     const int_T            buflen, 
     real32_T             **yptr, 
     int_T                  ti,
     const int_T            buffstart, 
     const real32_T         frac);

IMPORT_FCN void MWDSP_Vfdly_Lin_Z(
     const creal_T * const buffptr, 
     const int_T          buflen, 
     creal_T             **yptr, 
     int_T                ti,
     const int_T          buffstart, 
     const real_T         frac);

IMPORT_FCN void MWDSP_Window1chC(int_T nRows, creal32_T *y, const creal32_T *u, real32_T *w);

IMPORT_FCN void MWDSP_Window1chD(int_T nRows, real_T *y, const real_T *u, real_T *w);

IMPORT_FCN void MWDSP_Window1chR(int_T nRows, real32_T *y, const real32_T *u, real32_T *w);

IMPORT_FCN void MWDSP_Window1chZ(int_T nRows, creal_T *y, const creal_T *u, real_T *w);

IMPORT_FCN void MWDSP_WindowNchC(int_T nRows, int_T nChans, creal32_T *y, const creal32_T *u, real32_T *winPtr);

IMPORT_FCN void MWDSP_WindowNchD(int_T nRows, int_T nChans, real_T   *y, const real_T   *u, real_T   *winPtr);

IMPORT_FCN void MWDSP_WindowNchR(int_T nRows, int_T nChans, real32_T *y, const real32_T *u, real32_T *winPtr);

IMPORT_FCN void MWDSP_WindowNchZ(int_T nRows, int_T nChans, creal_T   *y, const creal_T   *u, real_T   *winPtr);

#ifdef __cplusplus
    }	/* extern "C" */
#endif


#ifdef __cplusplus
extern "C" {
#endif

IMPORT_VAR char *libmwdsp_rt_version;

IMPORT_VAR char *libmwdsp_rt_build_date;


#ifdef __cplusplus
}
#endif

#endif /* dsp_rt_exports_h */
