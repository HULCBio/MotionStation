function [int,wmsg] = integrate(fitobj,x,x0)
%INTEGRATE  Integrate a fit result object.
%   INT = INTEGRATE(FITOBJ, X, X0) integrates the model FITOBJ at the points
%   specified by X starting from X0 and returns the result in INT. FITOBJ is a
%   cfit object generated by the FIT or CFIT function. X is a column vector.
%   X0 is a scalar. INT is a column vector.
%
%   See also DIFFERENTIATE, FIT, CFIT.

%   Copyright 2001-2004 The MathWorks, Inc. 
%   $Revision: 1.8.2.3 $  $Date: 2004/02/01 21:39:13 $

if nargin < 3
    error('curvefit:integrate:threeInputArgsRequired', ...
          'Integrate requires three input arguments.');
end

if ~isa(fitobj,'cfit')
    error('curvefit:integrate:invalidFirstArg', ...
          'The first argument has to be a curvefit object.');
end

ws = warning('off', 'all');
warning('');
integH = integexpr(fitobj); % get integral handle;
if isempty(integH) % no integral handle
    % It is not necessary to center and scale X here, because that
    % is done within the feval calls below
    sorted = 0;
    if any(diff(x)<0)
        sorted = 1;
        [x, idx] = sort(x(:));
    end
    int = zeros(size(x));
    int(1) = quad(fitobj,x0,x(1)); 
    for i = 2:length(x)
        int(i) = quad(fitobj,x(i-1),x(i)); 
    end
    int = cumsum(int);
    if sorted
        int(idx) = int;
    end
else % with integral handle (either from library or customer)
    % Center and scale X if necessary, then adjust result at the end
    xin = ([x0;x(:)] - fitobj.meanx) / fitobj.stdx;
    h = constants(fitobj);
    int = feval(integH,fitobj.coeffValues{:},fitobj.probValues{:},h{:},xin);
    int = fitobj.stdx * (int(2:end)-int(1));
end

if nargout > 1
  wmsg = lastwarn;
end

warning(ws);
