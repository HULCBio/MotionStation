Library {
  Name			  "commblkcod"
  Version		  5.0
  SaveDefaultBlockParams  on
  LibraryLinkDisplay	  "none"
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  BlockNameDataTip	  off
  BlockParametersDataTip  on
  BlockDescriptionStringDataTip	off
  ToolBar		  off
  StatusBar		  off
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  Created		  "Fri Jun 05 13:17:12 1998"
  Creator		  "mikem"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "mmclerno"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Mon Dec 23 15:56:16 2002"
  ModelVersionFormat	  "1.%<AutoIncrement:59>"
  ConfigurationManager	  "none"
  SimParamPage		  "Solver"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  ExtModeMexFile	  "ext_comm"
  ExtModeBatchMode	  off
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  SimulationMode	  "normal"
  ConsistencyChecking	  "none"
  ArrayBoundsChecking	  "none"
  AlgebraicLoopMsg	  "warning"
  BlockPriorityViolationMsg "warning"
  MinStepSizeMsg	  "warning"
  InheritedTsInSrcMsg	  "warning"
  DiscreteInheritContinuousMsg "warning"
  MultiTaskRateTransMsg	  "error"
  SingleTaskRateTransMsg  "none"
  CheckForMatrixSingularity "none"
  IntegerOverflowMsg	  "warning"
  Int32ToFloatConvMsg	  "warning"
  ParameterDowncastMsg	  "error"
  ParameterOverflowMsg	  "error"
  ParameterPrecisionLossMsg "warning"
  UnderSpecifiedDataTypeMsg "none"
  UnnecessaryDatatypeConvMsg "none"
  VectorMatrixConversionMsg "none"
  InvalidFcnCallConnMsg	  "error"
  SignalLabelMismatchMsg  "none"
  UnconnectedInputMsg	  "warning"
  UnconnectedOutputMsg	  "warning"
  UnconnectedLineMsg	  "warning"
  SfunCompatibilityCheckMsg "none"
  ProdHWDeviceType	  "Microprocessor"
  ProdHWWordLengths	  "8,16,32,32"
  RTWMakeCommand	  "make_rtw"
  RTWGenerateCodeOnly	  off
  RTWRetainRTWFile	  off
  TLCProfiler		  off
  TLCDebug		  off
  TLCCoverage		  off
  TLCAssertion		  off
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      CombinatorialLogic
      TruthTable	      "[0 0;0 1;0 1;1 0;0 1;1 0;1 0;1 1]"
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      ShowAdditionalParam     off
      OutDataTypeMode	      "Inherit from 'Constant value'"
      OutDataType	      "sfix(16)"
      ConRadixGroup	      "Use specified scaling"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Demux
      Outputs		      "4"
      DisplayOption	      "none"
      BusSelectionMode	      off
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      PortDimensions	      "-1"
      SampleTime	      "-1"
      ShowAdditionalParam     off
      LatchInput	      off
      DataType		      "auto"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      SignalType	      "auto"
      SamplingMode	      "auto"
      Interpolate	      on
    }
    Block {
      BlockType		      Math
      Operator		      "exp"
      OutputSignalType	      "auto"
    }
    Block {
      BlockType		      Memory
      X0		      "0"
      InheritSampleTime	      off
      LinearizeMemory	      off
      RTWStateStorageClass    "Auto"
    }
    Block {
      BlockType		      Mux
      Inputs		      "4"
      DisplayOption	      "none"
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      Reference
    }
    Block {
      BlockType		      Selector
      InputType		      "Vector"
      ElementSrc	      "Internal"
      Elements		      "1"
      RowSrc		      "Internal"
      Rows		      "1"
      ColumnSrc		      "Internal"
      Columns		      "1"
      InputPortWidth	      "-1"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      PortCounts	      "[]"
      SFunctionModules	      "''"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      on
      Permissions	      "ReadWrite"
      RTWSystemCode	      "Auto"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      ShowAdditionalParam     off
      InputSameDT	      on
      OutDataTypeMode	      "Same as first input"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
    }
    Block {
      BlockType		      Switch
      Criteria		      "u2 >= Threshold"
      Threshold		      "0"
      ShowAdditionalParam     off
      InputSameDT	      on
      OutDataTypeMode	      "Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      ZeroCross		      on
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      ZeroOrderHold
      SampleTime	      "1"
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "commblkcod"
    Location		    [312, 55, 797, 718]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nBCH decode"
      Ports		      [1, 2]
      Position		      [370, 133, 450, 177]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O BCH decode"
      MaskDescription	      "BCH decode with codeword length N,  message len"
"gth K, and error-correction capability T. (N,K,T) must be a valid BCH code co"
"mbination."
      MaskHelp		      "This block decodes length N binary codeword int"
"o length K message using BCH code. The block uses sequential input/output for"
"mat. The input sequence sample time is K*T_out/N. The block causes a K*T_out "
"delay. The second outport outputs the number of errors detected in the proces"
"s. A negative value indicates the block found more error in the codeword than"
" T."
      MaskPromptString	      "Codeword length N (N=2^M-1. M is a >2 integer):"
"|Message length K (check BCHPOLY for valid K):|Error-correction capability T "
"(0 for unknown):|Output sample time T_out (sec):"
      MaskStyleString	      "edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVarAliasString      ",,,"
      MaskVariables	      "n=@1;k=@2;t=@3;samp=@4;"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);disp('BCH de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "15|5|3|1/5"
      System {
	Name			"Binary sequence\nBCH decode"
	Location		[360, 100, 1011, 247]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "sequential\ncode-word-in"
	  Position		  [115, 35, 135, 55]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nBCH decode1"
	  Ports			  [2, 2]
	  Position		  [305, 33, 385, 77]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nBCH decode"
	  SourceType		  "Vector I/O BCH decode"
	  n			  "n"
	  k			  "k"
	  t			  "t"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [125, 90, 165, 125]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [20, 88, 100, 132]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [190, 33, 270, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_1"
	  Position		  [555, 65, 565, 75]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [460, 38, 540, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sequential\nmessage-out"
	  Position		  [595, 40, 615, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [400, 55, 420, 75]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sequential\ncode-word-in"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nBCH decode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [5, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [5, 0]
	  Branch {
	    Points		    [0, 35; 150, 0; 0, -40]
	    DstBlock		    "Triggered\nbuffer down"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Binary vector\nBCH decode1"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "Terminator_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [275, 0]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "sequential\nmessage-out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nBCH decode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nBCH decode1"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nBCH encode"
      Ports		      [1, 2]
      Position		      [270, 133, 350, 177]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O BCH encode"
      MaskDescription	      "BCH encode with codeword length N, and message "
"length K. (N, K) must be a valid BCH code pair."
      MaskHelp		      "This block encodes length K binary message into"
" length N binary codeword using BCH code. The block uses sequence input/outpu"
"t format. The output sequential sample time is K*T_in/N. The block causes a K"
"*T_in delay. The second outport outputs a pulse when Kth message signal is re"
"ceived. Use function BCHPOLY to view the valid N, K, and error-corr ection ca"
"pability T combination."
      MaskPromptString	      "Codeword length N (N=2^M-1. M is a >2 integer):"
"|Message length K (check BCHPOLY for valid K):|Input sample time T_in (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "[x,y]=trigicon(1,75,get_param(gcb,'orientation'"
"),1);\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90],x,y);disp('BCH en')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "15|5|1/5"
      System {
	Name			"Binary sequence\nBCH encode"
	Location		[360, 100, 1028, 256]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [90, 30, 110, 50]
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nBCH encode1"
	  Ports			  [1, 1]
	  Position		  [320, 18, 400, 62]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nBCH encode"
	  SourceType		  "Vector I/O BCH encode"
	  n			  "n"
	  k			  "k"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [130, 85, 170, 120]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [25, 83, 105, 127]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [205, 28, 285, 72]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [465, 33, 545, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [610, 35, 630, 55]
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [570, 55, 590, 75]
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [250, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [15, 0; 0, 30; 110, 0; 0, -35]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Binary vector\nBCH encode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [0, -35]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nBCH encode1"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nHamming decode"
      Ports		      [1, 1]
      Position		      [120, 533, 200, 577]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O Hamming decode"
      MaskDescription	      "Single error-correction Hamming decode with cod"
"eword length N=2^M-1, message length K=2^M-M-1, where M is a >=3 integer."
      MaskHelp		      "This block decodes length N binary codeword int"
"o length K message using Hamming code. The block uses sequential input/output"
" format. The input sequence sample time is K*T_out/N. The block causes a K*T_"
"out delay. Use function GFPRIMDF or GFPRIMFD to find M-degree\\nprimitive pol"
"ynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or M-degre"
"e primitive polynomial:|Input sample time T_out (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "if length(k)>1,p=k;k=n-length(p)+1;else,p=gfpri"
"mdf(n-k);end;\n\n"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);\ndisp('Hamming de') "
"                                                                             "
"                                                                             "
"       "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|gfprimfd(3,'min')|1/4"
      System {
	Name			"Binary sequence\nHamming decode"
	Location		[360, 100, 996, 251]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "sequential\ncode-word-in"
	  Position		  [120, 25, 140, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nHamming decode"
	  Ports			  [1, 1]
	  Position		  [305, 13, 385, 57]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nHamming decode"
	  SourceType		  "Vector I/O Hamming decode"
	  n			  "n"
	  k			  "p"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [130, 80, 170, 115]
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [25, 78, 105, 122]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [200, 23, 280, 67]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_1"
	  Position		  [525, 55, 535, 65]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down1"
	  Ports			  [3, 2]
	  Position		  [425, 28, 505, 72]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sequential\nmessage-out"
	  Position		  [575, 30, 595, 50]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  2
	  DstBlock		  "Terminator_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [235, 0]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  1
	  DstBlock		  "sequential\nmessage-out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sequential\ncode-word-in"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nHamming decode"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nHamming decode"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [0, 35; 115, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nHamming encode"
      Ports		      [1, 2]
      Position		      [20, 533, 100, 577]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O Hamming encode"
      MaskDescription	      "Single error-correction Hamming encode with cod"
"eword length N=2^M-1, message length K=2^M-M-1, where M is a >=3 integer."
      MaskHelp		      "This block encodes length K binary message into"
" length N binary codeword using Hamming code. The block uses sequential input"
"/output format. The output sequence sample time is K*T_in/N. The block causes"
" a K*T_in delay. The second outport outputs a pulse when Kth message signal i"
"s received. Use function GFPRIMDF or GFPRIMFD to find M-degree\\nprimitive po"
"lynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or M-degre"
"e primitive polynomial:|Input sample time T_in (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "if length(k)>1,p=k;k=n-length(k)+1;else,p=gfpri"
"mdf(n-k);end;\n\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90]);\ndisp('Hamming en')    "
"                                                                             "
"                                                                             "
" "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|gfprimfd(3,'min')|1/4"
      System {
	Name			"Binary sequence\nHamming encode"
	Location		[360, 100, 1001, 269]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [55, 35, 75, 55]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nHamming encode1"
	  Ports			  [1, 1]
	  Position		  [320, 23, 400, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nHamming encode"
	  SourceType		  "Vector I/O Hamming encode"
	  n			  "n"
	  k			  "p"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [140, 90, 180, 125]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [25, 88, 105, 132]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [215, 33, 295, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down1"
	  Ports			  [3, 2]
	  Position		  [460, 38, 540, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [605, 40, 625, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [565, 60, 585, 80]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [235, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  Points		  [15, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [5, 0; 0, 30; 105, 0; 0, -35]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nHamming encode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nHamming encode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nRS decode"
      Ports		      [1, 2]
      Position		      [370, 533, 450, 577]
      TreatAsAtomicUnit	      off
      MaskType		      "Binary sequence I/O RS decode"
      MaskDescription	      "RS decode with codeword length N, message lengt"
"h K."
      MaskHelp		      "This block decodes length N binary codeword int"
"o length K binary message. The block uses sequence input/output format. The i"
"nput sequential sample time is K*T_out/N. The block causes a K*M*T_out delay."
" The second outport outputs the number of errors detected in the process. If "
"the codeword contains more error than the correction capability, this output "
"is nagative."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K:|Output sample time T_out (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "m=3;p_d=7;while p_d<n,m=m+1;p_d=2^m-1;end;\n"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);\ndisp('B-RS de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5|1/5/3"
      System {
	Name			"Binary sequence\nRS decode"
	Location		[360, 100, 1094, 257]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [125, 40, 145, 60]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nRS decode"
	  Ports			  [2, 2]
	  Position		  [415, 38, 495, 82]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nRS decode"
	  SourceType		  "Binary vector I/O RS decode"
	  n			  "n"
	  k			  "k"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [120, 90, 160, 125]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [20, 88, 100, 132]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [195, 38, 275, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n*m:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Rising edge\ndetector"
	  Ports			  [1, 1]
	  Position		  [300, 58, 380, 102]
	  ShowName		  off
	  SourceBlock		  "commutil/Rising edge\ndetector"
	  SourceType		  "Edge detection"
	  thld			  "0.1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_1"
	  Position		  [670, 70, 680, 80]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [570, 43, 650, 87]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k*m"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [695, 45, 715, 65]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [515, 60, 535, 80]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "Terminator_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [390, 0]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Binary vector\nRS decode"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nRS decode"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [15, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [5, 0]
	  DstBlock		  "Rising edge\ndetector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nRS decode"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Rising edge\ndetector"
	  SrcPort		  1
	  Points		  [10, 0]
	  Branch {
	    Points		    [0, 20; 150, 0; 0, -35]
	    DstBlock		    "Triggered\nbuffer down"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, -10]
	    DstBlock		    "Binary vector\nRS decode"
	    DstPort		    2
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nRS encode"
      Ports		      [1, 2]
      Position		      [270, 533, 350, 577]
      TreatAsAtomicUnit	      off
      MaskType		      "Binary sequence I/O RS encode"
      MaskDescription	      "RS encode with codeword length N, message lengt"
"h K."
      MaskHelp		      "This block encodes length K binary message into"
" length N binary codeword. The block uses sequential input/output format. The"
" output sequence sample time is K*T_in/N. The block causes a K*M*T_in delay. "
"The second outport outputs a pulse when (K*M)-th message signal is received."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K:|Input sample time T_in (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "m=3;p_m=7;while p_m<n,m=m+1;p_m=2^m-1;end;\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90]);\ndisp('B-RS en')       "
"                                                                             "
"                                                                             "
" "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5|1/5/3"
      System {
	Name			"Binary sequence\nRS encode"
	Location		[360, 100, 1130, 250]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [140, 25, 160, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nRS encode"
	  Ports			  [2, 1]
	  Position		  [445, 23, 525, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nRS encode"
	  SourceType		  "Binary vector I/O RS encode"
	  n			  "n"
	  k			  "k"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [135, 80, 175, 115]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [25, 78, 105, 122]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [205, 23, 285, 67]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k*m:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Rising edge\ndetector"
	  Ports			  [1, 1]
	  Position		  [315, 43, 395, 87]
	  ShowName		  off
	  SourceBlock		  "commutil/Rising edge\ndetector"
	  SourceType		  "Edge detection"
	  thld			  "0.1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [565, 38, 645, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n*m"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [715, 40, 735, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [670, 60, 690, 80]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Rising edge\ndetector"
	  SrcPort		  1
	  Points		  [5, 0]
	  Branch {
	    Points		    [25, 0]
	    DstBlock		    "Binary vector\nRS encode"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, 30; 130, 0; 0, -35]
	    DstBlock		    "Triggered\nbuffer down"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Binary vector\nRS encode"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [365, 0; 0, -30]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nRS encode"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [0, 10]
	  DstBlock		  "Rising edge\ndetector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [0, -35]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\ncyclic decode"
      Ports		      [1, 1]
      Position		      [120, 323, 200, 367]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O cyclic decode"
      MaskDescription	      "Sequence decode with codeword length N and mess"
"age length K."
      MaskHelp		      "This block decodes length N binary codeword int"
"o length K message using cyclic code. The block uses sequential input/output "
"format. Use function CYCLPOLY for a list of cyclic generator polynomials. The"
" input sequence sample time is K*T_out/N. The block causes a K*T_out delay."
      MaskPromptString	      "Codeword length N:|Message length K, or generat"
"or polynomial Pg:|Output sample time T_out (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;p=@2;samp=@3;"
      MaskInitialization      "if length(p)==1, p=cyclpoly(n,p,'min');end;if i"
"sempty(p),error('No such cyclic code exist');end;k=n-length(p)+1;\n"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);\ndisp('Cyclic de'); "
"                                                                             "
"                                                                             "
"       "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|4|1/4"
      System {
	Name			"Binary sequence\ncyclic decode"
	Location		[360, 100, 994, 263]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "sequential\ncode-word-in"
	  Position		  [125, 35, 145, 55]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\ncyclic decode"
	  Ports			  [1, 1]
	  Position		  [315, 23, 395, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\ncyclic decode"
	  SourceType		  "Vector I/O cyclic decode"
	  n			  "n"
	  p			  "p"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [140, 90, 180, 125]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [35, 88, 115, 132]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [210, 33, 290, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_1"
	  Position		  [535, 65, 545, 75]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [440, 38, 520, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sequential\nmessage-out"
	  Position		  [585, 40, 605, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "Terminator_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [240, 0]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "sequential\nmessage-out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sequential\ncode-word-in"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\ncyclic decode"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\ncyclic decode"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [5, 0; 0, 35; 110, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\ncyclic encode"
      Ports		      [1, 2]
      Position		      [20, 323, 100, 367]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O cyclic encode"
      MaskDescription	      "Cyclic encode with codeword length N and messag"
"e length K."
      MaskHelp		      "This block encodes length K binary message into"
" length N binary codeword using cyclic code. The block uses sequential input/"
"output format. The output sequence sample time is K*T_in/N. The block causes "
"a K*T_in delay. The second outport outputs a pulse when Kth message signal is"
" received. Use function CYCLPOLY for a list of cyclic generator polynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or generat"
"or polynomial Pg:|Input sample time T_in (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;p=@2;samp=@3;"
      MaskInitialization      "if length(p)==1,p=cyclpoly(n,p,'min');if isempt"
"y(p),error('No such cyclic code exist');end;end;k=n-length(p)+1;\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90]);\ndisp('Cyclic en')     "
"                                                                             "
"                                                                             "
" "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|4|1/4"
      System {
	Name			"Binary sequence\ncyclic encode"
	Location		[360, 100, 1008, 270]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [135, 30, 155, 50]
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\ncyclic encode1"
	  Ports			  [1, 1]
	  Position		  [335, 18, 415, 62]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\ncyclic encode"
	  SourceType		  "Vector I/O cyclic encode"
	  n			  "n"
	  p			  "p"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [155, 85, 195, 120]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [40, 83, 120, 127]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [225, 28, 305, 72]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [475, 33, 555, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [620, 35, 640, 55]
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [580, 55, 600, 75]
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [235, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [10, 0; 0, 30; 105, 0; 0, -35]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\ncyclic encode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\ncyclic encode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nlinear decode"
      Ports		      [1, 1]
      Position		      [120, 133, 200, 177]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O linear block decode"
      MaskDescription	      "Linear block decode with message length K and c"
"odeword length N."
      MaskHelp		      "This block decodes length N binary codeword int"
"o length K message using linear block code. The block uses sequential input/o"
"utput format. The input sequence sample time is K*T_out/N. The block causes a"
" K*T_out delay. The generator matrix is a K-by-N matrix. Linear block code is"
" a generic code."
      MaskPromptString	      "Generator matrix (binary K-by-N matrix):|Error-"
"correction truth table (0 for single error-corr):|Output sample time T_out (s"
"ec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "G=@1;trt=@2;samp=@3;"
      MaskInitialization      "[k,n]=size(G);\n"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);\ndisp('Linear de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[[1 1 0; 0 1 1; 1 1 1; 1 0 1] eye(4)]|0|1/4"
      System {
	Name			"Binary sequence\nlinear decode"
	Location		[360, 100, 991, 264]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "sequential\ncode-word-in"
	  Position		  [130, 35, 150, 55]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nlin-blk decode1"
	  Ports			  [1, 1]
	  Position		  [310, 23, 390, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nlinear decode"
	  SourceType		  "Vector I/O linear block decode"
	  G			  "G"
	  trt			  "trt"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [140, 90, 180, 125]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [35, 88, 115, 132]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [205, 33, 285, 77]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_2"
	  Position		  [535, 65, 545, 75]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [440, 38, 520, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sequential\nmessage-out"
	  Position		  [585, 40, 605, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [0, -35]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [5, 0; 0, 35; 115, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nlin-blk decode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nlin-blk decode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sequential\ncode-word-in"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "sequential\nmessage-out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [240, 0]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "Terminator_2"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary sequence\nlinear encode"
      Ports		      [1, 2]
      Position		      [20, 133, 100, 177]
      TreatAsAtomicUnit	      off
      MaskType		      "Sequence I/O linear block encode"
      MaskDescription	      "Linear block encode with message length K and c"
"odeword length N."
      MaskHelp		      "This block encodes length K binary message into"
" length N binary codeword using linear block code. The block uses sequential "
"input/output format. The output sequence sample time is K*T_in/N. The block c"
"auses a K*T_in delay. The second outport outputs a pulse when Kth message sig"
"nal is received. The generator matrix is a K-by-N matrix. Linear block code i"
"s a generic code."
      MaskPromptString	      "Generator matrix (binary K-by-N matrix):|Input "
"sample time T_in (sec):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "G=@1;samp=@2;"
      MaskInitialization      "[k, n]=size(G);\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90]);\ndisp('Linear en')     "
"                                                                             "
"                                                                             "
" "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[[1 1 0; 0 1 1; 1 1 1; 1 0 1] eye(4)]|1/4"
      System {
	Name			"Binary sequence\nlinear encode"
	Location		[360, 100, 1027, 256]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [130, 40, 150, 60]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Binary vector\nlin-blk encode1"
	  Ports			  [1, 1]
	  Position		  [330, 28, 410, 72]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Binary vector\nlinear encode"
	  SourceType		  "Vector I/O linear block encode"
	  G			  "G"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [150, 95, 190, 130]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [35, 93, 115, 137]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [220, 38, 300, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down"
	  Ports			  [3, 2]
	  Position		  [470, 43, 550, 87]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [615, 45, 635, 65]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [580, 65, 600, 85]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Binary vector\nlin-blk encode1"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Binary vector\nlin-blk encode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [10, 0; 0, 30; 105, 0; 0, -35]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [235, 0; 0, -40]
	  DstBlock		  "Triggered\nbuffer down"
	  DstPort		  3
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nBCH decode"
      Ports		      [2, 2]
      Position		      [370, 53, 450, 97]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O BCH decode"
      MaskDescription	      "BCH decode with input codeword vector length N,"
" output message vector length K, and error-correction capability T. (N,K,T) m"
"ust be a valid BCH code combination."
      MaskHelp		      "This block decodes length N binary vector codew"
"ord input into length K binary vector message output using BCH code. The bloc"
"k refreshes its decoding output when the enable signal at the second inport h"
"as positive value. The second outport outputs the number of errors detected i"
"n the process. A negative value indicates the block found more error in the c"
"odeword than T."
      MaskPromptString	      "Codeword length N (N=2^M-1. M is a >2 integer):"
"|Message length K (check BCHPOLY for valid K):|Error-correction capability T "
"(0 for unknown):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;t=@3;"
      MaskInitialization      "[x,y]=trigicon(0,25,get_param(gcb,'orientation'"
"),1);if t<=0, [x1,x2,x3,x4,t]=bchpoly(n,k);end;dim=3;pow_dim=7;while pow_dim<"
"n,dim=dim+1;pow_dim=2^dim-1;end;tp=gftuple([-1:n-1]',dim);\n\n"
      MaskDisplay	      "plot(0,0,100,100,[5 15 15 5 15 15 5 5 15 15 20 "
"15 75 75 85 75 75 15 75 75 85 85 95 95 85 85 95],[75 75 85 85 85 65 65 95 95 "
"83 80 77 77 73 80 87 83 83 83 87 80 90 90 70 70 80 80],x,y);disp('BCH de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "15|5|3"
      System {
	Name			"Binary vector\nBCH decode"
	Location		[360, 100, 943, 260]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [20, 15, 40, 35]
	  ShowName		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [10, 100, 30, 120]
	  ShowName		  off
	  Port			  "2"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [395, 40, 435, 75]
	  ShowName		  off
	  Outputs		  "[k, 1]"
	}
	Block {
	  BlockType		  Memory
	  Name			  "Memory"
	  Position		  [295, 95, 335, 125]
	  Orientation		  "left"
	  ShowName		  off
	  X0			  "zeros(1,k+1)"
	  InheritSampleTime	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux"
	  Ports			  [2, 1]
	  Position		  [80, 41, 115, 74]
	  ShowName		  off
	  Inputs		  "[n, 1]"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "S-function"
	  Ports			  [1, 1]
	  Position		  [170, 20, 235, 40]
	  ShowName		  off
	  FunctionName		  "simbchdc"
	  Parameters		  "n, k, t,tp,dim"
	}
	Block {
	  BlockType		  Switch
	  Name			  "Switch"
	  Position		  [295, 44, 325, 76]
	  ShowName		  off
	  Threshold		  "0.5"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [495, 30, 515, 50]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [495, 95, 515, 115]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Switch"
	  SrcPort		  1
	  Points		  [30, 0]
	  Branch {
	    DstBlock		    "Demux"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, 50]
	    DstBlock		    "Memory"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Memory"
	  SrcPort		  1
	  Points		  [-35, 0; 0, -40]
	  DstBlock		  "Switch"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "S-function"
	  SrcPort		  1
	  Points		  [15, 0; 0, 20]
	  DstBlock		  "Switch"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [15, 0; 0, 25]
	  DstBlock		  "Mux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux"
	  SrcPort		  1
	  Points		  [30, 0; 0, -30]
	  DstBlock		  "S-function"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [25, 0]
	  Branch {
	    Points		    [140, 0; 0, -50]
	    DstBlock		    "Switch"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, -45]
	    DstBlock		    "Mux"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  Points		  [15, 0; 0, -10]
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [15, 0; 0, 40]
	  DstBlock		  "out_2"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nBCH encode"
      Ports		      [1, 1]
      Position		      [270, 53, 350, 97]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O BCH encode"
      MaskDescription	      "BCH encode with input message vector length K a"
"nd output codeword vector length N. (N, K) must be a valid BCH code pair.  "
      MaskHelp		      "This block encodes length K binary vector messa"
"ge input into length N binary vector codeword output using BCH code. Use func"
"tion BCHPOLY to view the valid N, K, and error-corr ection capability T combi"
"nation."
      MaskPromptString	      "Codeword length N (N=2^M-1. M is a >2 integer):"
"|Message length K (check BCHPOLY for valid K):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "pg = bchpoly(n,k);[h,G]=cyclgen(n,pg);\n"
      MaskDisplay	      "plot(0,0,100,100,[05 15 15 05 05 15 15 15  15 2"
"0 15 75 75 85 75 75 15 75 75  85 85 95 95 85 85 95 85 85 95],[80 80 90 90 70 "
"70 90 80  83 80 77 77 73 80 87 83 83 83 87  80 95 95 65 65 85 85 85 75 75]);d"
"isp('BCH en')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "15|5"
      System {
	Name			"Binary vector\nBCH encode"
	Location		[360, 100, 724, 249]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [50, 20, 70, 40]
	  ShowName		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [210, 45, 230, 65]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction1"
	  Ports			  [2, 1]
	  Position		  [260, 32, 290, 63]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [30, 69, 80, 111]
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "G"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [140, 20, 200, 60]
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "[1 size(G,1)]"
	  Bcols			  "size(G,2)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [325, 40, 345, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Math\nFunction1"
	  SrcPort		  1
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  Points		  [40, 0]
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nHamming decode"
      Ports		      [1, 1]
      Position		      [120, 448, 200, 492]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O Hamming decode"
      MaskDescription	      "Hamming decode with input codeword vector lengt"
"h N=2^M-1, output message vector length K=2^M-M-1, where M is a >=3 integer."
      MaskHelp		      "This block decodes length N binary vector codew"
"ord input into length K binary vector message output using Hamming code. Use"
"\\nfunction GFPRIMDF or GFPRIMFD to find M-degree primitive polynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or M-degre"
"e primitive polynomial:"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "if length(k)>1,p=k;k=n-length(p)+1;else,p=gfpri"
"mdf(n-k);end;[H,G]=hammgen(n-k,p);trt=htruthtb(G);[n,m]=size(G);G=[zeros(n,m-"
"n),eye(n)];\n"
      MaskDisplay	      "plot(0,0,100,100,[1 3 3 1 3 3 1 1 3 3 4 3 15 15"
" 17 15 15 3 15 15 17 17 19 19 17 17 19]*5,[-5 -5 5 5 5 -15 -15 15 15 3 0 -3 -"
"3 -7 0 7 3 3 3 7 0 10 10 -10 -10 0 0]+80);disp('Hamming de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|gfprimfd(3,'min')"
      System {
	Name			"Binary vector\nHamming decode"
	Location		[360, 100, 1016, 256]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [15, 90, 35, 110]
	  ShowName		  off
	}
	Block {
	  BlockType		  CombinatorialLogic
	  Name			  "Combinatorial\nLogic1"
	  Position		  [340, 48, 370, 72]
	  ShowName		  off
	  TruthTable		  "trt"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [110, 110, 130, 130]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction3"
	  Ports			  [2, 1]
	  Position		  [280, 42, 310, 73]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction4"
	  Ports			  [2, 1]
	  Position		  [470, 97, 500, 128]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [60, 19, 110, 61]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "H"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [170, 30, 230, 70]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "size(H)"
	  Bcols			  "1"
	}
	Block {
	  BlockType		  Selector
	  Name			  "Selector"
	  Ports			  [1, 1]
	  Position		  [540, 98, 590, 132]
	  ShowName		  off
	  Elements		  "[m-n+1:m]"
	  InputPortWidth	  "m"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum1"
	  Ports			  [2, 1]
	  Position		  [415, 85, 435, 105]
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [620, 105, 640, 125]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Combinatorial\nLogic1"
	  SrcPort		  1
	  Points		  [25, 0]
	  DstBlock		  "Sum1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sum1"
	  SrcPort		  1
	  Points		  [15, 0]
	  DstBlock		  "Math\nFunction4"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction4"
	  SrcPort		  1
	  DstBlock		  "Selector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction3"
	  SrcPort		  1
	  DstBlock		  "Combinatorial\nLogic1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Selector"
	  SrcPort		  1
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  Points		  [115, 0]
	  Branch {
	    Points		    [0, -55]
	    DstBlock		    "Math\nFunction3"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Math\nFunction4"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [80, 0]
	  Branch {
	    Points		    [0, -40]
	    DstBlock		    "Matrix\nMultiplication"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Sum1"
	    DstPort		    2
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nHamming encode"
      Ports		      [1, 1]
      Position		      [20, 448, 100, 492]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O Hamming encode"
      MaskDescription	      "Hamming encode with input message vector length"
" K=2^M-M-1, output codeword vector length N=2^M-1, where M is a >=3 integer."
      MaskHelp		      "This block encodes length K binary vector messa"
"ge input into length N binary vector codeword output using Hamming code. Use "
"function GFPRIMDF or GFPRIMFD to find M-degree primitive polynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or M-degre"
"e primitive polynomial:"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "if length(k)>1, p=k; k=n-length(k)+1;\nelse, p="
"gfprimdf(n-k); end;\n[h,G]=hammgen(n-k,p);\n"
      MaskDisplay	      "plot(0,0,100,100,[1 3 3 1 1 3 3 3 3 4 3 15 15 1"
"7 15 15 3 15 15 17 17 19 19 17 17 19 17 17 19]*5,[0 0 10 10 -10 -10 10 0 3 0 "
"-3 -3 -7 0 7 3 3 3 7 0 15 15 -15 -15 5 5 5 -5 -5]+80);disp('Hamming en')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|gfprimfd(3,'min')"
      System {
	Name			"Binary vector\nHamming encode"
	Location		[360, 100, 717, 263]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [40, 25, 60, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [200, 50, 220, 70]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction1"
	  Ports			  [2, 1]
	  Position		  [250, 37, 280, 68]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [20, 74, 70, 116]
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "G"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [130, 25, 190, 65]
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "[1 size(G,1)]"
	  Bcols			  "size(G,2)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [315, 45, 335, 65]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Math\nFunction1"
	  SrcPort		  1
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  Points		  [40, 0]
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nRS decode"
      Ports		      [2, 2]
      Position		      [370, 363, 450, 407]
      TreatAsAtomicUnit	      off
      MaskType		      "Binary vector I/O RS decode"
      MaskDescription	      "Reed-Solomon decode with binary input vector le"
"ngth N*M and binary output vector length K*M.                   "
      MaskHelp		      "This block decodes length N*M binary vector inp"
"ut into length K*M binary vector output. The codeword length is N=2^M-1. M>2."
" The message length is K<N. The block refreshes its decoding output when the "
"enable signal at the second inport has positive value. The second outport out"
"puts the number of errors detected in the process. If the codeword contains m"
"ore errors than the correction capability, this output is negative."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K (< N):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "dim=3;p_d=7;while p_d<n,dim=dim+1;p_d=2^dim-1;e"
"nd;tp=gftuple([-1:n-1]',dim);\n"
      MaskDisplay	      "plot(0,0,100,100,[5 15 15 5 15 15 5 5 15 15 20 "
"15 75 75 85 75 75 15 75 75 85 85 95 95 85 85 95],[75 75 85 85 85 65 65 95 95 "
"83 80 77 77 73 80 87 83 83 83 87 80 90 90 70 70 80 80],[5 10 10 15 15 20],5*["
"1 1 2 2 1 1]+10);\ndisp('B-RS de')                                           "
"                                                                             "
"                                                                             "
"      "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5"
      System {
	Name			"Binary vector\nRS decode"
	Location		[360, 100, 910, 260]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [20, 15, 40, 35]
	  ShowName		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [10, 100, 30, 120]
	  ShowName		  off
	  Port			  "2"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [395, 42, 435, 78]
	  ShowName		  off
	  Outputs		  "[k*dim,1]"
	}
	Block {
	  BlockType		  Memory
	  Name			  "Memory"
	  Position		  [295, 95, 335, 125]
	  Orientation		  "left"
	  ShowName		  off
	  X0			  "zeros(1,k*dim+1)"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux"
	  Ports			  [2, 1]
	  Position		  [80, 41, 115, 74]
	  ShowName		  off
	  Inputs		  "2"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "S-function"
	  Ports			  [1, 1]
	  Position		  [170, 20, 235, 40]
	  ShowName		  off
	  FunctionName		  "simrsdbv"
	  Parameters		  "n, k, tp, dim"
	}
	Block {
	  BlockType		  Switch
	  Name			  "Switch"
	  Position		  [295, 44, 325, 76]
	  ShowName		  off
	  Threshold		  "0.5"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [500, 40, 520, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [470, 85, 490, 105]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [15, 0]
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [25, 0]
	  Branch {
	    Points		    [0, -45]
	    DstBlock		    "Mux"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [140, 0; 0, -50]
	    DstBlock		    "Switch"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Mux"
	  SrcPort		  1
	  Points		  [30, 0; 0, -30]
	  DstBlock		  "S-function"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [15, 0; 0, 25]
	  DstBlock		  "Mux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "S-function"
	  SrcPort		  1
	  Points		  [15, 0; 0, 20]
	  DstBlock		  "Switch"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Memory"
	  SrcPort		  1
	  Points		  [-35, 0; 0, -40]
	  DstBlock		  "Switch"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Switch"
	  SrcPort		  1
	  Points		  [30, 0]
	  Branch {
	    Points		    [0, 50]
	    DstBlock		    "Memory"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Demux"
	    DstPort		    1
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nRS encode"
      Ports		      [2, 1]
      Position		      [270, 363, 350, 407]
      TreatAsAtomicUnit	      off
      MaskType		      "Binary vector I/O RS encode"
      MaskDescription	      "Reed-Solomon encode with binary input vector le"
"ngth K*M and binary output vector length N*M.                   "
      MaskHelp		      "This block encodes length K*M binary vector inp"
"ut into length N*M binary vector output. The codeword length is N=2^M-1. M is"
" a integer larger than 2. The message length is K<N. The block refreshes its "
"encoding output when the enable signal at the second inport has positive valu"
"e."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K (< N):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "if length(k)>1,pg=k;k=n-length(pg)-1;else,pg=rs"
"poly(n,k);end;dim=3;p_dim=7;while p_dim<n,dim=dim+1;p_dim=2^dim-1;end;tp=gftu"
"ple([-1:n-1]',dim);\n"
      MaskDisplay	      "plot(0,0,100,100,[05 15 15 05 05 15 15 15  15 2"
"0 15 75 75 85 75 75 15 75 75  85 85 95 95 85 85 95 85 85 95],[80 80 90 90 70 "
"70 90 80  83 80 77 77 73 80 87 83 83 83 87  80 95 95 65 65 85 85 85 75 75],[5"
" 10 10 15 15 20],5*[1 1 2 2 1 1]+10);\ndisp('B-RS en')                       "
"                                                                             "
"                                                                             "
"                                              "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5"
      System {
	Name			"Binary vector\nRS encode"
	Location		[360, 100, 833, 271]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [30, 25, 50, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [20, 110, 40, 130]
	  ShowName		  off
	  Port			  "2"
	}
	Block {
	  BlockType		  Memory
	  Name			  "Memory"
	  Position		  [305, 105, 345, 135]
	  Orientation		  "left"
	  ShowName		  off
	  X0			  "zeros(1,n*dim)"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux"
	  Ports			  [2, 1]
	  Position		  [90, 51, 125, 84]
	  ShowName		  off
	  Inputs		  "2"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "S-function"
	  Ports			  [1, 1]
	  Position		  [180, 30, 245, 50]
	  ShowName		  off
	  FunctionName		  "simrscbv"
	  Parameters		  "n, k, pg,tp,dim"
	}
	Block {
	  BlockType		  Switch
	  Name			  "Switch"
	  Position		  [305, 54, 335, 86]
	  ShowName		  off
	  Threshold		  "0.5"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [425, 60, 445, 80]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [25, 0]
	  Branch {
	    Points		    [0, -45]
	    DstBlock		    "Mux"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [140, 0; 0, -50]
	    DstBlock		    "Switch"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Mux"
	  SrcPort		  1
	  Points		  [30, 0; 0, -30]
	  DstBlock		  "S-function"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [15, 0; 0, 25]
	  DstBlock		  "Mux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "S-function"
	  SrcPort		  1
	  Points		  [15, 0; 0, 20]
	  DstBlock		  "Switch"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Memory"
	  SrcPort		  1
	  Points		  [-35, 0; 0, -40]
	  DstBlock		  "Switch"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Switch"
	  SrcPort		  1
	  Points		  [30, 0]
	  Branch {
	    Points		    [0, 50]
	    DstBlock		    "Memory"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "out_1"
	    DstPort		    1
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\ncyclic decode"
      Ports		      [1, 1]
      Position		      [120, 243, 200, 287]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O cyclic decode"
      MaskDescription	      "Cyclic decode with codeword length N and messag"
"e length K."
      MaskHelp		      "This block decodes length N binary vector codew"
"ord input into length K binary vector message output using cyclic code. When "
"Pg is specified instead of K, the block uses the user-defined cyclic polynomi"
"al Pg. Use function CYCLPOLY for a list of cyclic generator polynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or generat"
"or polynomial Pg:"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;p=@2;"
      MaskInitialization      "if length(p)==1, p=cyclpoly(n,p,'min');\n   if "
"isempty(p), error('No cyclic code exists for specified values of Nand K'); en"
"d; end;\n[H,G]=cyclgen(n,p);trt=htruthtb(G);[n,m]=size(G);"
      MaskDisplay	      "plot(0,0,100,100,[5 15 15 5 15 15 5 5 15 15 20 "
"15 75 75 85 75 75 15 75 75 85 85 95 95 85 85 95],[75 75 85 85 85 65 65 95 95 "
"83 80 77 77 73 80 87 83 83 83 87 80 90 90 70 70 80 80]);\ndisp('Cyclic de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|4"
      System {
	Name			"Binary vector\ncyclic decode"
	Location		[360, 100, 1014, 270]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [15, 90, 35, 110]
	  ShowName		  off
	}
	Block {
	  BlockType		  CombinatorialLogic
	  Name			  "Combinatorial\nLogic1"
	  Position		  [340, 48, 370, 72]
	  ShowName		  off
	  TruthTable		  "trt"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [110, 110, 130, 130]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction3"
	  Ports			  [2, 1]
	  Position		  [280, 42, 310, 73]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction4"
	  Ports			  [2, 1]
	  Position		  [470, 97, 500, 128]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [60, 19, 110, 61]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "H"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [170, 30, 230, 70]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "size(H)"
	  Bcols			  "1"
	}
	Block {
	  BlockType		  Selector
	  Name			  "Selector"
	  Ports			  [1, 1]
	  Position		  [540, 98, 590, 132]
	  ShowName		  off
	  Elements		  "[m-n+1:m]"
	  InputPortWidth	  "m"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum1"
	  Ports			  [2, 1]
	  Position		  [415, 85, 435, 105]
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [620, 105, 640, 125]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Combinatorial\nLogic1"
	  SrcPort		  1
	  Points		  [25, 0]
	  DstBlock		  "Sum1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sum1"
	  SrcPort		  1
	  Points		  [15, 0]
	  DstBlock		  "Math\nFunction4"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction4"
	  SrcPort		  1
	  DstBlock		  "Selector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction3"
	  SrcPort		  1
	  DstBlock		  "Combinatorial\nLogic1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Selector"
	  SrcPort		  1
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  Points		  [115, 0]
	  Branch {
	    DstBlock		    "Math\nFunction4"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, -55]
	    DstBlock		    "Math\nFunction3"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [80, 0]
	  Branch {
	    DstBlock		    "Sum1"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, -40]
	    DstBlock		    "Matrix\nMultiplication"
	    DstPort		    2
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\ncyclic encode"
      Ports		      [1, 1]
      Position		      [20, 243, 100, 287]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O cyclic encode"
      MaskDescription	      "Cyclic encode with codeword length N and messag"
"e length K. "
      MaskHelp		      "This block encodes length K binary vector messa"
"ge input into length N binary vector codeword output using cyclic code. When "
"Pg is specified instead of K, the block uses the user-defined cyclic polynomi"
"al Pg. Use function CYCLPOLY for a list of cyclic generator polynomials."
      MaskPromptString	      "Codeword length N:|Message length K, or generat"
"or polynomial Pg:"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;p=@2;"
      MaskInitialization      "if length(p)==1,p=cyclpoly(n,p,'min');\n   if i"
"sempty(p),error('No cyclic code exists for specified values of N and K');end;"
"end;\n[h,G]=cyclgen(n, p);"
      MaskDisplay	      "plot(0,0,100,100,[05 15 15 05 05 15 15 15  15 2"
"0 15 75 75 85 75 75 15 75 75  85 85 95 95 85 85 95 85 85 95],[80 80 90 90 70 "
"70 90 80  83 80 77 77 73 80 87 83 83 83 87  80 95 95 65 65 85 85 85 75 75]);"
"\ndisp('Cyclic en')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|4"
      System {
	Name			"Binary vector\ncyclic encode"
	Location		[360, 100, 723, 262]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [45, 30, 65, 50]
	  ShowName		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [205, 55, 225, 75]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction1"
	  Ports			  [2, 1]
	  Position		  [255, 42, 285, 73]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [25, 79, 75, 121]
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "G"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [135, 30, 195, 70]
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "[1 size(G,1)]"
	  Bcols			  "size(G,2)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [320, 50, 340, 70]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Math\nFunction1"
	  SrcPort		  1
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  Points		  [40, 0]
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nlinear decode"
      Ports		      [1, 1]
      Position		      [120, 53, 200, 97]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O linear block decode"
      MaskDescription	      "Linear block decode with input codeword vector "
"length N and output message vector length K."
      MaskHelp		      "This block decodes length N binary vector codew"
"ord input into length K binary vector message output using linear block code."
" The generator matrix is a K-by-N matrix. Linear block code is a generic code"
". Use the HTRUTHTB function to generate a single error-correction truth table"
"."
      MaskPromptString	      "Generator matrix (binary K-by-N matrix):|Error-"
"correction truth table (0 for single error-corr):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "G=@1;trt=@2;"
      MaskInitialization      "H=gen2par(G);if trt==0,trt=htruthtb(G);end;[n,m"
"]=size(G);\n"
      MaskDisplay	      "plot(0,0,100,100,[5 15 15 5 15 15 5 5 15 15 20 "
"15 75 75 85 75 75 15 75 75 85 85 95 95 85 85 95],[75 75 85 85 85 65 65 95 95 "
"83 80 77 77 73 80 87 83 83 83 87 80 90 90 70 70 80 80]);\ndisp('Linear de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[[1 1 0; 0 1 1; 1 1 1;1 0 1] eye(4)]|0"
      System {
	Name			"Binary vector\nlinear decode"
	Location		[360, 100, 1062, 267]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [30, 85, 50, 105]
	  ShowName		  off
	}
	Block {
	  BlockType		  CombinatorialLogic
	  Name			  "Combinatorial\nLogic"
	  Position		  [355, 43, 385, 67]
	  ShowName		  off
	  TruthTable		  "trt"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [125, 105, 145, 125]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction"
	  Ports			  [2, 1]
	  Position		  [295, 37, 325, 68]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction1"
	  Ports			  [2, 1]
	  Position		  [485, 92, 515, 123]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [75, 14, 125, 56]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "H"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [185, 25, 245, 65]
	  ShowName		  off
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "size(H)"
	  Bcols			  "1"
	}
	Block {
	  BlockType		  Selector
	  Name			  "Selector"
	  Ports			  [1, 1]
	  Position		  [555, 93, 605, 127]
	  ShowName		  off
	  Elements		  "[m-n+1:m]"
	  InputPortWidth	  "m"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [430, 80, 450, 100]
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [635, 100, 655, 120]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Combinatorial\nLogic"
	  SrcPort		  1
	  Points		  [20, 0; 0, 30]
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  Points		  [10, 0; 0, 10]
	  DstBlock		  "Math\nFunction1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction1"
	  SrcPort		  1
	  DstBlock		  "Selector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction"
	  SrcPort		  1
	  DstBlock		  "Combinatorial\nLogic"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Selector"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  Points		  [115, 0]
	  Branch {
	    Points		    [0, -55]
	    DstBlock		    "Math\nFunction"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Math\nFunction1"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [80, 0]
	  Branch {
	    Points		    [0, -40]
	    DstBlock		    "Matrix\nMultiplication"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Sum"
	    DstPort		    2
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Binary vector\nlinear encode"
      Ports		      [1, 1]
      Position		      [20, 53, 100, 97]
      TreatAsAtomicUnit	      off
      MaskType		      "Vector I/O linear block encode"
      MaskDescription	      "Linear block encode with input message vector l"
"ength K and output codeword vector length N."
      MaskHelp		      "Linear block encode with input message vector l"
"ength K and output codeword vector length N. The generator matrix is a K-by-N"
" matrix. Linear block code is a generic code."
      MaskPromptString	      "Generator matrix (binary K-by-N matrix):"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "G=@1;"
      MaskInitialization      "\n"
      MaskDisplay	      "plot(0,0,100,100,[05 15 15 05 05 15 15 15  15 2"
"0 15 75 75 85 75 75 15 75 75  85 85 95 95 85 85 95 85 85 95],[80 80 90 90 70 "
"70 90 80  83 80 77 77 73 80 87 83 83 83 87  80 95 95 65 65 85 85 85 75 75]);"
"\ndisp('Linear en')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[[1 1 0; 0 1 1; 1 1 1; 1 0 1] eye(4)]"
      System {
	Name			"Binary vector\nlinear encode"
	Location		[360, 100, 775, 258]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [60, 30, 80, 50]
	  ShowName		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [220, 55, 240, 75]
	  ShowName		  off
	  Value			  "2"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction"
	  Ports			  [2, 1]
	  Position		  [270, 42, 300, 73]
	  ShowName		  off
	  Operator		  "mod"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nConstant"
	  Ports			  [0, 1]
	  Position		  [40, 79, 90, 121]
	  SourceBlock		  "dspmtrx2/Matrix\nConstant"
	  SourceType		  "Matrix Constant"
	  M			  "G"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Matrix\nMultiplication"
	  Ports			  [2, 1]
	  Position		  [150, 30, 210, 70]
	  SourceBlock		  "dspmtrx2/Matrix\nMultiplication"
	  SourceType		  "Matrix Multiplication"
	  Asize			  "[1 size(G,1)]"
	  Bcols			  "size(G,2)"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [335, 50, 355, 70]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Math\nFunction"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Matrix\nMultiplication"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Matrix\nConstant"
	  SrcPort		  1
	  Points		  [40, 0]
	  DstBlock		  "Matrix\nMultiplication"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Integer sequence\nRS decode"
      Ports		      [1, 2]
      Position		      [370, 448, 450, 492]
      TreatAsAtomicUnit	      off
      MaskType		      "Integer sequence I/O RS decode"
      MaskDescription	      "RS decode with codeword length N, message lengt"
"h K. Input integers are in range [0, N-1]. "
      MaskHelp		      "This block decodes length N integer codeword in"
"to length K integer message. The block uses sequential input/output format. T"
"he input integers are in range [0, N-1]. The input sequence sample time is K*"
"T_out/N. The block causes a K*T_out delay. The second outport outputs the num"
"ber of errors detected in the process. If the codeword contains more errors t"
"han the correction capability, this output is negative."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K:|Output sample time T_out (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "m=3;p_d=7;while p_d<n,m=m+1;p_d=2^m-1;end;\n"
      MaskDisplay	      "plot(0,0,100,100,[35 05 05 35 35 35 15 15 25 25"
" 35 35 60 70 70 75 70 70 75 75 95 95 75 75 85 85],[95 95 85 85 95 85 85 95 95"
" 85 85 90 90 90 93 90 87 93 90 95 95 85 85 95 95 85]-5);\ndisp('Int RS de')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5|1/5"
      System {
	Name			"Integer sequence\nRS decode"
	Location		[360, 100, 1203, 277]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [120, 25, 140, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [115, 75, 155, 110]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Integer vector\nRS decode1"
	  Ports			  [2, 2]
	  Position		  [410, 23, 490, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Integer vector\nRS decode"
	  SourceType		  "Integer vector I/O RS decode"
	  n			  "n"
	  k			  "k"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [15, 73, 95, 117]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[n, k]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [185, 23, 265, 67]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[n:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Rising edge\ndetector"
	  Ports			  [1, 1]
	  Position		  [300, 43, 380, 87]
	  ShowName		  off
	  SourceBlock		  "commutil/Rising edge\ndetector"
	  SourceType		  "Edge detection"
	  thld			  "0.1"
	}
	Block {
	  BlockType		  Terminator
	  Name			  "Terminator_1"
	  Position		  [725, 55, 735, 65]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down1"
	  Ports			  [3, 2]
	  Position		  [625, 28, 705, 72]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "k"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  ZeroOrderHold
	  Name			  "Zero-Order\nHold"
	  Position		  [545, 19, 580, 51]
	  ShowName		  off
	  SampleTime		  "samp*k"
	}
	Block {
	  BlockType		  ZeroOrderHold
	  Name			  "Zero-Order\nHold1"
	  Position		  [755, 24, 790, 56]
	  ShowName		  off
	  SampleTime		  "samp"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [815, 30, 835, 50]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [515, 55, 535, 75]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Zero-Order\nHold1"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  1
	  DstBlock		  "Zero-Order\nHold1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Integer vector\nRS decode1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [10, 0; 0, 10]
	  DstBlock		  "Rising edge\ndetector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  2
	  DstBlock		  "Terminator_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Integer vector\nRS decode1"
	  SrcPort		  2
	  Points		  [0, 10]
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [450, 0]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Rising edge\ndetector"
	  SrcPort		  1
	  Points		  [5, 0]
	  Branch {
	    Points		    [0, -10]
	    DstBlock		    "Integer vector\nRS decode1"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [0, 20; 210, 0; 0, -35]
	    DstBlock		    "Triggered\nbuffer down1"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Integer vector\nRS decode1"
	  SrcPort		  1
	  DstBlock		  "Zero-Order\nHold"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Zero-Order\nHold"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Integer sequence\nRS encode"
      Ports		      [1, 2]
      Position		      [270, 448, 350, 492]
      TreatAsAtomicUnit	      off
      MaskType		      "Integer sequence I/O RS encode"
      MaskDescription	      "RS encode with codeword length N, message lengt"
"h K. Input integers are in range [0, N-1].                                "
      MaskHelp		      "This block encodes length K integer message int"
"o length N integer codeword. The block uses sequential input/output format. T"
"he input integers are in range [0, N-1]. The output sequence sample time is K"
"*T_in/N. The block causes a K*T_in delay. The second outport outputs a pulse "
"when Kth message signal is received."
      MaskPromptString	      "Code length N=2^M-1 (M is a >2 integer):|Messag"
"e length K:|Input sample time T_in (sec):"
      MaskStyleString	      "edit,edit,edit"
      MaskTunableValueString  "on,on,on"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "n=@1;k=@2;samp=@3;"
      MaskInitialization      "m=3;p_m=7;while p_m<n,m=m+1;p_m=2^m-1;end;\n"
      MaskDisplay	      "plot(0,0,100,100, [25 5 5 25 25 25 15 15 25 25 "
"50 60 60 65 60 60 65 65 95 95 65 65 75 75 85 85],[90 90 80 80 90 80 80 90 90 "
"85 85 85 88 85 82 88 85 90 90 80 80 90 90 80 80 90]);\ndisp('Int RS en')     "
"                                                                             "
"                                                                             "
" "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5|1/5"
      System {
	Name			"Integer sequence\nRS encode"
	Location		[360, 100, 1155, 245]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [140, 25, 160, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux1"
	  Ports			  [1, 2]
	  Position		  [150, 80, 190, 115]
	  ShowName		  off
	  Outputs		  "2"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Integer vector\nRS encode"
	  Ports			  [2, 1]
	  Position		  [450, 23, 530, 67]
	  ShowName		  off
	  SourceBlock		  "commblkcod/Integer vector\nRS encode"
	  SourceType		  "Integer vector I/O RS encode"
	  n			  "n"
	  k			  "k"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Pulses divide\nsample time1"
	  Ports			  [0, 1]
	  Position		  [35, 78, 115, 122]
	  ShowName		  off
	  SourceBlock		  "commsource/Pulses divide\nsample time"
	  SourceType		  "Pulse generator"
	  samp_time		  "samp*k"
	  out_divid		  "[k, n]"
	  offset		  "[0 0]"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Register-shift"
	  Ports			  [2, 2]
	  Position		  [220, 23, 300, 67]
	  ShowName		  off
	  SourceBlock		  "commutil/Register-shift"
	  SourceType		  "Register-shift"
	  shft_out		  "[k:-1:1]"
	  thrhld		  ".1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Rising edge\ndetector"
	  Ports			  [1, 1]
	  Position		  [330, 43, 410, 87]
	  ShowName		  off
	  SourceBlock		  "commutil/Rising edge\ndetector"
	  SourceType		  "Edge detection"
	  thld			  "0.1"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Triggered\nbuffer down1"
	  Ports			  [3, 2]
	  Position		  [575, 38, 655, 82]
	  ShowName		  off
	  SourceBlock		  "commutil/Triggered\nbuffer down"
	  SourceType		  "Triggered buffer down"
	  in_size		  "n"
	  ini_idx		  "0"
	  idx_inc		  "1"
	  thrshld		  ".1"
	  cycl_flag		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [740, 40, 760, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [700, 60, 720, 80]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Triggered\nbuffer down1"
	  SrcPort		  2
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Register-shift"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Rising edge\ndetector"
	  SrcPort		  1
	  Points		  [5, 0]
	  Branch {
	    Points		    [0, 30; 130, 0; 0, -35]
	    DstBlock		    "Triggered\nbuffer down1"
	    DstPort		    2
	  }
	  Branch {
	    Points		    [15, 0]
	    DstBlock		    "Integer vector\nRS encode"
	    DstPort		    2
	  }
	}
	Line {
	  SrcBlock		  "Integer vector\nRS encode"
	  SrcPort		  1
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  2
	  Points		  [365, 0]
	  DstBlock		  "Triggered\nbuffer down1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  1
	  DstBlock		  "Integer vector\nRS encode"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Register-shift"
	  SrcPort		  2
	  Points		  [0, 10]
	  DstBlock		  "Rising edge\ndetector"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Pulses divide\nsample time1"
	  SrcPort		  1
	  DstBlock		  "Demux1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux1"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "Register-shift"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Integer vector\nRS decode"
      Ports		      [2, 2]
      Position		      [370, 283, 450, 327]
      TreatAsAtomicUnit	      off
      MaskType		      "Integer vector I/O RS decode"
      MaskDescription	      "Reed-Solomon decode with integer output codewor"
"d vector length N and integer input message vector length K.         "
      MaskHelp		      "This block decodes length N integer vector code"
"word input into length K integer vector message output. The input/output inte"
"gers are in the range [0, N-1]. The block refreshes its decoding output when "
"the enable signal at the second inport has positive value. The second outport"
" outputs the number of errors detected in the process. If the codeword contai"
"ns more errors than the correction capability, this output is negative."
      MaskPromptString	      "Code word length N=2^M-1 (M is a >=3 integer):|"
"Message length K (< N):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "dim=3;p_d=7;while p_d<n,dim=dim+1;p_d=2^dim-1;e"
"nd;tp=gftuple([-1:n-1]',dim);\n"
      MaskDisplay	      "plot(0,0,100,100,[5 15 15 5 15 15 5 5 15 15 20 "
"15 75 75 85 75 75 15 75 75 85 85 95 95 85 85 95],[75 75 85 85 85 65 65 95 95 "
"83 80 77 77 73 80 87 83 83 83 87 80 90 90 70 70 80 80],[5 10 10 15 15 20],5*["
"1 1 2 2 1 1]+10);\ndisp('Int RS de')                                         "
"                                                                             "
"                                                                             "
"      "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5"
      System {
	Name			"Integer vector\nRS decode"
	Location		[360, 100, 749, 260]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [20, 15, 40, 35]
	  ShowName		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [10, 100, 30, 120]
	  ShowName		  off
	  Port			  "2"
	}
	Block {
	  BlockType		  Demux
	  Name			  "Demux"
	  Ports			  [1, 2]
	  Position		  [260, 40, 300, 75]
	  ShowName		  off
	  Outputs		  "[k, 1]"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux"
	  Ports			  [2, 1]
	  Position		  [80, 40, 115, 75]
	  ShowName		  off
	  Inputs		  "2"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "S-function"
	  Ports			  [1, 1]
	  Position		  [170, 50, 235, 70]
	  ShowName		  off
	  FunctionName		  "simrsdec"
	  Parameters		  "n, k, tp, dim"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [325, 40, 345, 60]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_2"
	  Position		  [340, 70, 360, 90]
	  ShowName		  off
	  Port			  "2"
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  2
	  Points		  [20, 0]
	  DstBlock		  "out_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Demux"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "S-function"
	  SrcPort		  1
	  DstBlock		  "Demux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [25, 0; 0, -45]
	  DstBlock		  "Mux"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Mux"
	  SrcPort		  1
	  DstBlock		  "S-function"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [15, 0; 0, 25]
	  DstBlock		  "Mux"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Integer vector\nRS encode"
      Ports		      [2, 1]
      Position		      [270, 283, 350, 327]
      TreatAsAtomicUnit	      off
      MaskType		      "Integer vector I/O RS encode"
      MaskDescription	      "Reed-Solomon encode with integer input message "
"vector length K and integer output codeword vector length N.      "
      MaskHelp		      "This block encodes length K integer vector mess"
"age input into length N integer vector codeword output. The input/output inte"
"gers are in range [0, N-1]. Code word length N=2^M-1, where M is a integer no"
" less than 3. The message length is K<N. The error-correction capability is T"
"=floor((N-K)/2). The block refreshes its decoding output when the enable sign"
"al at the second inport has positive value."
      MaskPromptString	      "Code length N=2^M-1 (M is a >=3 integer):|Messa"
"ge length K (< N):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n=@1;k=@2;"
      MaskInitialization      "if length(k)>1,pg=k;k=n-length(pg)-1;else,pg=rs"
"poly(n,k);end;dim=3;p_dim=7;while p_dim<n,dim=dim+1;p_dim=2^dim-1;end;tp=gftu"
"ple([-1:n-1]',dim);\n"
      MaskDisplay	      "plot(0,0,100,100,[05 15 15 05 05 15 15 15  15 2"
"0 15 75 75 85 75 75 15 75 75  85 85 95 95 85 85 95 85 85 95],[80 80 90 90 70 "
"70 90 80  83 80 77 77 73 80 87 83 83 83 87  80 95 95 65 65 85 85 85 75 75],[5"
" 10 10 15 15 20],5*[1 1 2 2 1 1]+10);\ndisp('Int RS en')                     "
"                                                                             "
"                                                                             "
"                                              "
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "7|5"
      System {
	Name			"Integer vector\nRS encode"
	Location		[360, 100, 663, 270]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [30, 25, 50, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "in_2"
	  Position		  [20, 110, 40, 130]
	  ShowName		  off
	  Port			  "2"
	}
	Block {
	  BlockType		  Mux
	  Name			  "Mux"
	  Ports			  [2, 1]
	  Position		  [90, 51, 125, 84]
	  ShowName		  off
	  Inputs		  "2"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "S-function"
	  Ports			  [1, 1]
	  Position		  [155, 60, 220, 80]
	  ShowName		  off
	  FunctionName		  "simrscod"
	  Parameters		  "n, k, pg,tp,dim"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [260, 60, 280, 80]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "S-function"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  Points		  [15, 0; 0, 25]
	  DstBlock		  "Mux"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Mux"
	  SrcPort		  1
	  DstBlock		  "S-function"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_2"
	  SrcPort		  1
	  Points		  [25, 0; 0, -45]
	  DstBlock		  "Mux"
	  DstPort		  2
	}
      }
    }
    Annotation {
      Name		      "Linear Codes"
      Position		      [162, 70]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "Cyclic Codes"
      Position		      [113, 223]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "Hamming Codes"
      Position		      [113, 426]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "BCH Codes"
      Position		      [361, 28]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "Reed-Solomon Codes"
      Position		      [365, 261]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "Linear Codes"
      Position		      [108, 33]
      FontName		      "Arial"
      FontSize		      12
    }
    Annotation {
      Name		      "Warning:  This library is obsolete and may be r"
"emoved in the future."
      Position		      [238, 633]
      FontName		      "Arial"
      FontSize		      14
    }
  }
}
