function saveas(this,ResumeFlag)
% Dialog for saving projects

%   Author(s): P. Gahinet
%   $Revision: 1.1.6.5 $ $Date: 2004/04/11 00:44:29 $
%   Copyright 1990-2004 The MathWorks, Inc.
Dlg = this.Dialogs.Save;
if isempty(Dlg) || ~ishandle(Dlg)
   Dlg = LocalCreateDlg(this);
   this.Dialogs.Save = Dlg;
end
% Initialize
ud = get(Dlg,'UserData');
idxSelect = 2 - strcmp(get_param(this.Block,'SaveIn'),'workspace');
localSelectTarget([],[],Dlg,idxSelect)
SaveAs = get_param(this.Block,'SaveAs');
if ~isempty(SaveAs)
   set(ud.Edit(idxSelect),'String',SaveAs)
end
% Show dialog
set(Dlg,'Visible','on')

if nargin>1
   % "Last chance" call when closing the model
   f = handle(Dlg);
   this.Dialogs.Listeners = ...
      handle.listener(f,f.findprop('Visible'),'PropertyPostSet',{@localResume Dlg});
   % Disable check box (no way to link saved data with model at this point)
   set(ud.Check,'Value',0,'Enable','off')
   % Suspend execution until user completes closes the SAVE AS dialog
   uiwait(Dlg)
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LOCALCREATEDLG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Dlg = LocalCreateDlg(this)
%
DlgH = 15.5;
DlgW = 70;
UIColor = get(0,'DefaultUIControlBackgroundColor');
Dlg = figure('Name','Save Project', ...
    'Visible','off', ...
    'Resize','off',...
    'MenuBar','none', ...
    'Units','character',...
    'Position',[0 0 DlgW DlgH], ...
    'Color', UIColor, ...
    'IntegerHandle','off', ...
    'HandleVisibility','off',...
    'WindowStyle','modal',...
    'NumberTitle','off');
centerfig(Dlg,this.Figure);
set(Dlg,'CloseRequestFcn',{@localHide Dlg})
ModelName = bdroot(this.Block);

% Button group
xgap = 2;
BW = 10;  BH = 1.5; Bgap = 1;
X0 = DlgW - xgap - 3*BW - 2*Bgap;
Y0 = 0.5;
Handles.OK = uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@localOK Dlg this},...
   'String','OK');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@localHide Dlg},...
   'String','Cancel');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','helpview([docroot ''/toolbox/sloptim/sloptim.map''],''saving'')', ...
   'Position',[X0 Y0 BW BH], ...
   'String','Help');

y0 = DlgH-2;
x0 = xgap + 5;
EW = DlgW-x0-xgap-4;
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'String','Save optimization project as:', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Position',[xgap y0 50 1.2]);

y0 = y0-1.7;
rb1 = uicontrol('Parent',Dlg, ...
   'Style','radiobutton', ...
   'String','Workspace variable:',...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[xgap y0 30 1.2],...
   'Callback',{@localSelectTarget Dlg 1},...
   'Value',1);
y0 = y0-1.6;
eb1 = uicontrol(Dlg, ...
   'Style','edit', ...
   'BackgroundColor','white', ...
   'HorizontalAlignment','left', ...
   'String',sprintf('%s_optim',ModelName),...
   'Tag','workspace',...
   'Units','character',...
   'Position',[x0 y0 EW+4 1.4]);

y0 = y0-2;
rb2 = uicontrol('Parent',Dlg, ...
   'Style','radiobutton', ...
   'String','MAT file:',...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[xgap y0 40 1.2],...
   'Callback',{@localSelectTarget Dlg 2},...
   'Value',0);
y0 = y0-1.6;
eb2 = uicontrol(Dlg, ...
   'Style','edit', ...
   'BackgroundColor',UIColor, ...
   'HorizontalAlignment','left', ...
   'String',sprintf('%s_optim.mat',ModelName),...
   'Tag','MAT',...
   'Units','character',...
   'Enable','off',...
   'Position',[x0 y0 EW 1.4]);
eb3 = uicontrol(Dlg, ...
   'Style','pushbutton', ...
   'BackgroundColor',UIColor,...
   'String','...',...
   'Enable','off',...
   'Units','character',...
   'Callback',{@localSetFile Dlg eb2},...
   'Position',[x0+EW y0 4 1.4]);
ud.Radio = [rb1;rb2];
ud.Edit = [eb1;eb2;eb3];

y0 = y0-3.5;
ud.Check = uicontrol(Dlg, ...
   'Style','checkbox', ...
   'BackgroundColor',UIColor,...
   'Units','character',...
   'Value',1,...
   'Position',[xgap y0 3 1.4]);
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'String','Save and reload project with Simulink model', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Position',[xgap+4 y0 50 1.2]);


% Listener to parent deletion
ud.Listener = handle.listener(this,'ObjectBeingDestroyed',{@localDelete Dlg});
% REVISIT: (src,data) delete(Dlg));

set(Dlg,'UserData',ud)



%------------------

function localDelete(eventsrc,eventdata,Dlg)
% Deletes dialog when parent axes go away
delete(Dlg)


function localHide(eventsrc,eventdata,Dlg)
% Cancel or close 
set(Dlg,'Visible','off')


function localOK(eventsrc,eventdata,Dlg,this)
% OK
ud = get(Dlg,'UserData');
OptimProject = this.Project;
% Save settings
if get(ud.Radio(1),'Value')==1
   SaveIn = 'workspace';
   SaveAs = get(ud.Edit(1),'String');
else
   SaveIn = 'MAT file';
   SaveAs = get(ud.Edit(2),'String');
end
UpdateBlocks = (get(ud.Check,'Value')==1);
% Close dialog before saving (see g203059)
set(Dlg,'Visible','off')
% Try saving
this.save(SaveIn,SaveAs,UpdateBlocks)

   
function localSelectTarget(eventsrc,eventdata,Dlg,Selection)
% Toggles between workspace/MAT options
ud = get(Dlg,'UserData');
UIColor = get(0,'DefaultUIControlBackgroundColor');
if Selection==1
   set(ud.Radio,{'Value'},{1;0})
   set(ud.Edit(1),'Enable','on','BackgroundColor','white')
   set(ud.Edit(2:3),'Enable','off')
   set(ud.Edit(2),'BackgroundColor',UIColor)
else
   set(ud.Radio,{'Value'},{0;1})
   set(ud.Edit(1),'Enable','off','BackgroundColor',UIColor)
   set(ud.Edit(2:3),'Enable','on')
   set(ud.Edit(2),'BackgroundColor','white')
end 


function localResume(eventsrc,eventdata,Dlg)
% Resume execution
uiresume(Dlg)


function localSetFile(eventsrc,eventdata,Dlg,EditBox)
% Select MAT file
[filename, pathname] = uigetfile('*.mat', 'Select MAT file',get(EditBox,'String'));
if ~isequal(filename,0) && ~isequal(pathname,0)
   % Set file name
   if ~strcmp(pathname(1:end-1),pwd)
      filename = [pathname filename];
   end
   set(EditBox,'String',filename)
end
   

