function build(this)
% Creates parameter dialog.

% Author(s): P. Gahinet, Bora Eryilmaz
% Copyright 1986-2004 The MathWorks, Inc.
% $Revision: 1.1.6.6 $ $Date: 2004/04/11 00:44:07 $
DlgH = 27;
DlgW = 120;
UIColor = get(0,'DefaultUIControlBackgroundColor');
Dlg = figure('Name','Tuned Parameters', ...
    'Visible','off', ...
    'MenuBar','none', ...
    'Units','character',...
    'Position',[0 0 DlgW DlgH], ...
    'Color', UIColor, ...
    'IntegerHandle','off', ...
    'HandleVisibility','off',...
    'Resize','off',...
    'NumberTitle','off');
centerfig(Dlg,0);
set(Dlg,'CloseRequestFcn',{@LocalHide Dlg})
this.Figure = handle(Dlg);

% Button group
xgap = 2;
BW = 10;  BH = 1.5; Bgap = 1;
X0 = DlgW - xgap - 3*BW - 2*Bgap;
Y0 = 0.5;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@LocalOK this},...
   'String','OK');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@LocalHide Dlg},...
   'String','Cancel');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','helpview([docroot ''/toolbox/sloptim/sloptim.map''],''tuning'')', ...
   'Position',[X0 Y0 BW BH], ...
   'String','Help');

% Left frame
YF = 2*Y0 + BH;
FWL = (DlgW-3*xgap)/3;
FH = DlgH-(YF+0.8);
XF = xgap;
uicontrol('Parent',Dlg, ...
   'Style','frame', ...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[XF YF FWL FH]);
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'HorizontalAlignment','center', ...
   'Units','character',...
   'String','Tuned parameters',...
   'Position',[XF+1 YF+FH-.75 20 1.2]);

XB = XF+(FWL-2*BW-Bgap)/2;
YB = YF+0.5;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Position',[XB YB BW BH], ...
   'Callback',{ @LocalSelectCallback, this},...
   'String','Add...');
XB = XB+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','', ...
   'Position',[XB YB BW BH], ...
   'Callback',{ @LocalDeleteCallback, this } ,...
   'String','Delete');
YL = YB + BH + 0.5;
ud.List = uicontrol('Parent',Dlg, ...
   'Style','listbox', ...
   'Units','character',...
   'BackgroundColor',[1 1 1],...
   'Callback',@(eventsrc,y) showParam(this,get(eventsrc,'Value')),...
   'Position',[XF+xgap YL FWL-2*xgap FH-(YL-YF)-1],...
   'Max',2);

% Right frame
XF = XF+xgap+FWL;
FWR = 2*FWL;
uicontrol('Parent',Dlg, ...
   'Style','frame', ...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[XF YF FWR FH]);
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'HorizontalAlignment','center', ...
   'Units','character',...
   'String','Optimization Settings',...
   'Position',[XF+1 YF+FH-.75 22 1.2]);
% Labels
YL = YF+FH-2.5;
XL = XF+xgap;
XB = XL+16;
Labels = {'Name:','Value:','Initial guess:',...
   'Minimum:','Maximum:','Typical value:'};
Fields = {'';'';'InitialGuess';'Min';'Max';'TypicalValue'};
Tips = {'';'';...
   'Initial guess for tuned parameter';...
   'Lower bound on parameter value';...
   'Upper bound on parameter value';...
   'Typical nonzero value for tuned parameter'};
nrows = length(Labels);
Settings = zeros(nrows,1);
for ct=1:nrows
   uicontrol('Parent',Dlg, ...
      'BackgroundColor',UIColor,...
      'Style','text', ...
      'HorizontalAlignment','left', ...
      'Units','character',...
      'String',Labels{ct},...
      'Position',[XL YL 18 1.2]);
   if ct<3
      Settings(ct) = uicontrol('Parent',Dlg, ...
         'BackgroundColor',UIColor,...
         'Style','text', ...
         'HorizontalAlignment','left', ...
         'Units','character',...
         'Position',[XB YL FWR-(XB-XF)-xgap 1.2]);
   else
      Settings(ct) = uicontrol('Parent',Dlg, ...
         'BackgroundColor',[1 1 1],...
         'Style','edit', ...
         'HorizontalAlignment','left', ...
         'Units','character',...
         'Enable','off',...
         'TooltipString',Tips{ct},...
         'Callback',{@LocalChangeSetting this Fields{ct}},...
         'Position',[XB YL FWR-(XB-XF)-xgap 1.4]);
   end
   YL = YL-1.7;
end
ud.Settings = Settings;
% Tuned check box
YT = YL-.5;
ud.Tuned = uicontrol(Dlg, ...
   'Style','checkbox', ...
   'BackgroundColor',UIColor,...
   'Units','character',...
   'Value',0,...
   'Enable','off',...
   'Callback',{@LocalChangeTuned this},...
   'Position',[XL YT 3 1.4]);
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'String','Tuned', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Position',[XL+4 YT 10 1.2]);

% ReferenceBy listbox
YT = YT-2;
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'String','Referenced by:', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Position',[XL YT 18 1.2]);
YL = YF+0.5;
LH = (YT-.2)-YL;
LW = FWR-2*xgap;
ud.Reference = uicontrol('Parent',Dlg, ...
   'Style','listbox', ...
   'Units','character',...
   'BackgroundColor',[1 1 1],...
   'Position',[XL YL LW LH],...
   'TooltipString','Which Simulink blocks reference this parameter',...
   'Max',2,...
   'Value',[]);

set(Dlg,'UserData',ud)


% ----------------------------------------------------------------------------- %
function LocalHide(hSrc, hData, Dlg)
% Hide dialog
set(Dlg,'Visible','off')

% ----------------------------------------------------------------------------- %
function LocalOK(hSrc, hData, this)
% Apply new settings
try
   this.Project.setTunedParams(this.ParamSpecs)
catch
   [junk,errmsg]=strtok(lasterr,sprintf('\n'));
   errordlg(errmsg,'Parameter Error','modal')
   return
end
% Hide dialog
this.Figure.Visible = 'off';


% ----------------------------------------------------------------------------- %
function LocalDeleteCallback(hSrc, hData, this)
% Selected items to delete wrt the currently visible list
Selected = get(this.Figure.UserData.List,'Value');
% Update parameter list (fires listener that updates list)
this.ParamSpecs(Selected,:) = [];


% ----------------------------------------------------------------------------- %
function LocalSelectCallback(hSrc, hData, this)
% Opens selection dialog
selectdlg(this)


% ----------------------------------------------------------------------------- %
function LocalChangeSetting(hSrc, hData, this, Field)
% Callback when editing settings
ud = this.Figure.UserData;
Selection = get(ud.List,'Value');
NewSetting = get(hSrc,'String');
if isempty(NewSetting)
   % Restore previous string
   set(hSrc,'String',this.ParamSpecs(Selection).(Field))
else
   this.ParamSpecs(Selection).(Field) = NewSetting;
end


% ----------------------------------------------------------------------------- %
function LocalChangeTuned(hSrc, hData, this)
% Callback when editing settings
ud = this.Figure.UserData;
Selection = get(ud.List,'Value');
if get(hSrc,'Value')==1
   this.ParamSpecs(Selection).Tuned = 'true';
else
   this.ParamSpecs(Selection).Tuned = 'false';
end



