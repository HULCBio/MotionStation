<?xml version="1.0" encoding="shift_jis"?>

<!-- $Revision:$ $Date:$ -->
<demos>
   <name>Link for Code Composer Studio®</name>
   <type>toolbox</type>
   <icon>$toolbox/matlab/icons/matlabicon.gif</icon>
   <description><![CDATA[
<p>Link for Code Composer Studio<sup>(R)</sup> Development Tools integrates Simulink and MATLAB with Texas Instruments eXpressDSP<sup>TM</sup> tools. ]]></description>  <demosection> <label>Debug Component</label> <description><![CDATA[ <p>Provides a means for controlling and debugging digital signal processing applications using MATLAB.  For interactive data analysis, the interface lets you use MATLAB functions to exchange data between the MATLAB command window and Code Composer Studio.</p> 
<p>Demos support C6000, C5400, C5500, C2000, TMS470Rxx.</p>

      ]]></description>

      <demoitem>
         <label>Link Tutorial</label>
         <callback>ccstutorial</callback>
      </demoitem>
      <demoitem>
         <label>Debug Example</label>
         <file>../ccsdemos/html/ccsdebugdemo.html</file>
      </demoitem>
      <demoitem>
         <label>FIR Filtering</label>
         <callback>ccsfirdemo</callback>
      </demoitem>
   </demosection>


   <demosection>
      <label>Real-Time Data Exchange(tm) (RTDX) Component</label>
      <description><![CDATA[
<p>Enables you to tranfer data between MATLAB and an RTDX channel, allowing communication with your Texas Instruments DSP device without stopping your target application running on the device. You use the RTDX interface to monitor the digital signal processor, send and retrieve data to and from the running application, and display or evaluate the results of the active process. Link for RTDX works in conjunction with Code Composer Studio.</p> 
<p>Demos support C6000, C5400, C5500, C2800.</p>

      ]]></description>
      <demoitem>
         <label>RTDX Tutorial</label>
         <callback>rtdxtutorial</callback>
      </demoitem>
      <demoitem>
         <label>LMS Adaptive Filtering</label>
         <callback>rtdxlmsdemo</callback>
      </demoitem>
   </demosection>

   <demosection>
      <label>Data Manipulation Component</label>
      <description><![CDATA[
<p>Provides a way to access DSP symbols from MATLAB on a high level  fashion. It allows you to access C variables and manipulate them. It supports native C data types as well as structures, unions, strings and pointers.</p> 
<p>Demos support C6000, C5000, C2000, TMS470Rxx.</p>
      ]]></description>
      <demoitem>
         <label>Link Tutorial (extended version)</label>
         <callback>ccstutorial</callback>
      </demoitem>
      <demoitem>
         <label>Embedded Object Explorer</label>
         <callback>ccsinspect</callback>
      </demoitem>      
   </demosection>

   <demosection>
      <label>Hardware-in-the-loop (Function Call) Component</label>
      <description><![CDATA[
<p> Enables you to perform Hardware-in-the-loop (HIL) from MATLAB.  You can access a function defined on your target - get its signature (argument names and types, function return type, starting address, etc.), set the data for each input argument, run the function, and read the returned value(s) all from MATLAB.</p> <p>The HIL capability enables you to verify a target implementation, within  the context of an entire system design, by allowing you to simulate in MATLAB the components not implemented on the DSP. For example, you may want to verify your implementation of an FIR filter on your target while simulating your input and output data in MATLAB. The performance of your closed-loop system design may be assessed with the real-world constraints of hardware (DSP) and software (DSP implementation).</p> 
<p>Demos support C6000, C5400, C2800.</p>
      ]]></description>
      <demoitem>
         <label>Hardware-in-the-loop Tutorial</label>
         <callback>hiltutorial</callback>
      </demoitem>
      <demoitem>
         <label>Hardware-in-the-loop Examples</label>
         <callback>ccshildemo</callback>
      </demoitem>
      <demoitem>
         <label>Embedded Object Explorer</label>
         <callback>ccsinspect</callback>
      </demoitem>      
   </demosection>

   <demosection>
      <label>Multi-Processor Component</label>
      <description><![CDATA[
<p>Provides a means for controlling and debugging multiprocessor digital signal processing applications using MATLAB.</p> 
<p>Demos support OMAP.</p>
      ]]></description>

      <demoitem>
         <label>Multi-Processor Tutorial</label>
         <callback>multiproctutorial</callback>
      </demoitem>
   </demosection>

   
</demos>
   



