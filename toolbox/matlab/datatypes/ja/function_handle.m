% function_handle
%
% FUNHANDLE = @FUNCTION_NAME は、関数ハンドル値を作成するために使います。
%
% MATLAB 値のクラスは、MATLAB がそれを実行する、または、計算するために必
% 要な関数に関するすべての情報を含んだ '関数ハンドル(function_handle)'で
% す。関数ハンドル値は、他の関数への引数リストに通常の方法で、渡されるも
% のです。関数は、関数ハンドルが作成された時点で算出されます。これらの他
% の関数は、事前に算出された関数をコールする手段として値を使用します。
%
% function_handle の値により参照される関数をコールするためには、通常の
% 括弧の記号を使用してください。たとえば、"f = @sin" を実行後、
% "sin(pi)" を評価するために、"f(pi)" とすることができます。
% 同様に、g が、値が関数ハンドルである引数 h をもつ関数である場合、
% コーラーにより提供される関数ハンドルをコールするためには、h(...) と
% 記述することができます。たとえば、g(@sin) をコールする場合、g を実行すると、
% h(...) に遭遇する場合、sin(...) をコールします。引数なしで、
% function_handle をコールするためには、たとえば、f() のように、空の
% 括弧を使用してください。
%
% ローカル関数やプライベート関数を関数ハンドルとして計算する
% 場合、ローカル、またはプライベート関数は常に実行されます。組み込み関数や
% 通常の関数を関数ハンドルとして計算する場合、組み込み、または通常の
% 関数の代わりに適切な方法が選択されます。
%
% 1つの例外があり、関数ハンドルは、配列、セルおよび構造体などの変数への
% 割り当てを含む他のMATLAB値と同様な方法で実現し、演算することができます。
% その例外は、function_handle 配列を構成できないことです。
% その理由は、このクラスの値に対して、括弧記号は、配列にインデックスを
% 付けるためではなく、関数をコールするために使用されるためです。 
% 関数ハンドルの配列の効果があるようにするためには、たとえば、
% "A = [@sin, @cos]"ではなく、"A = {@sin, @cos}"　とかくように、
% セルを使用してください。もちろん、A にインデックスを付けるためには、
% 括弧を使用して、"A{i}" とすることが必要です。
%
% 関数ハンドルを使って、つぎのことが可能になります。
%
%      関数リファレンスを他の関数に渡します。
%      ユーザ関数を定義するファイル数を少なくします。
%      繰り返し演算のパフォーマンスを改良します。
%      関数を計算するときの信頼性を向上します。
%
% 下位互換性についての注意
% R12 と R13 では、関数ハンドルの配列とそのような配列へのインデックス付け
% を意味する括弧記号を形成することができました。function_handle の値により
% 参照される関数をコールするためには、コマンドFEVAL を使用する必要がありま
% した。R14 では、FEVAL を使用する必要はありません。(そして、このコマンド
% は、将来のリリースで 廃止される可能性があります)。function_handle 変数は、
% (...) が続く場合、関連する関数をコールし、括弧内の引数を渡します。これは、
% FEVAL を使用する function_handle をコールするよりも高速です。
%
% この変更は、下位互換ではありませんが、R14 では、ほとんどすべての
% R12 & R13 プログラムが動作します。
%
%    o 関数ハンドルの非スカラー配列を構成することは、
%      ワーニングになりますが、エラーにはなりません。
%
%    o 非スカラー関数ハンドルへの括弧記号は、
%      R13 のときと同様にサブスクリプトを意味します。
%      一方、スカラーの関数ハンドルについて、同じ記号は、
%      上で述べたように、関数コールを意味します。
%
% こうして、非互換性は、関数ハンドルのスカラー配列を構成し、それに
% 実際にインデックスを付ける、インデックス 1 をもつ必要がある場合にのみ、
% 起こり得ます。
%
% 例題:
%
%        f = @humps; % 関数 'humps' に対する関数ハンドル f を出力
%        x = fminbnd(f,1,2); % 関数ハンドル f をFMINBND に渡します。
%
% どの 'humps' 関数が、'fminbnd'によりコールされるかは、f が作成されたと
% きの状況に依存しますが、f がコールされるときは、別です。
%
%        fval = f(x); % 引数 x と共に、関数ハンドル f をコール
%
% 参考 FUNC2STR, STR2FUNC, FUNCTIONS.
%

%   Copyright 1984-2002 The MathWorks, Inc. 
