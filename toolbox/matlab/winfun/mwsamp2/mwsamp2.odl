/* $Revision: 1.1 $ */
/*********************************************************************/
/*                        R C S  information                         */
/*********************************************************************/
/*
 * $Log: mwsamp2.odl,v $
 * Revision 1.1  2001/09/04 18:23:06  fpeermoh
 * Initial revision
 *
 */

// mwsamp2.odl : type library source for ActiveX Control project.

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (mwsamp2.tlb) that will become a resource in
// mwsamp2.ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid(4D02E050-24D8-4D35-A1C6-FB9304568135), version(1.0),
  helpfile("mwsamp2.hlp"),
  helpstring("mwsamp2 ActiveX Control module"),
  control ]
library MWSAMP2Lib
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);

	//  Primary dispatch interface for CMwsamp2Ctrl

	[ uuid(13E74B28-5DEB-464C-AD59-1D4CAD156869),
	  helpstring("Dispatch interface for Mwsamp2 Control"), hidden ]
	dispinterface _DMwsamp2
	{
		properties:
			// NOTE - ClassWizard will maintain property information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_PROP(CMwsamp2Ctrl)
			[id(1)] BSTR Label;
			[id(2)] short Radius;
			//}}AFX_ODL_PROP

		methods:
			// NOTE - ClassWizard will maintain method information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_METHOD(CMwsamp2Ctrl)
			[id(3)] void Beep();
			[id(4)] void FireClickEvent();
			[id(5)] BSTR GetBSTR();
			[id(6)] VARIANT GetBSTRArray();
			[id(7)] long GetI4();
			[id(8)] VARIANT GetI4Array();
			[id(9)] VARIANT GetI4Vector();
			[id(10)] IDispatch* GetIDispatch();
			[id(11)] double GetR8();
			[id(12)] VARIANT GetR8Array();
			[id(13)] VARIANT GetR8Vector();
			[id(14)] VARIANT GetVariantArray();
			[id(15)] VARIANT GetVariantVector();
			[id(16)] void Redraw();
			[id(17)] BSTR SetBSTR(BSTR b);
			[id(18)] VARIANT SetBSTRArray(VARIANT v);
			[id(19)] long SetI4(long l);
			[id(20)] VARIANT SetI4Array(VARIANT v);
			[id(21)] VARIANT SetI4Vector(VARIANT v);
			[id(22)] double SetR8(double d);
			[id(23)] VARIANT SetR8Array(VARIANT v);
			[id(24)] VARIANT SetR8Vector(VARIANT v);
			//}}AFX_ODL_METHOD

			[id(DISPID_ABOUTBOX)] void AboutBox();
	};

	//  Event dispatch interface for CMwsamp2Ctrl

	[ uuid(8C74663F-CCF6-4292-8A7C-DDC8A754A866),
	  helpstring("Event interface for Mwsamp2 Control") ]
	dispinterface _DMwsamp2Events
	{
		properties:
			//  Event interface has no properties

		methods:
			// NOTE - ClassWizard will maintain event information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_EVENT(CMwsamp2Ctrl)
			[id(DISPID_CLICK)] void Click();
			[id(DISPID_DBLCLICK)] void DblClick();
			[id(DISPID_MOUSEDOWN)] void MouseDown(short Button, short Shift, OLE_XPOS_PIXELS x, OLE_YPOS_PIXELS y);
			//}}AFX_ODL_EVENT
	};

	//  Class information for CMwsamp2Ctrl

	[ uuid(5771A80A-2294-4CAC-A75B-157DCDDD3653),
	  helpstring("Mwsamp2 Control"), control ]
	coclass Mwsamp2
	{
		[default] dispinterface _DMwsamp2;
		[default, source] dispinterface _DMwsamp2Events;
	};


	//{{AFX_APPEND_ODL}}
	//}}AFX_APPEND_ODL}}
};
