% TF   伝達関数の作成または伝達関数への変換
%
%
% 作成:
%   SYS = TF(NUM,DEN) は、分子多項式の係数 NUM で、分母多項式の係数が DENの
%   連続時間の伝達関数 SYS を作成します。結果の SYS は、TFオブジェクトです。
%
%   SYS = TF(NUM,DEN,TS) は、サンプル時間 TS の離散時間の伝達関数を作成します
%   (サンプル時間を未設定にするときは、TS = -1に設定します)。
%
%   S = TF('s') は、伝達関数 H(s) = s (Laplace演算子)を設定します。
%   Z = TF('z',TS) は、サンプル時間 Ts の H(z) = z を設定します。
%   合理的な表現法として、S、または、Z で、つぎのように伝達関数を設定できます。
%   たとえば、 
%     s = tf('s');  H = (s+1)/(s^2+3*s+1)
%
%   SYS = TF は、空の伝達関数オブジェクトを作成します。
%   SYS = TF(M) は、静的ゲイン行列 M を設定します。
%
%   上記のすべての書式で、入力リストは、つぎのような組にして続けることができ
%   ます。 'PropertyName1', PropertyValue1, ... これにより、TFモデルの様々な
%   プロパティ(詳細は、LTIPROPS を参照)を設定します。
%   既存のLTIモデル REFSYS のすべてのLTIプロパティを継承して、SYS を作成する
%   ためには、SYS = TF(NUM,DEN,REFSYS) の書式を利用します。
%
% データフォーマット:
%   SISO モデルに対して、NUM と DEN は行ベクトルで、分子多項式または分母多項式
%   の係数をつぎのように並べます。 
%   * デフォルトでは、s または z の次数の高いものから順に
%   * プロパティ 'Variable' が 'z^-1' または 'q' に設定されると、
%     q = z^-1の次数の低いものから順に(DSPでよく使う手法)
%
%   NU 入力 NY 出力をもつ MIMO モデルに対して、NUM と DEN は NY*NU 行ベクトル
%   のセル配列で、ここで、NUM{i,j} と DEN{i,j} は、入力 j から出力 iまでの伝達
%   関数です。たとえば、 H = TF( {-5 ; [1 -5 6]} , {[1 -1] ; [1 1 0]}) は、
%   つぎの2入力1出力の伝達関数を設定します。         
%       [     -5 /(s-1)      ]
%       [ (s^2-5s+6)/(s^2+s) ] 
%
%   デフォルトで、伝達関数は 's' または 'z' の関数として表示されます。
%   プロパティ 'Variable' を変更することによって、変数名を 'p' (連続時間)と'
%   z^-1' または 'q'(離散時間)に設定できます。
%
% 伝達関数の配列:
%   上記の NUM と DEN に ND のセル配列を用いて、伝達関数の配列を作成することが
%   できます。たとえば、NUM と DEN はサイズ [NY NU 3 4] のセル配列のとき、
%     SYS = TF(NUM,DEN) 
%   は、3行4列の配列の伝達関数を作成します。 
%     SYS(:,:,k,m) = TF(NUM(:,:,k,m),DEN(:,:,k,m)),  k = 1:3,  m = 1:4
%   これらの各伝達関数は、NY 出力と NU 入力をもっています。
%
%   NY 出力 NU 入力の伝達関数に0配列をあらかじめ割り当てておくためには、つぎの
%   書式を用います。 SYS = TF(ZEROS([NY NU k1 k2...])) .
%
% 変換:
%   SYS = TF(SYS) は、任意のLTIモデル SYS を伝達関数表現に変換します。
%   結果はTFオブジェクトになります。
%
%   SYS = TF(SYS,'inv') は、状態空間から伝達関数への高速変換アルゴリズムを利用
%   します。 しかし、これは典型的に高次のシステムに対して精度が失われる手法です。
%
% 参考 : LTIMODELS, FILT, SET, GET, TFDATA, SUBSREF, LTIPROPS, ZPK, SS.


% Copyright 1986-2002 The MathWorks, Inc.
