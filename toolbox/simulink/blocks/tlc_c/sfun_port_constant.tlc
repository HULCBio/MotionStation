%% $RCSfile: sfun_port_constant.tlc,v $
%% $Revision: 1.3 $
%% $Date: 2002/04/10 18:17:50 $
%%
%% Copyright 1990-2002 The MathWorks, Inc.
%%
%% Abstract:
%%	Level-2 multiple port s-function using constant sample time
%%      sfun_port_constant block target file
%%      See simulink/src/sfun_port_constant.c



%implements "sfun_port_constant" "C"

%% Function: mdlOutputs =====================================================
%% Abstract:
%%
%%  Code is needed in the generated mdlOutputs function only if the sample time
%%  is not constant. If the sample time is constant the output will be in the 
%%  rtC vector and nothing needs to be done here. 
%% 
%function Outputs(block, system) Output
  
  %if LibGetSFcnTIDType("InputPortIdx0") != "constant"    
    /* %<Type> Block: %<Name> */
    %if LibGetSFcnTIDType("InputPortIdx0") == "continuous"
        if (%<LibIsMajorTimeStep()> && ...
	%<LibIsSFcnSampleHit("InputPortIdx0")>) {
	%assign input = LibBlockInputSignal(0, "", "", 0)
	%assign output = LibBlockOutputSignal(0, "", "", 0)
	%assign gainK  = LibBlockParameter(P1, "", "", 0)
	%<output>=  %<gainK> * %<input>;
      }
    %else
      if (%<LibIsSFcnSampleHit("InputPortIdx0")>) {
	%assign input = LibBlockInputSignal(0, "", "", 0)
	%assign output = LibBlockOutputSignal(0, "", "", 0)
	%assign gainK  = LibBlockParameter(P1, "", "", 0)
	%<output>=  %<gainK> * %<input>;
      }
    %endif
  %endif
  
  %if LibGetSFcnTIDType("OutputPortIdx1") != "constant"    
    %if LibGetSFcnTIDType("OutputPortIdx1") == "continuous"
        if (%<LibIsMajorTimeStep()> && ...
	%<LibIsSFcnSampleHit("OutputPortIdx1")>) {
	%assign output = LibBlockOutputSignal(1, "", "", 0)
	%assign gainK  = LibBlockParameter(P1, "", "", 0)
	%<output>=  %<gainK>;
      }
    %else
      if (%<LibIsSFcnSampleHit("OutputPortIdx1")>) {
	%assign output = LibBlockOutputSignal(1, "", "", 0)
	%assign gainK  = LibBlockParameter(P1, "", "", 0)
	%<output>=  %<gainK>;
      }
    %endif
  %endif
  
%endfunction


%% [EOF] sfun_port_constant.tlc
