<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3.2.2 $  $Date: 2004/01/31 00:15:31 $ -->
<demos>
   <name>Simulink Fixed Point</name>
   <type>simulink</type>
   <icon>$toolbox/simulink/simulink/simulinkicon.gif</icon>
   <description><![CDATA[
<p>Simulink Fixed Point simulates fixed-point arithmetic used in fixed-point processors.

When a control or communication system is implemented on an embedded processor,
the tradeoff of limited range verses limited precision is often very
significant. This is true even for floating point processors, but it is
especially true for fixed-point processors. Simulink Fixed Point simulates the
details related to the embedded system implementation. It also provides tools
for managing the tradeoff between range and precison.</p>
<ul>
   <li>Fixed-point signals</li>
   <ul>
      <li>1 to 128 bits</li>
      <li>any Radix Point</li>
      <li>Signed or unsigned</li>
   </ul>
   <li>Floating point signals</li>
   <ul>
      <li>Doubles</li>
      <li>Singles</li>
      <li>Custom</li>
   </ul>
   <li>Control over all operations</li>
   <ul>
      <li>Round to Zero, Nearest, Ceiling or Floor</li>
      <li>Overflows saturate or wrap</li>
   </ul>
   <li>Generate code for execution on an embedded processor</li>
</ul>
]]></description>
   <demoitem>
      <label>Double to Fixed-Point Conversion</label>
      <callback>fxpdemo_dbl2fix</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point to Fixed-Point Conversion</label>
      <callback>fxpdemo_fix2fix</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point to Fixed-Point Inherited Conversion</label>
      <callback>fxpdemo_fix2fixinh1</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Sine</label>
      <callback>fxpdemo_sine</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Filters</label>
      <callback>fxpdemo_filters</callback>
   </demoitem>
   <demoitem>
      <label>Scaling a Fixed-Point Control Design</label>
      <callback>fxptdlg('fxpdemo_feedback')</callback>
   </demoitem>
   <demoitem>
      <label>Generating Only Fixed-Point Code</label>
      <callback>fxpdemo_code_only</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Integrators</label>
      <callback>fxpdemo_integrate</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Derivatives</label>
      <callback>fxpdemo_diff</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Lead and Lag Filters</label>
      <callback>fxpdemo_lead_lag</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point State Space</label>
      <callback>fxpdemo_state_space</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Data Type Propagation</label>
      <callback>fxpdemo_dtprop</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Function Approximation</label>
      <callback>fxpdemo_approx_sin</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Direct Form Filter</label>
      <callback>fxpdemo_direct_form2</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Parallel Form Filter</label>
      <callback>fxpdemo_parallel_form</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point Series Cascade Form Filter</label>
      <callback>fxpdemo_series_cascade_form</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point S-Function Example: Querying Properties</label>
      <callback>fxpdemo_probe</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point S-Function Example: Arithmetic Shift</label>
      <callback>fxpdemo_sfun_user_asr</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point S-Function Example: Fixed-Point Source</label>
      <callback>fxpdemo_sfun_user_const</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point S-Function Example: Data Type Propagation</label>
      <callback>fxpdemo_sfun_user_dtprop</callback>
   </demoitem>
   <demoitem>
      <label>Fixed-Point S-Function Example: Product and Sum</label>
      <callback>fxpdemo_sfun_user_prodsum</callback>
   </demoitem>
</demos>
