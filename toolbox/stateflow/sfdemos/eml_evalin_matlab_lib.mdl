Library {
  Name			  "eml_evalin_matlab_lib"
  Version		  6.0
  SaveDefaultBlockParams  on
  LibraryLinkDisplay	  "none"
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  CovSaveName		  "covdata"
  CovMetricSettings	  "dcmtr"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  CovReportOnPause	  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  Created		  "Wed Jun 18 14:31:23 2003"
  Creator		  "The MathWorks Inc."
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "batserve"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Wed Apr 21 03:53:11 2004"
  ModelVersionFormat	  "1.%<AutoIncrement:95>"
  ConfigurationManager	  "None"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock off
  ProdHWDeviceType	  "Specified"
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.0.4"
      Array {
	Type			"Handle"
	Dimension		7
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.0.4"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  Solver		  "ode45"
	  ZeroCrossControl	  "UseLocalSettings"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  RateTranMode		  "Deterministic"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.0.4"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SaveTime		  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsOut"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Array {
	    Type		    "Cell"
	    Dimension		    4
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "InitFltsAndDblsToZero"
	    Cell		    "OptimizeModelRefInitCode"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.4"
	  BlockReduction	  on
	  BooleanDataType	  off
	  ConditionallyExecuteInputs on
	  ConditionalExecOptimization "on_for_testing"
	  InlineParams		  off
	  InlineInvariantSignals  on
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  ParameterPooling	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.0.4"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  CheckSSInitialOutputMsg on
	  CheckExecutionContextPreStartOutputMsg on
	  CheckExecutionContextRuntimeOutputMsg	on
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterPrecisionLossMsg "warning"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  ModelReferenceSimTargetVerbose off
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.0.4"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "Specified"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  on
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.0.4"
	  UpdateModelReferenceTargets "IfOutOfDate"
	  CheckModelReferenceTargetMessage "error"
	  ModelReferenceNumInstancesAllowed "Multi"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  8
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.4"
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      9
	      Array {
		Type			"Cell"
		Dimension		8
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.4"
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      PrefixModelToSubsysFcnNames on
	      CustomSymbolStr	      "$R$N$M"
	      MangleLength	      1
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      10
	      Array {
		Type			"Cell"
		Dimension		12
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"LifeSpan"
		Cell			"NoFixptDivByZeroProtection"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.4"
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      GenFloatMathFcnCalls    "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      IncludeMdlTerminateFcn  on
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      SimulationMode	      "normal"
      CurrentDlgPage	      "Solver"
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Abs
      SaturateOnIntegerOverflow	on
      ZeroCross		      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Assertion
      Enabled		      on
      StopWhenAssertionFail   on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      OutDataTypeMode	      "Inherit from 'Constant value'"
      OutDataType	      "sfix(16)"
      ConRadixGroup	      "Use specified scaling"
      OutScaling	      "2^0"
      SampleTime	      "inf"
    }
    Block {
      BlockType		      Demux
      Outputs		      "4"
      DisplayOption	      "none"
      BusSelectionMode	      off
    }
    Block {
      BlockType		      DigitalClock
      SampleTime	      "1"
    }
    Block {
      BlockType		      Display
      Format		      "short"
      Decimation	      "10"
      Floating		      off
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Inport
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      DataType		      "auto"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      SignalType	      "auto"
      SamplingMode	      "auto"
      Interpolate	      on
    }
    Block {
      BlockType		      Logic
      Operator		      "AND"
      Inputs		      "2"
      AllPortsSameDT	      on
      OutDataTypeMode	      "Logical (see Configuration Parameters: Optimiza"
"tion)"
      LogicDataType	      "uint(8)"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      MinMax
      Function		      "min"
      Inputs		      "1"
      InputSameDT	      on
      OutDataTypeMode	      "Inherit via internal rule"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      ZeroCross		      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      DataType		      "auto"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      SignalType	      "auto"
      SamplingMode	      "auto"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      RelationalOperator
      Operator		      ">="
      InputSameDT	      on
      LogicOutDataTypeMode    "Logical (see Configuration Parameters: Optimiza"
"tion)"
      LogicDataType	      "uint(8)"
      ZeroCross		      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      PortCounts	      "[]"
      SFunctionModules	      "''"
    }
    Block {
      BlockType		      Stop
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      on
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      InputSameDT	      on
      OutDataTypeMode	      "Same as first input"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      ToWorkspace
      VariableName	      "simulink_output"
      MaxDataPoints	      "1000"
      Decimation	      "1"
      SampleTime	      "0"
      FixptAsFi		      off
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "eml_evalin_matlab_lib"
    Location		    [418, 439, 1090, 756]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      Constant
      Name		      "Constant"
      Position		      [30, 38, 155, 62]
      ShowName		      off
      FontSize		      12
      Value		      "single(magic(4))"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant1"
      Position		      [30, 79, 155, 101]
      ShowName		      off
      FontSize		      12
      Value		      "5+magic(2)*i"
    }
    Block {
      BlockType		      SubSystem
      Name		      "Example\neML script\n# |eML-ML| optional_eML_fi"
"le.m #"
      Ports		      [2, 2]
      Position		      [195, 29, 300, 111]
      FontSize		      12
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "Stateflow"
      MaskDescription	      "Stateflow diagram"
      MaskDisplay	      "disp('passthrough');"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      off
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Example\neML script\n# |eML-ML| optional_eML_"
"file.m #"
	Location		[257, 457, 812, 717]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "u1"
	  Position		  [20, 101, 40, 119]
	  Port			  "1"
	  IconDisplay		  "Port number"
	  LatchInput		  off
	}
	Block {
	  BlockType		  Inport
	  Name			  "u2"
	  Position		  [20, 136, 40, 154]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  LatchInput		  off
	}
	Block {
	  BlockType		  Demux
	  Name			  " Demux "
	  Ports			  [1, 1]
	  Position		  [270, 180, 320, 220]
	  Outputs		  "1"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  " SFunction "
	  Tag			  "Stateflow S-Function eml_evalin_matlab_lib "
"2"
	  Ports			  [2, 3]
	  Position		  [180, 100, 230, 180]
	  FunctionName		  "sf_sfun"
	  PortCounts		  "[2 3]"
	  Port {
	    PortNumber		    2
	    Name		    "y1"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	    ShowSigGenPortName	    on
	  }
	  Port {
	    PortNumber		    3
	    Name		    "y2"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	    ShowSigGenPortName	    on
	  }
	}
	Block {
	  BlockType		  Terminator
	  Name			  " Terminator "
	  Position		  [460, 191, 480, 209]
	}
	Block {
	  BlockType		  Outport
	  Name			  "y1"
	  Position		  [460, 101, 480, 119]
	  IconDisplay		  "Port number"
	  BusOutputAsStruct	  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "y2"
	  Position		  [460, 136, 480, 154]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  BusOutputAsStruct	  off
	}
	Line {
	  SrcBlock		  " SFunction "
	  SrcPort		  1
	  Points		  [0, 85]
	  DstBlock		  " Demux "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  " Demux "
	  SrcPort		  1
	  DstBlock		  " Terminator "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "u1"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "u2"
	  SrcPort		  1
	  Points		  [120, 0]
	  DstBlock		  " SFunction "
	  DstPort		  2
	}
	Line {
	  Name			  "y1"
	  Labels		  [0, 0]
	  SrcBlock		  " SFunction "
	  SrcPort		  2
	  DstBlock		  "y1"
	  DstPort		  1
	}
	Line {
	  Name			  "y2"
	  Labels		  [0, 0]
	  SrcBlock		  " SFunction "
	  SrcPort		  3
	  DstBlock		  "y2"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "README"
      Ports		      []
      Position		      [450, 130, 564, 206]
      List {
	ListType		RTWdata
	document_text01		"Usage of '|eML-ML| <= Tol' Block  - Wish: EMM"
" 2/26/03 update the doc here\n \n- Strictly for internal MathWorks use and qu"
"alification of eML script block\n\n- This masked subsystem can be used to act"
"ivate a MATLAB based, numerical equivalency test\n  for specialy named eML sc"
"ripts. Their name must contain \"## eML EVALIN MATLAB ##\"\n\n- For developme"
"nt,\n          0- Before doing anything in Stateflow/eML do >> sf('Feature','"
"eML evalin MATLAB','on');\n          1- augment the eML block name with \"# |"
"eML-ML| <optional_eML_file.m> #\" otherwise a\n             temporary M-file "
"is used to evaluate the eML script as a MATLAB function. The string\n        "
"     between #(s) is not space sensitive, however the optional M file name - "
"if present -\n             must include the \".m\" extention.\n          2- D"
"rag and drop the blue blocks in the Library to your model\n          3- Make "
"sure the \"STOP at T>0\" block is at root level\n          4- You are all set"
" to go!\n\n          5- The I/O data dictionary gets updated atimatically wit"
"h Ctl-T (Simulation), Ctl-D (Update Diag.)\n              or Ctl-S (Save mode"
"l).\n          6- In Rebuild-ALL  mode,  Ctl-T or Ctl-D will auto-rebuild all"
" the charts => you no longer need to\n              keep editing the eML scri"
"pt to force a rebuild.\n          7- *** IMPORTANT *** your model containing "
"these blocks can be simply put in\n              <matlabroot>/test/toolbox/em"
"l/eml_checkin/evalin_ml_models directory for testing in BaT.\n\n- eML evalin "
"mechanism supports multiple I/O ports as well as all Simulink builtin types\n"
"  including complex numbers. After an evalin MATLAB the I/O ports of #|eML-ML"
"|#\n  blocks are auomatically updated for size, type, and complexity.\n\n- Th"
"e VERBOSE eML evalin mode (set in STOP at T>0 block) will display extra diagn"
"ostic messages while\n  evaluating eML scripts in MATLAB.\n \n- The InBaT eva"
"lin Mode will display all the failures (just like BaT) instead of stopping on"
" first\n  assertion failure. Creating a global ENABLE_EML_EVALIN_MATLAB = 'IN"
"BAT' does the same thing ignoring\n  the model settings for eML evalin mode, "
"and RebuildAll. This global is used in\n  test/toolbox/eml/eml_checkin/trunmd"
"ls.m\n\n- You can turn-off individual assertions by setting the Tolerance par"
"ameter of the test block to\n  Inf, or setting its Geck field to a non-zero g"
"eck number.\n\n- The SILENT mode is similar to InBaT, but on error it will di"
"splay more (interactive) information\n  before continuing.\n  \n- Tolerance c"
"an be a scalar value used for both double and single precision types, or it c"
"an a vector of\n  two elements - first element used for double precision test"
"s and the 2nd for single precision.\n  \n- Apart from the default Tolerance p"
"roperty, you can choose to override the values for GLNX86, SOL2,\n  and MAC p"
"latforms.\n\n\n"
      }
      CopyFcn		      "docblock('breaklink',gcb);"
      DeleteFcn		      "docblock('close_document',gcb);"
      PreSaveFcn	      "docblock('save_document',gcb);"
      OpenFcn		      "docblock('edit_document',gcb);"
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "DocBlock"
      MaskDescription	      "Use this block to save long descriptive text wi"
"th the model.  Double-clicking the block will open an editor."
      MaskPromptString	      "E Coder Flag|Document Type"
      MaskStyleString	      "edit,popup(Text|RTF|HTML)"
      MaskTunableValueString  "off,off"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,off"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "ECoderFlag=&1;DocumentType=&2;"
      MaskDisplay	      "plot([.8 0 0 1 1 .8 .8 1],[1 1 0 0 .8 1 .8 .8])"
";\ntext(.5,.5,'DOC','horizontalalignment','center');\n"
      MaskIconFrame	      off
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "|Text"
      MaskTabNameString	      ","
      System {
	Name			"README"
	Location		[480, 85, 980, 386]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  SubSystem
	  Name			  "EmptySubsystem"
	  Ports			  []
	  Position		  [115, 50, 145, 80]
	  TreatAsAtomicUnit	  off
	  MinAlgLoopOccurrences	  off
	  PropExecContextAcrossSSBoundary on
	  RTWSystemCode		  "Auto"
	  System {
	    Name		    "EmptySubsystem"
	    Location		    [146, 180, 902, 673]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Test #1"
      Ports		      [1]
      Position		      [380, 39, 615, 61]
      BackgroundColor	      "cyan"
      InitFcn		      "set_param(gcb,'BackgroundColor','orange');     "
"        \n                                                       \n          "
"                                             \nif(exist('DO_EML_SINGLE', 'var"
"') && DO_EML_SINGLE == 1)\n    set_param(gcb, 'precision', '2');             "
"     \nelse                                                   \n    set_param"
"(gcb, 'precision', '1');                  \nend                              "
"                      \n                                                     "
"  "
      StopFcn		      "set_param(gcb,'BackgroundColor','cyan');"
      FontSize		      12
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "|eML-ML| <= Tol"
      MaskPromptString	      "|||||Tolerance [double single] (Inf disables as"
"sertion)|GLNX86 Tolerance override|SOL2 Tolerance override|MAC Tolerance over"
"ride|Geck (non-zero value disables assertion)"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit,edit,edit,edit,ed"
"it"
      MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
      MaskCallbackString      "|||||||||"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "off,off,off,off,off,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,,"
      MaskVariables	      "expected=@1;emlSource=@2;emlBlock=@3;tol=@4;pre"
"cision=@5;tolPCWIN=@6;tolGLNX86=&7;tolSOL2=&8;tolMAC=&9;geck=@10;"
      MaskInitialization      "tol = sf('Private','eml_evalin_matlab','tol_cal"
"c',tolPCWIN,tolGLNX86,tolSOL2,tolMAC);\n"
      MaskDisplay	      "disp(sf('Private','eml_evalin_matlab','icon',to"
"l,geck))"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "|\"eml_evalin_matlab_lib/passthrough.y1 in eML "
"Script\"(#27)|eml_evalin_matlab_lib/Example\neML script\n## eML EVALIN MATLAB"
" ##|0|0|[1,1]|[1,1]|[1,1]|[1,1]|0"
      MaskTabNameString	      ",,,,,,,,,"
      System {
	Name			"Test #1"
	Location		[132, 18, 1400, 706]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"96"
	Block {
	  BlockType		  Inport
	  Name			  "from eML"
	  Position		  [30, 48, 60, 62]
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Port			  "1"
	  IconDisplay		  "Port number"
	  LatchInput		  off
	}
	Block {
	  BlockType		  Display
	  Name			  "<= Tolerance"
	  Ports			  [1]
	  Position		  [890, 27, 995, 353]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Decimation		  "1"
	}
	Block {
	  BlockType		  Display
	  Name			  "Difference"
	  Ports			  [1]
	  Position		  [750, 30, 855, 350]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Decimation		  "1"
	}
	Block {
	  BlockType		  Constant
	  Name			  "GECKED"
	  Position		  [670, 570, 780, 600]
	  Orientation		  "up"
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Value			  "geck~=0"
	}
	Block {
	  BlockType		  Display
	  Name			  "MATLAB"
	  Ports			  [1]
	  Position		  [1100, 30, 1275, 350]
	  Orientation		  "left"
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	}
	Block {
	  BlockType		  MinMax
	  Name			  "MinMax1"
	  Ports			  [1, 1]
	  Position		  [310, 425, 345, 445]
	  ShowName		  off
	  Function		  "max"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  "Reshape"
	  Ports			  [1, 1]
	  Position		  [235, 424, 275, 446]
	  ShowName		  off
	  DialogController	  "Simulink.DDGSource"
	  FunctionName		  "sreshape"
	  Parameters		  "OutputDimensionality, OutputDimensions"
	  MaskType		  "Reshape"
	  MaskDescription	  "Change the dimensions of a vector or matrix"
" input signal. Output\n - a one-dimensional array (vector), \n - a column vec"
"tor (Mx1 matrix), \n - a row vector (1xN matrix), or \n - a matrix or vector "
"with specified dimensions, e.g., [M, N] or [W]."
	  MaskPromptString	  "Output dimensionality:|Output dimensions:"
	  MaskStyleString	  "popup(1-D array|Column vector|Row vector|Cu"
"stomize),edit"
	  MaskTunableValueString  "on,on"
	  MaskCallbackString	  "reshapemask(gcb,'cbDimensionality')|"
	  MaskEnableString	  "on,off"
	  MaskVisibilityString	  "on,on"
	  MaskToolTipString	  "on,on"
	  MaskVarAliasString	  ","
	  MaskVariables		  "OutputDimensionality=@1;OutputDimensions=@2"
";"
	  MaskInitialization	  "s = reshapemask(gcb,'init');"
	  MaskDisplay		  "disp('U( : )')"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "normalized"
	  MaskValueString	  "1-D array|[1,1]"
	  MaskTabNameString	  ","
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Subsystem3"
	  Ports			  [3, 2]
	  Position		  [755, 443, 860, 557]
	  ShowName		  off
	  FontSize		  14
	  TreatAsAtomicUnit	  off
	  MinAlgLoopOccurrences	  off
	  PropExecContextAcrossSSBoundary on
	  RTWSystemCode		  "Auto"
	  System {
	    Name		    "Subsystem3"
	    Location		    [985, 103, 1373, 270]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "|diff|"
	      Position		      [25, 38, 55, 52]
	      Port		      "1"
	      IconDisplay	      "Port number"
	      LatchInput	      off
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "Tol"
	      Position		      [35, 73, 65, 87]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      LatchInput	      off
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "geck"
	      Position		      [165, 98, 195, 112]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      LatchInput	      off
	    }
	    Block {
	      BlockType		      Logic
	      Name		      "Logical\nOperator1"
	      Ports		      [2, 1]
	      Position		      [245, 43, 280, 127]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      FontSize		      14
	      Operator		      "OR"
	      AllPortsSameDT	      off
	    }
	    Block {
	      BlockType		      RelationalOperator
	      Name		      "Relational\nOperator"
	      Position		      [90, 27, 115, 98]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      FontSize		      14
	      Operator		      "<="
	      InputSameDT	      off
	      ZeroCross		      off
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "|diff| <= Tol"
	      Position		      [190, 18, 220, 32]
	      IconDisplay	      "Port number"
	      BusOutputAsStruct	      off
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "True"
	      Position		      [310, 78, 340, 92]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      BusOutputAsStruct	      off
	    }
	    Line {
	      SrcBlock		      "geck"
	      SrcPort		      1
	      DstBlock		      "Logical\nOperator1"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Relational\nOperator"
	      SrcPort		      1
	      Points		      [25, 0; 10, 0]
	      Branch {
		DstBlock		"Logical\nOperator1"
		DstPort			1
	      }
	      Branch {
		Points			[0, -40]
		DstBlock		"|diff| <= Tol"
		DstPort			1
	      }
	    }
	    Line {
	      SrcBlock		      "|diff|"
	      SrcPort		      1
	      DstBlock		      "Relational\nOperator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Tol"
	      SrcPort		      1
	      DstBlock		      "Relational\nOperator"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Logical\nOperator1"
	      SrcPort		      1
	      DstBlock		      "True"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Subsystem4"
	  Ports			  [2, 1]
	  Position		  [150, 443, 190, 472]
	  ShowName		  off
	  FontSize		  14
	  TreatAsAtomicUnit	  off
	  MinAlgLoopOccurrences	  off
	  PropExecContextAcrossSSBoundary on
	  RTWSystemCode		  "Auto"
	  MaskDisplay		  "disp('|diff|')"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  System {
	    Name		    "Subsystem4"
	    Location		    [532, 197, 757, 314]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "In1"
	      Position		      [25, 33, 55, 47]
	      Port		      "1"
	      IconDisplay	      "Port number"
	      LatchInput	      off
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "In2"
	      Position		      [85, 85, 115, 100]
	      Orientation	      "up"
	      Port		      "2"
	      IconDisplay	      "Port number"
	      LatchInput	      off
	    }
	    Block {
	      BlockType		      Abs
	      Name		      "Abs"
	      Position		      [130, 28, 160, 52]
	      NamePlacement	      "alternate"
	      ShowName		      off
	    }
	    Block {
	      BlockType		      Sum
	      Name		      "Sum"
	      Ports		      [2, 1]
	      Position		      [90, 30, 110, 50]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      IconShape		      "round"
	      Inputs		      "|+-"
	      InputSameDT	      off
	      OutDataTypeMode	      "Inherit via internal rule"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "Abs Diff"
	      Position		      [185, 33, 215, 47]
	      IconDisplay	      "Port number"
	      BusOutputAsStruct	      off
	    }
	    Line {
	      SrcBlock		      "Sum"
	      SrcPort		      1
	      DstBlock		      "Abs"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "In1"
	      SrcPort		      1
	      DstBlock		      "Sum"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "In2"
	      SrcPort		      1
	      DstBlock		      "Sum"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Abs"
	      SrcPort		      1
	      DstBlock		      "Abs Diff"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Constant
	  Name			  "Tolerance"
	  Position		  [275, 483, 420, 517]
	  BackgroundColor	  "cyan"
	  FontSize		  14
	  Value			  "abs(tol(precision))"
	}
	Block {
	  BlockType		  Display
	  Name			  "Tolerance Value"
	  Ports			  [1]
	  Position		  [525, 150, 745, 175]
	  Orientation		  "up"
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	}
	Block {
	  BlockType		  Display
	  Name			  "eML"
	  Ports			  [1]
	  Position		  [150, 33, 325, 347]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	}
	Block {
	  BlockType		  Constant
	  Name			  "from MATLAB"
	  Position		  [15, 444, 90, 486]
	  FontSize		  14
	  Value			  "expected"
	  VectorParams1D	  off
	}
	Block {
	  BlockType		  ToWorkspace
	  Name			  "max(|diff|)"
	  Position		  [375, 424, 600, 446]
	  NamePlacement		  "alternate"
	  ShowName		  off
	  InitFcn		  "                                           "
"                                                                             "
"                                                                             "
"       \nif(exist('SET_TOL', 'var') & SET_TOL==1)                            "
"                                                                             "
"                                                           \nevalin('base',  "
"['if(~exist(''max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_')"
" '_p1'')), ' 'max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_')"
" '_p1.signals.values = inf; end'])\n                                         "
"                                                                             "
"                                                                             "
"         \nevalin('base',  ['if(~exist(''max_' strrep(strrep(strrep(gcs, '/',"
" '_'), ' ', '_'), '#', '_') '_p2'')), max_' strrep(strrep(strrep(gcs, '/', '_"
"'), ' ', '_'), '#', '_') '_p2.signals.values = inf; end'])   \nend           "
"                                                                             "
"                                                                             "
"                                    \n                                       "
"                                                                             "
"                                                                             "
"           \nif(exist('EML_NO_OUT', 'var') & EML_NO_OUT==1)                  "
"                                                                             "
"                                                               \nset_param(gc"
"b, 'variableName', ['foo_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#"
"', '_') '_p' get_param(gcs, 'precision')]);                                  "
"                                      \nelse                                 "
"                                                                             "
"                                                                             "
"             \nset_param(gcb, 'variableName', ['max_' strrep(strrep(strrep(gc"
"s, '/', '_'), ' ', '_'), '#', '_') '_p' get_param(gcs, 'precision')]);       "
"                                                                 \nend       "
"                                                                             "
"                                                                             "
"                                        \n                                   "
"                                                                             "
"                                                                             "
"               \n                                                            "
"                                                                             "
"                                                                   "
	  StopFcn		  "if(exist('SET_TOL', 'var') & SET_TOL==1)   "
"                                                                             "
"                                                                             "
"                                                                             "
"    \n                                                                       "
"                                                                             "
"                                                                             "
"                                                     \n                      "
"                                                                             "
"                                                                             "
"                                                                             "
"                         \n                                                  "
"                                                                             "
"                                                                             "
"                                                                          \n "
"                                                                             "
"                                                                             "
"                                                                             "
"                                              \n                             "
"                                                                             "
"                                                                             "
"                                                                             "
"                  \nset_param(gcs, ['tol' upper(computer)], ['[' num2str(eval"
"(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p1.signa"
"ls.values']), '%0.6g') ',' num2str(eval(['max_' strrep(strrep(strrep(gcs, '/'"
", '_'), ' ', '_'), '#', '_') '_p2.signals.values']), '%0.6g') ']'])\n        "
"                                                                             "
"                                                                             "
"                                                                             "
"                                       \n                                    "
"                                                                             "
"                                                                             "
"                                                                             "
"           \nend                                                             "
"                                                                             "
"                                                                             "
"                                                            \n               "
"                                                                             "
"                                                                             "
"                                                                             "
"                                \n                                           "
"                                                                             "
"                                            if(exist('EML_NO_OUT', 'var') & E"
"ML_NO_OUT==1)                                                                "
"    \n                                                                       "
"                                                                             "
"                                                                             "
"                                                     \n                      "
"                                                                             "
"                                                                             "
"                                                                             "
"                         \n                                                  "
"                                                                             "
"                                                                             "
"                                                                          \ni"
"ncEmlTol(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_"
"p1'])                                                                        "
"                                                                             "
"                                              \n                             "
"                                                                             "
"                                                                             "
"                                                                             "
"                  \n                                                         "
"                                                                             "
"                                                                             "
"                                                                   \nincEmlTo"
"l(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p2'])  "
"                                                                             "
"                                                                             "
"                                       \n                                    "
"                                                                             "
"                                                                             "
"                                                                             "
"           \n                                                                "
"                                                                             "
"                                                                             "
"                                                            \n               "
"                                                                             "
"                                                                             "
"                                                                             "
"                                \nend                                        "
"                                                                             "
"                                                                             "
"                                                                             "
"    \n                                                                       "
"                                                                             "
"                                                                             "
"                                                     \n                      "
"                                                                             "
"                                                                             "
"                                                                             "
"                         \n                                                  "
"                                                                             "
"                                                                             "
"                                                                          \n "
"                                                                             "
"                                                                             "
"                                                                             "
"                                              \n                             "
"                                                                             "
"                                                                             "
"                                                                             "
"                  "
	  VariableName		  "max_AddSubMulDiv_test_sub_Test__1_p"
	  MaxDataPoints		  "inf"
	  SampleTime		  "-1"
	  SaveFormat		  "Structure"
	}
	Block {
	  BlockType		  ToWorkspace
	  Name			  "max(|diff|)1"
	  Position		  [1035, 419, 1260, 441]
	  NamePlacement		  "alternate"
	  ShowName		  off
	  InitFcn		  "                                           "
"                                                                             "
"               \nset_param(gcb, 'variableName', ['assert_' strrep(strrep(strr"
"ep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p' get_param(gcs, 'precision')]);\n"
"                                                                             "
"                                                          \n                 "
"                                                                             "
"                                         \n                                  "
"                                                                             "
"                        \n                                                   "
"                                                                             "
"       \n                                                                    "
"                                                                   "
	  StopFcn		  "if(exist('SET_TOL', 'var') & SET_TOL==1)   "
"                                                                             "
"                                                                             "
"                                                                             "
"    \nset_param(gcs, ['tol' upper(computer)], ['[' num2str(eval(['max_' strre"
"p(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p1.signals.values']), "
"'%.17g') ',' num2str(eval(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '"
"_'), '#', '_') '_p2.signals.values']), '%.17g') ']'])\nend                   "
"                                                                             "
"                                                                             "
"                                                                             "
"                         \n                                                  "
"                                                                             "
"                                                                             "
"                                                                          "
	  VariableName		  "assert_AddSubMulDiv_test_sub_Test__1_p"
	  MaxDataPoints		  "inf"
	  SampleTime		  "-1"
	  SaveFormat		  "Structure"
	}
	Block {
	  BlockType		  Assertion
	  Name			  "|diff| <= Tolerance"
	  Position		  [980, 514, 1055, 546]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Enabled		  off
	  AssertionFailFcn	  "sf('Private','eml_evalin_matlab','failure')"
	}
	Line {
	  SrcBlock		  "GECKED"
	  SrcPort		  1
	  Points		  [0, -25]
	  DstBlock		  "Subsystem3"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Subsystem4"
	  SrcPort		  1
	  Points		  [0, 0; 20, 0]
	  Branch {
	    Points		    [520, 0]
	    Branch {
	      DstBlock		      "Difference"
	      DstPort		      1
	    }
	    Branch {
	      DstBlock		      "Subsystem3"
	      DstPort		      1
	    }
	  }
	  Branch {
	    Points		    [0, -25]
	    DstBlock		    "Reshape"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Subsystem3"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "<= Tolerance"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "from MATLAB"
	  SrcPort		  1
	  Points		  [0, 0; 20, 0]
	  Branch {
	    Points		    [0, 150; 1185, 0; 0, -425]
	    DstBlock		    "MATLAB"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Subsystem4"
	    DstPort		    2
	  }
	}
	Line {
	  Labels		  [0, 0]
	  SrcBlock		  "Subsystem3"
	  SrcPort		  2
	  Points		  [0, 0; 60, 0]
	  Branch {
	    DstBlock		    "|diff| <= Tolerance"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, -100]
	    DstBlock		    "max(|diff|)1"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "MinMax1"
	  SrcPort		  1
	  DstBlock		  "max(|diff|)"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "from eML"
	  SrcPort		  1
	  Points		  [50, 0; 0, 135]
	  Branch {
	    DstBlock		    "eML"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, 260]
	    DstBlock		    "Subsystem4"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Reshape"
	  SrcPort		  1
	  DstBlock		  "MinMax1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Tolerance"
	  SrcPort		  1
	  Points		  [210, 0]
	  Branch {
	    DstBlock		    "Subsystem3"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Tolerance Value"
	    DstPort		    1
	  }
	}
	Annotation {
	  Name			  "|-----------For setting RTW tolerances ----"
"------|"
	  Position		  [1149, 402]
	}
	Annotation {
	  Name			  "|-------------------------------- For setti"
"ng tolerances -----------------------------|"
	  Position		  [422, 406]
	}
	Annotation {
	  Name			  "This should output true"
	  Position		  [1135, 457]
	  DropShadow		  on
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "eML stop t>0"
      Tag		      "eML_evalin_testController"
      Ports		      []
      Position		      [150, 208, 320, 258]
      BackgroundColor	      "cyan"
      DropShadow	      on
      InitFcn		      "set_param(gcb,'BackgroundColor','orange');"
      StartFcn		      "eml_do_selective_run('close');"
      StopFcn		      "set_param(gcb,'BackgroundColor','cyan');"
      OpenFcn		      "eml_do_selective_run;"
      FontSize		      14
      FontWeight	      "bold"
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "eML STOP at T==?"
      MaskDescription	      "%disp(sf('Private','eml_evalin_matlab','eMLstop"
"'));"
      MaskPromptString	      "eML Evalin Mode|Stop Time (s)|Rebuild Everytime"
      MaskStyleString	      "popup(Verbose|InBaT|Silent),edit,checkbox"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "evalinMode=&1;stopTime=@2;rebuildAll=&3;"
      MaskDisplay	      "disp('Double-click here first');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "Verbose|0|on"
      MaskTabNameString	      ",,"
      System {
	Name			"eML stop t>0"
	Location		[1010, 140, 1371, 304]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  DigitalClock
	  Name			  "Digital Clock"
	  Position		  [30, 56, 110, 84]
	}
	Block {
	  BlockType		  Constant
	  Name			  "For RTW"
	  Position		  [30, 21, 110, 49]
	  ShowName		  off
	  Value			  "stopTime"
	}
	Block {
	  BlockType		  RelationalOperator
	  Name			  "Relational\nOperator"
	  Position		  [145, 18, 175, 87]
	  ShowName		  off
	  Operator		  "<="
	  InputSameDT		  off
	}
	Block {
	  BlockType		  Stop
	  Name			  "Stop Simulation\nafter first step"
	  Position		  [240, 37, 275, 73]
	}
	Line {
	  SrcBlock		  "Digital Clock"
	  SrcPort		  1
	  DstBlock		  "Relational\nOperator"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "For RTW"
	  SrcPort		  1
	  DstBlock		  "Relational\nOperator"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Relational\nOperator"
	  SrcPort		  1
	  DstBlock		  "Stop Simulation\nafter first step"
	  DstPort		  1
	}
      }
    }
    Line {
      SrcBlock		      "Constant"
      SrcPort		      1
      DstBlock		      "Example\neML script\n# |eML-ML| optional_eML_fi"
"le.m #"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant1"
      SrcPort		      1
      DstBlock		      "Example\neML script\n# |eML-ML| optional_eML_fi"
"le.m #"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Example\neML script\n# |eML-ML| optional_eML_fi"
"le.m #"
      SrcPort		      1
      DstBlock		      "Test #1"
      DstPort		      1
    }
  }
}

# Finite State Machines
#
#    Stateflow Version 6.0 (R14) dated Apr 19 2004, 12:10:15
#
#

Stateflow {

	machine {
		id                   		1
		name                 		"eml_evalin_matlab_lib"
		created              		"18-Jun-2003 14:31:32"
		isLibrary            		1
		firstTarget          		11
		sfVersion            		60014000.000006
		sfDemoChecksum       		[3372641385 3945933395 3444465051 1945260349]
	}

	chart {
		id                       		2
		name                     		"Example\n"
					"eML script\n"
					"# |eML-ML| optional_eML_file.m #"
		windowPosition           		[261.325 -143.517 200.25 189.75]
		viewLimits               		[0 156.75 0 153.75]
		screen                   		[1 1 1600 1200 1.25]
		treeNode                 		[0 3 0 0]
		firstTransition          		5
		firstJunction            		4
		viewObj                  		2
		machine                  		1
		toolbarMode              		LIBRARY_TOOLBAR
		decomposition            		CLUSTER_CHART
		type                     		EML_CHART
		firstData                		6
		chartFileNumber          		2
		disableImplicitCasting   		1
		eml {
			name		"passthrough"
		}
	}

	state {
		id                  		3
		labelString         		"eML_blk_kernel()"
		position            		[18 64.5 118 66]
		fontSize            		12
		chart               		2
		treeNode            		[2 0 0 0]
		superState          		SUBCHART
		subviewer           		2
		type                		FUNC_STATE
		decomposition       		CLUSTER_STATE
		eml {
			isEML       		1
			script      		"function [y1,y2]=passthrough(u1,u2)\n"
						"% a simple pass through example\n"
						"   y1 = u1;\n"
						"   y2 = u2;\n"
						"\n"
						"\n"
						""
			editorLayout		"100 M4x1[440 37 600 400]"
		}
	}

	junction {
		id         		4
		position   		[23.5747 49.5747 7]
		chart      		2
		linkNode   		[2 0 0]
		subviewer  		2
		type       		CONNECTIVE_JUNCTION
	}

	transition {
		id             		5
		labelString    		"{eML_blk_kernel();}"
		labelPosition  		[32.125 19.875 102.544 14.964]
		fontSize       		12
		src {
			intersection		[0 0 1 0 23.5747 14.625 0 0]
		}
		dst {
			id          		4
			intersection		[7 0 -1 -1 23.5747 42.5747 0 0]
		}
		midPoint       		[23.5747 24.9468]
		chart          		2
		linkNode       		[2 0 0]
		dataLimits     		[21.175 25.975 14.625 42.575]
		subviewer      		2
		drawStyle      		SMART
	}

	data {
		id                            		6
		name                          		"u1"
		linkNode                      		[2 0 7]
		scope                         		INPUT_DATA
		machine                       		1
		dataType                      		"single"
		fixptType {
			bias    		0
			slope   		1
			exponent		0
			baseType		SF_INT16_TYPE
			lock    		0
		}
		dlgFixptMode                  		0
		props {
			range {
				minimum		""
				maximum		""
			}
			array {
				size      		"[4,4]"
				firstIndex		"1"
			}
		}
	}

	data {
		id                            		7
		name                          		"y1"
		linkNode                      		[2 6 8]
		scope                         		OUTPUT_DATA
		machine                       		1
		dataType                      		"single"
		fixptType {
			bias    		0
			slope   		1
			exponent		0
			baseType		SF_INT16_TYPE
			lock    		0
		}
		dlgFixptMode                  		0
		props {
			range {
				minimum		""
				maximum		""
			}
			array {
				size      		"[4,4]"
				firstIndex		"1"
			}
		}
	}

	data {
		id                            		8
		name                          		"u2"
		linkNode                      		[2 7 9]
		scope                         		INPUT_DATA
		machine                       		1
		dataType                      		"double"
		fixptType {
			bias    		0
			slope   		1
			exponent		0
			baseType		SF_INT16_TYPE
			lock    		0
		}
		dlgFixptMode                  		0
		isComplex                     		1
		props {
			range {
				minimum		""
				maximum		""
			}
			array {
				size      		"[2,2]"
				firstIndex		"1"
			}
		}
	}

	data {
		id                            		9
		name                          		"y2"
		linkNode                      		[2 8 0]
		scope                         		OUTPUT_DATA
		machine                       		1
		dataType                      		"double"
		fixptType {
			bias    		0
			slope   		1
			exponent		0
			baseType		SF_INT16_TYPE
			lock    		0
		}
		dlgFixptMode                  		0
		isComplex                     		1
		props {
			range {
				minimum		""
				maximum		""
			}
			array {
				size      		"[2,2]"
				firstIndex		"1"
			}
		}
	}

	instance {
		id     		10
		name   		"Example\n"
					"eML script\n"
					"# |eML-ML| optional_eML_file.m #"
		machine		1
		chart  		2
	}

	target {
		id               		11
		name             		"sfun"
		description      		"Default Simulink S-Function Target."
		machine          		1
		linkNode         		[1 0 12]
	}

	target {
		id               		12
		name             		"rtw"
		codeFlags        		" comments=1 statebitsets=1 databitsets=1 emitlogicalops=1 el"
						"seifdetection=1 constantfolding=1 redundantloadelimination=0"
						" preserveconstantnames=0 preservenames=0 preservenameswithpa"
						"rent=0 exportcharts=0"
		machine          		1
		linkNode         		[1 11 0]
	}
}
