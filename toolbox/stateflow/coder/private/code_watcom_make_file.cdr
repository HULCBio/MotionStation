function code_watcom_make_file(fileNameInfo)

% CODE_WATCOM_MAKE_FILE(FILENAMEINFO)

%   Copyright 1995-2004 The MathWorks, Inc.
%   $Revision: 1.14.2.5 $  $Date: 2004/04/15 00:51:35 $

	global gMachineInfo gTargetInfo
	 
	code_machine_objlist_file(fileNameInfo);

	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.makeBatchFile);
   sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end
	if(~isempty(fileNameInfo.mexOptsFile))
...call "$fileNameInfo.mexOptsFile$"
	end
...wmake -f $fileNameInfo.watcomMakeFile$
	fclose(file);


	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.watcomMakeFile);
  sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end

	DOLLAR = '$';
	if(length(fileNameInfo.userMakefiles))
		for i=1:length(fileNameInfo.userMakefiles)
...!include $fileNameInfo.userMakefiles{i}
		end
	end
...MACHINE     = $gMachineInfo.machineName$
...TARGET		= $gMachineInfo.targetName$

	if length(gMachineInfo.charts)
...CHART_SRCS 	= &
		for chart=gMachineInfo.charts(1:end-1)
			chartNumber = sf('get',chart,'chart.number');
...		$fileNameInfo.chartSourceFiles{chartNumber+1}$&
		end
			chartNumber = sf('get',gMachineInfo.charts(end),'chart.number');
...		$fileNameInfo.chartSourceFiles{chartNumber+1}$
	else
...CHART_SRCS =
	end
...MACHINE_SRC	= $fileNameInfo.machineSourceFile$
	if(~gTargetInfo.codingLibrary & gTargetInfo.codingSFunction)
...MACHINE_REG = $fileNameInfo.machineRegistryFile$
	else
...MACHINE_REG = 
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingMEX
...MEX_WRAPPER = $fileNameInfo.mexWrapperFile$
	else
...MEX_WRAPPER =
	end

	if(length(fileNameInfo.userSources))
...USER_SRCS 	= &
		for i=1:length(fileNameInfo.userSources)-1
...		$fileNameInfo.userSources{i}$&
		end
...		$fileNameInfo.userSources{end}$

...USER_ABS_SRCS 	= &
		for i=1:length(fileNameInfo.userAbsSources)-1
...		$fileNameInfo.userAbsSources{i}$&
		end
...		$fileNameInfo.userAbsSources{end}$
		userSrcPathString	= '';
		if(length(fileNameInfo.userAbsPaths)>0)
			userSrcPathString = [fileNameInfo.userAbsPaths{1}];
			for i=2:length(fileNameInfo.userAbsPaths)
				userSrcPathString = [userSrcPathString,';',fileNameInfo.userAbsPaths{i}];
			end
		end
...USER_SRC_PATHS = $userSrcPathString$
	else
... 
...USER_SRC_PATHS	= &
...USER_SRCS =
...USER_ABS_SRCS =
...USER_SRC_PATHS =
	end

...MAKEFILE    = $fileNameInfo.watcomMakeFile$

...MATLAB_ROOT	= $fileNameInfo.matlabRoot$
... 
...#--------------------------------- Tool Locations -----------------------------
...#
...# Modify the following macro to reflect where you have installed
...# the Watcom C/C++ Compiler.
...#
...!ifndef %WATCOM
...!error WATCOM environmental variable must be defined
...!else
...WATCOM = $DOLLAR$(%WATCOM)
...!endif
...  
...#---------------------------- Tool Definitions ---------------------------
...  
...CC     = wcc386
...LD     = wcl386
...LIBCMD = wlib
...LINKCMD = wlink
...   
...#------------------------------ Include Path -----------------------------
	userIncludeDirString = '';
	if(length(fileNameInfo.userIncludeDirs))
		for i = 1:length(fileNameInfo.userIncludeDirs)
			userIncludeDirString	= [userIncludeDirString,fileNameInfo.userIncludeDirs{i},';'];
		end
	end
...USER_INCLUDES = $userIncludeDirString$
...  
...MATLAB_INCLUDES = &
...$DOLLAR$(MATLAB_ROOT)\simulink\include;&
...$DOLLAR$(MATLAB_ROOT)\extern\include;&
...$fileNameInfo.sfcMexLibInclude$;&
...$fileNameInfo.sfcDebugLibInclude$;
   if (~isempty(fileNameInfo.dspLibInclude))
...DSP_INCLUDES    = $fileNameInfo.dspLibInclude$;
   else
...DSP_INCLUDES    =   
   end

...  
...INCLUDES = $DOLLAR$(USER_INCLUDES)$DOLLAR$(MATLAB_INCLUDES)$DOLLAR$(DSP_INCLUDES)$DOLLAR$(%INCLUDE)
...  
...#-------------------------------- C Flags --------------------------------
...!ifeq %OS Windows_NT
...REQ_OPTS = -fpi87 -3s -bt=NT
...!else
...REQ_OPTS = -fpi87 -3s
...!endif
... 
...
...MEX_DEFINE = -DMATLAB_MEX_FILE
...OPT_OPTS = -ox
...CC_OPTS =  -zp8 -ei -bd -zq $DOLLAR$(MEX_DEFINE) $DOLLAR$(REQ_OPTS) $DOLLAR$(OPT_OPTS) $DOLLAR$(OPTS)
...CFLAGS = $DOLLAR$(CC_OPTS)
... 
...#------------------------------- Source Files ---------------------------------
...OBJLIST_FILE = $fileNameInfo.machineObjListFile$

	stateflowLibraryString = fileNameInfo.sfcMexLibFile;
	stateflowLibraryString = [stateflowLibraryString,' ',fileNameInfo.sfcDebugLibFile];
   if (~isempty(fileNameInfo.dspLibFile))
      stateflowLibraryString = [stateflowLibraryString,' ',fileNameInfo.dspLibFile];
   end
...SFCLIB = $stateflowLibraryString$

	if(length(fileNameInfo.userLibraries))
...USER_LIBS = &
		for i=1:length(fileNameInfo.userLibraries)-1
...	$fileNameInfo.userLibraries{i}$ &
		end
...	$fileNameInfo.userLibraries{end}$
	else
...USER_LIBS =
	end
	numLinkMachines = length(fileNameInfo.linkLibFullPaths);
	if(~gTargetInfo.codingLibrary & numLinkMachines)
...LINK_MACHINE_LIBS = &
		for i = 1:numLinkMachines-1
...	$fileNameInfo.linkLibFullPaths{i}$ &
		end
...	$fileNameInfo.linkLibFullPaths{end}$
	else
...LINK_MACHINE_LIBS =
	end
... 
...REQ_OBJS  = &
	for i=1:length(fileNameInfo.userAbsSources)
		userSourceFile = fileNameInfo.userAbsSources{i};
		userObjFile = [userSourceFile(1:end-1),'obj'];
...$userObjFile$ &
	end
	for chart=gMachineInfo.charts
		chartNumber = sf('get',chart,'chart.number');
		chartSourceFile = fileNameInfo.chartSourceFiles{chartNumber+1};
		chartObjFile = [chartSourceFile(1:end-1),'obj'];
...$chartObjFile$	&
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingSFunction
		machineRegistryFile = fileNameInfo.machineRegistryFile;
		machineRegistryFile = [machineRegistryFile(1:end-1),'obj'];
...$machineRegistryFile$ &
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingMEX
		mexWrapperFile = fileNameInfo.mexWrapperFile;
		mexWrapperFile = [mexWrapperFile(1:end-1),'obj'];
...$mexWrapperFile$ &
	end
	machineSourceFile = fileNameInfo.machineSourceFile;
	machineSourceFile = [machineSourceFile(1:end-1),'obj'];
...$machineSourceFile$
... 
...OBJS = $DOLLAR$(REQ_OBJS)
	if gTargetInfo.codingLibrary
...LIBS = $DOLLAR$(USER_LIBS)
	else
...LIBS = $DOLLAR$(USER_LIBS) $DOLLAR$(LINK_MACHINE_LIBS) libmexwat.lib libmxwat.lib libfixwat.lib $matlabroot$\extern\lib\win32\watcom\wc106\libut.lib $DOLLAR$(SFCLIB)
	end
... 
...#----------------------- Exported Environment Variables -----------------------
...#
...# Because of the 128 character command line length limitations in DOS, we
...# use environment variables to pass additional information to the WATCOM
...# Compiler and Linker
...#
... 
...#--------------------------------- Rules --------------------------------------
....ERASE
... 
....BEFORE
...	@set INCLUDE=$DOLLAR$(INCLUDES)
... 
	if gTargetInfo.codingLibrary
...$DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib : $DOLLAR$(OBJS)
...	$DOLLAR$(LIBCMD) -q -n -l $DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib $DOLLAR$(LIBS) @$DOLLAR$(OBJLIST_FILE) 

	else
		if(gTargetInfo.codingMEX & ~isempty(sf('get',gMachineInfo.target,'target.mexFileName')))
...MEX_FILE_NAME = $sf('get',gMachineInfo.target,'target.mexFileName')$.$mexext$
		else
...MEX_FILE_NAME = $DOLLAR$(MACHINE)_$DOLLAR$(TARGET).$mexext$
		end

...$DOLLAR$(MEX_FILE_NAME) : $DOLLAR$(MAKEFILE) $DOLLAR$(OBJS) $DOLLAR$(SFCLIB)
...	$DOLLAR$(LIBCMD) -q -n libmexwat.lib $matlabroot$\bin\win32\libmex.dll
...	$DOLLAR$(LIBCMD) -q -n libmxwat.lib $matlabroot$\bin\win32\libmx.dll
...	$DOLLAR$(LIBCMD) -q -n libfixwat.lib $matlabroot$\bin\win32\libfixedpoint.dll
...	$DOLLAR$(LINKCMD) name $DOLLAR$(MEX_FILE_NAME) format windows nt dll export mexFunction $DOLLAR$(LDFLAGS) library {$DOLLAR$(LIBS)} file {@$DOLLAR$(OBJLIST_FILE)} 
...	del libmexwat.lib;
...	del libmxwat.lib;
...	del libfixwat.lib;
	end
... 
...# Source Path
....c : $DOLLAR$(USER_SRC_PATHS)
... 
....c.obj:
...	@echo $DOLLAR$#$DOLLAR$#$DOLLAR$# Compiling "$DOLLAR$[@"
...	$DOLLAR$(CC) $DOLLAR$(CFLAGS) $DOLLAR$[@
... 

	fclose(file);
