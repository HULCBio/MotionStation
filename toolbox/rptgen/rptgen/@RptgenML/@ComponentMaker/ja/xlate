% $Revision: 1.1.6.1 $ $Date: 2004/03/21 22:16:04 $
<(getContextMenu)Add new property
>(getContextMenu)新たなﾌﾟﾛﾊﾟﾃｨを追加
<(getContextMenu)Build component
>(getContextMenu)*ｺﾝﾎﾟｰﾈﾝﾄをﾋﾞﾙﾄﾞ
<(getDialogSchema)Build
>(getDialogSchema)ﾋﾞﾙﾄﾞ
<(getDialogSchema)Create Component: Main
>(getDialogSchema)ｺﾝﾎﾟｰﾈﾝﾄを生成: Main
<(getDisplayLabel)<<Unnamed Component>>
>(getDisplayLabel)<<新規ｺﾝﾎﾟｰﾈﾝﾄ>>
<(getDisplayLabel)Component
>(getDisplayLabel)ｺﾝﾎﾟｰﾈﾝﾄ
<(makeClassDir)Class Name is empty
>(makeClassDir)ｸﾗｽ名が空白です
<(makeClassDir)Could not create class directory
>(makeClassDir)ｸﾗｽﾃﾞｨﾚｸﾄﾘを生成できませんでした
<(makeContentType)function ct=getContentType(h)\n%%GETCONTENTTYPE returns the type of DocBook element the component makes\n
>(makeContentType)function ct=getContentType(h)\n%%GETCONTENTTYPE はDocBook要素のｺﾝﾎﾟｰﾈﾝﾄ作成のﾀｲﾌﾟを出力します\n
<(makeDescription)function d=getDescription(this)\n%%GETDESCRIPTION returns a single-line description of the component\n
>(makeDescription)function d=getDescription(this)\n%%GETDESCRIPTION は component\nの一行の記述を返します
<(makeDialogSchema)function dlgStruct = getDialogSchema(this, name)\n%%GETDIALOGSCHEMA Build a dialog schema\n
>(makeDialogSchema)function dlgStruct = getDialogSchema(this, name)\n%%GETDIALOGSCHEMA はﾀﾞｲﾔﾛｸﾞschemaをﾋﾞﾙﾄﾞします\n
<(makeExecute)function out=execute(this,d,varargin)\n%%EXECUTE creates report output\n
>(makeExecute)function out=execute(this,d,varargin)\n%%EXECUTE はﾚﾎﾟｰﾄ出力を生成します\n
<(makeName)function n=getName(this)\n%%GETNAME returns the component's display name\n
>(makeName)function n=getName(this)\n%%GETNAME はｺﾝﾎﾟｰﾈﾝﾄのﾃﾞｨｽﾌﾟﾚｲ名を返します\n
<(makeOutline)function s=getOutlineString(this)\n%%GETOUTLINESTRING returns the string used in the setup file outline\n
>(makeOutline)function s=getOutlineString(this)\n%%GETOUTLINESTRING は ｾｯﾄｱｯﾌﾟﾌｧｲﾙｱｳﾄﾗｲﾝに使われている文字列を返します\n
<(makePackageDir)function %s\n%%%s creates the %s user object package\n
>(makePackageDir)function %s\n%%%s は %s ﾕｰｻﾞｰｵﾌﾞｼﾞｪｸﾄﾊﾟｯｹｰｼﾞを生成します\n
<(makeParentable)function p=getParentable(this)\n%%GETPARENTABLE tells whether or not the component can have children\n
>(makeParentable)function p=getParentable(this)\n%%GETPARENTABLE は そのｺﾝﾎﾟｰﾈﾝﾄが子を持てるか知らせます\n
<(makeQe_Test)function ok=qe_test(this,d)\n%%QE_TEST tests the component\n
>(makeQe_Test)function ok=qe_test(this,d)\n%%QE_TEST はｺﾝﾎﾟｰﾈﾝﾄをﾃｽﾄします\n
<(makeSchema)function schema\n%%SCHEMA defines object properties\n
>(makeSchema)function schema\n%%SCHEMA はｵﾌﾞｼﾞｪｸﾄﾌﾟﾛﾊﾟﾃｨを定義します\n
<(makeType)function t=getType(this)\n%%GETTYPE tells what group a component belongs to\n
>(makeType)function t=getType(this)\n%%GETTYPE はｺﾝﾎﾟｰﾈﾝﾄがどのｸﾞﾙｰﾌﾟに属するか知らせます\n
<(makev1oldname)function n=v1oldname(h)\n%%V10LDNAME returns the name of the component in v1.x\n%%   STATIC\n
>(makev1oldname)function n=v1oldname(h)\n%%V10LDNAME は v1.x\n%%   STATIC にあるｺﾝﾎﾟｰﾈﾝﾄ名を返します\n
<(openFile)Yes
>(openFile)はい
<(openFile)Yes to all
>(openFile)すべて はい
<(openFile)Cancel Build
>(openFile)ﾋﾞﾙﾄﾞのｷｬﾝｾﾙ
<(openFile)File "%s" already exists.  Overwrite?
>(openFile)ﾌｧｲﾙ "%s" は存在します。上書きしますか？
<(schema)Package name
>(schema)ﾊﾟｯｹｰｼﾞ名
<(schema)Package root directory
>(schema)ﾊﾟｯｹｰｼﾞ ﾙｰﾄ ﾃﾞｨﾚｸﾄﾘ
<(schema)Class name
>(schema)ｸﾗｽ名
<(schema)New Component
>(schema)新規ｺﾝﾎﾟｰﾈﾝﾄ
<(schema)Display Name
>(schema)名前の表示
<(schema)Description
>(schema)説明
<(schema)Custom Components
>(schema)ｶｽﾀﾑ ｺﾝﾎﾟｰﾈﾝﾄ
<(schema)Category Name
>(schema)ｶﾃｺﾞﾘ名
<(schema)Component may contain children
>(schema)ｺﾝﾎﾟｰﾈﾝﾄは子を含む可能性があります
