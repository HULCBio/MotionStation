ha_help_begin
 DECODE Decode an encoded codeword using Hamming code method.
    MSG = DECODE(CODE, N, K, METHOD), METHOD = 'hamming', decodes the
    binary codeword in CODE using Hamming code method. The codeword length
    is N and the message length is K. The format of CODE can be either
    a vector or N-column matrix. Hamming code is a single error-correction
    code. Its codeword length is N = 2^M-1. Its message length is N-M. 

    MSG = DECODE(CODE, N, K, METHOD, P_POLY), METHOD = 'hamming', specifies
    the primitive polynomial used in the Hamming decode. P_POLY is a degree
    N polynomial defined in GF(2).

    MSG = DECODE(CODE, N, K, METHOD...), METHOD = 'hamming/decimal'
    specifies that the input data in CODE is decimal integers. This
    function converts the decimal integer into M bits binary before
    proceeding with the decode computation, where M is the smallest integer
    such that N <= 2^M-1.

    [MSG, ERR, CCODE, CERR] = DECODE(...) outputs the decode message signal
    MSG, the number of errors detected, the corrected codeword CCODE,
    and errors found in CODE. A negative number in ERR indicates
    that the number of errors exceeds the code's error-correction capability.
ha_help_end

li_help_begin
 DECODE Decode an encoded codeword using linear block code method.
    MSG = DECODE(CODE, N, K, METHOD, GEN), METHOD = 'linear', decodes the
    binary codeword in CODE using linear block code method. The codeword
    length is N and the message length is K. The format of CODE can be 
    either a vector or N-column matrix. The generator matrix GEN is a
    K-by-N matrix, and it is in the standard form. Linear block code is a 
    generic code. For example, HAMMGEN can be used to generate a generator 
    matrix for Hamming code.

    MSG = DECODE(CODE, N, K, METHOD, GEN, DEC_TABLE), METHOD = 'linear',
    specifies the decoding table in the linear block code.  SYNDTABLE can be
    used to produce the decoding table.

    MSG = DECODE(CODE, N, K, METHOD...), METHOD = 'linear/decimal' specifies
    that the input data in CODE is decimal integers. This function converts
    the decimal integer into M bits binary before proceeding with the
    decode computation, where M is the smallest integer such that
    N <= 2^M-1.

    [MSG, ERR, CCODE, CERR] = DECODE(...) outputs the decode message signal
    MSG, the number of errors detected, the corrected codeword CCODE,
    and errors found in CODE. A negative number in ERR indicates that
    the number of errors exceeds the code's error-correction capability.
li_help_end

cy_help_begin
 DECODE Decode an encoded codeword using cyclic code method.
    MSG = DECODE(CODE, N, K, METHOD, CYC_POLY), METHOD = 'cyclic', decodes
    binary codeword in CODE using cyclic code method. The codeword length
    is N and the message length is K. The format of CODE can be either
    a vector or an N-column matrix. CYC_POL is a degree N-K cyclic 
    polynomial.  CYCLPOLY can be used to produce the cyclic polynomial. This
    format uses the default decoding table for single-error correction.

    MSG = DECODE(CODE, N, K, METHOD, CYC_POLY, DEC_TABLE), METHOD = 'cyclic',
    specifies the decoding table in the linear block code.  SYNDTABLE can be
    used to produce the decoding table.

    MSG = DECODE(CODE, N, K, METHOD...), METHOD = 'cyclic/decimal',
    specifies that the input data in CODE is decimal integers. This
    function converts the decimal integer into M bits binary before
    proceeding with the decode computation, where M is the smallest integer
    such that N <= 2^M-1.

    [MSG, ERR, CCODE, CERR] = DECODE(...) outputs the decode message signal
    MSG, the number of errors detected in ERR, the corrected codeword
    CCODE, and errors found corresponding to each row of CCODE.
    A negative number in ERR indicates that the number of errors exceeds
    the code's error-correction capability. 
cy_help_end

bc_help_begin
 DECODE Decode an encoded codeword using BCH code method.

     WARNING : This is now an obsolete mode of DECODE.  Please use BCHDEC
              instead.
bc_help_end

rs_help_begin
 DECODE Decode an encoded codeword using Reed-Solomon code method.

    WARNING : This is now an obsolete mode of DECODE.  Please use RSDEC
              instead.
rs_help_end

co_help_begin
 DECODE Decode convolutional codeword using Viterbi algorithm.

    WARNING : This is now an obsolete mode of DECODE.  Please use VITDEC
              instead.
co_help_end       

%   Copyright 1996-2004 The MathWorks, Inc.
$Revision: 1.10.4.2 $   $Date: 2004/04/20 23:14:59 $ 
