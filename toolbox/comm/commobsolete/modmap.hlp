ask_help_begin
 MODMAP Map for M-ary amplitude shift keying (ASK) modulation.
    Y = MODMAP(X, Fd, Fs, METHOD, M), METHOD = 'ask', maps a sample frequency
    Fd digital signal X to a sample frequency Fs signal Y. Fs/Fd must be
    a positive integer. The number of rows of Y is Fs/Fd times the 
    number of rows of X, and each column of X is processed independently.
    All elements in X must be nonnegative integers in the range [0, M-1], where
    M is the alphabet size. The elements of Y are between -1 and 1.
  
    MODMAP(METHOD, M), METHOD = 'ask', plots the M-ary ASK constellation.
  
    The output Y can be directly input to AMOD with METHOD='amdsb-tc',
    'amdsb-sc', or 'amssb' for signal modulation. The mapped Y can also be
    modified by using Y =[Y Y*0] as input to AMOD with METHOD = 'qam'.
ask_help_end

psk_help_begin
 MODMAP Map for M-ary phase shift keying (PSK) modulation.
    Y = MODMAP(X, Fd, Fs, METHOD, M), METHOD = 'psk', maps a sample frequency
    Fd digital signal X to a sample frequency Fs signal Y. Fs/Fd must be a
    positive integer. If X has R rows and C columns, then Y has R*Fs/Fd 
    rows and 2*C columns.  The odd-numbered rows in Y represent in-phase
    components and the even-numbered rows in Y represent quadrature
    components. Each column of X is processed independently. All elements in
    X must be nonnegative integers in the range [0, M-1], where M is the 
    alphabet size. The elements of Y satisfy Y(i, 1)^2 + Y(i, 2)^2 = 1 for 
    any valid i.
   
    MODMAP(METHOD, M), METHOD = 'psk', plots the M-ary PSK constellation.
   
    The mapped Y can be directly input to AMOD with METHOD='QAM' for 
    signal modulation.
psk_help_end

qask_help_begin
 MODMAP Map for M-ary quadrature amplitude shift keying (QASK) modulation.
    Y = MODMAP(X, Fd, Fs, METHOD, M), METHOD = 'qask', maps a sample frequency
    Fd digital signal X to a sample frequency Fs signal Y using a square
    QASK constellation. Fs/Fd must be a positive integer. If X has R rows and 
    C columns, then Y has R*Fs/Fd rows and 2*C columns.  The odd-numbered 
    rows in Y represent in-phase components and the even-numbered rows in Y 
    represent quadrature components. Each column of X is processed 
    independently. All elements in X must be nonnegative integers in the range 
    [0, M-1], where M is the alphabet size.
  
    The output maximum numbers are as follows:
        M = 2,   maximum = 1;   M = 4,   maximum = 1;
        M = 8,   maximum = 3;   M = 16,  maximum = 3;
        M = 32,  maximum = 5;   M = 64,  maximum = 7;
        M = 128, maximum = 11;  M = 256, maximum = 15;
  
    MODMAP(METHOD, M), METHOD = 'qask', plots the M-ary QASK square
    constellation.
  
    Y = MODMAP(X, Fd, Fs, METHOD, In_Phase, Quad), METHOD = 'qask/arb',
    is the same as the first syntax above, except that the mapping uses a
    user-defined arbitrary QASK signal constellation. The in-phase and 
    quadrature components of the arbitrary constellation are defined in 
    In_Phase and Quad. The constellation point for symbol I is defined by 
    In_Phase(I+1) and Quad(I+1), respectively.
  
    MODMAP(METHOD, In_Phase, Quad), METHOD = 'qask/arb' plots the signal
    constellation defined by the pair of vectors In_Phase, Quad.
  
    Y = MODMAP(X, Fd, Fs, METHOD, NUMSIG, AMP, PHS), METHOD = 'qask/cir',
    is the same as the first syntax above, except that the mapping uses a
    circular constellation.  The number of points on each circle, the
    radius of each circle, and the phase of the first point on each 
    circle are defined in NUMSIG, AMP, and PHS, respectively. The three 
    vectors NUMSIG, AMP and PHS must have the same length. The 
    constellation points on each circle are evenly distributed. The default 
    PHS is an all-zero vector, and the default AMP is [1:length(NUMSIG)].  
  
    MODMAP(METHOD, NUMSIG, AMP, PHS), METHOD = 'qask/cir' plots the 
    circular constellation defined by NUMSIG, AMP, and PHS. 
    
    The mapped Y can be directly input to AMOD with METHOD='QAM' for 
    signal modulation.
qask_help_end

fsk_help_begin
 MODMAP Map for M-ary frequency shift keying (FSK) modulation.
    Y = MODMAP(X, Fd, Fs, METHOD, M), METHOD = 'fsk', maps a sample frequency
    Fd digital input signal X to a sample frequency Fs output signal Y.
    Fs/Fd must be a positive integer. The number of rows of Y is Fs/Fd times
    the number of rows of X, and each column of X is processed independently.
    All elements in X must be nonnegative integers in the range [0, M-1], where
    M is the alphabet size. Y contains the signal frequencies. The default tone
    spacing is TONE = Fd, which means the separation between successive 
    frequencies.
  
    Y = MODMAP(X, Fd, Fs, METHOD, M, TONE), METHOD = 'fsk', specifies the
    tone spacing in TONE.
  
    MODMAP(METHOD, M, TONE), METHOD = 'fsk', plots the FSK constellation.
    
    The mapped Y can be directly input to AMOD with METHOD = 'fm' for 
    signal modulation.
fsk_help_end

msk_help_begin
 MODMAP Map for minimum shift keying (MSK) modulation.
    Y = MODMAP(X, Fd, Fs, METHOD), METHOD = 'msk', maps a sample frequency
    Fd digital input signal X to a sample frequency Fs output signal Y
    using MSK method. Fs/Fd must be a positive integer. The number of rows
    of Y is Fs/Fd times the number of rows of X, and each column of X is
    processed independently. MSK is a special case of FSK with M = 2 and
    TONE = Fd/2. The elements in X must be binary numbers.
  
    Y = MODMAP(METHOD, Fd), METHOD = 'msk', plots the MSK constellation.
msk_help_end

%   Copyright 1996-2004 The MathWorks, Inc.
$Revision: 1.1.6.2 $
