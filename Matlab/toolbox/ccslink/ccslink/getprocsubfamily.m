function [procsubfamily,feature] = getprocsubfamily(cc)
% [PROC,FEATURES] = GETPROCSUBFAMILY(CC) (Private) 
%  - returns the processor's subfamily and the "Link for CCS" 
%  features supported by that processor.
%  Note: CC can be a vector of CCSDSP objects.
%
% Example:
% 	>> [proc,features] = getprocsubfamily(cc)
% 	proc =
% 	C6x
% 	features = 
%            debug: 1
%             rtdx: 1
%        datamanip: 1
% 	  functioncall: 1
%      coemulation: 0

%   Copyright 2003-2004 The MathWorks, Inc.
%   $Revision: 1.2.6.1 $  $Date: 2004/04/01 16:03:23 $
     
procsubfamily = [];
feature = struct( ...
    'debug',        [], ...
    'rtdx',         [], ...
    'datamanip',    [], ...
    'functioncall', [], ...
    'coemulation',  []  ...
    );

for i=1:length(cc)

if cc(i).family==320
    if cc(i).subfamily>=96 && cc(i).subfamily<112
        procsubfamily{end+1} = 'C6x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         1, ...
                            'datamanip',    1, ...
                            'functioncall', 1, ...
                            'coemulation',  0  ...
                        );
    elseif cc(i).subfamily==85
        procsubfamily{end+1} = 'C55x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         1, ...
                            'datamanip',    1, ...
                            'functioncall', 0, ...
                            'coemulation',  0  ...
                        );
    elseif cc(i).subfamily==84
        procsubfamily{end+1} = 'C54x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         1, ...
                            'datamanip',    1, ...
                            'functioncall', 1, ...
                            'coemulation',  0  ...
                        );
    elseif cc(i).subfamily==40
        procsubfamily{end+1} = 'C28x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         1, ...
                            'datamanip',    1, ...
                            'functioncall', 1, ...
                            'coemulation',  0  ...
                        );
    elseif cc(i).subfamily==36
        procsubfamily{end+1} = 'C24x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         0, ...
                            'datamanip',    0, ...
                            'functioncall', 0, ...
                            'coemulation',  0  ...
                        );
    else
        error('Processor not supported.');
    end
elseif cc(i).family==470
    if cc(i).subfamily==1
        procsubfamily{end+1} = 'R1x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         0, ...
                            'datamanip',    1, ...
                            'functioncall', 0, ...
                            'coemulation',  0  ...
                        );
    elseif cc(i).subfamily==2
        procsubfamily{end+1} = 'R2x';
        feature(i) = struct( ...
                            'debug',        1, ...
                            'rtdx',         0, ...
                            'datamanip',    1, ...
                            'functioncall', 0, ...
                            'coemulation',  0  ...
                        );
    else
        error('Processor not supported.');
    end
else
    error('Processor not supported.');
end

end

if i==1,
    procsubfamily = procsubfamily{1};
end

% [EOF] getprocsubfamily.m