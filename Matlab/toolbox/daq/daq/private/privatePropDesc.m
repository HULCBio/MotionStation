function [errflag, out] = privatePropDesc(propname,classtype)
%PRIVATEPROPDESC Display property information for data acquisition objects.
%
%    PRIVATEPROPDESC(PROPERTY_NAME,CLASS_TYPE) displays property information for
%    data acquisition object property, PROPERTY_NAME of a given CLASS_TYPE.
%    PROPERTY_NAME and CLASS_TYPE must be a strings.
%
%    Example:
%      privatepropdesc('SampleRate','analoginput')
%
%    See also DAQHELP, PROPINFO.
%

%    PRIVATEPROPDESC is a helper function for DAQHELP.

%    MP 8-20-98
%    Copyright 1998-2004 The MathWorks, Inc.
%    $Revision: 1.19.2.10 $  $Date: 2004/04/16 22:01:46 $

% Initialize variables.
errflag = 0;
out=[];

% Check if the property is valid for the specified object type.
if ~isempty(classtype)
    errflag = localValidProp(propname, classtype);
    if errflag
        return;
    end
end

% Create display or error.
[errflag, out] = localDisplay(lower(propname));
if errflag
    return;
end

%******************************************************************
% Determine if the property is valid.
function errflag = localValidProp(propname, classtype)

% Initialize variables.
errflag = 0;

propstruct.bufferingconfig = {'analoginput', 'analogoutput'};
propstruct.bufferingmode = {'analoginput', 'analogoutput'};
propstruct.channel = {'analoginput', 'analogoutput'};
propstruct.channelname = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.channelskew = {'analoginput'};
propstruct.channelskewmode = {'analoginput'};
propstruct.clocksource = {'analoginput', 'analogoutput'};
propstruct.cola = {'analogoutput', 'aochannel'};
propstruct.coupling = {'analoginput', 'aichannel'};
propstruct.datamissedaction = {'analoginput'};
propstruct.datamissedfcn = {'analoginput'};
propstruct.defaultchannelvalue = {'analogoutput', 'aochannel'};
propstruct.direction = {'digitalio', 'dioline'};
propstruct.eventlog = {'analoginput', 'analogoutput'};
propstruct.externalsampleclocksource = {'analoginput'};
propstruct.externalscanclocksource = {'analoginput'};
propstruct.groundingmode = {'analoginput', 'aichannel'};
propstruct.hwchannel = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.hwdigitaltriggersource = {'analoginput'};
propsturct.hwline = {'digitalio', 'dioline'};
propstruct.index = {'analoginput', 'analogoutput', 'aichannel', 'aochannel', 'digitalio', 'dioline'};
propstruct.initialtriggertime = {'analoginput', 'analogoutput'};
propstruct.inputmode = {'analoginput', 'aichannel'};
propstruct.inputsource = {'analoginput', 'aichannel'};
propstruct.inputoverrangefcn = {'analoginput'};
propstruct.inputrange = {'analoginput', 'aichannel'};
propstruct.inputtype = {'analoginput'};
propstruct.line = {'digitalio'};
propstruct.linename = {'digitalio', 'dioline'};
propstruct.logfilename = {'analoginput'};
propstruct.logging = {'analoginput'};
propstruct.loggingmode = {'analoginput'};
propstruct.logtodiskmode = {'analoginput'};
propstruct.manualtriggerhwon = {'analoginput', 'analogoutput'};
propstruct.maxsamplesqueued = {'analogoutput'};
propstruct.name = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.nativeoffset = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.nativescaling = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.outofdatamode = {'analogoutput'};
propstruct.outputrange = {'analogoutput', 'aochannel'};
propstruct.parent = {'analoginput', 'analogoutput', 'aichannel', 'aochannel', 'digitalio', 'dioline'};
propstruct.port = {'digitalio', 'dioline'};
propstruct.ramprate = {'analogoutput', 'aochannel'};
propstruct.repeatoutput = {'analogoutput'};
propstruct.running = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.runtimeerrorfcn = {'analoginput', 'analogoutput'};
propstruct.samplerate = {'analoginput', 'analogoutput'};
propstruct.samplesacquired = {'analoginput'};
propstruct.samplesacquiredaction = {'analoginput'};
propstruct.samplesacquiredactioncount = {'analoginput'};
propstruct.samplesacquiredfcn = {'analoginput'};
propstruct.samplesacquiredfcncount = {'analoginput'};
propstruct.samplesavailable = {'analoginput', 'analogoutput'};
propstruct.samplesoutput = {'analogoutput'};
propstruct.samplesoutputfcn = {'analogoutput'};
propstruct.samplesoutputfcncount = {'analogoutput'};
propstruct.samplespertrigger = {'analoginput'};
propstruct.sending = {'analogoutput'};
propstruct.sensorrange = {'analoginput', 'aichannel'};
propstruct.sourcemode = {'analogoutput', 'aochannel'};
propstruct.sourceoutput = {'analogoutput', 'aochannel'};
propstruct.span = {'analoginput'};
propstruct.standardsamplerates = {'analoginput', 'analogoutput'};
propstruct.startaction = {'analoginput', 'analogoutput'};
propstruct.startfcn = {'analoginput', 'analogoutput'};
propstruct.stopaction = {'analoginput', 'analogoutput'};
propstruct.stopfcn = {'analoginput', 'analogoutput'};
propstruct.sum = {'analogoutput', 'aochannel'};
propstruct.tag = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.timeout = {'analoginput', 'analogoutput'};
propstruct.timeraction = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.timerfcn = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.timerperiod = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.triggeraction = {'analoginput', 'analogoutput'};
propstruct.triggerfcn = {'analoginput', 'analogoutput'};
propstruct.triggerchannel = {'analoginput'};
propstruct.triggercondition = {'analoginput'};
propstruct.triggerconditionvalue = {'analoginput'};
propstruct.triggerdelay = {'analoginput'};
propstruct.triggerdelayunits = {'analoginput'};
propstruct.triggerrepeat = {'analoginput'};
propstruct.triggersexecuted = {'analoginput', 'analogoutput'};
propstruct.triggertype = {'analoginput', 'analogoutput'};
propstruct.type = {'analoginput', 'analogoutput', 'digitalio', 'aichannel', 'aochannel', 'dioline'};
propstruct.units = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.unitsrange = {'analoginput', 'analogoutput', 'aichannel', 'aochannel'};
propstruct.userdata = {'analoginput', 'analogoutput', 'digitalio'};
propstruct.bitspersample = {'analoginput', 'analogoutput'};
propstruct.driveaisensetoground = {'analoginput'};
propstruct.nummuxboards = {'analoginput'};
propstruct.transfermode = {'analoginput', 'analogoutput'};
propstruct.bidirectionalbit = {'digitalio'};
propstruct.portaddress = {'digitalio'};
propstruct.stoptriggertype = {'analoginput'};
propstruct.stoptriggerchannel = {'analoginput'};
propstruct.stoptriggercondition = {'analoginput'};
propstruct.stoptriggerconditionvalue = {'analoginput'};
propstruct.stoptriggerdelay = {'analoginput'};
propstruct.stoptriggerdelayunits = {'analoginput'};


% Determine if the correct class was defined.
validtype = getfield(propstruct, lower(propname));
if ~strcmp(classtype, validtype)
    errflag = 1;
    lasterr(['Invalid property: ''' classtype '.' propname '.''']);
    return;
end


%******************************************************************
% Create the display for each property.
function [errflag, out] = localDisplay(propname)

errflag = 0;

switch propname
    case 'bufferingconfig'
        out = sprintf(['    BUFFERINGCONFIG  double\n\n',...
            '    BufferingConfig is a two-element vector that specifies the per-channel\n',...
            '    allocated memory. The first element of the vector specifies the block size,\n',...
            '    while the second element of the vector specifies the number of blocks. The\n',...
            '    total allocated memory (in bytes) is given by (block size) x (number of\n',...
            '    blocks) x (number of channels) x (native data type). The native data type\n',...
            '    can be determined with DAQHWINFO\n\n',...
            '    Memory can be allocated automatically or manually. If BufferingMode is Auto,\n',...
            '    the BufferingConfig values are automatically set by the engine. If\n',...
            '    BufferingMode is Manual, then you must manually set the BufferingConfig\n',...
            '    values. If you change the BufferingConfig values, BufferingMode is\n',...
            '    automatically set to Manual.\n\n',...
            '    When memory is automatically allocated by the engine, the block-size value\n',...
            '    depends on the sampling rate and is typically a binary number. The number\n',...
            '    of blocks is initially set to a value of 30 but can dynamically increase to\n',...
            '    accommodate the memory requirements. In most cases, the number of blocks\n',...
            '    used results in a per-channel memory that is somewhat greater than the\n',...
            '    SamplesPerTrigger value. When you manually allocate memory, the number of\n',...
            '    blocks is not dynamic and care must be taken to ensure there is sufficient\n',...
            '    memory to store the acquired data. \n\n',...
            '    If the number of samples requested exceeds the available memory, an\n',...
            '    out-of-memory error is returned.\n\n',...
            '    The value of BufferingConfig cannot be modified while the object is running.\n\n',...
            '    See also BufferingMode, SampleRate, SamplesPerTrigger, DAQHWINFO, DAQMEM.\n']);
    case 'bufferingmode'
        out = sprintf(['\n    BUFFERINGMODE  [ {Auto} | Manual ]\n\n',...
            '    BufferingMode specifies how memory is allocated.\n\n',...
            '    BufferingMode can be set to Auto or Manual. If BufferingMode is set to Auto,\n',...
            '    the data acquisition engine automatically allocates the required memory. If\n',...
            '    BufferingMode is set to Manual, you must manually allocate memory with the\n',...
            '    BufferingConfig property.\n\n',...
            '    If BufferingMode is set to Auto and the SampleRate value is changed, then the\n',...
            '    BufferingConfig values may be recalculated by the engine. Specifically, the\n',...
            '    block size can be increased (decreased) if SampleRate is increased (decreased).\n',...
            '    If BufferingMode is set to Auto and you change the BufferingConfig values,\n',...
            '    then BufferingMode is automatically set to Manual.\n\n',...
            '    For most data acquisition applications, you should set BufferingMode to Auto\n',...
            '    and have memory allocated by the engine since this minimizes the chance of an\n',...
            '    out-of-memory condition.\n\n',...
            '    The value of BufferingMode cannot be modified while the object is running.\n\n',...
            '    See also BufferingConfig, DAQMEM.\n']);
    case 'channel'
        out = sprintf(['\n    CHANNEL  vector of channels\n\n',...
            '    Channel is a vector of all the hardware channels contained by an analog input\n',...
            '    (AI) or analog output (AO) object. Since a newly created AI or AO object does\n',...
            '    not contain hardware channels, Channel is initially an empty vector. The size\n',...
            '    of Channel increases as channels are added with the addchannel function, and\n',...
            '    decreases as channels are removed using the delete function.\n\n',...
            '    Channel is used to reference one or more individual channels. To reference a\n',...
            '    channel, you must know its MATLAB index. The MATLAB index is given by the Index\n',...
            '    property. For example, you must use Channel with the appropriate indices when \n',...
            '    configuring channel property values.\n\n',...
            '    For scanning hardware, the scan order follows the MATLAB index. Therefore,\n',...
            '    the hardware channel associated with index 1 is sampled first, the hardware\n',...
            '    channel associated with index 2 is sampled second, and so on. To change the\n',...
            '    scan order, you can specify a permutation of the hardware IDs with Channel.\n\n',...
            '    The value of Channel cannot be modified while the object is running.\n\n',...
            '    See also HwChannel, Index, ADDCHANNEL, DAQDEVICE/DELETE.\n']);
    case 'channelname'
        out = sprintf(['\n    CHANNELNAME  string\n\n',...
            '    ChannelName specifies a descriptive name for an analog input or analog output\n',...
            '    channel. Channel names are not required to be unique.\n\n',...
            '    If a channel name is defined, then you can reference that channel by its name.\n',...
            '    If not, then you must reference the channel by its index. You can use the\n',...
            '    MAKENAMES function to define descriptive names. This function is particularly\n',...
            '    useful when defining names for many channels.\n\n',...
            '    The value of ChannelName cannot be modified while the object is running.\n\n',...
            '    See also ADDCHANNEL, MAKENAMES.\n']);
    case 'channelskew'
        out = sprintf(['\n    CHANNELSKEW  double\n\n',...
            '    ChannelSkew specifies the time, in seconds, between consecutive scanned\n',...
            '    hardware channels.\n\n',...
            '    ChannelSkew applies only to scanning hardware and not to simultaneous\n',...
            '    sample and hold (SS/H) hardware.\n\n',...
            '    For scanning hardware, ChannelSkew is configurable only when\n',...
            '    ChannelSkewMode is set to Manual.  If ChannelSkewMode is set to Minimum or\n',...
            '    Equisample, then ChannelSkew is automatically set to the appropriate\n',...
            '    device-specific read-only value. For SS/H hardware, the only valid\n',...
            '    ChannelSkew value is 0. SS/H hardware includes Agilent Technologies devices and\n',...
            '    sound cards.\n\n',...
            '    The ChannelSkew value is specified in seconds.\n\n',...
            '    The value of ChannelSkew cannot be modified while the object is running.\n\n',...
            '    See also ChannelSkewMode.\n']);
    case 'channelskewmode'
        out = sprintf(['\n    CHANNELSKEWMODE  device specific\n\n',...
            '    ChannelSkewMode specifies how the channel skew is determined.\n\n',...
            '    For simultaneous sample and hold (SS/H) hardware, ChannelSkewMode is None.\n',...
            '    For scanning hardware, ChannelSkewMode can be set to Minimum, Equisample,\n',...
            '    or Manual. The channel skew value is given by the ChannelSkew property.\n\n',...
            '    If ChannelSkewMode is set to Minimum, then the minimum channel skew\n',...
            '    supported by the hardware is used. If ChannelSkewMode is set to Equisample,\n',...
            '    the channel skew is given by 1/(sampling rate * number of channels). If\n',...
            '    ChannelSkewMode is set to Manual, then you must specify the channel skew with\n',...
            '    the ChannelSkew property.\n\n',...
            '    The value of ChannelSkewMode cannot be modified while the object is running.\n\n',...
            '    See also ChannelSkew, SampleRate.\n']);
    case 'clocksource'
        out = sprintf(['\n    CLOCKSOURCE  device specific\n\n',...
            '    ClockSource specifies the clock used to govern the acquisition or output rate.\n\n',...
            '    For all supported hardware, ClockSource can be set to Internal which\n',...
            '    specifies that the acquisition rate is governed by the internal hardware clock.\n\n',...
            '    National Instruments hardware can take the following additional ClockSource\n',...
            '    values: ExternalSampleCtrl, ExternalScanCtrl and ExternalSampleAndScanCtrl\n',...
            '    for analog input objects and External for analog output objects.\n\n',...
            '    Agilent Technologies hardware can take the following additional ClockSource values:\n',...
            '    External, InvertedExternal, VXIBus/3, VXIBusSample for analog input and analog\n',...
            '    analog output objects.\n\n',...
            '    Measurement Computing and Advantech hardware can take the following additional\n', ...
            '    ClockSource values for analog input objects: External, Software.  For analog\n', ...
            '    output objects, these boards can take Software and in most cases, Software is the \n', ...
            '    only legal ClockSource value for output.\n\n', ...
            '    The value of ClockSource cannot be modified while the object is running.\n']);
    case 'cola'
        out = sprintf(['\n    COLA  [ {Off} | On ]\n\n',...
            '    COLA enables or disables the source constant-level output.\n\n',...
            '    For the Option 1D4 single-channel source, the "source cola" output is shared\n',...
            '    with the "source sum" input. Only one of these two may be enabled at any one\n',...
            '    time. For prototype Option 1D4 sources only, one of the two must be enabled at\n',...
            '    all times, and the default is for the constant-level output to be enabled.\n']);
    case 'coupling'
        out = sprintf(['\n    COUPLING  [ {DC} | AC ]\n\n',...
            '    Coupling sets the input coupling mode.\n\n',...
            '    Coupling can be set to DC or AC.  If Coupling is set to DC, the input is connected\n',...
            '    directly to the amplifier. If Coupling is set to AC, a series capacitor is inserted\n',...
            '    between the input connector and the amplifier. For source channels, Coupling\n',...
            '    is generally not used since it is not usually possible to AC-couple the output of\n',...
            '    a source.\n']);
    case 'datamissedaction'
        out = sprintf(['\n    DATAMISSEDACTION  string\n\n',...
            '    DataMissedAction specifies the M-file to execute when data is missed.\n\n',...
            '    A data-missed event is generated immediately after acquired data is missed.\n',...
            '    This event executes the M-file specified for DataMissedAction.\n\n',...
            '    Note: The DataMissedAction property has been renamed to DataMissedFcn.  See the\n',...
            '    Release Notes for more information.\n\n',...
            '    See also EventLog, DAQACTION.\n']);
    case 'datamissedfcn'
        out = sprintf(['\n    DATAMISSEDFCN  string, function_handle, or cell array\n\n',...
            '    DataMissedFcn specifies the M-file to execute when data is missed.\n\n',...
            '    A data-missed event is generated immediately after acquired data is missed.\n',...
            '    This event executes the M-file specified for DataMissedFcn.\n\n',...
            '    The default value for DataMissedFcn is DAQCALLBACK which displays the event\n',...
            '    type, the time the event occurred, and the device object name. In most cases,\n',...
            '    data is missed because the engine cannot keep up with the rate of acquisition.\n\n',...
            '    Data-missed event information is stored in the EventLog property.\n\n',...
            '    See also EventLog, DAQCALLBACK.\n']);
    case 'defaultchannelvalue'
        out = sprintf(['\n    DEFAULTCHANNELVALUE  double\n\n',...
            '    DefaultChannelValue specifies the value to write to the analog output (AO)\n',...
            '    subsystem when data is finished being output from the engine.\n\n',...
            '    DefaultChannelValue is used only when OutOfDataMode is set to DefaultValue\n',...
            '    This property guarantees that a known value is held by the AO subsystem if \n',...
            '    if a runtime error occurs.\n\n',...
            '    The value of DefaultChannelValue cannot be modified while the object is running.\n\n',...
            '    See also OutOfDataMode.\n']);
    case 'direction'
        out = sprintf(['\n    DIRECTION  [ {In} | Out ]\n\n',...
            '    Direction specifies whether a line is used for input or output.\n\n',...
            '    When adding hardware lines to a digital I/O object with ADDLINE, you must\n',...
            '    configure the line direction. The line direction can be In or Out and is\n',...
            '    automatically stored in Direction. If a line direction is In, you can read a\n',...
            '    a value from that line. If a line direction is Out, you can read a value\n',...
            '    and write a value from that line.\n\n',...
            '    The value of Direction cannot be modified while the object is running.\n\n',...
            '    See also ADDLINE.\n']);
    case 'eventlog'
        out = sprintf(['\n    EVENTLOG  structure array  (read only)\n\n',...
            '    Eventlog is a structure array that stores information related to specific events.\n',...
            '    Event information is stored in the Type and Data fields of EventLog.\n\n',...
            '    Type stores the event type. For both analog input objects and analog output\n',...
            '    objects, the logged event types include start, stop, trigger, and runtime error\n',...
            '    events. Additionally, input overrange and data missed events are stored for\n',...
            '    analog input objects. Timer events, samples-available events (AI), and\n',...
            '    samples-output events (AO) are not logged.\n\n',...
            '    Data stores event-specific information associated with the event type in several\n',...
            '    fields. For all stored events, Data contains the RelSample field which returns\n',...
            '    the number of samples processed by the data acquisition engine relative to the\n',...
            '    first trigger event at the time the event occurred. For the start, stop, runtime\n',...
            '    error, and trigger events, Data contains the AbsTime field which returns the\n',...
            '    absolute time (as a clock vector) the event occurred. Other event-specific fields\n',...
            '    are included in Data. \n\n',...
            '    EventLog can store a maximum of 1000 events. If this value is exceeded, then\n',...
            '    the most recent 1000 events are stored.\n\n',...
            '    You can use the SHOWDAQEVENTS function to easily display event information.\n\n',...
            '    See also SHOWDAQEVENTS.\n']);
    case 'externalsampleclocksource'
        out = sprintf(['\n    EXTERNALSAMPLECLOCKSOURCE  [ PFI0 | PFI1 | {PFI2} | PFI3 | PFI4 | PFI5 | PFI6 | PFI7 | PFI8 | PFI9 | RTSI0 | RTSI1 | RTSI2 | RTSI3 | RTSI4 | RTSI5 | RTSI6 ] \n\n',...
            '    ExternalSampleClockSource specifies which signal is used to clock conversions across channels.\n',...
            '    See also ExternalScanClockSource.\n']);
    case 'externalscanclocksource'
        out = sprintf(['\n    EXTERNALSAMPLECLOCKSOURCE  [ PFI0 | PFI1 | PFI2 | PFI3 | PFI4 | PFI5 | PFI6 | {PFI7} | PFI8 | PFI9 | RTSI0 | RTSI1 | RTSI2 | RTSI3 | RTSI4 | RTSI5 | RTSI6 ] \n\n',...
            '    ExternalScanClockSource specifies which signal is used to start a series of conversions across the channels.\n',...
            '    See also ExternalSampleClockSource.\n']);
    case 'groundingmode'
        out = sprintf(['\n    GROUNDINGMODE  [ {Grounded} | Floating ] \n\n',...
            '    GroundingMode sets the input channel grounding mode.\n\n',...
            '    GroundingMode can be set to Grounded or Floating.  If GroundingMode is set to\n',...
            '    Grounded, the low side of the channel is grounded. If GroundingMode is set to\n',...
            '    Floating, the low side of the channel floats making the input a differential\n',...
            '    input. GroundingMode can be set only for input channels. Source channels are\n',...
            '    never floating, and are always grounded.\n\n',...
            '    If a smart break-out box is attached to the channel, then the grounding mode\n',...
            '    is automatically set to the appropriate value. If a dumb break-out box (or no\n',...
            '    break-out box) is attached to the channel, the grounding mode is given by the\n',...
            '    GroundingMode value. In this case, no hardware settings are changed and no\n',...
            '    errors are generated.\n']);
    case 'hwchannel'
        out = sprintf(['\n    HWCHANNEL  double\n\n',...
            '    All channels contained by a device object have a hardware ID and an associated\n',...
            '    MATLAB index. The hardware ID is given by HwChannel and the MATLAB\n',...
            '    index is given by the Index property. The HwChannel value is defined when\n',...
            '    hardware channels are added to a device object with the ADDCHANNEL function.\n\n',...
            '    The beginning channel ID value depends on the hardware device. For many vendors''\n',...
            '    hardware, channel IDs are zero-based (begin at zero). For Agilent Technologies \n',...
            '    hardware and sound cards, channel IDs are one-based (begin at one).\n\n',...
            '    For scanning hardware, the scan order follows the MATLAB index. Therefore,\n',...
            '    the hardware channel associated with index 1 is sampled first, the hardware\n',...
            '    channel associated with index 2 is sampled second, and so on.\n\n',...
            '    The value of HwChannel cannot be modified while the object is running.\n\n',...
            '    See also Channel, ChannelName, Index.\n']);
    case 'hwdigitaltriggersource'
        out = sprintf(['\n    HWDIGITALTRIGGERSOURCE  [ {PFI0} | PFI1 | PFI2 | PFI3 | PFI4 | PFI5 | PFI6 | PFI7 | PFI8 | PFI9 | RTSI0 | RTSI1 | RTSI2 | RTSI3 | RTSI4 | RTSI5 | RTSI6 ] \n\n',...
            '    HwDigitalTriggerSource specifies which signal is used to initiate data acquisition.\n',...
            '    See also TriggerType.\n']);
    case 'hwline'
        out = sprintf(['\n    HWLINE double\n\n',...
            '    All lines contained by a digital I/O object have a hardware ID and an associated\n',...
            '    MATLAB index. The hardware ID is given by HwLine and the MATLAB index\n',...
            '    is given by the Index property. The HwLine value is defined when hardware\n',...
            '    lines are added to a digital I/O object with the ADDLINE function.\n\n',...
            '    The beginning line ID value depends on the hardware device.\n',...
            '    The value of HwLine cannot be modified while the object is running.\n\n',...
            '    See also Line, Index, ADDLINE.\n']);
    case 'index'
        out = sprintf(['\n    INDEX  double  (read only)\n\n',...
            '    Index indicates the MATLAB index of a hardware channel or line.\n\n',...
            '    Every hardware channel (line) contained by a device object has an associated\n',...
            '    MATLAB index that is used to reference that channel (line). For example, to\n',...
            '    configure property values for an individual channel, you must reference the\n',...
            '    channel through the Channel property using the appropriate Index value.\n',...
            '    Likewise, to configure property values for an individual line, you must\n',...
            '    reference the line through the Line property using the appropriate Index\n',...
            '    value.\n\n',...
            '    For channels (lines), index assignments can be made automatically with the\n',...
            '    ADDCHANNEL (ADDLINE) function. Channel (line) indices always begin at 1 and\n',...
            '    increase monotonically up to the number of channels (lines) contained by the\n',...
            '    device object. For channels, index assignments can also be made manually with\n',...
            '    the ADDCHANNEL function.\n\n',...
            '    For scanning hardware, the scan order follows the MATLAB index. Therefore,\n',...
            '    the hardware channel associated with index 1 is sampled first, the hardware\n',...
            '    channel associated with index 2 is sampled second, and so on. To change the\n',...
            '    scan order, you can assign the hardware IDs to different indices using the\n',...
            '    HwChannel or Channel property.\n\n',...
            '    Index provides a convenient way to programatically access channel and line\n',...
            '    indices.\n\n',...
            '    See also Channel, HwChannel, HwLine, Line, ADDCHANNEL, ADDLINE.\n']);
    case 'initialtriggertime'
        out = sprintf(['\n    INITIALTRIGGERTIME double (read only)\n\n',...
            '    InitialTriggerTime indicates the absolute time of the first trigger.\n\n',...
            '    For all trigger types, InitialTriggerTime records the time when Logging or\n',...
            '    Sending is set to On. The absolute time is recorded as a clock vector.\n\n',...
            '    The InitialTriggerTime value can be returned with the GETDATA function,\n',...
            '    and is also recorded in the Data.AbsTime field of the EventLog property.\n\n',...
            '    See also EventLog, Logging, Sending, CLOCK, GETDATA.\n']);
    case 'inputmode'
        out = sprintf(['\n    INPUTMODE [ {Voltage} | ICP | Charge | Mic | 200VoltMic ]\n\n',...
            '    InputMode sets the channel input mode.\n\n',...
            '    InputMode can be set to Voltage, ICP, Charge, Mic,or 200VoltMic. InputMode\n',...
            '    can be set to Charge only if a charge break-out box is attached to the specified\n',...
            '    channel. InputMode can be set to Mic or 200VoltMic only if a microphone\n',...
            '    break-out box is attached to the specified channel. For each input mode, the\n',...
            '    full-scale setting is configured with the InputRange property.\n\n',...
            '    There is no ICP current source inside the Vibrato 51.2 kHz 4-channel SCA.\n',...
            '    Instead, a break-out box containing an ICP current source can be attached to\n',...
            '    the input. When this ICP breakout box is attached, setting InputMode to ICP\n',...
            '    enables the ICP current source in the break-out box. If there is no ICP breakout\n',...
            '    box attached to the input, then setting InputMode to ICP does nothing.\n\n',...
            '    Note: If a channel is not connected to a smart break-out box, then changing\n',...
            '    its input mode causes the input mode for all channels within that SCA to\n',...
            '    change. If there is a smart break-out box present, then the input mode can be\n',...
            '    set on a per-channel basis.\n\n',...
            '    See also InputRange.\n']);
    case 'inputoverrangeaction'
        out = sprintf(['\n    INPUTOVERRANGEACTION  string\n\n',...
            '    InputOverRangeAction specifies the M-file to be executed when data sampled\n',...
            '    by a channel group member exceeds its valid range. The valid range for a\n',...
            '    channel is given by the InputRange property.\n\n',...
            '    Over-range checking is only enabled for all channel group members when a\n',...
            '    value is specified for InputOverRangeAction. If a value is not specified, \n',...
            '    then over-range detection does not occur.\n\n',...
            '    When an over-range condition is detected, a typical action to take is to\n',...
            '    determine which channel(s) went over-range. You can determine which channels\n',...
            '    experienced an over-range condition by examining the Data.Channel field of \n',...
            '    EventLog.\n\n',...
            '    Note: The InputOverRangeAction property has been renamed to InputOverRangeFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, InputRange.\n']);
    case 'inputoverrangefcn'
        out = sprintf(['\n    INPUTOVERRANGEFCN  string, function_handle, or cell array\n\n',...
            '    InputOverRangeFcn specifies the M-file to be executed when data sampled\n',...
            '    by a channel group member exceeds its valid range. The valid range for a\n',...
            '    channel is given by the InputRange property.\n\n',...
            '    Over-range checking is only enabled for all channel group members when a\n',...
            '    value is specified for InputOverRangeFcn. If a value is not specified, \n',...
            '    then over-range detection does not occur.\n\n',...
            '    When an over-range condition is detected, a typical callback to take is to\n',...
            '    determine which channel(s) went over-range. You can determine which channels\n',...
            '    experienced an over-range condition by examining the Data.Channel field of \n',...
            '    EventLog.\n\n',...
            '    See also EventLog, InputRange.\n']);
    case 'inputrange'
        out = sprintf(['\n    INPUTRANGE  double\n\n',...
            '    InputRange specifies the range of the analog input subsystem\n\n',...
            '    InputRange is a two-element vector that specifies the range of voltages that can\n',...
            '    be accepted by the analog input (AI) subsystem. You should configure\n',...
            '    InputRange so that the maximum dynamic range of your hardware is utilized.\n\n',...
            '    If an input signal exceeds the InputRange value, then an overrange condition\n',...
            '    occurs. Overrange detection is enabled only if the analog input object is\n',...
            '    running and a value is specified for the InputOverRangeFcn property. For\n',...
            '    many devices, the input range is expressed in terms of the gain and polarity.\n\n',...
            '    AI subsystems have a finite number of InputRange values that can be set. If an\n',...
            '    input range is specified but does not match a valid range, then the next highest\n',...
            '    supported range is automatically selected by the engine. If InputRange exceeds\n',...
            '    the range of valid values, then an error is returned.\n\n',...
            '    Since InputRange can be set to a value that differs from the one specified, you\n',...
            '    should return the actual input range for each channel using the GET function\n',...
            '    or the device object display summary. Alternatively, you can use the SETVERIFY\n',...
            '    function which sets the InputRange value and then returns the actual value\n',...
            '    that is set. To find out the maximum input range supported by your board, use\n',...
            '    the PROPINFO function.\n\n',...
            '    InputRange should be used in conjunction with the SensorRange property.\n',...
            '    These two properties should be configured such that the maximum precision is\n',...
            '    obtained and the full dynamic range of the sensor signal is covered.\n\n',...
            '    The value of InputRange cannot be modified while the object is running.\n\n',...
            '    See also InputOverRangeFcn, SensorRange, PROPINFO, SETVERIFY.\n']);
    case 'inputsource'
        out = sprintf(['\n    INPUTSOURCE  [ {SwitchBox} | CALIN | Ground | BOBCALIN ] \n\n',...
            '    InputSource sets the input to the A/D converter.\n\n',...
            '    For input channels, InputSource can be set to Switchbox, CALIN, Ground, and\n',...
            '    BOBCALIN. The BOBCALIN value is valid only when a smart break-out box (BoB),\n',...
            '    such as a charge break-out box or microphone break-out box, is connected to the\n',...
            '    input. When a smart break-out box is attached to an E1432 or E1433 module,\n',...
            '    additional input modes are available. These additonal input modes are\n',...
            '    available through the InputMode property.\n\n',...
            '    See also InputMode.\n']);
    case 'inputtype'
        out = sprintf(['\n    INPUTTYPE  device specific\n\n',...
            '    InputType specifies the analog input hardware channel configuration. \n\n',...
            '    For sound cards, InputType can only be AC-Coupled. For National \n',...
            '    Instruments devices, InputType can be SingleEnded, Differential, or\n',...
            '    NonReferencedSingleEnded.  For Agilent Technologies devices, InputType can only\n',...
            '    be Differential.  For Measurement Computing and Advantech boards, InputType\n',...
            '    must be set from the vendor configuration tool, and is read-only from\n',...
            '    within the Data Acquisition Toolbox.\n\n',...
            '    If channels have been added to a National Instruments analog input object and\n',...
            '    InputType is changed, then the channels are automatically deleted if the\n',...
            '    hardware reduces the number of available channels.\n\n',...
            '    The value of InputType cannot be modified while the object is running.\n']);
    case 'line'
        out = sprintf(['\n    LINE  vector of lines\n\n',...
            '    Line is a vector of all the hardware lines contained by a digital I/O (DIO) \n',...
            '    object. Since a newly created DIO object does not contain hardware lines, Line is\n',...
            '    initially an empty vector. The size of Line increases as lines are added with the\n',...
            '    ADDLINE function, and decreases as lines are removed with the DELETE function.\n\n',...
            '    Line is used to reference one or more individual lines. To reference a line, you\n',...
            '    must know its MATLAB index. The MATLAB index is given by the Index property.\n',...
            '    For example, you must use Line with the appropriate indices when configuring\n',...
            '    line property values.\n\n',...
            '    The value of Line cannot be modified while the object is running.\n\n',...
            '    See also Index, ADDLINE, DAQDEVICE/DELETE.\n']);
    case 'linename'
        out = sprintf(['\n    LINENAME  string\n\n',...
            '    LineName specifies a descriptive name for a hardware line. If a line name is\n',...
            '    defined, then you can reference that line by its name. If a line name is not\n',...
            '    defined, then the line must be referenced by its index. Line names are not\n',...
            '    required to be unique.\n\n',...
            '    You can also define descriptive line names when lines are added to a digital\n',...
            '    I/O object with the ADDLINE function.\n\n',...
            '    The value of LineName cannot be modified while the object is running.\n\n',...
            '    See also Index, ADDLINE.\n']);
    case 'logfilename'
        out = sprintf(['\n    LOGFILENAME  string\n\n',...
            '    LogFileName specifies the name of the disk file to which data and events are\n',...
            '    written.\n\n',...
            '    You can log data, events, and hardware information to a disk file by specifying\n',...
            '    a name for LogFileName and setting the LoggingMode property to Disk or\n',...
            '    Disk&Memory.\n\n',...
            '    You may specify any value for LogFileName as long as it conforms to the\n',...
            '    MATLAB naming conventions: the name cannot start with a number and cannot\n',...
            '    contain spaces. If no extension is specified as part of LogFileName,then\n',...
            '    .daq is used. The default value for LogFileName is logfile.daq.\n\n',...
            '    You can choose whether an output file is overwritten or if multiple log files \n',...
            '    are created with the LogToDiskMode property. Setting LogToDiskMode to\n',...
            '    Overwrite causes the output file to be overwritten. Setting LogToDiskMode to\n',...
            '    Index causes new data files to be created, each with an indexed name based on\n',...
            '    the value of LogFileName.\n\n',...
            '    The value of LogFileName cannot be modified while the object is logging to disk.\n\n',...
            '    See also EventLog, Logging, LogToDiskMode.\n']);
    case 'logging'
        out = sprintf(['\n    LOGGING  [ {Off} | On ]  (read only)\n\n',...
            '    Logging indicates whether data is logged or not. \n\n',...
            '    Along with the Running property, Logging reflects the state of an analog input\n',...
            '    object. Logging can be On or Off.\n\n',...
            '    Logging is automatically set to On when a trigger occurs. When Logging is On,\n',...
            '    acquired data is being stored in memory or to a disk file.\n\n',...
            '    Logging is automatically set to Off when the requested samples are acquired,\n',...
            '    an error occurs, or a STOP command is issued. When Logging is Off, you can\n',...
            '    still preview data with the PEEKDATA function provided Running is On. However,\n',...
            '    PEEKDATA does not guarantee that all the requested data is returned.\n\n',...
            '    To guarantee that acquired data contains no gaps, is must be logged to memory\n',...
            '    or to a disk file. Data stored in memory is extracted with the GETDATA function,\n',...
            '    while data stored to disk is returned with the DAQREAD function. The\n',...
            '    destination for logged data is controlled with the LoggingMode property.\n\n',...
            '    Logging is analogous to Sending for an analog output object.\n\n',...
            '    See also LoggingMode, Running, DAQREAD, GETDATA, PEEKDATA, STOP.\n']);
    case 'loggingmode'
        out = sprintf(['\n    LOGGINGMODE  [ Disk | {Memory} | Disk&Memory ]\n\n',...
            '    LoggingMode specifies the destination for acquired data.\n\n',...
            '    LoggingMode can be set to Disk, Memory,or Disk&Memory. If LoggingMode is set\n',...
            '    to Disk, then acquired data (as well as event and hardware information) is\n',...
            '    streamed to a disk file. If LoggingMode is set to Memory, then acquired data is\n',...
            '    stored in the data acquisition engine. If LoggingMode is set to Disk&Memory,\n',...
            '    then acquired data is stored in the data acquisition engine and is streamed to\n',...
            '    a disk file.\n\n',...
            '    When logging to the engine, you must extract the data in a timely manner with\n',...
            '    the GETDATA function. If the data is not extracted in a timely manner, it will\n',...
            '    eventually be overwritten.\n\n',...
            '    When logging to disk, you can specify the log file name with the LogFileName\n',...
            '    property, and you can control the number of log files created with the\n',...
            '    LogToDiskMode property. Data stored to a disk file can be returned to the\n',...
            '    MATLAB workspace with the DAQREAD function.\n\n',...
            '    The value of LoggingMode cannot be modified while the object is running.\n\n',...
            '    See also LogFileName, LogToDiskMode, DAQREAD, GETDATA.\n']);
    case 'logtodiskmode'
        out = sprintf(['\n    LOGTODISKMODE  [ {Overwrite} | Index ]\n\n',...
            '    LogToDiskMode specifies whether data, events and hardware information are \n',...
            '    saved to one disk file or multiple disk files.\n\n',...
            '    LogToDiskMode can be set to Overwrite or Index. If LogToDiskMode is set to\n',...
            '    Overwrite, then the log file is overwritten each time start is issued. If\n',...
            '    LogToDiskMode is set to Index, a different disk file is created each time start\n',...
            '    is issued and these rules are followed:\n\n',...
            '      The first log file name is specified by the initial value of LogFileName.\n\n',...
            '      If the specified file already exists, it is overwritten and no warning is issued.\n\n',...
            '      LogFileName is automatically updated with a numeric identifier after each\n',...
            '      file is written. For example, if LogFileName is initially specified as data.daq,\n',...
            '      then data.daq is the first file name, data01.daq is the second file name, and\n',...
            '      so on.\n\n',...
            '    Separate analog input objects are logged to separate files. Data stored to a disk\n',...
            '    file can be returned to the MATLAB workspace with the DAQREAD function. If\n',...
            '    an error occurs during data logging an error message is returned and data\n',...
            '    logging is stopped.\n\n',...
            '    The value of LogToDiskMode cannot be modified while the object is running.\n\n',...
            '    See also LogFileName, LoggingMode, DAQREAD.\n']);
    case 'manualtriggerhwon'
        out = sprintf(['\n    MANUALTRIGGERHWON [ {Start} | Trigger ]\n\n', ...
            '    ManualTriggerHwOn controls when the hardware will actualy start when a manual\n', ...
            '    trigger is used.  PeekData and pretrigger are not avalible when this setting\n', ...
            '    is used.\n']);

    case 'maxsamplesqueued'
        out = sprintf(['\n    MAXSAMPLESQUEUED  double  (read only)\n\n',...
            '    MaxSamplesQueued indicates the maximum number of samples allowed in the\n',...
            '    analog output queue. The default value is calculated by the engine, and is\n',...
            '    based on the memory resources of your system. You can override the default\n',...
            '    value of MaxSamplesQueued with the DAQMEM function.\n\n',...
            '    The value of MaxSamplesQueued can affect the behavior of PUTDATA. For\n',...
            '    example, if the queued data exceeds the value of MaxSamplesQueued, then\n',...
            '    PUTDATA becomes a blocking function until there is enough space in the queue\n',...
            '    to add the additional data.\n\n',...
            '    See also DAQMEM, PUTDATA.\n']);
    case 'name'
        out = sprintf(['\n    NAME  string\n\n',...
            '    Name specifies the name of the device object.\n\n',...
            '    After the device object is created, Name is automatically assigned a descriptive\n',...
            '    name that is produced by concatenating the name of the adaptor, the device ID,\n',...
            '    and the device object type. \n\n',...
            '    The value of Name can be changed at any time.\n']);
    case 'nativeoffset'
        out = sprintf(['\n    NATIVEOFFSET  double  (read only)\n\n',...
            '    NativeScaling, along with NativeOffset, is used to convert data between\n', ...
            '    the native hardware format and doubles.\n\n', ...
            '    For analog input objects, you return data from the engine in native format\n', ...
            '    using the getdata function. Additionally, if you log native data to,\n', ...
            '    a .daq file then you can read back that data using the daqread function.\n', ...
            '    The formula for converting from native A/D data to doubles is\n\n', ...
            '        doubles data = (native data)(native scaling) + native offset\n\n', ...
            '    For analog output objects, you queue native data in the engine using\n', ...
            '    the putdata function. You may want to return or queue data in native \n', ...
            '    format to conserve memory and to increase speed. The formula for\n', ...
            '    converting from doubles to native D/A data is \n\n',...
            '        native data = (doubles data)(native scaling) + native offset\n\n',...
            '    See also NativeScaling.\n']);
    case 'nativescaling'
        out = sprintf(['\n    NATIVESCALING  double  (read only)\n\n',...
            '    NativeScaling, along with NativeOffset, is used to convert data between\n', ...
            '    the native hardware format and doubles.\n\n', ...
            '    For analog input objects, you return data from the engine in native format\n', ...
            '    using the getdata function. Additionally, if you log native data to,\n', ...
            '    a .daq file then you can read back that data using the daqread function.\n', ...
            '    The formula for converting from native A/D data to doubles is\n\n', ...
            '        doubles data = (native data)(native scaling) + native offset\n\n', ...
            '    For analog output objects, you queue native data in the engine using\n', ...
            '    the putdata function. You may want to return or queue data in native \n', ...
            '    format to conserve memory and to increase speed. The formula for\n', ...
            '    converting from doubles to native D/A data is \n\n',...
            '        native data = (doubles data)(native scaling) + native offset\n\n',...
            '    See also NativeOffset.\n']);
    case 'outofdatamode'
        out = sprintf(['\n    OUTOFDATAMODE  [ {Hold} | DefaultValue ]\n\n',...
            '    OutOfDataMode specifies how the value held by the analog output subsystem is \n',...
            '    determined.\n\n',...
            '    When queued data is finished being output to the analog output (AO)\n',...
            '    subsystem, the hardware typically holds a value. The value held is determined\n',...
            '    by OutOfDataMode.\n\n',...
            '    OutOfDataMode can be Hold or DefaultValue. If OutOfDataMode is Hold, then\n',...
            '    the last value output from the engine is held by the AO subsystem. If\n',...
            '    OutOfDataMode is DefaultValue, then the value specified by\n',...
            '    DefaultChannelValue is held by the AO subsystem. For sound cards, the held\n',...
            '    value eventually drifts to zero since the InputType property is AC-Coupled, For\n',...
            '    National Instruments, Measurement Computing, and Agilent Technologies devices, the\n',...
            '    last value is held until the device is reset.\n\n',...
            '    The value of OutOFDataMode cannot be modified while the object is running.\n\n',...
            '    See also DefaultChannelValue.\n']);
    case 'outputrange'
        out = sprintf(['\n    OUTPUTRANGE  double\n\n',...
            '    OutputRange is a two-element vector that specifies the range of voltages that\n',...
            '    can be output by the analog output (AO) subsystem. You should configure\n',...
            '    OutputRange so that the maximum dynamic range of your hardware is utilized.\n',...
            '    For many devices, the output range is expressed in terms of the gain and\n',...
            '    polarity.\n\n',...
            '    AO subsystems have a finite number of OutputRange values that can be set. If\n',...
            '    an output range is specified but does not match a valid range, then the next\n',...
            '    highest supported range is automatically selected by the engine. If OutputRange\n',...
            '    exceeds the range of valid values, then an error is returned.\n\n',...
            '    Since OutputRange can be set to a value that differs from the one specified, you\n',...
            '    should return the actual output range for each channel using the GET function\n',...
            '    or the device object display summary. Alternatively, you can use the SETVERIFY\n',...
            '    function which sets the OutputRange value and then returns the actual value\n',...
            '    that is set. To find out the maximum output range supported by your board, use\n',...
            '    the PROPINFO function.\n\n',...
            '    The value of OutputRange cannot be modified while the object is running.\n\n',...
            '    See also UnitsRange, PROPINFO, SETVERIFY.\n']);
    case 'parent'
        out = sprintf(['\n    PARENT  device object  (read only)\n\n',...
            '    Parent indicates the parent (device object) of a channel or line.\n\n',...
            '    The parent of a channel (line) is defined as the device object that contains the\n',...
            '    channel (line).\n\n',...
            '    You can create a copy of the device object containing a particular channel or\n',...
            '    line by returning the value of Parent. This copy can be treated like any other\n',...
            '    device object. For example, you can configure property values, add channels or\n',...
            '    lines to it, and so on.\n']);
    case 'port'
        out = sprintf(['\n    PORT  double  (read only)\n\n',...
            '    Hardware lines are often grouped together as a port. Digital I/O subsystems\n',...
            '    can consist of multiple ports and typically have eight lines per port. When\n',...
            '    adding hardware lines to a digital I/O object with ADDLINE, you can specify the\n',...
            '    port ID. The port ID is stored in the Port property. If the port ID is not\n',...
            '    specified, then port ID value is calculated from the HwLine.\n\n',...
            '    See also ADDLINE.\n']);
    case 'ramprate'
        out = sprintf(['\n    RAMPRATE  double\n\n',...
            '    RampRate sets the source ramp-up and ramp-down rate.\n\n',...
            '    For input channels, RampRate is not generally used. For source channels,\n',...
            '    RampRate is usually used to ensure that the source signal starts and stops\n',...
            '    smoothly.\n\n',...
            '    RampRate can be set to any value between 0 and 100 seconds.\n']);
    case 'repeatoutput'
        out = sprintf(['\n    REPEATOUTPUT  double\n\n',...
            '    RepeatOutput specifies the number of times queued data is to be sent to the\n',...
            '    analog output device.\n\n',...
            '    To send data to an analog output subsystem, it must first be queued in the data\n',...
            '    acquisition engine with the PUTDATA function. If you want to continuously\n',...
            '    output the same data, you can use multiple calls to PUTDATA. However, since\n',...
            '    each PUTDATA call consumes memory, a long output sequence can quickly bring\n',...
            '    your system to halt.\n\n',...
            '    As an alternative to PUTDATA, you can continuously output previously queued\n',...
            '    data using RepeatOutput. Since RepeatOutput requeues the data, additional\n',...
            '    memory resources are not consumed. While the data is output, you cannot add\n',...
            '    additional data to the queue.\n\n',...
            '    The value of RepeatOutput cannot be modified while the object is running.\n\n',...
            '    See also PUTDATA.\n']);
    case 'running'
        out = sprintf(['\n    RUNNING  [ {Off} | On ]  (read only)\n\n',...
            '    Running indicates if the device object and hardware device are executing.\n\n',...
            '    Along with the Logging or Sending property, Running reflects the state of an\n',...
            '    analog input or analog output object. Running can be On or Off.\n\n',...
            '    Running is automatically set to On once the START command is issued. When\n',...
            '    Running is On, you can acquire data from an analog input device or send data\n',...
            '    to an analog output device. For digital I/O objects, Running is typically used to\n',...
            '    indicate if time-based events are being generated.\n\n',...
            '    Running is automatically set to Off once the STOP command is issued, the\n',...
            '    specified data is acquired or sent, or a runtime error occurs. When Running is\n',...
            '    Off, you cannot acquire or send data. However, you can acquire one sample\n',...
            '    with the GETSAMPLE function, or send one sample with the PUTSAMPLE function.\n\n',...
            '    See also Logging, Sending, GETSAMPLE, PUTSAMPLE, START.\n']);
    case 'runtimeerroraction'
        out = sprintf(['\n    RUNTIMEERRORACTION  string\n\n',...
            '    A runtime error event is generated immediately after a runtime error occurs.\n',...
            '    This event executes the M-file specified for RuntimeErrorAction.\n',...
            '    Runtime errors include hardware errors and timeouts. Runtime errors do not\n',...
            '    include configuration errors such as setting an invalid property value.\n\n',...
            '    Runtime error event information is stored in the EventLog property. You can\n',...
            '    retrieve any error message with the Data.String field of EventLog.\n\n',...
            '    Note: The RunTimeErrorAction property has been renamed to RunTimeErrorFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, Timeout, DAQACTION.\n']);
    case 'runtimeerrorfcn'
        out = sprintf(['\n    RUNTIMEERRORFCN  string, function_handle, or cell array\n\n',...
            '    A runtime error event is generated immediately after a runtime error occurs.\n',...
            '    This event executes the M-file specified for RuntimeErrorFcn. The default\n',...
            '    value for RunTimeErrorFcn is daqcallback, which displays the event type, the\n',...
            '    time the event occurred, and the device object name.\n\n',...
            '    Runtime errors include hardware errors and timeouts. Runtime errors do not\n',...
            '    include configuration errors such as setting an invalid property value.\n\n',...
            '    Runtime error event information is stored in the EventLog property. You can\n',...
            '    retrieve any error message with the Data.String field of EventLog.\n\n',...
            '    See also EventLog, Timeout, DAQCALLBACK.\n']);
    case 'samplerate'
        out = sprintf(['\n    SAMPLERATE  double\n\n',...
            '    SampleRate specifies the per-channel rate at which data is digitized.\n\n',...
            '    SampleRate specifies the per-channel rate (in samples/second) that the analog\n',...
            '    input (AI) or analog output (AO) subsystem digitizes data.\n\n',...
            '    AI and AO subsystems have a finite (though often large) number of valid\n',...   
            '    sampling rates. If you specify a sampling rate that does not match one of\n',...
            '    the valid values, the data acquisition engine automatically selects\n',...
            '    the nearest available sampling rate.\n\n',...
            '    Since SampleRate can be set to a value that differs from the one specified, you\n',...
            '    should return the actual sampling rate using the GET function or the device\n',...
            '    object display summary. Alternatively, you can use the SETVERIFY function\n',...
            '    which sets the SampleRate value and then returns the actual value that is set.\n',...
            '    To find out the range of sampling rates supported by your board, use the\n',...
            '    PROPINFO function.\n\n',...
            '    The value of SampleRate cannot be modified while the object is running.\n\n',...
            '    See also PROPINFO, SETVERIFY.\n']);
    case 'samplesacquired'
        out = sprintf(['\n    SAMPLESACQUIRED  double  (read only)\n\n',...
            '    SamplesAcquired indicates the number of samples acquired per channel.\n\n',...
            '    SamplesAcquired is continuously updated to reflect the current number of\n',...
            '    samples acquired. It is reset to zero only after a START command is issued.\n\n',...
            '    Use the SamplesAvailable property to find out how many samples are\n',...
            '    available to be extracted from the engine.\n\n',...
            '    See also SamplesAcquiredFcn, SamplesAvailable, START.\n']);
    case 'samplesacquiredaction'
        out = sprintf(['\n    SAMPLESACQUIREDACTION  string\n\n',...
            '    SamplesAcquiredAction specifies the M-file function to execute every time\n',...
            '    a predefined number of samples is acquired for each channel group member.\n\n',...
            '    A samples-acquired event is generated immediately after the number of\n',...
            '    samples specified by the SamplesAcquiredActionCount property is acquired\n',...
            '    for each channel group member. This event executes the M-file specified for\n',...
            '    SamplesAcquiredAction.\n\n',...
            '    You should use SamplesAcquiredAction if you must access each sample that is\n',...
            '    acquired. If you do not have this requirement, you may want to use the\n',...
            '    TimerAction property.\n\n',...
            '    Samples-acquired event information is not stored in the EventLog property.\n\n',...
            '    Note: The SamplesAcquiredAction property has been renamed to SamplesAcquiredFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, SamplesAcquiredFcnCount, TimerFcn.\n']);
    case 'samplesacquiredactioncount'
        out = sprintf(['\n    SAMPLESACQUIREDACTIONCOUNT  double\n\n',...
            '    SamplesAcquiredActionCount specifies the number of samples to acquire for\n',...
            '    each channel group member before a samples-acquired event is generated.\n\n',...
            '    A samples-acquired event is generated immediately after the number of\n',...
            '    samples specified by SamplesAcquiredActionCount is acquired for each\n',...
            '    channel group member. This event executes the M-file specified by the\n',...
            '    SamplesAcquiredAction property.\n\n',...
            '    The value of SamplesAcquiredActionCount cannot be modified while the object\n',...
            '    is running.\n\n',...
            '    Note: The SamplesAcquiredActionCount property has been renamed to \n',...
            '    SamplesAcquiredFcnCount.  See the Release Notes for more information.\n\n',...
            '    See also SamplesAcquiredFcn.\n']);
    case 'samplesacquiredfcn'
        out = sprintf(['\n    SAMPLESACQUIREDFCN  string, function_handle, or cell array\n\n',...
            '    SamplesAcquiredFcn specifies the M-file function to execute every time\n',...
            '    a predefined number of samples is acquired for each channel group member.\n\n',...
            '    A samples-acquired event is generated immediately after the number of\n',...
            '    samples specified by the SamplesAcquiredFcnCount property is acquired\n',...
            '    for each channel group member. This event executes the M-file specified for\n',...
            '    SamplesAcquiredFcn.\n\n',...
            '    You should use SamplesAcquiredFcn if you must access each sample that is\n',...
            '    acquired. If you do not have this requirement, you may want to use the\n',...
            '    TimerFcn property.\n\n',...
            '    Samples-acquired event information is not stored in the EventLog property.\n\n',...
            '    See also EventLog, SamplesAcquiredFcnCount, TimerFcn.\n']);
    case 'samplesacquiredfcncount'
        out = sprintf(['\n    SAMPLESACQUIREDFCNCOUNT  double\n\n',...
            '    SamplesAcquiredFcnCount specifies the number of samples to acquire for\n',...
            '    each channel group member before a samples-acquired event is generated.\n\n',...
            '    A samples-acquired event is generated immediately after the number of\n',...
            '    samples specified by SamplesAcquiredFcnCount is acquired for each\n',...
            '    channel group member. This event executes the M-file specified by the\n',...
            '    SamplesAcquiredFcn property.\n\n',...
            '    The value of SamplesAcquiredFcnCount cannot be modified while the object\n',...
            '    is running.\n\n',...
            '    See also SamplesAcquiredFcn.\n']);
    case 'samplesavailable'
        out = sprintf(['\n    SAMPLESAVAILABLE  double  (read only)\n\n',...
            '    SamplesAvailable indicates the number of samples available per channel in\n',...
            '    the data acquisition engine.\n\n',...
            '    For analog input (AI) objects, SamplesAvailable indicates the number of\n',...
            '    samples that can be extracted from the engine for each channel group member\n',...
            '    with the GETDATA function. For analog output (AO) objects, SamplesAvailable\n',...
            '    indicates the number of samples that have been queued with the PUTDATA\n',...
            '    function, and can be sent (output) to each channel group member.\n\n',...
            '    After data has been extracted or output, the SamplesAvailable value is\n',...
            '    reduced by the appropriate number of samples.\n\n',...
            '    For AI objects, use the SamplesAcquired property to find out how many\n',...
            '    samples have been acquired since the START command was issued. For AO\n',...
            '    objects, use the SamplesOutput property to find out how many samples have\n',...
            '    been output since the START command was issued.\n\n',...
            '    See also SamplesAcquired, SamplesOutput, START.\n']);
    case 'samplesoutput'
        out = sprintf(['\n    SAMPLESOUTPUT  double  (read only)\n\n',...
            '    SamplesOutput indicates the number of samples that have been output to the\n',...
            '    analog output hardware device for each channel group member.\n\n',...
            '    SamplesOutput is continuously updated to reflect the current number of\n',...
            '    samples output by an analog output object. It is reset to zero after the\n',...
            '    device objects stops and data has been queued with the PUTDATA function. \n\n',...
            '    Use the SamplesAvailable property to find out how many samples are\n',...
            '    available to be output from the engine.\n\n',...
            '    See also SamplesOutputFcn, SamplesAvailable, PUTDATA.\n']);
    case 'samplesoutputaction'
        out = sprintf(['\n    SAMPLESOUTPUTACTION  string\n\n',...
            '    SamplesOutputAction specifies the M-file function to execute every time\n',...
            '    a predefined number of samples is output for each channel group member.\n\n',...
            '    A samples-output event is generated immediately after the number of samples\n',...
            '    specified by the SamplesOutputActionCount property is output for each\n',...
            '    channel group member. This event executes the M-file specified for\n',...
            '    SamplesOutputAction.\n\n',...
            '    Samples-output event information is not stored in the EventLog property.\n\n',...
            '    Note: The SamplesOutputAction property has been renamed to SamplesOutputFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also SamplesOutputFcnCount.\n']);
    case 'samplesoutputactioncount'
        out = sprintf(['\n    SAMPLESOUTPUTACTIONCOUNT  double\n\n',...
            '    SamplesOutputActionCount specifies the number of samples to output for each\n',...
            '    channel group member before a samples-output event is generated.\n\n',...
            '    A samples-output event is generated immediately after the number of samples\n',...
            '    specified by SamplesOutputActionCount is output for each channel group\n',...
            '    member. This event executes the M-file specified by the SamplesOutputAction\n',...
            '    property.\n\n',...
            '    The value of SamplesOutputActionCount cannot be modified while the object is\n',...
            '    running.\n\n',...
            '    Note: The SamplesOutputActionCount property has been renamed to SamplesOutputFcnCount.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also SamplesOutputFcn.\n']);
    case 'samplesoutputfcn'
        out = sprintf(['\n    SAMPLESOUTPUTFCN  string, function_handle, or cell array\n\n',...
            '    SamplesOutputFcn specifies the M-file function to execute every time\n',...
            '    a predefined number of samples is output for each channel group member.\n\n',...
            '    A samples-output event is generated immediately after the number of samples\n',...
            '    specified by the SamplesOutputFcnCount property is output for each\n',...
            '    channel group member. This event executes the M-file specified for\n',...
            '    SamplesOutputFcn.\n\n',...
            '    Samples-output event information is not stored in the EventLog property.\n\n',...
            '    See also SamplesOutputFcnCount.\n']);
    case 'samplesoutputfcncount'
        out = sprintf(['\n    SAMPLESOUTPUTFCNCOUNT  double\n\n',...
            '    SamplesOutputFcnCount specifies the number of samples to output for each\n',...
            '    channel group member before a samples-output event is generated.\n\n',...
            '    A samples-output event is generated immediately after the number of samples\n',...
            '    specified by SamplesOutputFcnCount is output for each channel group\n',...
            '    member. This event executes the M-file specified by the SamplesOutputFcn\n',...
            '    property.\n\n',...
            '    The value of SamplesOutputFcnCount cannot be modified while the object is\n',...
            '    running.\n\n',...
            '    See also SamplesOutputFcn.\n']);
    case 'samplespertrigger'
        out = sprintf(['\n    SAMPLESPERTRIGGER  double\n\n',...
            '    SamplesPerTrigger specifies the number of samples to acquire for each\n',...
            '    channel group member for each analog input trigger.\n\n',...
            '    If SamplesPerTrigger is set to inf, then the analog input object continually\n',...
            '    acquires data until a STOP function is issued or an error occurs.\n\n',...
            '    The default value of SamplesPerTrigger is calculated by the data acquisition\n',...
            '    engine such that one second of data is acquired. This calculation is based on the\n',...
            '    value of SampleRate.\n\n',...
            '    The value of SamplesPerTrigger cannot be modified while the object is running.\n\n',...
            '    See also SampleRate, STOP.\n']);
    case 'sending'
        out = sprintf(['\n    SENDING  [ Off | On ]  (read only)\n\n',...
            '    Sending indicates data is being output to the D/A hardware device.\n\n',...
            '    Along with the Running property, Sending reflects the state of an analog output\n',...
            '    object. Sending can be On or Off.\n\n',...
            '    Sending is automatically set to On when a trigger occurs. When Sending is On,\n',...
            '    queued data is being output to the analog output subsystem.\n\n',...
            '    Sending is automatically set to Off when the queued data is output, an error\n',...
            '    occurs, or a STOP command is issued. When Sending is Off, data is not being\n',...
            '    output to the analog output subsystem although you can output a single\n',...
            '    sample with the PUTSAMPLE function.\n\n',...
            '    Sending is analogous to Logging for analog input objects.\n\n',...
            '    See also Running, PUTSAMPLE.\n']);
    case 'sensorrange'
        out = sprintf(['\n    SENSORRANGE  double\n\n',...
            '    SensorRange specifies the range of data you expect from your sensor.\n\n',...
            '    This range depends on the physical phenomena you are measuring and \n',...
            '    the output range of the sensor.\n\n',...
            '    SensorRange should be used in conjunction with the InputRange property.\n',...
            '    These properties should be configured such that the maximum precision is\n',...
            '    obtained and the full dynamic range of the source signal is covered. \n\n',...
            '    See also InputRange.\n']);
    case 'sourcemode'
        out = sprintf(['\n    SOURCEMODE  [ {Arbitrary} ]\n\n',...
            '    SourceMode sets the source mode for one or more channels.\n\n',...
            '    With a SourceMode set to Arbitrary, the host program must provide the data to\n',...
            '    use for the arbitrary signal.\n\n',...
            '    There is no "off" source mode. To turn a source channel off, you must make it\n',...
            '    inactive. When the source is inactive, it is normally low impedance to ground.\n',...
            '    To make the source high impedance, set the SourceOutput property to Open.\n']);
    case 'sourceoutput'
        out = sprintf(['\n    SOURCEOUTPUT  [ {Normal} | Grounded | Open | CALOUT | Multi ]\n\n',...
            '    SourceOutput sets the source output for one or more channels.\n']);
    case 'span'
        out = sprintf(['\n    SPAN  double \n\n',...
            '    Span specifies the measurement bandwidth (in Hz).\n\n',...
            '    For an input channel, the span specifies the maximum frequency at which\n',...
            '    valid alias-protected data is received (frequencies above that are filtered out).\n',...
            '    For a source channel, the span specifies the maximum frequency at which the\n',...
            '    output signal will correctly track the signal that the source is attempting to\n',...
            '    generate.\n\n',...
            '    The valid values for span depend on the current clock frequency. The clock\n',...
            '    frequency should be set before setting the span. Normally, the maximum valid\n',...
            '    span is the clock frequency divided by 2.56. Valid spans are given by the\n',...
            '    maximum span divided by powers of two, and the maximum span divided by\n',...
            '    five and by powers of two. The ratio between the span and the maximum span\n',...
            '    is called the decimation factor.\n\n',...
            '    The value of Span cannot be modified while the object is running.\n\n',...
            '    See also SampleRate. \n']);
    case 'standardsamplerates'
        out = sprintf(['\n    STANDARDSAMPLERATES  [ {On} | Off ] \n\n',...
            '    StandardSampleRates specifies whether the valid sample rates snap to a small\n',...
            '    set of standard values (8000Hz, 11025Hz, 22050Hz, 44100Hz), or if the \n',...
            '    sample rate can be set to to any value within the allowed bounds (if\n',...
            '    supported by the hardware).\n\n',...
            '    The value of StandardSampleRates cannot be modified while the object is\n',...
            '    running.\n\n',...
            '    See also SampleRate.\n']);
    case 'startaction'
        out = sprintf(['\n    STARTACTION  string\n\n',...
            '    StartAction specifies the M-file function to execute just before the device\n',...
            '    object and hardware device start executing. \n\n',...
            '    A start event is generated immediately after the START command is issued.\n',...
            '    This event executes the M-file specified for StartAction.\n\n',...
            '    When the StartAction M-file has finished executing, Running is automatically\n',...
            '    set to On and the device object and hardware device begin executing.\n\n',...
            '    Start event information is stored in the EventLog property.\n\n',...
            '    Note: The StartAction property has been renamed to StartFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, Running.\n']);
    case 'stopaction'
        out = sprintf(['\n    STOPACTION  string\n\n',...
            '    StopAction specifies the M-file function to execute just after the device\n',...
            '    object and hardware device stop executing. \n\n',...
            '    A stop event is generated immediately after the STOP command is issued. This\n',...
            '    event executes the M-file specified for StopAction.\n\n',...
            '    Under most circumstances, the M-file is not guaranteed to complete execution\n',...
            '    until sometime after the device object and hardware device stop, and the\n',...
            '    Running property is set to Off.\n\n',...
            '    Stop event information is stored in the EventLog property.\n\n',...
            '    Note: The StopAction property has been renamed to StopFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, Running.\n']);
    case 'startfcn'
        out = sprintf(['\n    STARTFCN  string, function_handle, or cell array\n\n',...
            '    StartFcn specifies the M-file function to execute just before the device\n',...
            '    object and hardware device start executing. \n\n',...
            '    A start event is generated immediately after the START command is issued.\n',...
            '    This event executes the M-file specified for StartFcn.\n\n',...
            '    When the StartFcn M-file has finished executing, Running is automatically\n',...
            '    set to On and the device object and hardware device begin executing.\n\n',...
            '    Start event information is stored in the EventLog property.\n\n',...
            '    See also EventLog, Running.\n']);
    case 'stopfcn'
        out = sprintf(['\n    STOPFCN  string, function_handle, or cell array\n\n',...
            '    StopFcn specifies the M-file function to execute just after the device\n',...
            '    object and hardware device stop executing. \n\n',...
            '    A stop event is generated immediately after the STOP command is issued. This\n',...
            '    event executes the M-file specified for StopFcn.\n\n',...
            '    Under most circumstances, the M-file is not guaranteed to complete execution\n',...
            '    until sometime after the device object and hardware device stop, and the\n',...
            '    Running property is set to Off.\n\n',...
            '    Stop event information is stored in the EventLog property.\n\n',...
            '    See also EventLog, Running.\n']);
    case 'sum'
        out = sprintf(['\n    SUM  [ {Off} | On] \n\n',...
            '    Sum enables or disables the source sum input for one or more channels.\n\n',...
            '    Sum can be set to Off or On.If Sum is set to Off, the sum input is disabled. If Sum\n',...
            '    is set to On, the sum input is enabled. The signal on the sum input is internally\n',...
            '    added to the output that the source would otherwise be produced.\n\n',...
            '    For the Option 1D4 single-channel source, the "source_sum" input is shared\n',...
            '    with the "source_cola" output. Only one of these two may be enabled at any one\n',...
            '    time. For prototype Option 1D4 sources, one of the two must be enabled at all\n',...
            '    times. By default, the constant-level output is enabled and the sum input is\n',...
            '    disabled.\n']);
    case 'tag'
        out = sprintf(['\n    TAG  string\n\n',...
            '    Tag provides a means to identify device objects with a label. Using the DAQFIND\n',...
            '    function and the Tag value, a device object that was cleared from the MATLAB\n',...
            '    workspace can be identified and retrieved.\n\n',...
            '    See also DAQFIND.\n']);
    case 'timeout'
        out = sprintf(['\n    TIMEOUT  double\n\n',...
            '    Timeout specifies an additional waiting time to extract or queue data.\n\n',...
            '    The Timeout value (in seconds) is added to the time required to extract data\n',...
            '    from the engine or queue data to the engine. Since data is extracted with the\n',...
            '    GETDATA function, and queued with the PUTDATA function, Timeout is associated\n',...
            '    only with these two "blocking" functions.\n\n',...
            '    If the requested data is not extracted or queued after waiting the required time,\n',...
            '    then a timeout condition occurs and control is immediately returned to\n',...
            '    MATLAB. A timeout is one of the conditions for stopping an acquisition. When\n',...
            '    a timeout occurs, the M-file function specified by RuntimeErrorFcn is\n',...
            '    called.\n\n',...
            '    Timeout is not associated with hardware timeout conditions. Possible\n',...
            '    hardware timeout conditions include:\n\n',...
            '      Triggering on a voltage level and that level never occurs\n',...
            '      Externally clocking an acquisition and the external clock signal never occurs\n',...
            '      Losing its hardware connection\n\n',...
            '    To check for hardware timeouts, you may need to poll the appropriate property\n',...
            '    value.\n\n',...
            '    The value of TimeOut cannot be modified while the object is running.\n\n',...
            '    See also RunTimeErrorFcn, GETDATA, PUTDATA.\n']);
    case 'timeraction'
        out = sprintf(['\n    TIMERACTION  string\n\n',...
            '    TimerAction specifies the M-file function to execute whenever a predefined\n',...
            '    period of time passes.\n\n',...
            '    A timer event is generated whenever the time specified by the TimerPeriod\n',...
            '    property passes. This event executes the M-file specified for TimerAction. Time\n',...
            '    is measured relative to when the device object starts running.\n\n',...
            '    Some timer events may not be processed if your system is significantly slowed\n',...
            '    or if the TimerPeriod value is too small. For example, a common application for\n',...
            '    timer events is to display data. However, since displaying data is a\n',...
            '    CPU-intensive task, some of these events may be dropped. To guarantee that\n',...
            '    events are not dropped, you may want to use the SamplesAcquiredFcn\n',...
            '    property. For digital I/O objects, timer events are typically used to update \n',...
            '    and display the state of the object.\n\n',...
            '    Timer event information is not stored in the EventLog property.\n\n',...
            '    Note: The TimerAction property has been renamed to TimerFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, SamplesAcquiredFcn, TimerPeriod.\n']);
    case 'timerfcn'
        out = sprintf(['\n    TIMERFCN  string, function_handle, or cell array\n\n',...
            '    TimerFcn specifies the M-file function to execute whenever a predefined\n',...
            '    period of time passes.\n\n',...
            '    A timer event is generated whenever the time specified by the TimerPeriod\n',...
            '    property passes. This event executes the M-file specified for TimerFcn. Time\n',...
            '    is measured relative to when the device object starts running.\n\n',...
            '    Some timer events may not be processed if your system is significantly slowed\n',...
            '    or if the TimerPeriod value is too small. For example, a common application for\n',...
            '    timer events is to display data. However, since displaying data is a\n',...
            '    CPU-intensive task, some of these events may be dropped. To guarantee that\n',...
            '    events are not dropped, you may want to use the SamplesAcquiredFcn\n',...
            '    property. For digital I/O objects, timer events are typically used to update \n',...
            '    and display the state of the object.\n\n',...
            '    Timer event information is not stored in the EventLog property.\n\n',...
            '    See also EventLog, SamplesAcquiredFcn, TimerPeriod.\n']);
    case 'timerperiod'
        out = sprintf(['\n    TIMERPERIOD  double\n\n',...
            '    TimerPeriod specifies the period of time between timer events.\n\n',...
            '    TimerPeriod specifies the time, in seconds, that must pass before the M-file\n',...
            '    function specified for TimerFcn is called. Time is measured relative to when\n',...
            '    the hardware device starts running.\n\n',...
            '    Some timer events may not be processed if your system is significantly slowed\n',...
            '    or if the TimerPeriod value is too small. For example, a common application for\n',...
            '    timer events is to display data. However, since displaying data is a\n',...
            '    CPU-intensive task, some of these events may be dropped.\n\n',...
            '    See also TimerFcn.\n']);
    case 'triggeraction'
        out = sprintf(['\n    TRIGGERACTION  string\n\n',...
            '    TriggerAction specifies the M-file to be executed when a trigger occurs.\n',...
            '    A trigger event is generated immediately after a trigger is executed. \n',...
            '    This event executes the M-file specified for TriggerAction. Under most \n',...
            '    circumstances, the M-file is not guaranteed to complete execution until \n',...
            '    sometime after Logging is set to On.\n\n',...
            '    Trigger event information is stored in the EventLog property. You can\n',...
            '    determine the number for any trigger event by examining the Data.Trigger\n',...
            '    field of EventLog.\n\n',...
            '    Note: The TriggerAction property has been renamed to TriggerFcn.\n',...
            '    See the Release Notes for more information.\n\n',...
            '    See also EventLog, Logging.\n']);
    case 'triggerfcn'
        out = sprintf(['\n    TRIGGERFCN  string, function_handle, or cell array\n\n',...
            '    TriggerFcn specifies the M-file to be executed when a trigger occurs.\n',...
            '    A trigger event is generated immediately after a trigger is executed. \n',...
            '    This event executes the M-file specified for TriggerFcn. Under most \n',...
            '    circumstances, the M-file is not guaranteed to complete execution until \n',...
            '    sometime after Logging is set to On.\n\n',...
            '    Trigger event information is stored in the EventLog property. You can\n',...
            '    determine the number for any trigger event by examining the Data.Trigger\n',...
            '    field of EventLog.\n\n',...
            '    See also EventLog, Logging.\n']);
    case 'triggerchannel'
        out = sprintf(['\n    TRIGGERCHANNEL  channel\n\n',...
            '    TriggerChannel specifies the channel serving as trigger source.\n\n',...
            '    TriggerChannel is used only when TriggerType is Software. The trigger\n',...
            '    channel must be specified before the trigger type. You may need to \n',...
            '    configure the TriggerCondition and TriggerConditionValue properties \n',...
            '    in conjunction with TriggerChannel.\n\n',...
            '    For National Instruments hardware, if TriggerType is HwAnalogChannel,then\n',...
            '    TriggerChannel must be the first element of the channel group.\n\n',...
            '    The value of TriggerChannel cannot be modified while the object is running.\n\n',...
            '    See also TriggerCondition, TriggerConditionValue, TriggerType.\n']);
    case 'triggercondition'
        out = sprintf(['\n    TRIGGERCONDITION  device specific\n\n',...
            '    TriggerCondition specifies the condition which must be satisfied before a\n',...
            '    trigger is issued. The available trigger conditions depend on the value of\n',...
            '    TriggerType.\n\n',...
            '    If TriggerType is Immediate or Manual, the only available TriggerCondition\n',...
            '    is None. If TriggerType is Software, then TriggerCondition can be Rising,\n',...
            '    Falling, Leaving, or Entering. These trigger conditions require a value to be\n',...
            '    specified for TriggerConditionValue.\n\n',...
            '    National Instruments hardware can take the following additional TriggerCondition\n',...
            '    values: None with a TriggerType value of HwDigital and the TriggerCondition values \n',...
            '    AboveHighLevel, BelowLowLevel,HighHysteresis, InsideRegion, and LowHysteresis with \n',...
            '    a TriggerType value of HwAnalogPin or HwAnalogChannel.\n\n',...
            '    Agilent Technologies hardware can take the following additional TriggerCondition values:\n',...
            '    PositiveEdge and NegativeEdge with a TriggerType value of HwDigital and the \n',...
            '    TriggerCondition values Rising, Falling, Entering and Leaving with a TriggerType \n',...
            '    value of HwAnalog.\n\n',...
            '    Measurement Computing hardware can take the following additional TriggerCondition values:\n', ...
            '    GateHigh, GateLow, TrigHigh, TrigLow, TrigPosEdge, TrigNegEdge, GateNegHys,\n', ...
            '    GatePosHys, GateAbove, GateBelow, TrigAbove, TrigBelow, GateInWindow,\n', ...
            '    GateOutWindow.\n\n', ...
            '    The value of TriggerCondition cannot be modified while the object is running.\n\n',...
            '    See also TriggerChannel, TriggerConditionValue, TriggerType.\n']);
    case 'triggerconditionvalue'
        out = sprintf(['\n    TRIGGERCONDITIONVALUE  double\n\n',...
            '    TriggerConditionValue specifies one or more voltage values that must be\n',...
            '    satisfied before a trigger is executed.   \n\n',...
            '    TriggerConditionValue is used when TriggerType is Software, and is ignored\n',...
            '    when TriggerCondition is None.\n\n',...
            '    To execute a software trigger, the values specified for TriggerCondition and\n',...
            '    TriggerConditionValue must be satisfied. When TriggerCondition is Rising\n',...
            '    or Falling, TriggerConditionValue accepts a single value. When TriggerCondition\n',...
            '    is Entering or Leaving, TriggerConditionValue accepts a two-element vector of\n',...
            '    values.\n\n',...
            '    For Agilent Technologies hardware, TriggerConditionValue is always a two-element\n',...
            '    vector of values.\n\n',...
            '    The value of TriggerConditionValue cannot be modified while the object is running.\n\n',...
            '    See also TriggerCondition, TriggerType.\n']);
    case 'triggerdelay'
        out = sprintf(['\n    TRIGGERDELAY  double\n\n',...
            '    TriggerDelay specifies the delay value for data logging.\n\n',...
            '    You can define both pretriggers and postriggers. Pretriggers are specified with\n',...
            '    a negative TriggerDelay value while postriggers are specified with a positive\n',...
            '    TriggerDelay value. Triggers can be delayed in units of time or samples with\n',...
            '    the TriggerDelayUnits property. Pretriggers are not defined for hardware\n',...
            '    triggers or when TriggerType is Immediate.\n\n',...
            '    Pretrigger samples are included as part of the total samples acquired per\n',...
            '    trigger as specified by the SamplesPerTrigger property. For example, if\n',...
            '    SamplesPerTrigger is set to 1000, TriggerDelay = -100, and TriggerDelayUnits\n',...
            '    is set to Samples, then 100 samples are logged before the trigger event and \n',...
            '    900 samples are logged after the trigger event.\n\n',...
            '    If sample-time pairs are returned to the workspace with the GETDATA function,\n',...
            '    then pretriggered samples are identified with negative time values.\n\n',...
            '    The value of TriggerDelay cannot be modified while the object is running.\n\n',...
            '    See also SamplesPerTrigger, TriggerDelayUnits.\n']);
    case 'triggerdelayunits'
        out = sprintf(['\n    TRIGGERDELAYUNITS  [ {Seconds} | Samples ]\n\n',...
            '    TriggerDelayUnits specifies the the units in which trigger delay data \n',...
            '    is measured.\n\n',...
            '    TriggerDelayUnits can be Seconds or Samples. If TriggerDelayUnits is Seconds,\n',...
            '    then data logging is delayed by the specified time for each channel group\n',...
            '    member. If TriggerDelayUnits is Samples, then data logging is delayed by the \n',...
            '    specified number of samples for each channel group member.\n\n',...
            '    The trigger delay value is given by the TriggerDelay property.\n\n',...
            '    The value of TriggerDelayUnits cannot be modified while the object is running.\n\n',...
            '    See also TriggerDelay.\n']);
    case 'triggerrepeat'
        out = sprintf(['\n    TRIGGERREPEAT  double\n\n',...
            '    TriggerRepeat specifies the number of additional times to repeat the trigger.\n\n',...
            '    Triggers can be configured to occur once (one-shot acquisition) or multiple\n',...
            '    times. If TriggerRepeat is set to its default value of 0, then the trigger executes\n',...
            '    only once when the trigger condition is met. If TriggerRepeat is set to a\n',...
            '    positive integer value, then the trigger repeats the specified number of times\n',...
            '    when the trigger condition is met. If TriggerRepeat is set to inf, then the\n',...
            '    trigger repeats every time the trigger condition is met until an explicit STOP\n',...
            '    function is issued or an error occurs.\n\n',...
            '    You can quickly evaluate how many triggers have executed by examining the\n',...
            '    TriggersExecuted property or by invoking the display summary for the device\n',...
            '    object. The display summary is invoked by typing the device object name at the\n',...
            '    MATLAB command line.\n\n',...
            '    TriggerRepeat is not supported for hardware trigger types.\n\n',...
            '    The value of TriggerRepeat cannot be modified while the object is running.\n\n',...
            '    See also TriggersExecuted, TriggerType, STOP.\n']);
    case 'triggersexecuted'
        out = sprintf(['\n    TRIGGERSEXECUTED  double  (read only)\n\n',...
            '    TriggersExecuted indicates the number of triggers executed.\n\n',...
            '    You can find out how many triggers executed by examining the value of\n',...
            '    TriggersExecuted. The trigger number for each trigger executed is also\n',...
            '    recorded by the Data.Trigger field of the EventLog property.\n\n',...
            '    See also EventLog.\n']);
    case 'triggertype'
        out = sprintf(['\n    TRIGGERTYPE  device specific\n\n',...
            '    TriggerType specifies the type of trigger to be issued. \n\n',...
            '    TriggerType can be Immediate, Manual,or Software. If TriggerType is\n',...
            '    Immediate, the trigger executes immediately after START is issued. If\n',...
            '    TriggerType is Manual, the trigger executes immediately after the TRIGGER\n',...
            '    function is issued. If TriggerType is Software, the trigger executes when \n',...
            '    the associated trigger condition is satisfied (analog input only).\n\n',...
            '    For a given hardware device, additional trigger types may be available. Some\n',...
            '    trigger types require trigger conditions and trigger condition values. Trigger\n',...
            '    conditions are specified with the TriggerCondition property, while trigger\n',...
            '    condition values are specified with the TriggerConditionValue property.\n\n',...
            '    When a trigger executes for an analog input object, data logging is initiated and\n',...
            '    the Logging property is automatically set to On.When a trigger executes for an\n',...
            '    analog output object, data sending is initiated and the Sending property is\n',...
            '    automatically set to On.\n\n',...
            '    National Instruments hardware can take the following additional analog input \n',...
            '    TriggerType values: HwDigital, HwAnalogChannel, and HwAnalogPin; and the following\n',...
            '    additional analog output value: HwDigital.\n\n',...
            '    Agilent Technologies hardware can take the following additional analog input TriggerType \n',...
            '    values: HwDigital and HwAnalog; and the following additional analog output TriggerType\n',...
            '    values: HwDigitalPos and HwDigitalNeg.\n\n',...
            '    Measurement Computing and Advantech hardware can take the following additional\n',...
            '    analog input TriggerType values: HwDigital and HwAnalog.\n\n',...
            '    The value of TriggerType cannot be modified while the object is running.\n\n',...
            '    See also Logging, Sending, TriggerCondition, TriggerConditionValue.\n']);
    case 'type'
        out = sprintf(['\n    TYPE  string  (read only)\n\n',...
            '    Type indicates the data acquisition object type. \n\n',...
            '    The object types supported by the Data Acquisition Toolbox are Analog Input, \n',...
            '    Analog Output, Digital IO, Channel and Line. Once an object is created, the\n',...
            '    value of Type is automatically defined.\n']);
    case 'units'
        out = sprintf(['\n    UNITS  string\n\n',...
            '    Units is a string that specifies the engineering units associated with your data.\n',...
            '    Units should be used in conjunction with the UnitsRange property.\n']);
    case 'unitsrange'
        out = sprintf(['\n    UNITSRANGE  double\n\n',...
            '    UnitsRange specifies the engineering units range of the data stored in\n',...
            '    MATLAB. For analog input objects, UnitsRange is used in conjunction with the\n',...
            '    SensorRange, InputRange,and Units properties. For analog output objects,\n',...
            '    UnitsRange is used in conjunction with the OutputRange and Units properties.\n\n',...
            '    See also InputRange, OutputRange, SensorRange, Units.\n']);
    case 'userdata'
        out = sprintf(['\n    USERDATA  any type\n\n',...
            '    UserData stores data that you want to associate with the device object.\n\n'...
            '    Note: If you return analog input object information to the workspace\n'...
            '    using the DAQREAD function, the UserData value is not restored.\n']);
    case 'bitspersample'
        out = sprintf(['\n    BITSPERSAMPLE  [ 8 | {16} ]\n\n',...
            '    BitsPerSample specifies the number of bits the sound card uses to represent\n',...
            '    each sample.\n\n',...
            '    The value of BitsPerSample cannot be modified while the object is running.\n']);
    case 'driveaisensetoground'
        out = sprintf(['\n    DRIVEAISENSETOGROUND  [ {Off} | On ]\n\n',...
            '    DriveAISenseToGround specifies whether to drive AISENSE to onboard\n',...
            '    ground or not.\n\n',...
            '    The value of DriveAISenseToGround cannot be modified while the object\n',...
            '    is running.\n']);
    case 'nummuxboards'
        out = sprintf(['\n    NUMMUXBOARDS  double\n\n',...
            '    NumMuxBoards specifies the number of external multiplexer devices connected.\n\n',...
            '    The value of NumMuxBoards cannot be modified while the object is running.\n']);
    case 'transfermode'
        out = sprintf(['\n    TRANSFERMODE  device specific\n\n',...
            '    TransferMode specifies how data is transferred from the data acquisition\n',...
            '    device to computer memory. For National Instruments devices, TransferMode\n',...
            '    may be Interrupts or SingleDMA. (Note: during continuous acquisition with\n',...
            '    National Instruments devices, the Data Acquisition Toolbox may automatically\n',...
            '    select Dual DMA mode for devices that support it.)  For Measurement Computing\n',...
            '    and Advantech devices, TransferMode can be Default, InterrputPerPoint,\n',...
            '    InterruptPerScan, DMA, or InterruptPerBlock. The value of TransferMode\n',...
            '    cannot be modified while the object is running.\n']);
    case 'bidirectionalbit'
        out = sprintf(['\n    BIDIRECTIONALBIT  device specific\n\n', ...
            '    The BiDirectionalBit specifies which bit in the parallel port control register\n', ...
            '    controls the Port 0 (Data) direction.\n']);
    case 'portaddress'
        out = sprintf(['\n    PORTADDRESS  device specific\n\n', ...
            '    The PortAddress property specifies the base address of the parallel port.\n']);
    case 'stoptriggertype'
        out = sprintf(['\n    STOPTRIGGERTYPE double\n\n',...
            '    StopTriggerType specifies the type of trigger which will stop acquisition. \n\n',...
            '    StopTriggerType can be None, HwDigital, or HwAnalog. If TriggerType is\n',...
            '    None, acquisition will stop when the specified number of samples are acquired, \n',...
            '    or the user issues a Stop command. If TriggerType is HwDigital, the acquisition \n',...
            '    is stopped on the rising or falling edge (as defined by the StopTriggerCondition \n',...
            '    property) of the TGIN input line. For HwAnalog, acquisition is stopped when the \n',...
            '    channel specified in the property StopTriggerChannel meets the condition specified\n',...
            '    in StopTriggerCondition and StopTriggerConditionValue.\n\n',...
            '    Acquisition can be continued beyond the HwDigital or HwAnalog stop trigger event,\n',...
            '    by setting StopTriggerDelay to a positive value.\n\n',...
            '    The value of StopTriggerType cannot be modified while the object is running.\n']);
    case 'stoptriggerchannel'
        out = sprintf(['\n    STOPTRIGGERCHANNEL double\n\n',...
            '    Specify the analog input channel serving as a hardware stop trigger source. \n\n',...
            '    StopTriggerChannel defines the channel number to be used for the HwAnalog setting\n',...
            '    of StopTriggerType. The channel must be a member of the analog input channel list.\n\n',...
            '    The value of StopTriggerChannel cannot be modified while the object is running.\n']);
    case 'stoptriggercondition'
        out = sprintf(['\n    STOPTRIGGERCONDITION  double\n\n',...
            '    Specify the condition that must be satisfied before a hardware stop trigger is executed. \n\n',...
            '    The available trigger conditions depend on the value of StopTriggerType. If StopTriggerType \n',...
            '    is HwDigital then StopTriggerType can be one of Rising or Falling. If StopTriggerType is \n',...
            '    HwAnalog, then StopTriggerCondition can be one of Above, Below, Inside or Outside. If \n',...
            '    StopTriggerType is None, then StopTriggerCondition can only be None.\n\n',...
            '    The value of StopTriggerCondition cannot be modified while the object is running.\n']);
    case 'stoptriggerconditionvalue'
        out = sprintf(['\n    STOPTRIGGERCONDITIONVALUE  double\n\n',...
            '    Specify the value for the stop trigger condition. \n\n',...
            '    This property defines the value or values for the StopTriggerCondition when StopTriggerType\n',...
            '    is set to HwAnalog. This property is ignored when StopTriggerType is not HwAnalog.\n\n',...
            '    The default value for this property is zero. StopTriggerConditionValue must be a two element \n',...
            '    vector [lo hi] when StopTriggerCondition is Inside or Outside, and must be a scalar when \n',...
            '    StopTriggerCondition is Above or Below.\n\n',...
            '    The value of StopTriggerConditionValue cannot be modified while the object is running.\n']);
    case 'stoptriggerdelay'
        out = sprintf(['\n    STOPTRIGGERDELAY  double\n\n',...
            '    Specify the time that acquisition continues after a hardware stop trigger event occurs.\n\n',...
            '    This property allows acquisition to continue beyond a hardware stop trigger event. The value \n',...
            '    of StopTriggerDelay is interpreted in StopTriggerDelayUnits, which may be either seconds or \n',...
            '    samples. StopTriggerDelay must be zero (the default) or a positive number: negative (pretrigger) \n',...
            '    delays cannot be defined.\n\n',...
            '    The value of StopTriggerDelay cannot be modified while the object is running.\n']);
    case 'stoptriggerdelayunits'
        out = sprintf(['\n    STOPTRIGGERDELAYUNITS  double\n\n',...
            '    Specify the units in which the StopTriggerDelay is measured.\n\n',...
            '    StopTriggerDelayUnits can be either Seconds or Samples.\n\n',...
            '    The value of StopTriggerDelayUnits cannot be modified while the object is running.\n']);

    otherwise
        errflag = 1;
        out = '';
        lasterr(['Invalid property name: ''' propname '''']);
end

