% IDPOLY は、IDPOLY モデル構造体を作成します。
%       
%   M= IDPOLY(A,B,C,D,F,LAM,T)
%
% M: つぎのモデルを記述するモデル構造体として出力
%   A(q) y(t) = [B(q)/F(q)] u(t-nk) + [C(q)/D(q)] e(t)
%   
% A, B, C, D, F は、多項式として入力します。A, C, D, F は、1から始まり
% B は、離散時間モデルの遅れを示すために先頭にゼロを付加します。多入力シ
% ステムに対して、B と F は、入力数を行数とする行列です。時系列データに対
% して、B と F は、空[]として入力します。POLY2TH は、TH2POLY の逆です。
%
% LAM はノイズの分散で、T はサンプリング間隔です。T に負の値を設定すると
% 連続モデルと解釈します。また、多項式は、ｓの降ベキの順に入力します。た
% とえば、A = 1,B = [1 2;0 3],C = 1,D = 1,F = [1 0;0 1],T = -1 は、Y = 
% (s+2)/s U1 + 3 U2 を連続システムで表したものです。
%
% 入力引数で、後に位置するC, D, F, LAM, T を省略した場合、1と解釈され、B 
% = [] の場合、 F = [] となります。
%
% M = IDPOLY 自身では、空オブジェクトを作成します。
%
% IDPOLY オブジェクトのすべてのプロパティを見るには、SET(IDPOLY) を使いま
% す。それ以外のプロパティを設定するには、SET、または、つぎのステートメン
% トを使います。
% 
%   M= IDPOLY(A,B,C,D,F,LAM,T,Property,Value,Property,Value,...)
%
% GET/SET で扱えるプロパティは、つぎのものです。
%   a,b,c,d,f: 多項式
%   Ts: モデルのサンプリング時間。Ts = 0 は、連続時間モデルを意味します。
%   NoiseVariance: ノイズの分散(イノベーション)
%   ParameterVector: 推定したモデル/ノミナルモデルのパラメータベクトル
%   CovarianceMatrix: 既に、推定されている場合、ParameterVector の共分散
%                     行列
%   
%   MODEL STRUCTURE プロパティ:
%   ModelStructure: つぎのフィールドを含む構造体(それぞれ、SET/GET でアク
%                   セス)
%     na: A-多項式の次数
%     nb: B-多項式の次数
%     nc: C-多項式の次数
%     nd: D-多項式の次数
%     nf: F-多項式の次数
%     InputDelay: 各入力の遅れを設定する行ベクトル。デフォルトは1です。
%     InitialState: フィルタの初期状態の取り扱い法の決定
%          'Zero': 初期条件をゼロに固定
%          'Estimate': 初期条件を推定
%          'Backcast': 初期条件を逆方向のプロセスにより陰的に推定
%          'Default': データやモデル構造の決定のために、上述のどちらかの
%                     手法を利用
%
%   ALGORITHM プロパティ             
%   Algorithm: つぎのフィールドをもつ構造体(それぞれ、SET/GET でアクセス)
%     Approach: 'Pem', 'Subspace', 'Arx', 'IV' のいずれか
%     Focus: つぎの中から選択
%          'Prediction': 予測のために最適化されたモデルの作成
%          'Simulation': シミュレーションのために最適化されたモデルの作成
%                        しかし、構造体プロパティに従ってノイズモデルも推
%                        定
%          'Prefilter': ????? で設定されるフィルタにより強調される周波数
%                       帯域に合わせたプリフィルタをデータに適用
%          'Normfit': ???? で定義される重み関数を使って、周波数領域で、L2
%                     ノルムに適合させるようにダイナミクスを決定
%     MaxIter: 繰り返しサーチ手法での最大繰り返し回数
%     Tolerance: 繰り返しサーチに対する終了規範。繰り返しにより改良される
%                部分が Tolerance 以下の場合、繰り返しは停止します。 
%     LimitError: 適合に対して、ロバスト化されたノルムの定義。LimitError*
%                 (標準偏差)より大きい誤差は、二乗ノルムよりも線形ノルム
%                 で影響が大きくなります。
%     MaxSize: アルゴリズムは、MaxSize 要素よりも多くの要素をもつ行列を作
%              成するよりも、ループを使うようにします。
%     SearchDirection: ローカルサーチの定義。つぎの中から設定します。
%          Lm: Levenberg-Marquard 法
%          Gn: Gauss-Newton サーチ
%          Gns: 非常に条件の良いヘシアンをもつサブ空間に限定した Gauss-
%               Newton サーチ
%     FixedParameters: サーチの間、FixedParameters の中のインデックスに対
%                      応したパラメータが固定されます。対応する順番に関し
%                      ては、マニュアルを参照してください。
%     Trace: 'On'、または、'Off'です。終了状況をスクリーン上に表示するか
%             否かの決定
%     Auxord: SubSpace アルゴリズムに、アルゴリズム的に詳細を与えるベクト
%             ル
%     Advanced: サーチに関する詳細を示す構造体
%
%   ESTIMATION 情報
%   EstimationInfo: 推定プロセスと結果に関する情報を含んだ構造体

% $Revision: 1.2 $ $Date: 2001/03/01 22:54:29 $
%   Copyright 1986-2001 The MathWorks, Inc.
