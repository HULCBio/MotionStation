% RSDEC   リードソロモン復号器
%
% DECODED = RSDEC(CODE,N,K) は、デフォルトの生成多項式を使用して、(N,K)  
% リードソロモン復号器を用いて、CODEの受信信号を復号します。
% CODE は、GF(2^m)を超えるシンボルのガロア配列であり、ここで、m は、
% シンボルごとのビット数です。CODEのN-要素の各行は、誤まりが含まれる
% 組織符号のワードを表わします。ここで、パリティシンボルは、最後にあり、
% 最左端のシンボルは最上位シンボルです。 N が、2^m-1より小さいとき、
% RSDECは、CODEが、誤りの含まれる短縮化符号であると仮定されます。
%   
% ガロア配列 DECODEDでは、各行は、CODEの対応する行を復号します。
% 復号の誤りは、 CODEの行が、(N-K)/2以上のエラーを含む場合に起こります。
% この場合RSDECは、CODEの行の最後から単にN-Kシンボルを除くことにより、
% DECODEDの対応する行を形成します。
%   
% DECODED = RSDEC(CODE,N,K,GENPOLY) は、GENPOLY にコードの生成多項式を
% 指定することを除いては、上のシンタックスと同じです。この場合、GENPOLY は
% 生成多項式を降べきの順にならべた、ガロア体上の係数ベクトルです。 
% 生成多項式は、N-K次をもつ必要があります。 デフォルトの生成多項式を
% 使用するためには、GENPOLY を [] に設定します。
%   
% DECODED = RSDEC(...,PARITYPOS) は、復号の際にパリティシンボルが
% 入力メッセージの前に付いているのか、後についているのかを指定します。
% 文字列 PARITYPOS は、'end'、あるいは、'beginning'のいずれかになることが
% できます。デフォルトは、'end'です。PARITYPOS が、'beginning'であると、
% 復号できない場合、RSDECの行の最後ではなく、始めからN-Kシンボルを除いた
% 結果となります。
%
% [DECODED,CNUMERR] = RSDEC(...) は、列ベクトルCNUMERRを出力します。
% 各要素は、CODEの対応する行の訂正されたエラーの数です。
% CNUMERRの-1の値は、CODEのその行の復号の誤りを示します。
%   
% [DECODED,CNUMERR,CCODE] = RSDEC(...) は、CODEの訂正したバージョン、
% CCODE を出力します。Galois 配列CCODEは、 CODEと同じフォーマットです。
% CODE のある行で、復号の誤りが起こる場合、CCODEの対応する行は、変更
% されない行を含みます。 
%
% 例題:
%      n=7; k=3;                       % コードワードとメッセージワードの長さ
%      m=3;                               % シンボルごとのビット数
%      msg  = gf([7 4 3;6 2 2;3 0 5],m)   % 3つのk-シンボルメッセージワード
%      code = rsenc(msg,n,k);             % 2つのn-シンボルコードワード
%      %1番目の語に1つのエラー、2番目に2つのエラー、3番目に3つのエラーを追加
%      errors = gf([3 0 0 0 0 0 0;4 5 0 0 0 0 0;6 7 7 0 0 0 0],m);
%      codeNoi = code + errors
%      [dec,cnumerr] = rsdec(codeNoi,n,k) % 復号の誤り : cnumerr(3) は-1です
%
% 参考 RSENC, GF, RSGENPOLY.


% Copyright 1996-2002 The MathWorks, Inc.
% $Revision: 1.2.4.1 $  $Date: 2003/06/23 04:35:12 $ 
