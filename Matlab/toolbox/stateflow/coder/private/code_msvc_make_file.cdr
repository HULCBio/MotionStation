function code_msvc_make_file(fileNameInfo)
% CODE_MSVC_MAKE_FILE(FILENAMEINFO)

%   Copyright 1995-2004 The MathWorks, Inc.
%   $Revision: 1.20.4.8 $  $Date: 2004/04/15 00:51:32 $

	global gMachineInfo gTargetInfo
	code_machine_objlist_file(fileNameInfo);


	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.makeBatchFile);
  sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end
	if(~isempty(fileNameInfo.mexOptsFile))
...call "$fileNameInfo.mexOptsFile$"
	end
...nmake -f $fileNameInfo.msvcMakeFile$
	fclose(file);

	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.msvcMakeFile);
  sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end


	DOLLAR = '$';
...# ------------------- Required for MSVC nmake ---------------------------------
...# This file should be included at the top of a MAKEFILE as follows:
...
...
	if(length(fileNameInfo.userMakefiles))
		for i=1:length(fileNameInfo.userMakefiles)
...!include "$fileNameInfo.userMakefiles{i}$"
		end
	end
...!include <ntwin32.mak>
...
...MACHINE     = $gMachineInfo.machineName$
...TARGET      = $gMachineInfo.targetName$
	if length(gMachineInfo.charts)
...CHART_SRCS 	= \
		for chart=gMachineInfo.charts(1:end-1)
			chartNumber = sf('get',chart,'chart.number');
...		$fileNameInfo.chartSourceFiles{chartNumber+1}$\
		end
			chartNumber = sf('get',gMachineInfo.charts(end),'chart.number');
...		$fileNameInfo.chartSourceFiles{chartNumber+1}$
	else
...CHART_SRCS =
	end
...MACHINE_SRC	= $fileNameInfo.machineSourceFile$
	if(~gTargetInfo.codingLibrary & gTargetInfo.codingSFunction)
...MACHINE_REG = $fileNameInfo.machineRegistryFile$
	else
...MACHINE_REG =
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingMEX
...MEX_WRAPPER = $fileNameInfo.mexWrapperFile$
	else
...MEX_WRAPPER =
	end

   	userAbsSources = {};
   	userSources    = {};
   	for i=1:length(fileNameInfo.userAbsSources)
   		[pathStr, nameStr, extStr] = fileparts(fileNameInfo.userAbsSources{i});
   		extStr = lower(extStr);
   		if(strcmp(extStr, '.c') || strcmp(extStr,'.cpp'))
   			userAbsSources{end+1} = fileNameInfo.userAbsSources{i};
   			userSources{end+1}    = fileNameInfo.userSources{i};
   		else
   			error(['Unrecognized file extension: ' extStr]);
   		end
   	end

...MAKEFILE    = $fileNameInfo.msvcMakeFile$

...MATLAB_ROOT	= $fileNameInfo.matlabRoot$
...BUILDARGS   =

...
...#--------------------------- Tool Specifications ------------------------------
...#
...#
...MSVC_ROOT1 = $DOLLAR$(MSDEVDIR:SharedIDE=vc)
...MSVC_ROOT2 = $DOLLAR$(MSVC_ROOT1:SHAREDIDE=vc)
...MSVC_ROOT  = $DOLLAR$(MSVC_ROOT2:sharedide=vc)
...
...# Compiler tool locations, CC, LD, LIBCMD:
...CC     = cl.exe
...LD     = link.exe
...LIBCMD = lib.exe

...#------------------------------ Include/Lib Path ------------------------------
...
	userIncludeDirString = '';
	if(length(fileNameInfo.userIncludeDirs))
		for i = 1:length(fileNameInfo.userIncludeDirs)
			userIncludeDirString	= [userIncludeDirString,' /I "',fileNameInfo.userIncludeDirs{i},'"'];
		end
	end
...USER_INCLUDES   = $userIncludeDirString$
...ML_INCLUDES     = /I "$DOLLAR$(MATLAB_ROOT)\extern\include"
...SL_INCLUDES     = /I "$DOLLAR$(MATLAB_ROOT)\simulink\include"
...SF_INCLUDES     = /I "$fileNameInfo.sfcMexLibInclude$" /I "$fileNameInfo.sfcDebugLibInclude$"
...
if (~isempty(fileNameInfo.dspLibInclude))
...DSP_INCLUDES    = /I "$fileNameInfo.dspLibInclude$"
else
...DSP_INCLUDES    =
end
...
...COMPILER_INCLUDES = /I "$DOLLAR$(MSVC_ROOT)\include"
...
...INCLUDE_PATH = $DOLLAR$(USER_INCLUDES) $DOLLAR$(ML_INCLUDES) $DOLLAR$(SL_INCLUDES) $DOLLAR$(SF_INCLUDES) $DOLLAR$(DSP_INCLUDES)
...LIB_PATH     = "$DOLLAR$(MSVC_ROOT)\lib"

...

if(0)
...#----------------- Compiler and Linker Options --------------------------------
...
...CFLAGS = /nologo -c -Zp8 -G5 -W3 /MD -DNDEBUG -DMATLAB_MEX_FILE
...
else
...CFLAGS = $DOLLAR$(COMPFLAGS) /MD
end
...LDFLAGS = /nologo /dll /OPT:NOREF /export:mexFunction
...


...#----------------------------- Source Files -----------------------------------
...
...REQ_SRCS  = $DOLLAR$(MACHINE_SRC) $DOLLAR$(MACHINE_REG) $DOLLAR$(MEX_WRAPPER) $DOLLAR$(CHART_SRCS)
...
	if(length(userAbsSources))
...USER_ABS_OBJS 	= \
		for i=1:length(userAbsSources)
			[pathStr, nameStr, extStr] = fileparts(userAbsSources{i});
			objStr = [nameStr '.obj'];
...		"$objStr$" \
		end
	else
...USER_ABS_OBJS =
	end
...
...OBJS = $DOLLAR$(REQ_SRCS:.c=.obj) $DOLLAR$(USER_ABS_OBJS)
...OBJLIST_FILE = $fileNameInfo.machineObjListFile$

	stateflowLibraryString = ['"', fileNameInfo.sfcMexLibFile ,'"'];
	stateflowLibraryString = [stateflowLibraryString,' "', fileNameInfo.sfcDebugLibFile ,'"'];


...SFCLIB = $stateflowLibraryString$
	if(length(fileNameInfo.userLibraries))
...USER_LIBS = \
		for i=1:length(fileNameInfo.userLibraries)-1
...	"$fileNameInfo.userLibraries{i}$" \
		end
...	"$fileNameInfo.userLibraries{end}$"
	else
...USER_LIBS =
	end
	numLinkMachines = length(fileNameInfo.linkLibFullPaths);
	if(numLinkMachines)
...LINK_MACHINE_LIBS = \
		for i = 1:numLinkMachines-1
...	"$fileNameInfo.linkLibFullPaths{i}$" \
		end
...	"$fileNameInfo.linkLibFullPaths{end}$"
	else
...LINK_MACHINE_LIBS =
	end

...
if (~isempty(fileNameInfo.dspLibFile))
...DSP_LIBS    = "$fileNameInfo.dspLibFile$"
else
...DSP_LIBS    =
end

...
...#--------------------------------- Rules --------------------------------------
...
	if gTargetInfo.codingLibrary
...$DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib : $DOLLAR$(MAKEFILE) $DOLLAR$(OBJS) $DOLLAR$(SFCLIB) $DOLLAR$(USER_LIBS)
...	@echo ### Linking ...
...	$DOLLAR$(LD) -lib /OUT:$DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib @$DOLLAR$(OBJLIST_FILE) $DOLLAR$(USER_LIBS)
...	@echo ### Created Stateflow library $DOLLAR$@

	else
		if(gTargetInfo.codingMEX & ~isempty(sf('get',gMachineInfo.target,'target.mexFileName')))

...MEX_FILE_NAME_WO_EXT = $sf('get',gMachineInfo.target,'target.mexFileName')$
		else
...MEX_FILE_NAME_WO_EXT = $DOLLAR$(MACHINE)_$DOLLAR$(TARGET)
		end
...MEX_FILE_NAME = $DOLLAR$(MEX_FILE_NAME_WO_EXT).$mexext$
		mapCsfBinary = fullfile(fileNameInfo.matlabRoot,'bin','win32','mapcsf.exe');
		if(~exist(mapCsfBinary,'file'))
			mapCsfBinary = fullfile(fileNameInfo.matlabRoot,'tools','win32','mapcsf.exe');
			if(~exist(mapCsfBinary,'file'))
				mapCsfBinary = fullfile(fileNameInfo.matlabRoot,'tools','nt','mapcsf.exe');
				if(~exist(mapCsfBinary,'file'))
					mapCsfBinary = '';
				end
			end
		end

		if(~isempty(mapCsfBinary))
...MEX_FILE_CSF =  $DOLLAR$(MEX_FILE_NAME_WO_EXT).csf
		else
...MEX_FILE_CSF =
		end

...all : $DOLLAR$(MEX_FILE_NAME) $DOLLAR$(MEX_FILE_CSF)
...
		libMexDir = fullfile(matlabroot,'extern','lib','win32','microsoft','msvc50');
...MEXLIB = "$fullfile(libMexDir,'libmx.lib')$" "$fullfile(libMexDir,'libmex.lib')$" "$fullfile(libMexDir,'libmat.lib')$" "$fullfile(libMexDir,'libfixedpoint.lib')$" "$fullfile(libMexDir,'libut.lib')$"
...
...$DOLLAR$(MEX_FILE_NAME) : $DOLLAR$(MAKEFILE) $DOLLAR$(OBJS) $DOLLAR$(SFCLIB) $DOLLAR$(USER_LIBS)
...	@echo ### Linking ...
...	$DOLLAR$(LD) $DOLLAR$(LDFLAGS) /OUT:$DOLLAR$(MEX_FILE_NAME) /map:"$DOLLAR$(MEX_FILE_NAME_WO_EXT).map" $DOLLAR$(USER_LIBS) $DOLLAR$(SFCLIB) $DOLLAR$(MEXLIB) $DOLLAR$(LINK_MACHINE_LIBS) $DOLLAR$(DSP_LIBS) @$DOLLAR$(OBJLIST_FILE)
...	@echo ### Created $DOLLAR$@
...
		if(~isempty(mapCsfBinary))
...$DOLLAR$(MEX_FILE_CSF) : $DOLLAR$(MEX_FILE_NAME)
...	"$mapCsfBinary$" $DOLLAR$(MEX_FILE_NAME)
		end
	end

....c.obj :
...	@echo ### Compiling "$DOLLAR$<"
...	$DOLLAR$(CC) $DOLLAR$(CFLAGS) $DOLLAR$(INCLUDE_PATH) "$DOLLAR$<"
...
		for i=1:length(userAbsSources)
			[pathStr, nameStr, extStr] = fileparts(userAbsSources{i});
			objFileName = [nameStr '.obj'];
...$objFileName$ :	"$userSources{i}$"
...	@echo ### Compiling "$userSources{i}$"
...	$DOLLAR$(CC) $DOLLAR$(CFLAGS) $DOLLAR$(INCLUDE_PATH) "$userSources{i}$"
		end

	fclose(file);
