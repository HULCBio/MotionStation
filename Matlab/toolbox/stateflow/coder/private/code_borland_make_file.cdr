function code_borland_make_file(fileNameInfo)
% CODE_BORLAND_MAKE_FILE(FILENAMEINFO)

%   Copyright 1995-2004 The MathWorks, Inc.
%   $Revision: 1.11.2.6 $  $Date: 2004/04/15 00:51:06 $

	global gMachineInfo gTargetInfo
	 
	code_machine_objlist_file(fileNameInfo);

	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.makeBatchFile);
   sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end
	if(~isempty(fileNameInfo.mexOptsFile))
...call "$fileNameInfo.mexOptsFile$"
	end
...make -f $fileNameInfo.borlandMakeFile$
	fclose(file);

	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.borlandMakeFile);
  sf_echo_generating('Coder',fileName);
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end

	DOLLAR = '$';
	for i=1:length(fileNameInfo.userMakefiles)
...!include $fileNameInfo.userMakefiles{i}
	end
...MACHINE     = $gMachineInfo.machineName$
...TARGET		= $gMachineInfo.targetName$
...CHART_SRCS 	= 
	for chart=gMachineInfo.charts
		chartNumber = sf('get',chart,'chart.number');
...CHART_SRCS = $DOLLAR$(CHART_SRCS) $fileNameInfo.chartSourceFiles{chartNumber+1}$
	end
...MACHINE_SRC	= $fileNameInfo.machineSourceFile$
	if(~gTargetInfo.codingLibrary & gTargetInfo.codingSFunction)
...MACHINE_REG = $fileNameInfo.machineRegistryFile$
	else
...MACHINE_REG = 
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingMEX
...MEX_WRAPPER = $fileNameInfo.mexWrapperFile$
	else
...MEX_WRAPPER =
	end

...USER_ABS_SRCS 	=
	for i=1:length(fileNameInfo.userAbsSources)
...USER_ABS_SRCS	= $DOLLAR$(USER_ABS_SRCS)	$fileNameInfo.userAbsSources{i}$
	end
	userSrcPathString	= '';
	if(length(fileNameInfo.userAbsPaths)>0)
		userSrcPathString = [fileNameInfo.userAbsPaths{1}];
		for i=2:length(fileNameInfo.userAbsPaths)
			userSrcPathString = [userSrcPathString,';',fileNameInfo.userAbsPaths{i}];
		end
	end
...USER_SRC_PATHS = $userSrcPathString$
...MAKEFILE = $fileNameInfo.borlandMakeFile$

...MATLAB_ROOT	= $fileNameInfo.matlabRoot$
... 
...#--------------------------------- Tool Locations -----------------------------
...#
...# Modify the following macro to reflect where you have installed
...# the Borland C/C++ Compiler.
...#
...!ifndef BORLAND
...!error BORLAND environmental variable must be defined
...!endif
...  
...#---------------------------- Tool Definitions ---------------------------
...  
...CC     = bcc32
...LD     = tlink32
...LIBCMD = tlib
...LINKCMD = tlink32
...   
...#------------------------------ Include Path -----------------------------
	userIncludeDirString = '';
	if(length(fileNameInfo.userIncludeDirs))
		for i = 1:length(fileNameInfo.userIncludeDirs)
			userIncludeDirString	= [userIncludeDirString,fileNameInfo.userIncludeDirs{i},';'];
		end
	end
...USER_INCLUDES = $userIncludeDirString$
...  
...MATLAB_INCLUDES = $DOLLAR$(MATLAB_ROOT)\simulink\include;
...MATLAB_INCLUDES = $DOLLAR$(MATLAB_INCLUDES);$DOLLAR$(MATLAB_ROOT)\extern\include;
...MATLAB_INCLUDES = $DOLLAR$(MATLAB_INCLUDES);$fileNameInfo.sfcMexLibInclude$;
...MATLAB_INCLUDES = $DOLLAR$(MATLAB_INCLUDES);$fileNameInfo.sfcDebugLibInclude$;
if (~isempty(fileNameInfo.dspLibInclude))
...MATLAB_INCLUDES    = $DOLLAR$(MATLAB_INCLUDES);$fileNameInfo.dspLibInclude$;
end

...  
...COMPILER_INCLUDES = $DOLLAR$(BORLAND)\include;$DOLLAR$(BORLAND)\include\win32;
... 
...INCLUDES = $DOLLAR$(USER_INCLUDES)$DOLLAR$(MATLAB_INCLUDES)$DOLLAR$(COMPILER_INCLUDES)
...  
...#-------------------------------- C Flags --------------------------------
...REQ_OPTS = -c -3 -P- -w- -pc -a8
... 
...
...MEX_DEFINE = -DMATLAB_MEX_FILE
...OPT_OPTS = -O2
...CC_OPTS =  $DOLLAR$(MEX_DEFINE) $DOLLAR$(REQ_OPTS) $DOLLAR$(OPT_OPTS) $DOLLAR$(OPTS)
...CFLAGS = $DOLLAR$(CC_OPTS)	-I$DOLLAR$(INCLUDES)
... 
...#------------------------------- Source Files ---------------------------------
...OBJLIST_FILE = $fileNameInfo.machineObjListFile$

	stateflowLibraryString = fileNameInfo.sfcMexLibFile;
	stateflowLibraryString = [stateflowLibraryString,' ',fileNameInfo.sfcDebugLibFile];
...SFCLIB = $stateflowLibraryString$
   if (~isempty(fileNameInfo.dspLibFile))
...SFCLIB    = $DOLLAR$(SFCLIB) $fileNameInfo.dspLibFile$
   end

...USER_LIBS =
	for i=1:length(fileNameInfo.userLibraries)
...USER_LIBS = $DOLLAR$(USER_LIBS) $fileNameInfo.userLibraries{i}$
	end
	numLinkMachines = length(fileNameInfo.linkLibFullPaths);
...LINK_MACHINE_LIBS =
	if(~gTargetInfo.codingLibrary & numLinkMachines)
		for i = 1:numLinkMachines
...LINK_MACHINE_LIBS	= $DOLLAR$(LINK_MACHINE_LIBS) $fileNameInfo.linkLibFullPaths{i}$
		end
	end
... 
...REQ_OBJS  =
	if gTargetInfo.codingLibrary
...REQ_OBJS_WITH_PLUSSES =
	end
	for i=1:length(fileNameInfo.userAbsSources)
		userSourceFile = fileNameInfo.userAbsSources{i};
		userObjFile = code_borland_change_ext(userSourceFile, 'obj');
		%userObjFile = [userSourceFile(1:end-1),'obj'];
...REQ_OBJS = $DOLLAR$(REQ_OBJS) $userObjFile$
		if gTargetInfo.codingLibrary
...REQ_OBJS_WITH_PLUSSES = $DOLLAR$(REQ_OBJS_WITH_PLUSSES) +$userObjFile$
		end
	end
	for chart=gMachineInfo.charts
		chartNumber = sf('get',chart,'chart.number');
		chartSourceFile = fileNameInfo.chartSourceFiles{chartNumber+1};
		chartObjFile = code_borland_change_ext(chartSourceFile, 'obj');
		%chartObjFile = [chartSourceFile(1:end-1),'obj'];
...REQ_OBJS = $DOLLAR$(REQ_OBJS) $chartObjFile$
		if gTargetInfo.codingLibrary
...REQ_OBJS_WITH_PLUSSES = $DOLLAR$(REQ_OBJS_WITH_PLUSSES) +$chartObjFile$
		end
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingSFunction
		machineRegistryFile = fileNameInfo.machineRegistryFile;
		machineRegistryFile = code_borland_change_ext(machineRegistryFile, 'obj');
		%machineRegistryFile = [machineRegistryFile(1:end-1),'obj'];
...REQ_OBJS = $DOLLAR$(REQ_OBJS) $machineRegistryFile$
	end
	if ~gTargetInfo.codingLibrary & gTargetInfo.codingMEX
		mexWrapperFile = fileNameInfo.mexWrapperFile;
		mexWrapperFile = code_borland_change_ext(mexWrapperFile, 'obj');
		%mexWrapperFile = [mexWrapperFile(1:end-1),'obj'];
...REQ_OBJS = $DOLLAR$(REQ_OBJS) $mexWrapperFile$
	end
	machineSourceFile = fileNameInfo.machineSourceFile;
	machineSourceFile = code_borland_change_ext(machineSourceFile, 'obj');
	%machineSourceFile = [machineSourceFile(1:end-1),'obj'];
...REQ_OBJS = $DOLLAR$(REQ_OBJS) $machineSourceFile$
	if gTargetInfo.codingLibrary
...REQ_OBJS_WITH_PLUSSES = $DOLLAR$(REQ_OBJS_WITH_PLUSSES) +$machineSourceFile$
	end
... 
...OBJS = $DOLLAR$(REQ_OBJS)
	if gTargetInfo.codingLibrary
...OBJS_WITH_PLUSSES = $DOLLAR$(REQ_OBJS_WITH_PLUSSES)
	end
	if gTargetInfo.codingLibrary
...LIBS = $DOLLAR$(USER_LIBS)
	else
...LIBS = $DOLLAR$(USER_LIBS) $DOLLAR$(LINK_MACHINE_LIBS) libmexbor.lib libmxbor.lib libfixbor.lib libutbor.lib $DOLLAR$(SFCLIB)
	end
... 
...#--------------------------------- Rules --------------------------------------
....autodepend
... 
... 
	if gTargetInfo.codingLibrary
...$DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib : $DOLLAR$(OBJS)
...	$DOLLAR$(LIBCMD) @&&|
...	$DOLLAR$(MACHINE)_$DOLLAR$(TARGET).lib $DOLLAR$(LIBS) $DOLLAR$(OBJS_WITH_PLUSSES)
...|
	else
		if(gTargetInfo.codingMEX & ~isempty(sf('get',gMachineInfo.target,'target.mexFileName')))
...MEX_FILE_NAME = $sf('get',gMachineInfo.target,'target.mexFileName')$.$mexext$
...ABS_MEX_FILE_NAME = $sf('get',gMachineInfo.target,'target.mexFileName')$
		else
...MEX_FILE_NAME = $DOLLAR$(MACHINE)_$DOLLAR$(TARGET).$mexext$
...ABS_MEX_FILE_NAME = $DOLLAR$(MACHINE)_$DOLLAR$(TARGET)
		end

...$DOLLAR$(MEX_FILE_NAME) : $DOLLAR$(MAKEFILE) $DOLLAR$(OBJS) $DOLLAR$(SFCLIB)
...	$DOLLAR$(BORLAND)\bin\implib -i libmxbor.lib "$DOLLAR$(MATLAB_ROOT)\extern\include\_libmx.def"
...	$DOLLAR$(BORLAND)\bin\implib -i libmexbor.lib "$DOLLAR$(MATLAB_ROOT)\extern\include\_libmex.def"
...	$DOLLAR$(BORLAND)\bin\implib -i libfixbor.lib "$DOLLAR$(MATLAB_ROOT)\extern\include\_libfixedpoint.def"
...	$DOLLAR$(BORLAND)\bin\implib -i libutbor.lib "$DOLLAR$(MATLAB_ROOT)\extern\include\_libut.def"
...	$DOLLAR$(CC) @&&|
...	-e$DOLLAR$(MEX_FILE_NAME) -tWCD -L$DOLLAR$(BORLAND)\lib -L$DOLLAR$(BORLAND)\lib\32bit  $DOLLAR$(LIBS) $DOLLAR$(OBJS) 
...|
...	del libmexbor.lib;
...	del libmxbor.lib;
...	del libfixbor.lib;
... del libutbor.lib
	end
... 
...# Source Path
....path.c = .;$DOLLAR$(USER_SRC_PATHS)
....path.cpp = .;$DOLLAR$(USER_SRC_PATHS)
....path.h = $DOLLAR$(INCLUDES)
...
....c.obj : 
...	@echo  Compiling $DOLLAR$@
...	@$DOLLAR$(CC) @&&|
...	$DOLLAR$(CFLAGS) $DOLLAR$(<)
...|
...
....cpp.obj : 
...	@echo  Compiling $DOLLAR$@
...	@$DOLLAR$(CC) @&&|
...	$DOLLAR$(CFLAGS) $DOLLAR$(<)
...|


	fclose(file);


function result = code_borland_change_ext(filename, ext)

[path_str, name_str, ext_str] = fileparts(filename);

result = [name_str '.' ext];