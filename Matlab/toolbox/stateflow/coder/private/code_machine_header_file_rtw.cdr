function code_machine_header_file_rtw(fileNameInfo)
% CODE_MACHINE_HEADER_FILE(FILENAMEINFO)

%   Copyright 1995-2003 The MathWorks, Inc.
%   $Revision: 1.1.6.6 $  $Date: 2004/04/15 00:51:22 $

	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%%%  GLOBAL VARIABLES
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	
	%%%%%%%%%%%%%%%%%%%%%%%%% Coding options
	global gMachineInfo gTargetInfo



	fileName = fullfile(fileNameInfo.targetDirName,fileNameInfo.machineHeaderFile);
    sf_echo_generating('Coder',fileName);
    machine = gMachineInfo.machineId;
    
	file = fopen(fileName,'wt');
	if file<3
		construct_coder_error([],sprintf('Failed to create file: %s.',fileName),1);
	end
...%implements "machineHeader" "C"
...%function CacheOutputs(block,system,pubHFile,prvHFile,cFile) void
		
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% A few useful defines and includes from RTW
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
...%if FEVAL("sf_rtw","usesDSPLibrary",CompiledModel.Name)
...   %<LibAddToCommonIncludes("dsp_$fileNameInfo.rtwDspLibIncludeFileName$")>
...%endif
    if ~gTargetInfo.codingLibrary
...%if PurelyIntegerCode==0
...%<SLibAddToCommonIncludes("<stdlib.h>")>
...%<SLibAddToCommonIncludes("<math.h>")>
...%endif
...%openfile definesBuf
...#ifndef min
...# ifndef rt_MIN
...#  include "rtlibsrc.h"
...# endif
...# define min rt_MIN
...#endif
...#ifndef max
...# define max rt_MAX
...#endif
...%closefile definesBuf
...%<SLibSetModelFileAttribute(prvHFile,"Defines",definesBuf)>
    end
    
    if(gTargetInfo.codingLibrary & gMachineInfo.parentTarget~=gMachineInfo.target)
      % custom code for this library is already included in the parent machine
    else
       %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
       %% Custom Code Included on the target
       %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
...   %openfile ccBuf
   	customCodeString = sf('get',gMachineInfo.parentTarget,'target.customCode');
   	customCodeString = sf('Private','expand_double_byte_string',customCodeString);
...   $customCodeString$
...
...   %closefile ccBuf
...   %<SLibSetModelFileAttribute(prvHFile,"Includes",ccBuf)>
...
   end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% Types
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
...%openfile typedefsBuf   
    types = sf('Cg','get_types',machine);
    for type = types
         codeStr = sf('Cg','get_type_def',type,0);
...   $codeStr$         
    end
...%closefile typedefsBuf
...%<SLibSetModelFileAttribute(prvHFile,"Typedefs",typedefsBuf)>

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% Named Constants
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
...%openfile definesBuf   
    namedConsts = sf('Cg','get_named_consts',machine);
    for namedConst = namedConsts
         codeStr = sf('Cg','get_named_const_def',namedConst,0);
...   $strip_trailing_new_lines(codeStr)$         
    end
...%closefile definesBuf
...%<SLibSetModelFileAttribute(prvHFile,"Defines",definesBuf)>


    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% Vars
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
...%openfile externDataBuf
    vars = sf('Cg','get_non_exported_vars',machine);
    for var = vars
         codeStr = sf('Cg','get_var_decl',var,0);
...   $strip_trailing_new_lines(codeStr)$         
    end
...%closefile externDataBuf
...%<SLibSetModelFileAttribute(prvHFile,"ExternData",externDataBuf)>

...%openfile externDataBuf
    vars = sf('Cg','get_exported_vars',machine);
    for var = vars
         codeStr = sf('Cg','get_var_decl',var,0);
...   $strip_trailing_new_lines(codeStr)$         
    end
...%closefile externDataBuf
...%<SLibSetModelFileAttribute(pubHFile,"ExternData",externDataBuf)>

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%% function Decls
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
...%openfile externDataBuf
...
    funcs = sf('Cg','get_functions',machine);
    for func = funcs
        codeStr = sf('Cg','get_fcn_decl',func,0);
...   $strip_trailing_new_lines(codeStr)$         
    end
    if(gTargetInfo.codingLibrary & gMachineInfo.parentTarget~=gMachineInfo.target)
      % exported fcns are already included in the parent machine
    else
%       dump_exported_fcn_prototypes(file);
    end
...%closefile externDataBuf
...%<SLibSetModelFileAttribute(prvHFile,"ExternFcns",externDataBuf)>

...%endfunction %% CacheOutputs
...	
...
	fclose(file);
	try_indenting_file(fileName);

	 		