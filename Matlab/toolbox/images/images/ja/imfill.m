% IMFILL  イメージ領域の塗り潰し
% BW2 = IMFILL(BW1,LOCATIONS) は、LOCATIONS で設定した点からスタートして
% 入力バイナリイメージ BW1 のバックグランドピクセルに塗り潰し演算を適用し
% ます。LOCATIONS は、P 行1列のベクトルで、スタートの位置の線形インデック
% スを含んでいます。LOCATIONS は、個々の行が、スタートの位置の一つの配列
% インデックスを含む、P 行 NDIMS(IM1) 列の行列で設定することもできます。
%
% BW2 = IMFILL(BW1,'holes') は、入力イメージ内のホールの塗り潰しを行いま
% す。ホールは、イメージのエッジからバックグランドの中で塗り潰すことでも
% 残るバックグランドピクセルの集合です。
%
% I2 = IMFILL(I1) は、強度イメージ I1 の中のホールを塗り潰します。この
% 場合、ホールは、より明るいピクセルで囲まれた暗いピクセルが占める領域
% を意味します。
%
% 対話的な使用
% ---------------
% BW2 = IMFILL(BW1) は、BW1 をスクリーン上に表示し、マウスを使って、スタ
% ート点を選択します。通常のマウスクリック法を使って、点を付加します。前
% に選択した点を削除するには、<BACKSPACE>、または、<DELETE> を押します。
% Shift キーを押してクリックするか、右クリック、または、ダブルクリックに
% より、選択の最終の点の選択を行い、その後で、塗り潰しを始めます。点を付
% 加しないで、選択を終了するには、<RETURN> を押します。会話的な使い方は、
% 2次元イメージのみでサポートされています。
%
% シンタックス [BW2,LOCATIONS] = IMFILL(BW1) は、マウスを使って選択したス
% タート点を出力することができます。出力 LOCATIONS は、常に、入力イメージ
% の中の線形インデックスのベクトルの型をしています。
%
% 連結の設定
% -----------------------
% デフォルトで、IMFILL は、2 次元入力に対して、4-連結バックグランド近傍
% を、3 次元入力に対して、6-連結バックグランド連結を使います。より高次元
% については、デフォルトのバックグランド連結は、CONNDEF(NUM_DIMS,'mini-
% mal') です。ユーザは、つぎのシンタックスのいずれかを使って、デフォルト
% の連結を書き換えることができます。
%
%       BW2 = IMFILL(BW1,LOCATIONS,CONN)
%       BW2 = IMFILL(BW1,CONN,'holes')
%       I2  = IMFILL(I1,CONN)
%
% デフォルトの連結を書き換え、スタートの位置を会話的に指定するには、つぎ
% のシンタックスを使ってください。
%
%       BW2 = IMFILL(BW1,0,CONN)
%
% CONN は、つぎのいずれかのスカラ値を設定します。
%
%       4     2次元4連結近傍
%       8     2次元8連結近傍
%       6     3次元6連結近傍
%       18    3次元18連結近傍
%       26    3次元26連結近傍
%
% 連結度は、CONN に対して、0と1を要素とする3 x 3 x 3 x ... x 3 の行列を
% 使って、任意の次元に対して、より一般的に定義できます。値1は、CONN の中
% 心要素に関連して近傍の位置を設定します。CONN は、中心要素に対して、対称
% である必要があります。
%
% クラスサポート
% -------------
% 入力イメージは数値または logical で、実数の非スパースでなければなりま
% せん。それは任意の次元をもちます。出力イメージは、入力イメージと同じ
% クラスになります。
%
% 例題
% --------
% 設定したスタートの位置からバイナリイメージのバックグランドの中の塗り潰
% しを行います。
%
%       BW1 = logical([1 0 0 0 0 0 0 0
%                      1 1 1 1 1 0 0 0
%                      1 0 0 0 1 0 1 0
%                      1 0 0 0 1 1 1 0
%                      1 1 1 1 0 1 1 1
%                      1 0 0 1 1 0 1 0
%                      1 0 0 0 1 0 1 0
%                      1 0 0 0 1 1 1 0]);
%       BW2 = imfill(BW1,[3 3],8)
%
% バイナリイメージのホールの中を塗り潰します。
%
%       BW4 = ~im2bw(imread('blood1.tif'));
%       BW5 = imfill(BW4,'holes');
%       imshow(BW4), figure, imshow(BW5)
%
% 強度イメージのホールの中を塗り潰します。
%
%       I = imread('enamel.tif');
%       I2 = imcomplement(imfill(imcomplement(I),'holes'));
%       imshow(I), figure, imshow(I2)
%
% 参考： BWSELECT, IMRECONSTRUCT, ROIFILL.



%   Copyright 1993-2002 The MathWorks, Inc.  
