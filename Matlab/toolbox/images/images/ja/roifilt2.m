% ROIFILT2   イメージの選択した対象領域のフィルタリング
% J = ROIFILT2(H,I,BW) は、I の中のデータに2次元フィルタ H を適用
% します。BW は、フィルタリング時にマスクとして使う I と同じ大きさ
% のバイナリイメージです。ROIFILT2 は、BW が1の部分に対応するピクセ
% ルにフィルタ処理を行った値と BW が0の部分に対応するピクセルにフィ
% ルタ処理を適用しない値とを合わせたイメージを出力します。この構文
% で、ROIFILT2 は、フィルタを実行するために IMFILTER を呼び出します。
%
% J = ROIFILT2(I,BW,FUN) は、関数 FUN を使って I のデータを処理しま
% す。結果出力される J は、BW が1の部分に対応するピクセルに対して計
% 算された値をもち、BW が0の部分に対応するピクセルは I と同じ値を
% もったものです。
%
% FUNは、4つの方法のいずれかで指定される関数です。4つの方法とは、
% インラインオブジェクト、@、 関数名を含む文字列、MATLABの式を含む文字列
% として指定する場合があります。
%
% J = ROIFILT2(I,BW,FUN,P1,P2,...) は、補助的なパラメータ P1,P2,... 
% を FUN に渡します。
%
% クラスサポート
% -------------
% フィルタ H を含んだ構文に対して、入力イメージは、uint8、uint16、ま
% たは doubleのいずれのクラスもサポートしています。出力配列 J は、ク
% ラス double です。関数を含んだ構文に対して、I は FUN によりサポー
% トされているクラスで、J のクラスは、FUN からの出力のクラスに依存し
% ます。
%
% 例題
% ----
%       I = imread('eight.tif');
%       c = [222 272 300 270 221 194];
%       r = [21 21 75 121 121 75];
%       BW = roipoly(I,c,r);
%       H = fspecial('unsharp');
%       J = roifilt2(H,I,BW);
%       imshow(I), figure, imshow(J)
%
% 参考  IMFILTER, FILTER2, FUNCTION_HANDLE, INLINE, ROIPOLY.



%   Copyright 1993-2002 The MathWorks, Inc.
