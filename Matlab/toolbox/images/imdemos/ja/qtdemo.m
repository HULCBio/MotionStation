% QTDEMO   4分割のデモ
%   
% 4分割は、イメージを類似するピクセルを含むブロックに、さらに分ける演算
% です。通常、ブロックは正方形です。しかし、場合によっては、長方形にも
% なります。このデモの目的は、ブロック内のピクセル値の範囲が、特定の
% スレッシュホールドより大きくない場合に、ブロック内のピクセルは、類似
% しているとしています。4分割は、様々なイメージ解析と圧縮アプリケーション
% で使用されます。
%
% デモウィンドウで、異なるイメージに対してスレッシュホールド値を調整して
% ください。スレッシュホールド値が大きい場合には、数の少なくて、大きい
% ブロックになります。そして、"Block means" イメージは、オリジナルと
% 全く異なるものです。スレシュホールド値が小さいと、数の多い、小さい
% ブロックになります。"Block means" イメージがオリジナルと非常に類似
% したものです。
%
% 関数 QTDECOMP は、連続的に分割します。たとえば、入力イメージが128行
% 128列である場合、QTDECOMP は、単一の128行128列のブロックから開始
% します。ブロック内のピクセルが異なる場合、QTDECOMP は、ブロックは
% さらに4つの64行64列のブロックに分けます。そして、QTDECOMP は、さらに
% 類似しない64行64列のブロックを4つの32行32列のブロックに分けます。
% そして、さらに分割を継続します。
%
% 連続的な分割を確認するには、デモウィンドウの "Animated computation"
% ボックスをチェックして、"Apply”を押してください。
%
% QTDECOMP は、4分割をスパース行列Sとして出力します。これはデモウィン
% ドウの左下に表示されます。S のそれぞれの非ゼロ要素は、ブロックの
% 右上隅に対応します。非ゼロ要素の値は、ブロックの大きさです。この表現
% は、さらに詳しい解析を進めます。たとえば、つぎの行は、4分割内のすべて
% の8行8列のブロックに関する位置の決定方法を示すものです。
%
%        [i,j] = find(S == 8);
%
% QTDECOMP には、デモで示していないその他のオプションがあります。たと
% えば、最大ブロックサイズと最小ブロックサイズを設定して、ユーザの
% ブロック類似関数を適用することができます。設定サイズのブロック内に
% あるイメージピクセル値の設定と取得には、関数 QTSETBLK と QTGETBLK
% を使用します。
%
% Aluminum、Rice、Enamel、および Circuit のイメージは、J. C. Russ, 
% The Image Processing Handbook, Third Edition, 1998, CRC Press から
% 無料で提供されています。 
%
%   参考：QTDECOMP, QTSETBLK, QTGETBLK.



%   Copyright 1993-2002 The MathWorks, Inc.  
