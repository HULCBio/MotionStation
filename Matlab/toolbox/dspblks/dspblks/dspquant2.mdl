Library {
  Name			  "dspquant2"
  Version		  6.0
  RequirementInfo	  "9"
  SaveDefaultBlockParams  on
  LibraryLinkDisplay	  "none"
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  CovSaveName		  "covdata"
  CovMetricSettings	  "d"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  CovReportOnPause	  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  ForwardingTableString	  "||__slOldName__||dspquant2/Scalar Quantizer||__slNe"
"wName__||dspobslib/Scalar Quantizer"
  BlockNameDataTip	  off
  BlockParametersDataTip  on
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  off
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  Created		  "Mon Nov 02 09:00:02 1998"
  Creator		  "szlotkin"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "mlongfri"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Fri Apr  9 11:38:03 2004"
  ModelVersionFormat	  "1.%<AutoIncrement:322>"
  ConfigurationManager	  "none"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock off
  ProdHWDeviceType	  "32-bit Generic"
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.0.3"
      Array {
	Type			"Handle"
	Dimension		8
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.0.3"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  Solver		  "ode45"
	  ZeroCrossControl	  "UseLocalSettings"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  RateTranMode		  "Deterministic"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.0.3"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SaveTime		  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Array {
	    Type		    "Cell"
	    Dimension		    5
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "InitFltsAndDblsToZero"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.3"
	  BlockReduction	  on
	  BooleanDataType	  off
	  ConditionallyExecuteInputs on
	  ConditionalExecOptimization "on_for_testing"
	  InlineParams		  off
	  InlineInvariantSignals  on
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  ParameterPooling	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.0.3"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  CheckSSInitialOutputMsg on
	  CheckExecutionContextPreStartOutputMsg on
	  CheckExecutionContextRuntimeOutputMsg	on
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterPrecisionLossMsg "warning"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  ModelReferenceSimTargetVerbose off
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.0.3"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  on
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.0.3"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  ModelReferenceNumInstancesAllowed "Multi"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  8
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.3"
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      9
	      Array {
		Type			"Cell"
		Dimension		9
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.3"
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      PrefixModelToSubsysFcnNames on
	      CustomSymbolStr	      "$R$N$M"
	      MangleLength	      1
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      10
	      Array {
		Type			"Cell"
		Dimension		12
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.3"
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      GenFloatMathFcnCalls    "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      IncludeMdlTerminateFcn  on
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	Simulink.SFSimCC {
	  $ObjectID		  11
	  Version		  "1.0.3"
	  SFSimApplyToAllLibs	  on
	  SFSimEnableDebug	  on
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SFSimBuildMode	  "Incremental"
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      SimulationMode	      "normal"
      CurrentDlgPage	      "Solver"
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Quantizer
      QuantizationInterval    "0.5"
      LinearizeAsGain	      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      PortCounts	      "[]"
      SFunctionModules	      "''"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      on
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "dspquant2"
    Location		    [20, 50, 417, 427]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      "S-Function"
      Name		      "G.711 Codec"
      Ports		      [1, 1]
      Position		      [295, 61, 355, 99]
      ForegroundColor	      "orange"
      CopyFcn		      "dspfixptcopycallback"
      FunctionName	      "sdspg711"
      Parameters	      "mode,errmode"
      MaskType		      "G.711 Codec"
      MaskDescription	      "Implements the ITU-T G.711 recommendation for e"
"ncoding, decoding, or converting speech signals as follows:\n\n- Encodes int1"
"6 PCM signals using A-law or mu-law into uint8 codewords. The input is assume"
"d to be a 13-bit (A-law) or 14-bit (mu-law) PCM signal.\n\n- Decodes uint8 co"
"dewords into 13-bit (A-law) or 14-bit (mu-law) PCM signals of type int16.\n\n"
"- Converts between A-law and mu-law uint8 codewords."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Mode:|Overflow diagnostic:"
      MaskStyleString	      "popup(Encode PCM to A-law|Encode PCM to mu-law|"
"Decode A-law to PCM|Decode mu-law to PCM|Convert A-law to mu-law|Convert mu-l"
"aw to A-law),popup(Ignore|Warning|Error)"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "dspblkg711('enables')|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "mode=@1;errmode=@2;"
      MaskInitialization      "[iconStr, inLabel, outLabel] = dspblkg711('icon"
"',mode);"
      MaskDisplay	      "text(0.3,0.85,iconStr)\nport_label('input',1,in"
"Label)\nport_label('output',1,outLabel)"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Encode PCM to A-law|Warning"
      MaskTabNameString	      ","
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      Quantizer
      Name		      "Quantizer"
      Position		      [225, 60, 265, 100]
      LinearizeAsGain	      off
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Scalar Quantizer\nDecoder"
      Ports		      [1, 1]
      Position		      [155, 143, 250, 197]
      ForegroundColor	      "orange"
      CopyFcn		      "dspfixptcopycallback"
      FunctionName	      "sdspsqdec"
      Parameters	      "CBsource,codebook, invalidin, dtInfo.DataTypeIs"
"CustomFloat,dtInfo.DataTypeIsSigned,dTypeID,dtInfo.DataTypeWordLength,dtInfo."
"DataTypeFracOrMantBits"
      MaskType		      "Scalar Quantizer Decoder"
      MaskDescription	      "For each input index value, the block outputs t"
"he corresponding codeword. Each element of the Codebook parameter represents "
"a codeword.\n\nThe output values have the same data type as the codebook valu"
"es."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Source of codebook:|Action for out of range ind"
"ex value:|Codebook values:|Codebook and output data type:|Signed|Word length:"
"|User-defined data type (e.g. sfix(16), float('single')):|Set fraction length"
" in output to:|Fraction length:"
      MaskStyleString	      "popup(Specify via dialog|Input port),popup(Clip"
"|Clip and warn|Error),edit,popup(Same as input|double|single|Fixed-point|User"
"-defined),checkbox,edit,edit,popup(Best precision|User-defined),edit"
      MaskTunableValueString  "off,off,on,off,off,off,off,off,off"
      MaskCallbackString      "dspblksqdec;\n|||dspblksqdec;\n|||dspblksqdec;|"
"dspblksqdec;|"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,off,off,off,off,off"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,"
      MaskVariables	      "CBsource=@1;invalidin=@2;codebook=@3;dataType=@"
"4;isSigned=@5;wordLen=@6;udDataType=@7;fracBitsMode=@8;numFracBits=@9;"
      MaskInitialization      "[x,y,si,so,dtInfo,dTypeID]=dspblksqdec('icon');"
"\n"
      MaskDisplay	      "text(.2, .9, 'SQ Decoder');\nplot(x,y);\n\nport"
"_label('input',si(1).port, si(1).txt);\nport_label('input',si(2).port, si(2)."
"txt);\n\nport_label('output',so(1).port, so(1).txt);\n\n"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Specify via dialog|Clip|[1:10]|double|on|16|sfi"
"x(16)|Best precision|11"
      MaskTabNameString	      ",,,,,,,,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Scalar Quantizer\nEncoder"
      Ports		      [1, 1]
      Position		      [25, 142, 120, 198]
      ForegroundColor	      "orange"
      CopyFcn		      "dspfixptcopycallback"
      FunctionName	      "sdspsqenc"
      Parameters	      "paramSrc,partType,BBoundary,UBoundary,SearchMet"
"hod,tieBreakRule,outQU,outQError,codebook,outStatus,invalidin,additionalParam"
"s,idtype,roundingMode,overflowMode"
      MaskType		      "Scalar Quantizer Encoder"
      MaskDescription	      "The block maps each input value to a quantizati"
"on region by comparing the input value to the user-specified boundary points."
" Then, the block outputs the index of the associated region. If you want the "
"block to output the quantized value or the associated quantization error, you"
" must provide the codebook. \n\nIf the Codebook parameter is defined as [c1 c"
"2 c3 ... cN] and the Boundary points parameter is denoted by [p0 p1 p2 p3 ..."
" pN], then p0<c1<p1<c2 ... p(N-1)<cN<pN for a regular quantizer. If your quan"
"tizer is bounded, you need to specify [p0 p1 p2 p3 ... pN]. For any input les"
"s than p0 or greater than pN, you can optionally output the clipping status. "
"If your quantizer is unbounded, you need to specify [p1 p2 p3 ... p(N-1)] and"
" the block sets p0=-Inf and pN = +Inf. \n\nYou must enter the boundary points"
" in ascending order."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Source of quantizer parameters:|Partitioning:|B"
"oundary points:|Boundary points:|Searching method:|Tie-breaking rule:|Output "
"codeword|Output quantization error|Codebook:|Output clipping status|Action fo"
"r out of range input:|--------------- Show additional parameters ------------"
"---|Index output data type:|Allow overrides from DSP Fixed-Point Attributes b"
"locks|Round integer calculations toward:|Saturate on integer overflow"
      MaskStyleString	      "popup(Specify via dialog|Input port),popup(Boun"
"ded|Unbounded),edit,edit,popup(Linear|Binary),popup(Choose the lower index|Ch"
"oose the higher index),checkbox,checkbox,edit,checkbox,popup(Clip|Clip and wa"
"rn|Error),checkbox,popup(int8|uint8|int16|uint16|int32|uint32),checkbox,popup"
"(Floor|Nearest),checkbox"
      MaskTunableValueString  "off,off,on,on,off,off,off,off,on,off,off,off,of"
"f,off,off,off"
      MaskCallbackString      "dspblksqenc;\ndspblksqenc;|dspblksqenc;|||||dsp"
"blksqenc;\ndspblksqenc;|dspblksqenc;\ndspblksqenc;||||dspblksqenc;||||"
      MaskEnableString	      "on,on,on,off,on,on,on,on,off,on,on,on,off,off,o"
"ff,off"
      MaskVisibilityString    "on,on,on,off,on,on,on,on,off,on,on,on,off,off,o"
"ff,off"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,,,,,,,,"
      MaskVariables	      "paramSrc=@1;partType=@2;BBoundary=@3;UBoundary="
"@4;SearchMethod=@5;tieBreakRule=@6;outQU=@7;outQError=@8;codebook=@9;outStatu"
"s=@10;invalidin=@11;additionalParams=@12;idtype=@13;allowOverrides=@14;roundi"
"ngMode=@15;overflowMode=@16;"
      MaskInitialization      "[x,y,si,so,disp_str,dtInfo]=dspblksqenc('icon')"
";\nroundingMode   = dtInfo.roundingMode;\noverflowMode   = dtInfo.overflowMod"
"e;"
      MaskDisplay	      "text(.2, .9, disp_str);\nplot(x,y);\nport_label"
"('input',si(1).port, si(1).txt);\nport_label('input',si(2).port, si(2).txt);"
"\nport_label('input',si(3).port, si(3).txt);\n\nport_label('output',so(1).por"
"t, so(1).txt);\nport_label('output',so(2).port, so(2).txt);\nport_label('outp"
"ut',so(3).port, so(3).txt);\nport_label('output',so(4).port, so(4).txt);\n"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Specify via dialog|Bounded|[1:10]|[2:9]|Linear|"
"Choose the lower index|off|off|[1.5:9.5]|off|Clip|off|int32|on|Floor|off"
      MaskTabNameString	      ",,,,,,,,,,,,,,,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Scalar Quantizer \nDesign"
      Ports		      []
      Position		      [284, 142, 364, 196]
      OpenFcn		      "sqdtool"
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "Scalar Quantizer Design"
      MaskDescription	      "Designs optimal scalar quantizer and automatica"
"lly realizes scalar quantizer with specific final codebook, final boundary po"
"ints, seraching method and tie-breaking rule."
      MaskHelp		      "web(dspbhelp);"
      MaskInitialization      "x = [0.0 0.2 0.2 0.4 0.4 0.6 0.6 0.8 NaN]+0.08;"
"\ny = [0.2 0.2 0.4 0.4 0.6 0.6 0.8 0.8 NaN]-0.1;\n\n"
      MaskDisplay	      "text(.05, .9, 'SQDTool');\nplot(x,y);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      System {
	Name			"Scalar Quantizer \nDesign"
	Location		[469, 448, 835, 688]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  SubSystem
	  Name			  "Empty SubSystem"
	  Ports			  []
	  Position		  [160, 100, 190, 130]
	  TreatAsAtomicUnit	  off
	  MinAlgLoopOccurrences	  off
	  PropExecContextAcrossSSBoundary on
	  RTWSystemCode		  "Auto"
	  System {
	    Name		    "Empty SubSystem"
	    Location		    [146, 180, 902, 673]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	  }
	}
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Uniform\nDecoder"
      Ports		      [1, 1]
      Position		      [125, 59, 195, 101]
      FunctionName	      "sdspudecode2"
      Parameters	      "peak,bits,otype,overflowMode"
      MaskType		      "Uniform Decoder"
      MaskDescription	      "Uniformly decode the input with positive and ne"
"gative Peak value.   Saturate or wrap the input in overflow.  The  output dat"
"atype is double or single."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Peak:|Bits:|Overflow mode:|Output type:"
      MaskStyleString	      "edit,edit,popup(Saturate|Wrap),popup(Double|Sin"
"gle)"
      MaskTunableValueString  "off,off,off,off"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVarAliasString      ",,,"
      MaskVariables	      "peak=@1;bits=@2;overflowMode=@3;otype=@4;"
      MaskInitialization      "[x, y, str] = dspblkudecode;"
      MaskDisplay	      "plot(x,y);\ntext(0.1,0.5,str);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "1|3|Saturate|Double"
      MaskTabNameString	      ",,,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Uniform\nEncoder"
      Ports		      [1, 1]
      Position		      [25, 59, 95, 101]
      FunctionName	      "sdspuencode2"
      Parameters	      "peak,bits,otype"
      MaskType		      "Uniform Encoder"
      MaskDescription	      "Uniformly quantize and encode the input into sp"
"ecified number of bits. The input is saturated at positive and negative Peak "
"value. Output datatype is either 8, 16, or 32-bit signed or unsigned integer,"
" based on the least number of bits needed. "
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Peak:|Bits:|Output type:"
      MaskStyleString	      "edit,edit,popup(Unsigned integer|Signed integer"
")"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVarAliasString      ",,"
      MaskVariables	      "peak=@1;bits=@2;otype=@3;"
      MaskInitialization      "[x, y, str] = dspblkuencode(bits,otype);"
      MaskDisplay	      "plot(x,y);\ntext(0.6,0.5,str);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "1|8|Unsigned integer"
      MaskTabNameString	      ",,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Vector Quantizer\nDecoder"
      Ports		      [1, 1]
      Position		      [155, 243, 250, 297]
      ForegroundColor	      "orange"
      CopyFcn		      "dspfixptcopycallback"
      FunctionName	      "sdspvqdec"
      Parameters	      "CBsource,codebook, invalidin, dtInfo.DataTypeIs"
"CustomFloat,dtInfo.DataTypeIsSigned,dTypeID,dtInfo.DataTypeWordLength,dtInfo."
"DataTypeFracOrMantBits"
      MaskType		      "Vector Quantizer Decoder"
      MaskDescription	      "For each input index value, the block outputs t"
"he corresponding codeword. Each column of the Codebook parameter represents a"
" codeword.\n\nThe output values have the same data type as the codebook value"
"s."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Source of codebook:|Action for out of range ind"
"ex value:|Codebook values:|Codebook and output data type:|Signed|Word length:"
"|User-defined data type (e.g. sfix(16), float('single')):|Set fraction length"
" in output to:|Fraction length:"
      MaskStyleString	      "popup(Specify via dialog|Input port),popup(Clip"
"|Clip and warn|Error),edit,popup(Same as input|double|single|Fixed-point|User"
"-defined),checkbox,edit,edit,popup(Best precision|User-defined),edit"
      MaskTunableValueString  "off,off,on,off,off,off,off,off,off"
      MaskCallbackString      "dspblkvqdec;\n|||dspblkvqdec;|||dspblkvqdec;|ds"
"pblkvqdec;|"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,off,off,off,off,off"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,"
      MaskVariables	      "CBsource=@1;invalidin=@2;codebook=@3;dataType=@"
"4;isSigned=@5;wordLen=@6;udDataType=@7;fracBitsMode=@8;numFracBits=@9;"
      MaskInitialization      "[x1,y1,x2,y2,xc,yc,si,so,dtInfo,dTypeID]=dspblk"
"vqdec('icon');\n"
      MaskDisplay	      "text(.2, .9, 'VQ Decoder');\nplot(x1,y1,x2,y2);"
"\npatch(xc(1:9), yc(1:9),[0 0 0]);\npatch(xc(10:18), yc(10:18),[0 0 0]);\npat"
"ch(xc(19:27), yc(19:27),[0 0 0]);\npatch(xc(28:36), yc(28:36),[0 0 0]);\npatc"
"h(xc(37:45), yc(37:45),[0 0 0]);\npatch(xc(46:54), yc(46:54),[0 0 0]);\npatch"
"(xc(55:63), yc(55:63),[0 0 0]);\n\nport_label('input',si(1).port, si(1).txt);"
"\nport_label('input',si(2).port, si(2).txt);\n\nport_label('output',so(1).por"
"t, so(1).txt);\n\n"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Specify via dialog|Clip|[1.5  13.3  136.4  6.8 "
"; 2.5  14.3  137.4  7.8; 3.5  15.3  138.4  8.8]|double|on|16|sfix(16)|Best pr"
"ecision|7"
      MaskTabNameString	      ",,,,,,,,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Vector Quantizer\nDesign"
      Ports		      []
      Position		      [282, 242, 362, 296]
      OpenFcn		      "vqdtool"
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextAcrossSSBoundary on
      RTWSystemCode	      "Auto"
      MaskType		      "Vector Quantizer Design"
      MaskDescription	      "Designs optimal vector quantizer and automatica"
"lly realizes vector quantizer encoder and/or vector quantizer decoder blocks "
" with specific final codebook and tie-breaking rule."
      MaskHelp		      "web(dspbhelp);"
      MaskInitialization      "x1=[ 0.52 0.55 0.70 0.84 NaN  0.84 0.65 0.48 0."
"46 NaN 0.15 0.38 0.35 0.15]-0.04;\ny1=[ 0.15 0.40 0.50 0.43 NaN  0.85 0.65 0."
"72 0.93 NaN 0.80 0.67 0.50 0.35]-0.15;\nx2 = [x1(3) x1(7) NaN x1(8) x1(12) Na"
"N x1(13) x1(2)];\ny2 = [y1(3) y1(7) NaN y1(8) y1(12) NaN y1(13) y1(2)];\n\nS="
"8; t=(0:S)'/S*2*pi; a=0.01;\nxcos=a*cos(t);ysin=a*sin(t);\n	\nxc=xcos*"
"ones(1,7) + ones(size(t))*[[.72 .80 .65 .41  0.32  0.40 0.59]-0.1];\nyc=ysin*"
"ones(1,7) + ones(size(t))*[[.30 .60 .80 .80  0.60  0.30 0.55]-0.15];\n\n"
      MaskDisplay	      "text(.05, .9, 'VQDTool');\nplot(x1,y1,x2,y2);\n"
"patch(xc(1:9), yc(1:9),[0 0 0]);\npatch(xc(10:18), yc(10:18),[0 0 0]);\npatch"
"(xc(19:27), yc(19:27),[0 0 0]);\npatch(xc(28:36), yc(28:36),[0 0 0]);\npatch("
"xc(37:45), yc(37:45),[0 0 0]);\npatch(xc(46:54), yc(46:54),[0 0 0]);\npatch(x"
"c(55:63), yc(55:63),[0 0 0]);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      System {
	Name			"Vector Quantizer\nDesign"
	Location		[469, 448, 835, 688]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  SubSystem
	  Name			  "Empty SubSystem"
	  Ports			  []
	  Position		  [160, 100, 190, 130]
	  TreatAsAtomicUnit	  off
	  MinAlgLoopOccurrences	  off
	  PropExecContextAcrossSSBoundary on
	  RTWSystemCode		  "Auto"
	  System {
	    Name		    "Empty SubSystem"
	    Location		    [146, 180, 902, 673]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	  }
	}
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Vector Quantizer\nEncoder"
      Ports		      [1, 1]
      Position		      [25, 243, 120, 297]
      ForegroundColor	      "orange"
      CopyFcn		      "dspfixptcopycallback"
      FunctionName	      "sdspvqenc"
      Parameters	      "CBsource,codebook,distMeasure,wgtSrc,weights,id"
"type,tieBreakRule,outQU,outQError,additionalParams,prodOutputMode,prodOutputW"
"L,prodOutputFL,accumMode,accumWL,accumFL,roundingMode,overflowMode"
      MaskType		      "Vector Quantizer Encoder"
      MaskDescription	      "For each input column vector, the block outputs"
" a zero-based index value of the nearest codeword. You can choose to output t"
"he nearest codeword and corresponding quantization error for each input colum"
"n vector. Each column of the Codebook parameter represents a codeword. If you"
" choose to specify a weighting factor, it must be a vector having length equa"
"l to the number of rows of your input. The block applies the same codebook an"
"d weighting factor to each input column vector.\n\nAll the inputs to the bloc"
"k must be the same data type. The output index values can be signed or unsign"
"ed integers. All other outputs have the same data type as the inputs."
      MaskHelp		      "web(dspbhelp);"
      MaskPromptString	      "Source of codebook:|Codebook:|Distortion measur"
"e:|Source of weighting factor:|Weighting factor:|Tie-breaking rule:|Output co"
"deword|Output quantization error|--------------- Show additional parameters -"
"--------------|Index output data type:|Fixed-point product output attributes:"
"|Product output word length|Product output fraction length|Fixed-point accumu"
"lator attributes:|Accumulator word length:|Accumulator fraction length:|Round"
" integer calculations toward:|Saturate on integer overflow"
      MaskStyleString	      "popup(Specify via dialog|Input port),edit,popup"
"(Squared error|Weighted squared error),popup(Specify via dialog|Input port),e"
"dit,popup(Choose the lower index|Choose the higher index),checkbox,checkbox,c"
"heckbox,popup(int8|uint8|int16|uint16|int32|uint32),popup(Same as input|Binar"
"y point scaling),edit,edit,popup(Same as product output|Same as input|Binary "
"point scaling),edit,edit,popup(Floor|Nearest),checkbox"
      MaskTunableValueString  "off,on,off,off,on,off,off,off,off,off,off,off,o"
"ff,off,off,off,off,off"
      MaskCallbackString      "dspblkvqenc||dspblkvqenc;\ndspblkvqenc|dspblkvq"
"enc;|||||dspblkvqenc;||dspblkvqenc|||dspblkvqenc|||dspblkvqenc|"
      MaskEnableString	      "on,on,on,off,off,on,on,on,on,off,on,on,on,on,on"
",on,on,on"
      MaskVisibilityString    "on,on,on,off,off,on,on,on,on,off,off,off,off,of"
"f,off,off,off,off"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on"
",on,on"
      MaskVarAliasString      ",,,,,,,,,,,,,,,,,"
      MaskVariables	      "CBsource=@1;codebook=@2;distMeasure=@3;wgtSrc=@"
"4;weights=@5;tieBreakRule=@6;outQU=@7;outQError=@8;additionalParams=@9;idtype"
"=@10;prodOutputMode=@11;prodOutputWordLength=@12;prodOutputFracLength=@13;acc"
"umMode=@14;accumWordLength=@15;accumFracLength=@16;roundingMode=@17;overflowM"
"ode=@18;"
      MaskInitialization      "[x1,y1,x2,y2,xc,yc,si,so,dtInfo]=dspblkvqenc('i"
"con');\nprodOutputMode = dtInfo.prodOutputMode;\nprodOutputWL   = dtInfo.prod"
"OutputWordLength;\nprodOutputFL   = dtInfo.prodOutputFracLength;\naccumMode  "
"    = dtInfo.accumMode;\naccumWL        = dtInfo.accumWordLength;\naccumFL   "
"     = dtInfo.accumFracLength;\nroundingMode   = dtInfo.roundingMode;\noverfl"
"owMode   = dtInfo.overflowMode;"
      MaskDisplay	      "text(.2, .9, 'VQ Encoder');\nplot(x1,y1,x2,y2);"
"\npatch(xc(1:9), yc(1:9),[0 0 0]);\npatch(xc(10:18), yc(10:18),[0 0 0]);\npat"
"ch(xc(19:27), yc(19:27),[0 0 0]);\npatch(xc(28:36), yc(28:36),[0 0 0]);\npatc"
"h(xc(37:45), yc(37:45),[0 0 0]);\npatch(xc(46:54), yc(46:54),[0 0 0]);\npatch"
"(xc(55:63), yc(55:63),[0 0 0]);\n\nport_label('input',si(1).port, si(1).txt);"
"\nport_label('input',si(2).port, si(2).txt);\nport_label('input',si(3).port, "
"si(3).txt);\n\nport_label('output',so(1).port, so(1).txt);\nport_label('outpu"
"t',so(2).port, so(2).txt);\nport_label('output',so(3).port, so(3).txt);\n"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Specify via dialog|[1.5  13.3  136.4  6.8 ; 2.5"
"  14.3  137.4  7.8; 3.5  15.3  138.4  8.8]|Squared error|Specify via dialog|["
"1 1 1]|Choose the lower index|off|off|off|int32|Same as input|16|15|Same as p"
"roduct output|16|15|Floor|off"
      MaskTabNameString	      ",,,,,,,,,,,,,,,,,"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Annotation {
      Name		      "Quantizers"
      Position		      [200, 24]
      FontName		      "Arial"
      FontSize		      14
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Orange blocks support fixed-point data types."
      Position		      [194, 348]
      ForegroundColor	      "orange"
    }
  }
}
