%% $RCSfile: sdsppinv.tlc,v $
%% $Revision: 
%% $Date: 
%%
%% Abstract: TLC Code generation for Signal Processing Blockset Pseudo Inverse block.
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%%

%implements sdsppinv "C"

%% Function: BlockTypeSetup ====================================================
%function BlockTypeSetup(block, system) void

    %<Include_rt_header(block,"dsppinv_rt")>
    %<Include_rt_header(block,"dspsvd_rt")>

%endfunction %% BlockTypeSetup

%% Function: BlockInstanceSetup ================================================
%%
%function BlockInstanceSetup(block, system) void
    %%dimension of input matrix
    %assign NUM_INP_DIMS = LibBlockInputSignalNumDimensions(0)
    %assign INPUT_DIMS   = LibBlockInputSignalDimensions(0)
    %assign M            = INPUT_DIMS[0]
    %assign N            = (NUM_INP_DIMS == 2) ? INPUT_DIMS[1] : 1

    %%Data types
    %assign DTYPE_ID     = LibBlockInputSignalDataTypeId(0)
    %assign INP_COMPLEX  = LibBlockInputSignalIsComplex(0)

    %assign block = block + DTYPE_ID + INP_COMPLEX + M + N
%endfunction %% BlockInstanceSetup

%% Function: Outputs ===========================================================
%%
%function Outputs(block, system) Output
    /* Signal Processing Blockset PseudoInverse (%<ParamSettings.FunctionName>) - '%<Name>' */
    %assign dnam    = ["R", "C", "D", "Z"]                %% Data type
    %assign dtype   = (DTYPE_ID == tSS_SINGLE) ? 0 : 2    %% Double or single
    %assign dlet    = dnam[dtype+INP_COMPLEX]             %% R|C|D|Z
    %assign dworkx  = LibBlockDWorkAddr(X, "", "", 0)
    %assign dworks  = LibBlockDWorkAddr(S, "", "", 0)
    %assign dworku  = LibBlockDWorkAddr(U, "", "", 0)
    %assign dworkv  = LibBlockDWorkAddr(V, "", "", 0)
    %%
    /* Copy input to temporary space */
    memcpy(%<dworkx>,                                     \
           %<LibBlockInputSignalAddr(0, "", "", 0)>,      \
           %<M>*%<N>*sizeof(%<getRealOrComplexDataType(DTYPE_ID, INP_COMPLEX)>));
    %%arguments to SVD
    %assign svdarguments =   dworkx + ","                            \
                           + STRING(M) + ","                         \
                           + STRING(N) + ","                         \
                           + dworks + ","                            \
                           + LibBlockDWorkAddr(E,    "", "", 0) + ","\
                           + LibBlockDWorkAddr(WORK, "", "", 0) + ","\
                           + dworku + ","                            \
                           + dworkv + ","                            \
                           + STRING(1)
    MWDSP_SVD_%<dlet>(%<svdarguments>);     /* Call SVD */
    %assign pinvarguments =   dworks + ","                                     \
                            + dworku + ","                                     \
                            + dworkv + ","                                     \
                            + LibBlockOutputSignalAddr(0,  "", "", 0) + ","    \
                            + STRING(M) + ","                                  \
                            + STRING(N)
    MWDSP_PINV_%<dlet>(%<pinvarguments>);
%endfunction  %% Outputs

%% [EOF] sdsppinv.tlc

