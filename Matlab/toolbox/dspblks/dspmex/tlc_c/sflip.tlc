%% $Revision: 1.15.4.2 $ 
%% $RCSfile: sflip.tlc,v $
%% $Date: 2004/04/12 23:10:18 $
%%
%%  
%% Copyright 1995-2003 The MathWorks, Inc.
%%
%% Abstract: Target file for the S-Function sflip.c
%%

%implements "sflip" "C"

%% Function: Outputs ==========================================================
%%
%% Abstract:
%%
%function Outputs(block, system) Output
  /* Signal Processing Blockset Flip (%<ParamSettings.FunctionName>) - '%<Name>' */
  %%
  %assign INPORT  = 0
  %assign OUTPORT = 0
  %assign inplace = (LibBlockInputSignalBufferDstPort(INPORT) == OUTPORT)
  %assign N       = LibDataInputPortWidth(INPORT)
  %%
  %if LibBlockOutputSignalIsComplex(OUTPORT) == 0
    %% REAL
    %%
    %if(inplace)
      %if N == 1
	/* Scalar input does not require any work. */		        
      %else
	{
	  /* Get first pointer: */
	  real_T *top    = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
	  real_T *bottom = top + %<N-1>;
	  int_T   i      = %<N/2>;     %% this must be an integer division, e.g., 5/2 = 2
	  while(i-- > 0) {
	    real_T tmp = *top;
	    *top++     = *bottom;
	    *bottom--  = tmp;
	  }
	}
      %endif
    %else
      %if N == 1
	/* Scalar input. */
	%<LibBlockOutputSignal(OUTPORT, "", "", 0)> = %<LibBlockInputSignal(INPORT, "", "", 0)>;
      %else
	%% Vector input:
	{
	  real_T *y = %<LibBlockOutputSignalAddr(OUTPORT,"","",N-1)>; /* Last output */
	  %%
	  %assign rollVars = ["U"]
	  %roll sigIdx = RollRegions, lcv = RollThreshold, block,...
	    "Roller", rollVars
	    *y-- = %<LibBlockInputSignal(INPORT, "", lcv, sigIdx)>;
	  %endroll
	}
      %endif
    %endif
  %else
    %% COMPLEX
    %%
    %if(inplace)
      %if N == 1
	/* Scalar input does not require any work. */		        
      %else
	{
	  /* Get first pointer: */
	  creal_T *top    = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;
	  creal_T *bottom = top + %<N-1>;
	  int_T   i       = %<N/2>;  
	  while(i-- > 0) {
	    creal_T tmp = *top;
	    *top++      = *bottom;
	    *bottom--   = tmp;
	  } 
	}  
      %endif
    %else                           
      %if N == 1
	/* Scalar input. */
	%<LibBlockOutputSignal(0, "", "", 0)> = %<LibBlockInputSignal(INPORT, "", "", 0)>;
      %else
	%% Vector input:
	{
	  creal_T *y = %<LibBlockOutputSignalAddr(OUTPORT,"","", N-1)>; /* Last output */
	  %%
	  %assign rollVars = ["U"]
	  %roll sigIdx = RollRegions, lcv = 3, block,...
	    "Roller", rollVars
	    *y-- = %<LibBlockInputSignal(INPORT, "", lcv, sigIdx)>;
	  %endroll
	}
      %endif
    %endif
  %endif

%endfunction %% Outputs

%% EOF: sflip.tlc
