%%
%% Abstract: TLC code generation template
%%           for Signal Processing Blockset FFT block.
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%% $RCSfile: sdspfft2.tlc,v $
%% $Revision: 1.14.4.2 $ $Date: 2004/04/12 23:08:36 $

%implements sdspfft2 "C"

%include "dsplib.tlc"
%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

    %<Include_rt_header(block,"dspfft_rt")>

%endfunction %% BlockTypeSetup

%include "fft_body.tlc"

%% Function: BlockInstanceSetup ==============================================
%%
%function BlockInstanceSetup(block, system) void
  %<FixPt_Setup(block, system)>

  %assign INPORT    = 0
  %assign OUTPORT   = 0

  %assign bitRev       = SFcnParamSettings.BitRev
  %assign compMode     = SFcnParamSettings.CompMode
  %assign radix        = 2
  
  %assign inCplx       = LibBlockInputSignalIsComplex(INPORT)
  %assign inDTypeId    = LibBlockInputSignalDataTypeId(INPORT)
  %assign inDT         = FixPt_GetInputDataType(INPORT)
  %assign inDTypeName  = getRealOrComplexDataType(inDTypeId, inCplx)

  %assign outCplx      = LibBlockOutputSignalIsComplex(OUTPORT)
  %assign outDTypeId   = LibBlockOutputSignalDataTypeId(OUTPORT)
  %assign outDT        = FixPt_GetOutputDataType(OUTPORT)
  %assign outDTypeName = getRealOrComplexDataType(outDTypeId, outCplx)
  
  %assign isInverse    = SFcnParamSettings.InverseFFT
  %assign isNormalized = SFcnParamSettings.Normalized
  %assign isConjSym    = SFcnParamSettings.ConjSym
  %assign is2dfft      = 0
  
  %assign numDims  = LibBlockInputSignalNumDimensions(INPORT)
  %assign dims     = LibBlockInputSignalDimensions(INPORT)
  %assign nRows    = getInportSamps(INPORT)
  %assign nChans   = getInportChans(INPORT)
  %assign inScalar = (nRows == 1)
  %assign inplace  = (LibBlockInputSignalBufferDstPort(INPORT) == OUTPORT)
  
  %assign block = block + bitRev + compMode + radix + inScalar + inDT ...
    + inDTypeId  + inDTypeName  + inCplx  + isNormalized ...
    + outDTypeId + outDTypeName + outCplx + isConjSym + outDT ...
    + isInverse  + nRows        + nChans  + inplace + INPORT + OUTPORT + is2dfft

%endfunction %% BlockInstanceSetup


%% Function: Outputs ===========================================================
%%
%function Outputs(block, system) Output
  %if !ISFIELD(block, "u")
     %assign u = LibBlockInputSignalAddr(INPORT,"","",0)
     %assign y = LibBlockOutputSignalAddr(OUTPORT,"","",0) 
     %assign block = block + u + y
  %endif
  %<CommonOutputs(block, system)>
%endfunction

%% [EOF] sdspfft2.tlc
