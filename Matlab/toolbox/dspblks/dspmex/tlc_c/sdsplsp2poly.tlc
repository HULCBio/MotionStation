%% sdsplsp2poly.tlc
%% Abstract: TLC for Signal Processing Blockset  LSP/LSF to Polynomial  conversion block. (sdsplsp2poly)
%%
%% Copyright 1995-2003 The MathWorks, Inc.
%% $Revision: 1.4.4.2 $ $Date: 2004/04/12 23:08:53 $

%implements "sdsplsp2poly" "C"
%include "dsplib.tlc"

%% Function: BlockInstanceSetup ===============================================
%%
%function BlockInstanceSetup(block, system) void

  %assign INPORT = 0
  %assign OUTPORT = 0
  %assign dtype = LibBlockInputSignalDataTypeName(INPORT,"")
  %assign inSingle = (dtype == "real32_T") ? 1 : 0
  %assign block = block + INPORT + OUTPORT + inSingle + dtype

%endfunction %% BlockInstanceSetup

%% Function: BlockTypeSetup ================================================
%function BlockTypeSetup(block, system) void

    %<Include_rt_header(block,"dsplsp2poly_rt")>

%endfunction  %%BlockTypeSetup

%function getRunTimeFcnName(block) void
    %%
	%if (%<LibDataInputPortWidth(INPORT)>)%2 == 0
		%if inSingle
            %assign suffix = "Evenord_R"
		%else
            %assign suffix = "Evenord_D"
		%endif
	%else
		%if inSingle
            %assign suffix = "Oddord_R"
		%else
            %assign suffix = "Oddord_D"
		%endif
	%endif
    %%
%return "MWDSP_Lsp2Poly_" + suffix
%endfunction %% getRunTimeFcnName


%% Function: Outputs ==========================================================
%%
%% Abstract:
%%
%function Outputs(block, system) Output
    %%
    /* Signal Processing Blockset Interp (%<ParamSettings.FunctionName>) - '%<Name>' */
    %%
    {
    %assign str    = (%<SFcnParamSettings.InputType> == 2) ? "* DSP_TWO_PI" : ""
    %if inSingle
        %assign prefix = "(real32_T)"
        %assign upcast = "(real_T)"
    %else
        %assign prefix = ""
        %assign upcast = ""
    %endif

	const %<dtype> *uptr    = %<LibBlockInputSignalAddr(INPORT,"","",0)>;  /* pointer to input vector */
	%<dtype> *yptr    = %<LibBlockOutputSignalAddr(OUTPORT,"","",0)>;/* pointer to outputput vector */
    %<dtype> *G1      = %<LibBlockDWorkAddr(G1, "", "", "")>;        /* pointer to D_work G1 */
    %<dtype> *G2      = %<LibBlockDWorkAddr(G2, "", "", "")>;        /* pointer to D_Work G2 */
  %if (%<SFcnParamSettings.InputType> == 1)
      %<getRunTimeFcnName(block)>(uptr, %<LibDataInputPortWidth(INPORT)>, G1, G2, yptr);
  %else
    int_T i;
    for (i = 0; i < %<LibDataInputPortWidth(INPORT)>; i++) {
        yptr[i] = %<prefix>cos(%<upcast>uptr[i] %<str>);
    }
    %<getRunTimeFcnName(block)>(yptr, %<LibDataInputPortWidth(INPORT)>, G1, G2, yptr);
  %endif
    }
  %%
%endfunction %% Outputs

%% EOF: sdsplsf2poly.tlc
