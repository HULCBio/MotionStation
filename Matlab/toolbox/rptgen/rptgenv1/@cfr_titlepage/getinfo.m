function out=getinfo(c)
%GETINFO returns a structure containing information about the component
%   I=GETINFO(CFR_TITLEPAGE)
%
%   I.Name - component informal name
%   I.Type - component general category 2-letter code
%   I.Desc - short description of the component
%   I.ValidChildren - shows whether or not component can have children
%          ValidChildren={logical(0)} for no children
%          ValidChildren={logical(1)} if children are allowed
%   I.att - component attributes
%   I.attx - information about component attributes
%   I.ref - reference structure
%   I.x - temporary attribute page handle structure

%   Copyright 1997-2004 The MathWorks, Inc.
%   $Revision: 1.1.6.2 $  $Date: 2004/04/15 00:13:01 $

out=getprotocomp(c);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

out.Name = xlate('Title Page');
out.Type = 'FR';
out.Desc = xlate('Inserts a title page into the report.');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

out.att.Title = '';
out.att.Subtitle = '';
out.att.Author='';
out.att.Include_Date = logical(1);
out.att.DateFormat = 1;
out.att.Include_Copyright = logical(1);
out.att.Copyright_Holder = '';

% use %<date(now,'yyyy')> to get current year always
clockNum=clock;
out.att.Copyright_Date = num2str(clockNum(1));
out.att.Abstract = {''};
out.att.Legal_Notice = {''};
out.att.Image = '';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

out.attx.Title = struct(...
  'String'   ,'Title',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','edit');

out.attx.Subtitle = struct(...
  'String'   ,'Subtitle',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','edit');

out.attx.Author = struct(...
  'String'   ,'Author',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','edit');

out.attx.Include_Copyright = struct(...
  'String'   ,'Include copyright information',...
  'Type'     ,'LOGICAL',...
  'UIcontrol','checkbox');

out.attx.Include_Date = struct(...
  'String'   ,'Include date report was created',...
  'Type'     ,'LOGICAL',...
  'UIcontrol','checkbox');

dateVals={
   'dd-mmm-yyyy HH:MM:SS'
   'dd-mmm-yyyy'
   'mm/dd/yy'  
   'mmm'      
   'm'             
   'mm'              
   'mm/dd'
   'dd'         
   'ddd'           
   'd'               
   'yyyy'      
   'yy'             
   'mmmyy'       
   'HH:MM:SS'
   'HH:MM:SS PM'
   'HH:MM'       
   'HH:MM PM'    
   'QQ-YY'  
   'QQ' 
};

currDate=now;
for i=length(dateVals):-1:1
   dateDisplay{i,1}=datestr(currDate,dateVals{i});
end

out.attx.DateFormat = struct(...
  'String'   ,'',...
  'Type'     ,'ENUM',...
  'enumValues',{dateVals}, ...
  'enumNames',{dateDisplay}, ...
  'UIcontrol','popupmenu');

out.attx.Copyright_Holder = struct(...
  'String'   ,'Name of copyright holder',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','edit');

out.attx.Copyright_Date = struct(...
  'String'   ,'copyright year',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','edit');

out.attx.Abstract = struct(...
  'String'   ,'Abstract',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','multiedit');

out.attx.Legal_Notice = struct(...
  'String'   ,'Legal notice',...
  'Type'     ,'STRING',...
  'isParsedText',logical(1),...
  'UIcontrol','multiedit');

out.attx.Image = struct(...
   'Ext'     ,'*',...
	'isParsedText',logical(1));