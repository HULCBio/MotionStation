Library {
  Name			  "commanabbnd2"
  Version		  5.0
  RequirementInfo	  "9"
  SaveDefaultBlockParams  on
  LibraryLinkDisplay	  "none"
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  CovSaveName		  "covdata"
  CovMetricSettings	  "d"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  BlockNameDataTip	  off
  BlockParametersDataTip  on
  BlockDescriptionStringDataTip	off
  ToolBar		  off
  StatusBar		  off
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  Created		  "Wed Jun 10 14:16:08 1998"
  Creator		  "tdelve"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "mmclerno"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Thu Mar 28 12:36:50 2002"
  ModelVersionFormat	  "1.%<AutoIncrement:162>"
  ConfigurationManager	  "none"
  SimParamPage		  "Solver"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  RTWRetainRTWFile	  off
  RTWMakeCommand	  "make_rtw"
  RTWGenerateCodeOnly	  off
  TLCProfiler		  off
  TLCDebug		  off
  TLCCoverage		  off
  TLCAssertion		  off
  ExtModeMexFile	  "ext_comm"
  ExtModeBatchMode	  off
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  SimulationMode	  "normal"
  ConsistencyChecking	  "none"
  ArrayBoundsChecking	  "none"
  AlgebraicLoopMsg	  "warning"
  BlockPriorityViolationMsg "warning"
  MinStepSizeMsg	  "warning"
  InheritedTsInSrcMsg	  "warning"
  DiscreteInheritContinuousMsg "warning"
  MultiTaskRateTransMsg	  "error"
  SingleTaskRateTransMsg  "none"
  CheckForMatrixSingularity "none"
  IntegerOverflowMsg	  "warning"
  Int32ToFloatConvMsg	  "warning"
  ParameterDowncastMsg	  "error"
  ParameterOverflowMsg	  "error"
  ParameterPrecisionLossMsg "warning"
  UnderSpecifiedDataTypeMsg "none"
  UnnecessaryDatatypeConvMsg "none"
  VectorMatrixConversionMsg "none"
  InvalidFcnCallConnMsg	  "error"
  SignalLabelMismatchMsg  "none"
  UnconnectedInputMsg	  "warning"
  UnconnectedOutputMsg	  "warning"
  UnconnectedLineMsg	  "warning"
  SfunCompatibilityCheckMsg "none"
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      ComplexToRealImag
      Output		      "Real and imag"
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      ShowAdditionalParam     off
      OutDataTypeMode	      "Inherit from 'Constant value'"
      OutDataType	      "sfix(16)"
      ConRadixGroup	      "Use specified scaling"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      DiscreteFilter
      Numerator		      "[1]"
      Denominator	      "[1 2]"
      SampleTime	      "1"
      Realization	      "auto"
      RTWStateStorageClass    "Auto"
    }
    Block {
      BlockType		      Gain
      Gain		      "1"
      Multiplication	      "Element-wise(K.*u)"
      ShowAdditionalParam     off
      ParameterDataTypeMode   "Same as input"
      ParameterDataType	      "sfix(16)"
      ParameterScalingMode    "Best Precision: Matrix-wise"
      ParameterScaling	      "2^0"
      OutDataTypeMode	      "Same as input"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      PortDimensions	      "-1"
      SampleTime	      "-1"
      ShowAdditionalParam     off
      LatchInput	      off
      DataType		      "auto"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      SignalType	      "auto"
      SamplingMode	      "auto"
      Interpolate	      on
    }
    Block {
      BlockType		      MagnitudeAngleToComplex
      Input		      "Magnitude and angle"
      ConstantPart	      "0"
    }
    Block {
      BlockType		      Math
      Operator		      "exp"
      OutputSignalType	      "auto"
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      Product
      Inputs		      "2"
      Multiplication	      "Element-wise(.*)"
      ShowAdditionalParam     off
      InputSameDT	      on
      OutDataTypeMode	      "Same as first input"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
    }
    Block {
      BlockType		      RealImagToComplex
      Input		      "Real and imag"
      ConstantPart	      "0"
    }
    Block {
      BlockType		      Reference
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      on
      Permissions	      "ReadWrite"
      RTWSystemCode	      "Auto"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      ShowAdditionalParam     off
      InputSameDT	      on
      OutDataTypeMode	      "Same as first input"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "commanabbnd2"
    Location		    [139, 80, 417, 574]
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      SubSystem
      Name		      "DSB AM\nDemodulator\nBaseband"
      Ports		      [1, 1]
      Position		      [155, 398, 230, 442]
      TreatAsAtomicUnit	      off
      MaskType		      "DSB AM Demodulator Baseband"
      MaskDescription	      "Demodulate the complex envelope of a double-sid"
"eband amplitude modulated signal. The input signal must be a sample-based sca"
"lar.The output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Output signal offset:|Lowpass filter numerator:"
"|Lowpass filter denominator:|Initial phase (rad):|Sample time (s):"
      MaskStyleString	      "edit,edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on,on"
      MaskCallbackString      "||||"
      MaskEnableString	      "on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on"
      MaskVarAliasString      ",,,,"
      MaskVariables	      "Offset=@1;num=@2;den=@3;Ph=@4;ts=@5;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(Offset)~=1) | (le"
"ngth(ts)~=1))error('Mask parameters must be scalar values.');end;"
      MaskDisplay	      "plot(0,0,100,100,[5+4.5*[0:.15:10] 50 50 50 50+"
"4.5*[0:10]],[85+10*[sin([0:.15:10]*pi*2+cumsum(sin([0:.15:10]*pi/5))/2)] 85 9"
"9 75   10*sin([0:10]*pi/5)+85]);\ndisp('DSB AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "1|[4.57 9.14 4.57]*.01|[1 -1.3108 .4936]|0|0.00"
"1"
      System {
	Name			"DSB AM\nDemodulator\nBaseband"
	Location		[259, 280, 721, 411]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 35, 35, 55]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [65, 24, 130, 66]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [335, 75, 375, 95]
	  Orientation		  "up"
	  ShowName		  off
	  Value			  "Offset"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [150, 27, 195, 63]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  Reference
	  Name			  "DSBSC AM\nDemodulator\nBaseband"
	  Ports			  [1, 1]
	  Position		  [230, 18, 310, 72]
	  ShowName		  off
	  SourceBlock		  "commanabbnd2/DSBSC AM\nDemodulator\nBaseban"
"d"
	  SourceType		  "DSBSC AM Demodulator Baseband"
	  num			  "num"
	  den			  "den"
	  Ph			  "Ph"
	  ts			  "ts"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [345, 35, 365, 55]
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|+-"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [415, 35, 435, 55]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "DSBSC AM\nDemodulator\nBaseband"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "DSBSC AM\nDemodulator\nBaseband"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "DSB AM\nModulator\nBaseband"
      Ports		      [1, 1]
      Position		      [35, 397, 110, 443]
      TreatAsAtomicUnit	      off
      MaskType		      "DSB AM Modulator Baseband"
      MaskDescription	      "Output complex envelope of a double-sideband am"
"plitude modulated signal. The input signal must be a sample-based scalar. The"
" output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Input signal offset:|Initial phase (rad):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "Offset=@1;Ph=@2;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(Offset)~=1))error"
"('Mask parameters must be scalar values.');end;"
      MaskDisplay	      "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+4.5*"
"[0:.15:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.15:10]*pi*2+cumsu"
"m(sin([0:.15:10]*pi/5))/2)]]);\ndisp('DSB AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "1|0"
      System {
	Name			"DSB AM\nModulator\nBaseband"
	Location		[149, 321, 617, 436]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [25, 30, 45, 50]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [75, 19, 140, 61]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [240, 75, 290, 95]
	  Orientation		  "up"
	  ShowName		  off
	  Value			  "Offset"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [170, 22, 215, 58]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  Reference
	  Name			  "DSBSC AM\nModulator\nBaseband"
	  Ports			  [1, 1]
	  Position		  [305, 13, 385, 67]
	  ShowName		  off
	  SourceBlock		  "commanabbnd2/DSBSC AM\nModulator\nBaseband"
	  SourceType		  "DSBSC AM Modulator Baseband"
	  Ph			  "Ph"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [255, 30, 275, 50]
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|++"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [415, 30, 435, 50]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "DSBSC AM\nModulator\nBaseband"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "DSBSC AM\nModulator\nBaseband"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  Points		  [20, 0]
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "DSBSC AM\nDemodulator\nBaseband"
      Ports		      [1, 1]
      Position		      [155, 17, 230, 63]
      TreatAsAtomicUnit	      off
      MaskType		      "DSBSC AM Demodulator Baseband"
      MaskDescription	      "Demodulate the complex envelope of a double-sid"
"eband suppressed carrier amplitude modulated signal. The input signal must be"
" a sample-based scalar. The output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Lowpass filter numerator:|Lowpass filter denomi"
"nator:|Initial phase (rad):|Sample time (s):"
      MaskStyleString	      "edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVarAliasString      ",,,"
      MaskVariables	      "num=@1;den=@2;Ph=@3;ts=@4;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(ts)~=1))error('Ma"
"sk parameters must be scalar values.');end;\npi2=pi*2;\n"
      MaskDisplay	      "plot(0,0,100,100,[5+4.5*[0:.15:10] 50 50 50 50+"
"4.5*[0:10]],[85+10*[sin([0:.15:10]*pi*2+cumsum(sin([0:.15:10]*pi/5))/2)] 85 9"
"9 75   10*sin([0:10]*pi/5)+85]);\ndisp('DSBSC AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[4.57 9.14 4.57]*.01|[1 -1.3108 .4936]|pi/2|0.0"
"01"
      System {
	Name			"DSBSC AM\nDemodulator\nBaseband"
	Location		[163, 243, 805, 584]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "In"
	  Position		  [400, 108, 430, 122]
	  Orientation		  "left"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [305, 94, 370, 136]
	  Orientation		  "left"
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  ComplexToRealImag
	  Name			  "ComplexToRealImag"
	  Ports			  [1, 2]
	  Position		  [45, 186, 95, 219]
	  Orientation		  "left"
	  ShowName		  off
	  Output		  "Real and imag"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [240, 97, 275, 133]
	  Orientation		  "left"
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  Reference
	  Name			  "FM\nModulator\nBaseband"
	  Ports			  [1, 1]
	  Position		  [230, 181, 310, 239]
	  Orientation		  "left"
	  SourceBlock		  "commanabbnd2/FM\nModulator\nBaseband"
	  SourceType		  "FM Modulator Baseband"
	  Ph			  "Ph"
	  HzPerV		  "1"
	  ts			  "ts"
	  td			  "Inf"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Low Pass Filter 1"
	  Position		  [335, 190, 395, 230]
	  Orientation		  "left"
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Low Pass Filter 2"
	  Position		  [240, 25, 300, 65]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Low Pass Filter 3"
	  Position		  [240, 285, 300, 325]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction"
	  Ports			  [1, 1]
	  Position		  [170, 195, 200, 225]
	  Orientation		  "left"
	  ShowName		  off
	  Operator		  "conj"
	}
	Block {
	  BlockType		  Product
	  Name			  "Product"
	  Ports			  [2, 1]
	  Position		  [450, 199, 470, 221]
	  Orientation		  "left"
	  ShowName		  off
	}
	Block {
	  BlockType		  Product
	  Name			  "Product1"
	  Ports			  [2, 1]
	  Position		  [115, 194, 135, 216]
	  Orientation		  "left"
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "Out"
	  Position		  [575, 38, 605, 52]
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "ComplexToRealImag"
	  SrcPort		  1
	  Points		  [-30, 0; 0, -150]
	  DstBlock		  "Low Pass Filter 2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "ComplexToRealImag"
	  SrcPort		  2
	  Points		  [-30, 0; 0, 95]
	  DstBlock		  "Low Pass Filter 3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product"
	  SrcPort		  1
	  DstBlock		  "Low Pass Filter 1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product1"
	  SrcPort		  1
	  DstBlock		  "ComplexToRealImag"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "In"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction"
	  SrcPort		  1
	  DstBlock		  "Product1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "FM\nModulator\nBaseband"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Low Pass Filter 3"
	  SrcPort		  1
	  Points		  [245, 0; 0, -90]
	  DstBlock		  "Product"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Low Pass Filter 1"
	  SrcPort		  1
	  DstBlock		  "FM\nModulator\nBaseband"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Low Pass Filter 2"
	  SrcPort		  1
	  Points		  [245, 0]
	  Branch {
	    Points		    [0, 160]
	    DstBlock		    "Product"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Out"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  Points		  [-85, 0]
	  DstBlock		  "Product1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "DSBSC AM\nModulator\nBaseband"
      Ports		      [1, 1]
      Position		      [35, 17, 110, 63]
      TreatAsAtomicUnit	      off
      MaskType		      "DSBSC AM Modulator Baseband"
      MaskDescription	      "Output the complex envelope of a double-sideban"
"d suppressed carrier amplitude modulated signal. The input signal must be a s"
"ample-based scalar. The output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "Ph=@1;"
      MaskInitialization      "if (length(Ph)~=1) error('Mask parameters must "
"be scalar values.');end;\nx1=cos(Ph);x2=sin(Ph);pi2=2*pi;\n"
      MaskDisplay	      "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+4.5*"
"[0:.15:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.15:10]*pi*2+cumsu"
"m(sin([0:.15:10]*pi/5))/2)]]);\ndisp('DSBSC AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "pi/2"
      System {
	Name			"DSBSC AM\nModulator\nBaseband"
	Location		[186, 299, 610, 419]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 28, 45, 42]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [75, 14, 140, 56]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant 1"
	  Position		  [200, 70, 220, 90]
	  ShowName		  off
	  Value			  "Ph"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [160, 17, 205, 53]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  MagnitudeAngleToComplex
	  Name			  "MagnitudeAngleToComplex"
	  Ports			  [1, 1]
	  Position		  [235, 63, 285, 97]
	  ShowName		  off
	  Input			  "Angle"
	  ConstantPart		  "1"
	}
	Block {
	  BlockType		  Product
	  Name			  "Product"
	  Ports			  [2, 1]
	  Position		  [320, 27, 345, 58]
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [375, 38, 405, 52]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "MagnitudeAngleToComplex"
	  SrcPort		  1
	  Points		  [10, 0; 0, -30]
	  DstBlock		  "Product"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Constant 1"
	  SrcPort		  1
	  DstBlock		  "MagnitudeAngleToComplex"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Product"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "FM\nDemodulator\nBaseband"
      Ports		      [1, 1]
      Position		      [155, 112, 230, 158]
      TreatAsAtomicUnit	      off
      MaskType		      "FM Demodulator Baseband"
      MaskDescription	      "Demodulate the complex envelope of a frequency-"
"modulated signal. The input signal must be a sample-based scalar. The output "
"is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):|Modulation constant (Hertz"
" per volt):|Lowpass filter numerator:|Lowpass filter denominator:|Sample time"
" (s):"
      MaskStyleString	      "edit,edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on,on"
      MaskCallbackString      "||||"
      MaskEnableString	      "on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on"
      MaskVarAliasString      ",,,,"
      MaskVariables	      "Ph=@1;HzPerVolt=@2;num=@3;den=@4;ts=@5;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(HzPerVolt)~=1) | "
"(length(ts)~=1))error('Mask parameters must be scalar values.');end;\npi2=2*p"
"i;\nKc=2*pi*HzPerVolt;"
      MaskDisplay	      "plot(0,0,100,100,[5+4.5*[0:.15:10] 50 50 50 50+"
"4.5*[0:10]],[85+10*[sin([0:.15:10]*pi*2+cumsum(sin([0:.15:10]*pi/5))/2)] 85 9"
"9 75   10*sin([0:10]*pi/5)+85]);\ndisp('FM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "0|1|[4.57 9.14 4.57]*.01|[1 -1.3108 .4936]|0.00"
"1"
      System {
	Name			"FM\nDemodulator\nBaseband"
	Location		[135, 305, 858, 529]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 38, 45, 52]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [70, 24, 135, 66]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  ComplexToRealImag
	  Name			  "ComplexToRealImag"
	  Ports			  [1, 1]
	  Position		  [320, 38, 370, 72]
	  ShowName		  off
	  Output		  "Imag"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [425, 185, 455, 205]
	  Orientation		  "up"
	  NamePlacement		  "alternate"
	  ShowName		  off
	  Value			  "Ph"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [165, 27, 210, 63]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Discrete Modulo\nIntegrator"
	  Ports			  [1, 1]
	  Position		  [485, 136, 560, 174]
	  Orientation		  "left"
	  NamePlacement		  "alternate"
	  ShowName		  off
	  SourceBlock		  "comminteg2/Discrete Modulo\nIntegrator"
	  SourceType		  "Discrete Modulo Integrator"
	  modu			  "pi2"
	  init			  "0"
	  ts			  "ts"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Filter"
	  Position		  [430, 36, 485, 74]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  MagnitudeAngleToComplex
	  Name			  "MagnitudeAngleToComplex"
	  Ports			  [1, 1]
	  Position		  [320, 138, 370, 172]
	  Orientation		  "left"
	  ShowName		  off
	  Input			  "Angle"
	  ConstantPart		  "1"
	}
	Block {
	  BlockType		  Product
	  Name			  "Product"
	  Ports			  [2, 1]
	  Position		  [255, 37, 285, 68]
	  ShowName		  off
	}
	Block {
	  BlockType		  Gain
	  Name			  "Sensitivity"
	  Position		  [565, 85, 605, 115]
	  Orientation		  "down"
	  ShowName		  off
	  Gain			  "Kc"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [430, 145, 450, 165]
	  Orientation		  "left"
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|-+"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [655, 48, 685, 62]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Filter"
	  SrcPort		  1
	  Points		  [0, 0; 95, 0]
	  Branch {
	    DstBlock		    "Sensitivity"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "out_1"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product"
	  SrcPort		  1
	  DstBlock		  "ComplexToRealImag"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "ComplexToRealImag"
	  SrcPort		  1
	  DstBlock		  "Filter"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "MagnitudeAngleToComplex"
	  SrcPort		  1
	  Points		  [-75, 0]
	  DstBlock		  "Product"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Sensitivity"
	  SrcPort		  1
	  Points		  [0, 35]
	  DstBlock		  "Discrete Modulo\nIntegrator"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Discrete Modulo\nIntegrator"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "MagnitudeAngleToComplex"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Product"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "FM\nModulator\nBaseband"
      Ports		      [1, 1]
      Position		      [35, 112, 110, 158]
      TreatAsAtomicUnit	      off
      MaskType		      "FM Modulator Baseband"
      MaskDescription	      "Output complex baseband signal frequency-modula"
"ted by the input signal.  For digital modulation, set the Symbol Interval par"
"ameter to the desired symbol.  For analog modulation, set the Symbol Interval"
" parameter to Inf. The input signal must be a sample-based scalar. The output"
" is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):|Modulation constant (Hertz"
" per volt):|Sample time (s):|Symbol interval (s):"
      MaskStyleString	      "edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVarAliasString      ",,,"
      MaskVariables	      "Ph=@1;HzPerV=@2;ts=@3;td=@4;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(HzPerV)~=1) | (le"
"ngth(ts)~=1) | (length(td)~=1))error('Mask parameters must be scalar values.'"
");end;\nKc =2*pi*HzPerV;if isinf(td),td=realmax;end;\n"
      MaskDisplay	      "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+4.5*"
"[0:.15:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.15:10]*pi*2+cumsu"
"m(sin([0:.15:10]*pi/5))/2)]]);\ndisp('FM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "0|1|0.001|Inf"
      System {
	Name			"FM\nModulator\nBaseband"
	Location		[123, 344, 758, 448]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 28, 45, 42]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [75, 14, 140, 56]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [425, 65, 455, 85]
	  Orientation		  "up"
	  ShowName		  off
	  Value			  "Ph"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [165, 17, 210, 53]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Integrate and Dump"
	  Ports			  [1, 1]
	  Position		  [310, 13, 390, 57]
	  ShowName		  off
	  SourceBlock		  "comminteg2/Integrate and Dump"
	  SourceType		  "Integrate and Dump"
	  limit			  "2*pi"
	  td			  "td"
	  ts			  "ts"
	}
	Block {
	  BlockType		  Math
	  Name			  "Math\nFunction"
	  Ports			  [1, 1]
	  Position		  [515, 20, 545, 50]
	  ShowName		  off
	}
	Block {
	  BlockType		  Gain
	  Name			  "Sensitivity"
	  Position		  [245, 20, 285, 50]
	  ShowName		  off
	  Gain			  "Kc"
	}
	Block {
	  BlockType		  Gain
	  Name			  "Sensitivity1"
	  Position		  [465, 21, 495, 49]
	  ShowName		  off
	  Gain			  "i"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [430, 25, 450, 45]
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|++"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [585, 28, 615, 42]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Sensitivity"
	  SrcPort		  1
	  DstBlock		  "Integrate and Dump"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Integrate and Dump"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "Sensitivity1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sensitivity1"
	  SrcPort		  1
	  DstBlock		  "Math\nFunction"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Math\nFunction"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Sensitivity"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "PM\nDemodulator\nBaseband"
      Ports		      [1, 1]
      Position		      [155, 207, 230, 253]
      TreatAsAtomicUnit	      off
      MaskType		      "PM Demodulator Baseband"
      MaskDescription	      "Demodulate the complex envelope of a phase-modu"
"lated signal. The input signal must be a sample-based scalar. The output is a"
" 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):|Modulation constant (Radia"
"ns per volt):|Lowpass filter numerator:|Lowpass filter denominator:|VCO gain "
"(Hertz per volt):|Sample time (s):"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on,on,on"
      MaskCallbackString      "|||||"
      MaskEnableString	      "on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,"
      MaskVariables	      "Ph=@1;Kc=@2;num=@3;den=@4;HzPerVolt=@5;ts=@6;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(HzPerVolt)~=1) | "
"(length(ts)~=1) | (length(Kc)~=1))error('Mask parameters must be scalar value"
"s.');end;\nKv=2*pi*HzPerVolt;"
      MaskDisplay	      "plot(0,0,100,100,[5+4.5*[0:.15:10] 50 50 50 50+"
"4.5*[0:10]],[85+10*[sin([0:.15:10]*pi*2+cumsum(sin([0:.15:10]*pi/5))/2)] 85 9"
"9 75   10*sin([0:10]*pi/5)+85]);\ndisp('PM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "0|1|[4.57 9.14 4.57]*.01|[1 -1.3108 .4936]|1|0."
"001"
      System {
	Name			"PM\nDemodulator\nBaseband"
	Location		[165, 335, 897, 522]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 28, 45, 42]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [65, 14, 130, 56]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  ComplexToRealImag
	  Name			  "ComplexToRealImag"
	  Ports			  [1, 1]
	  Position		  [300, 28, 350, 62]
	  ShowName		  off
	  Output		  "Imag"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant1"
	  Position		  [390, 150, 420, 170]
	  Orientation		  "up"
	  NamePlacement		  "alternate"
	  ShowName		  off
	  Value			  "Ph"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [150, 17, 195, 53]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Discrete Integrator"
	  Position		  [570, 27, 630, 63]
	  Numerator		  "ts(1)"
	  Denominator		  "[1 -1]*Kc"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Discrete Modulo\nIntegrator"
	  Ports			  [1, 1]
	  Position		  [455, 93, 535, 137]
	  Orientation		  "left"
	  ShowName		  off
	  SourceBlock		  "comminteg2/Discrete Modulo\nIntegrator"
	  SourceType		  "Discrete Modulo Integrator"
	  modu			  "2*pi"
	  init			  "0"
	  ts			  "ts"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Filter"
	  Position		  [410, 26, 465, 64]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  MagnitudeAngleToComplex
	  Name			  "MagnitudeAngleToComplex"
	  Ports			  [1, 1]
	  Position		  [300, 98, 350, 132]
	  Orientation		  "left"
	  ShowName		  off
	  Input			  "Angle"
	  ConstantPart		  "1"
	}
	Block {
	  BlockType		  Product
	  Name			  "Product"
	  Ports			  [2, 1]
	  Position		  [235, 27, 265, 58]
	  ShowName		  off
	}
	Block {
	  BlockType		  Gain
	  Name			  "Sensitivity"
	  Position		  [495, 30, 535, 60]
	  ShowName		  off
	  Gain			  "Kv"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [395, 105, 415, 125]
	  Orientation		  "left"
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|--"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [675, 38, 705, 52]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "MagnitudeAngleToComplex"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant1"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Discrete Modulo\nIntegrator"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "MagnitudeAngleToComplex"
	  SrcPort		  1
	  Points		  [-75, 0]
	  DstBlock		  "Product"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "ComplexToRealImag"
	  SrcPort		  1
	  DstBlock		  "Filter"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product"
	  SrcPort		  1
	  DstBlock		  "ComplexToRealImag"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Filter"
	  SrcPort		  1
	  DstBlock		  "Sensitivity"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sensitivity"
	  SrcPort		  1
	  Points		  [0, 0; 10, 0]
	  Branch {
	    DstBlock		    "Discrete Integrator"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Discrete Modulo\nIntegrator"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Discrete Integrator"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Product"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "PM\nModulator\nBaseband"
      Ports		      [1, 1]
      Position		      [35, 207, 110, 253]
      TreatAsAtomicUnit	      off
      MaskType		      "PM Modulator Baseband"
      MaskDescription	      "Output the complex envelope of a phase-modulate"
"d signal. The input signal must be a sample-based scalar. The output is a 1-D"
" scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):|Modulation constant (Radia"
"ns per volt):"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "Ph=@1;Kc=@2;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(Kc)~=1))error('Ma"
"sk parameters must be scalar values.');end;\n"
      MaskDisplay	      "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+4.5*"
"[0:.15:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.15:10]*pi*2+cumsu"
"m(sin([0:.15:10]*pi/5))/2)]]);\ndisp('PM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "0|1"
      System {
	Name			"PM\nModulator\nBaseband"
	Location		[247, 316, 723, 424]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "In"
	  Position		  [20, 38, 50, 52]
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [70, 24, 135, 66]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant"
	  Position		  [302, 75, 328, 95]
	  Orientation		  "up"
	  NamePlacement		  "alternate"
	  ShowName		  off
	  Value			  "Ph"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [160, 27, 205, 63]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  MagnitudeAngleToComplex
	  Name			  "MagnitudeAngleToComplex"
	  Ports			  [1, 1]
	  Position		  [350, 28, 400, 62]
	  ShowName		  off
	  Input			  "Angle"
	  ConstantPart		  "1"
	}
	Block {
	  BlockType		  Gain
	  Name			  "Sensitivity"
	  Position		  [235, 30, 275, 60]
	  ShowName		  off
	  Gain			  "Kc"
	}
	Block {
	  BlockType		  Sum
	  Name			  "Sum"
	  Ports			  [2, 1]
	  Position		  [305, 35, 325, 55]
	  ShowName		  off
	  IconShape		  "round"
	  Inputs		  "|++"
	}
	Block {
	  BlockType		  Outport
	  Name			  "Out"
	  Position		  [430, 38, 460, 52]
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "In"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Sum"
	  SrcPort		  1
	  DstBlock		  "MagnitudeAngleToComplex"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Sensitivity"
	  SrcPort		  1
	  DstBlock		  "Sum"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "MagnitudeAngleToComplex"
	  SrcPort		  1
	  DstBlock		  "Out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Sensitivity"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "SSB AM\nDemodulator\nBaseband"
      Ports		      [1, 1]
      Position		      [155, 302, 230, 348]
      TreatAsAtomicUnit	      off
      MaskType		      "SSB AM Demodulator Baseband"
      MaskDescription	      "Demodulate the complex envelope of a single-sid"
"eband amplitude modulated signal. The input signal must be a sample-based sca"
"lar. The output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Lowpass filter numerator:|Lowpass filter denomi"
"nator:|Initial phase (rad):|Sample time (s):"
      MaskStyleString	      "edit,edit,edit,edit"
      MaskTunableValueString  "on,on,on,on"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVarAliasString      ",,,"
      MaskVariables	      "num=@1;den=@2;Ph=@3;ts=@4;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(ts)~=1))error('Ma"
"sk parameters must be scalar values.');end;\nx1=cos(-Ph);x2=sin(-Ph);\n"
      MaskDisplay	      "plot(0,0,100,100,[5+4.5*[0:.15:10] 50 50 50 50+"
"4.5*[0:10]],[85+10*[sin([0:.15:10]*pi*2+cumsum(sin([0:.15:10]*pi/5))/2)] 85 9"
"9 75   10*sin([0:10]*pi/5)+85]);\ndisp('SSB AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "[4.57 9.14 4.57]*.01|[1 -1.3108 .4936]|0|0.001"
      System {
	Name			"SSB AM\nDemodulator\nBaseband"
	Location		[157, 215, 718, 327]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 23, 45, 37]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [65, 9, 130, 51]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  ComplexToRealImag
	  Name			  "ComplexToRealImag"
	  Ports			  [1, 1]
	  Position		  [330, 23, 380, 57]
	  ShowName		  off
	  Output		  "Real"
	}
	Block {
	  BlockType		  Constant
	  Name			  "Constant2"
	  Position		  [165, 75, 190, 95]
	  ShowName		  off
	  Value			  "-Ph"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [155, 12, 200, 48]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Filter"
	  Position		  [405, 21, 460, 59]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  MagnitudeAngleToComplex
	  Name			  "MagnitudeAngleToComplex"
	  Ports			  [1, 1]
	  Position		  [210, 68, 260, 102]
	  ShowName		  off
	  Input			  "Angle"
	  ConstantPart		  "1"
	}
	Block {
	  BlockType		  Product
	  Name			  "Product"
	  Ports			  [2, 1]
	  Position		  [280, 22, 310, 53]
	  ShowName		  off
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [505, 33, 535, 47]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "MagnitudeAngleToComplex"
	  SrcPort		  1
	  DstBlock		  "Product"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Constant2"
	  SrcPort		  1
	  DstBlock		  "MagnitudeAngleToComplex"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Product"
	  SrcPort		  1
	  DstBlock		  "ComplexToRealImag"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "ComplexToRealImag"
	  SrcPort		  1
	  DstBlock		  "Filter"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Filter"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  DstBlock		  "Product"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "SSB AM\nModulator\nBaseband"
      Ports		      [1, 1]
      Position		      [35, 302, 110, 348]
      TreatAsAtomicUnit	      off
      MaskType		      "SSB AM Modulator Baseband"
      MaskDescription	      "Output complex envelope of a single-sideband am"
"plitude modulated signal. The input signal must be a sample-based scalar. The"
" output is a 1-D scalar."
      MaskHelp		      "helpview(commbhelp)"
      MaskPromptString	      "Initial phase (rad):|Bandwidth of the input sig"
"nal (Hz):|Time delay for Hilbert transform filter (s):|Sample time (s):|Sideb"
"and to modulate:"
      MaskStyleString	      "edit,edit,edit,edit,popup(Upper|Lower)"
      MaskTunableValueString  "on,on,on,on,on"
      MaskCallbackString      "||||"
      MaskEnableString	      "on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on"
      MaskVarAliasString      ",,,,"
      MaskVariables	      "Ph=@1;ban=@2;dly=@3;ts=@4;sd=&5;"
      MaskInitialization      "if ((length(Ph)~=1) | (length(ban)~=1) | (lengt"
"h(ts)~=1) | (length(dly)~=1))error('Mask parameters must be scalar values.');"
"end;\nif dly/ts<3 error('Time delay is too small compared to the Sample time "
"value');end;\nif ban>1/ts, ban=1/ts-ts;end;if(dly/ts>1000)\nerror(['The filte"
"r coefficients will take too long to compute.'...\n        'Try reducing the "
"length of the impulse response by increasing the sample time, or decreasing t"
"he delay'])\nelse\n[num,den]=hilbiir(ts,dly,ban);pi2=2*pi;pih=pi/2;\nk=-1;if "
"lower(sd)=='lower',k=1;end;\nend;\n"
      MaskDisplay	      "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+4.5*"
"[0:.15:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.15:10]*pi*2+cumsu"
"m(sin([0:.15:10]*pi/5))/2)]]);\ndisp('SSB AM')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "0|10|0.01|0.001|upper"
      System {
	Name			"SSB AM\nModulator\nBaseband"
	Location		[225, 318, 764, 443]
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in_1"
	  Position		  [15, 25, 35, 45]
	  ShowName		  off
	}
	Block {
	  BlockType		  Reference
	  Name			  "Check Signal\nAttributes"
	  Ports			  [1, 1]
	  Position		  [60, 14, 125, 56]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Check Signal\nAttributes"
	  SourceType		  "Check Signal Attributes"
	  SigAttribCheckMethod	  "Does not match attributes exactly"
	  Complexity		  "Ignore"
	  Frame			  "Sample-based"
	  DimsCheckMethod	  "Is..."
	  Dimensions		  "Scalar (1-D or 2-D)"
	  DatatypeCheckMethod	  "Ignore"
	  DatatypeGeneral	  "Boolean"
	  DtypeFloatSpecific	  "Any floating-point"
	  DtypeFixedSpecific	  "Any fixed-point"
	  DtypeIntSpecific	  "Any integer"
	  SampleMode		  "Ignore"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Convert 2-D to 1-D"
	  Ports			  [1, 1]
	  Position		  [145, 17, 190, 53]
	  ShowName		  off
	  SourceBlock		  "dspsigattribs/Convert 2-D to 1-D"
	  SourceType		  "Convert 2-D to 1-D"
	}
	Block {
	  BlockType		  DiscreteFilter
	  Name			  "Filter"
	  Position		  [235, 71, 290, 109]
	  ShowName		  off
	  Numerator		  "num"
	  Denominator		  "den"
	  SampleTime		  "ts"
	}
	Block {
	  BlockType		  Gain
	  Name			  "Gain"
	  Position		  [315, 80, 360, 100]
	  ShowName		  off
	  Gain			  "k"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "QAM\nbaseband"
	  Ports			  [2, 1]
	  Position		  [395, 23, 475, 67]
	  ShowName		  off
	  TreatAsAtomicUnit	  off
	  MaskType		  "QAM Baseband"
	  MaskDescription	  "Modulate the in-phase and quadrature compon"
"ent signal from the 1st and 2nd input ports, baseband simulation.    "
	  MaskHelp		  "helpview(commbhelp)"
	  MaskPromptString	  "Initial phase (rad):"
	  MaskStyleString	  "edit"
	  MaskTunableValueString  "on"
	  MaskEnableString	  "on"
	  MaskVisibilityString	  "on"
	  MaskToolTipString	  "on"
	  MaskVariables		  "Ph=@1;"
	  MaskInitialization	  "\n"
	  MaskDisplay		  "plot(0,0,100,100,[4.5*[0:10]+5 50 50 50 50+"
"4.5*[0:.3:10]],[10*sin([0:10]*pi/5)+85 85 99 75 85+10*[sin([0:.3:10]*pi/5).*s"
"in([0:.3:10]*pi*2)]]);\ndisp('QAM')"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "Ph"
	  System {
	    Name		    "QAM\nbaseband"
	    Location		    [360, 100, 715, 249]
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "in_1"
	      Position		      [60, 33, 90, 47]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "in_2"
	      Position		      [60, 58, 90, 72]
	      ShowName		      off
	      Port		      "2"
	    }
	    Block {
	      BlockType		      Constant
	      Name		      "Constant"
	      Position		      [70, 100, 90, 120]
	      ShowName		      off
	      Value		      "Ph"
	    }
	    Block {
	      BlockType		      MagnitudeAngleToComplex
	      Name		      "MagnitudeAngleToComplex"
	      Ports		      [1, 1]
	      Position		      [115, 93, 165, 127]
	      ShowName		      off
	      Input		      "Angle"
	      ConstantPart	      "1"
	    }
	    Block {
	      BlockType		      Product
	      Name		      "Product4"
	      Ports		      [2, 1]
	      Position		      [200, 67, 230, 98]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      RealImagToComplex
	      Name		      "RealImagToComplex"
	      Ports		      [2, 1]
	      Position		      [115, 36, 165, 69]
	      ShowName		      off
	      Input		      "Real and imag"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "out_1"
	      Position		      [260, 78, 290, 92]
	      ShowName		      off
	      InitialOutput	      "0"
	    }
	    Line {
	      SrcBlock		      "MagnitudeAngleToComplex"
	      SrcPort		      1
	      Points		      [15, 0]
	      DstBlock		      "Product4"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Constant"
	      SrcPort		      1
	      DstBlock		      "MagnitudeAngleToComplex"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "RealImagToComplex"
	      SrcPort		      1
	      Points		      [15, 0]
	      DstBlock		      "Product4"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "in_2"
	      SrcPort		      1
	      Points		      [0, -5]
	      DstBlock		      "RealImagToComplex"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "in_1"
	      SrcPort		      1
	      Points		      [0, 5]
	      DstBlock		      "RealImagToComplex"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Product4"
	      SrcPort		      1
	      DstBlock		      "out_1"
	      DstPort		      1
	    }
	    Annotation {
	      Name		      "Ref: Hambley: An Intro to Comm. Systems"
". pp72"
	      Position		      [217, 177]
	      VerticalAlignment	      "top"
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "out_1"
	  Position		  [505, 35, 525, 55]
	  ShowName		  off
	  InitialOutput		  "0"
	}
	Line {
	  SrcBlock		  "Gain"
	  SrcPort		  1
	  Points		  [0, -35]
	  DstBlock		  "QAM\nbaseband"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Filter"
	  SrcPort		  1
	  DstBlock		  "Gain"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "in_1"
	  SrcPort		  1
	  DstBlock		  "Check Signal\nAttributes"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "QAM\nbaseband"
	  SrcPort		  1
	  DstBlock		  "out_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Convert 2-D to 1-D"
	  SrcPort		  1
	  Points		  [20, 0]
	  Branch {
	    DstBlock		    "QAM\nbaseband"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, 55]
	    DstBlock		    "Filter"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Check Signal\nAttributes"
	  SrcPort		  1
	  DstBlock		  "Convert 2-D to 1-D"
	  DstPort		  1
	}
      }
    }
  }
}
