function loadfrom(this)
% Opens dialog for loading projects.

%   Author(s): P. Gahinet
%   $Revision: 1.1.6.6 $ $Date: 2004/04/11 00:44:24 $
%   Copyright 1990-2004 The MathWorks, Inc.
Dlg = this.Dialogs.Load;
if isempty(Dlg) || ~ishandle(Dlg)
   Dlg = LocalCreateDlg(this);
   this.Dialogs.Load = Dlg;
end
% Initialize
ud = get(Dlg,'UserData');
idxSelect = 2 - strcmp(get_param(this.Block,'SaveIn'),'workspace');
localSelectTarget([],[],Dlg,idxSelect)
set(ud.Edit(idxSelect),'String',get_param(this.Block,'SaveAs'))

set(Dlg,'Visible','on');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LOCALCREATEDLG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Dlg = LocalCreateDlg(this)
%
DlgH = 13;
DlgW = 70;
UIColor = get(0,'DefaultUIControlBackgroundColor');
Dlg = figure('Name','Load Project', ...
    'Visible','off', ...
    'Resize','off',...
    'MenuBar','none', ...
    'Units','character',...
    'Position',[0 0 DlgW DlgH], ...
    'Color', UIColor, ...
    'IntegerHandle','off', ...
    'HandleVisibility','off',...
    'WindowStyle','modal',...
    'NumberTitle','off');
centerfig(Dlg,this.Figure);
set(Dlg,'CloseRequestFcn',{@localHide Dlg})
ModelName = bdroot(this.Block);

% Button group
xgap = 2;
BW = 10;  BH = 1.5; Bgap = 1;
X0 = DlgW - xgap - 3*BW - 2*Bgap;
Y0 = 0.5;
Handles.OK = uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@localOK Dlg this},...
   'String','OK');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','', ...
   'Position',[X0 Y0 BW BH], ...
   'Callback',{@localHide Dlg},...
   'String','Cancel');
X0 = X0+BW+Bgap;
uicontrol('Parent',Dlg, ...
   'Units','character', ...
   'Callback','helpview([docroot ''/toolbox/sloptim/sloptim.map''],''saving'')', ...
   'Position',[X0 Y0 BW BH], ...
   'String','Help');

y0 = DlgH-2;
x0 = xgap + 5;
EW = DlgW-x0-xgap-4;
uicontrol('Parent',Dlg, ...
   'BackgroundColor',UIColor,...
   'Style','text', ...
   'String','Load optimization project from:', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Position',[xgap y0 50 1.2]);

y0 = y0-1.7;
rb1 = uicontrol('Parent',Dlg, ...
   'Style','radiobutton', ...
   'String','Workspace variable:',...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[xgap y0 30 1.2],...
   'Callback',{@localSelectTarget Dlg 1},...
   'Value',1);
y0 = y0-1.6;
% RE: Tag is for automatic testing
eb1 = uicontrol(Dlg, ...
   'Style','edit', ...
   'BackgroundColor','white', ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Tag','workspace',...
   'Position',[x0 y0 EW+4 1.4]);

y0 = y0-2.2;
rb2 = uicontrol('Parent',Dlg, ...
   'Style','radiobutton', ...
   'String','MAT file:',...
   'Units','character',...
   'BackgroundColor',UIColor,...
   'Position',[xgap y0 40 1.2],...
   'Callback',{@localSelectTarget Dlg 2},...
   'Value',0);
y0 = y0-1.6;
eb2 = uicontrol(Dlg, ...
   'Style','edit', ...
   'BackgroundColor',UIColor, ...
   'HorizontalAlignment','left', ...
   'Units','character',...
   'Enable','off',...
   'Tag','MAT',...
   'Position',[x0 y0 EW 1.4]);
eb3 = uicontrol(Dlg, ...
   'Style','pushbutton', ...
   'BackgroundColor',UIColor,...
   'String','...',...
   'Enable','off',...
   'Units','character',...
   'Callback',{@localSetFile Dlg eb2},...
   'Position',[x0+EW y0 4 1.4]);
ud.Radio = [rb1;rb2];
ud.Edit = [eb1;eb2;eb3];


% Listener to parent deletion
ud.Listener = handle.listener(this,'ObjectBeingDestroyed',{@localDelete Dlg});
% REVISIT: (src,data) delete(Dlg));

set(Dlg,'UserData',ud)



%------------------

function localDelete(eventsrc,eventdata,Dlg)
% Deletes dialog when parent axes go away
delete(Dlg)


function localHide(eventsrc,eventdata,Dlg)
% Cancel or close 
set(Dlg,'Visible','off')


function localOK(eventsrc,eventdata,Dlg,this)
% OK
ud = get(Dlg,'UserData');
% Hide load dialog (before opening any other modal dialogs, freezes
% otherwise)
set(Dlg,'Visible','off')
% Try loading project
if get(ud.Radio(1),'Value')==1
   [LoadProj,errmsg] = utLoadProject('workspace',get(ud.Edit(1),'String'));
else
   [LoadProj,errmsg] = utLoadProject('MAT file',get(ud.Edit(2),'String'));
end
if ~isempty(errmsg)
   errordlg(errmsg,'Load Error','modal')
   return
end
% Find project currently associated with model
PMTool = srogui.ProjectManager;
Proj = find(PMTool.Projects,'Name',this.Project.Name);
% Load new project
msg = Proj.load(LoadProj);
% Notify all blocks of the project change
E = ctrluis.dataevent(PMTool,'LoadProject',Proj);
PMTool.send('LoadProject',E);
% Issue warning (last to avoid deadlock)
if ~isempty(msg)
   warndlg(msg,'Load Warning','modal')
end

   
function localSelectTarget(eventsrc,eventdata,Dlg,Selection)
% Toggles between workspace/MAT options
ud = get(Dlg,'UserData');
UIColor = get(ud.Radio(1),'BackgroundColor');
if Selection==1
   set(ud.Radio,{'Value'},{1;0})
   set(ud.Edit(1),'Enable','on','BackgroundColor','w')
   set(ud.Edit(2),'Enable','off','BackgroundColor',UIColor)
   set(ud.Edit(3),'Enable','off')
else
   set(ud.Radio,{'Value'},{0;1})
   set(ud.Edit(2),'Enable','on','BackgroundColor','w')
   set(ud.Edit(1),'Enable','off','BackgroundColor',UIColor)
   set(ud.Edit(3),'Enable','on')
end 


function localSetFile(eventsrc,eventdata,Dlg,EditBox)
% Select MAT file
[filename, pathname] = uigetfile('*.mat', 'Select MAT file',get(EditBox,'String'));
if ~isequal(filename,0) && ~isequal(pathname,0)
   % Set file name
   if ~strcmp(pathname(1:end-1),pwd)
      filename = [pathname filename];
   end
   set(EditBox,'String',filename)
end

