% Motorcycle stability model
% Author(s): Giles Wood

%   Copyright 1998-2004 The MathWorks, Inc.
%   $Revision: 1.5.4.1 $  $Date: 2003/12/03 17:19:32 $

clc;
disp('                      Motorcycle Stability Analysis');
disp(' ');
disp(' ');
disp('Motorcycles are complex machines that can exhibit subtle and interesting nonlinear');
disp('behavior. Deriving the governing equations of motion by hand is a tedious procedure');
disp('that typically results in errors because of the enormous number of manipulations');
disp('necessary. Here we use a model developed using SimMechanics to examine some of the');
disp('stability characteristics of a motorcycle during straight forward motion at a constant');
disp('velocity. The model presented here is taken from [1], and the interested reader can refer');
disp('to [2-3] for related articles. For this demonstration, the longitudinal direction is taken');
disp('orthogonal to the gravity vector and points towards the front of the cycle. The longitudinal');
disp('vector and the gravity vector together define a plane, the plane of symmetry, that reflects');
disp('the left-right symmetry of the cycle about its center. The lateral direction is orthogonal to');
disp('this plane of symmetry. The cycle is made up of the following major components:');
disp(' ');
disp('1. The rear frame, represented here by the REAR FRAME block, which encompasses the');
disp('   rider''s lower body and legs as a entity. The rear frame adjoins the ground block');
disp('   through a four-degree of freedom joint represented here by the REAR FRAME');
disp('   FREEDOMS block.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
open_system('mech_motorcycle_stability');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear frame','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear frame','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear frame freedoms','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear frame freedoms','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('2. The engine flywheel, represented here by the FLYWHEEL block, which can rotate about');
disp('   a transverse axis relative to the rear frame and which introduces gyroscopic torques.');
disp('   The flywheel is connected to the rear frame by a revolute joint FLYWHEEL SPINDLE.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Flywheel','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Flywheel','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Flywheel spindle','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Flywheel spindle','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('3. The handlebars and front forks, which are to be considered as a single body, and are');
disp('   represented by the FRONT FRAME block. The front frame connects to the rear frame by');
disp('   a three-degree of freedom compound joint CUSTOM JOINT.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front frame','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front frame','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Custom joint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Custom joint','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('4. The front wheel, represented here by the FRONT WHEEL block, which rotates about a');
disp('   transverse axis relative to the FRONT FRAME. The front wheel is connected to the');
disp('   front frame by a revolute joint FRONT SPINDLE.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front wheel','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front wheel','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Front spindle','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front spindle','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('5. The rear wheel assembly, represented here by the REAR WHEEL ASSEMBLY block, and which');
disp('   rotates about an inclined axis relative to the main frame. The rear wheel assembly is');
disp('   connected to the rear frame by a revolute joint TWIST AXIS.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear wheel assembly','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear wheel assembly','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Twist axis','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Twist axis','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('6. The rear wheel, represented by the REAR WHEEL block, which can rotate about a');
disp('   transverse axis relative to the rear wheel assembly. The rear wheel connects to');
disp('   the rear wheel assembly through a revolute joint REAR SPINDLE.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear wheel','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear wheel','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear spindle','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear spindle','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('7. The rider''s upper body, represented here by the RIDER block, which can rotate about');
disp('   a longitudinal axis relative to the rear frame. The rider is connected to the rear');
disp('   frame through a revolute joint RIDER AXIS.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rider','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rider','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Rider axis','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rider axis','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('The front frame is connected to the rear frame by a custom joint that allows for three');
disp('degrees of relative motion between them. There is a translational freedom along the transverse');
disp('axis which is modeled by a prismatic joint, a rotational freedom along a twist axis which');
disp('models bending stiffness, and a rotational freedom along the steer axis that models the steering');
disp('freedom. The steering axis is inclined through an angle of epsilon to the vertical axis while');
disp('the twist axis is taken orthogonal to the steer and transverse axes. The base of the joint is');
disp('connected to the rear frame, and the follower is connected to the main frame.');
disp(' ');
disp('The freedoms are ordered as follows. (1) A translation of the front frame relative to the rear');
disp('frame along the prismatic axis. This carries the two revolute axes along. (2) A rotation of');
disp('the front frame relative to the rear frame about the twist axis which also rotates the second');
disp('revolute axis by the same angle. (3) A rotation about the second revolute axis which models');
disp('steer. The make-up of the joint and the ordering of its primitives is specified in its dialog box.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Custom joint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Custom joint','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Custom joint');
pause(4);
mech_support('Close','mech_motorcycle_stability/Custom joint');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('Stiffness and damping torques about the steer axis model the effects of the riders''s arms,');
disp('and appropriate stiffness and damping models mimic the flexibility effects allowed for by');
disp('the other freedoms. These models are implemented by sensing the relative translation and');
disp('rotation variables using joint sensors, using Simulink blocks to model specific force/torque');
disp('characteristics, and then actuating on the respective joint primitives using joint actuators.');
disp('(Stiffness and damping torques could instead be modeled with Joint Spring & Damper blocks.)');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Lateral stiffness','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Lateral stiffness','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Lateral stiffness');
pause;
close_system('mech_motorcycle_stability/Lateral stiffness');
for i = 1:4,
    set_param('mech_motorcycle_stability/Front twist stiffness','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front twist stiffness','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front twist stiffness');
pause;
close_system('mech_motorcycle_stability/Front twist stiffness');
for i = 1:4,
    set_param('mech_motorcycle_stability/Steering restraint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Steering restraint','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Steering restraint');
pause;
close_system('mech_motorcycle_stability/Steering restraint');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('The rear wheel assembly is connected to the rear frame by an inclined revolute axis with');
disp('appropriate damping and stiffness coefficients. The rider''s upper body is connected to the');
disp('rear frame by a revolute joint along the longitudinal axis at saddle height. The rider''s');
disp('muscular activity in remaining upright relative to the frame is modeled by a spring-damper');
disp('system. These forces are modeled by sensing the appropriate variables using joint sensor blocks,');
disp('implementing the torque characteristics using Simulink blocks, and then actuating on the respective');
disp('joints using joint actuators. (These effects could instead be modeled with Joint Spring & Dampers.)');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rider spring-damper','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rider spring-damper','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Rider spring-damper');
pause;
close_system('mech_motorcycle_stability/Rider spring-damper');
for i = 1:4,
    set_param('mech_motorcycle_stability/Twist spring-damper','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Twist spring-damper','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Twist spring-damper');
pause;
close_system('mech_motorcycle_stability/Twist spring-damper');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('The rear frame is connected to the ground frame by a compound joint that allows the following');
disp('relative motions between them. Two prismatic axes are used to model longitudinal and lateral');
disp('linear motion. A revolute axis along the vertical allows the rear frame to yaw relative to');
disp('the ground frame, while a second revolute axis along the longitudinal axis of the cycle is');
disp('used to model roll. The base of the joint is connected to the ground block while the follower');
disp('is connected to the rear frame. This has the immediate effect of ordering the rotation and');
disp('translation sequence and assigning a directional sense to the underlying variables.');
disp(' ');
disp('The joint construction here results in positive motion being a motion of the rear frame relative to');
disp('ground, with the first motion being a translation along the x-axis, the second a translation along');
disp('the y-axis, the third (yaw) a rotation of the rear frame about the first revolute joint which is fixed');
disp('along the vertical axis (this carries the second revolute joint with it), and the fourth (roll) a rotation');
disp('about the second revolute joint in the position that it acquires following the first rotation. The ordering');
disp('and sense of the degrees of freedom are critical for the interpretation of the joint motion and for');
disp('correct actuation.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear frame freedoms','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear frame freedoms','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
open_system('mech_motorcycle_stability/Rear frame freedoms');
pause(4);
set_param('mech_motorcycle_stability','Open','off');
mech_support('Close','mech_motorcycle_stability/Rear frame freedoms');
pause(0.5);
disp('Since longitudinal tire forces are not modeled here, velocity constraints are used to force the rigid');
disp('wheels to rotate with angular velocities corresponding to rigid rolling. This is achieved by');
disp('connecting a velocity constraint block between each wheel and the body to which it is attached.');
disp('The velocity constraint allows the user to specify that the component of the angular velocity of');
disp('each wheel along its spindle be related to the component of the linear velocity of the carrier');
disp('body along the forward direction. Finally, the engine flywheel is connected to the main frame by');
disp('a revolute joint along the transverse direction, and it too will be constrained by a velocity');
disp('constraint to rotate at an angular velocity that is related to the forward speed of the cycle.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front rolling constraint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front rolling constraint','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Rear rolling constraint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Rear rolling constraint','BackgroundColor','white');
    pause(0.2);
end;
for i = 1:4,
    set_param('mech_motorcycle_stability/Flywheel constraint','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Flywheel constraint','BackgroundColor','white');
    pause(0.2);
end;
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('The tire force and tire moment systems are taken from [1]. Since the model is only intended to');
disp('predict small amplitude stability about nominal upright forward motion, the nominal vertical');
disp('tire forces are computed by applying a force balance in the vertical direction and a moment balance');
disp('about the rear contact patch prior to simulating the model. These nominal vertical forces are speed-');
disp('dependent because the aerodynamic forces depend on speed.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model');
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Vertical force','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Vertical force','BackgroundColor','white');
    pause(0.2);
end;
close_system('mech_motorcycle_stability/Front tire model');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('Lateral forces arise from two sources, side slip and camber. Side slip results from motion of the');
disp('contact patch (the point of contact between the tire and the ground plane) relative to the ground in');
disp('the lateral direction. An associated strain field in the contact patch in turn causes a lateral force');
disp('to be generated. Side slip also generates a self-aligning moment that tends to force the wheel to');
disp('align itself with the longitudinal axis of the cycle.');
disp(' ');
disp('Camber is measured by the angle between the wheel spindle and the ground plane and causes deformation');
disp('in the contact patch. This deformation consequently generates a lateral force. This model uses an unspun');
disp('contact patch. This assumes that the contact patch between the tire and the ground plane remains fixed');
disp('relative to the body that carries the wheel. Using an unspun contact patch makes the computation of the');
disp('contact geometry much simpler. The contact geometry is computed using standard Simulink blocks. The');
disp('orientation of the carrier body and the velocity of the unspun contact patch are measured using a body');
disp('sensor. Computation of contact geometry and slip angles is performed in the tire model.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Contact','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Contact','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Contact');
pause;
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Contact/Contact geometry','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Contact/Contact geometry','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Contact/Contact geometry');
pause;
close_system('mech_motorcycle_stability/Front tire model/Contact/Contact geometry');
close_system('mech_motorcycle_stability/Front tire model/Contact');
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Lateral slip computation','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Lateral slip computation','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Lateral slip computation');
pause;
close_system('mech_motorcycle_stability/Front tire model/Lateral slip computation');
close_system('mech_motorcycle_stability/Front tire model');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('The lateral slip force and the self-aligning moments are proportional to the side slip angle.');
disp('This amounts to linearizing the tire model about the nominal motion condition. The constants');
disp('of proportionality are functions of tire load and these vary with speed as aerodynamic lift and');
disp('drag forces as well as aerodynamic pitching moments are included in the model. The lateral force');
disp('and self-aligning moment are delayed by a simple relaxation model that accounts for the time that');
disp('the strain field takes to build up in the contact patch. The time constant is given by the');
disp('expression s/u, where u is the velocity of the contact patch relative to the ground in the');
disp('longitudinal direction and s is the tire relaxation constant. The relaxation constant varies with');
disp('normal load in accordance with measured data and behaves like a first-order speed-dependent delay.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model');
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Lateral force','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Lateral force','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Lateral force');
pause;
close_system('mech_motorcycle_stability/Front tire model/Lateral force');
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Aligning moment','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Aligning moment','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Aligning moment');
pause;
close_system('mech_motorcycle_stability/Front tire model/Aligning moment');
close_system('mech_motorcycle_stability/Front tire model');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('Lateral forces, aligning moments, and overturning moments that are proportinal to camber angle');
disp('are also introduced. Again the constants of proportionality are functions of the normal load but');
disp('no time lag is introduced. These forces depend instantaneously on camber angle. The overturning');
disp('moment results from the migration of the contact patch from the centerline of the tire as a');
disp('function of camber angle. This effect is modeled by applying a force and a torque at the');
disp('theoretical center of the tire and, since this is geometric in origin, it too is modeled');
disp('as an instantaneous force system. A nonlinear rolling resistance is also included.');
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
set_param('mech_motorcycle_stability','Open','on');
open_system('mech_motorcycle_stability/Front tire model');
pause(1);
for i = 1:4,
    set_param('mech_motorcycle_stability/Front tire model/Overturning and rolling effects','BackgroundColor','red');
    pause(0.2);
    set_param('mech_motorcycle_stability/Front tire model/Overturning and rolling effects','BackgroundColor','white');
    pause(0.2);
end;
open_system('mech_motorcycle_stability/Front tire model/Overturning and rolling effects');
pause;
close_system('mech_motorcycle_stability/Front tire model/Overturning and rolling effects');
close_system('mech_motorcycle_stability/Front tire model');
pause(1);
set_param('mech_motorcycle_stability','Open','off');
pause(0.5);
disp('Finally, a velocity driver forces the cycle to travel at a fixed speed in the forward');
disp('direction. This driver is applied between the ground plane and the unspun contact patch');
disp('at the rear wheel.');
disp(' ');
disp('PRESS any key to continue ...');
pause;
clc;
disp('                                  Stability Analysis');
disp(' ');
disp('One purpose of the model is to examine the small-amplitude stability characteristics of');
disp('the motorcycle about a nominal motion condition where the cycle is upright and traveling in');
disp('a straight line at a fixed speed. Anyone who has ridden a bicycle knows that with no forward');
disp('velocity, the bicycle essentially behaves like an upside-down pendulum. The upright configuration');
disp('is an unstable equilibrium point where the cycle tends to fall over or capsize. As the cycle');
disp('speed is increased from zero, the capsize mode becomes less severe, and the cycle gradually');
disp('becomes easier to balance until, above a certain critical speed, the unstable capsize mode');
disp('converts to a lightly damped, but stable, mode often referred to as the weave mode. If the');
disp('weave mode is excited, the cycle exhibits a snake-like weaving motion. Another oscillation');
disp('mode typically seen on cycles is the so-called wobble mode. In this mode, the front wheel');
disp('oscillates about the steering axis at a frequency usually much larger than that of the weave mode.');
disp('Our motorcycle model will be used to illustrate these modes.');
disp(' ');
disp('To determine the stability characteristics, we linearize the dynamics about a steady state and');
disp('examine the eigenvalues of the associated state evolution matrix. Linear systems theory then');
disp('tells us that the associated linear model is stable if and only if the resulting eigenvalues');
disp('have a negative real part. By repeating this process over a range of speeds, we can construct');
disp('a plot of the eigenvalues as a function of the motorcycle''s speed. This so-called root locus plot');
disp('is a common tool used in the design of single-input/single-output control systems. To produce the');
disp('root locus, we execute the following M-code:');
disp(' ');
echo on;
% locus = [];
% for i=1:20, % Extract 20 linearizations.
%    vu = 53.5*(i-1)/19;                        Speed range 0 to 53.5 m/s.
%    disp(['Current speed is: ',num2str(vu)]);
%    motorcycle_dat                             Compute the vertical tire force and tire model coefficients.
%    [A,B,C,D] = linmod('mech_motorcycle_stability');             Linearize the dynamics at the specified speed.
%    locus(:,i) = eig(A);                       Define locus of eigenvalues.
% end;
echo off;
disp(' ');
disp('PRESS any key to perform the computations ...');
pause;
locus = [];
figure(1);
axis([-40 10 0 60]);
xlabel('Real');
ylabel('Imaginary');
title('Motorcycle root locus plot');
grid;
hold;
Frame =[];
range = [0.001 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 6 7 8 9 10 :53];
warning off;
for i=1:length(range),
   vu = range(i);
   disp(['Current speed is: ',num2str(vu)]);
   mech_motorcycle_data;                             
   [A,B,C,D] = linmod('mech_motorcycle_stability');             
   locus(:,i) = eig(A);
   plot(locus(:,1:i),'.');
   Frame = getframe;
end;
warning on;
disp(' ');
disp('PRESS any key to continue ...');
disp(' ');
pause;
openfig('mech_motorcycle_stability_fig');
disp('The motorcycle demonstration is complete!');
disp(' ');
disp('                                           REFERENCES');
disp(' ');
disp('1. LISP PROGRAMMING OF THE ''SHARP 1994'' MOTORCYCLE MODEL, S. Evangelou and D. J. N. Limebeer');
disp('   LISP PROGRAMMING OF THE ''SHARP 1971'' MOTORCYCLE MODEL, S. Evangelou and D. J. N. Limebeer');
disp(' ');
disp('   Department of Electrical and Electronic Engineering, Imperial College of Science,');
disp('   Technology and Medicine, Exhibition Road, London SW7 2BT, UK.');
disp('   e-mail: d.limebeer@ic.ac.uk     Web page: http://www.ee.ic.ac.uk/control/motorcycles');
disp(' ');
disp('2. E. J. H. de Vries and H. B. Pacejka. The effect of tire modelling on the stability analysis of motorcycles,');
disp('   Proc. AVEC''98, SAE Japan, 355-360 (1998).');
disp(' ');
disp('3. R. S. Sharp and D. J. N. Limebeer. A motorcycle model for stability and control analysis.');
disp('   Multibody System Dynamics, 6(2):123-142, 2001.');
disp(' ');
