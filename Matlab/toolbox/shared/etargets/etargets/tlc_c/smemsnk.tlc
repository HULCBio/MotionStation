%% smemsnk.tlc
%% Copyright 2001-2004 The MathWorks, Inc.
%% $Revision: 1.1.6.1 $ $Date: 2004/04/01 16:17:45 $

%implements smemsnk "C"


%% Function: BlockTypeSetup ================================================
%%
%function BlockTypeSetup(block, system) void
%endfunction %% BlockTypeSetup


%% Function: BlockInstanceSetup ================================================
%%
%function BlockInstanceSetup(block,system) void
%endfunction %% BlockInstanceSetup


%% Function: Outputs ===========================================================
%%
%%  Abstract:
%%
%function Outputs(block,system) Output
  %assign INPORT  = 0
  %assign IsRealtimeEnabled = SFcnParamSettings.isRealtimeEnabled
  %if IsRealtimeEnabled
    %assign dtype   = LibBlockInputSignalDataTypeName(INPORT,"")
  /* %<Type> Block: %<Name> (%<ParamSettings.FunctionName>) */
  {
    /* Memory Mapped Output */
    const %<dtype> *memind = (%<dtype> *) %<SFcnParamSettings.memAddress>;
    
    %assign rollVars = ["U"]
    %roll idx = RollRegions, lcv = RollThreshold, block,"Roller", rollVars
        *(%<dtype> *)(memind++) = (%<dtype>) %<LibBlockInputSignal (0, "", lcv, idx)>;
    %endroll
  }
  %endif
%endfunction %% Outputs  
  
  
%% Function: Start ===========================================================
%%
%%  Abstract:
%%
%function Start(block,system) Output
  %assign dtype = LibGetDataTypeNameFromId(SFcnParamSettings.dataTypeID)
  %assign useInitValue = SFcnParamSettings.useInitValue
  %assign initValue = SFcnParamSettings.initValue
  %if useInitValue
  /* %<Type> Block: %<Name> (%<ParamSettings.FunctionName>) */
  {
    /* Memory Mapped Output */

    %if SFcnParamSettings.isRealtimeEnabled
        const %<dtype> *memind = (%<dtype> *) %<SFcnParamSettings.memAddress>;    
        %assign rollVars = []
        %roll idx = RollRegions, lcv = RollThreshold, block,"Roller", rollVars
            *(%<dtype> *)(memind++) = (%<dtype>) %<initValue>;
        %endroll
    %else
        %% write only a scalar if not updated at real-time    
        *(%<dtype> *)(%<SFcnParamSettings.memAddress>) = (%<dtype>) %<initValue>;
    %endif
  }
  %endif
%endfunction %% Start  
  
  
%% Function: Terminate ===========================================================
%%
%%  Abstract:
%%
%function Terminate(block,system) Output
  %assign dtype = LibGetDataTypeNameFromId(SFcnParamSettings.dataTypeID)
  %assign useTermValue = SFcnParamSettings.useTermValue
  %assign termValue = SFcnParamSettings.termValue
  %if useTermValue
  /* %<Type> Block: %<Name> (%<ParamSettings.FunctionName>) */
  {
    /* Memory Mapped Output */
    
    %if SFcnParamSettings.isRealtimeEnabled    
        const %<dtype> *memind = (%<dtype> *) %<SFcnParamSettings.memAddress>;
        %assign rollVars = []
        %roll idx = RollRegions, lcv = RollThreshold, block,"Roller", rollVars
            *(%<dtype> *)(memind++) = (%<dtype>) %<termValue>;
        %endroll
    %else
        %% write only a scalar if not updated at real-time
        *(%<dtype> *)(%<SFcnParamSettings.memAddress>) = (%<dtype>) %<termValue>;
    %endif
  }
  %endif
%endfunction %% Terminate
