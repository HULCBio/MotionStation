function createBatFile_TItarget(modelInfo)
% createBatFile_TItarget     Creates a batch file (.bat) for use with the 
%                   TI C6000 target in "Generate Code Only" mode.

% $RCSfile: createBatFile_TItarget.m,v $
% $Revision: 1.1.6.3 $ $Date: 2004/04/08 21:07:43 $
% Copyright 2001-2004 The MathWorks, Inc.

if isUsingDSPBIOS_TItarget(modelInfo) & ...
        ~isNotGenerateCodeOnly_DSPtarget(modelInfo.buildArgs),
    error(['Generate_code_only is not supported when you are '...
        'using DSP/BIOS.']);
end

fName = [modelInfo.name '.bat'];

ccsInstallPath = getCcsInstallPath;

% Header
TXT{1}     = ['rem   ----------------------  ' fName ' ---------------------  '];
TXT{end+1} =  'rem   This file has been created by the Embedded Target for ';
TXT{end+1} =  'rem   TI C6000 DSP.  Its purpose is to assist you in compiling';
TXT{end+1} =  'rem   and linking the generated code without using';
TXT{end+1} =  'rem   Code Composer Studio(R).';
TXT{end+1} =  'rem   This file is created only when the Build Action is'; 
TXT{end+1} =  'rem   "Generate_code_only".  ';
TXT{end+1} =  'rem   You must first execute dosrun.bat, which is generated by';
TXT{end+1} =  'rem   the CCS installer, to set up the system environment for ';
TXT{end+1} =  'rem   command-line cgtools usage. ';
TXT{end+1} =  'rem   In addition to compiler switches, the cl6x command below';
TXT{end+1} =  'rem   also consists of linker switches (demarcated by the ';
TXT{end+1} =  'rem   -z switch).';
TXT{end+1} =  'rem   ------------------------------------------------------- ';

% We generate something like this
% C:\ti\c6000\cgtools\bin\cl6x 
% {list of source files} -@c6701evmafxr.bld 
% -i"C:\ti\c6000\cgtools\include" -z c6701evmafxr.cmd 
% -c -o"c6701evmafxr.out" 
% -x -i"C:\ti\c6000\cgtools\lib" -l"rts6701.lib" 
% -i"C:\ti\c6000\rtdx\lib"  -l"rtdx.lib" 
% -i"<matlablroot>\toolbox\rtw\targets\tic6000\target\rtlib" -l"rtw_c6700.lib" 
% -i"<matlablroot>\toolbox\rtw\targets\tic6000\target\rtlib" -l"dsp_rt_c6700.lib"

[projectFiles,buildOptions] = prepareProject_TItarget([],modelInfo);

compilerProjectFilesStr = '';
linkerProjectFilesStr = '';
for k = 1:length(projectFiles),
    file = projectFiles{k};
    if ~isempty(file),
        if beginsWith(file,pwd), 
            % extract filename without path
            [dum name ext] = fileparts(file);
            file = [name ext];
        end
        % Add it to the appropriate list.
        if endsWith(file,'.lib'), 
            linkerProjectFilesStr = [linkerProjectFilesStr ...
                    '-l"' file '" '];
        elseif endsWith(file,'.cmd'),
            linkerProjectFilesStr = [linkerProjectFilesStr ...
                    file ' ' ];
        else % neither .lib nor .cmd -> compiler
            if ~strcmp(file, 'ert_main.c'),
                compilerProjectFilesStr = [compilerProjectFilesStr ...
                    file ' ' ];
            end
        end
    end
end
    
compilerOptsStr = buildOptions{3};
linkerOptsStr = buildOptions{1};

% xxx Insert the lib files into linker "-l" list.

commandLine = [ ...
        ccsInstallPath 'c6000\cgtools\bin\cl6x ' ...
        compilerOptsStr ' ' ...
        '-i"' ccsInstallPath 'c6000\cgtools\include" ' ...
        '-i"' ccsInstallPath 'c6000\rtdx\include" ' ...
        '-i"' ccsInstallPath 'c6000\bios\include" ' ...
        '-i"' ccsInstallPath 'c6000\dsplib\include" ' ...
        compilerProjectFilesStr ...
        '-z ' ...
        '-i"' ccsInstallPath 'c6000\cgtools\lib" ' ...
        '-i"' ccsInstallPath 'c6000\rtdx\lib" ' ...
        '-i"' ccsInstallPath 'c6000\bios\lib" ' ...
        '-i"' ccsInstallPath 'c6000\dsplib\lib" ' ...
        '-i"' matlabroot '\toolbox\rtw\targets\tic6000\tic6000\rtlib" ' ...
        linkerProjectFilesStr ' ' ...
        linkerOptsStr ];


% Add command line to text buffer
TXT{end+1} =  '';
TXT{end+1} =  commandLine;
% Footer
TXT{end+1} =  '';
TXT{end+1} =  'rem   ------------------------------------------------------- ';
TXT{end+1} =  ['rem   EOF  ' fName];


%-----------------------------
% Write out the file.

% Assume that the pwd is the RTW codegen directory.
% Delete the file if it exists.
if exist(fName,'file')
    try
        delete(fName);
    end
end

fid = fopen(fName,'wt');
if fid==-1,
    error(['Could not create batch file in ' pwd]);
end
formatStr = '%s\n';
for k = 1:length(TXT),
    fprintf(fid,formatStr,TXT{k});
end
fclose(fid);

% --------------------------------------------------
function ccsInstallPath = getCcsInstallPath

suffix = 'cc\bin\cc_app.exe';
try
    ccsExe = winqueryreg('HKEY_LOCAL_MACHINE', ...
     ['SOFTWARE\Classes\CLSID\{DE4FA3E7-B47F-11D1-B009-' ... 
     '0040055C1953}\LocalServer32']);
catch
    ccsExe = ['c:\ti\' suffix];
end

% Truncate the suffix, yielding the root dir of the installation
ccsInstallPath = strrep(ccsExe, suffix, '');

% --------------------------------------------------
function bool = endsWith(str1, str2)
% Determine whether str1 ends with the suffix str2.
f = findstr(str1,str2);
if isempty(f),
    bool = false;
else
    bool = isequal(f, (length(str1)-length(str2)+1) );
end

% --------------------------------------------------
function bool = beginsWith(str1, str2)
% Determine whether str1 begins with the suffix str2.
f = findstr(str1,str2);
if isempty(f),
    bool = false;
else
    bool = isequal(f, 1 );
end

% % --------------------------------------------------
% function bool = isC6711DSK(modelName)
% bool = strcmp(getTargetType_DSPtarget(modelName),'C6711DSK');
% 
% function bool = isC6701EVM(modelName)
% bool = strcmp(getTargetType_DSPtarget(modelName),'C6701EVM');

% [EOF] createBatFile_TItarget
