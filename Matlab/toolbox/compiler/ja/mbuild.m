% MBUILD   Cソースコードから実行可能ファイルをコンパイル
%
%   MBUILD [options1 ... optionN] sourcefiles1 [... sourcefileN]
%          [objectfile1 ... objectfileN] [libraryfile1 ... libraryfileN]
%          [exportfile1 ... exportfileN]
%
% 説明:
%   MBUILDは、スタンドアロン実行可能ファイルや共有ライブラリに、MATLAB
%   C/C++ Math LibraryやMATLAB C/C++ Graphics Libraryにある関数をコール
%   するソースファイルをコンパイル、リンクします。
%   
%   最初に指定される(ファイル名の拡張子のない)ファイル名は、作成される
%   実行可能ファイル名になります。追加するソースやオブジェクト、ライブ
%   ラリファイルを、外部参照を満たすために指定する事ができます。CやC++
%   ソースファイルのどちらか一方が、実行可能ファイル作成時に指定されます。
%   更に、CとC++のソースファイルは共に、CファイルがC++を互換性があれば、
%   同時に指定する事ができ、-lang cpp オプションが指定されます。
%   (下記-lang 参照)
%   
%   オプションファイルとコマンドラインオプションは共にMBUILDの行動に
%   影響を与えます。オプションファイルには、コンパイラ、リンカ、その他
%   プラットフォーム依存のツール(Windowsのリソースリンカなど)など様々な
%   ツールに引数を渡す変数リストがあります。MBUILDへのコマンドライン
%   オプションには、これらツールに渡される引数に影響を与えるかもしれ
%   ません。またMBUILDの行動の他の面をコントロールするかもしれません。
%   
% コマンドラインオプション:
%   全てのプラットフォームにおいて利用可能なオプションは、以下の通りです。
%   
%   -c
%       コンパイルのみ。リンクは行いません。
% 
%   -D<name>
%       C/C++プリプロセッサにシンボル名を定義します。
%   -D<name>[#<def>]
%       C/C++プリプロセッサにシンボル名と値を定義します。ソース内の
%       "#define <name> <value>" directive と同じです。
%   -f <optionfile>
%       利用するオプションファイルの位置と名前を指定します。MBUILDの
%       デフォルトのオプションファイル検索メカニズムを無効にします。
%   -g
%       デバッグ可能実行ファイルを作成します。このオプションが指定され
%       ると、MBUILDは相当する基本の変数を持つDEBUGFLAGSで終わるオプ
%       ションファイル変数値を加えます。(例えば、LINKDEBUGFLAGS値は、
%       リンカのコール前にLINKFLAGS値に加えられます。) このオプションは
%       オブジェクトコードを最適化するMBUILDのデフォルトの行動を
%       できないようにもします。
%   -h[elp]
%       このメッセージをプリントします。
%   -I<pathname>
%       <pathname>を#includeファイルを検索するディレクトリリストに追加
%       します。
%   -inline
%       行列アクセス関数(mx*)をインライン化します。作成された実行可能な
%       ファイルは、MATLAB C/C++ Math LibraryやMATLAB C/C++ Graphics 
%       Libraryの将来のバージョンとは互換性がないかもしれません。
%   -lang <language>
%       コンパイラ言語を指定します。<language>は、cもしくはcppとなります。
%       デフォルトでは、MBUILDはソースファイルの拡張子を調べて利用する
%       コンパイラ(CあるいはC++)を決定します。このオプションは、その
%       メカニズムを無効にします。
%   -n
%       実行を行わないフラグ。MBUILDが別の方法で実行するコマンドを出力
%       しますが、実際には実行されません。
%   -O
%       オプションファイル内でリストされている最適化フラグを含むことに
%       より、オブジェクトコードを最適化します。もしこのオプションが
%       指定されなければ、MBUILDには相当する基本変数を持つOPTIMFLAGSで
%       終わるオプションファイルの変数値を加えられます。(例えば、リンカ
%       コール前に、LINKOPTIMFLAGSの値がLINKFLAGS値に加えられます。)
%       なお最適化は、デフォルトでは有効で、-gオプションにより無効と
%       なりますが、-Oにより再び有効になります。
%   -outdir <dirname>
%       全ての出力ファイルをディレクトリ<dirname>に置きます。
%   -output <resultname>
%       実行可能ファイル<resultname>を作成します(適切な実行可能拡張子
%       を自動的に付加します)。MBUILDのデフォルトでの実行ファイル命名
%       メカニズムを無効にします。
%   -setup
%       "<UserProfile>\Application Data\MathWorks\MATLAB\R12"(Windows
%       の場合)もしくは、$HOME/.matlab/R12 (UNIXの場合)に置く事により
%       MBUILDの次回からの起動でデフォルトとして利用されるコンパイラ
%       オプションファイルを対話形式で指定します。このオプションが指定
%       されると、他のコマンドライン入力は受け付けません。
%   -U<name>
%       Cプリプロセッサシンボル<name>の初期定義を外します。
%       (-Dオプションの逆です。)
%   -v
%       オプションファイルが処理され、全てのコマンドラインの引数が検討
%       された後で、重要な内部変数の値を出力します。そのオプションや
%       ファイルが利用されたかを検証するために十分に評価される各コンパ
%       イルのステップや最後のリンクステップを出力します。デバッグに
%       対して非常に有効です。
%   <name>#<value>
%       変数<name>で、オプションファイル変数を重ね処理して消します。詳
%       細の情報は、後述のプラットフォーム依存のオプションファイルの議
%       論を参照して下さい。
%       このオプションは、オプションファイルが処理され、全てのコマンド
%       ライン引数が検討された後で処理されます。
% 
% Windowsプラットフォームでは、以下の追加オプションが利用可能です。:
% 
%   @<rspfile>
%       MBUILDにコマンドライン引数として、テキストファイル<rspfile>の
%       内容を組み込みます。
% 
% Unixプラットフォームでは、以下の追加オプションが利用可能です。:
% 
%   -<arch>
%       ローカルホストがアーキテクチャ<arch>であると仮定します。
%       <arch>で取り得る値には、sol2, hpux, hp700, alpha, ibm_rs, sgi,
%       glnx86があります。
%   -D<name>=<value>
%       Cプリプロセッサにシンボル名と値を定義します。ソース内の
%       "#define <name> <value>" ディレクティブと同じです。
%   -l<name>
%       ("ld(1)"に対する) オブジェクトライブラリ"lib<name>"とリンク
%       します。
%   -L<directory>
%       ("ld(1)"を利用してリンクする) オブジェクトライブラリルーチンが
%       あるディレクトリリストに<directory>を追加します。
%   <name>=<value>
%       変数<name>でオプションファイル変数を重ね処理して消します。詳細
%       については、後述のプラットフォーム依存のオプションファイルの
%       議論を参照して下さい。
% 
% 共有ライブラリとエクスポートファイル:
%   MBUILDはCソースコードから共有ライブラリを作成する事もできます。
%   もし1つもしくは複数の拡張子".export"のファイルがMBUILDに渡されると、
%   共有ライブラリを作成します。.exportファイルは、エクスポートされる
%   シンボル名もしくは、(コメント行として扱われるような)最初の行で # 
%   あるいは * で始まるような行が含まれる全くのテキストファイルでなければ
%   なりません。もし複数の.exportファイルが指定された場合は、全ての指定
%   された.exportファイルにある全てのシンボル名がエクスポートされます。
% 
% オプションファイルの詳細:
%   Windowsでは:
%     オプションファイルはDOSのバッチファイルとして記述されます。もし
%     オプションファイル名と位置を指定するために、-fオプションが利用
%     されない場合は、MBUILDがcompopts.batというオプションファイルを
%     探します。探すディレクトリは、先ずカレントディレクトリ、そして
%     次に "<UserProfile>\ApplicationData\MathWorks\MATLAB\R12" です。
%     オプションファイル内で指定されているどの変数も、コマンドラインの
%     引数 <name>#<value> を利用することで、コマンドラインで重ね処理して
%     消すことができます。もし<value>にスペースが含まれている場合、
%     ダブルクォートで挟まれなければなりません(例：COMPFLAGS#"opt1 opt2")。
%     この定義は、オプションファイル内で定義されている他の変数に適用する
%     こともできます。この場合、参照される変数の前に"$"を付けます。
%     (例：COMPFLAGS#"$COMPFLAGS opt2")
% 
%   UNIXでは:
%     オプションファイルは、UNIXのシェルスクリプトで書かれています。
%     もし-fオプションが、オプションファイル名やその位置を指定するために
%     利用されない場合は、MBUILDがオプションファイル名mbuildopts.shを
%     探します。探すディレクトリは、先ずカレントディレクトリ(.)、そして
%     $HOME/.matlab/R12、それから次に$MATLAB/binです。オプションファイル
%     内で指定されているその変数も、コマンドライン引数<name>=<def> を
%     利用することで、コマンドラインで重ね処理して消すことができます。
%     もし<def>にスペースが含まれている場合、シングルクォートで挟まれ
%     なければなりません(例：CFLAGS='opt1 opt2')。この定義は、オプション
%     ファイル内で定義される他の変数に適用することもできます。この場合、
%     参照される変数の前に"$"を付けます(例：CFLAGS='$CFLAGS opt2')。
% 
% 例:
%     次のコマンドは、"myprog.c"をコンパイルして、(Windows上で実行する
%     場合の)"myprog.exe"を作成します。:
% 
%       mbuild myprog.c
% 
%     デバッグする場合は、シンボリックなデバッグ情報を含むように"冗長"
%     モードを利用すると、有効です。
% 
%       mbuild -v -g myprog.c
% 
%     次のコマンドは、"mylib.c"をコンパイルして、(Windows上で実行する
%     場合の)"mylib.dll"を作成します。"mylib.dll"は、"mylib.exports"内
%     でリストされたシンボルをエクスポートします。
% 
%       mbuild mylib.c mylib.exports


% $Revision: 1.8.4.1 $  $Date: 2003/06/25 14:31:24 $
% Copyright 1984-2002 The MathWorks, Inc.
