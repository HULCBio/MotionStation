% XPCBENCH xPC Target ベンチマークを実行し、結果を表示します
%
%   XPCBENCH は、MATLABに付属するBENCH ユーティリティに、非常によく似ています。
%   BENCHは、MATLAB の機能を使用して、現在のマシンのベンチマークテストを
%   実行し、結果を、他のマシンについての、以前にストアされたベンチマークの結果
%   と比較します。マシン上で、BENCHを実行すると、このユーティリティの動作が
%   イメージできます。XPCBENCHは、名前が示すように、xPC Targetの性能を
%   ベンチマークテストするユーティリティです。いいかえると、ユーザターゲット
%   PC上のリアルタイムアプリケーション実行の性能を測定します。 
%
%   XPCBENCH を引数なしで使用する場合、現在の xPC Target 環境上ではベンチマーク
%   を実行せず、あらかじめストアされているベンチマークの結果を表示します。
%   第1図は、異なるタイプのCPUをもついくつかのターゲットPC上で実行される5つの
%   ベンチマークの結果を表示します。ベンチマークの結果は、マイクロ秒の単位で
%   表示され、特定のターゲットPC上で実行されるリアルタイムアプリケーション
%   の達成可能な最小のベースサンプルタイム(ベンチマーク)を表します。 
%   第2図は、棒グラフを使用して、ベンチマークの結果の概要(相対的な性能)を
%   表示します。
%
%   5 つのベンチマークは、以下のとおりです。
%     1. Minimal: これは、3つのブロック(Constant, Gain, Termination)のみから
%　　　　　　　　 構成される"minimal" モデルに基づいています。このモデルは、　
%                 連続状態、離散状態のいずれでもありません。このベンチマーク
%　　　　　　　　 の結果は、ターゲット PC 固有のlatencyを示します。
%
%     2. F14 :    これは、標準Simulink 例題モデル'f14'に基づいています。 
%                 MATLAB コマンドラインプロンプトでf14 と入力してモデルを
%                 開くことで、モデルの複雑さを知ることができます。
%                 モデルは、62ブロックを含み、10連続状態を定義します。
%
%      3. F14*5 : これは、同様に、標準Simulink 例題モデル'f14'に基づいて
%                 います。しかし、このベンチマークモデルは、サブシステムで
%                 モデル化される5個のf14から構成されます。そのため、この
%                 ベンチマークは、benchmark 2より5倍の時間がかかります。
%                 (310 ブロック, 50 連続状態)
%
%     4. F14*10 : このベンチマークは、10個のf14 システムを含みます 
%                 (620 ブロック、100 連続状態)
%
%     5. F14*25 : このベンチマークは、25個のf14 システムを含みます
%                 (1550 ブロック、500 連続状態)
%
%   XPCBENCH('this') は、ユーザxPC Target 環境上でベンチマークを実行します。
%   ベンチマークの実行を行うとき、xPC Target は、完全に設定され、機能する必要が
%   あります。そのため、ターゲットシステムがコネクトされ、xPC Target テスト 
%   XPCTEST の実行に成功しなければなりません。ベンチマークのの実行には、約10分
%   かかります。これには、Simulink ベンチマークモデルの生成、xPC Target アプリ
%   ケーションのビルド、および、5つのベンチマークすべてについての達成可能な
%   最小のサンプルタイムの自動検索を含みます。ベンチマークの実行後、結果は、
%   他のマシンについて得られた、あらかじめストアされたベンチマークの結果と共
%   に、表示されます。
%
%   参考 XPCTEST.



%   Copyright 1996-2001 The MathWorks, Inc.
