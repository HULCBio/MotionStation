%% $RCSfile: stic6x_fft16x16r.tlc,v $
%% $Revision: 1.1.6.1 $
%% $Date: 2004/01/22 18:32:33 $
%%
%% Copyright 2001-2003 The MathWorks, Inc.
%%
%% Abstract: Compute decimation-in-frequency forward FFT of a complex input 
%%           signal using optimized TI C62 or C64 DSPLIB fft16x16r fcn call

%implements stic6x_fft16x16r "C"

%include "tiblksutil.tlc"

%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

  %<Include_ti_header(block, "dsp_fft16x16r")>

%endfunction %% BlockTypeSetup

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
  %%
  %assign INPORT    = 0
  %assign OUTPORT   = 0
  %assign numChans  = getInportChans(INPORT)
  %assign numSamps  = getInportSamps(INPORT)
  %assign xPtr      = "(short *)" + LibBlockInputSignalAddr(INPORT, "", "", 0)
  %assign inBuffPtr = "(short *)" + LibBlockDWorkAddr(INBUFF, "", "", 0)
  %assign wPtr      = "(short *)" + LibBlockParameterAddr(W_RTP, "", "", 0)
  %assign brevPtr   = "(unsigned char *)" + LibBlockParameterAddr(BREV_RTP, "", "", 0)
  %assign yPtr      = "(short *)" + LibBlockOutputSignalAddr(OUTPORT, "", "", 0)
  %assign n_min     = SFcnParamSettings.N_MIN
  %assign offset    = 0
  %assign nmax      = numSamps
  /* C%<chipID.Value[0]>x DSP Library fft16x16r (%<ParamSettings.FunctionName>) - '%<Name>' */
  %if (numChans == 1)
    memcpy(%<inBuffPtr>, %<xPtr>, %<numSamps * 4>);
    DSP_fft16x16r(%<numSamps>, %<inBuffPtr>, %<wPtr>, %<brevPtr>, %<yPtr>, %<n_min>, %<offset>, %<nmax>);
  %else
    {
      short    *inBuffPtr = %<inBuffPtr>;
      short    *yPtr      = %<yPtr>;
      int       chanCount = %<numChans>;

      memcpy(inBuffPtr, %<xPtr>, %<numSamps * numChans * 4>);
      while (chanCount--) {
        DSP_fft16x16r(%<numSamps>, inBuffPtr, %<wPtr>, %<brevPtr>, yPtr, %<n_min>, %<offset>, %<nmax>);
        inBuffPtr += %<2 * numSamps>;
        yPtr += %<2 * numSamps>;
      }
    }
  %endif

%endfunction

%% [EOF] stic6x_fft16x16r.tlc
