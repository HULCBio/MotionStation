%% $RCSfile: stic6x_r4fft.tlc,v $
%% $Revision: 1.1.6.1 $
%% $Date: 2004/01/22 18:32:48 $
%%
%% Copyright 2001-2003 The MathWorks, Inc.
%%
%% Abstract: Compute radix-4 DIF forward FFT of a complex input 
%%           signal using optimized TI C62/C64 DSPLIB r4fft fcn call

%implements stic6x_r4fft "C"

%include "tiblksutil.tlc"

%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

  %<Include_ti_header(block, "dsp_r4fft")>

%endfunction %% BlockTypeSetup

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
  %%
  %assign INPORT        = 0
  %assign OUTPORT       = 0
  %assign numChans      = getInportChans(INPORT)
  %assign numSamps      = getInportSamps(INPORT)
  %assign signalAddress = "(short *)" + LibBlockOutputSignalAddr(OUTPORT, "", "", 0)
  %assign W_RTP_Address = "(short *)" + LibBlockParameterAddr(W_RTP, "", "", 0)
  /* C%<chipID.Value[0]>x DSP Library r4fft (%<ParamSettings.FunctionName>) - '%<Name>' */
  %if (LibBlockInputSignalBufferDstPort(INPORT) != OUTPORT)
    %<LibBlockCopyInputsToOutputs(INPORT, OUTPORT)>
  %endif
  %if (numChans == 1)
    DSP_r4fft(%<numSamps>, %<signalAddress>, %<W_RTP_Address>);
  %else
    {
      short    *inPtr            = %<signalAddress>;
      int       chanCount        = %<numChans>;
      const int realElemsPerChan = %<2 * numSamps>;
      while (chanCount--) {
        DSP_r4fft(%<numSamps>, inPtr, %<W_RTP_Address>);
        inPtr += realElemsPerChan;
      }
    }
  %endif

%endfunction

%% [EOF] stic6x_r4fft.tlc
