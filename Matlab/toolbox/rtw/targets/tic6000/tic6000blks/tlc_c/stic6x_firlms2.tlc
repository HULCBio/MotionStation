%% $RCSfile: stic6x_firlms2.tlc,v $
%% $Revision: 1.1.6.1 $
%% $Date: 2004/01/22 18:32:38 $
%%
%% Copyright 2001-2003 The MathWorks, Inc.
%%
%% Abstract: Delayed Least mean-square (dLMS) adaptive filter

%implements stic6x_firlms2 "C"

%include "tiblksutil.tlc"

%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

  %<Include_ti_header(block, "dsp_firlms2")>

%endfunction %% BlockTypeSetup


%% Function: InitializeConditions =============================================
%%
%function InitializeConditions(block, system) Output
/* C%<chipID.Value[0]>x DSP Library Initialize Conditions firlms2 (%<ParamSettings.FunctionName>) - '%<Name>' */
%assign IC_dims        = IC.Dimensions
%assign IC_rows        = IC_dims[0]
%assign IC_cols        = IC_dims[1]
%assign numICs         = IC_rows * IC_cols
%assign outBuf_Pointer = "(short *)" + LibBlockDWorkAddr(FiltTaps, "", "", 0)
%assign IC_Pointer     = "(const short *)" + LibBlockParameterAddr(IC, "", "", 0)
%if (numICs == 1)
{
  int i = %<numICs>;
  short *FiltTaps = %<outBuf_Pointer>;
  while (i--) {
    *FiltTaps++ = %<LibBlockParameter(IC, "", "", 0)>;
  }
}
%else
  memcpy(%<outBuf_Pointer>, %<IC_Pointer>, %<2*numICs>);
%endif

%endfunction %% InitializeConditions

%% Function: Outputs ==========================================================
%%
%function Outputs(block, system) Output
  %%
  %assign INPORT_DATA   = 0
  %assign INPORT_ERROR  = 1
  %assign OUTPORT_R     = 0
  %assign OUTPORT_H     = 1
  %assign FiltTapsOut   = (SFcnParamSettings.FiltOut == 1)
  %%
  /* C%<chipID.Value[0]>x DSP Library firlms2 (%<ParamSettings.FunctionName>) - '%<Name>' */
  %assign args = "%<LibBlockDWorkAddr(FiltTaps, "", "", 0)>, "
  %assign args = args + "%<LibBlockDWorkAddr(DelayLine, "", "", 0)>, "
  %assign args = args + "%<LibBlockInputSignal(INPORT_ERROR, "", "", 0)>, "
  %assign args = args + "%<LibBlockDWorkWidth(FiltTaps)>"
  %%
  /* Update delay line */
  memmove(%<LibBlockDWorkAddr(DelayLine, "", "", 0)>, %<LibBlockDWorkAddr(DelayLine, "", "", 1)>, 2 * %<LibBlockDWorkWidth(FiltTaps)>);
  %<LibBlockDWork(DelayLine, "", "", LibBlockDWorkWidth(FiltTaps))> = %<LibBlockInputSignal(INPORT_DATA, "", "", 0)>;

  /* Update adaptive filter */
  %<LibBlockOutputSignal(OUTPORT_R, "", "", 0)> = DSP_firlms2(%<args>);
  %if FiltTapsOut

    /* Copy filter coefficients to output */
    memcpy(%<LibBlockOutputSignalAddr(OUTPORT_H, "", "", 0)>, %<LibBlockDWorkAddr(FiltTaps, "", "", 0)>, %<2 * LibBlockDWorkWidth(FiltTaps)>);
  %endif
  
%endfunction

%% [EOF] stic6x_firlms2.tlc
