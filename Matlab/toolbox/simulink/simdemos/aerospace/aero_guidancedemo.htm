<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./aero_guidancedemo_files/filelist.xml">
<link rel=Edit-Time-Data href="./aero_guidancedemo_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->

<title>Designing and simulating a missile guidance system in MATLAB and
SIMULINK</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Stacey Gage</o:Author>
  <o:LastAuthor>Stacey Gage</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>3</o:TotalTime>
  <o:Created>2002-01-24T14:31:00Z</o:Created>
  <o:LastSaved>2002-01-24T14:34:00Z</o:LastSaved>
  <o:Pages>9</o:Pages>
  <o:Words>2009</o:Words>
  <o:Characters>11453</o:Characters>
  <o:Company>The MathWorks, Inc.</o:Company>
  <o:Lines>95</o:Lines>
  <o:Paragraphs>22</o:Paragraphs>
  <o:CharactersWithSpaces>14065</o:CharactersWithSpaces>
  <o:Version>9.4402</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:473640080;
	mso-list-type:hybrid;
	mso-list-template-ids:1939872694 -1796961990 -639707512 -1111094954 2082646320 1062759308 1504718614 -1485678396 -425403174 1383083178;}
@list l1
	{mso-list-id:1322810619;
	mso-list-type:hybrid;
	mso-list-template-ids:-293971742 1855227412 980680772 1734908372 -287120170 -1574555444 1629275424 14740988 -1647952960 -1289330126;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=blue style='tab-interval:.5in'>
<table width="100%" border=0 cellspacing=0 bgcolor=ffe4b0>
<tr>
<td><b>aero_guidance.mdl</b></td>
<td align=right><a href="matlab:aero_guidance"><b>Open this Model</b></a></td>
</tr>
</table>
<div class=Section1>

<p style="color:#990000; font-weight:bold; font-size:x-large"><a name=top></a>Designing and simulating a missile guidance system using MATLAB and Simulink</p>

<p>MATLAB, Simulink and Stateflow are ideal tools for the rapid development and
analysis of flight dynamics models. This document illustrates:-</p>

<ul type=disc>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo1;tab-stops:list .5in'><a href="#Model">Building a
     Simulink 3 degrees of freedom model of a missile airframe.</a></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo1;tab-stops:list .5in'><a href="#Autopilot">Designing
     a classical autopilot to control normal acceleration.</a></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo1;tab-stops:list .5in'><a href="#Guidance">Building
     a Simulink model of a homing guidance loop.</a></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo1;tab-stops:list .5in'><a href="#6DoF">Implementing
     the 6 degrees of freedom equations of motion for a rigid body.</a></li>
</ul>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'>If
you haven't already, <a href="matlab:aero_guidancedemoscript('step6');">open
the Simulink/Stateflow model aero_guidance.mdl.</a></p>


<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<h3><a name=Model></a>Simulink model of the dynamics of the airframe </h3>

<p style='margin-left:.5in'>The model of the missile airframe used in this
demonstration has been presented in a number of published papers (References
[1], [2] and [3]) on the use of advanced control methods applied to missile
autopilot design. The model represents a tail controlled missile travelling
between Mach 2 and Mach 4, at altitudes ranging between 10,000ft (3,050m) and
60,000ft (18,290m), and with typical angles of attack ranging between ±20
degrees. </p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=340 id="_x0000_i1026" src="images\guidance_missile.gif"
alt="guidance_missile.gif (29183 bytes)"></p>

<p style='margin-left:.5in'>The core element of the model&nbsp;is a nonlinear
represention of the rigid body dynamics of the airframe. The aerodynamic forces
and moments acting on the missile body are generated from coefficients that are
non-linear functions of both incidence and Mach number. The model can be
created with Simulink and the Aerospace Blockset. The aim of this blockset is to store standard components, such
as atmosphere models, which will be common to all models irrespective of the
airframe configuration.</p>

<p style='margin-left:.5in'>The model of the <a
href="matlab:aero_guidancedemoscript('step2');">Airframe</a> consists of two
main subsystems. The atmosphere model calculates the change in atmospheric
conditions with changing altitude, and the Aerodynamics and Equations of Motion
model calculates the magnitude of the forces and moments acting on the missile
body, and integrates the equations of motion.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=320 height=490 id="_x0000_i1028" src="images\guidance_airframe.gif"
alt="guidance_airframe.gif (34199 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Simulink
Model of Missile Airframe</strong></p>

<p style='margin-left:.5in'>The <a
href="matlab:aero_guidancedemoscript('step3');">Atmosphere Subsystem</a> that
is used is an approximation to the International Standard Atmosphere, and is
split into two separate regions. The troposphere region lies between sea level
and 11Km, and in this region there is assumed to be a linear temperature drop
with changing altitude. Above the troposhere lies the lower stratosphere region
ranging between 11Km and 20Km. In this region the temperature is assumed to
remain constant.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=480 id="_x0000_i1029" src="images\guidance_airden.gif"
alt="guidance_airden.gif (50383 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>International
Standard Atmosphere Model</strong></p>

<p style='margin-left:.5in'>The&nbsp; <a
href="matlab:aero_guidancedemoscript('step4');">Aerodynamics &amp; Equations of
Motion Subsystem</a> generates the forces and moments applied to the missile in
body axes, and integrates the equations of motion which define the linear and
angular motion of the airframe. The aerodynamic coefficients are stored in
datasets, and during the simulation the value at the current operating condition
is determined by interpolation using&nbsp; 2-D lookup table blocks.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=425 id="_x0000_i1030" src="images\guidance_equation.gif"
alt="guidance_equation.gif (58917 bytes)"></p>

<p class=MsoNormal style='margin-left:.5in'><a href="#top">Back to top</a> </p>


<div class=MsoNormal align=center style='margin-left:.5in;text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<h3><a name=Autopilot></a>Classical Three Loop Autopilot Design </h3>

<p style='margin-left:.5in'>The aim of the missile autopilot is to control
acceleration normal to the missile body. In this demonstration the autopilot
structure is a three loop design using measurements from an accelerometer
placed ahead of the centre of gravity, and a rate gyro to provide additional
damping. The controller gains are scheduled on incidence and Mach number, and
are tuned for robust performance at an altitude of 10,000 ft.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=295 id="_x0000_i1032" src="images\guidance_autoplay.gif"
alt="guidance_autoplay.gif (35865 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Classical
Three Loop Autopilot</strong></p>

<p style='margin-left:.5in'>To design the autopilot using classical design
techniques requires that linear models of the airframe pitch dynamics be
derived about a number of trimmed flight conditions. MATLAB can determine the
trim conditions, and derive linear state space models directly from the
non-linear Simulink model, saving both time, and aiding in the validation of
the model that has been created. The functions provided by the MATLAB Control
Toolbox then allow the designer to visualise the behaviour of the airframe open
loop frequency (or time) responses. To see how to trim and linearise the
airframe model you can run the MATLAB command line <a
href="matlab:aero_guidancedemoscript('step5');">Airframe trim demonstration</a>.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=400 height=409 id="_x0000_i1033" src="images\guidance_ltiviewe.gif"
alt="guidance_ltiviewe.gif (59890 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Airframe
Frequency Response</strong></p>

<p style='margin-left:.5in'>Autopilot designs are carried out on a number of
linear airframe models derived at varying flight conditions accross the
expected flight envelope. To implement the autopilot in the non-linear model
involves storing the autopilot gains in 2 dimensional lookup tables, and
incorporating an anti-windup gain to prevent integrator windup when the fin
demands exceed the maximum limits. Testing the autopilot in the nonlinear
Simulink model is then the best way to demonstrate satisfactory performance in
the presence of non-linearities such as actuator fin and rate limits, and with
the gains now dynamically varying with changing flight condition.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=345 id="_x0000_i1034" src="images\guidance_autop.gif"
alt="guidance_autop.gif (38730 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Simulink
implementation of gain scheduled autopilot</strong></p>

<p class=MsoNormal style='margin-left:.5in'><a href="#top">Back to top</a> </p>


<div class=MsoNormal align=center style='margin-left:.5in;text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<h3><a name=Guidance></a>Homing Guidance Loop </h3>

<p style='margin-left:.5in'>The complete <a
href="matlab:aero_guidancedemoscript('step6')">Homing Guidance Loop</a>
consists of a&nbsp; Seeker/Tracker Subsystem which returns measurements of the
relative motion between the missile and target, and the Guidance Subsystem
which generates normal acceleration demands which are passed to the autopilot.
The autopilot is now part of an inner loop within the overall homing guidance
system. Reference [4] provides information on the differing forms of guidance
that are currently in use, and provides background information on the analysis
techniques that are used to quantify guidance loop performance.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=429 id="_x0000_i1036" src="images\guidance_guidance.gif"
alt="guidance_guidance.gif (28345 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Homing
Guidance Loop</strong></p>

<p style='margin-left:.5in'>The function of the <a
href="matlab:aero_guidancedemoscript('step7');">Guidance Subsystem</a> is to
not only generate demands during closed loop tracking, but also perform an
initial search to locate the target position. A Stateflow model is used to
control the transfer between these differing modes of operation. Switching
between modes is triggered by events generated either in Simulink, or internal
to the Stateflow model. Controlling the way the Simulink model then behaves is
achieved by changing the value of the variable <em>Mode</em> that is passed out
to Simulink. This variable is used to switch between the differing control
demands that can be generated. During target search the Stateflow model
controls the tracker directly by sending demands to the seeker gimbals (<em>Sigma_d</em>).
Target acquisition is flagged by the tracker once the target lies within the
beamwidth of the seeker (<em>Acquire</em>), and after a short delay closed loop
guidance starts. Stateflow is an ideal tool for rapidly defining all the
operational modes, whether they are for normal operation, or unusual
situations. For example, the actions to be taken should there be loss of lock
on the target, or should a target not be acquired during target search are
catered for in this Stateflow diagram.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=524 id="_x0000_i1037" src="images\guidance_simguid.gif"
alt="guidance_simguid.gif (29887 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=450 height=613 id="_x0000_i1038" src="images\guidance_stateflo.gif"
alt="guidance_stateflo.gif (88829 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Guidance
Subsystem</strong></p>

<p style='margin-left:.5in'>Once the seeker has acquired the target a <a
href="matlab:aero_guidancedemoscript('step8')">Proportional Navigation Guidance</a>
(PNG) law is used to guide the missile until impact. This form of guidance law
has been used in guided missiles since the 1950s, and can be applied to radar,
infrared or television guided missiles. The navigation law requires
measurements of the closing velocity between the missile and target, which for
a radar guided missile could be obtained using a doppler tracking device, and
an estimate for the rate of change of the inertial sightline angle. </p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=500 height=426 id="_x0000_i1039" src="images\guidance_sight.gif"
alt="guidance_sight.gif (24210 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Proportional
Navigation Guidance Law</strong></p>

<p style='margin-left:.5in'>The aim of the <a
href="matlab:aero_guidancedemoscript('step9');">Seeker/Tracker Subsystem</a> is
both to drive the seeker gimbals to keep the seeker dish aligned with the
target, and to provide the guidance law with an estimate of the sightline rate.
The tracker loop time constant <em>tors</em> is set to 0.05 seconds, and is
chosen as a compromise between maximising speed of response, and keeping the
noise transmission to within acceptable levels. The stabilization loop aims to
compensate for body rotation rates, and the gain <em>Ks</em>, which is the loop
cross-over frequency, is set as high as possible subject to the limitations of
the bandwidth of the stabilizing rate gyro. The sightline rate estimate is a
filtered value of the sum of the rate of change of the dish angle&nbsp;measured
by the stabilizing rate gyro, and an estimated value for the rate of change of
the angular tracking error (<em>e</em>) measured by the receiver. In this
demonstration the bandwidth of the estimator filter is set&nbsp; to half that
of the bandwidth of the autopilot.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=409 id="_x0000_i1040" src="images\guidance_simtrack.gif"
alt="guidance_simtrack.gif (46679 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Target Tracker
Subsystem</strong></p>

<p style='margin-left:.5in'>For radar guided missiles a parasitic feedback
effect that is commonly modelled is that of <a
href="matlab:aero_guidancedemoscript('step10');">radome aberration</a>. It
occurs because the shape of the protective covering over the seeker distorts
the returning signal, and then gives a false reading of the look angle to the
target. Generally the amount of distortion is a nonlinear function of the
current gimbal angle, but a commonly used approximation is to assume a linear
relationship between the gimbal angle and the magnitude of the distortion.
Other parasitic effects, such as sensitivity in the rate gyros to normal
acceleration, are also often modelled to test the robustness of the target
tracker and estimator filters.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=640 height=420 id="_x0000_i1041" src="images\guidance_radome.gif"
alt="guidance_radome.gif (26629 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Radome
Aberration</strong></p>

<p style='margin-left:.5in'><a href="matlab:aero_guidancedemoscript('step11');">Running
the guidance simulation</a> can now demonstrate the performance of the overall
system. In this case the target is defined to be travelling at a constant speed
of&nbsp; 328m/s, on a reciprical course to the initial missile heading, and
500m above the initial missile position. From the simulation results it can be
determined that acquisition occurred 0.69 seconds into the engagement, with
closed loop guidance starting after 0.89 seconds. Impact with the target
occured at 3.46 seconds, and the range to go at the point of closest approach
was calculated to be 0.265m.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=400 height=427 id="_x0000_i1042" src="images\guidance_results.gif"
alt="guidance_results.gif (47488 bytes)"></p>

<p align=center style='margin-left:.5in;text-align:center'><strong>Simulation
Output</strong></p>

<p class=MsoNormal style='margin-left:.5in'><a href="#top">Back to top</a> </p>


<div class=MsoNormal align=center style='margin-left:.5in;text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<h3><a name=6DoF></a>Extending the model </h3>

<p style='margin-left:.5in'>Modelling the airframe and guidance loop in a
single plane is only the start of the design process. Extending the model to a
full 6 degrees of freedom representation requires the implementation of the
full equations of motion for a rigid body. Within the aerospace block library
there are 2 subsystems for integrating the <a
href="matlab:aero_guidancedemoscript('step12')">Equations of Motion</a> and
both are implemented using standard Simulink component blocks. The first
implementation uses quaternians to represent the angular orientation of the
body in space, and is ideal for simulations where the standard euler angle
definitions become singular as the pitch attitude tends to ±90 degrees. The
second subsystem implements the standard euler angle equations of motion, which
is ideal when using the model to obtain trim conditions and linear airframe
models.</p>

<p align=center style='margin-left:.5in;text-align:center'><img border=0
width=500 height=431 id="_x0000_i1044" src="images\guidance_sixdof.gif"
alt="guidance_sixdof.gif (58038 bytes)"></p>

<p class=MsoNormal style='margin-left:.5in'><a href="#top">Back to top</a> </p>


<div class=MsoNormal align=center style='margin-left:.5in;text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<h2>References </h2>

<ol start=1 type=1>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'>&quot;Robust LPV control with
     bounded parameter rates&quot;, S.Bennani, D.M.C. Willemsen, C.W. Scherer,
     AIAA-97-3641, August 1997.</li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'>&quot;Full Envelope Missile
     Longitudinal Autopilot Design using the State-Dependent Riccati Equation
     Method&quot;, C.P.Mracek and J.R. Cloutier, AIAA-97-3767, August 1997.</li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'>&quot;Gain-Scheduled Missile
     Autopilot Design Using Linear Parameter Varying Transformations&quot;,
     J.S.Shamma, J.R. Cloutier, Journal of Guidance, Control and Dynamics, Vol.
     16, No. 2, March-April 1993.</li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'>&quot;Modern Navigation,
     Guidance, and Control Processing Volume 2&quot;, Ching-Fang Lin, ISBN
     0-13-596230-7, Prentice Hall, 1991.</li>
</ol>

<p class=MsoNormal><a href="#top">Back to top</a> </p>

</div>

</body>

</html>
