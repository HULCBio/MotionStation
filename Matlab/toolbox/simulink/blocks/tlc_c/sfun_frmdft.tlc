%% $RCSfile: sfun_frmdft.tlc,v $
%% $Revision: 1.3 $
%% $Date: 2002/04/10 18:17:29 $
%%
%% Abstract: Frame-based DFT/IDFT
%%    Place-holder TLC file for implementing a frame-based DFT/IDFT
%%
%% Copyright 1990-2002 The MathWorks, Inc.

%implements sfun_frmdft "C"


%% Function: BlockTypeSetup ====================================================
%% Abstract:
%%      Cache an extern declarations to both the DFT and IDFT routines (even
%%      if only one used)
%function BlockTypeSetup(block, system) void
  %openfile buffer
  #include "sfun_frmdft_wrapper.h"
  %closefile buffer
  %<LibCacheExtern(buffer)>
%endfunction


%% Function: Outputs ===========================================================
%% Abstract:
%%    y = dtf(u) or
%%    y = idft(u)
%%
%function Outputs(block, system) Output

  %assign x 	  = LibBlockInputSignalAddr(0, "", "", 0)
  %assign y 	  = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign frmSize = LibBlockInputSignalDimensions(0)[0]
  %assign nChans  = LibBlockInputSignalDimensions(0)[1]
  
  %if SFcnParamSettings.Inverse == "yes"
    /* S-function Frame-based IDFT block %<Name> */
    %assign dftSize = frmSize
    sfun_frm_idft_wrapper(%<x>,%<y>,%<frmSize>,%<nChans>,%<dftSize>);
  %else
    /* S-function Frame-based DFT block %<Name> */
    %assign dftSize = SFcnParamSettings.DFTSize
    sfun_frm_dft_wrapper(%<x>,%<y>,%<frmSize>,%<nChans>,%<dftSize>);
  %endif
      
%endfunction

%% [EOF] sfun_frmdft.tlc
