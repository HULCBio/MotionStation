% MEX MEX-関数のコンパイル 
%   MEX [option1 ... optionN] sourcefile1 [... sourcefileN]
%       [objectfile1 ... objectfileN] [libraryfile1 ... libraryfileN]
%   
% 詳細：
% MEX は、MEX-ファイルをコールする共有ライブラリの中のソースをコンパイ
% ルし、リンクして、MATLABで実行可能にします。結果のファイルは、つぎに
% 示すように、プラットフォームに依存した拡張子をもっています。
%   
%   
%       solaris         - .mexsol
%       hpux            - .mexhpux
%       glnx86          - .mexglx
%       glnxi64         - .mexi64
%       Mac OS X        - .mexmac
%       Windows         - .dll
%   
% 最初のファイル名(ファイル名の拡張子が付かない)は、結果として
% MEX-ファイルになるときの名前です。外部参照を満足するために、付加的な
% ソース、オブジェクト、ライブラリファイルを与えることができます。
% Windowsでは、CまたはFortranのいずれか(同時に両者は不可)を指定すること
% ができます。UNIXでは、CとFortranのソースファイル共に、MEX-ファイルを
% 作成する場合に設定できます。CとFortranが混在する場合、与えられる最初
% のソースファイルがMEX-ファイルからエクスポートされるエントリポイント
% を決定します(MATLABは、CまたはFortranのMEX-ファイルに対して、種々の
% エントリポイントシンボルをロードでき、実行できます)。
%   
% オプションファイルとコマンドラインオプションは共に、MEX の挙動に影響
% を与えます。オプションファイルは、コンパイラ、リンカ、他のプラット
% フォーム依存のツール(Windows上のリソースリンカのようなもの)のような
% 種々のツールに、引数として渡される変数のリストを含みます。MEX のコマ
% ンドラインオプションは、これらのツールにどの引数が渡される引数に影響
% を与えたり、あるいは MEX の挙動の他の面を制御することができる可能性
% があります。
%   
% コマンドラインオプション：
%     すべてのプラットフォームで使用可能なオプション
%   
%     -ada <sfcn.ads>
%         このオプションを使って、Adaで書かれたSimulink S-functionを
%         コンパイルします。ここで、<sfcn.ads> は、S-functionに対する 
%         Package Specificationです。このオプションが設定される場合、
%         -v(verbose), -g(debug), -I<pathname> オプションのみが、関連して
%         きます。すべての他のオプションは無視されます。例題とサポートしている
%         コンパイラや他の必要条件は、$MATLAB/simulink/ada/examples/README
%         を参照してください。
%     -argcheck
%         引数のチェックの付加。これは、MATLAB API関数に不正に渡される
%         引数が、設定に間違いを生じさせる原因になります。-DARGCHECK を
%         Cコンパイラフラグに加え、$MATLAB/extern/src/mwdebug.c をソース
%         ファイルのリストに加えてください(C関数のみ)。
%     -c
%         コンパイラのみ。オブジェクトファイルを作成しますが、
%         MEX-ファイルを作成しません。
%     -D<name>
%         シンボル名をCプリプロセッサに定義します。ソース内の 
%         "#define <name>" の指示と等価です。
%     -D<name>#<value>
%         シンボル名と値をCプリプロセッサに定義します。ソース内の 
%         "#define <name> <value>" directive  と等価です。
%     -f <optionsfile>
%         使用するオプションファイルの位置と名前を指定します。MEX の
%         デフォルトオプションファイル検索メカニズムを書き換えます。
%     -g
%         デバッグ可能なMEX-ファイルを作成します。このファイルを指定
%         すると、MEX は、オプションファイルの変数の値を、対応するベース
%         変数を使って DEBUGFLAGS の最後に付加します(たとえば、
%         LINKDEBUGFLAGS の値は、リンカをコールする前に、LINKFLAGS 変数
%         に付加されます)。このオプションは、作成したオブジェクトコード
%         を最適化するMEX がもつデフォルトの機能を停止します。
%     -h[elp]
%         メッセージを印刷
%     -I<pathname>
%         <pathname> をディレクトリのリストに加え、#include ファイルを
%         サーチします。
%     -inline
%         インライン行列アクセス関数(mx*)。作成されたMEX-関数は、
%	  MATLABの将来のバージョンとは整合性がとれない可能性があります。
%	  
%     -n
%         実行モードではありません。MEX が実行するあらゆるコマンドを
%         印刷しますが、実際には、そのどれも実行しません。
%     -O
%         オプションファイルの中にリストされている最適化フラグを含ませ
%         ることにより、オブジェクトコードを最適化します。このオプション
%         を指定すると、MEX は、それに対応するベース変数をもつ OPTIMFLAGS
%         の中のオプションファイル変数の値を付加します(たとえば、
%         LINKOPTIMFLAGS の値は、リンカをコールする前に、LINKFLAGS 変数
%         に付加されます)。デフォルトで実行される最適化は、-g オプション
%         で実行不可になり、-0 で再実行可能になります。
%     -outdir <dirname>
%         ディレクトリ<dirname> にすべての出力ファイルを設定
%     -output <resultname>
%         <resultname> と名付けたMEX-ファイルを作成(適切なMEX-ファイル
%         拡張子が自動的に付加されます)。MEXがもつデフォルトのMEXファイル
%         の名前を付ける機能を変更します。
%     -setup
%         MEX の将来の使用のために、デフォルトとして使用するために、
%         PREFDIR により返されるユーザプロファイルディレクトリに配置する
%         ことにより、コンパイラのオプションファイルを対話的に指定します。
%         このオプションを指定すると、他のコマンドライン入力は何も受け入れ
%         られません。
%     -U<name>
%         C プリプロセッサシンボル <name> の任意の初期定義を削除(-D オプ
%         ションの逆)
%     -v
%         オプションファイルが処理された後、重要な内部変数の値を印刷し、
%         すべてのコマンドライン引数が考慮されます。各コンパイルステップ
%         を印刷し、最終リンクステップは、どのオプションやファイルが使わ
%         れているかを明らかにするためにフルに表示します。デバッグ作業
%         には非常に便利です。
%     -V5
%         MATLAB バージョン 5 様式のMEX-ファイルをコンパイルします。
%         このオプションは、移植の目的で使うもので、恒久的な解としては
%         お勧めできません。
%     <name>#<value>
%         変数 <name> に関するオプションファイル変数を変更します。詳細
%         は、下記のプラットフォーム依存の部分を参照してください。この
%         オプションは、オプションファイルが処理された後に処理され、
%         すべてのコマンドラインの引数が対象になります。
%   
%   Windowsプラットフォームで利用可能な付加的なオプション
%   
%     @<rspfile>
%         テキストファイル<rspfile>の内容をコマンドライン引数のように
%         MEX に含ませます。
%   
%   Unixプラットフォームで利用可能な付加的なオプション
%   
%     -<arch>
%         アーキテクチャ<arch>をもつローカルホストを仮定します。<arch>に
%         使用可能な値は、sol2, hpux, hp700, alpha, ibm_rs, sgi, glnx86 
%         のいずれかです。
%     -D<name>=<value>
%         C プリプロセッサのシンボル名と値を定義します。ソースの中で、
%         "#define <name> <value>" directive と等価です。
%     -fortran
%         ゲートウエイルーチンがFortranであることを指定します。これにより、
%         リスト内の最初のソースファイルがゲートウエイルーチンである、通常
%         仮定しているスクリプトを変更します。
%     -l<name>
%         オブジェクトライブラリ"lib<name>"をリンクします("ld(1)"に対して)。
%     -L<directory>
%         <directory> をオブジェクトライブラリルーチンを含むディレクトリ
%         リストに加えます(リンクには"ld(1)"を利用)。
%     <name>=<value>
%         変数 <name> に対するオプションファイル変数を変更します。詳細
%         は、オプションファイルのプラットフォーム依存部分を参照して
%         ください。
%   
%   オプションファイルの詳細：
%     Windowsに関して
%       オプションファイルは、DOSバッチファイルで記述されています。-f 
%       オプションが、オプションファイル名や位置を指定するために使用
%       されない場合は、MEX はつぎのディレクトリの中の mexopts.bat と
%       名付けたオプションファイルをサーチします。すなわち、まず、カレ
%       ントディレクトリ、つぎに、(関数 PREFDIR により出力される)ユーザ
%　　　 プロフィールディレクトリ、最後に、[matlabroot'\bin\win32\mexopts']
%       により指定されるディレクトリです。オプションファイルで指定されて
%       いる変数は、<name>#<value> コマンドライン引数を使用することで、
%       コマンドラインで変更することができます。
%       <value> の中にスペースが含まれる場合は、
%       ダブルコーテーションで囲んでください(たとえば、
%       COMPFLAGS#"opt1 opt2" のようにします)。定義は、オプションファ
%       イルの中で定義されている他の変数を参考にします。この場合、参照さ
%       れる変数は、前置子"$"(たとえば、COMPFLAGS#"$COMPFLAGS opt2")
%	を使います。
%       
%       注意：*engmatopts.bat という名前の $MATLAB\bin\mexopts 内のオ
%             プションファイルは、スタンドアロンのMATLAB EngineやMATLAB 
%             MAT-APIの実行モジュールを作成するために、MEX(-f オプショ
%             ン)と共に使用できる特殊な場合のオプションファイルです。こ
%             のような実行可能ファイルは、拡張子".exe"を付けられます。
%   
%     UNIXに関して
%       オプションファイルは、UNIXのシェルスクリプトとして記述されます。
%       -f オプションが、オプションファイル名や位置を指定するために使用さ
%       れない場合は、MEX はつぎのディレクトリの中のオプションファイル
%       名 mexopts.sh をサーチします。ディレクトリは、カレントディレクトリ
%       そのつぎに、(関数 PREFDIR により出力される)、最後に、
%       [matlabroot '/bin'] により指定されるディレクトリです。オプション
%       ファイルで指定した変数は、<name>=<def> コマンドライン引数の使用
%       により、コマンドラインで変更することができます。<def> の中にス
%       ペースが含まれる場合は、シングルコーテーションで囲んでください
%	(たとえば、CFLAGS='opt1 opt2'のようにします)。定義は、オプション
%	ファイルの中で定義されている他の変数を参考にします。この場合、
%	参照される変数は、前置子として "$"(たとえば、CFLAGS='$CFLAGS opt2')
%       を使います。
%   
%       注意：engopts.sh と matopts.sh という名前の $MATLAB/bin 内の
%             オプションファイルは、スタンドアロンのMATLAB EngineやMATLAB
%             MAT-APIの実行モジュールを作成するために、MEX(-f オプション)
%             と共に使用できる特殊な場合のオプションファイルです。この
%             ような実行可能ファイルは、デフォルトの拡張子が与えられま
%             せん。
%   
% 例題：
% つぎのコマンドは、"myprog.c"を"myprog.mexsol"(Solarisを使っている場合)
% にコンパイルします。
%   
%         mex myprog.c
%   
% デバッグを行う場合、"verbose"モードを使うことは、シンボリックな
% デバッグ情報を含めることと同様に有効になります。
%   
%         mex -v -g myprog.c
%
% 参考 MEXDEBUG, JAVA, PCODE, PERL, PREFDIR

%   Copyright 1984-2002 The MathWorks, Inc. 
