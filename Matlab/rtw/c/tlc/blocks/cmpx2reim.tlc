%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract:
%%      ComplexToRealImag Block Target File.

%implements ComplexToRealImag "C"
 

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
  %<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: Outputs ===========================================================
%% Abstract:
%%      Extract the real and/or the imaginary part of the complex valued input
%%      signal.
%%
%function Outputs(block, system) Output
  %assign rollVars = ["U", "Y"]
  %roll idx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
    %%
    %if  ParamSettings.Output == "Real" ...
      || ParamSettings.Output == "Real and imag"
      %assign ure = LibBlockInputSignal(0, "", lcv, "%<tRealPart>%<idx>")
      %<LibBlockOutputSignal(0, "", lcv, idx)> = %<ure>;
    %endif
    %%
    %if  ParamSettings.Output == "Imag" ...
      || ParamSettings.Output == "Real and imag"
      %%
      %assign imPort = (ParamSettings.Output == "Imag") ? 0 : 1
      %assign y = LibBlockOutputSignal(imPort, "", lcv, idx)
      %if LibBlockInputSignalIsComplex(0)
	%%
	%assign uim = LibBlockInputSignal(0, "", lcv, "%<tImagPart>%<idx>")
	%<y> = %<uim>;
	%%
      %else
	%assign dTypeId = LibBlockInputSignalDataTypeId(0)
	%<y> = %<SLibGetFormattedValueFromId(dTypeId, 0)>;
      %endif
    %endif
    %%
  %endroll

%endfunction %% Outputs


%% [EOF] cmpx2reim.tlc
