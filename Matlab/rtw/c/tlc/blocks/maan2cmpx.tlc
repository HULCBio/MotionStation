%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract:
%%      MagnitudeAngleToComplex Block Target File.

%implements MagnitudeAngleToComplex "C"
 

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
  %<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: Outputs ===========================================================
%% Abstract:
%%      Get the magnitude and angle from either the input and/or the parameter
%%      and construct the complex output value.
%%
%function Outputs(block, system) Output
  %assign dTypeId = LibBlockInputSignalDataTypeId(0)
  %%
  %if ParamSettings.Input == "Magnitude and angle"
    %assign rollVars = ["U", "Y"]
  %else
    %assign rollVars = ["U", "P", "Y"]
  %endif
  %%
  %roll idx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
    %assign yre = LibBlockOutputSignal(0, "", lcv, "%<tRealPart>%<idx>")
    %assign yim = LibBlockOutputSignal(0, "", lcv, "%<tImagPart>%<idx>")
    %%
    %if ParamSettings.Input == "Magnitude"
      %assign mag = LibBlockInputSignal(0, "", lcv, idx)
      %assign ang = LibBlockParameter(ConstantPart, "", lcv, idx)
    %elseif ParamSettings.Input == "Angle"
      %assign mag = LibBlockParameter(ConstantPart, "", lcv, idx)
      %assign ang = LibBlockInputSignal(0, "", lcv, idx)
    %else
      %assign mag = LibBlockInputSignal(0, "", lcv, idx)      
      %assign ang = LibBlockInputSignal(1, "", lcv, idx)
    %endif
    %%
    %<yre> = %<mag> * %<LibGenMathFcnCall("cos", dTypeId, "%<ang>", "")>;
    %<yim> = %<mag> * %<LibGenMathFcnCall("sin", dTypeId, "%<ang>", "")>;
  %endroll

%endfunction %% Outputs


%% [EOF] maan2cmpx.tlc
