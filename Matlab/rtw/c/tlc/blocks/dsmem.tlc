%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: Data store memory block target file.

%implements DataStoreMemory "C"

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
  %<LibBlockSetCustomStorageComplianceLevel(block, 2)>
%endfunction


%% Function: Start ============================================================
%% Abstract:
%%      Output = IC
%%
%function Start(block, system) Output
  %openfile initBuffer
  %assign width = LibBlockDWorkWidth(DWORK1)
  %assign rollRegion = [0:%<width-1>]
  %assign rollVars   = ["DWork", "P"]
  %%
  %roll idx = rollRegion, lcv = RollThreshold, block, "Roller", rollVars
    %%
    %% If possible, avoid re-initializing the data store memory to zero
    %% since it it initialized to zero during dwork initialization
    %%
    %if SLibParamInitRequired(InitialValue, "", lcv, idx)
      %% Set the real and imaginary part of the state to the initial value.
      %assign rhs = LibBlockParameter(InitialValue, "", lcv, "%<tRealPart>%<idx>")
      %<LibBlockAssignDWork(DWORK1, "", lcv, "%<tRealPart>%<idx>", rhs)>
      %if LibBlockDWorkIsComplex(DWORK1)
	%if LibBlockParameterIsComplex(InitialValue)
	  %assign rhs = LibBlockParameter(InitialValue, "", lcv, "%<tImagPart>%<idx>")
	%else
	  %assign rhs = ...
	    SLibGetFormattedValueFromId(LibBlockParameterDataTypeId(InitialValue), 0)
	%endif
	%<LibBlockAssignDWork(DWORK1, "", lcv, "%<tImagPart>%<idx>", rhs)>
      %endif
    %endif
  %endroll
  %closefile initBuffer
  %if !WHITE_SPACE(initBuffer)
  /* %<Type> Block: %<Name> */
  %<initBuffer>
  
  %endif
%endfunction %% Start

%% EOF: dsmem.tlc
