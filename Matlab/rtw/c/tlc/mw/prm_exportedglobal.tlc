%% ============================================================================
%% File: prm_exportedglobal.tlc
%%
%% Abstract:
%%   
%%   
%% $Revision: 1.1.6.4 $ 
%% $Date: 2003/10/14 18:02:45 $
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%% 
%% ============================================================================
%selectfile NULL_FILE

%if EXISTS("_PRM_EXPORTEDGLOBAL_") == 0
%assign _PRM_EXPORTEDGLOBAL_ = 1

%include "prm_cacheutils.tlc"


%% Function: SLibCacheExportedGlobalPrmBuffers ==========================================
%% Abstract:
%%   Generate the declaration & instantiation buffers for ExportedGlobal parameters
%%
%function SLibCacheExportedGlobalPrmBuffers(startIdx) void

  %% Create parameter buffers
  %<SLibCreatePrmBuffer("ExportedGlobal", "Decl")>
  %<SLibCreatePrmBuffer("ExportedGlobal", "Instance")>
  
  %% Generate the parameter declaration buffer
  %assign declBuffer = FcnGenExportedGlobalPrmDecl(startIdx)
  %<SLibSetPrmBufferPart("ExportedGlobal", "Decl", "Code", declBuffer)>
  
  %% Check whether or not to write out defns for this model
  %% (for model reference, we only write out defns for the top model)
  %assign rootSystem = CompiledModel.System[NumSystems-1]
  %assign reqInsts   = LibGetSystemField(rootSystem,"ReqRootPrmHdrDataInsts")

  %% Generate the parameter instantiation buffer
  %assign instanceBuffer = ""
  %if reqInsts.ExpGlobalPrmsInst
    %assign instanceBuffer = FcnGenExportedGlobalPrmInstance(startIdx)
  %endif
  %<SLibSetPrmBufferPart("ExportedGlobal", "Instance", "Code", instanceBuffer)>
  
%endfunction %% SLibCacheExportedGlobalPrmBuffers


%% Function: FcnGenExportedGlobalPrmDecl =============================================
%% Abstract:
%%   Generate the ExportedGlobal parameters declaration buffer
%%
%function FcnGenExportedGlobalPrmDecl(startIdx) void

  %assign cacheBuffer = ""
  %foreach prmIdx = NumExportedGlobal
    %assign mdlParam = Parameter[startIdx + prmIdx]
    %assign cacheBuffer = cacheBuffer + SLibGenModelParamDefn(mdlParam)
  %endforeach
  
  %return cacheBuffer

%endfunction %% FcnGenExportedGlobalPrmDecl


%% Function: FcnGenExportedGlobalPrmInstance =======================================
%% Abstract:
%%   Generate the constant parameters instantiation buffer
%%
%function FcnGenExportedGlobalPrmInstance(startIdx) void

  %assign cacheBuffer = "" 
  %foreach prmIdx = NumExportedGlobal
    %assign mdlParam = Parameter[startIdx + prmIdx]
    %assign cacheBuffer = cacheBuffer + SLibGenUnstrModelParamInstance(mdlParam)
  %endforeach

  %return cacheBuffer
  
%endfunction %% FcnGenExportedGlobalPrmInstance


%endif %% EXISTS("_PRM_EXPORTEDGLOBAL_")

%% [EOF] prm_exportedglobal.tlc