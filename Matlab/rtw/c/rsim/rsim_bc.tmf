# Copyright 1994-2003 The MathWorks, Inc.
#
# File    : rsim_bc.tmf  $Revision: 1.44.4.7 $
#
# Abstract:
#       Real-Time Workshop template makefile for building a PC-based "rapid
#       simulation" executable from the generated C code for a Simulink model
#       using generated C code and the
#           Borland C/C++ Compiler versions: 5.3, 5.4, 5.5, 5.6
#
#       On Windows95 systems, you must verify that your DOS applications
#       have enough environment space. It is suggested that the
#       environment space be set to the maximum of 4096.
#
#       The following defines (macro names) can be used to modify the behavior
#       of the build:
#         OPT_OPTS       - Optimization option. Default is -O2 (fastest code).
#                          To enable debugging specify as OPT_OPTS="-v".
#         OPTS           - User specific options.
#         CPP_OPTS       - C++ Compiler Options
#         USER_OBJS      - Additional user objects, such as files needed by
#                          S-functions.
#         USER_PATH      - The directory path to the source (.c) files which
#                          are used to create any .obj files specified in
#                          USER_OBJS. Multiple paths must be separated
#                          with a semicolon. For example:
#                          USER_PATH="path1;path2"
#         USER_INCLUDES  - Additional include paths (i.e.
#                          USER_INCLUDES="-Iinclude-path1 -Iinclude-path2")
#
#       This template makefile is designed to be used with a system target
#       file that contains 'rtwgensettings.BuildDirSuffix' see rsim.tlc



#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the Real-Time Workshop build procedure:
#       MAKECMD - This is the command used to invoke the make utility
#       HOST    - What platform this template makefile is targeted for
#                 (i.e. PC or UNIX)
#       BUILD   - Invoke make from the Real-Time Workshop build procedure
#                 (yes/no)?
#       TARGET  - Type of target Real-Time (RT) or Nonreal-Time (NRT)
#       BUILD_SUCCESS - What make_rtw looks for when we have a successful
#                       build.
#
MAKECMD         = "%BORLAND%\bin\make" -l
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = rsim.tlc
BUILD_SUCCESS   = Created executable

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# Real-Time Workshop build procedure.
#
#  MODEL_NAME          - Name of the Simulink block diagram
#  MODEL_MODULES_OBJ   - Object file name for any additional generated source
#                        modules
#  MAKEFILE_NAME       - Name of makefile created from template makefile
#                        <model>.mk
#  MATLAB_ROOT         - Path to where MATLAB is installed.
#  MATLAB_BIN          - Path to MATLAB executable.
#  S_FUNCTIONS_LIB     - List of S-functions libraries to link.
#  S_FUNCTIONS_OBJ     - List of S-functions .obj sources
#  HASCPPSFUNCTION     - Are we compiling any C++ S-Function as .obj(1/0)
#  BUILDARGS           - Options passed in at the command line.
#  EXT_MODE            - yes (1) or no (0): Build for external mode
#  TMW_EXTMODE_TESTING - yes (1) or no (0): Build ext_test.c for external mode
#                        testing.
#  EXTMODE_TRANSPORT   - Name of transport mechanism (e.g. tcpip, serial) for extmode
#  EXTMODE_STATIC      - yes (1) or no (0): Use static instead of dynamic mem alloc.
#  EXTMODE_STATIC_SIZE - Size of static memory allocation buffer.

MODEL           = |>MODEL_NAME<|
MODULES_OBJ     = |>MODEL_MODULES_OBJ<|
MAKEFILE        = |>MAKEFILE_NAME<|
MATLAB_ROOT     = |>MATLAB_ROOT<|
MATLAB_BIN      = |>MATLAB_BIN<|
S_FUNCTIONS     = |>S_FUNCTIONS_OBJ<|
S_FUNCTIONS_LIB = |>S_FUNCTIONS_LIB<|
HASCPPSFUNCTION = |>HASCPPSFUNCTION<|
BUILDARGS       = |>BUILDARGS<|

EXT_MODE            = |>EXT_MODE<|
TMW_EXTMODE_TESTING = |>TMW_EXTMODE_TESTING<|
EXTMODE_TRANSPORT   = |>EXTMODE_TRANSPORT<|
EXTMODE_STATIC      = |>EXTMODE_STATIC_ALLOC<|
EXTMODE_STATIC_SIZE = |>EXTMODE_STATIC_ALLOC_SIZE<|

SOLVER              = |>SOLVER_OBJ<|
SOLVER_TYPE         = |>SOLVER_TYPE<|
NUMST               = |>NUMST<|
TID01EQ             = |>TID01EQ<|
NCSTATES            = |>NCSTATES<|
MULTITASKING        = |>MULTITASKING<|

PCMATLABROOT        = |>PCMATLABROOT<|

RSIM_SOLVER_SELECTION = |>RSIM_SOLVER_SELECTION<|

RSIM_WITH_SL_SOLVER = 0

!if "$(RSIM_SOLVER_SELECTION)" == "1"
!if "$(SOLVER_TYPE)" == "VariableStep"
RSIM_WITH_SL_SOLVER = 1
!endif
!endif

!if "$(RSIM_SOLVER_SELECTION)" == "2"
RSIM_WITH_SL_SOLVER = 1
!endif


#--------------------------------- Tool Locations ------------------------------
#
# Modify the following macro to reflect where you have installed
# the Borland C/C++ Compiler.
# Note: Borland Make takes the environment variable if Make macro is not defined

!ifndef BORLAND
!error BORLAND environmental variable must be defined
!endif

#---------------------------- Tool Definitions ---------------------------------

!include $(MATLAB_ROOT)\rtw\c\tools\bctools.mak

#------------------------ External mode ---------------------------------------
# Uncomment -DVERBOSE to have information printed to stdout
# To add a new transport layer, see the comments in
#   <matlabroot>/toolbox/simulink/simulink/extmode_transports.m
!if "$(EXT_MODE)" == "1"
EXT_CC_OPTS  = -DEXT_MODE -DWIN32 #-DVERBOSE
EXTMODE_PATH = $(MATLAB_ROOT)\rtw\c\src\ext_mode\common
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\tcpip
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\serial
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\custom
!if "$(EXTMODE_TRANSPORT)" == "0" #tcpip
EXT_OBJ = ext_svr.obj updown.obj ext_svr_tcpip_transport.obj ext_work.obj
!endif
!if "$(EXTMODE_TRANSPORT)" == "1" #serial_win32
EXT_OBJ = ext_svr.obj updown.obj ext_svr_serial_transport.obj ext_work.obj
EXT_OBJ = $(EXT_OBJ) ext_serial_pkt.obj ext_serial_win32_port.obj
!endif
!if "$(TMW_EXTMODE_TESTING)" == "1"
EXT_OBJ     = $(EXT_OBJ) ext_test.obj
EXT_CC_OPTS = $(EXT_CC_OPTS) -DTMW_EXTMODE_TESTING
!endif
!if "$(EXTMODE_STATIC)" == "1"
EXT_OBJ     = $(EXT_OBJ) mem_mgr.obj
EXT_CC_OPTS = $(EXT_CC_OPTS) -DEXTMODE_STATIC -DEXTMODE_STATIC_SIZE=$(EXTMODE_STATIC_SIZE)
!endif
!else
EXT_OBJ      =
EXT_CC_OPTS  =
EXTMODE_PATH =
!endif

#------------------------------ Include Path -----------------------------------

# Additional includes

ADD_INCLUDES = |>START_EXPAND_INCLUDES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_INCLUDES<|

# see MATLAB_INCLUDES and COMPILER_INCLUDES from bctools.mak

INCLUDES = ..;$(MATLAB_INCLUDES);$(ADD_INCLUDES);$(COMPILER_INCLUDES)

MATLAB_INCLUDES4 = $(MATLAB_ROOT)\rtw\c\rsim
RSIM_INCLUDES = $(MATLAB_INCLUDES4);$(INCLUDES)


#-------------------------------- C Flags --------------------------------------

# Required Options
REQ_OPTS = -3 -c -w- -H-

# Optimization Options.
#   -O2   : Optimized for speed
#   -v    : debugging options
#
!ifndef OPT_OPTS
OPT_OPTS = $(DEFAULT_OPT_OPTS)
!endif

CC_OPTS = $(REQ_OPTS) $(OPT_OPTS) $(OPTS) $(EXT_CC_OPTS)

# -DBORLAND needed to handle Floating Point Exceptions
CPP_REQ_DEFINES = -DMODEL=$(MODEL) -DHAVESTDIO -DBORLAND

!if "$(RSIM_WITH_SL_SOLVER)" == "1"
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DIMPORT=extern -DIMPORT_VAR=extern
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DNRT -DRSIM_WITH_SL_SOLVER
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DMATLAB_ROOT="$(PCMATLABROOT)"
!else
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DRT -DNUMST=$(NUMST) -DTID01EQ=$(TID01EQ)
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DNCSTATES=$(NCSTATES) -DMT=$(MULTITASKING)
!endif

CFLAGS = $(CC_OPTS) $(CPP_REQ_DEFINES) -I.. -I$(RSIM_INCLUDES) $(USER_INCLUDES)
CPPFLAGS = $(CPP_OPTS) $(CFLAGS)
#------------------------------- Source Files ----------------------------------

REQ_OBJS = $(MODEL).obj $(MODULES_OBJ) rsim_main.obj rsim_sup.obj
REQ_OBJS = $(REQ_OBJS) rsim_mat.obj rt_nonfinite.obj

!if "$(RSIM_WITH_SL_SOLVER)" == "0"
REQ_OBJS = $(REQ_OBJS) rt_sim.obj $(SOLVER)
!endif

OBJS = $(REQ_OBJS) $(USER_OBJS) $(S_FUNCTIONS) $(EXT_OBJ)

#---------------------------- Required Libraries -------------------------------

LIBMX  = libmx.lib
LIBMAT = libmat.lib
LIBRSIM_ENGINE = rsim_engine.lib

!if "$(BC_VER)" == "5.0"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc50.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc50.lib
!if "$(RSIM_WITH_SL_SOLVER)" == "1"
!error RSIM with Simulink Solver module is not suported with Borland 5.0
!endif
LIBRSIM_ENGINE =
!endif


!if "$(BC_VER)" == "5.2"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc52.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc52.lib
!if "$(RSIM_WITH_SL_SOLVER)" == "1"
!error RSIM with Simulink Solver module is not suported with Borland 5.2
!endif
LIBRSIM_ENGINE =
!endif

!if "$(BC_VER)" == "5.3"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc53.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc53.lib
!if "$(RSIM_WITH_SL_SOLVER)" == "1"
!error RSIM with Simulink Solver module is not suported with Borland 5.3
!endif
LIBRSIM_ENGINE =
!endif

!if "$(BC_VER)" == "5.4"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc54.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc54.lib
LIBRSIM_ENGINE = $(MATLAB_ROOT)\rtw\c\lib\win32\rsim_engine_bc54.lib
!endif

!if "$(BC_VER)" == "5.5" || "$(BC_VER)" == "5.5free"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc55.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc55.lib
LIBRSIM_ENGINE = $(MATLAB_ROOT)\rtw\c\lib\win32\rsim_engine_bc55.lib
!endif

!if "$(BC_VER)" == "5.6" || "$(BC_VER)" == "5.6free"
LIBMX  = $(MATLAB_ROOT)\rtw\c\lib\win32\libmx_bc56.lib
LIBMAT = $(MATLAB_ROOT)\rtw\c\lib\win32\libmat_bc56.lib
LIBRSIM_ENGINE = $(MATLAB_ROOT)\rtw\c\lib\win32\rsim_engine_bc56.lib
!endif

!if "$(RSIM_WITH_SL_SOLVER)" == "1"
MAT_LIBS = $(LIBMX) $(LIBMAT) $(LIBRSIM_ENGINE)
!else
MAT_LIBS = $(LIBMX) $(LIBMAT)
!endif

#---------------------------- Additional Libraries -----------------------------

LIBS =
|>START_PRECOMP_LIBRARIES<|
!if "$(OPT_OPTS)" == "$(DEFAULT_OPT_OPTS)"
!if "$(BC_VER)" == "5.0"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc50.lib
!elif "$(BC_VER)" == "5.2"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc52.lib
!elif "$(BC_VER)" == "5.3"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc53.lib
!elif "$(BC_VER)" == "5.4"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc54.lib
!elif "$(BC_VER)" == "5.5" || "$(BC_VER)" == "5.5free"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc55.lib
!elif "$(BC_VER)" == "5.6" || "$(BC_VER)" == "5.6free"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc56.lib
!else
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib
!endif
!else
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib
!endif |>END_PRECOMP_LIBRARIES<|
|>START_EXPAND_LIBRARIES<|
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib |>END_EXPAND_LIBRARIES<|
LIBS = $(LIBS) $(S_FUNCTIONS_LIB)
BCLIBS = cw32.lib import32.lib

#------------------------------- Temp File -------------------------------------

!if $d(TEMP)
TEMPFILE = $(TEMP)\$(MODEL).tmp
!else
!if $d(TMP)
TEMPFILE = $(TMP)\$(MODEL).tmp
!else
TEMPFILE = $(MODEL).tmp
!endif
!endif

#----------------------------- Source Path -------------------------------------

# User source path

!ifdef USER_PATH
EXTRA_PATH = ;$(USER_PATH)
!else
EXTRA_PATH =
!endif

# Additional source path

ADD_SOURCES = |>START_EXPAND_RULES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_RULES<|

# Source path

.path.c = .;..;$(MATLAB_ROOT)\rtw\c\rsim;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH);$(ADD_SOURCES)$(EXTRA_PATH)
.path.cpp = .;..;$(MATLAB_ROOT)\rtw\c\rsim;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH);$(ADD_SOURCES)$(EXTRA_PATH)
#--------------------------------- Rules ---------------------------------------

.autodepend

..\$(MODEL).exe : $(OBJS) $(LIBS) $(MAT_LIBS)
        @$(ECHO) "Linking $(MODEL).exe"
        $(LD) -ap -x @&&|
        -L$(LIB) +
        c0x32.obj $(OBJS), +
        ..\$(MODEL).exe,$(MODEL).map, +
        $(LDFLAGS) $(LIBS) $(MAT_LIBS) $(BCLIBS)
|
!if "$(RSIM_WITH_SL_SOLVER)" == "1"
	@$(ECHO) "### Note: $(MODEL).exe will check out a Simulink license when run"
!endif
        @$(ECHO) "### $(BUILD_SUCCESS): $(MODEL).exe"

.c.obj :
        @$(ECHO) "Compiling $@"
        @$(CC) @&&|
        $(CFLAGS) $(<)
|

.cpp.obj :
        @$(ECHO) "Compiling $@"
        @$(CC) @&&|
        $(CPPFLAGS) $(<)
|



$(OBJS) : $(MAKEFILE) rtw_proj.tmw

# Libraries

libmx.lib : $(MATLAB_ROOT)\extern\include\_libmx.def $(MAKEFILE)
	$(PRELINK) $@ $(MATLAB_ROOT)\extern\include\_libmx.def
	@$(ECHO) "### $@ Created"

libmat.lib : $(MATLAB_ROOT)\extern\include\_libmat.def $(MAKEFILE)
	$(PRELINK) $@  $(MATLAB_ROOT)\extern\include\_libmat.def
	@$(ECHO) "### $@ Created"

rsim_engine.lib : $(MATLAB_ROOT)\rtw\c\rsim\rsim_engine_bc.def $(MAKEFILE)
	$(PRELINK) $@  $(MATLAB_ROOT)\rtw\c\rsim\rsim_engine_bc.def
	@$(ECHO) "### $@ Created"

|>START_EXPAND_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<||>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@$(ECHO) "Creating $@"
	$(LIBCMD) $(LIBFLAG) $@ @&&|
	+$(MODULES_|>EXPAND_LIBRARY_NAME<|: = +)
|
	@$(ECHO) "### $@ Created"

|>END_EXPAND_LIBRARIES<|

|>START_PRECOMP_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<||>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@$(ECHO) "Creating $@"
	$(LIBCMD) $(LIBFLAG) $@ @&&|
	+$(MODULES_|>EXPAND_LIBRARY_NAME<|: = +)
|
	@$(ECHO) "### $@ Created"

|>END_PRECOMP_LIBRARIES<|

#[eof] rsim_bc.tmf
