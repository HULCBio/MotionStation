# Copyright 1994-2003 The MathWorks, Inc.
#
# File    : grt_bc.tmf  $Revision: 1.49.4.10 $
#
# Abstract:
#	Real-Time Workshop template makefile for building a WindowsNT-based
#	or Windows95-based stand-alone generic real-time version of Simulink
#	model using generated C code and the
#		Borland C/C++ Compiler versions 5.0, 5.2, 5.3, 5.4, 5.5, 5.6
#
#       On Windows95 systems, you must verify that your DOS applications
#	have enough environment space. It is suggested that the
# 	environment space be set to the maximum of 4096.
#
#       The following defines (macro names) can be used to modify the behavior
#       of the build:
#	  OPT_OPTS       - Optimization option. Default is -O2 (fastest code).
#			   To enable debugging specify as OPT_OPTS=-v.
#	  OPTS           - User specific options.
#         CPP_OPTS       - C++ Compiler Options
#	  USER_OBJS      - Additional user objects, such as files needed by
#			   S-functions.
#         USER_PATH      - The directory path to the source (.c) files which
#                          are used to create any .obj files specified in
#                          USER_OBJS. Multiple paths must be separated
#                          with a semicolon. For example:
#                          USER_PATH="path1;path2"
#	  USER_INCLUDES  - Additional include paths (i.e.
#			   USER_INCLUDES="-Iinclude-path1 -Iinclude-path2")
#
#       This template makefile is designed to be used with a system target
#       file that contains 'rtwgensettings.BuildDirSuffix' see grt.tlc



#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the Real-Time Workshop build procedure:
#	MAKECMD - This is the command used to invoke the make utility
#	HOST    - What platform this template makefile is targeted for
#                 (i.e. PC or UNIX)
#	BUILD   - Invoke make from the Real-Time Workshop build procedure
#                 (yes/no)?
#       TARGET  - Type of target Real-Time (RT) or Nonreal-Time (NRT)
#
#       BUILD_SUCCESS - What make_rtw looks for when we have a successful
#                       build.
#
MAKECMD         = "%BORLAND%\bin\make" -l
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = grt.tlc
BUILD_SUCCESS   = *** Created

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# Real-Time Workshop build procedure.
#
#  MODEL_NAME          - Name of the Simulink block diagram
#  MODEL_MODULES_OBJ   - Object file name for any additional generated source
#                        modules
#  MAKEFILE_NAME       - Name of makefile created from template makefile
#                        <model>.mk
#  MATLAB_ROOT         - Path to where MATLAB is installed.
#  MATLAB_BIN          - Path to MATLAB executable.
#  S_FUNCTIONS_LIB     - List of S-functions libraries to link.
#  S_FUNCTIONS_OBJ     - List of S-functions .obj sources
#  HASCPPSFUNCTION     - Are we compiling any C++ S-Function as .obj(1/0)
#  SOLVER_OBJ          - Solver object file name
#  NUMST               - Number of sample times
#  TID01EQ             - yes (1) or no (0): Are sampling rates of continuous
#                        task (tid=0) and 1st discrete task equal.
#  NCSTATES            - Number of continuous states
#  BUILDARGS           - Options passed in at the command line.
#  MULTITASKING        - yes (1) or no (0): Is solver mode multitasking
#  EXT_MODE            - yes (1) or no (0): Build for external mode
#  TMW_EXTMODE_TESTING - yes (1) or no (0): Build ext_test.c for external mode
#                        testing.
#  EXTMODE_TRANSPORT   - Index of transport mechanism (e.g. tcpip, serial) for extmode
#  EXTMODE_STATIC      - yes (1) or no (0): Use static instead of dynamic mem alloc.
#  EXTMODE_STATIC_SIZE - Size of static memory allocation buffer.
#  GENSFCN             - Are we generating a wrapper S-Function (1/0) ?

MODEL                = |>MODEL_NAME<|
MODULES_OBJ          = |>MODEL_MODULES_OBJ<|
MAKEFILE             = |>MAKEFILE_NAME<|
MATLAB_ROOT          = |>MATLAB_ROOT<|
MATLAB_BIN           = |>MATLAB_BIN<|
S_FUNCTIONS          = |>S_FUNCTIONS_OBJ<|
S_FUNCTIONS_LIB      = |>S_FUNCTIONS_LIB<|
HASCPPSFUNCTION      = |>HASCPPSFUNCTION<|
SOLVER               = |>SOLVER_OBJ<|
NUMST                = |>NUMST<|
TID01EQ              = |>TID01EQ<|
NCSTATES             = |>NCSTATES<|
BUILDARGS            = |>BUILDARGS<|
MULTITASKING         = |>MULTITASKING<|
EXT_MODE             = |>EXT_MODE<|
TMW_EXTMODE_TESTING  = |>TMW_EXTMODE_TESTING<|
EXTMODE_TRANSPORT    = |>EXTMODE_TRANSPORT<|
EXTMODE_STATIC       = |>EXTMODE_STATIC_ALLOC<|
EXTMODE_STATIC_SIZE  = |>EXTMODE_STATIC_ALLOC_SIZE<|
MEXEXT               = |>MEXEXT<|
GENSFCN              = 0

#--------------------------------- Tool Locations -----------------------------
#
# Modify the following macro to reflect where you have installed
# the Borland C/C++ Compiler.
# Note: Borland Make takes the environment variable if Make macro is not defined

!ifndef BORLAND
!error BORLAND environmental variable must be defined
!endif

#---------------------------- Tool Definitions ---------------------------

!include $(MATLAB_ROOT)\rtw\c\tools\bctools.mak


#------------------------ External mode ---------------------------------------
# Uncomment -DVERBOSE to have information printed to stdout
# To add a new transport layer, see the comments in
#   <matlabroot>/toolbox/simulink/simulink/extmode_transports.m
!if "$(EXT_MODE)" == "1"
EXT_CC_OPTS  = -DEXT_MODE -DWIN32 #-DVERBOSE
EXTMODE_PATH = $(MATLAB_ROOT)\rtw\c\src\ext_mode\common
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\tcpip
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\serial
EXTMODE_PATH = $(EXTMODE_PATH);$(MATLAB_ROOT)\rtw\c\src\ext_mode\custom
!if "$(EXTMODE_TRANSPORT)" == "0" #tcpip
EXT_OBJ = ext_svr.obj updown.obj ext_svr_tcpip_transport.obj ext_work.obj
!endif
!if "$(EXTMODE_TRANSPORT)" == "1" #serial_win32
EXT_OBJ = ext_svr.obj updown.obj ext_svr_serial_transport.obj ext_work.obj
EXT_OBJ = $(EXT_OBJ) ext_serial_pkt.obj ext_serial_win32_port.obj
!endif
!if "$(TMW_EXTMODE_TESTING)" == "1"
EXT_OBJ     = $(EXT_OBJ) ext_test.obj
EXT_CC_OPTS = $(EXT_CC_OPTS) -DTMW_EXTMODE_TESTING
!endif
!if "$(EXTMODE_STATIC)" == "1"
EXT_OBJ     = $(EXT_OBJ) mem_mgr.obj
EXT_CC_OPTS = $(EXT_CC_OPTS) -DEXTMODE_STATIC -DEXTMODE_STATIC_SIZE=$(EXTMODE_STATIC_SIZE)
!endif
!else
EXT_OBJ      =
EXT_CC_OPTS  =
EXTMODE_PATH =
!endif

#------------------------ rtModel ----------------------------------------------
RTM_CC_OPTS = -DUSE_RTMODEL

#------------------------------ Include Path -----------------------------
# see INCLUDES from bctools.mak

ADD_INCLUDES = |>START_EXPAND_INCLUDES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_INCLUDES<|

INCLUDES = .;..;$(MATLAB_INCLUDES);$(ADD_INCLUDES);$(COMPILER_INCLUDES)
MEX_INCLUDES = $(MATLAB_ROOT)\rtw\c\libsrc -I$(MATLAB_ROOT)\rtw\c\src

#-------------------------------- C/C++ Flags --------------------------------

# Required Options
REQ_OPTS = -3 -c -w- -H-

# Optimization Options.
#   -O2   : Optimized for speed
#   -v    : debugging options
#
!ifndef OPT_OPTS
OPT_OPTS = $(DEFAULT_OPT_OPTS)

!endif

CC_OPTS = $(REQ_OPTS) $(OPT_OPTS) $(OPTS) $(EXT_CC_OPTS) $(RTM_CC_OPTS)

CPP_REQ_DEFINES = -DMODEL=$(MODEL) -DRT -DNUMST=$(NUMST) -DTID01EQ=$(TID01EQ)
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DNCSTATES=$(NCSTATES) -DMT=$(MULTITASKING)
CPP_REQ_DEFINES = $(CPP_REQ_DEFINES) -DBORLAND -DHAVESTDIO 
# -DBORLAND needed to handle Floating Point Exceptions


CFLAGS = $(CC_OPTS) $(CPP_REQ_DEFINES) -I$(INCLUDES) $(USER_INCLUDES)
CPPFLAGS = $(CPP_OPTS) $(CC_OPTS) $(CPP_REQ_DEFINES) -I$(INCLUDES) $(USER_INCLUDES)
#------------------------------- Source Files ---------------------------------
REQ_OBJS  = $(MODULES_OBJ)
REQ_OBJS  = $(REQ_OBJS) rt_nonfinite.obj

!if $(GENSFCN) == 0
REQ_OBJS  = $(MODEL).obj $(REQ_OBJS) grt_main.obj rt_sim.obj
!endif

!if $(GENSFCN) == 0
OBJS = $(REQ_OBJS) $(USER_OBJS) $(S_FUNCTIONS) $(SOLVER) $(EXT_OBJ)
!else
OBJS = $(REQ_OBJS) $(USER_OBJS) $(S_FUNCTIONS)
!endif

#---------------------------- Additional Libraries ----------------------------

LIBS =
|>START_PRECOMP_LIBRARIES<|
!if "$(OPT_OPTS)" == "$(DEFAULT_OPT_OPTS)"
!if "$(BC_VER)" == "5.0"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc50.lib
!elif "$(BC_VER)" == "5.2"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc52.lib
!elif "$(BC_VER)" == "5.3"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc53.lib
!elif "$(BC_VER)" == "5.4"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc54.lib
!elif "$(BC_VER)" == "5.5" || "$(BC_VER)" == "5.5free"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc55.lib
!elif "$(BC_VER)" == "5.6" || "$(BC_VER)" == "5.6free"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_bc56.lib
!else
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib
!endif
!else
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib
!endif |>END_PRECOMP_LIBRARIES<|
|>START_EXPAND_LIBRARIES<|
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib |>END_EXPAND_LIBRARIES<|
LIBS = $(LIBS) $(S_FUNCTIONS_LIB)
BCLIBS = cw32.lib import32.lib

#----------------------------- RTW-SFCN MEX-OPTS ------------------------------

!if $(GENSFCN) == 1
RTW_SFUN     = ..\$(MODEL)_sf.$(MEXEXT)
RTW_SFUN_SRC = $(MODEL)_sf.c
MEX          = $(MATLAB_BIN)\mex
!if "$(BC_VER)" == "5.0"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bccopts.bat
!endif
!if "$(BC_VER)" == "5.2"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bccopts.bat
!endif
!if "$(BC_VER)" == "5.3"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc53opts.bat
!endif
!if "$(BC_VER)" == "5.4"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc54opts.bat
!endif
!if "$(BC_VER)" == "5.5"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc55opts.bat
!endif
!if "$(BC_VER)" == "5.5free"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc55freeopts.bat
!endif
!if "$(BC_VER)" == "5.6"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc56opts.bat
!endif
!if "$(BC_VER)" == "5.6free"
MEX_OPT_FILE = -f $(MATLAB_BIN)\mexopts\bcc56freeopts.bat
!endif
!endif

#------------------------------- Temp File ------------------------------------

!if $d(TEMP)
TEMPFILE = $(TEMP)\$(MODEL).tmp
!else
!if $d(TMP)
TEMPFILE = $(TMP)\$(MODEL).tmp
!else
TEMPFILE = $(MODEL).tmp
!endif
!endif

#----------------------------- Source Path ------------------------------------

# User source path

!ifdef USER_PATH
EXTRA_PATH = ;$(USER_PATH)
!else
EXTRA_PATH =
!endif

# Additional Sources
ADD_SOURCES = |>START_EXPAND_RULES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_RULES<|

# Source Path
.path.c = .;..;$(MATLAB_ROOT)\rtw\c\grt;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH);$(ADD_SOURCES)$(EXTRA_PATH)
.path.cpp = .;..;$(MATLAB_ROOT)\rtw\c\grt;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH);$(ADD_SOURCES)$(EXTRA_PATH)
#--------------------------------- Rules --------------------------------------

.autodepend

!if $(GENSFCN) == 0
..\$(MODEL).exe : $(OBJS) $(LIBS)
	@$(ECHO) "Linking $(MODEL).exe"
	$(LD) -ap -x @&&|
	-L$(LIB) +
	c0x32.obj $(OBJS), +
	..\$(MODEL).exe,$(MODEL).map, +
	$(LDFLAGS) $(LIBS) $(BCLIBS)
|
	@$(ECHO) "$(BUILD_SUCCESS) executable: $(MODEL).exe"
!else
$(RTW_SFUN) : $(OBJS) $(LIBS)
	$(MEX) $(MEX_OPT_FILE) $(RTW_SFUN_SRC) -I$(MEX_INCLUDES) $(OBJS) $(LIBS) -outdir ..
	@$(ECHO) "$(BUILD_SUCCESS) mex file: $(RTW_SFUN)"
!endif

.c.obj :
	@$(ECHO) "Compiling $@"
	@$(CC) @&&|
	$(CFLAGS) $(<)
|

.cpp.obj :
	@$(ECHO) "Compiling $@"
	@$(CC) @&&|
	$(CPPFLAGS) $(<)
|


$(OBJS) : $(MAKEFILE) rtw_proj.tmw

# Libraries:

|>START_EXPAND_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<||>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@$(ECHO) "Creating $@"
	$(LIBCMD) $(LIBFLAG) $@ @&&|
	+$(MODULES_|>EXPAND_LIBRARY_NAME<|: = +)
|
	@$(ECHO) "$@ Created"

|>END_EXPAND_LIBRARIES<|

|>START_PRECOMP_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<||>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@$(ECHO) "Creating $@"
	$(LIBCMD) $(LIBFLAG) $@ @&&|
	+$(MODULES_|>EXPAND_LIBRARY_NAME<|: = +)
|
	@$(ECHO) "$@ Created"

|>END_PRECOMP_LIBRARIES<|

#[eof] grt_bc.tmf
