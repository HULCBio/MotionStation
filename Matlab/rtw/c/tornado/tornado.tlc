%% SYSTLC: Tornado (VxWorks) Real-Time Target TMF: tornado.tmf MAKE: make_rtw \
%%   EXTMODE: ext_comm

%%
%% $RCSfile: tornado.tlc,v $
%% $Revision: 1.25.4.4 $
%% $Date: 2004/04/14 23:49:06 $
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%% Abstract: Tornado real-time system target file.
%%

%selectfile NULL_FILE

%assign TargetType = "RT"
%assign Language   = "C"

%assign GenRTModel = 1

%if EXISTS("StethoScope")
  %assign BlockIOSignals = StethoScope
%endif

%% Allow half of what taskSpawn will by called with for
%% the stacksize of all local variables in the generated code
%assign MaxStackSize = CAST("Number",TaskStackSize/2)
%% Allow any one variable to be half of maximum stack size
%assign MaxStackVariableSize = CAST("Number",MaxStackSize/2)

%include "codegenentry.tlc"

%% The contents between 'BEGIN_RTW_OPTIONS' and 'END_RTW_OPTIONS' are strictly
%% written by the standard format. We need to use this cell structure in RTW
%% options GUI function rtwoptionsdlg.m file.
%%
/%
  BEGIN_RTW_OPTIONS

  rtwoptions(1).prompt        = 'Tornado code generation options';
  rtwoptions(1).type          = 'Category';
  rtwoptions(1).enable        = 'on';  
  rtwoptions(1).default       = 6;   % number of items under this category
                                      % excluding this one.
  rtwoptions(1).popupstrings  = '';
  rtwoptions(1).tlcvariable   = '';
  rtwoptions(1).tooltip       = '';
  rtwoptions(1).callback      = '';
  rtwoptions(1).opencallback  = '';
  rtwoptions(1).closecallback = '';
  rtwoptions(1).makevariable  = '';

  rtwoptions(2).prompt         = 'MAT-file logging';
  rtwoptions(2).type           = 'Checkbox';
  rtwoptions(2).default        = 'off';
  rtwoptions(2).tlcvariable    = 'MatFileLogging';
  rtwoptions(2).makevariable   = 'MAT_FILE';
  rtwoptions(2).tooltip        = ...
    ['Instrument code to log data to a MATLAB .mat file'];

  rtwoptions(3).prompt         = 'MAT-file variable name modifier';
  rtwoptions(3).type           = 'Popup';
  rtwoptions(3).default        = 'rt_';
  rtwoptions(3).popupstrings   = 'rt_|_rt|none';
  rtwoptions(3).tlcvariable    = 'LogVarNameModifier';
  rtwoptions(3).tooltip        = ...
    ['prefix rt_ to variable name,', sprintf('\n'), ...
    'append _rt to variable name,', sprintf('\n'), ...
    'or no modification'];

  rtwoptions(4).prompt      = 'Local block outputs';
  rtwoptions(4).type        = 'Checkbox';
  rtwoptions(4).default     = 'off';
  rtwoptions(4).tlcvariable = 'LocalBlockOutputs';
  rtwoptions(4).tooltip     = [...
    'RTW attempts to place the block output signals in variables', sprintf('\n'), ...
    'within local (as opposed to global) scope. When checked,', sprintf('\n'), ...
    'the amount of stack used by local variables is limited', sprintf('\n'), ...
    'by setting the TLC variables: MaxStackSize and MaxStackVariableSize,', sprintf('\n'), ...
    'in the file ''tornado.tlc''. By default, these TLC variables', sprintf('\n'), ...
    'are set to half of the stack size that is allocated in ', sprintf('\n'), ...
    'in taskspawn of rt_main.c, in order to prevent stack overflow.'];

  rtwoptions(5).prompt       = 'Code Format';
  rtwoptions(5).type         = 'Popup';
  rtwoptions(5).default      = 'RealTime';
  rtwoptions(5).popupstrings = 'RealTime|RealTimeMalloc';
  rtwoptions(5).tlcvariable  = 'CodeFormat';
  rtwoptions(5).tooltip      = ['RealTime uses static memory allocation,', sprintf('\n'), ...
    'RealTimeMalloc uses dynamic memory allocation.'];

  rtwoptions(6).prompt         = 'StethoScope';
  rtwoptions(6).type           = 'Checkbox';
  rtwoptions(6).default        = 'off';
  rtwoptions(6).tlcvariable    = 'StethoScope';
  rtwoptions(6).makevariable   = 'STETHOSCOPE';
  rtwoptions(6).tooltip        = ['Adds support for StethoScope monitoring',...
    sprintf('\n'), '(can not be used with external mode)'];
  rtwoptions(6).callback       = 'tornado_callback_handler';

  rtwoptions(7).prompt         = 'Download to VxWorks target';
  rtwoptions(7).type           = 'Checkbox';
  rtwoptions(7).default        = 'off';
  rtwoptions(7).tlcvariable    = 'DownloadToVxWorks';
  rtwoptions(7).makevariable   = 'DOWNLOAD';
  rtwoptions(7).tooltip        = ['Download the model executable to VxWorks'];
  
  rtwoptions(8).prompt         = 'VxWorks advanced options';
  rtwoptions(8).type           = 'Category';
  rtwoptions(8).enable         = 'on';  
  rtwoptions(8).default        = 2;   % number of items under this category
  
  rtwoptions(9).prompt       = 'Base task priority';
  rtwoptions(9).type         = 'Edit';
  rtwoptions(9).default      = '30';
  rtwoptions(9).tlcvariable  = 'BasePriority';
  rtwoptions(9).makevariable = 'BASE_PRIORITY';
  rtwoptions(9).tooltip      = ['The base rate task priority, sub rate tasks will use an incremented ', ...
                                sprintf('\n'), ...
                                '(lower priority) value. VxWorks defines the range 0-255, 0 being highest.'];
			      
  rtwoptions(10).prompt       = 'Task stack size';
  rtwoptions(10).type         = 'Edit';
  rtwoptions(10).default      = '16384';
  rtwoptions(10).tlcvariable  = 'TaskStackSize';
  rtwoptions(10).makevariable = 'STACK_SIZE';
  rtwoptions(10).tooltip      = ['The stack size in bytes for each task that executes the model.'];
				

  rtwoptions(11).prompt         = 'External Mode code generation options';
  rtwoptions(11).type           = 'Category';
  rtwoptions(11).enable         = 'on';  
  rtwoptions(11).default        = 5;   % number of items under this category
                                      % excluding this one.
  rtwoptions(11).popupstrings  = '';
  rtwoptions(11).tlcvariable   = '';
  rtwoptions(11).tooltip       = '';
  rtwoptions(11).callback      = '';
  rtwoptions(11).opencallback  = '';
  rtwoptions(11).closecallback = '';
  rtwoptions(11).makevariable  = '';

  rtwoptions(12).prompt         = 'External mode';
  rtwoptions(12).type           = 'Checkbox';
  rtwoptions(12).default        = 'off';
  rtwoptions(12).tlcvariable    = 'ExtMode';
  rtwoptions(12).makevariable   = 'EXT_MODE';
  rtwoptions(12).tooltip        = ...
    ['Adds communication support',sprintf('\n'), ...
    'for use with Simulink external mode'];
  
  % Enable/disable other external mode controls.
  rtwoptions(12).callback       = 'tornado_callback_handler';

  rtwoptions(13).prompt         = 'Transport';
  rtwoptions(13).type           = 'Popup';
  rtwoptions(13).default        = 'tcpip';
  rtwoptions(13).popupstrings   = ['tcpip'];
  rtwoptions(13).tlcvariable    = 'ExtModeTransport';
  rtwoptions(13).makevariable   = 'EXTMODE_TRANSPORT';
  rtwoptions(13).tooltip        = ...
    ['Chooses transport mechanism for external mode'];

  % Synchronize with "External mode" checkbox option
  rtwoptions(13).opencallback   = [ ...
    'ExtModeTable = {''tcpip'' ''ext_comm''};', ...
    'ud = DialogUserData;', ...
    'ud = extmodecallback(''transport_popup_opencallback'',model,DialogFig,ud,ExtModeTable);', ...
    'DialogUserData = ud;', ...
    ];
				
  % Set extmode mex-file according to extmode transport mechanism.
  rtwoptions(13).closecallback  = [ ...
    'ExtModeTable = {''tcpip'' ''ext_comm''};', ...
    'ud = DialogUserData;', ...
    'ud = extmodecallback(''transport_popup_closecallback'',model,DialogFig,ud,ExtModeTable);', ...
    'DialogUserData = ud;', ...
    ];

  rtwoptions(14).prompt         = 'Static memory allocation';
  rtwoptions(14).type           = 'Checkbox';
  rtwoptions(14).default        = 'off';
  rtwoptions(14).tlcvariable    = 'ExtModeStaticAlloc';
  rtwoptions(14).makevariable   = 'EXTMODE_STATIC_ALLOC';
  rtwoptions(14).tooltip        = ...
    ['Forces external mode to use static',sprintf('\n'), ...
    'instead of dynamic memory allocation'];
  
  % Enable/disable external mode static allocation size selection.
  rtwoptions(14).callback       = [ ...
    'DialogFig = get(gcbo,''Parent'');',...
    'sl(''extmodecallback'', ''staticmem_checkbox_callback'', DialogFig);', ...
    ];

  % Synchronize with "External mode" checkbox option
  rtwoptions(14).opencallback   = [ ...
    'extmodecallback(''staticmem_checkbox_opencallback'',DialogFig);', ...
    ];
  
  rtwoptions(15).prompt         = 'Static memory buffer size';
  rtwoptions(15).type           = 'Edit';
  rtwoptions(15).default        = '1000000';
  rtwoptions(15).tlcvariable    = 'ExtModeStaticAllocSize';
  rtwoptions(15).makevariable   = 'EXTMODE_STATIC_ALLOC_SIZE';
  rtwoptions(15).tooltip        = ...
    ['Size of external mode static allocation buffer'];

  % Synchronize with "External mode static allocation" option
  rtwoptions(15).opencallback   = [ ...
    'extmodecallback(''staticmemsize_edit_opencallback'',DialogFig);', ...
    ];
				
  rtwoptions(16).prompt       = 'External mode testing';
  rtwoptions(16).type         = 'NonUI';
  rtwoptions(16).default      = '0';
  rtwoptions(16).tlcvariable  = 'ExtModeTesting';
  rtwoptions(16).makevariable = 'TMW_EXTMODE_TESTING';
  rtwoptions(16).tooltip      = ...
    ['Internal testing flag for Simulink external mode'];

  %----------------------------------------%
  % Configure RTW code generation settings %
  %----------------------------------------%
  
  rtwgensettings.BuildDirSuffix = '_tornado_rtw';
  rtwgensettings.UsingMalloc    = 'if_RealTimeMalloc';

  END_RTW_OPTIONS
 %/
/%
  BEGIN_CONFIGSET_TARGET_COMPONENT
 
  targetComponentClass = 'RTW.TornadoTargetCC';
  
  END_CONFIGSET_TARGET_COMPONENT
 %/