--------------------------------------------------------------------------------
--                                                                            --
-- File    : sfuntmpl_adb.txt                                  $Revision: 1.4 $
-- Abstract:
--      Template Body for an Ada S-Function.
--
-- Author  : Murali Yeddanapudi, 26-Jul-1999
--
-- Copyright 1990-2002 The MathWorks, Inc.
--                                                                            --
--------------------------------------------------------------------------------

-- The Simulink API for Ada S-Function. The Spec and the body are in:
--
--    matlabroot/simulink/ada/interface/simulink.ads
--    matlabroot/simulink/ada/interface/simulink.adb
--
with Simulink; use Simulink;


package body SFunTmpl is

   -- Procedure: mdlCheckParameters --------------------------------------------
   -- Abstract::
   --
   procedure mdlCheckParameters(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlCheckParameters");
         end if;
   end MdlCheckParameters;


   -- Procedure: mdlProcessParameters ------------------------------------------
   -- Abstract::
   --
   procedure mdlProcessParameters(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlProcessParameters");
         end if;
   end MdlProcessParameters;


   -- Procedure: mdlInitializeSizes --------------------------------------------
   -- Abstract::
   --
   procedure mdlInitializeSizes(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlInitializeSizes");
         end if;
   end MdlInitializeSizes;


   -- Procedure: mdlSetWorkWidths ----------------------------------------------
   -- Abstract::
   --
   procedure mdlSetWorkWidths(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlSetWorkWidths");
         end if;
   end MdlSetWorkWidths;


   -- Procedure: mdlStart ------------------------------------------------------
   -- Abstract::
   --
   procedure mdlStart(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlStart");
         end if;
   end MdlStart;


   -- Procedure: mdlOutputs ----------------------------------------------------
   -- Abstract::
   --
   procedure mdlOutputs(S : in SimStruct; TID : in Integer) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlOutputs");
         end if;
   end MdlOutputs;


   -- Procedure: mdlUpdate -----------------------------------------------------
   -- Abstract::
   --
   procedure mdlUpdate(S : in SimStruct; TID : in Integer) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlUpdate");
         end if;
   end MdlUpdate;


   -- Procedure: mdlDerivatives ------------------------------------------------
   -- Abstract::
   --
   procedure mdlDerivatives(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlDerivatives");
         end if;
   end MdlDerivatives;


   -- Procedure: mdlTerminate --------------------------------------------------
   -- Abstract::
   --
   procedure mdlTerminate(S : in SimStruct) is
   begin
      null; -- insert your code here
   exception
      when others =>
         if ssGetErrorStatus(S) = "" then
            ssSetErrorStatus(S,"Exception in Ada S-Fcn : mdlTerminate");
         end if;
   end MdlTerminate;

end SfunTmpl;


-- eof: sfuntmpl_adb.txt
