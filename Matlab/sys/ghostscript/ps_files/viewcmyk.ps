%    Copyright (C) 1996, 1997 Aladdin Enterprises.  All rights reserved.
% 
% This file is part of GNU Ghostscript.
% 
% GNU Ghostscript is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility
% to anyone for the consequences of using it or for whether it serves any
% particular purpose or works at all, unless he says so in writing.  Refer
% to the GNU General Public License for full details.
% 
% Everyone is granted permission to copy, modify and redistribute GNU
% Ghostscript, but only under the conditions described in the GNU General
% Public License.  A copy of this license is supposed to have been given
% to you along with GNU Ghostscript so you can know your rights and
% responsibilities.  It should be in a file named COPYING.  Among other
% things, the copyright notice and this notice must be preserved on all
% copies.
% 
% Aladdin Enterprises supports the work of the GNU Project, but is not
% affiliated with the Free Software Foundation or the GNU Project.  GNU
% Ghostscript, as distributed by Aladdin Enterprises, does not require any
% GNU software to build or run it.

% $Id: viewcmyk.ps,v 1.1 2000/12/11 02:31:40 bhinkle Exp $
% viewcmyk.ps
% Display a raw CMYK file.
% Requires the colorimage operator.
% If SCALE is defined, maps input pixels to output pixels with that scale;
% if SCALE is undefined, scales the image to fit the page.
% If BITS is defined, it is the number of bits per sample (1,2,4,8,12);
% if BITS is undefined, its default value is 1.

/viewcmyk			% <filename> <width> viewcmyk -
 { 20 dict begin
   /w exch def
   /fname exch def
   /bpc /BITS where { pop BITS } { 1 } ifelse def
   /f fname (r) file def
   mark fname status pop pop pop /flen exch def cleartomark
   /h flen w bpc 4 mul mul 7 add 8 idiv idiv def
   (Dimensions: ) print [w h] == flush
		% Set up scaling.
   /SCALE where
    { pop
	% Map pixels SCALE-for-1.  Assume orthogonal transformation.
      w 1 0 dtransform add abs div SCALE mul
      h 0 1 dtransform add abs div SCALE mul
    }
    {	% Scale the image (uniformly) to fit the page.
      clippath pathbbox pop pop translate
      pathbbox 4 2 roll pop pop
      h div w mul min dup
    }
   ifelse scale
   w h bpc [w 0 0 h neg 0 h] f false 4 colorimage
   showpage
   f closefile
   end
 } bind def

% If the program was invoked from the command line, run it now.
[ shellarguments
 { counttomark 2 eq
    { cvi viewcmyk
    }
    { cleartomark
      (Usage: gs -- viewcmyk.ps filename.cmyk width\n) print
      ( e.g.: gs -- viewcmyk.ps my.cmyk 2550\n) print flush
    }
   ifelse
 }
 { pop
 }
ifelse
