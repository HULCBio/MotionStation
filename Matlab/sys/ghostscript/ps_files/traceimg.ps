%    Copyright (C) 1994 Aladdin Enterprises.  All rights reserved.
% 
% This file is part of GNU Ghostscript.
% 
% GNU Ghostscript is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility
% to anyone for the consequences of using it or for whether it serves any
% particular purpose or works at all, unless he says so in writing.  Refer
% to the GNU General Public License for full details.
% 
% Everyone is granted permission to copy, modify and redistribute GNU
% Ghostscript, but only under the conditions described in the GNU General
% Public License.  A copy of this license is supposed to have been given
% to you along with GNU Ghostscript so you can know your rights and
% responsibilities.  It should be in a file named COPYING.  Among other
% things, the copyright notice and this notice must be preserved on all
% copies.
% 
% Aladdin Enterprises supports the work of the GNU Project, but is not
% affiliated with the Free Software Foundation or the GNU Project.  GNU
% Ghostscript, as distributed by Aladdin Enterprises, does not require any
% GNU software to build or run it.

% $Id: traceimg.ps,v 1.1 2000/12/11 02:31:39 bhinkle Exp $
% traceimg.ps
% Trace the data supplied to the 'image' operator.

% This code currently handles only the (Level 2) dictionary form of image,
% with a single data source and 8-bit pixels.

/traceimage			% <dict> traceimage -
 { currentcolorspace == (setcolorspace\n) print
   (<<) print
   dup { (\t) print exch ==only ( ) print == } forall
   (>>\n) print flush
   begin /i_left Width Height mul store /i_dict currentdict store end
    { i_left 0 le { exit } if
      i_dict /DataSource get exec
      dup type /filetype eq
       { i_buf 0 i_left 32 min getinterval readstring pop
       } if
      dup (%stdout) (w) file exch writehexstring (\n) print flush
      i_left exch length sub /i_left exch def
    } loop
 } bind odef

/image /traceimage load def
/i_left 0 def
/i_dict null def
/i_buf 32 string def
