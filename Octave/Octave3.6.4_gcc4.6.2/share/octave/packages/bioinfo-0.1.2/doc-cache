# Created by Octave 3.6.4, Sat Mar 30 10:01:59 2013 Jerusalem Daylight Time <unknown@NITH02>
# name: cache
# type: cell
# rows: 3
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
aa2int


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 246
 -- Function File: SEQUENCEINT = aa2int (SEQUENCECHAR)
     Convert amino acid characters into integers.  See `aminolookup'
     for the listing of numbers and their corresponding characters.

     See also: aminolookup, int2aa, int2nt, nt2int





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 44
Convert amino acid characters into integers.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
aminolookup


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 804
 -- Function File:  aminolookup ()
 -- Function File: AMINODESC = aminolookup (SEQ)
 -- Function File: AMINODESC = aminolookup (SEARCHTYPE, SEQ)
     Convert between amino acid representations.  The types of input are

        * Name

          The amino acid name

        * Code

          The amino acid single letter code

        * Abbreviation

          The three letter abbreviation for the amino acid

        * Integer

          The number representation of the amino acid

     To see the full list of each of the above, run this function
     without any arguments or outputs.

     If called without zero inputs, this will display the mapping
     between the above types.  If called with one input, it will
     convert to code by default.

     See also: aa2int, int2aa, int2nt, nt2int





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 43
Convert between amino acid representations.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
cleave


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1211
 -- Function File: FRAGMENTS = cleave (SEQUENCE, PATTERN, POSITION)
 -- Function File: [FRAGMENTS, CUTTINGSITES] = cleave (...)
 -- Function File: [FRAGMENTS, CUTTINGSITES, LENGTHS] = cleave (...)
 -- Function File: [...] = cleave (..., "PartialDigest", PROB)
     Cleave a peptide SEQUENCE using the PATTERN at the POSITION
     relative to the pattern.  The SEQUENCE is a sequence of amino
     acids; the PATTERN is a regular expression to find the location of
     the cleavage; and the POSITION is the position relative to that
     regular expression (0 is immediately to the left of the first
     character, 1 is immediately to the right of the first character,
     ...).

     Example regular expressions for some commone proteases are given
     below.

     Protease                           Peptide Pattern      Position
     Trypsin                            [KR](?!P)            1
     Chymotrypsin                       [WYF](?!P)           1
     Glutamine C                        [ED](?!P)            1
     Lysine C                           [K](?!P)             1
     Aspartic acid N                    D                    1

     See also: rebasecuts, restrict, seqshowwords, regexp





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Cleave a peptide SEQUENCE using the PATTERN at the POSITION relative to
the patt



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
int2aa


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 246
 -- Function File: SEQUENCECHAR = int2aa (SEQUENCEINT)
     Convert amino acid integers into characters.  See `aminolookup'
     for the listing of numbers and their corresponding characters.

     See also: aminolookup, aa2int, int2nt, nt2int





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 44
Convert amino acid integers into characters.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
seqreverse


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 284
 -- Function File: SEQR = seqreverse (SEQF)
     Reverse a nucleotide sequence.  SEQF can be either a numeric or
     code DNA or RNA sequence or a struct with the field sequence, and
     it will reverse the direction of the sequence.

     See also: seqcomplement, seqrcomplement





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 30
Reverse a nucleotide sequence.





