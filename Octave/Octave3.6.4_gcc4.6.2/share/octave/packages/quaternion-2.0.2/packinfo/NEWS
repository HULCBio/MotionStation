Summary of important user-visible changes for releases of the quaternion package

===============================================================================
quaternion-2.0.2   Release Date: 2012-10-25   Release Manager: Lukas Reichlin
===============================================================================

** eq
   -- Fix typo bug which gave false positives for the k-component.
   -- Avoid error if arguments are non-conformant.

** size_equal
   Add overloaded method because the built-in function gives false positives
   for quaternions.

** ldivide, mldivide, mpower
   Show error message if the number of input arguments is not 2.


===============================================================================
quaternion-2.0.1   Release Date: 2012-10-14   Release Manager: Lukas Reichlin
===============================================================================

** inv
   Support for the inversion of quaternion matrices.  Right and left division
   operators (/ and \) profit from this change and support quaternion matrices
   as well.

** Check number of arguments when operators are called by their function names,
   e.g. plus (q1, q2, q3).  Function plus supports now more than two arguments.

** doc/quaternion.pdf
   Revised PDF manual.  There is now a function index at the end of the manual.

** The TeX-files  quaternion.tex  and  functions.texi  for generating
   quaternion.pdf  are included in the doc folder, next to  quaternion.pdf.
   Note that  functions.texi  is generated automatically by the scripts in the
   quaternion/devel folder and the package generate_html.
   They are not included in the quaternion package and can be found on the
   OctaveForge SVN server.


===============================================================================
quaternion-2.0.0   Release Date: 2012-03-28   Release Manager: Lukas Reichlin
===============================================================================

** First official release.  Its main features are:
   -- Matrices and n-dimensional arrays of quaternions.
   -- Overloaded operators due to the use of classes.
   -- Operator semantics similar to Octaveâ€™s built-in complex numbers.
   -- Vectorized code for crunching large quaternion arrays in a speedy manner.


===============================================================================
