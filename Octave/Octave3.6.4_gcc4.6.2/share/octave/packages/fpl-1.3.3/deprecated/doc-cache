# Created by Octave 3.6.4, Sat Mar 30 09:59:51 2013 Jerusalem Daylight Time <unknown@NITH02>
# name: cache
# type: cell
# rows: 3
# columns: 14
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 16
FPL2dxappenddata


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 848
 -- Function File:  FPL2dxappenddata ( FILENAME,
     P, T, U, ATTR_NAME, ATTR_RANK,  ATTR_SHAPE, ENDFLIE )

     Apends data to a file in DX form.    Only one variable can be
     written to the file   variable must be a scalar, vector or tensor
     of doubles   mesh data in the file must be consistent with this
     variable

     Variable must be a scalar, vector or tensor of doubles

        - FILENAME= name of file to save (type string)

        - P, T = mesh

        - U = variable to save

        - ATTR_NAME  = name of the variable (type string)

        - ATTR_RANK  = rank of variable data (0 for scalar, 1 for
          vector, etc.)

        - ATTR_SHAPE = number of components of variable data  (assumed
          1 for scalar)

        - ENDFILE = 0 if you want to add other variables to the  same
          file, 1 otherwise




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 54
P, T, U, ATTR_NAME, ATTR_RANK,  ATTR_SHAPE, ENDFLIE )




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 16
FPL2dxoutputdata


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 660
 -- Function File:  FPL2dxoutputdata ( FILENAME, P, T, U, ATTR_NAME,
          ATTR_RANK, ATTR_SHAPE, ENDFILE )
     Outputs data in DX form.

     Variable must be a scalar, vector or tensor of doubles

        - FILENAME= name of file to save (type string)

        - P, T = mesh

        - U = variable to save

        - ATTR_NAME  = name of the variable (type string)

        - ATTR_RANK  = rank of variable data (0 for scalar, 1 for
          vector, etc.)

        - ATTR_SHAPE = number of components of variable data  (assumed
          1 for scalar)

        - ENDFILE = 0 if you want to add other variables to the  same
          file, 1 otherwise




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 24
Outputs data in DX form.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 22
FPL2dxoutputtimeseries


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 606
 -- Function File:  FPL2dxoutputtimeseries ( FILENAME, P, T, U,
          ATTR_NAME, ATTR_RANK, ATTR_SHAPE, TIME )
     Outputs a time series in DX form.    variable must be a scalar,
     vector or tensor of doubles
        - FILENAME= name of file to save (type string)

        - P, T = mesh

        - U = variable to save

        - ATTR_NAME  = name of the variable (type string)

        - ATTR_RANK  = rank of variable data (0 for scalar, 1 for
          vector, etc.)

        - ATTR_SHAPE = number of components of variable data  (assumed
          1 for scalar)

        - TIME = time instants




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 33
Outputs a time series in DX form.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 13
FPL2pdequiver


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 275
 -- Function File:  FPL2pdequiver (MESH, VX, VY, [ PROPERTY, VALUE ...])
     Plots the 2D vector field VX, VY defined on the triangulation MESH
     using opendx.

     Options (default values): SAMPLE_DENSITY (100)

     See also: FPL2pdesurf, FPL2ptcsurf, FPL2ptcquiver





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Plots the 2D vector field VX, VY defined on the triangulation MESH
using opendx.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 15
FPL2pdeshowmesh


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 221
 -- Function File:  FPL2pdeshowmesh (MESH,COLOR)
     Displays one 2-D triangulations using opendx

     Examples:

          FPL2pdeshowmesh(mesh)
          FPL2pdeshowmesh(mesh,"blue")

     See also: FPL2ptcshowmesh





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 45
Displays one 2-D triangulations using opendx




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
FPL2pdesurf


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 429
 -- Function File:  FPL2pdesurf (MESH, U [ PROPERTY, VALUE ...])
     plots the scalar field U defined on the triangulation MESH using
     opendx.

     options (default value):
        - data_dep ("positions") defines wether data depends on
          positions or connections

        - plot_field ("scalar") defines wether to plot the scalar field
          itself or its gradient

     See also: MSH2Mgmsh, MSH2Mstructmesh





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 72
plots the scalar field U defined on the triangulation MESH using opendx.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 13
FPL2ptcquiver


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 248
 -- Function File:  FPL2ptcquiver (MESH1, COLOR1
     VX1, VY1, [ MESH2, COLOR2, VX2, VY2 ...])

     Plots the 2D vector fields VX, VY defined on the triangulations
     MESH using opendx.

     See also: FPL2pdesurf, FPL2ptcsurf, FPL2pdequiver





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 37
VX1, VY1, [ MESH2, COLOR2, VX2, VY2 .



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 15
FPL2ptcshowmesh


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 177
 -- Function File:  FPL2ptcshowmesh (MESH1, COLOR1,  [MESH2, COLOR2,
          ...])
     Displays two or more 2-D triangulations using opendx

     See also: FPL2pdeshowmesh





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Displays two or more 2-D triangulations using opendx




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
FPL2ptcsurf


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 222
 -- Function File:  FPL2ptcsurf (MESH1, COLOR1, DATA1  [MESH2,
          COLOR2,DATA2])
     Plots the scalar fields DATA over the triangulation MESH using
     opendx. Connections will be displayed as defined in COLOR.





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 70
Plots the scalar fields DATA over the triangulation MESH using opendx.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 14
FPL2trspdesurf


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 311
 -- Function File:  FPL2trspdesurf (MESH, COLOR, DATA)
     Plots the transient scalar field U defined on the triangulation
     MESH using opendx. Connections are rendered as defined by COLOR

     Example:

          FPL2trspdesurf(mesh,"blue",data)

     See also: FPL2pdesurf, FPL2ptcsurf, FPL2trsptcsurf





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Plots the transient scalar field U defined on the triangulation MESH
using opend



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 14
FPL2trsptcsurf


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 373
 -- Function File:  FPL2trsptcsurf (MESH1, COLOR1, DATA1, [MESH2,
          COLOR2, DATA2])
     Plots the transient scalar fields DATA defined on the triangulation
     MESH using opendx. Connections are rendered as defined by COLOR

     Example:

          FPL2trspdesurf(mesh1,"blue",data1, mesh2,"red",data2)

     See also: FPL2pdesurf, FPL2ptcsurf, FPL2trspdesurf





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Plots the transient scalar fields DATA defined on the triangulation
MESH using o



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 17
FPL2vtkoutputdata


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 586
 -- Function File:  FPL2vtkoutputdata ( FILENAME, P, T, NODEDATA,
          CELLDATA, HEADER, VTKVER)
     Save data in VTK ASCII format.

        - FILENAME = name of file to save into

        - P, T = mesh node coordinates and connectivity

        - NAME = name of a mesh variable

        - NODEDATA/CELLDATA = node/cell centered data  fields
          (2xNfields cell array), *DATA{:,1} = variable names;
          *DATA{:,2} = variable data;

        - HEADER comment to add in the file header

        - VTKVER format version (default is 3.0)

     See also: FPL2dxoutputdata





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 30
Save data in VTK ASCII format.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 17
FPL3dxoutputfield


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 730
 -- Function File:  FPL3dxoutputfield( FILENAME, MESHFILENAME, DEP, U,
          ATTR_NAME, ATTR_RANK, ATTR_SHAPE, ENDFILE )
     Outputs data in DX form.

     Variable must be a scalar, vector or tensor of doubles

        - FILENAME     = name of file to save (type string)

        - MESHFILENAME = name of mesh file (type string)

        - DEP          = "positions" for node data, "connections" for
          element data

        - FIELD        = field data to be saved

        - ATTR_NAME    = name of the variable (type string)

        - ATTR_RANK    = rank of variable data (0 for scalar, 1 for
          vector, etc.)

        - ATTR_SHAPE   = number of components of variable data
          (assumed 1 for scalar)




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 24
Outputs data in DX form.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 16
FPL3dxoutputmesh


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 246
 -- Function File:  FPL3dxoutputmesh ( FILENAME, MESH )
     Outputs data in DX form.

     Variable must be a scalar, vector or tensor of doubles

        - FILENAME = name of file to save (type string)

        - MESH     = PDE-tool like mesh




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 24
Outputs data in DX form.





