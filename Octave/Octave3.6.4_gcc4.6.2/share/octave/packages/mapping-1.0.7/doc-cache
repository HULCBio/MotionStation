# Created by Octave 3.6.4, Sat Mar 30 09:45:53 2013 Jerusalem Daylight Time <unknown@NITH02>
# name: cache
# type: cell
# rows: 3
# columns: 6
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
azimuth


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 788
 -- Function File:  AZ = azimuth(LAT1,LON1,LAT2,LON2)
 -- Function File:  AZ = azimuth(LAT1,LON1,LAT2,LON2,UNITS)
 -- Function File:  AZ = azimuth(PT1, PT2)
 -- Function File:  AZ = azimuth(PT1, PT2,UNITS)
     Calculates the great circle azimuth from a point 1 to a point 2.
     The latitude and longitude of these two points can either be given
     independently or as columns of the matrices PT1 and PT2 in the
     form [latitude longitude].

     The units for the input coordinates and output angles can be
     "degrees" (the default) or "radians".

          >> azimuth([10,10], [10,40])
          ans = 87.336
          >> azimuth([0,10], [0,40])
          ans = 90
          >> azimuth(pi/4,0,pi/4,-pi/2,"radians")
          ans = 5.3279

     See also: elevation, distance





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 64
Calculates the great circle azimuth from a point 1 to a point 2.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
deg2rad


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 115
 -- Function File:  ANGLOUT = deg2rad(ANGLIN)
     Converts angles input in degrees to the equivalent in radians.




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 62
Converts angles input in degrees to the equivalent in radians.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
distance


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 357
 -- Function File:  DIST = distance(PT1, PT2)
     Calculates the distance (in degrees) between PT1 and PT2.

     PT1 and PT2 are two-column matrices of the form [latitude
     longitude].

          >> distance([37,-76], [37,-9])
          ans = 52.309
          >> distance([37,-76], [67,-76])
          ans = 30.000

     See also: azimuth, elevation





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 57
Calculates the distance (in degrees) between PT1 and PT2.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
km2deg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 149
 -- Function File: A = km2deg(X)
     Convert a distance along a great circle of the Earth from km to
     degrees. A radius of 6371 km is assumed.




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 72
Convert a distance along a great circle of the Earth from km to
degrees.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
rad2deg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 115
 -- Function File:  ANGLOUT = rad2deg(ANGLIN)
     Converts angles input in radians to the equivalent in degrees.




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 62
Converts angles input in radians to the equivalent in degrees.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
reckon


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 628
 -- Function File: [LATO,LONO] =  reckon(LAT,LON,RANGE,AZIMUTH)
 -- Function File: [LATO,LONO] =  reckon(LAT,LON,RANGE,AZIMUTH,UNITS)
     Compute the coordinates of the end-point of a displacement on a
     sphere. LAT,LON are the coordinates of the starting point, RANGE
     is the covered distance of the displacements along a great circle
     and AZIMUTH is the direction of the displacement relative to the
     North.  The units of all input and output parameters can be either
     'degrees' (default) or 'radians'.

     This function can also be used to define a spherical coordinate
     system with rotated poles.




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 71
Compute the coordinates of the end-point of a displacement on a sphere.





