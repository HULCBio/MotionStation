# Created by Octave 3.6.4, Sat Mar 30 09:37:50 2013 Jerusalem Daylight Time <unknown@NITH02>
# name: cache
# type: cell
# rows: 3
# columns: 17
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
cell2mlstr


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 87
 cell2mlstr - convert text cells in cellstr arrray to multiline text
 separated by EOL



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
 cell2mlstr - convert text cells in cellstr arrray to multiline text
 separated 



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
dlgtest


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 124

 Install the java package.
 Test the dlg... functions of the java package.

 Author: Martin Hepperle
 Version August 2010




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 27

 Install the java package.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
errordlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 334
 -- Function file: P = errordlg (MESSAGE [,TITLE])
     Displays the MESSAGE (character string or cell string array for
     multi-line text) using an error dialog box.  TITLE can be used
     optionally to decorate the dialog caption.  The return value is
     always 1.


   See also: helpdlg, inputdlg, listdlg, questdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Displays the MESSAGE (character string or cell string array for
multi-line text)



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
helpdlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 423
 -- Function file: P = helpdlg (MESSAGE [,TITLE])
     Displays a MESSAGE in a help dialog box.

     MESSAGE can have multiple lines separated by newline characters
     ("\n"), or it can be a cellstr array (one element for each line).
     The optional TITLE (character string) can be used to decorate the
     dialog caption.  The return value is always 1.


   See also: errordlg, inputdlg, listdlg, questdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 40
Displays a MESSAGE in a help dialog box.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
inputdlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1168
 -- Function file: P = inputdlg (PROMPT [,TITLE [,ROWSCOLS, DEFAULTS]])
     Returns the user's inputs from a multi-textfield dialog box in
     form of a cell array of strings.  If the dialog is closed by the
     Cancel button, an empty cell array is returned.

    `PROMPT'
          The first argument PROMPT is mandatory.  It is a cell array
          with strings labeling each textfield.

    `TITLE'
          The optional string TITLE can be used as the caption of the
          dialog.

    `ROWSCOLS'
          The size of the text fields can be defined by the argument
          ROWSCOLS,  which can have three forms: - a scalar value which
          defines the number of rows used for each text field.  - a
          vector which defines the individual number of rows used for
          each text field.  - a matrix which defines the individual
          number of rows and columns used for each text field.

    `DEFAULTS'
          It is possible to place default values into the text fields
          by supplying the a cell array of strings or number for the
          argument DEFAULTS.


   See also: errordlg, helpdlg, listdlg, questdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Returns the user's inputs from a multi-textfield dialog box in form of
a cell ar



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
java


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 75
Please enter `doc java' to view the documentation for the package
`java'.




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 73
Please enter `doc java' to view the documentation for the package
`java'.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
javaArray


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 551
 -- Function file: A = javaArray (CLASS,[M,N,...])
 -- Function file: A = javaArray (CLASS,M,N,...)
     Creates a Java array of size [M,N,...] with elements of class
     CLASS. CLASS can be a Java object representing a class or a string
     containing the fully qualified class name.

     The generated array is uninitialized, all elements are set to null
     if CLASS is a reference type, or to a default value (usually 0) if
     CLASS is a primitive type.

            a = javaArray ("java.lang.String", 2, 2);
            a(1,1) = "Hello";





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 35
Creates a Java array of size [M,N,.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
javaaddpath


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 253
 -- Function file:  javaaddpath (PATH)
     Adds PATH to the dynamic class path of the Java virtual machine.
     PATH can be either a directory where .class files can be found, or
     a .jar file containing Java classes.


   See also: javaclasspath




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 64
Adds PATH to the dynamic class path of the Java virtual machine.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 13
javaclasspath


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1049
 -- Function file:  javaclasspath
 -- Function file: STATIC = javaclasspath
 -- Function file: [STATIC, DYNAMIC] = javaclasspath
 -- Function file: PATH = javaclasspath (WHAT)
     Returns the class path of the Java virtual machine in the form of
     a cell array of strings.

     If called without input parameter:
        * If no output variable is given, the result is simply printed
          on the standard output.

        * If one output variable STATIC is given, the result is the
          static classpath.

        * If two output variables STATIC and DYNAMIC are given, the
          first variable will contain the static classpath, the second
          will be filled with the dynamic claspath.

     If called with a single input parameter WHAT:
        * If WHAT is '-static' the static classpath is returned.

        * If WHAT is '-dynamic' the dynamic  classpath is returned.

        * If WHAT is '-all' the static and the dynamic classpath are
          returned in a single cell array

   See also: javaaddpath, javarmpath




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Returns the class path of the Java virtual machine in the form of a
cell array o



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
javafields


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 246
 -- Function file: P = javafields (CLASS)
     Returns the fields of a Java object in the form of a cell array of
     strings. If no output variable is given, the result is simply
     printed on the standard output.


   See also: javamethods




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 75
Returns the fields of a Java object in the form of a cell array of
strings.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
javamem


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1589
 -- Function File: javamem
 -- Function File: [ JMEM] = javamem
     Show current memory status of the Java virtual machine (JVM) & run
     garbage collector.

     When no return argument is given the info is echoed to the screen.
     Otherwise, output cell array JMEM contains Maximum, Total, and
     Free memory (in bytes).

     All Java-based routines are run in the JVM's shared memory pool, a
     dedicated and separate part of memory claimed by the JVM from your
     computer's total memory (which comprises physical RAM and virtual
     memory / swap space on hard disk).

     The maximum available memory can be set using the file java.opts
     (in the same subdirectory where javaaddpath.m lives, see "which
     javaaddpath". Usually that is:
     [/usr]/share/octave/packages/java-<version>.

     java.opts is a plain text file, one option per line. The default
     initial memory size and default maximum memory size (which are
     both system dependent) can be overridden like so:
     -Xms64m
     -Xmx512m
     (in megabytes in this example.)  You can adapt these values to
     your own requirements if your system has limited available
     physical memory or when you get Java memory errors.

     "Total memory" is what the operating system has currently assigned
     to the JVM and depends on actual and active memory usage.  "Free
     memory" is self-explanatory. During operation of Java-based octave
     functions the amounts of Total and Free memory will vary, due to
     Java's own cleaning up and your operating system's memory
     management.





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Show current memory status of the Java virtual machine (JVM) & run
garbage colle



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
javamethods


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 244
 -- Function file: P = javamethods (CLASS)
     Returns the methods of a Java object in the form of a cell array
     of strings. If no output variable is given, the result is simply
     printed on the standard output.


   See also: methods




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 76
Returns the methods of a Java object in the form of a cell array of
strings.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
javarmpath


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 270
 -- Function file:  javarmpath (PATH)
     Removes PATH from the dynamic class path of the Java virtual
     machine. PATH can be either a directory where .class files can be
     found, or a .jar file containing Java classes.


   See also: javaaddpath, javaclasspath




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 69
Removes PATH from the dynamic class path of the Java virtual machine.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
listdlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1661
 -- Function file: [SEL,OK] = listdlg (KEY ,VALUE [, KEY ,VALUE, ...]])
     Returns the user's inputs from a list dialog box in form of a
     vector of selection indices SEL and a flag OK indicating how the
     user closed the dialog box.  The returned flag OK is 1 if the user
     closed the box with the OK button, otherwise it is 0 and SEL is
     empty.  The indices in SEL are 1 based, i.e. the first list item
     carries the index 1.

     The arguments are specified in form of KEY, VALUE pairs.  At least
     the 'ListString' argument pair must be specified.

     KEYs and VALUEs pairs can be selected from the following list:

    `ListString'
          a cell array of strings comprising the content of the list.

    `SelectionMode'
          can be either `Single' or `Multiple'.

    `ListSize'
          a vector with two elements [width, height] defining the size
          of the list field in pixels.

    `InitialValue'
          a vector containing 1-based indices of preselected elements.

    `Name'
          a string to be used as the dialog caption.

    `PromptString'
          a cell array of strings to be displayed above the list field.

    `OKString'
          a string used to label the OK button.

    `CancelString'
          a string used to label the Cancel  button.

     Example:

            [sel, ok] = listdlg ( 'ListString',{'An item', 'another', 'yet another'}, 'SelectionMode','Multiple' );
            if ok == 1
               imax = length(sel);
               for i=1:1:imax
                  disp(sel(i));
               end
            end


   See also: errordlg, helpdlg, inputdlg, questdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Returns the user's inputs from a list dialog box in form of a vector of
selectio



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
msgbox


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 532
 -- Function file: P = msgbox (MESSAGE [,TITLE [,ICON]])
     Displays the MESSAGE using a message dialog.

     MESSAGE can have multiple lines separated by newline characters
     ("\n"), or it can be a cellstr array (one element for each line).
     The optional TITLE (character string) can be used to decorate the
     dialog caption.  The ICON can be used optionally to select a
     dialog icon.  It can be one of `'error'', `'help'' or `'warn''.
     The return value is always 1.


   See also: helpdlg, questdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 44
Displays the MESSAGE using a message dialog.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
questdlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1149
 -- Function file: P = questdlg (MESSAGE, TITLE)
 -- Function file: P = questdlg (MESSAGE, TITLE, DEFAULT)
 -- Function file: P = questdlg (MESSAGE, TITLE, BTN1, BTN2, DEFAULT)
 -- Function file: P = questdlg (MESSAGE, TITLE, BTN1, BTN2, BTN3,
          DEFAULT)
     Displays the MESSAGE using a question dialog box.  The dialog
     contains two or three buttons which all close the dialog.  It
     returns the caption of the activated button.

     MESSAGE can have multiple lines separated by newline characters
     ("\n"), or it can be a cellstr array (one element for each line).
     The optional TITLE (character string) can be used to decorate the
     dialog caption.  The string DEFAULT identifies the default button,
     which is activated by pressing the ENTER key.  It must match one
     of the strings given in BTN1, BTN2 or BTN3.

     If only MESSAGE and TITLE are specified, three buttons with the
     default captions "Yes", "No", "Cancel" are used.

     If only two button captions BTN1 and BTN2 are specified, the
     dialog will have only these two buttons.


   See also: errordlg, helpdlg, inputdlg, listdlg, warndlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 49
Displays the MESSAGE using a question dialog box.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
warndlg


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 393
 -- Function file: P = warndlg (MESSAGE [,TITLE])
     Displays the MESSAGE using a warning dialog box.

     MESSAGE can have multiple lines separated by newline characters
     ("\n"), or it can be a cellstr array (one element for each line).
     The optional TITLE (character string) can be used to decorate the
     dialog caption.


   See also: helpdlg, inputdlg, listdlg, questiondlg




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Displays the MESSAGE using a warning dialog box.





