# Created by Octave 3.6.4, Sat Mar 30 09:22:15 2013 Jerusalem Daylight Time <unknown@NITH02>
# name: cache
# type: cell
# rows: 3
# columns: 4
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
getfields


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 239
 -- Built-in Function:  [V1,...] =
     getfields (S, 'k1',...) = [S.k1,...]  Return selected values from
     a scalar struct. Provides some compatibility and some flexibility.

   See also: setfields, rmfield, isfield, isstruct, struct




# name: <cell-element>
# type: sq_string
# elements: 1
# length: 20
getfields (S, 'k1',.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
setfields


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 255
 -- Function File:  S = setfields(S,KEY,VALUE,...)
     Sets S.KEY1 = VALUE1,  S.KEY2 = VALUE2, etc, finally returning s.
     For some compatibility and flexibility.

     See also: cmpstruct, fields, rmfield, isstruct, getfields,
     isfield, struct





# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
Sets S.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
tars


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 200
 s = tars (foo,bar, ... ) == struct ("foo",foo,"bar",bar,...)

 Groups foo, bar, ... into a struct whose fields are "foo", "bar" ...
 and such that s.foo == foo, s.bar == bar ...  

 See also : untar



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 21
 s = tars (foo,bar, .



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 11
test_struct


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 38
 EOF my test function ###############



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 38
 EOF my test function ###############






