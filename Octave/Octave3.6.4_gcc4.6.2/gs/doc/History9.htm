<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<title>History of Ghostscript versions 9.n</title>
<!--
WARNING: do not use Pete Kaiser's emacs function "gs-toc" alone to
re-create the table of contents here, because it will replace the
hand-edited TOC subheads with a separate subhead for each H2 in
the body of the file.  Or if you do, first look at the original
TOC to see how to edit it for visual conciseness.
-->
<link rel="stylesheet" type="text/css" href="gs.css" title="Ghostscript Style">
</head>

<body>
<!-- [1.0 begin visible header] ============================================ -->

<!-- [1.1 begin headline] ================================================== -->

<table width="100%" border="0">
<tr><th align="center" bgcolor="#CCCC00"><font size=6>History of Ghostscript versions 9.xx</font>
</table>

<!-- [1.1 end headline] ==================================================== -->

<!-- [1.2 begin table of contents] ========================================= -->

<h2>Table of contents</h2>

<blockquote><ul>
<li><a href="#Version9.07">Version 9.07 (2013-02-14)</a>
<li><a href="#Version9.06">Version 9.06 (2012-07-31)</a>
<li><a href="#Version9.05">Version 9.05 (2012-02-08)</a>
<li><a href="#Version9.04">Version 9.04 (2011-08-05)</a>
<li><a href="#Version9.02">Version 9.02 (2011-03-30)</a>
<li><a href="#Version9.01">Version 9.01 (2011-02-07)</a>
<li><a href="#Version9.00">Version 9.00 (2010-09-14)</a>
</ul></blockquote>

<!-- [1.2 end table of contents] =========================================== -->

<!-- [1.3 begin hint] ====================================================== -->

<p>
This document is a record of changes in Ghostscript releases numbered 9.xx.
For earlier versions, see the the history documents:

<blockquote>
<a href="History8.htm">History of Ghostscript versions 8.n</a><br>
<a href="History7.htm">History of Ghostscript versions 7.n</a><br>
<a href="History6.htm">History of Ghostscript versions 6.n</a><br>
<a href="History5.htm">History of Ghostscript versions 5.n</a><br>
<a href="History4.htm">History of Ghostscript versions 4.n</a><br>
<a href="History3.htm">History of Ghostscript versions 3.n</a><br>
<a href="History2.htm">History of Ghostscript versions 2.n</a><br>
<a href="History1.htm">History of Ghostscript versions 1.n</a>
</blockquote>

<p>For other information, see the <a href="Readme.htm">Ghostscript
overview</a>.

<!-- [1.3 end hint] ======================================================== -->

<hr>

<!-- [1.0 end visible header] ============================================== -->

<!-- [2.0 begin contents] ================================================== -->
<h2><a name="Version9.07"></a>Version 9.07 (2013-02-14)</h2>

<p>This is the seventh full release in the stable 9.x series.

<p> Highlights in this release include:
<ul>
<li>
<p> As of this release (9.07), Ghostscript and GhostPDL are distributed under
the GNU Affero General Public License (AGPL).
</li>
<li>
<p> Ghostscript now has the option to be built as thread safe. Note that
not all devices are thread safe. See the GS_THREADSAFE option in:
<a href="API.htm#new_instance">GS_THREADSAFE</a>
</li>
<li>
<p> The pdfwrite devices now supports linearized (or optimized for fast web
view) output directly ("-dFastWebView")
</li>
<li>
<p> The Font API (FAPI) has been moved from the Postscript interpreter (psi)
into the graphics library (base), and extended to support the other languages
(PCL/PXL/XPS). All interpreters now use Freetype by default to render all
viable font types.
</li>
<li>
<p> Ghostscript has been extended to support Postscript string and array
objects with >64k entries.
</li>
<li>
<p> Ghostscript has been extended to support file sizes >4Gb - in particular
reading and writing PDF files. As a side effect of this, Ghostscript also now
supports 64 bit Postscript integer objects.
</li>
<li>
<p> All CMYK devices can now support simulated overprint of spot colors using
the &quot;-dSimulateOverprint&quot; command line option.
</li>
<li>
<p> Support for use of DeviceN ICC color profiles as the output profile with
the tiffsep and psdcmyk devices.
</li>
<li>
<p> Support for customized named color handling with DeviceN colors
</li>
<li>
<p> Support for black point compensation
</li>
<li>
<p> Support for K preservation in CMYK to CMYK conversions
</li>
<li>
<p> Support for DeviceLink profiles for graphic, image and text objects
</li>
<li>
<p> Support for custom color replacement
</li>
<li>
<p> Increased control in specifying color conversions as a function of object type
<p> Full details of the color management features can be found in:
<a href="GS9_Color_Management.pdf">GS9_Color_Management.pdf</a>
</li>
<li>
<p> Provide BigTIFF output option: the tiff devices can write BigTIFF files
using the &quot;-dUseBigTIFF&quot; option. This requires libtiff version >=4.0.0 (the
option is ignored for versions <4.0.0)
</li>
<li>
<p> LittleCMS updated to 2.4
</li>
<li>
<p>Plus the usual round of bug fixes, compatibility changes, and incremental improvements.
</li>
</ul>
<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.07_Incompatible_changes"></a>Incompatible changes</h3>
<p>
No recorded incompatible changes.

<h3><a name="9.07_changelog"></a>Changelog</h3>
<p><strong>2013-01-30 16:22:21 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1db3e495532a23b3c736dd54215ecb82374837fe">1db3e495532a23b3c736dd54215ecb82374837fe</a>
<blockquote>
<p>
    Bug 693030 - duplexing page problem fixed in PXL output device.<br>
<br>
    Upon media changes or even duplexing changes the PXL device did not<br>
    switch back to the front page. Thanks to Hin-Tak Leung for fixing<br>
    this.<br>
<br>
gs/base/gdevpx.c<br>
gs/base/gdevpxut.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-30 14:07:41 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6e13685e1768771f87c94bdb2aaaab4d011d601c">6e13685e1768771f87c94bdb2aaaab4d011d601c</a>
<blockquote>
<p>
    Fix Bug #692914 - Postscript MediaType lost.<br>
<br>
    Thanks to Hin-Tak Leung for adding support for MediaType to PXL output<br>
    drivers.<br>
<br>
gs/base/gdevlj56.c<br>
gs/base/gdevpx.c<br>
gs/base/gdevpxut.c<br>
gs/base/gdevpxut.h<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-30 13:51:51 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c11bdaf7701b2736060ce291ae22fb0105ffaf5">9c11bdaf7701b2736060ce291ae22fb0105ffaf5</a>
<blockquote>
<p>
    Bug 693572 (redux): handle missing a glyph outline - again.<br>
<br>
    It turns out that some devices (pdfwrite!) have a problem with receiving a<br>
    completely empty path for an outline glyph, so......<br>
<br>
    If the outline is missing, create a path with just a moveto and closepath.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-30 13:37:47 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4704c9dc5d345fa6d81513fe9d5ea13aa199ae01">4704c9dc5d345fa6d81513fe9d5ea13aa199ae01</a>
<blockquote>
<p>
    Bug 693398: avoid marking/reloc'ing unsuitable pointer<br>
<br>
    The gx_image_enum object contains a pointer (cie_range) to the CIE range in<br>
    the color space, if it's for an image in certain types of CIE space. The<br>
    pointer points *into* an area of allocated memory, and not to the &quot;top&quot; of<br>
    the allocated block. As a result, when garbage collection tries to relocate,<br>
    there isn't a valid header structure, and the values it ends up using for the<br>
    relocation are nonsense.<br>
<br>
    Removing the cie_range pointer from the GC pointer enumeration is not<br>
    because the color space structure and it's contents can move. Since this is<br>
    a fairly rare case, and the CIE range lookup is trivial, the cie_range<br>
    pointer is replaced with a boolean (so we decide *whether* to use the range<br>
    only once), and then the range itself is retrieved at the time it's used.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gxi12bit.c<br>
gs/base/gxicolor.c<br>
gs/base/gximage.h<br>
gs/base/gximono.c<br>
gs/base/gxipixel.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-29 17:45:45 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=295a195f85ced8b965f65bbc1fe6c3cf78c36e51">295a195f85ced8b965f65bbc1fe6c3cf78c36e51</a>
<blockquote>
<p>
    Bug 693026: Fix SEGV when @FILE can't open.<br>
<br>
    Argument processing happens early during Ghostscript start-up process.<br>
    Be prepared, that not all structures have been initialized yet.<br>
<br>
gs/base/gsargs.c<br>
gs/base/gsargs.h<br>
gs/base/gsiodev.c<br>
gs/psi/imainarg.c<br>
pl/plmain.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-27 14:03:05 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ab9615d43302f03ce57fdd8e849ec52e870983e4">ab9615d43302f03ce57fdd8e849ec52e870983e4</a>
<blockquote>
<p>
    Bug 693590: MT rendering has wrong 'supports_devn' and incomplete color_info<br>
<br>
    Shadings use the comp_bits, comp_mask and comp_shift which must match<br>
    the main thread's setting, so we copy the color_info from the clist<br>
    device.<br>
<br>
    Also the thread's icc_struct-&gt;supports_devn must correspond to the main<br>
    thread's device (regressions with psdcmyk detected this).<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-29 15:12:04 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=62df74b7ef081a9f35028b493843a4624048f7af">62df74b7ef081a9f35028b493843a4624048f7af</a>
<blockquote>
<p>
    Bug 693599: Change the function configure checks for in liblcms2.<br>
<br>
    The lcms2 API changed at 2.2, adding the cmsGetTransformOutputFormat()<br>
    call. When we're checking if we can use the system's lcms2, change the<br>
    autoconf check to look for cmsGetTransformOutputFormat().<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-29 10:32:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c7aa3543e098620d70c5df143513718d3e83b12">3c7aa3543e098620d70c5df143513718d3e83b12</a>
<blockquote>
<p>
    Add the make fix from 1fbd0191 to the Mac specific subtarget.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-29 10:12:00 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3233283cfe4370fb826998d14954e4870155c80e">3233283cfe4370fb826998d14954e4870155c80e</a>
<blockquote>
<p>
    Work around a make problem with &quot;so&quot; target<br>
<br>
    GNU make 3.82 appears to have a bug which causes problems with our &quot;so&quot;<br>
    targets. The &quot;so&quot; targets rely on recursice make calls to build various<br>
    subtargets, the shared library and the two executables that link to the shared<br>
    library.<br>
<br>
    On the final recursive make call (to build the executables), GNU make 3.82<br>
    wrongly identifies that one dependency (psbase.dev) has changed, and decides it<br>
    must rebuild the shared library. By this stage, however, the compiler options<br>
    have been setup to build an executable, rather than the shared library.<br>
<br>
    As a result, we build an executable with the name of the shared lib, and<br>
    then try to link that into an executable, which results in linker errors.<br>
<br>
    As it happens, the use of recursive make calls means we can safely drop a<br>
    dependency, which will prevent make from re-evaluating the problematic target,<br>
    and thus avoiding the problem arising.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 17:32:15 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bbfbdf7574e6ac46b65b76b06dea6a4e94d35f31">bbfbdf7574e6ac46b65b76b06dea6a4e94d35f31</a>
<blockquote>
<p>
    Bug 693284: Prevent read access violation.<br>
    Check whether there's enough data.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 16:34:20 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ba5e87d05bb2bfff4e475fa21bd8558896ca053">7ba5e87d05bb2bfff4e475fa21bd8558896ca053</a>
<blockquote>
<p>
    Bug 693284: Detect missing glyphs and fail.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 15:34:38 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33794a10191cf1e5c1b41410ee068ba71cf3825c">33794a10191cf1e5c1b41410ee068ba71cf3825c</a>
<blockquote>
<p>
    Bug 693284: Conditional inclusion of memento header.<br>
<br>
gs/jbig2dec/jbig2.h<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 13:34:01 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ccae004db8b875086995353c299cee196dd326fb">ccae004db8b875086995353c299cee196dd326fb</a>
<blockquote>
<p>
    Bug 693284: Break an infinite loop.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 11:56:37 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4b6594315066b8ded562111472aa5933c6c54238">4b6594315066b8ded562111472aa5933c6c54238</a>
<blockquote>
<p>
    Bug 693284: Fix 32 vs 64-bit typ[e mismatch.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 11:09:04 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eea1deb225c19ab7a29b7ccdb33290d757853f1b">eea1deb225c19ab7a29b7ccdb33290d757853f1b</a>
<blockquote>
<p>
    Bug 693284: Don't shift 32-bit value by 32.<br>
<br>
gs/jbig2dec/jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 09:03:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cf877b78dbe7d077d1369b07bdaf73ba8415e01">9cf877b78dbe7d077d1369b07bdaf73ba8415e01</a>
<blockquote>
<p>
    Handle cases where pointer alignment does not match pointer size.<br>
<br>
    On some hardware, pointer alignment does not necessarily match the size<br>
    of a pointer - handle that in genarch.<br>
<br>
    No cluster differences<br>
<br>
gs/base/genarch.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 08:55:02 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8120955272fe1c9d1a8182c2dbba44758d3d3091">8120955272fe1c9d1a8182c2dbba44758d3d3091</a>
<blockquote>
<p>
    Fix unaligned pointer access.<br>
<br>
    In pdf_add_subset_prefix() change so that the hashing code accesses<br>
    the buffer byte at a time, rather than short at a time, and increment<br>
    through the buffer &quot;sizeof(short)&quot; bytes at a time. The former ensures<br>
    we never risk an unaligned memory access on strict alignment<br>
    architectures, and the latter ensures we hash all the relevant data<br>
    correctly.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevpdtb.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-28 08:57:12 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=daeb0a9a52f865e9088c29511fd397d8356ca775">daeb0a9a52f865e9088c29511fd397d8356ca775</a>
<blockquote>
<p>
    pdfwrite - record the usage of outlines, articles, named dests and labels<br>
<br>
    When linearising, I forgot to add the dictionaries, referenced from the<br>
    Catalog, for Outlines, Threads, Named desintations and Page Lanels to<br>
    the usage record. This meant these dictionaries were accidentally<br>
    dropped from the final PDF file.<br>
<br>
    Here we just record their usage.<br>
<br>
    No diffrences expected.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-27 14:06:05 -0500
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=07d5a619b525898759a7468631a6cb775edf5bd6">07d5a619b525898759a7468631a6cb775edf5bd6</a>
<blockquote>
<p>
    Bug 691246: Handle inverted symbol region.<br>
<br>
    Propagate combination operator and also fix an error in coding XNOR<br>
    logical operation.<br>
<br>
gs/jbig2dec/jbig2_generic.c<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-27 01:46:17 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0e140900d2f1eca99ad64c5bdef131cddc55e5ef">0e140900d2f1eca99ad64c5bdef131cddc55e5ef</a>
<blockquote>
<p>
    Bug 693513: Detect and reject negative parameters.<br>
<br>
    Fix detection of negative width and height attributes.<br>
    Add detection of negative number of dictionary symbols.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-26 21:47:12 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=152d0cec22438acbb6a5cd50a65b0f9f8c729195">152d0cec22438acbb6a5cd50a65b0f9f8c729195</a>
<blockquote>
<p>
    Fix bug #693586 - clist error message.<br>
<br>
    The error was caused by sending image data to the library after the<br>
    page was output, now graphics mode is flushed and closed before the<br>
    page is output.  The bug was introduced by ea54a03 which closed<br>
    graphics mode at the time of &quot;end job&quot; which could occur after output<br>
    page.  We do need to leave that commit intact as the job could end<br>
    without outputting a page, and the raster state would not be cleaned<br>
    up.<br>
<br>
pcl/pcpage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-26 21:43:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=386b7ab3dcdf165d6a9cae58a871e0bb78b7bdac">386b7ab3dcdf165d6a9cae58a871e0bb78b7bdac</a>
<blockquote>
<p>
    dwmainc.c include file dependencies added to makefile.<br>
<br>
main/pcl6_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-26 19:58:46 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e40d514124722e7babf4acaf1db5eb4e372b5f72">e40d514124722e7babf4acaf1db5eb4e372b5f72</a>
<blockquote>
<p>
    Bug 693496: Fix 16-bit gray image on CMYK devices on 32-bit platforms.<br>
<br>
    Use platform-independent way (memcmp) to compare color values instead of<br>
    instead of relying on the word sizes. Old code missed some of the<br>
    color components on 32-bit computers.<br>
<br>
gs/base/gxi12bit.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-25 22:46:38 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=81a36cc82e8680ac6bf7f0808402bf6ff02920ea">81a36cc82e8680ac6bf7f0808402bf6ff02920ea</a>
<blockquote>
<p>
    Bug 693587: Make EOL check a little more strict.<br>
    Don't skip space character after finding \r. Just peek for the following<br>
    \n and stop scanning.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-25 15:29:12 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a438b95a287f36b721331c50a4c47985616a0c19">a438b95a287f36b721331c50a4c47985616a0c19</a>
<blockquote>
<p>
    Bug 693584: Fix annotation scaling.<br>
<br>
    Fix incorrect scaling of annotations with appearance subdirectories. Old code<br>
    always failed to find the actual appearance dictionary and used identity<br>
    scaling in such cases.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-25 09:50:41 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5fa93a84163a0e2680ead7e76425c92da24bce5c">5fa93a84163a0e2680ead7e76425c92da24bce5c</a>
<blockquote>
<p>
    Another documentation update of the color architecture.<br>
<br>
gs/doc/GS9_Color_Management.pdf<br>
gs/doc/GS9_Color_Management.tex<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 21:42:03 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=52cb8e94511a3a5acd8d3a21f6a22cf24d52962e">52cb8e94511a3a5acd8d3a21f6a22cf24d52962e</a>
<blockquote>
<p>
    Update of color management document for 9.07 release<br>
<br>
gs/doc/GS9_Color_Management.pdf<br>
gs/doc/GS9_Color_Management.tex<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 12:58:58 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=210c9344792bcf95c540f93428562c34104ffb28">210c9344792bcf95c540f93428562c34104ffb28</a>
<blockquote>
<p>
    Set stdio streams to binary, bug #693543.<br>
<br>
    This is exactly the same solution used in gs/base/dwmainc.c.  The<br>
    commit also removes extraneous include files.  Updating the associated<br>
    dwmain makefile target with the new include file dependencies is<br>
    forthcoming.<br>
<br>
pl/dwmainc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 12:05:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=400e64a36f1f18e3642b705d926c49c42adc8599">400e64a36f1f18e3642b705d926c49c42adc8599</a>
<blockquote>
<p>
    Bug 693571: properly close allocator chunk during save<br>
<br>
    During a save operation, we &quot;close&quot; the open chunk and save the state of the<br>
    current generation of an allocator before creating a new generation and opening<br>
    a new chunk for the new generation.<br>
<br>
    After doing that, we try to eliminate any redundant changes listed for the<br>
    &quot;saved&quot; allocator instance. That can end freeing memory in the &quot;closed&quot; chunk,<br>
    leaving it in an unstable state, and causing the garbage collector to try to<br>
    validate already freed memory.<br>
<br>
    In drop_redundant_changes() we now call alloc_open_chunk() and<br>
    alloc_close_chunk() so that, in event we do disard changes (thus freeing<br>
    memory), the allocator is left in an internally consistent state, and<br>
    avoids confusing the chunk validation code during garbage collection.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/isave.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 11:56:25 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=149811fa66aaaf272a1377e9df1a79f3752e0299">149811fa66aaaf272a1377e9df1a79f3752e0299</a>
<blockquote>
<p>
    Update int_freed_top in the correct chunk<br>
<br>
    In i_free_object() we were identifying the correct chunk for the memory<br>
    address we were freeing, but then always updating int_freed_top in the<br>
    current chunk. This could cause us to fail to consolidate free blocks when<br>
    we possibly could, or to attempt to do so when it would be pointless.<br>
<br>
    So we now identify whether the address is in the current chunk, and write<br>
    int_freed_top in that, or use the actual chunk pointer for the freed<br>
    memory block.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gsalloc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 11:44:39 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f0a42367372cffeb80e32a4244dc74031fda077">0f0a42367372cffeb80e32a4244dc74031fda077</a>
<blockquote>
<p>
    Use the correct memory pointer for glyph cache init<br>
<br>
    The PS interpreter initialised the glyph cache using the &quot;imemory&quot;<br>
    pointer for the cache memory. But if the cache gets resized via<br>
    a setuserparams or setcacheparams, the graphics libarary would then<br>
    use the &quot;stable_memory&quot; pointer to free the original memory, and allocate<br>
    the new. Thus illiciting warning about &quot;memory not owned by allocator&quot; when<br>
    running with -ZA<br>
<br>
    Switch the PS interpreter initialisation to also use &quot;stable_memory&quot;.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zfont.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-24 11:36:16 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3b2819779786467f3ed6799242947d811186a29a">3b2819779786467f3ed6799242947d811186a29a</a>
<blockquote>
<p>
    Change the memory pointer used for if_debug2m()<br>
<br>
    The cmem pointer can be null in stream_finalize() if it is called from the<br>
    garbage collector. Use the memory pointer from the stream object instead.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/stream.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-23 16:11:32 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=57744bd8af3b06cea888b7a66c8349c5096b748d">57744bd8af3b06cea888b7a66c8349c5096b748d</a>
<blockquote>
<p>
    Bug 693572: handle missing a glyph outline.<br>
<br>
    We purposefully ignore some errors during glyph creation. In that event,<br>
    the path creation for an outline glyph, we weren't checking for the<br>
    outline being missing.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-23 09:06:04 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb8f4582d893aab544597599b9498e38dfa12de4">bb8f4582d893aab544597599b9498e38dfa12de4</a>
<blockquote>
<p>
    ps2write - Don't add PageLabels to the Catalog when we get a relevant pdfmark<br>
<br>
    Bug 693551 &quot; Regression: &quot;Error handled by opdfread.ps : rangecheck&quot; starting with 5784bfbfba7191cacce5309e88afac0851287460&quot;<br>
<br>
    opdfread.ps doesn't know what to do with a PageLabel, so don't emit them<br>
<br>
    Not sure why this didn't show up in the original cluster test<br>
<br>
gs/base/gdevpdfp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-23 08:19:24 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5874ad1dfa17839d499db8b041a5fc9bdbfd6b22">5874ad1dfa17839d499db8b041a5fc9bdbfd6b22</a>
<blockquote>
<p>
    Properly initialise 'clip' device<br>
<br>
    Bug #693575 &quot;segfault with ps2write and -dDisablePAPI&quot;<br>
<br>
    Although labeled as a PS writer problem this is in fact a general bug. In<br>
    gx_image_fill_masked we call gx_image_fill_masked_start() with a pointer<br>
    to a gx_device * which we expect to be filled in.<br>
<br>
    This will be the device which accumulates the clip, if the current target<br>
    device can accumulate clips then we use it, otherwise we set up an<br>
    accumulation device.<br>
<br>
    However there was a path through gx_image_fill_masked_start which did not<br>
    set the device, leading to the variable being left uninitialised and<br>
    causing a later crash.<br>
<br>
    This patch initialises the variable to the current device before calling<br>
    gx_image_fill_masked_start and also fixes the code path in that routine<br>
    so that it always fills in the device. Just to be safe.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gximask.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-23 08:46:58 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5420903e1cbccc8c27c8e9f82c21efd9fef36366">5420903e1cbccc8c27c8e9f82c21efd9fef36366</a>
<blockquote>
<p>
    Silenced compiler warnings in cups/gdevcups.c.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 20:25:18 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f0f048ae68e9b93b536a52c783b566652ab72b3e">f0f048ae68e9b93b536a52c783b566652ab72b3e</a>
<blockquote>
<p>
    Bug 693573; Prevent multiple free when MT rendering cannot start any threads<br>
<br>
    When the MT rendering fails to start any device after the thread's<br>
    chunk allocator was set up, multiple free of the allocator would occur<br>
    because the thread's 'memory' was not set to NULL.<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 21:24:17 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76fa834e14471fb54e3dd23802a8c8f53d7fda0e">76fa834e14471fb54e3dd23802a8c8f53d7fda0e</a>
<blockquote>
<p>
    Fix warning, missing declaration, in the previous commit<br>
    ea54a0304934c570a51ca5eec216b0480f2b5be5<br>
<br>
pcl/pcl.mak<br>
pcl/pctop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 20:07:57 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=81ea731e97a93a5c9e3f59d7f67f8b3aa5c495c8">81ea731e97a93a5c9e3f59d7f67f8b3aa5c495c8</a>
<blockquote>
<p>
    Bug 693570: Clear operand stack finishing PDF page.<br>
<br>
    Clear all objects that may be left behind by PDF command streams.<br>
    Stray composite objects interfere with a restore operator at the<br>
    end of the page.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 18:04:09 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=298abec0432d87b25e57b2ab549b1817f396e851">298abec0432d87b25e57b2ab549b1817f396e851</a>
<blockquote>
<p>
    Remove a bogus comment, lineprinter font is bound.<br>
<br>
pl/plftable.h<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 17:51:08 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea54a0304934c570a51ca5eec216b0480f2b5be5">ea54a0304934c570a51ca5eec216b0480f2b5be5</a>
<blockquote>
<p>
    Fixes interpreter crash see bug #693543.<br>
<br>
    If a PCL job exited in the middle of a raster stream graphics mode was<br>
    not terminated properly at the end of the job, instead we tried to<br>
    shut down graphics later at the time of interpreter shutdown which<br>
    leads to a unordered freeing of resources.<br>
<br>
pcl/pctop.c<br>
pcl/rtgmode.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-22 21:06:37 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=188e13b462ce0d606735b53e22bdba667e391c00">188e13b462ce0d606735b53e22bdba667e391c00</a>
<blockquote>
<p>
    CUPS Raster &quot;cups&quot; device: Improvements for pages size matching with PPD<br>
<br>
    These changes improve the matching of the sizes of the incoming pages with<br>
    the page sizes available for thr printer according to the PPD file.<br>
<br>
    Instead of stopping to searcg through the PPDs page sizes when a size<br>
    gets found which fits within the limits, we always go through all page<br>
    sizes to find the best match. We consider the best match the size with<br>
    the name given on the command line/by the input file and matching the<br>
    size of the current page within the limits, second level is a match of<br>
    size and margins and third level is only matching the size. If there<br>
    is more than one match of the same level, the product of the<br>
    horizontal and vertival size deviation counts.<br>
<br>
    In addition, we let the gstoraster wrapper CUPS filter for Ghostscript<br>
    call Ghostscript with all parameters on the command line (especially<br>
    also the page size name) also when the input is PostScript.<br>
<br>
gs/cups/gdevcups.c<br>
gs/cups/gstoraster.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-18 13:14:15 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ae1a17c87e2e0d6de13d3a354129ff09668bb32">2ae1a17c87e2e0d6de13d3a354129ff09668bb32</a>
<blockquote>
<p>
    Fix Bug 693422. SEGV due to transparency and patterns<br>
<br>
    This change disables the check when doing the pattern_cache_lookup,<br>
    since transparency ops that set the colorspace may have been omitted<br>
    from bands where they are not needed, but a large pattern may have<br>
    been written to all bands. Thanks to Alex for finding this.<br>
<br>
gs/base/gsptype1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-17 14:25:25 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96a8e3595982078f0bfd6a93cb51e420f25fdc31">96a8e3595982078f0bfd6a93cb51e420f25fdc31</a>
<blockquote>
<p>
    Bug 693550: Consider max color index -1 as 255.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-17 18:44:10 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=57a5089f1e2c2a83eceec81dfa2facf5f9fb51e0">57a5089f1e2c2a83eceec81dfa2facf5f9fb51e0</a>
<blockquote>
<p>
    Bug 693541: Fix color setup in pdf14_create_clist_device.<br>
<br>
    When we create a pdf14 clist device (a pdf14cmykspot device, in this<br>
    case) in pdf14_create_clist_device, we are at pains to set the<br>
    num_components and max_components appropriately. At no point do we<br>
    similarly sanitise the depth however.<br>
<br>
    The fix applied here is an exact parallel to the first commit for<br>
    this bug.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-17 12:22:34 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e57017fa3eaeb1c2034eb0925e0da2f38e286d3">8e57017fa3eaeb1c2034eb0925e0da2f38e286d3</a>
<blockquote>
<p>
    Fixes 693552 - regression with polygon handling.<br>
<br>
    The previous fix, b2796b4d58, did not properly handle the pathological<br>
    case of adding an HPGL/2 sub-polygon to an empty polygon path.<br>
<br>
pcl/pgpoly.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-17 17:58:01 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2a3bf5a4865d2d97e46742d14814758bb70abf53">2a3bf5a4865d2d97e46742d14814758bb70abf53</a>
<blockquote>
<p>
    Bug 693541: Fix 'undefined filename' error<br>
<br>
    If '%' is used in a separation name (say &quot;45% 286 overprinting 186&quot;),<br>
    then when the file is opened, we interpret the % as a format specifier<br>
    and we complain. Simple fix is to replace '%' with '_' when generating<br>
    the tif filenames.<br>
<br>
    The file now runs further, and hits another (unrelated) pattern cache<br>
    problem.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-15 13:31:50 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=045ad34f5074874c38e77919db920c5ed45dc5f5">045ad34f5074874c38e77919db920c5ed45dc5f5</a>
<blockquote>
<p>
    Bug 693541: Fix planar depth calculation from color_info.<br>
<br>
    At various places in the code, we assume that for a planar device:<br>
<br>
     dev-&gt;color_info.depth = dev-&gt;color_info.num_components * plane_depth<br>
<br>
    This is NOT necessarily the case (due to tag planes etc).<br>
<br>
    We therefore avoid the need for this calculation by adjusting the<br>
    return value from gxdso_is_native_planar; rather than returning 0<br>
    or 1 (for not-planar or planar), we now return 0 or the depth of<br>
    the planes.<br>
<br>
    The logic in pdf14_create_clist_device is updated to use this. This<br>
    gets the file mentioned in the bug through to another (seemingly<br>
    unrelated) crash that I will investigate next.<br>
<br>
gs/base/gdevdrop.c<br>
gs/base/gdevmpla.c<br>
gs/base/gdevp14.c<br>
gs/base/gdevppla.c<br>
gs/base/gxclimag.c<br>
gs/base/gxclist.c<br>
gs/base/gxclist.h<br>
gs/base/gxcolor2.h<br>
gs/base/gxdevsop.h<br>
gs/base/gxht_thresh.c<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
gs/base/gxp1fill.c<br>
gs/base/gxpcmap.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-16 12:08:24 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=37e07e95a5588c2feaba60bbf506a7a9e433a43c">37e07e95a5588c2feaba60bbf506a7a9e433a43c</a>
<blockquote>
<p>
    Fix bug 693557: SEGV regression with NumRenderingThreads &gt; 0 in pattern_load<br>
<br>
    This was due to the pdf14 device changing num_components during clist playback<br>
    when it had not changed during writing the clist. When a pattern tried to load<br>
    it failed the check that the depth of the pattern matched the depth of the<br>
    device. This was traced to picking the pdf14cmyk device during rendering instead<br>
    of the pdf14CMYKspot device because the thread's max_components was set to 4,<br>
    not 14 (as during clist writing). Fix the MaxSeparations in gsdparam to return<br>
    max_components instead of num_components, then fix devn_get_params to pass the<br>
    PageSpotColors param and the setting of num_components in devn_put_params to<br>
    ignore max_separations since that doesn't make sense.<br>
<br>
gs/base/gdevdevn.c<br>
gs/base/gsdparam.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-16 21:54:23 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb51890a39bb97de55c5ce4734c55cba060d8e79">cb51890a39bb97de55c5ce4734c55cba060d8e79</a>
<blockquote>
<p>
    pdf14_mark_rectangle speedups<br>
<br>
    Customer 532 report 3 files that perform slower than they would like.<br>
    Profiling of these files shows that they all make heavy use of<br>
    fill rectangle calls on a pdf14 device. This means lots of time<br>
    is spent in pdf14_mark_fill_rectangle, and the subsidiary function<br>
    it calls, art_pdf_composite_pixel_alpha_8.<br>
<br>
    This commit introduces various optimisations:<br>
<br>
     1) We avoid the collation/decollation copies for the additive<br>
    case by using a new function (art_pdf_composite_alpha_8_fast) that<br>
    takes the planeheight as an arg. This may do the collation/decollation<br>
    internally if required.<br>
<br>
     2) We pull the logic for the 2 fast cases out of<br>
    art_pdf_composite_pixel_alpha_8_fast.<br>
<br>
     3) We rejig the loops to count downwards where possible.<br>
<br>
     4) We reduce the number of variables in use within the loop by<br>
    updating rowstride/alpha_g_off/shape_off/tag_off etc before the<br>
    loop.<br>
<br>
     5) We modify the values of src_alpha and shape before the loop to<br>
    avoid repeated calculations within the loops.<br>
<br>
     6) We add a special case loop to handle the num_comp == 1 &amp;&amp; additive<br>
    case (as typically seem with monochrome or grayscale devices). This uses<br>
    an even simpler art_pdf_composite_alpha_8_fast_mono routine (no loops<br>
    and fewer multiplies).<br>
<br>
    Feedback from customer 532 is that these changes (backported to their<br>
    8.71 based system) gives a noticable speedup.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gxblend.c<br>
gs/base/gxblend.h<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-11 09:55:22 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed38aa2fffd43cc0b38a4a0d1d66ec304ef0924e">ed38aa2fffd43cc0b38a4a0d1d66ec304ef0924e</a>
<blockquote>
<p>
    Fix for issue with transparency B stroke fill operation with softmask<br>
<br>
    During a B operation (Stroke and fill) with transparency we push a knockout group to make sure<br>
    the stroke blows away the fill rather than blending.  When there was a softmask present, we<br>
    were not passing along the soft mask for the fill portions during the group compositing operation.<br>
<br>
gs/base/gxblend.c<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-10 12:17:08 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1bc2a56f913ff1fa3f7af06000a4c6dd5c948afd">1bc2a56f913ff1fa3f7af06000a4c6dd5c948afd</a>
<blockquote>
<p>
    Fix bug 693361: Rendering threads unsafe use of main thread allocator.<br>
<br>
    The PCL main thread allocator is not thread safe, and the rendering<br>
    threads would end up using this allocator to form link profiles (in<br>
    the lcms logic) because the device profile had the 'memory' allocator<br>
    set to the main thread's allocator.<br>
<br>
    The fix found by Robin Watts was to use the thread's device (which<br>
    have a copy of the device profile with the thread's memory allocator,<br>
    set by gs_putdeviceparams) in the call to create_buf_device.<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-10 12:08:03 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79e780b55d1e832895b3a9c6aa13017a57d1ca72">79e780b55d1e832895b3a9c6aa13017a57d1ca72</a>
<blockquote>
<p>
    Big 693185: Suppress unbalanced q/Q warning.<br>
<br>
    When the stream run is aborted, the processed part is likely to have<br>
    more q than Q. Reporting this fact to the user is misleading, because<br>
    it's an interpretation artifact rather than the file property.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-09 13:26:43 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e8d295679c4b6eabe71256b748282be048b27c05">e8d295679c4b6eabe71256b748282be048b27c05</a>
<blockquote>
<p>
    pdfwrite - when handling PaintType 2 fonts, cater for rotatedt text<br>
<br>
    We handle PaintType 2 fonts in PDF output by leaving them as regular type 1<br>
    fonts but setting the text rendering mode to 1 (stroke). Naturally we also<br>
    have to calculate an appropriate stroke width based on the font matrix,<br>
    text point size and, for PDF, the text matrix.<br>
<br>
    Previously we handled rotated FontMatrix entries, but didn't check for a<br>
    rotated text matrix, which led to a multiplication by 0 and setting the<br>
    stroke width much too narrow.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-09 02:12:56 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=339fcbd26065c2771a33ea8c805ff70bd097684a">339fcbd26065c2771a33ea8c805ff70bd097684a</a>
<blockquote>
<p>
    Bug 693033: Build shading in stopped context.<br>
<br>
    Move shading dictionary construction into a stopped context. New code<br>
    just drops a shading that cannot be constructed or rendered instead of<br>
    aborting the whole stream run.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-08 14:17:44 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf46f4c8ce91e6d62c902e58c79267934eed6eda">cf46f4c8ce91e6d62c902e58c79267934eed6eda</a>
<blockquote>
<p>
    Bug 693420: Add missing initialization of sim_overprint.<br>
<br>
    Valgrind detects that sim_overprint is not initialised in this case.<br>
    Normally, gcc has it set to 0 and produces normal output. Setting it<br>
    to 1 creates the same incorrect output as reported.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-08 17:45:46 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb5a79b39e4ada667ac2e9c91179da29bafbd129">bb5a79b39e4ada667ac2e9c91179da29bafbd129</a>
<blockquote>
<p>
    Fix &quot;fallback&quot; to know about Microtype fonts<br>
<br>
    In the event that FAPI fails to handle a font, there is a (temporary) fallback<br>
    to the AFS code.<br>
<br>
    That fallback *must* not be used for the Microtype fonts loaded via UFST, since<br>
    the font loading code uses the error return to determine that we've loaded all<br>
    the fonts from the FCO.<br>
<br>
    No cluster differences.<br>
<br>
pl/plfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-08 17:03:21 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=693b5421da925b627b7ce573ea7346b5d3611de9">693b5421da925b627b7ce573ea7346b5d3611de9</a>
<blockquote>
<p>
    Bug 693538: tweak TTF cmap format 4 parsing.<br>
<br>
    Empty segments in the cmap table (that is, those where the start character code<br>
    is the same as the end code) aren't ignored, we correctly &quot;fake&quot; a one entry<br>
    segment. It seems, however, that we should *not* do that when the start and<br>
    end codes are zero - in that case, we should ignore it.<br>
<br>
    No cluster differences.<br>
<br>
gs/Resource/Init/gs_ttf.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-08 08:47:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3cc531830906a291d4d088e31936a92d7324e53c">3cc531830906a291d4d088e31936a92d7324e53c</a>
<blockquote>
<p>
    Switch Ghostscript/GhostPDL to Affero GPL<br>
<br>
    As discussed on IRC, e-mail and at the last staff meeting.<br>
<br>
COPYING<br>
LICENSE<br>
gs/LICENSE<br>
gs/doc/COPYING<br>
gs/doc/Commprod.htm<br>
gs/doc/Readme.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/examples/cjk/all_ac1.ps<br>
gs/examples/cjk/all_ag1.ps<br>
gs/examples/cjk/all_aj1.ps<br>
gs/examples/cjk/all_aj2.ps<br>
gs/examples/cjk/all_ak1.ps<br>
gs/examples/cjk/gscjk_ac.ps<br>
gs/examples/cjk/gscjk_ag.ps<br>
gs/examples/cjk/gscjk_aj.ps<br>
gs/examples/cjk/gscjk_ak.ps<br>
gs/examples/cjk/iso2022.ps<br>
gs/examples/cjk/iso2022v.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-07 22:05:54 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e49f26eedd54120b615487db37dbdc1429685f79">e49f26eedd54120b615487db37dbdc1429685f79</a>
<blockquote>
<p>
    Bug 693539: Add duplex option to gslp utility.<br>
<br>
    Commit a contributed patch that adds a duplex option to gslp script.<br>
<br>
gs/lib/gslp.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-07 13:29:03 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f85458194f235cf9236214b49c385e9bad4e11e">2f85458194f235cf9236214b49c385e9bad4e11e</a>
<blockquote>
<p>
    bug 693485: Handle single '~' as EOF in PDF<br>
<br>
    Accept single '~' as a valid end of stream indicator in PDF files.<br>
    Acrobat Reader accepts this kind of PDF files without warnings.<br>
<br>
gs/base/sa85d.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-07 13:53:14 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=27df0d4971de23a82f0284c28aeb6e36cf355e46">27df0d4971de23a82f0284c28aeb6e36cf355e46</a>
<blockquote>
<p>
    Bug 693532: Fix GTK+ 2.x fallback.<br>
<br>
    The conditions under which to test for and use GTK+ 2.x were incorrect.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-07 08:33:05 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e639c0764cc50640135528fa6b0faac233bd87d2">e639c0764cc50640135528fa6b0faac233bd87d2</a>
<blockquote>
<p>
    Fix indeterminism with FAPi and artificial bold glyphs<br>
<br>
    Copy the raster lines from the FAPI bitmap into a temporary, appropriately<br>
    aligned buffer before doing the &quot;smearing&quot;.<br>
<br>
    Also ensure that the FAPI settings for XL downloaded font and emboldening are<br>
    correct.<br>
<br>
    Potentially affects all PCL/PXL test files with emboldening and XL fonts.<br>
<br>
gs/base/gxfapi.c<br>
pl/plfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-04 20:34:47 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=def5e256da42d12cf8103fa7481380b6df84aa96">def5e256da42d12cf8103fa7481380b6df84aa96</a>
<blockquote>
<p>
    Bug 93512: Add -dUseArtBox option.<br>
<br>
    ArtBox is often the smallest of all boxes. This option can be useful<br>
    when the file should be cropped to the smallest box without loss of<br>
    the contemt. Thanks to Marcos for the patch.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-04 02:39:34 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5124cc05570819036a7bf689dbed91f57f74ba24">5124cc05570819036a7bf689dbed91f57f74ba24</a>
<blockquote>
<p>
    Bug 693528: trap errors in ToUnicode CMap<br>
<br>
    Read ToUnicode CMap in a stopped context. Ignore the CMap if<br>
    reading fails.<br>
<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2013-01-02 17:21:24 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af5ba82a0c147b207d276a1acb9daa7bf7665227">af5ba82a0c147b207d276a1acb9daa7bf7665227</a>
<blockquote>
<p>
    pdfwritre - change fixed buffer for CIDSystemInfo to dynamic allocation<br>
<br>
    Bug #693514 &quot;Broken PDF produced from PostScript by Windows 8 Microsoft<br>
    PS Class Driver&quot;<br>
<br>
    The problem is that the CIDSystemInfo Registry and Ordering produced by<br>
    the Microsoft XPS to PS device is &gt; 32 characters. The code to write the<br>
    CIDSystemInfo used a fixed buffer of 32 characters. If that overflowed we<br>
    returned a limitcheck which caused pdfwrite to attempt a type 3 fallback<br>
    which also failed.<br>
<br>
    Changed the code to (more logically) allocate a buffer for the temporary<br>
    usage. Also if this fails we return a VMerror which doesn't trigger an<br>
    attempt to fall back to type 3.<br>
<br>
    No Expected Differences<br>
<br>
gs/base/gdevpdtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-28 18:32:37 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bc70bf785efcb1a3f9c995b5d8b4c1c29dc881e5">bc70bf785efcb1a3f9c995b5d8b4c1c29dc881e5</a>
<blockquote>
<p>
    Bug 693511: Ignore spurious ET operator<br>
<br>
    Ignore ET operator when it appears outside of BT context and issue<br>
    a warning.<br>
<br>
gs/Resource/Init/pdf_ops.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-28 10:20:44 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fea783c88450639227cfc456557ce16c348c9a67">fea783c88450639227cfc456557ce16c348c9a67</a>
<blockquote>
<p>
    Fixed minor typo in documentation.<br>
<br>
gs/doc/Make.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-25 13:27:35 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ec5b8eb0ccf0fc6881a6ffd2d190aa40e1faef1c">ec5b8eb0ccf0fc6881a6ffd2d190aa40e1faef1c</a>
<blockquote>
<p>
    Bug 693490: Warn about searching external contexts.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-25 12:58:02 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23e7e3054c095cd5157f2f7768f95a75b86f9779">23e7e3054c095cd5157f2f7768f95a75b86f9779</a>
<blockquote>
<p>
    Bug 693490: Search all XObject resources.<br>
<br>
    Adobe Acrobat appears to search all nested XObjects for resource names<br>
    contrary to the PDF specification. This patch follows the reference<br>
    implementation and saves a pointer to XObject resource dictionary on<br>
    the graphic state. When a resource cannot be found in a standard way,<br>
    the stack of graphic states is searched.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-22 12:21:38 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b25fb04f7210656dd987cf23151aec08f4a9f2ee">b25fb04f7210656dd987cf23151aec08f4a9f2ee</a>
<blockquote>
<p>
    Documentation update (Bug 693491).<br>
<br>
gs/doc/Make.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-22 09:57:10 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6ca50ddca3268fe4626279c591e6fe3dce4c4228">6ca50ddca3268fe4626279c591e6fe3dce4c4228</a>
<blockquote>
<p>
    Have the PDF14 device properly set up some of its color info<br>
<br>
    The lack of setting the comp_bits components in the color info when we have<br>
    the pdf14 CMYKSpot device caused an issue in the shading code.  Fixes<br>
    Bug 693480.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 11:23:41 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1276ea02ac198b92788e3f6fac704c6ae2c2c4c7">1276ea02ac198b92788e3f6fac704c6ae2c2c4c7</a>
<blockquote>
<p>
    Enable proper blending to occur when we draw transparency patterns.<br>
<br>
    This fixes  Bug 693498.  Previously we were not getting the blending information to<br>
    the group that we push to draw into.   Also,  there was a difference in how the clist<br>
    and non-clist pattern cases had to be handled.  In the clist case, we do not know<br>
    what the blend mode for a group encompassing the pattern would be until the pattern is<br>
    run through the clist.   Hence its logic with respect to transparency required a change.<br>
    Also fixed a bug that occurred when we used the -Zv debug option.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gsptype1.c<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-14 11:45:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=316c27810d36e234fa4b254765e35268cfadbc27">316c27810d36e234fa4b254765e35268cfadbc27</a>
<blockquote>
<p>
    Remove some debugging code<br>
<br>
    left in accidentally.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 16:10:03 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e5508fa002678eff5012ce09621d2b94c66e55a5">e5508fa002678eff5012ce09621d2b94c66e55a5</a>
<blockquote>
<p>
    Allow opt out of GNU make feature.<br>
<br>
    As we currently only use one GNU make only feature, allow the user<br>
    to opt out of it at configure time with &quot;--without-gnu-make&quot;.<br>
<br>
    Tested with Sun make and Sun dmake.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 18:44:14 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da6307c97ac317a41e518c1db659a9dd88188669">da6307c97ac317a41e518c1db659a9dd88188669</a>
<blockquote>
<p>
    Fix pthreads error handling mistake.<br>
<br>
    This bug was inherited from the mupdf example code I stole it from.<br>
    It seems that pthreads signals errors as non zero, not negative.<br>
<br>
gs/psi/apitest.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 16:56:09 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=776fe65eb131dd05728d8a448b6e4ce8dea5a9e0">776fe65eb131dd05728d8a448b6e4ce8dea5a9e0</a>
<blockquote>
<p>
    Document GS_THREADSAFE option<br>
<br>
gs/doc/API.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 15:44:23 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e4e84ee2f724710d3a34119c13a621bd32c283d2">e4e84ee2f724710d3a34119c13a621bd32c283d2</a>
<blockquote>
<p>
    Bug 693501: have configure detect and handle memalign<br>
<br>
    OpenJPEG uses memalign, if available, but has a rather poor test for it being<br>
    available.<br>
<br>
    This change has configure check for memalign, and augment the compiler command<br>
    line to replace memalign with a normal malloc for the OpenJPEG code.<br>
<br>
    So, several BSD variants, AIX etc should now build okay.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-13 14:59:19 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bbc2e3b761fd58e1cfe155840c0b948e71c5f37d">bbc2e3b761fd58e1cfe155840c0b948e71c5f37d</a>
<blockquote>
<p>
    Fix the SHARE_ZLIB build.<br>
<br>
    Add an EXTRALIBS variable for the aux programs (AUXEXTRALIBS) so that<br>
    the &quot;-l&quot; directives get included, and in the correct position on the<br>
    compiler/linker command line.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/unix-aux.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-12 10:23:27 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee7fdd12e17fad500202234e04035d85fb70ebd0">ee7fdd12e17fad500202234e04035d85fb70ebd0</a>
<blockquote>
<p>
    Perform range restriction after tint transform of separation color.<br>
<br>
    Fixes bug 693497.    Thanks to Alex for solving the issue before I even had a look at it.<br>
<br>
gs/base/gscsepr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-09 09:48:14 -0800
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=363443d8b2e8373541a886ed16ad281bfd6d31f4">363443d8b2e8373541a886ed16ad281bfd6d31f4</a>
<blockquote>
<p>
    Fix memory leaks from FAPI/FT glyph data buffers.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-08 17:53:34 -0800
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=078175e8df7835ff4df00e53b256a9c7fbd32ed7">078175e8df7835ff4df00e53b256a9c7fbd32ed7</a>
<blockquote>
<p>
    Fix pl_fapi_passfont() return code.<br>
<br>
    For now we want to fall back to the AFS code if FAPI can't handle a font.<br>
<br>
    No cluster differences.<br>
<br>
pl/plfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-08 22:29:57 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a8e20d4064e3df5fbb347a0cc8176635ce842e33">a8e20d4064e3df5fbb347a0cc8176635ce842e33</a>
<blockquote>
<p>
    Fix ARCH_SIZEOF_GX_COLOR_INDEX that mistakenly got committed in git-confusion.<br>
<br>
    ARCH_SIZEOF_COLOR_INDEX was in a local branch that got had the problem and<br>
    got pushed when trying to work from my confused git repo.<br>
<br>
gs/base/gxclutil.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-08 14:46:27 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9305f19f4ce60e9fbd3e15d1f22ceaa28502f95b">9305f19f4ce60e9fbd3e15d1f22ceaa28502f95b</a>
<blockquote>
<p>
    Get rid of compiler warnings when SIZEOF_GX_COLOR_INDEX is 4.<br>
<br>
gs/base/gxclutil.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-08 10:57:04 -0800
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=024697aa2aec80c2e162a2e7a0707006b418e0e3">024697aa2aec80c2e162a2e7a0707006b418e0e3</a>
<blockquote>
<p>
    Fix a little bitrot in the trace device(s).<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/gdevtrac.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-07 21:07:17 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=482da0636bf70aea3bd44839e27eee650e430982">482da0636bf70aea3bd44839e27eee650e430982</a>
<blockquote>
<p>
    Bug 690778: revert big resource hack.<br>
<br>
    Revert most of the commit 93ffd5c00fef9f616fa6785106935344f6db69b5,<br>
    which worked around 64K limit in resource dictionaries. gs now can<br>
    create big objects directly.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-05 20:36:59 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=01d43e701413c63dc3d7f85b4c5d748b7b7da8c9">01d43e701413c63dc3d7f85b4c5d748b7b7da8c9</a>
<blockquote>
<p>
    Add some missing header dependencies.<br>
<br>
    No cluster differences.<br>
<br>
pl/pl.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-05 19:32:45 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0e107d4c37b14c21f5d855b70443873e9e9e9a8e">0e107d4c37b14c21f5d855b70443873e9e9e9a8e</a>
<blockquote>
<p>
    Make MAX_TOKEN big enough for large paths<br>
<br>
    Recommended by Nelson Beebe - his work reviewed a large number of common (and<br>
    not so common) environments, and the largest allowable &quot;monolithic&quot; path is<br>
    4096 characters, so I've made MAX_TOKEN that size.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/genconf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-05 12:44:38 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49571b9821b825cafd9691a7d25dfdeebbf9dd7d">49571b9821b825cafd9691a7d25dfdeebbf9dd7d</a>
<blockquote>
<p>
    Various fixes for FAPI/UFST.<br>
<br>
    Allow the &quot;old school&quot;, non-FAPI PCL/UFST build to continue to work.<br>
<br>
    Add support for UFST 5.x with FAPI.<br>
<br>
    For XL format downloaded TTFs, disable hinting.<br>
<br>
    This causes differences in ~161 cluster PCL test files - that is, files that<br>
    have XL format downloaded Truetype fonts in them.<br>
<br>
config.mak.in<br>
configure.ac<br>
gs/base/configure.ac<br>
gs/base/fapi_ft.c<br>
gs/base/fapiufst.c<br>
gs/base/gxfapi.c<br>
gs/base/gxfapiu.c<br>
gs/psi/zfapi.c<br>
main/pcl6_gcc.mak<br>
pl/pl.mak<br>
pl/plfapi.c<br>
pl/plftable.h<br>
pl/pllfont.c<br>
pl/plulfont.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-04 08:39:14 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=59d840fc9bdcf7d7ebb03d4d2d3f1e4d5d927d14">59d840fc9bdcf7d7ebb03d4d2d3f1e4d5d927d14</a>
<blockquote>
<p>
    Bug 693479: add missing CID to glyph index step<br>
<br>
    For TTF CIDFonts loaded from disk (usually as a substitute), and using an<br>
    Identity ordering, there was a missing step to get from the CID to the TTF<br>
    GID. This caused problems when a PDF included a non-identity CIDToGIDMap.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-03 17:32:56 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5b4cea1173891c7c7252eb790af8357c9065a5ce">5b4cea1173891c7c7252eb790af8357c9065a5ce</a>
<blockquote>
<p>
    pdfwrite - improve locaFormat fix<br>
<br>
    commit 4d20aa6061c6bc802c1ff8e031cfb434dd7fd490 sets the top byte of the<br>
    locaFormat in the HEAD table to be the same as 'indexToLocFormat. It<br>
    should actually always be 0, fixed here.<br>
<br>
gs/base/gdevpsft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-03 12:10:12 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d20aa6061c6bc802c1ff8e031cfb434dd7fd490">4d20aa6061c6bc802c1ff8e031cfb434dd7fd490</a>
<blockquote>
<p>
    pdfwrite - fix incorrect TrueType locaFormat.<br>
<br>
    Some TrueType fonts have the locaFormat specified incorrectly in little<br>
    endian format. Our code always writes short loca entries, and sets the<br>
    low order byte of the locaFormat to 0 (short entries).<br>
<br>
    It wasn't setting the high order byte, because it should never be<br>
    anything other than 0. However these incorrect fonts set the high order<br>
    byte instead of the low order. It seems TrueType consumers treat the format<br>
    as 0 or NOT 0 rather than chekcing the value, which meant we were leaving<br>
    the format incorrectly set.<br>
<br>
    This simple patch sets both bytes of the format in the HEAD table and fixes<br>
    the problem.<br>
<br>
    Expected differences<br>
    Bug691850.pdf and Bug691035b.pdf show significant progressions<br>
<br>
gs/base/gdevpsft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-12-01 09:44:56 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a4439baee68c440da7164daf55de04a4d48609a">3a4439baee68c440da7164daf55de04a4d48609a</a>
<blockquote>
<p>
    pdfwrite - fix bug in commit a3d00daf5f9abb1209cb750a95e23bc6951c1c63<br>
<br>
    missed an entry in the PDFDocEncoding lookup table, also fixed a minor<br>
    error message and corrected an index.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdfe.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 17:03:02 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ebecfe095e4585523fcbddbe1785473e0374b54">8ebecfe095e4585523fcbddbe1785473e0374b54</a>
<blockquote>
<p>
    Fix so that the blackpoint is set to a proper enumerated value<br>
<br>
    Fixes bug 692530<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevrinkj.c<br>
gs/base/gdevxcf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 16:51:48 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c8fc6c53f0bce4be54c016ddd78f6cfe4d44419a">c8fc6c53f0bce4be54c016ddd78f6cfe4d44419a</a>
<blockquote>
<p>
    Avoid inserting the ICC profile into the halftoned TIFF output files.<br>
<br>
    Fixes bug 693060<br>
<br>
gs/base/gdevtifs.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 17:04:59 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0bc3c907260275bf96a4d3e894e4a8146ddbb856">0bc3c907260275bf96a4d3e894e4a8146ddbb856</a>
<blockquote>
<p>
    Remove .DS_Store files from lcms2 directory<br>
<br>
    These seem to upset at least one unzipping utility on the Mac, and<br>
    they serve no useful purpose for us.<br>
<br>
gs/lcms2/Projects/mac/LittleCMS/.DS_Store<br>
gs/lcms2/Projects/mac/LittleCMS/._.DS_Store<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 16:02:22 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a3d00daf5f9abb1209cb750a95e23bc6951c1c63">a3d00daf5f9abb1209cb750a95e23bc6951c1c63</a>
<blockquote>
<p>
    pdfwrite - convert non-UTF-16BE doc info to UTF-8 assuming PDFDocEncoding<br>
<br>
    Bug #693477 &quot;Encoding of pdf metadata do not comply with pdf standard&quot;<br>
<br>
    When processing Document info there is a pdfwrite parameter 'PDFDSCEncoding'<br>
    which, if present, is used to process the string into ASCII. However, if<br>
    this parameter is not supplied, we don't re-encode the string at all. Since<br>
    the XML must be UTF-8, this is potentially a problem.<br>
<br>
    Since we cannot know the source of the docinfo string (existing PDF, DOCINFO<br>
    pdfmark, or DSC comments in PostScript) we cannot make any judgement about<br>
    the encoding of the string data in the absence of PDFDSCENcoding. So we<br>
    choose to assume that its encoded using PDFDocEncoding if it does not<br>
    have a UTF-16BE BOM (which is the only other format permitted).<br>
<br>
    This should at least mean that the Docinfo and XML match and are legal.<br>
<br>
    No differences expected, the cluster doesn't check the XML<br>
<br>
gs/base/gdevpdfe.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 07:55:46 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb97932923e94ef0806909718da693bf7655631f">bb97932923e94ef0806909718da693bf7655631f</a>
<blockquote>
<p>
    Fix 693269 - CCITT raster not using monochrome palette.<br>
<br>
    The RTL CCITT raster compression modes always use monochrome colors (a<br>
    palette with 1 bit per index).  In our code this is somewhat awkward<br>
    requiring rebuilding the PCL raster and part of the graphics library<br>
    state as the compression mode can be changed after raster mode has<br>
    been entered and initialized with a color palette.<br>
<br>
pcl/pccid.c<br>
pcl/pccid.h<br>
pcl/pcpalet.h<br>
pcl/rtgmode.c<br>
pcl/rtgmode.h<br>
pcl/rtrstst.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-30 07:46:01 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df30839b4058ba92dd85883516258ce08eaca628">df30839b4058ba92dd85883516258ce08eaca628</a>
<blockquote>
<p>
    Bug 693437 - Improves PCL font selection.<br>
<br>
    We do not have perfect emulation of PCL font selection by attribute,<br>
    but this change does move us closer to the HP behavior.  In particular<br>
    any font family attribute command (bold, italic etc.) cancels a<br>
    pending font selection by id, (i.e. the next selection will not use<br>
    the font id as a selection criteria).<br>
<br>
pcl/pcfont.c<br>
pcl/pcfont.h<br>
pcl/pcfontpg.c<br>
pcl/pcfsel.c<br>
pcl/pcsfont.c<br>
pcl/pcsymbol.c<br>
pcl/pctext.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-29 09:00:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=64ada98bdec11021ada90ddd21b8d9cdd9ee61a2">64ada98bdec11021ada90ddd21b8d9cdd9ee61a2</a>
<blockquote>
<p>
    Make genconf's token buffer big enough for long paths<br>
<br>
    Thanks to Chen Qi ( Qi.Chen@windriver.com ) for pointing out the problem.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/genconf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-29 08:05:34 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e02795887e3dd4fb75aaa90dc0bcf6d861246f4c">e02795887e3dd4fb75aaa90dc0bcf6d861246f4c</a>
<blockquote>
<p>
    Bug 693474: Make ps2pdf14 script executable<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/lib/ps2pdf14<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-29 01:55:36 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9e89056ce7f1998ac22cb274fd0ed29458ee5d35">9e89056ce7f1998ac22cb274fd0ed29458ee5d35</a>
<blockquote>
<p>
    Bug 693476: don't dump producer info for valid files<br>
<br>
    Don't dump producer info when the file is valid but GS cannot<br>
    process it for some reason. For instance, when the password is<br>
    missing or invalid.<br>
<br>
gs/Resource/Init/pdf_sec.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-27 11:57:49 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b59e4d156deae8afd6c8eecad3ce8b83b2d7664">9b59e4d156deae8afd6c8eecad3ce8b83b2d7664</a>
<blockquote>
<p>
    Bug 693450: Add platform-dependent validation for file name characters.<br>
<br>
    Add a new function to the portability layer that verifies, whether<br>
    a given character can be used in a file name. Convert separation<br>
    names to valid file names.<br>
<br>
gs/base/devs.mak<br>
gs/base/gdevtsep.c<br>
gs/base/gp.h<br>
gs/base/gp_dosfs.c<br>
gs/base/gp_macio.c<br>
gs/base/gp_ntfs.c<br>
gs/base/gp_os2fs.c<br>
gs/base/gp_unifn.c<br>
gs/base/gp_vms.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-27 01:04:52 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f27a0b8a47f0faadb6797132d6b9ef00a1823529">f27a0b8a47f0faadb6797132d6b9ef00a1823529</a>
<blockquote>
<p>
    Make PDF path construction operators more robust.<br>
<br>
    Ignore the path construction operator that fails for some reason,<br>
    and continue. Also correct the pdfemptycount value during form<br>
    processing to match reality.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-21 10:15:49 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6f18589768e763238b5c45e46ba55dfef7dd59ae">6f18589768e763238b5c45e46ba55dfef7dd59ae</a>
<blockquote>
<p>
    pdfwrite - properly set the PreserveSMask parameter for non-transparent output<br>
<br>
    The PDF interpreter has historically handled SMasks by passing them directly to<br>
    the device, when the device is pdfwrite. This was altered to use a device<br>
    parameter rather than checking the3 device name.<br>
<br>
    This did not alter the functionality, which has always bee incorrect when<br>
    pdfwrite is not preserving transparency. We now alter the value of the<br>
    device parameter if we are instead rendering the transparent content to an<br>
    image. SMasks should now behave correctly when using PDF/A-1, PDF/X or<br>
    when setting the CompatibilityLevel to less than 1.4.<br>
<br>
    No differences expected as this is not cluster tested.<br>
<br>
gs/base/gdevpdfp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-20 17:19:44 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=481e7652bffc369fd0b7bc5b52aebde2328c4c5d">481e7652bffc369fd0b7bc5b52aebde2328c4c5d</a>
<blockquote>
<p>
    Don't use return_error() for something not really an error<br>
<br>
    Quietens down the -Z# output.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-19 19:38:59 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=123c7fbf7f31e42dff306a6d0b993224387b1b3c">123c7fbf7f31e42dff306a6d0b993224387b1b3c</a>
<blockquote>
<p>
    pdfwrite - further TrueType composite glyph improvement. Bug #693444<br>
<br>
    When we encounter a TrueType composite glyph, we add the 2 component glyphs<br>
    to the table of names, so that we generate a correct CMAP subtable in the<br>
    embedded subset font.<br>
<br>
    However, the name is based on the GID of the glyph, and if the GID happens<br>
    match a name in the font Encoding (type 42 font) *and* we use the glyph<br>
    which really corresponds to that name (but obviously has a different GID)<br>
    then we would end up with the wrong CMAP generated.<br>
<br>
    By not removing the GS_MIN_GLYPH_INDEX bias we create a new name which is<br>
    numeric and based on the GID. This guarantees no name collisions.<br>
<br>
    This leads to a regression in an XPS test file, but I think it is of the<br>
    'wrong before, differently wrong now' category and propose to ignore it on<br>
    that basis. (its a change in spacing, which cannot be directly affected by<br>
    this change.<br>
<br>
gs/base/gxfcopy.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-18 09:51:34 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=787b044f67826cfc0c8b9fda01728cb602b4c212">787b044f67826cfc0c8b9fda01728cb602b4c212</a>
<blockquote>
<p>
    Bug #693111 fix refinement.<br>
<br>
    Refine the fix 8bec29de to add a configuration option so individual<br>
    commands can be selected for the unusual behavior of being ignored in<br>
    raster mode.  I don't think we have a solid understanding of this<br>
    problem and this makes the fix significantly less likely to result in<br>
    a regression.<br>
<br>
pcl/pcommand.h<br>
pcl/pcparse.c<br>
pcl/pcpatrn.c<br>
pcl/rtgmode.c<br>
pcl/rtgmode.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-17 10:57:53 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8bec29de4c0b67873d1e33e77296eed410be172e">8bec29de4c0b67873d1e33e77296eed410be172e</a>
<blockquote>
<p>
    Fixes Bug 693311 - Black rectangle output instead of expected image.<br>
<br>
    Normally if the PCL interpreter receives a command while processing<br>
    raster or an image, the command is ignored and raster is shut down.<br>
    These so called &quot;locked out&quot; commands do not close out the raster on<br>
    plotters using the HPGL/2-RTL emulation.<br>
<br>
pcl/pcparse.c<br>
pcl/rtgmode.c<br>
pcl/rtgmode.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-16 14:56:12 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a00be33f0127db231ca42f97e1f8b6ca4f69ecf">6a00be33f0127db231ca42f97e1f8b6ca4f69ecf</a>
<blockquote>
<p>
    Bug 693451: avoid notdef &quot;special casing&quot; for cid fonts.<br>
<br>
    Bug692320.pdf should display as before the FAPI work.<br>
<br>
gs/base/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-14 16:52:27 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cb6ee748223ec3373151047d921d75bbeffc4e9">9cb6ee748223ec3373151047d921d75bbeffc4e9</a>
<blockquote>
<p>
    Fix for issues with icc output intent<br>
<br>
    Proper rendering of the output rendering intent Ghent test files to RGB based devices require that<br>
    the output intent profile is used as a proofing profile.  Unfortunately littleCMS does not allow one<br>
    to specify different rendering intents to use when connecting a group of profiles together.  This<br>
    is needed to render these files correctly.   The solution was to create a device link profile for the<br>
    first rendering intent (e.g perceptual) when going from source to proof.  Then the remainder of the<br>
    transforms are handled in a relative colorimetric manner from proof to destination and possibly through<br>
    the device's link profile.<br>
<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_lcms2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-13 23:20:39 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ebb6896c6f7ba59a6e7dec1267a65a66f817f1c">8ebb6896c6f7ba59a6e7dec1267a65a66f817f1c</a>
<blockquote>
<p>
    Use consistent ctm scale for metrics retrieval.<br>
<br>
    This minimises differences at different resolutions, and uses a scale chosen to<br>
    minimise rounding errors.<br>
<br>
    Also, fix handling of missing glyph in the glyph metrics retrieval function.<br>
<br>
    Lots of cluster differences in PCL/PXL tests.<br>
<br>
pl/plfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-13 23:18:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a372bbae80c5b14cf68d2893db790acfef4a4f86">a372bbae80c5b14cf68d2893db790acfef4a4f86</a>
<blockquote>
<p>
    Remove (temporarily?) the Makefile exclusion.<br>
<br>
    We can't simply exclude Makefile, since the GhostPDL top Makefile is not a derived file.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/localcluster/clusterpush.pl<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-13 18:02:39 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e05c7a541280979e0884f8ea1c1cee6eba8f229">1e05c7a541280979e0884f8ea1c1cee6eba8f229</a>
<blockquote>
<p>
    Fix the language_switch Windows build with new fapi code.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
language_switch/pspcl6_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-13 17:01:53 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e1af42f1cca2cfb1f3f0c2d9e59e46bb8697fa27">e1af42f1cca2cfb1f3f0c2d9e59e46bb8697fa27</a>
<blockquote>
<p>
    pdfwrite - amended white list for font DRM<br>
<br>
    Copied again from teh Adobe web site, but mergin with the old list rather<br>
    than replacing. It looks like Adobe have changed some of their font names.<br>
<br>
    This shows a difference in fonts.pdf, beacuse we are now permitted to embed<br>
    Mathematical Pi. THis is a progression<br>
<br>
gs/base/whitelst.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-13 12:59:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c54b37f8a5ad111dbfad499ba1c642ba404f5e93">c54b37f8a5ad111dbfad499ba1c642ba404f5e93</a>
<blockquote>
<p>
    Fix a couple of Windows build issues with the new fapi code<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/winlib.mak<br>
main/pcl6_msvc.mak<br>
xps/xps_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-01 15:44:11 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58937f6debfbed7675a0ce5cb8d0aa629e3fa7b8">58937f6debfbed7675a0ce5cb8d0aa629e3fa7b8</a>
<blockquote>
<p>
    Extend/modify FAPI for use by PDLs other than PS/PDF.<br>
<br>
    All languages take a -dDisableFAPI option which reverts to the AFS code.<br>
<br>
    On Unuix type systems<br>
    ./configure --disable-fapi<br>
<br>
    and on Windows, adding &quot;FT_BRIDGE=0&quot;<br>
<br>
    create builds without the FAPI font handling.<br>
<br>
    Both of these will be removed as the FAPI code matures.<br>
<br>
    Move Font API from psi into base.<br>
<br>
    Split the FAPI functions into the interpreter dependent ones, and the &quot;core&quot;<br>
    functions. Move the core functions into the graphics library.<br>
<br>
    Change fapi.dev to fapi_ps.dev<br>
<br>
    Since the old fapi.dev is now split into core and PS dependent parts, the<br>
    old fapi.dev gets renamed as fapi_ps.dev<br>
<br>
    Basic TrueType support thru FAPI for pcl and pxl.<br>
<br>
    Doesn't include artificial boldening.<br>
<br>
    Basic FAPI functions working with XPS interpreter.<br>
<br>
    (Mostly) Make PCL/UFST work through gs_fapi API<br>
<br>
    Bug 693188: don't skip glyphs with degenerate matrices<br>
<br>
    In commit 752397ab, the fix for Bug 692263 was to skip over glyphs when the<br>
    matrix in force for the glyph had a zero scale in either dimension.<br>
<br>
    It seems that this approach had potentially unfavourable side effects in the<br>
    glyph cache.<br>
<br>
    So, when we encounter a degenerate matrix rendering a glyph, we now force a<br>
    minimal, non-zero scale before attempting to render the glyph. This placates<br>
    the glyph cache.<br>
<br>
    Cluster testing shows (tiny) progressions in Bug689006.pdf, Bug690179.pdf,<br>
    and Bug692634.ps, and pixel differences, not identifiable as progressions<br>
    or regressions in Bug690497.pdf and 12-07C.PS.<br>
<br>
    Conflicts:<br>
<br>
    	gs/psi/fapiufst.c<br>
    	gs/psi/ifapi.h<br>
    	gs/psi/zfapi.c<br>
<br>
    Revise gs_fapi_available and zFAPIavailable so they can check for<br>
    a specific fapi server being available (as well as just fapi itself being<br>
    available.<br>
<br>
    Tidy up header includes, and header dependencies.<br>
<br>
    Typos, warnings and dependency mistakes.<br>
<br>
    Handle FAPI having no servers gracefully in PCL and XPS<br>
<br>
    Use existing API to retrieve glyph metrics.<br>
<br>
    Fix some PCL/PXL spacing problems.<br>
<br>
    Improve handling of notdefs in PCL/PXL<br>
<br>
    Some reformatting.<br>
<br>
    Update fapi call in xps and fix some merge mistakes.<br>
<br>
    Change gs_fapi_do_char() parameters to gs_glyph and gs_char types.<br>
<br>
    Handle GS_NO_CHAR value better.<br>
<br>
    Remove deprecated char_code entry<br>
<br>
    Provide method for client to request ttf cmap in fapi.<br>
<br>
    Skip &quot;unencodable&quot; glyphs (that is character codes whose &quot;decoding&quot; results<br>
    in a gs_no_glyph glyph value).<br>
<br>
    Fix (finally, I think) the PCL notdef problems, and PCL text orientation.<br>
<br>
    Also, a GL spacing problem. Amend the Postscript size to work with these<br>
    changes.<br>
<br>
    FAPI API and warnings clean up.<br>
<br>
    Identify glyph index or otherwise....<br>
<br>
    ...in the FAPI PS world.<br>
<br>
    fix a missing dependency<br>
<br>
    Include stdint_.h in gxfapi.h....<br>
<br>
    so int64_t is available. Add dependency.<br>
<br>
    Fix typo in dependency.<br>
<br>
    Changes to build gs_fapi on Windows.<br>
<br>
    Fix a typo<br>
<br>
    &lt;sigh&gt; another &quot;notdef&quot; handling revision<br>
<br>
    Add PCL/XL glyph boldening (bitmap smearing) to FAPI.<br>
<br>
    Remove some debug code accidentally left in.<br>
<br>
    Provide a &quot;-dDisableFAPI&quot; command line option for pcl/pxl/xps.<br>
<br>
    It's added in a very noddy way for two reasons: it needs acted upon<br>
    before the interpreter is initialised, and second to make it more<br>
    obvious to remove when we've gained confidence in the new fapi code.<br>
<br>
    Split fapi server builds out of lib.mak and into separate makefiles.<br>
<br>
    Add one commercial server build to the Ghostscript/GhostPDL build system, so<br>
    it no longer needs built separately.<br>
<br>
    Also fix a couple of dependency typos/errors.<br>
<br>
    Some tweaks to get the build changes working on Windows<br>
<br>
    Delete makefile....<br>
<br>
    Revise build changes.<br>
<br>
    Cluster differences in every PCL/PXL/XPS file with text display in a Truetype/Opentype font (including CFF).<br>
<br>
common/msvc_top.mak<br>
common/ugcc_top.mak<br>
config.mak.in<br>
configure.ac<br>
gs/Resource/Init/gs_fapi.ps<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/fapi_bs.mak<br>
gs/base/fapi_ft.c<br>
gs/base/fapibstm.c<br>
gs/base/fapiufst.c<br>
gs/base/gconf.c<br>
gs/base/genconf.c<br>
gs/base/gscdefs.h<br>
gs/base/gsinit.c<br>
gs/base/gslibctx.h<br>
gs/base/gxfapi.c<br>
gs/base/gxfapi.h<br>
gs/base/gxfapiu.c<br>
gs/base/gxfapiu.h<br>
gs/base/gxfont.h<br>
gs/base/lib.mak<br>
gs/base/stub.mak<br>
gs/base/winlib.mak<br>
gs/base/wrfont.c<br>
gs/base/wrfont.h<br>
gs/base/write_t1.c<br>
gs/base/write_t1.h<br>
gs/base/write_t2.c<br>
gs/base/write_t2.h<br>
gs/psi/fapi_ft.c<br>
gs/psi/fapibstm.c<br>
gs/psi/fapiufst.c<br>
gs/psi/ifapi.h<br>
gs/psi/int.mak<br>
gs/psi/msvc.mak<br>
gs/psi/wrfont.c<br>
gs/psi/wrfont.h<br>
gs/psi/write_t1.c<br>
gs/psi/write_t1.h<br>
gs/psi/write_t2.c<br>
gs/psi/write_t2.h<br>
gs/psi/zfapi.c<br>
language_switch/pspcl6_gcc.mak<br>
main/pcl6_msvc.mak<br>
pcl/pcfontpg.c<br>
pcl/pcfsel.c<br>
pcl/pcl.mak<br>
pcl/pcsfont.c<br>
pl/pl.mak<br>
pl/plchar.c<br>
pl/plchar.h<br>
pl/plfapi.c<br>
pl/plfapi.h<br>
pl/plfont.c<br>
pl/plfont.h<br>
pl/plftable.c<br>
pl/plftable.h<br>
pl/pllfont.c<br>
pl/pllfont.h<br>
pl/plmain.c<br>
pl/pluchar.c<br>
pl/plufont.c<br>
pl/plufstlp.c<br>
pl/plufstlp.h<br>
pl/plufstlp1.c<br>
pl/plulfont.c<br>
pxl/pxfont.c<br>
pxl/pxl.mak<br>
xps/ghostxps.h<br>
xps/xps.mak<br>
xps/xps_msvc.mak<br>
xps/xpscff.c<br>
xps/xpsfapi.c<br>
xps/xpsfapi.h<br>
xps/xpsttf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 20:05:31 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a971121e9e50c672908f1b3185f42d497adf0b02">a971121e9e50c672908f1b3185f42d497adf0b02</a>
<blockquote>
<p>
    New PCL-XL paper sizes fixing part of bug 693399.<br>
<br>
    Thanks to Hin-Tak Leung for providing these new non standard paper<br>
    sizes to support Ricoh specific PCL-XL.<br>
<br>
gs/base/gdevpx.c<br>
gs/base/gdevpxen.h<br>
gs/base/gdevpxut.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 18:24:08 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b2796b4d588d83730c1d97c7fc035454cfe8157a">b2796b4d588d83730c1d97c7fc035454cfe8157a</a>
<blockquote>
<p>
    Fix part of bug #693415.  HPGL's command to create a sub-polygon<br>
    closed paths unconditionally.<br>
<br>
    Thanks to Norbert Janssen for providing a fix to conditionally close<br>
    the path only if the current pen is down.  The fix revealed another<br>
    problem where PCL was not creating a new sub-path when the current pen<br>
    was up and drawing a circle (CI).  This is remedied with issuing a<br>
    &quot;moveto&quot; not &quot;gapto&quot; when starting the circle.  Currently the only<br>
    means of doing a moveto explicitly is to temporarily disable the &quot;hpgl<br>
    path mode&quot; while calling the gs_moveto() procedure.  This arrangement<br>
    will likely be improved in the future by adding a gapto function to<br>
    the graphics library language interface.<br>
<br>
    These changes result in fixing the original source problem and several<br>
    improvements in the PCL CET.  A few new minor discrepancies<br>
    (regressions) were found in the CET's and another test (all documented<br>
    in the bug), these were either inconsequential or deferrable and we<br>
    feel this change is substantial progress and should not be held up for<br>
    the other issues to be addressed.<br>
<br>
pcl/pgdraw.c<br>
pcl/pgpoly.c<br>
pcl/pgvector.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 10:43:00 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=586d4a1669b0be9c05f7fcc45cbfc72a0dde5026">586d4a1669b0be9c05f7fcc45cbfc72a0dde5026</a>
<blockquote>
<p>
    Present clusterpush.pl from pushing Makefile(s).<br>
<br>
gs/toolbin/localcluster/clusterpush.pl<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 13:23:48 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2c38e570321bb56e8c2d2a897502d207028e1c83">2c38e570321bb56e8c2d2a897502d207028e1c83</a>
<blockquote>
<p>
    Bug 693436: Resolve issues with FTS and 64 bit PS ints<br>
<br>
    There was a number parsing case I had missed in special casing CPSI_mode for<br>
    QL test compatibility.<br>
<br>
    Also, there were some issues with gs_cet.ps - some of the objects it replaced were left<br>
    writeable, and/or were off the wrong type.<br>
<br>
    Cluster differences: we should now be able to pass all the FTS tests by using gs_cet.ps.<br>
<br>
gs/Resource/Init/gs_cet.ps<br>
gs/psi/iscannum.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 13:23:09 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e6759327b6b8338491bf86ac3aa0179f47dc047d">e6759327b6b8338491bf86ac3aa0179f47dc047d</a>
<blockquote>
<p>
    pdfwrite - revert white list change which seemed to cause errors<br>
<br>
gs/base/whitelst.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-12 11:23:50 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=24de0d2174103bb98d0c3ffbdf09c1081bbc98ef">24de0d2174103bb98d0c3ffbdf09c1081bbc98ef</a>
<blockquote>
<p>
    pdfwrite - update the 'white list' of fonts<br>
<br>
    Some TrueType fonts have unintentional DRM applied, this commit updates<br>
    the Adobe 'white list' of fonts which may be embedded, even if the DRM<br>
    flags say otherwise.<br>
<br>
    No differences expected<br>
<br>
gs/base/whitelst.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-11 09:33:12 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39e56129466aa8d0b84c8c1267dbaef9dcefd2bd">39e56129466aa8d0b84c8c1267dbaef9dcefd2bd</a>
<blockquote>
<p>
    Fixes 693399, PXL file errors out when color palette is too large.<br>
<br>
    The color palette should be truncated upon overflow, previously we<br>
    produced an error.  Thanks to Hin-Tak Leung for the analysis and fix.<br>
<br>
pxl/pxink.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-11 08:41:03 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=774e27302ec3b228f6cef6abf04c18066edd5525">774e27302ec3b228f6cef6abf04c18066edd5525</a>
<blockquote>
<p>
    Hin-Tak Leung's fix for bug 693413 - large output file size due to<br>
    images being decimated to rectangles.<br>
<br>
    The fix allows any orthogonal image, given the color information can<br>
    be properly represented in a PXL, to be converted directly to a PXL<br>
    image.  The change has not been cluster tested, the PXL device is<br>
    tested in the overnight testing and there is no practical means to<br>
    test the device's code change with all test files locally, so the<br>
    commit also serves as a test submission.<br>
<br>
gs/base/gdevpx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-09 12:34:01 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a8de3e6dc0152b137c38078d80a3c40517095f91">a8de3e6dc0152b137c38078d80a3c40517095f91</a>
<blockquote>
<p>
    Fixes 693385 Font id selection wrong when using SI (Shift In) and SO<br>
    (Shift out) commands and inappropriate switch to ID in font selection.<br>
<br>
    The SO and SI were decaching the current font table, effectively<br>
    changing font ID selection to family selection.  2 additional and<br>
    closely related changes were provided by Norbert Janssen: the selected<br>
    by id state was being disabled during font selection even if font<br>
    selection had no effect and upon selection be id we were decaching<br>
    both font tables.<br>
<br>
    All of these changes are certainly in the right direction but seem to<br>
    have unmasked some obscure problems which will be addressed in a<br>
    separate bug.  Here are the expected regression test files for this<br>
    commit:<br>
<br>
    tests_private/pcl/pcl5ccet/18-20.BIN<br>
    tests_private/pcl/pcl5ccet/19-05.BIN<br>
    tests_private/pcl/pcl5ccet/19-11.BIN<br>
    tests_private/pcl/pcl5ccet/19-12.BIN<br>
    tests_private/pcl/pcl5ccet/19-13.BIN<br>
    tests_private/pcl/pcl5ccet/19-14.BIN<br>
    tests_private/pcl/pcl5efts/fts.0280<br>
    tests_private/pcl/pcl5efts/fts.0341<br>
    tests_private/pcl/pcl5efts/fts.0380<br>
<br>
pcl/pcfont.c<br>
pcl/pcfsel.c<br>
pcl/pctext.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-06 15:51:23 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a0a4fd51a9c17a1b17d0cc9eccfef51e96ea8d04">a0a4fd51a9c17a1b17d0cc9eccfef51e96ea8d04</a>
<blockquote>
<p>
    Bug 693430: missing &quot;fallback&quot; for DecodeParams entry<br>
<br>
    In a ResuableStreamDecode filter with an array of subfilters (/Filter entry<br>
    in the parameter dictionary). If teh DecodeParams array also exists, and has<br>
    one or more entries set to &quot;null&quot;, we weren't pushing an empty dictionary<br>
    onto the stack for the subsequent call to the filter operator.<br>
<br>
    The equivalent code for a totally absent DecodeParams array was already<br>
    correct.<br>
<br>
    No cluster differences.<br>
<br>
gs/Resource/Init/gs_frsd.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-05 21:30:48 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=048b221e76fba80663f073f8312802bcdf168c52">048b221e76fba80663f073f8312802bcdf168c52</a>
<blockquote>
<p>
    Bug 693166: Speed images through the clist.<br>
<br>
    In investigating bug 693166 Ray spotted that the calculation of which<br>
    bands were touched by images was slack in the presence of a clipping<br>
    path - he proposed a simple patch to fix this.<br>
<br>
    Unfortunately it had a knock on effect where vertical offsets could be<br>
    introduced into the topmost band. This is fixed here by a second small<br>
    change in image_band_box.<br>
<br>
    Cluster testing shows 10 small changes, all well within the usual<br>
    clist differences.<br>
<br>
gs/base/gxclimag.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-05 09:16:10 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=782d5c4083217d7225a843bf6bad254dca4c2e8c">782d5c4083217d7225a843bf6bad254dca4c2e8c</a>
<blockquote>
<p>
    Fixes bug #693429 process raw HPGL files.<br>
<br>
    The PCL parser will now recognize HPGL files if the files start with<br>
    the commands &quot;IN&quot; or &quot;DF&quot; and if the parser is using the RTL<br>
    personality.<br>
<br>
pcl/pcl.mak<br>
pcl/pcparse.c<br>
pcl/rtmisc.c<br>
pcl/rtmisc.h<br>
pcl6/pcl6.xcodeproj/project.pbxproj<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-02 22:55:24 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=119f9ced7dc9be5f412ed587381627babb29d3ed">119f9ced7dc9be5f412ed587381627babb29d3ed</a>
<blockquote>
<p>
    Fix for missing code to grab the device profile.  Thanks to sags for finding this.<br>
<br>
gs/base/gsicc_cache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-01 16:05:13 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0cefc049bdd1eee78f14c97129627af766e022c9">0cefc049bdd1eee78f14c97129627af766e022c9</a>
<blockquote>
<p>
    Fix tiffsep and introduce tiffscaled4 device.<br>
<br>
    The tiffsep device was supposed to be able to be called with<br>
    -dBitsPerComponent set to 1,2,4 or 8 to allow differing bit<br>
    depths of output. This setting would work for the separation<br>
    planes, but would not produce a composite when bpc was not 8<br>
    due to the code not supporting that.<br>
<br>
    We add code here to generate composites in 1,2 and 4 bit modes<br>
    too, along with some sanity checking of the compression mode.<br>
<br>
    We also add a tiffscaled4 mode where we produce 1bpc cmyk from<br>
    a downscaled dither of 8bpc cmyk.<br>
<br>
gs/base/devs.mak<br>
gs/base/gdevtsep.c<br>
gs/base/gxdownscale.c<br>
gs/base/unixansi.mak<br>
gs/psi/msvc.mak<br>
main/pcl6_gcc.mak<br>
main/pcl6_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-11-01 15:24:04 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b10f8c659ffc643ab71c6180a70da4f39075578">9b10f8c659ffc643ab71c6180a70da4f39075578</a>
<blockquote>
<p>
    pdfwrite/ps2write - enable 64-bit file handling<br>
<br>
    Subsequent to commit c81c8f1b8740c484ec332080b5ce5f718357694d it is now<br>
    possible to have 64-bit offsets returned by stell, and this makeds it possible,<br>
    for the first time, to write PDF files &gt; 4GB.<br>
<br>
    There's a fair amount of reworking in here, but we can now produce very large<br>
    temporary files, and from that produce very large PDF and PostScript output.<br>
<br>
    There are some restrictions; no stream can exceed 2GB and no font can exceed 2GB<br>
<br>
    As might be expected this is *not* well tested as we don't actually have any<br>
    test files which exercise this. I have tested PDF and PostScript file production<br>
    with a single file which produces a 10GB temporary file, a 7 GB PDF file and a 6GB<br>
    PostScript file.<br>
<br>
    The resulting PDF file opens with Adobe Acrobat and can Ghostscript, and the<br>
    PostScript file can be consumed by Adobe Distiller and Ghostscript.<br>
<br>
    Nevertheless, bugs are possible.<br>
<br>
    No differences expected as this is not lcuster tested.<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfb.c<br>
gs/base/gdevpdfo.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdti.c<br>
gs/base/gdevpsf1.c<br>
gs/base/gdevpsf2.c<br>
gs/base/gdevpsft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-29 17:28:05 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84498da1627a85e340c7670b8c7a617e38b9efb7">84498da1627a85e340c7670b8c7a617e38b9efb7</a>
<blockquote>
<p>
    Support PJL language string HP-GL/2.<br>
<br>
    The language string HP-GL/2 now selects the &quot;RTL&quot; mode in PCL.  It<br>
    should also be used to select the language HP-GL/2 upon language<br>
    switch, but only one language string is supported per emulation, and<br>
    the feature is not really needed.  Any HPGL/2 rtl file should select<br>
    the PCL emulation anyway because of the character of the input stream<br>
    and the HP-GL/2 PJL command will select the RTL personality.<br>
<br>
pcl/pctop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-25 11:19:21 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c81c8f1b8740c484ec332080b5ce5f718357694d">c81c8f1b8740c484ec332080b5ce5f718357694d</a>
<blockquote>
<p>
    64 bit stream offsets and 64 bit PS integers objects<br>
<br>
    Revise the stream and &quot;gp_&quot; file APIs to support file sizes &gt;4Gb (on suitable<br>
    systems).<br>
<br>
    I've added a gs_offset_t type which, by default is a 64 bit signed type (this<br>
    matches the standard lib's 64 bit &quot;off_t&quot; type). For ports that may want to<br>
    use an alternative type, define &quot;GS_OFFSET_T&quot; to the desired type on the<br>
    compiler command line.<br>
<br>
    By default, Ghostscript will now use 64 bit integer objects in Postscript. Again,<br>
    for porting ease, one can opt for 32 bit integer objects by defining PSINT32BIT=1<br>
    on the compiler command line.<br>
<br>
    The handling of integer objects in various operators has been &quot;augmented&quot; so that<br>
    when working in &quot;CPSI compatibility mode&quot;, intepreting and manipulating integer<br>
    objects will see them &quot;clamped&quot; to 32 bit signed values. This allows Ghostscript<br>
    to still pass the Quality Logic tests which spuriously rely on 32 bit integer<br>
    objects.<br>
<br>
    There is a minor tweek in the PS interpreter's handling of Truetype fonts (*not*<br>
    Type 42), where the algorithm used to create an XUID relied on 32 bit integers.<br>
<br>
    There is a small performance penalty in this, but my testing suggests that it is<br>
    smaller than the time resolution of our testing capabilities (i.e. there are<br>
    greater variances between test runs than between the 32 and 64 bit objects code).<br>
<br>
    We can now interpret PDF files &gt;4Gb.<br>
<br>
    In addition, the graphics library will now include inttypes.h (in stdint_.h) if<br>
    it is available in order to make the &quot;PRI....&quot; printf and co formatting macros<br>
    available. If inttypes.h is not available, there are fallback definitions of the<br>
    most used of those. These can also be defined on the compiler command line for<br>
    specific ports, if required.<br>
<br>
    A custom &quot;PRI...&quot; macro has been added in the Postscript interpreter,<br>
    &quot;PRIpsint&quot;, which is defined appropriately when integer objects are 64 or<br>
    32 bit.<br>
<br>
    This commit does *not* revise the device API to handle 64 bit integer values<br>
    (in the one case where this is required, we use a string to hold the 64 bit value,<br>
    I suggest continuing this, so the device API remains consistent across ports).<br>
<br>
    I do expect a bug tail with this, as we start to encounter more &gt;4Gb PDFs.<br>
<br>
    Cluster differences are restricted to the 3 QL Postscript test jobs that have<br>
    ended up in comparefiles (and thus are not run with the gs_cet.ps setup).<br>
<br>
config.mak.in<br>
configure.ac<br>
gs/Resource/Init/gs_ttf.ps<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/devs.mak<br>
gs/base/gdevpsf2.c<br>
gs/base/gdevpsft.c<br>
gs/base/gdevtifs.c<br>
gs/base/gp_mswin.c<br>
gs/base/gp_unifs.c<br>
gs/base/gsiorom.c<br>
gs/base/gxclist.c<br>
gs/base/gxclrast.c<br>
gs/base/lib.mak<br>
gs/base/scommon.h<br>
gs/base/sfxfd.c<br>
gs/base/sfxstdio.c<br>
gs/base/std.h<br>
gs/base/stdint_.h<br>
gs/base/stdpre.h<br>
gs/base/stream.c<br>
gs/base/stream.h<br>
gs/base/strmio.c<br>
gs/base/strmio.h<br>
gs/base/tiff.mak<br>
gs/psi/btoken.h<br>
gs/psi/fapi_ft.c<br>
gs/psi/idebug.c<br>
gs/psi/ilocate.c<br>
gs/psi/int.mak<br>
gs/psi/interp.c<br>
gs/psi/iparam.c<br>
gs/psi/iref.h<br>
gs/psi/iscan.c<br>
gs/psi/iscan.h<br>
gs/psi/iscanbin.c<br>
gs/psi/iscannum.c<br>
gs/psi/iutil.c<br>
gs/psi/opextern.h<br>
gs/psi/zarith.c<br>
gs/psi/zfapi.c<br>
gs/psi/zfcid0.c<br>
gs/psi/zfileio.c<br>
gs/psi/zfjpx.c<br>
gs/psi/zfrsd.c<br>
gs/psi/zmisc.c<br>
gs/psi/zrelbit.c<br>
gs/psi/ztype.c<br>
pl/pl.mak<br>
pl/plfont.h<br>
pl/pllfont.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-30 13:05:11 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dfde821467a4770499b52fbfb2c665a74ed379c0">dfde821467a4770499b52fbfb2c665a74ed379c0</a>
<blockquote>
<p>
    Fix silly dependency typo in lib.mak.<br>
<br>
    Thanks to Chris for pointing this out.<br>
<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-29 20:20:22 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa7d7ffcc390b05a8e36b6cf85e4688ae69c2a85">aa7d7ffcc390b05a8e36b6cf85e4688ae69c2a85</a>
<blockquote>
<p>
    Fix interpolation code to behave consistently in the presence of pdf14.<br>
<br>
    There are special cases in the setup of the image interpolation code<br>
    designed to kick in in the presence of halftoning devices and either<br>
    limit the amount or change the nature of the interpolation done.<br>
<br>
    The test for this is confused by the presence of a pdf14 device though.<br>
<br>
    We move the special cases down into a device specific op call to avoid<br>
    this. This also means that devices can have finer control over exactly<br>
    when these operations are used.<br>
<br>
    One possibility would be to expose them as device params, but I haven't<br>
    done that here yet.<br>
<br>
gs/base/gdevdflt.c<br>
gs/base/gxdevsop.h<br>
gs/base/gxiscale.c<br>
gs/base/lib.mak<br>
gs/ghostscript.vcproj<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-28 16:00:01 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49f1bba50c096dee3230e5221db4d5275b8e12e7">49f1bba50c096dee3230e5221db4d5275b8e12e7</a>
<blockquote>
<p>
    Fix optional content support for inline images. Because of the lack<br>
    of test cases, the old code has never been tested.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-27 19:10:13 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=88bf2cb37c0cb1c88ea03abb567dc7e0afdfef47">88bf2cb37c0cb1c88ea03abb567dc7e0afdfef47</a>
<blockquote>
<p>
    Refined the list of files to exclude in clsuterpush.pl.<br>
<br>
gs/toolbin/localcluster/clusterpush.pl<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-22 17:31:27 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=045e544c507b151daebc19aaf21a8b13b6c4a844">045e544c507b151daebc19aaf21a8b13b6c4a844</a>
<blockquote>
<p>
    Support rotated images with interpolation.<br>
<br>
    See bug 690246.<br>
<br>
    Testing this on the cluster with a patch that enables interpolation<br>
    for all landscape jobs reveals no problems.<br>
<br>
gs/base/gxcindex.h<br>
gs/base/gximage.h<br>
gs/base/gxipixel.c<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-25 16:43:37 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f4b2deea2aa129048014771c19ef9fb3c317de7e">f4b2deea2aa129048014771c19ef9fb3c317de7e</a>
<blockquote>
<p>
    Addition of support for the black preservation methods in littleCMS<br>
<br>
    This is for bug 692223.  With this commit now have support to specify black preservation on a object level (e.g. graphic, image or text).<br>
<br>
gs/base/gscms.h<br>
gs/base/gsdparam.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-26 01:04:03 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c3de1fb29628f83ae7d48238e0dd0f3f35ecda1">9c3de1fb29628f83ae7d48238e0dd0f3f35ecda1</a>
<blockquote>
<p>
    Fix typo in last commit.<br>
<br>
    Missing 'int' in definition.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-25 20:44:53 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d68bdb872b1071e42dd937ca7526e5e2cfc9bca7">d68bdb872b1071e42dd937ca7526e5e2cfc9bca7</a>
<blockquote>
<p>
    Fix problem in interpolation code.<br>
<br>
    When interpolating, if we are in an indexed space, we should<br>
    only offset by 1 component per sample, not as many components<br>
    as there are in the base space.<br>
<br>
    This shows up problems with the forthcoming landscape commit,<br>
    but is fixed here separately as it is actually unrelated.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-25 13:44:22 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=97e17a24e89bb0f893fd43af35e774054e41eadc">97e17a24e89bb0f893fd43af35e774054e41eadc</a>
<blockquote>
<p>
    ps2write - while stripping OtherSubrs, don't try to index off stack<br>
<br>
    The code assmued that a Callsubr operator woudl be preceded by the subr index<br>
    but in this case the subr index is provided by another Subr (crazy font...).<br>
<br>
    All we need to do is cdheck the stack index, and if its 0, not index from the<br>
    stack but simply write the Callsubr operator.<br>
<br>
    Fixed Bug #693325<br>
<br>
    Expected Differences<br>
    tpc2.ps should no longer seg fault on the cluster with ps2write.<br>
<br>
gs/base/gdevpsf1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-24 19:10:36 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c31725843fc3195970d12baad2916bf4dc3a5097">c31725843fc3195970d12baad2916bf4dc3a5097</a>
<blockquote>
<p>
    Bug 693407: Portion of image missing with interpolation<br>
<br>
    The 'only interpolate the portion of the bitmap required' code was<br>
    going wrong in the case of X flipped bitmaps.<br>
<br>
gs/base/gxipixel.c<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-24 10:02:00 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f25f5e6f94ada1b3908b85ac68cabe2b9831d803">f25f5e6f94ada1b3908b85ac68cabe2b9831d803</a>
<blockquote>
<p>
    Enable default spot name usage when output profile is NCLR<br>
<br>
    Previously I had added the requirement that we used something like<br>
    -sICCOutputColors=&quot;Cyan, Magenta, Yellow, Black, Orange, Violet&quot;<br>
    when using an NCLR ICC profile for the device profile (valid only for<br>
    tiffsep and psdcmyk devices).  This was to ensure proper naming of the<br>
    profile colorants.   It was pointed out by a customer that they would<br>
    prefer to have a set of default names so this was now added.<br>
    If -sICCOutputColors is not specified and we are using an NCLR ICC profile,<br>
    then we will have spot colors from the profile named ICC_COLOR_0, ICC_COLOR_1<br>
    etc.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-23 16:35:54 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=793971fc49dd62d02d92f4761c40f63a29eabd67">793971fc49dd62d02d92f4761c40f63a29eabd67</a>
<blockquote>
<p>
    Setting the default line attributes was done 2 places in the code.<br>
<br>
pcl/pglfill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-22 16:24:46 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=270fade3cd436aa8abe8d1ef00f4db4ba1f766f3">270fade3cd436aa8abe8d1ef00f4db4ba1f766f3</a>
<blockquote>
<p>
    Bug #693381, Norbert Jannsen's fix to track and home the pcl cursor<br>
    appropriately.<br>
<br>
pcl/pcommand.c<br>
pcl/pcpage.c<br>
pcl/pcpage.h<br>
pcl/pcstate.h<br>
pcl/pcursor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 19:46:00 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=68dd69edbd8e2728207f18435be933bdca461a6f">68dd69edbd8e2728207f18435be933bdca461a6f</a>
<blockquote>
<p>
    Make stcolor device threadsafe by removing static.<br>
<br>
    Remove from list of unthreadsafe devices.<br>
<br>
gs/base/configure.ac<br>
gs/base/gdevstc.c<br>
gs/base/gdevstc.h<br>
gs/base/gdevstc4.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-22 14:47:05 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=36d9731f83201002df6a91699f86e84c8d8530b1">36d9731f83201002df6a91699f86e84c8d8530b1</a>
<blockquote>
<p>
    Fix -Zb decode flags.<br>
<br>
    Some of the debugging code that had been changed to provide memory<br>
    pointers to the debugging print functions was attempting to<br>
    retrive a memory pointer from a stream that was on the stack.<br>
    Stack based streams have null memory pointers, resulting in SEGVs<br>
    when the pointers were used.<br>
<br>
    Revert these calls back to the non threadsafe ones.<br>
<br>
gs/base/gximage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-21 11:49:26 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16423bc7bb7c800122f04ec16869a88dcb6d69b0">16423bc7bb7c800122f04ec16869a88dcb6d69b0</a>
<blockquote>
<p>
    Fixes 693395 default screen vector fill percentage incorrect.<br>
<br>
    Another inconsistency across HP devices: HP plotters apparently<br>
    default to a 50% fill if the Screened Vector (SV) command requests<br>
    shading but doesn't specify a percentage.  On HP Printers the command<br>
    is ignored if the percentage is not provided explicitly.<br>
<br>
pcl/pglfill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-16 19:15:34 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0442ce0c95ffb9a33eba5c2303172e029883f2fb">0442ce0c95ffb9a33eba5c2303172e029883f2fb</a>
<blockquote>
<p>
    Add in support for spot color overprinting with standard CMYK devices<br>
<br>
    Currently only the psdcmyk and tiffsep devices provide simulation of spot<br>
    color overprinting.   With the following commit it is possible to get<br>
    simulation of overprinting with other CMYK based devices.  This is done<br>
    using the command line option -dSimulateOverprint.   The simulation is<br>
    achieved by having the overprint device blend the CMYK colorant with what<br>
    ever has currently been drawn.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gdevp14.h<br>
gs/base/gscdevn.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gscspace.c<br>
gs/base/gsdparam.c<br>
gs/base/gsovrc.c<br>
gs/base/gsovrc.h<br>
gs/base/gstrans.h<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
gs/base/gxcspace.h<br>
gs/base/gxoprect.c<br>
gs/base/gxoprect.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-19 17:32:57 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19f407d322ba43e1aff403f625bd4d2a723f5e65">19f407d322ba43e1aff403f625bd4d2a723f5e65</a>
<blockquote>
<p>
    pdfwrite - bug #691653 Regression: /undefined in --run-- with pdfwrite starting with r11667<br>
<br>
    The underlying problem is related to writing an ICCBased space corresponding<br>
    to an Lab space. However, the fallback when this fails does actually work.<br>
<br>
    The fault was caused by us writing out (and referencing from the page object)<br>
    broen Shading, colourpsace and Pattern entries, which were never actually used.<br>
<br>
    By removing the references from the page (but continuing to emit the broken<br>
    objects) 'corrects' this, and other files.<br>
<br>
    Expected Differences : bug689880.pdf should now work.<br>
<br>
gs/base/gdevpdfg.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfv.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-17 23:02:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d028b4cb4693468b2cb842a156a52f127262e55">7d028b4cb4693468b2cb842a156a52f127262e55</a>
<blockquote>
<p>
    Update source color example file.<br>
<br>
gs/toolbin/color/src_color/objsrc_profiles_example.txt<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-17 21:35:16 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=515767b6e4fb37b6259fbe0d6dec429f0d1727f9">515767b6e4fb37b6259fbe0d6dec429f0d1727f9</a>
<blockquote>
<p>
    Bug 693390: recover yet another broken PDF file<br>
<br>
    Recognize and fix a case when &lt;&lt;/ColorSpace/DeviceRGB&gt;&gt; is used instead of CSA.<br>
    Also fix a real bug that prevented definition /DefaultXXX color spaces as<br>
    device color spaces by PDF file.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-16 18:45:22 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf41720e6d559213802caa3f47edb82182cc7565">cf41720e6d559213802caa3f47edb82182cc7565</a>
<blockquote>
<p>
    The manner in which the icc profile serial header structure was defined is plagued with alignment problems<br>
<br>
    This fix avoids the use of the sizeof operation to specify the size of the serial header portion.<br>
    Thanks to Robin for his help in tracking down this issue.<br>
<br>
gs/base/gscms.h<br>
gs/base/gsicc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gxclist.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-17 09:49:09 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a4cbd97bfe01b2c850902d8ee0983eda61fdb64d">a4cbd97bfe01b2c850902d8ee0983eda61fdb64d</a>
<blockquote>
<p>
    Bug 693389: add inkcov device to Windows build.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-16 08:51:58 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex,com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2741c775675f23403470cb680adbd0025e716e70">2741c775675f23403470cb680adbd0025e716e70</a>
<blockquote>
<p>
    add the 'debugaux' directory to the ignore list for Git<br>
<br>
.gitignore<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-13 02:42:15 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ba77ca58e9ccf711a975b69c888f34e5371e4628">ba77ca58e9ccf711a975b69c888f34e5371e4628</a>
<blockquote>
<p>
    Fix issue with ./configure not correctly checking for files in contrib.<br>
<br>
    For reasons that aren't clear the code &quot;!(test ...)&quot; doesn't work in<br>
    bash on AIX; this commit replaces it with &quot;! test ...&quot;.  Hopefully this<br>
    won't fail on some other operating system.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 19:06:08 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d5904741b3e29c481bf0411c7fadd2c297b66828">d5904741b3e29c481bf0411c7fadd2c297b66828</a>
<blockquote>
<p>
    Remove statics from lxm3200 device.<br>
<br>
    Remove this from the list of unthreadsafe devices.<br>
<br>
gs/base/configure.ac<br>
gs/contrib/gdevlx32.c<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 18:33:55 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f8d61ad9460e59381ca9239c383ec3f91d2e1679">f8d61ad9460e59381ca9239c383ec3f91d2e1679</a>
<blockquote>
<p>
    Fix cdj970 and fmlbp devices to be threadsafe.<br>
<br>
    Avoid use of global variables.<br>
<br>
    Remove these from the list of unthreadsafe devices.<br>
<br>
gs/base/configure.ac<br>
gs/contrib/gdevdj9.c<br>
gs/contrib/japanese/gdevfmlbp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 17:54:51 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb6bedc4c5b81c4cb074d1c784573fd96165cc8e">cb6bedc4c5b81c4cb074d1c784573fd96165cc8e</a>
<blockquote>
<p>
    Fix cp50 device to avoid use of global.<br>
<br>
    Move 'int copies' into the device structure.<br>
<br>
    Remove cp50 from list of un-threadsafe devices.<br>
<br>
gs/base/configure.ac<br>
gs/base/gdevcp50.c<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 16:53:18 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50ecd470347d33cef82fabb02b555f6854345485">50ecd470347d33cef82fabb02b555f6854345485</a>
<blockquote>
<p>
    Fix contrib bjc devices to avoid global use.<br>
<br>
    Should now be threadsafe, so remove these devices from the list of<br>
    thread unsafe ones.<br>
<br>
gs/base/configure.ac<br>
gs/contrib/gdevbjc_.c<br>
gs/contrib/gdevbjc_.h<br>
gs/contrib/gdevbjca.c<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 16:01:47 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96e2afac86b8241e4e2dd758d2caf0c6434a102a">96e2afac86b8241e4e2dd758d2caf0c6434a102a</a>
<blockquote>
<p>
    Fix the check for duplicate entries.......<br>
<br>
    ....in the list of devices excluded from a threadsafe build.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 12:39:53 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=821d4c00e4507c0f68fd1eafb00622cbabcd1343">821d4c00e4507c0f68fd1eafb00622cbabcd1343</a>
<blockquote>
<p>
    Remove calls to gs_lib_ctx_get_non_gc_memory_t from contrib devices.<br>
<br>
    This leaves the only calls to gs_lib_ctx_get_non_gc_memory_t being<br>
    from the lcms v1 wrapper code (expected as lcms v1 is not thread<br>
    safe), and from the gp_check_interrupts implementations (though these<br>
    should no longer be required).<br>
<br>
    Update the list of &quot;not thread safe&quot; devices in configure.ac; lots<br>
    of devices are now thread safe. The ones that remain 'not thread safe'<br>
    are those that use static variables (see bug 693376).<br>
<br>
gs/base/configure.ac<br>
gs/contrib/gdevcd8.c<br>
gs/contrib/gdevdj9.c<br>
gs/contrib/gdevgdi.c<br>
gs/contrib/gdevln03.c<br>
gs/contrib/gdevlx32.c<br>
gs/contrib/gdevlx7.c<br>
gs/contrib/gdevmd2k.c<br>
gs/contrib/gdevop4w.c<br>
gs/contrib/gdevxes.c<br>
gs/contrib/gomni.c<br>
gs/contrib/japanese/gdev10v.c<br>
gs/contrib/japanese/gdevalps.c<br>
gs/contrib/japanese/gdevdmpr.c<br>
gs/contrib/japanese/gdevespg.c<br>
gs/contrib/japanese/gdevfmlbp.c<br>
gs/contrib/japanese/gdevfmpr.c<br>
gs/contrib/japanese/gdevj100.c<br>
gs/contrib/japanese/gdevlbp3.c<br>
gs/contrib/japanese/gdevmag.c<br>
gs/contrib/japanese/gdevmjc.c<br>
gs/contrib/japanese/gdevnpdl.c<br>
gs/contrib/japanese/gdevp201.c<br>
gs/contrib/japanese/gdevrpdl.c<br>
gs/contrib/lips4/gdevl4r.c<br>
gs/contrib/lips4/gdevlprn.c<br>
gs/contrib/pcl3/eprn/eprnparm.c<br>
gs/contrib/pcl3/eprn/gdeveprn.c<br>
gs/contrib/pcl3/src/gdevpcl3.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-12 10:22:38 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=10c70931c243f9d53c2df8b5f9e92fc93acfd4c9">10c70931c243f9d53c2df8b5f9e92fc93acfd4c9</a>
<blockquote>
<p>
    Add a --enable-threadsafe option to configure<br>
<br>
    This adds -dGS_THREADSAFE to the CFLAGS, *and* filters the devices to remove<br>
    non-threadsafe ones.<br>
<br>
    The list of non-threadsafe devices is near the top of configure.ac (search<br>
    for NTS_DEVS).<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-11 19:50:58 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7012db5af074788bf7bf14ef3718fe72eae3e701">7012db5af074788bf7bf14ef3718fe72eae3e701</a>
<blockquote>
<p>
    Add Release-contrib and Debug-contrib VS Configuration.<br>
<br>
    Also make the existing Debug-cups configuration show up in the solution<br>
    properties.<br>
<br>
    Building for any of these configurations only affects the ghostscript<br>
    builds.<br>
<br>
common/msvc_top.mak<br>
gs/base/winlib.mak<br>
gs/ghostscript.vcproj<br>
gs/psi/msvc.mak<br>
main/pcl6_msvc.mak<br>
win32/GhostPDL.sln<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-11 18:50:38 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=415be58773ac3ebedbe92c6cbdaa5cda9efebc9a">415be58773ac3ebedbe92c6cbdaa5cda9efebc9a</a>
<blockquote>
<p>
    Fix windows compilation of pcl3 devices.<br>
<br>
    The pcl3 devices include support for a pagecount module that doesn't<br>
    work under windows. The documentation for these devices suggests that<br>
    they can be made to work by predefining EPRN_NO_PAGECOUNTFILE and<br>
    editing the dependencies in the makefile to remove the need for<br>
    pagefile.c.<br>
<br>
    This commit simplifies that by making that symbol be defined<br>
    automatically on a windows build, and nobbling pagefile.c with a<br>
<br>
gs/contrib/pcl3/eprn/eprnparm.c<br>
gs/contrib/pcl3/eprn/pagecount.c<br>
gs/contrib/pcl3/eprn/pagecount.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-11 18:49:02 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1d45b315e8f88b2d78eccba1a5943e59b3b6b14e">1d45b315e8f88b2d78eccba1a5943e59b3b6b14e</a>
<blockquote>
<p>
    Fix typo in commit/commit.mak<br>
<br>
    The compile rule for gdevp201.obj was broken in a way that doesn't<br>
    matter on unix, but upsets nmake.<br>
<br>
gs/contrib/contrib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-11 08:54:32 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70e02af6a3a80586a506c18343aca7c297cbaae6">70e02af6a3a80586a506c18343aca7c297cbaae6</a>
<blockquote>
<p>
    Fix GS_THREADSAFE builds.<br>
<br>
    mkromfs.c needed to not define some functions in GS_THREADSAFE cases.<br>
<br>
    gxclutil.c had a mismatch between code to collect stats and code to<br>
    print it.<br>
<br>
gs/base/gxclutil.c<br>
gs/base/mkromfs.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-11 15:25:22 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70488a2214a0ae36ad8ec0ca8b4ae0dff9745eb3">70488a2214a0ae36ad8ec0ca8b4ae0dff9745eb3</a>
<blockquote>
<p>
    Tweak gscms interface to avoid use of globals.<br>
<br>
    Previously the only way to implement gscms_get_clrtname was to use a<br>
    static buffer and to return a pointer to it. We change the interface<br>
    so that gscms_get_clrtname takes a memory pointer, and allocates<br>
    space for the returned thing.<br>
<br>
    The LCMS2 implementation of this still uses a 256 byte stack based<br>
    buffer as part of it's operation (so could potentially have problems<br>
    with colorants longer than 256 bytes), but there is no way to avoid<br>
    this in the current LCMS interface.<br>
<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_lcms.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-10 20:25:02 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e3cac4974512416582461af4776120de5b08c07">8e3cac4974512416582461af4776120de5b08c07</a>
<blockquote>
<p>
    Disable stat collection in GS_THREADSAFE builds.<br>
<br>
    The collection of statistics for debugging is implemented in a<br>
    non-threadsafe way. Disable it in GS_THREADSAFE builds.<br>
<br>
gs/base/gxcldev.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclutil.c<br>
gs/base/gxfill.c<br>
gs/base/gxfill.h<br>
gs/base/gxifast.c<br>
gs/base/gxshade6.c<br>
gs/base/scfe.c<br>
gs/base/ttinterp.c<br>
gs/contrib/pcl3/eprn/mediasize.c<br>
gs/contrib/pcl3/src/pclcap.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-10 16:25:10 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcd936432eb37fc5e3590a9377b1e3521ce70042">dcd936432eb37fc5e3590a9377b1e3521ce70042</a>
<blockquote>
<p>
    Fix typo that was setting pattern clist BandHeight using size.x instead of .y<br>
<br>
    This (AFAICT) didn't hurt because the clist_init_bands forced patterns to be<br>
    nbands == 1, but was wrong and may confuse code that relies on BandHeight.<br>
<br>
gs/base/gxpcmap.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-10 15:25:08 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20693cec8d771eb16412a3296c0a16bbbf2ec852">20693cec8d771eb16412a3296c0a16bbbf2ec852</a>
<blockquote>
<p>
    Ensure that all devices have non-NULL memory pointers.<br>
<br>
    We use the memory pointers to get to the lib_ctx, hence having NULL<br>
    memory pointers in device structures causes headaches.<br>
<br>
    Checking the comments in gxdevcli.h it seems that memory should<br>
    be NULL iff it's in a static prototype. Therefore anywhere that uses<br>
    gx_device_init and passes a NULL pointer is suspect.<br>
<br>
    Some places call gx_device_init and then set the memory pointer<br>
    manually afterwards, to ensure that the reference counting is setup<br>
    so that it does not attempt to free the device structure when all<br>
    instances are gone. This is to indicate that the device structure<br>
    is on the stack.<br>
<br>
    As a neater alternative to this, we offer a gx_device_init_on_stack<br>
    function that does the same thing, but makes this explicit.<br>
<br>
gs/base/gsdevice.c<br>
gs/base/gxacpath.c<br>
gs/base/gxclip.c<br>
gs/base/gxclip2.c<br>
gs/base/gxclip2.h<br>
gs/base/gxdevcli.h<br>
gs/base/gxmclip.c<br>
gs/base/gxmclip.h<br>
gs/base/gxp1fill.c<br>
gs/psi/zupath.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-09 16:17:53 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3231e8923e2bf4d535340a4d4a4335457c8ad1cf">3231e8923e2bf4d535340a4d4a4335457c8ad1cf</a>
<blockquote>
<p>
    gp_check_interrupts GP_THREADSAFE fixes.<br>
<br>
    When building with GP_THREADSAFE, gs_lib_ctx_get_non_gc_memory_t is<br>
    not defined. This will cause at least 2 versions of gp_check_interrupts<br>
    to fail. We patch them here to at least compile correctly.<br>
<br>
    Also fix some places where the memory pointers used were invalid.<br>
<br>
    Also fix a couple of calls to process_interrupts with explicitly NULL<br>
    memory pointers.<br>
<br>
gs/base/gp_macpoll.c<br>
gs/base/gp_mspol.c<br>
gs/base/sfxstdio.c<br>
gs/base/stream.c<br>
gs/psi/iscan.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-09 16:15:37 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1793f3733ddb587a92efae41e188b7131eb2aa57">1793f3733ddb587a92efae41e188b7131eb2aa57</a>
<blockquote>
<p>
    Second attempt at fixing debugging printing with clists.<br>
<br>
    The band file reading stream does not have a valid memory pointer<br>
    as the structure is allocated on the stack, and to have a valid<br>
    memory pointer would make the stream attempt to free the structure<br>
    on a close.<br>
<br>
    Here we add a 'local_memory' pointer that we use both for debugging<br>
    printing, and for calls to process_interrupts.<br>
<br>
gs/base/gxclread.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-10 16:18:49 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=586f1f5e9a29e1826b70cdd5aa1a77aa6b835f33">586f1f5e9a29e1826b70cdd5aa1a77aa6b835f33</a>
<blockquote>
<p>
    Provide way for output pagesize to image size in view___.ps tools.<br>
<br>
    For viewjpeg.ps and viewgif.ps this adds new procedures &quot;viewJPEGgetsize&quot; and<br>
    &quot;viewGIFgetsize&quot; which return the dimensions of the input impage, thus allowing<br>
    the caller to set the page size.<br>
<br>
    For viewmiff.ps, viewpbm.ps, viewpcx.ps they take a new parameter &quot;FITPAGE&quot;<br>
    which tell the utilities to fit the page to the image - they still honour the SCALE<br>
    parameter, which is also used when setting the pagesize.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/lib/viewgif.ps<br>
gs/lib/viewjpeg.ps<br>
gs/lib/viewmiff.ps<br>
gs/lib/viewpbm.ps<br>
gs/lib/viewpcx.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-09 21:17:00 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0dc01b095200fa4e04a9934c58ad97ff50c56916">0dc01b095200fa4e04a9934c58ad97ff50c56916</a>
<blockquote>
<p>
    Addition of an internal CMM for direct color replacement of text, graphic and image RGB or CMYK colors<br>
<br>
    This option is used with the -sSourceObjectICC file.  Similar to the option to set None to request that<br>
    no color management be used for a particular object type, here we use the keyword Replace to indicate<br>
    that for that object type the colorants will be replaced by the method set up in gsicc_replacecm.c<br>
    Currently to demonstrate its usage it provides a &quot;negative&quot; color mapping operation.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gscdevn.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gsicc_nocm.c<br>
gs/base/gsicc_replacecm.c<br>
gs/base/gxclimag.c<br>
gs/base/gxcmap.c<br>
gs/base/gxi12bit.c<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
gs/base/gxiscale.c<br>
gs/base/gxshade.c<br>
gs/base/lib.mak<br>
gs/ghostscript.vcproj<br>
xps/xpsgradient.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-09 13:17:25 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a650680c5be1e034b8d4a5f6cd2704ae65182e43">a650680c5be1e034b8d4a5f6cd2704ae65182e43</a>
<blockquote>
<p>
    Fixes 693370 - the default join should be none not mitered.<br>
<br>
pcl/pgdraw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 17:24:48 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6f7a425bbc0b560a776a76293b4a1fdaffc76248">6f7a425bbc0b560a776a76293b4a1fdaffc76248</a>
<blockquote>
<p>
    Bug 693328: Ensure that clist reader/writer devices stay in sync.<br>
<br>
    The number of components records in reader/writers can get out of<br>
    sync due to some 'limiting' code in the writer not being present in<br>
    the reader.<br>
<br>
    My first attempt at fixing this was to copy those few lines from<br>
    pdf14_create_clist_device into gs_pdf14_device_push, but this caused<br>
    SEGVs in some non-clist cases (72dpi CATX9004.pdf unbanded for example).<br>
<br>
    Staring at the code a bit it seems odd to open a device and then change<br>
    the number of colors in it; changing the number of colors *then* opening<br>
    it makes much more sense. I have therefore moved the limiting code up<br>
    a few lines in both pdf14_create_clist_device and gs_pdf14_device_push<br>
    and everything seems much happier.<br>
<br>
    2 diffs shown in the cluster, 1 clearly a progression, 1 neutral.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 19:35:17 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=92f024cba125df4729f6a51fdf7b59e46fc71457">92f024cba125df4729f6a51fdf7b59e46fc71457</a>
<blockquote>
<p>
    Revert commit dcdc149 which broke various cluster tests.<br>
<br>
    It seems that we can't put a valid mem pointer into the clist<br>
    stream reading code, as the stream code takes this as an indication<br>
    that the stream state should be freed on closedown.<br>
<br>
gs/base/gxclread.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 17:31:01 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b07dca2069a45793b70cb7faf51f53d932144a28">b07dca2069a45793b70cb7faf51f53d932144a28</a>
<blockquote>
<p>
    Fix multi-threaded rendering use of wrong gs_memory_t.<br>
<br>
    When we create rendering threads, we create a gs_memory_t * for each.<br>
    The idea is that every thread should exclusively use its own gs_memory_t<br>
    to avoid conflicts. The gsicc_cache was being setup to use the incorrect<br>
    one.<br>
<br>
    This was found (by Ray) when investigating bug 693361. This solves<br>
    this particular error, but does not completely solve the bug.<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 17:28:52 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcdc149c49b2556e2038df4eab0da7f49de46100">dcdc149c49b2556e2038df4eab0da7f49de46100</a>
<blockquote>
<p>
    Fix clist stream memory initialisation.<br>
<br>
    The clist file playback stream has never had it's memory pointer setup<br>
    correctly - probably because it has never needed it. Now it does need it<br>
    due to to the debugging print functions.<br>
<br>
gs/base/gxclread.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 17:28:32 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=98946c1f9c015a6bbbb55a9401e4eeca47ce7147">98946c1f9c015a6bbbb55a9401e4eeca47ce7147</a>
<blockquote>
<p>
    Whitespace tweak.<br>
<br>
gs/base/gxclrast.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-08 10:30:29 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f9c849768bdb3553ffeac74b74b04749e91bf4d5">f9c849768bdb3553ffeac74b74b04749e91bf4d5</a>
<blockquote>
<p>
    pdfwrite - when resizing arrays due to incrementally downloaded fonts, increase CIDToGODMapLength<br>
<br>
    When TrueType fonts are incrementally downloaded, its possible for new character<br>
    codes to exceed the number of glyphs originally defined in the TrueType tables.<br>
<br>
    When this happens we resize various entries in our copy of the font. However<br>
    the change to dynamically storing CIDToGIDMap and CIDSet (for PDF/A) omitted<br>
    to increase the variable recording the array size (although the array was correctly<br>
    resized).<br>
<br>
    This led to glyphs with CIDs higher than the initial number of glyphs not having<br>
    an entry in CIDToGIDMap, and tehrefore being treated as /.notdef<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdtf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-07 19:30:21 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6cbb5969cc2edab6417c673194f1c1d019d275ef">6cbb5969cc2edab6417c673194f1c1d019d275ef</a>
<blockquote>
<p>
    Bug 693339: Replace malloc() with GS memory allocators in JPX code.<br>
<br>
    We have 2 implementations of JPX decoding filters based on Luratech<br>
    and OpenJpeg libraries. The Luratech one is now clean. The API to<br>
    the library supports custom memory allocators.<br>
<br>
    The OpenJpeg case is more difficult. The calls to malloc() in the<br>
    wrapper code has been eliminated, but the library calls malloc()<br>
    directly. To use a custom allcator one has to extend the API and<br>
    change the signatures of all functions that allocate memory.<br>
<br>
gs/base/lib.mak<br>
gs/base/sjpx_luratech.c<br>
gs/base/sjpx_luratech.h<br>
gs/base/sjpx_openjpeg.c<br>
gs/base/sjpx_openjpeg.h<br>
gs/psi/zfjpx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-07 11:26:17 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7f4726e7764a09b8d68927924e54d1ad23e284d1">7f4726e7764a09b8d68927924e54d1ad23e284d1</a>
<blockquote>
<p>
    Bug 691931: Patch to resolve error in the number parser, the file now renders paths correctly<br>
    but not the text which is not currently supported.<br>
<br>
svg/ghostsvg.h<br>
svg/svgshapes.c<br>
svg/svgtypes.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-07 11:19:00 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8785fa4c81b377abc633cd0baeffb7abd85b45d7">8785fa4c81b377abc633cd0baeffb7abd85b45d7</a>
<blockquote>
<p>
    Bug 693239: Prevent segfault due to optional width/height attributes.<br>
<br>
svg/svgdoc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-05 22:48:58 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=119de6b66bf1874c545b221a974ce88c78e462e8">119de6b66bf1874c545b221a974ce88c78e462e8</a>
<blockquote>
<p>
    more warning fixes<br>
<br>
pl/plufont.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-05 22:48:11 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=341865d2554ef04c0f873344f2a2d582a8353944">341865d2554ef04c0f873344f2a2d582a8353944</a>
<blockquote>
<p>
    more warning fixes<br>
<br>
pl/plulfont.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-05 22:39:06 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22ab5ef64b6364534012abecdf29b76402e7a08f">22ab5ef64b6364534012abecdf29b76402e7a08f</a>
<blockquote>
<p>
    warning cleanup<br>
<br>
pl/pluchar.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-05 13:11:16 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5513b716ce5ce510120e2a08a766281d2b00c28">f5513b716ce5ce510120e2a08a766281d2b00c28</a>
<blockquote>
<p>
    Allow use of Device Link ICC Profile for source objects<br>
<br>
    With the -sSourceObjectICC=filename option, it is now possible to specify a device link source<br>
    profile for CMYK/RGB graphic, image and text objects.   When such a profile is specified, the mapping<br>
    will go from source directly to device values.  Note that the use of a proofing profile is not<br>
    possible and the device profile itself is not used in this transformation.  However the device link<br>
    profile that is associated with the device and specified with -sDeviceLinkProfile is included<br>
    in the transform.<br>
<br>
gs/base/gscms.h<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_lcms.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-05 06:40:12 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44687f1488b97bc007c6cfb02d4a25bcb3fd94e0">44687f1488b97bc007c6cfb02d4a25bcb3fd94e0</a>
<blockquote>
<p>
    pdfwrite - linearisation, correctly prevent buffer overrun<br>
<br>
    Picked up by the compiler on the Mac.the test was impossible, because a byte<br>
    cannot exceed a value of 255. The value (whcih triggers a buffer flush and reset)<br>
    shuold of course have been 254, as it now is.<br>
<br>
    No differences ewxpected<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-04 10:43:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc7c0751108e823d311418bfed920a5a4b3ed37b">fc7c0751108e823d311418bfed920a5a4b3ed37b</a>
<blockquote>
<p>
    Expansion of spot color replacement to handle the mixing of DeviceN Colors<br>
<br>
    The named color profile structure will now also be used for mixing of DeviceN colorants.<br>
    This includes an update of the example to show the results.<br>
<br>
gs/base/gscdevn.c<br>
gs/base/gscsepr.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cache.h<br>
gs/base/lib.mak<br>
gs/toolbin/color/named_color/named_color_table.txt<br>
gs/toolbin/color/named_color/named_colors.pdf<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-04 19:19:58 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c0b2a6eb8b26af6f1cea99efd97354ee3c22f28a">c0b2a6eb8b26af6f1cea99efd97354ee3c22f28a</a>
<blockquote>
<p>
    These header files should have been added with the warning message<br>
    cleanup commit (deeef25).<br>
<br>
pcl/rtmisc.h<br>
pl/plchar.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-04 13:32:47 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=deeef25f35ff78e75a5ad6d056c481f1b1013c66">deeef25f35ff78e75a5ad6d056c481f1b1013c66</a>
<blockquote>
<p>
    Warning cleanup.<br>
<br>
pcl/pcdraw.c<br>
pcl/pcfsel.c<br>
pcl/pcindxed.c<br>
pcl/pcl.mak<br>
pcl/pcpatrn.c<br>
pcl/pcstatus.c<br>
pcl/pcuptrn.c<br>
pcl/pgfdata.c<br>
pcl/pgfdata.h<br>
pcl/pgfont.c<br>
pcl/pgmand.h<br>
pcl/rtmisc.c<br>
pl/pl.mak<br>
pl/plchar.c<br>
pl/plfont.c<br>
pl/plfont.h<br>
pl/plplatf.c<br>
pl/plsrgb.c<br>
pl/pluchar.c<br>
pxl/pxffont.c<br>
pxl/pxfont.c<br>
pxl/pxfont.h<br>
pxl/pxgstate.h<br>
pxl/pxl.mak<br>
pxl/pxpthr.c<br>
pxl/pxpthr.h<br>
pxl/pxstate.c<br>
pxl/pxstate.h<br>
pxl/pxtop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 21:51:18 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=18f1da650322713395aceafb25f495149c8f0cda">18f1da650322713395aceafb25f495149c8f0cda</a>
<blockquote>
<p>
    Turn on ability to specify no color management from the srcgtag structure for different objects<br>
<br>
    With this, it is possible in the srcgtag structure to specify that we will not do color management<br>
    for RGB or CMYK graphic, image and text objects.   This is done by specifying the keyword None after<br>
    the particular tag.  For example &quot;Graphic_CMYK	None&quot; in the file that is used with the -sSourceObjectICC<br>
    command option.  In the above case, all CMYK source graphics would be mapped using the unmanaged color<br>
    methods (e.g. 255-X)   Also we added in support for preserveK, override source ICC and black point<br>
    compensation on an object based case.    Had to worry about the case where the profile passes through<br>
    the clist in the commit and had to add in a new parameter to the profile to ensure that the rendering<br>
    conditions are associated with the source profile.  Also fixed a bug to keep from changing the number of<br>
    channels in the link format.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_nocm.c<br>
gs/base/gxclimag.c<br>
gs/base/gxclist.c<br>
gs/base/gxclist.h<br>
gs/base/gxcmap.c<br>
gs/base/gxi12bit.c<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
gs/base/gxiscale.c<br>
gs/base/gxshade.c<br>
xps/xpsgradient.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-04 10:02:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44616dd78f9af00a47a4c27e5491537df28cd964">44616dd78f9af00a47a4c27e5491537df28cd964</a>
<blockquote>
<p>
    Eliminate last_char global variable.<br>
<br>
    last_char value is now stored in the pl_font_s structure.<br>
<br>
pl/plchar.c<br>
pl/plfont.c<br>
pl/plfont.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-03 09:29:47 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=37e1da602cff3378b3d985637dc582f206aa5cd8">37e1da602cff3378b3d985637dc582f206aa5cd8</a>
<blockquote>
<p>
    txtwrite - fix a typo causing text to be incorrect<br>
<br>
    When the text operation was TEXT_FROM_CHARS or TEXT_FROM_SINGLE_CHAR the code<br>
    was referencing the 'bytes' structure member, not the 'chars' structure member.<br>
<br>
    Also fixed a potential signed/unsigned mismatch in pdfwrite and a 32/64 bit<br>
    mismatch in txtwrite, both picked up by Henry. It would be nice to know why<br>
    the 'new compiler warnings' check didn't flag these, possibly they predate<br>
    that check.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevtxtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-01 10:48:01 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ae25729f69a9ece10d6fdbb0c0c213c4e27aea7c">ae25729f69a9ece10d6fdbb0c0c213c4e27aea7c</a>
<blockquote>
<p>
    Change to a more sane storage of the color rendering conditions to s common structure type<br>
<br>
    As more conditions variables are introduced, e.g. rendering intent, black point compensation, preserve black<br>
    etc. it has become clear that we need a structure for these variables making it easy to introduce new ones.<br>
    Also clean up a lot of the usage methods to ensure that proper override occurs without having to set a<br>
    pile of command line options.<br>
<br>
gs/Resource/Init/gs_lev2.ps<br>
gs/base/gdevp14.c<br>
gs/base/gscms.h<br>
gs/base/gscspace.c<br>
gs/base/gsdevice.c<br>
gs/base/gsdparam.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gstrans.c<br>
gs/base/gxclimag.c<br>
gs/base/gxcmap.c<br>
gs/psi/zusparam.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 20:37:15 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1a459c6e695f065f036db4a8946ae726ee69eac">f1a459c6e695f065f036db4a8946ae726ee69eac</a>
<blockquote>
<p>
    Bug 693285: Apply update of original patch from zeniko. We now check that the symbol dictionary<br>
    being imported is not empty. Also prevent seg faults resulting from the threadsafe update.<br>
<br>
gs/base/sjbig2.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 13:18:25 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=80dc061ed4717eef205be05e764ac4f1b8c67632">80dc061ed4717eef205be05e764ac4f1b8c67632</a>
<blockquote>
<p>
    fix mismatched parameter type, possibly associated with bug #693362<br>
<br>
pcl/pgfont.c<br>
pl/plchar.c<br>
pl/plfont.c<br>
pl/plfont.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 12:48:13 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=281b221f4632ba243efa325663dfb223d42028ff">281b221f4632ba243efa325663dfb223d42028ff</a>
<blockquote>
<p>
    Add missing initialisation of override_bp<br>
<br>
    Fix a Valgrind warning and a possible cause of indeterminism.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 13:26:48 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7c47cd47fc96a2f8af5723dbe777526a7fc64c9a">7c47cd47fc96a2f8af5723dbe777526a7fc64c9a</a>
<blockquote>
<p>
    White space and warning fixes for bigtiff commit.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevtfax.c<br>
gs/base/gdevtifs.c<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-02 11:07:09 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5784bfbfba7191cacce5309e88afac0851287460">5784bfbfba7191cacce5309e88afac0851287460</a>
<blockquote>
<p>
    Add preservation of PageLabels from input PDF files when using pdfwrite<br>
<br>
    Bug #692901 &quot;Preserve Page labels from input PDF when the output is PDF&quot;<br>
<br>
    Because hte defined pdfmark /PAGELABEL is not flexible enough to handle all<br>
    the possible kinds of page labels in PDF, and because it transpires we don't<br>
    emit pdfmarks when producing PostScript with ps2write, this feature does<br>
    not use teh pdfmark syntax.<br>
<br>
    It does work in a broadly similar way, we create a string from the PageLabels<br>
    entry in the Catalog dictionary (if present) and then pass that via put_params<br>
    with a parameter naem of pdfpagelabels (pdfmark uses a name of pdfmark).<br>
<br>
    This string is then stored in the Catalog dictionary, and emitted when the<br>
    output PDF is created.<br>
<br>
    I'm unable to test this against the original report, as no specimen PDF file<br>
    was provided.<br>
<br>
    No differences expected, this makes no changes in rendering.<br>
<br>
gs/Resource/Init/gs_pdfwr.ps<br>
gs/Resource/Init/pdf_main.ps<br>
gs/base/gdevpdfp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-28 09:23:36 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79af8e5bff7321b6985ea0bd5dd5b4a5a4c2590a">79af8e5bff7321b6985ea0bd5dd5b4a5a4c2590a</a>
<blockquote>
<p>
    Provide bigtiff output option.<br>
<br>
    All the tiff devices now support the device parameter &quot;-dUseBigTIFF&quot; which<br>
    tells them to write their output in &quot;bigtiff&quot; format, rather than &quot;normal&quot;<br>
    tiff.<br>
<br>
    In the event that we overflow the allowed file size in normal tiff, the existing<br>
    error message is augmented with a hint to try bigtiff output.<br>
<br>
    To implement the above warning has meant adding warning and error handling hooks<br>
    for libtiff, and also adding file I/O hooks for libtiff.<br>
<br>
    This requires libtiff version &gt;=4.0.0, so linking with older libtiff versions<br>
    will cause us to ignore the UseBigTIFF setting.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevtfax.c<br>
gs/base/gdevtfnx.c<br>
gs/base/gdevtifs.c<br>
gs/base/gdevtifs.h<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-10-01 08:41:11 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b81847783db2c17e11d40feeb0812ff7d129aca9">b81847783db2c17e11d40feeb0812ff7d129aca9</a>
<blockquote>
<p>
    Bug #691319 - Preserve Flags (/F) from Text annotations<br>
<br>
    When creating pdfmarks for the benefit of pdfwrite, the PDF interpreter<br>
    only handles two types of annotation, Text and Link. We were handling the<br>
    Flags entry for Link annotations, but not for Text annotations.<br>
<br>
    Here we preserve the Flags for text annotations too.<br>
<br>
    No differences expected, not tested by cluster.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-28 14:40:35 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4b9424c7bf7c74613cd004195592d41893dd3bd5">4b9424c7bf7c74613cd004195592d41893dd3bd5</a>
<blockquote>
<p>
    Remove more traces of pdfopt from the repository and documentation<br>
<br>
gs/doc/Develop.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Psfiles.htm<br>
gs/lib/pdfopt<br>
gs/lib/pdfopt.bat<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-28 14:34:27 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=260ddb3e53ffe852a8994dd00719931ca3f2beec">260ddb3e53ffe852a8994dd00719931ca3f2beec</a>
<blockquote>
<p>
    With the addition of linearisation to pdfwrite, pdfopt.ps has become<br>
    redundant. Since it is difficult to maintain, has a number of bugs, and is<br>
    believed not to work properly anyway, it is now deprecagted and hence<br>
    removed from the repository.<br>
<br>
gs/lib/pdfopt.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-28 13:08:06 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f2a40a3a7edd6d27caeaa19f7f644adf31ee972c">f2a40a3a7edd6d27caeaa19f7f644adf31ee972c</a>
<blockquote>
<p>
    pdfwrite - linearisation completion<br>
<br>
    Update ps2pdf.htm documentation<br>
<br>
    CHange parameter name to 'FastWebView'<br>
<br>
    Don't writ the xref on the initial file, as we don't need it and it makes<br>
    the original file slightly smaller, which reduces the chances that we will<br>
    have to pad the linearised file. (The linearised file must be no smaller<br>
    than the original, because we do not close the file, we just seek around and<br>
    rewrite it). Same with the trailer dictionary.<br>
<br>
    Fix 'rewrite object' so that dictioanry and array objects can be of any size<br>
    previously we had assunmed they would be less than 64k, but some complex<br>
    files broke that.<br>
<br>
    If the linearised file is smaller than the original, we need to add white<br>
    space to bring it up to the same size, or we will be left with garbage at<br>
    the end. Worse, the garbage may well contain a partial invalid xref.<br>
<br>
    Remove the check for one page files as Adobe specifically allows linearising<br>
    single page documents....<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfp.c<br>
gs/doc/Ps2pdf.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-28 07:54:54 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c23fe12abb6a158abf1c515601db7b2f94c5463">3c23fe12abb6a158abf1c515601db7b2f94c5463</a>
<blockquote>
<p>
    Reinstate tiffsep1 and svgwrite in the device lists<br>
<br>
    I accidentally left out tiffsep1 when I consolidated the two lists of TIFF<br>
    devices, so putting it back now.<br>
<br>
    svgwrite was removed a while ago due to being incomplete and flaky, but there<br>
    has been ongoing interest in the device, some patches posted, so reinstate it<br>
    to make it easier for people to test/debug/develop.<br>
<br>
    It's included in the &quot;FILES&quot; class of devices.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-27 10:18:27 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a0483fddf55e091aafa1bd4822bd77b19b481b3">3a0483fddf55e091aafa1bd4822bd77b19b481b3</a>
<blockquote>
<p>
    Update Use.htm with ICC command updates.<br>
<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-27 10:06:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=666890f41d3ca928498a8652fa7d102cd9f22191">666890f41d3ca928498a8652fa7d102cd9f22191</a>
<blockquote>
<p>
    Update color document with recent changes.<br>
<br>
gs/doc/GS9_Color_Management.pdf<br>
gs/doc/GS9_Color_Management.tex<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-27 17:21:16 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=53547c0892c48e248a146667f280886b362befc1">53547c0892c48e248a146667f280886b362befc1</a>
<blockquote>
<p>
    pdfwrite - linearisation, fix some seg faults<br>
<br>
    The code was inadvertently incrementing an array index twice, leading to<br>
    out of bounds memory access, and consequent memory corruption.<br>
<br>
    No differences expected, this is not cluster tested.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-24 23:15:43 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=408cbb83103ba9cf6996eeebaa02995cd9f535ad">408cbb83103ba9cf6996eeebaa02995cd9f535ad</a>
<blockquote>
<p>
    Addition of support for allowing control over the use of black point compensation in color management<br>
<br>
    Black point compensation is a new extended graphic state entry in the extended graphic<br>
    state with PDF 2.0 .  This change adds it to the graphic state.  This update also allows<br>
    the same type of override control for black point that we currently have for the<br>
    rendering intent.   This includes specification of its use by source object type with<br>
    the use of -sSourceObjectICC for source RGB and CMYK graphic, images and text objects.<br>
    Alternatively, control can be achieved for the whole document via object type<br>
    by specification  -dBlackPtComp=0/1.  Alternatively, you can specify control<br>
    on an object based method using  -dGraphBlackPt=0/1<br>
    -dImageBlackPtComp=0/1  -dTextBlackPtComp=0/1.  All of these<br>
    will require the setting of -dOverrideBP to ensure that the document content does not<br>
    interfere with the command line setting.  Note that these are not true/false settings<br>
    but integer values like the rendering intent.  This is to allow the easy expansion<br>
    to other black point compensation options as described by Bug 692223.<br>
<br>
gs/Resource/Init/gs_lev2.ps<br>
gs/base/gdevp14.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gscspace.c<br>
gs/base/gsdparam.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gstrans.c<br>
gs/base/gxclimag.c<br>
gs/base/gxcmap.c<br>
gs/base/gxi12bit.c<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
gs/base/gxiscale.c<br>
gs/base/gxistate.h<br>
gs/base/gxshade.c<br>
gs/psi/zcolor3.c<br>
gs/psi/zusparam.c<br>
gs/toolbin/color/src_color/objsrc_profiles_example.txt<br>
xps/xpsgradient.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-26 11:02:22 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1770ca69b258c571565d9a6fc7bb9fb0ebd539e4">1770ca69b258c571565d9a6fc7bb9fb0ebd539e4</a>
<blockquote>
<p>
    Bug 693357: Fix typo<br>
<br>
    In the big debugging printf commit of the other day, I introduced a<br>
    typo into the luratech jbig2 code. Fixed here.<br>
<br>
gs/base/sjbig2_luratech.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-26 10:52:46 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=45ba06c92cf7cb290b1c76f4380606323579e5b9">45ba06c92cf7cb290b1c76f4380606323579e5b9</a>
<blockquote>
<p>
    Fix DEBUG mode SEGVs; bug 693359<br>
<br>
    In at least a couple of places I was reading a memory pointer from a<br>
    structure that wasn't filled in. Simple fixes here.<br>
<br>
    This solves the crashing with -ZBb in any file with an image pointed<br>
    out by Henry on irc.<br>
<br>
    I'm sure there will be more such problems due to the wide ranging<br>
    nature of the commit that changed this; hopefully all will be as<br>
    simple to solve as this.<br>
<br>
gs/base/gxipixel.c<br>
gs/base/gxp1fill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-26 09:06:22 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3894e9c8a3ab125c82048da3bf81515500bb2da0">3894e9c8a3ab125c82048da3bf81515500bb2da0</a>
<blockquote>
<p>
    pdfwrite - emit partial pages<br>
<br>
    previously, if an input file made marks on the page but did not call<br>
    showpage (or equivalent in other languages), pdfwrite would write all the<br>
    objects to the file, but would not add the final partial page to the Pages<br>
    tree, which meant that the final page didn't appear.<br>
<br>
    It seems that Adobe Acrobat behaves differently, and produces the final page<br>
    under these conditions. This commit changes our behaviour to match the<br>
    observed Adobe behaviour.<br>
<br>
    This was noticed when running some Quality Logic test files, it appears that<br>
    the cluster runs in a mode where these partial pages were always emitted<br>
    anyway (because of the CET conformance hacks) so there are only a few files<br>
    which display any differences.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-25 19:43:21 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1deb66b8f5e53f8a560ced10fe777a55e42fc6f2">1deb66b8f5e53f8a560ced10fe777a55e42fc6f2</a>
<blockquote>
<p>
    Fix garbage collection troubles with icc code.<br>
<br>
    Historically, due to lcms/lcms2 allocating stuff using malloc/free<br>
    the profiles haven't been subject to garbage collection. When I<br>
    fixed gscms_create/destroy not being called properly, this caused<br>
    lcms2 to start allocating blocks properly with the gs allocators.<br>
<br>
    To ensure that these blocks weren't unexpectedly garbage collected<br>
    away, I modified one of the calls from gsicc_cache.c to the gscms<br>
    layer to pass in a non_gc memory pointer. This worked well, but I<br>
    missed a second call in which I should have done the same.<br>
<br>
    Fixed here. This cures bug 693349.<br>
<br>
gs/base/gsicc_cache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-21 12:34:16 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=873455f29e399fc5f7b489c50cfb869fdc26cb0d">873455f29e399fc5f7b489c50cfb869fdc26cb0d</a>
<blockquote>
<p>
    Simplify mkromfs build dependencies, add needed debug and error printing.<br>
<br>
    Since mkromfs minimal memory implementation left the gs_lib_ctx set to NULL,<br>
    the errwrite and outwrite functions would de-reference a NULL causing a<br>
    Segmentation violation if gp_unix ever printed anything. This removes the<br>
    need for the gsmisc.o altogether and removes the need for gslibctx.o and<br>
    the dummy gscms functions.<br>
<br>
gs/base/mkromfs.c<br>
gs/base/unix-aux.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-24 09:25:35 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb0ef5ed637757290a88709fa1543585b29ccc54">bb0ef5ed637757290a88709fa1543585b29ccc54</a>
<blockquote>
<p>
    Update color management documentation with information about NCLR ICC profile usage.<br>
<br>
gs/doc/GS9_Color_Management.pdf<br>
gs/doc/GS9_Color_Management.tex<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-24 09:22:41 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5176cb8c3882de51e413880ec2818a45a9d7c139">5176cb8c3882de51e413880ec2818a45a9d7c139</a>
<blockquote>
<p>
    Fix a few typos.<br>
<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-21 22:48:37 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8227d2d46b516b75a4383466eb243b725f3124b0">8227d2d46b516b75a4383466eb243b725f3124b0</a>
<blockquote>
<p>
    Support for the use of N-CLR ICC output profiles extended to the tiffsep device.<br>
<br>
    The documentation on the use of this option was also updated.<br>
<br>
gs/base/gdevdevn.h<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-20 22:55:45 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a1ca14aab8f3ef6a7ffaa554d4e1d348b7561a7">8a1ca14aab8f3ef6a7ffaa554d4e1d348b7561a7</a>
<blockquote>
<p>
    Bulk of work to demonstrate the use of DeviceN ICC output profile.<br>
<br>
    This adds support to the psdcmyk device as well as the required changes in<br>
    the graphics library.   Through the use of the LIMIT_TO_ICC define in gdevpsd, it is<br>
    possible to limit the colorants to those defined by the ICC output profile.<br>
    Setting to 1 will limit it setting to 0 will allow all spots (up to the maximum)<br>
    to be created.   If spot names in the document match those in the command line<br>
    with -sICCOutputColors, then those colorants and hence separation will be treated<br>
    the same.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gscdevn.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gxcmap.c<br>
gs/base/gxistate.h<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-21 18:49:41 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=51bc075100060ca1f90dd5d3d6c467597202d27d">51bc075100060ca1f90dd5d3d6c467597202d27d</a>
<blockquote>
<p>
    Import LCMS 2.4 (patched)<br>
<br>
    Here we import LCMS 2.4 with our existing patches into gs.<br>
<br>
    Cluster testing this shows various changes; most of these are just<br>
    small rounding issues. It is possible that some of this is due to<br>
    Marti adopting our revised 16 -&gt; 8 code and having pushed it further<br>
    through the code than we had.<br>
<br>
    Also there are changes to the black point compensation code designed<br>
    to more accurately match Adobe. For some test files that have<br>
    deliberately extreme profiles we get noticably different results.<br>
    Supposedly this is because those profiles do not round trip nicely,<br>
    but after discussing it with Michael he says it's nothing to worry<br>
    about.<br>
<br>
gs/base/lcms2.mak<br>
gs/ghostscript.vcproj<br>
gs/lcms2/AUTHORS<br>
gs/lcms2/ChangeLog<br>
gs/lcms2/Makefile.in<br>
gs/lcms2/Projects/.gitignore<br>
gs/lcms2/Projects/BorlandC_5.5/lcms2.rc<br>
gs/lcms2/Projects/BorlandC_5.5/lcmsdll.lk<br>
gs/lcms2/Projects/BorlandC_5.5/lcmsdll.lst<br>
gs/lcms2/Projects/VC2008/lcms2_DLL/lcms2_DLL.vcproj<br>
gs/lcms2/Projects/VC2008/lcms2_static/lcms2_static.vcproj<br>
gs/lcms2/Projects/VC2010/jpegicc/jpegicc.vcxproj<br>
gs/lcms2/Projects/VC2010/lcms2.sln<br>
gs/lcms2/Projects/VC2010/lcms2_DLL/lcms2_DLL.vcxproj<br>
gs/lcms2/Projects/VC2010/lcms2_DLL/lcms2_DLL.vcxproj.filters<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcxproj<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcxproj.filters<br>
gs/lcms2/Projects/VC2010/linkicc/linkicc.vcxproj<br>
gs/lcms2/Projects/VC2010/psicc/psicc.vcxproj<br>
gs/lcms2/Projects/VC2010/testbed/testbed.vcxproj<br>
gs/lcms2/Projects/VC2010/tiffdiff/tiffdiff.vcxproj<br>
gs/lcms2/Projects/VC2010/tifficc/tifficc.vcxproj<br>
gs/lcms2/Projects/VC2010/transicc/transicc.vcxproj<br>
gs/lcms2/Projects/mac/._.DS_Store<br>
gs/lcms2/Projects/mac/LittleCMS/._.DS_Store<br>
gs/lcms2/Projects/mac/LittleCMS/Info.plist<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/mariama.mode1v3<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/mariama.pbxuser<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/project.pbxproj<br>
gs/lcms2/aclocal.m4<br>
gs/lcms2/configure<br>
gs/lcms2/configure.ac<br>
gs/lcms2/doc/LittleCMS2.3 API.pdf<br>
gs/lcms2/doc/LittleCMS2.3 Plugin API.pdf<br>
gs/lcms2/doc/LittleCMS2.3 tutorial.pdf<br>
gs/lcms2/doc/LittleCMS2.4 API.pdf<br>
gs/lcms2/doc/LittleCMS2.4 Plugin API.pdf<br>
gs/lcms2/doc/LittleCMS2.4 tutorial.pdf<br>
gs/lcms2/include/Makefile.in<br>
gs/lcms2/include/lcms2.h<br>
gs/lcms2/include/lcms2_extras.h<br>
gs/lcms2/include/lcms2_plugin.h<br>
gs/lcms2/src/Makefile.am<br>
gs/lcms2/src/Makefile.in<br>
gs/lcms2/src/cmscam02.c<br>
gs/lcms2/src/cmscgats.c<br>
gs/lcms2/src/cmscnvrt.c<br>
gs/lcms2/src/cmserr.c<br>
gs/lcms2/src/cmsgamma.c<br>
gs/lcms2/src/cmsgmt.c<br>
gs/lcms2/src/cmshalf.c<br>
gs/lcms2/src/cmsintrp.c<br>
gs/lcms2/src/cmsio0.c<br>
gs/lcms2/src/cmsio1.c<br>
gs/lcms2/src/cmslut.c<br>
gs/lcms2/src/cmsmd5.c<br>
gs/lcms2/src/cmsmtrx.c<br>
gs/lcms2/src/cmsnamed.c<br>
gs/lcms2/src/cmsopt.c<br>
gs/lcms2/src/cmspack.c<br>
gs/lcms2/src/cmspcs.c<br>
gs/lcms2/src/cmsplugin.c<br>
gs/lcms2/src/cmsps2.c<br>
gs/lcms2/src/cmssamp.c<br>
gs/lcms2/src/cmssm.c<br>
gs/lcms2/src/cmstypes.c<br>
gs/lcms2/src/cmsvirt.c<br>
gs/lcms2/src/cmswtpnt.c<br>
gs/lcms2/src/cmsxform.c<br>
gs/lcms2/src/cmsxform.h<br>
gs/lcms2/src/cmsxform_extras.c<br>
gs/lcms2/src/lcms2.def<br>
gs/lcms2/src/lcms2_internal.h<br>
gs/lcms2/testbed/Makefile.am<br>
gs/lcms2/testbed/Makefile.in<br>
gs/lcms2/testbed/testcms2.c<br>
gs/lcms2/utils/common/utils.h<br>
gs/lcms2/utils/common/vprf.c<br>
gs/lcms2/utils/common/xgetopt.c<br>
gs/lcms2/utils/delphi/lcms2dll.pas<br>
gs/lcms2/utils/jpgicc/Makefile.in<br>
gs/lcms2/utils/jpgicc/jpgicc.c<br>
gs/lcms2/utils/linkicc/Makefile.in<br>
gs/lcms2/utils/psicc/Makefile.in<br>
gs/lcms2/utils/tificc/Makefile.in<br>
gs/lcms2/utils/tificc/tificc.c<br>
gs/lcms2/utils/transicc/Makefile.in<br>
gs/lcms2/utils/transicc/transicc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-21 19:07:48 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2346369bb7536062946d409f940e865791afc34a">2346369bb7536062946d409f940e865791afc34a</a>
<blockquote>
<p>
    Fix typo in previous commit; return NULL in void function.<br>
<br>
    MSVC and gcc both accept it with a warning, hence I didn't spot it.<br>
    Sorry.<br>
<br>
gs/base/gslibctx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-25 00:38:56 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0eae840336f244e5b0d195109e1dd9e104396d87">0eae840336f244e5b0d195109e1dd9e104396d87</a>
<blockquote>
<p>
    Arrange for gscms_create/destroy to be called correctly.<br>
<br>
    gscms_create should be called before any other cms call is made,<br>
    but it's not being. It not being called has meant that lcms has<br>
    always been using malloc/free rather than the gs allocation<br>
    functions. Fix some bugs in those allocation functions that show<br>
    up now they are used.<br>
<br>
    Also ensure that pointers are correctly enumerated.<br>
<br>
    Ensure that cms set context pointer actually makes it into links.<br>
<br>
    Update gscms interface to ensure that errors on gscms_create can<br>
    be responded to.<br>
<br>
    This work has exposed a problem wrt the context pointer in the<br>
    gscms interface, so we fix that here too.<br>
<br>
    The theory has always been that we can drop new and different<br>
    CMS engines into ghostscript, by wrapping each one with some code<br>
    that implements the gscms_ functions from gsicc_cms.h.<br>
<br>
    While this interface was developing, I started to add support for<br>
    a context pointer, but looking back at it, it seems I never<br>
    completed the work and it was left in a state where it was useless.<br>
<br>
    After much discussion with Michael, we've decided that the best way<br>
    to proceed is to arrange for gscms_create to be called when gs<br>
    starts up (just after the base level allocator is created), and for<br>
    gscms_destroy to be called as gs exits (just before the base level<br>
    allocator is destroyed).<br>
<br>
    This base level allocator is passed into gscms_create/gscms_destroy<br>
    so it can safely allocate memory. Furthermore, we have done away<br>
    with explicitly passing the cms_context pointer around, as it was<br>
    not really any use in its current form. Instead, we have added<br>
    functions to get/set the context pointer in the gs_lib_ctx.<br>
<br>
      void *gs_lib_ctx_get_cms_context( const gs_memory_t *mem );<br>
      void gs_lib_ctx_set_cms_context( const gs_memory_t *mem, void *cms_context );<br>
<br>
    As the gscms functions take mem pointers in all the interesting<br>
    places, this should be sufficient.<br>
<br>
    As mkromfs calls the gs lib ctx init stuff, we have had to add stubs<br>
    for gscms_create/destroy to mkromfs.c.<br>
<br>
gs/base/gscms.h<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cache.h<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_lcms.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_nocm.c<br>
gs/base/gslibctx.c<br>
gs/base/gslibctx.h<br>
gs/base/gsmalloc.c<br>
gs/base/mkromfs.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-21 13:52:25 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ef93d4d8f33149cb7d244da52d47e82a11f9019">8ef93d4d8f33149cb7d244da52d47e82a11f9019</a>
<blockquote>
<p>
    Fix LCMS threading issue with plugin registration.<br>
<br>
    When registering a plugin, allocations can be done. This can result<br>
    in calls back to the user supplied malloc functions, which assume<br>
    that a cmsContext will be supplied. In the current code there is<br>
    no way to pass a cmsContext into the plugin registration.<br>
<br>
    We therefore add a new function cmsPluginTHR that does take such a<br>
    context.<br>
<br>
    Currently this isn't called yet, as gscms_create/destroy aren't correctly<br>
    called.<br>
<br>
gs/lcms2/include/lcms2.h<br>
gs/lcms2/src/cmscnvrt.c<br>
gs/lcms2/src/cmsgamma.c<br>
gs/lcms2/src/cmsopt.c<br>
gs/lcms2/src/cmspack.c<br>
gs/lcms2/src/cmsplugin.c<br>
gs/lcms2/src/cmstypes.c<br>
gs/lcms2/src/lcms2_internal.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-20 20:12:27 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=81946ddaca41eb0726d4435a6217b3e017bd7a8c">81946ddaca41eb0726d4435a6217b3e017bd7a8c</a>
<blockquote>
<p>
    Patch LCMS threading bug.<br>
<br>
    LCMS maintains a ContextID for the sake of the allocator callbacks.<br>
    In the call sequence through, it was losing this and ending up with<br>
    the allocators being called with NULL.<br>
<br>
    Simple fix.<br>
<br>
gs/lcms2/src/cmssamp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-20 17:18:39 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a70a32618642f17104747dc2f5785775b42495b">7a70a32618642f17104747dc2f5785775b42495b</a>
<blockquote>
<p>
    pdfwrite - linearisation, correctly renumber resoruces in arrays<br>
<br>
    The code to renumber resources was only checking for indirect references in<br>
    dictionaries, we need to check arrays as well.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-20 15:47:08 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=455ecb61885dcceccb23fb16518bb1790c40eb40">455ecb61885dcceccb23fb16518bb1790c40eb40</a>
<blockquote>
<p>
    pdfwrite - linearisation bug fixes<br>
<br>
    Allow return code to be 0 when seeking so we don't lose the first part of<br>
    the linearised file.<br>
<br>
    If the input job makes marks on the final page, but does not call showpage,<br>
    we discard the final page. This can lead to resources being marked as 'used'<br>
    on pages that no longer exist. We now ignore such usage.<br>
<br>
    Fix an 'off by 1' error when indexing an array using paeg numbers<br>
    (page numebrs are 1-&gt;n, array is 0-&gt;n-1)<br>
<br>
    Put a #ifdef round some debug prints so they don't end up in the cluster log<br>
<br>
    Some resources are only used by other resources (eg Encoding) and should take<br>
    on the Page Usage of their parent. If the parent resource was shared we werne't<br>
    correclty updating the child with all the pages the parent was used on.<br>
<br>
    Some memory was being double freed causing seg faults.<br>
<br>
    No differences expetced as cluster doesn't test linearisation.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-19 16:42:42 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cd4826a3a5e3000df0e5f787e3b6ceec88c43885">cd4826a3a5e3000df0e5f787e3b6ceec88c43885</a>
<blockquote>
<p>
    Remove gs_lib_ctx_get_non_gc_memory_t in GS_THREADSAFE builds.<br>
<br>
    gs_lib_ctx_get_non_gc_memory_t relied on a static to implement it,<br>
    so is incompatible with multi-threaded builds. Removing it<br>
    causes various devices/bits of code to break. We fix the<br>
    important (i.e. mostly non-contrib) devices that use it here.<br>
<br>
    We also rework the gscms/lcms interface code to avoid it too.<br>
<br>
    With this commit in, helgrind apitests tiger to ppmraw as being<br>
    clean.<br>
<br>
gs/base/gdevrinkj.c<br>
gs/base/gdevxcf.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_lcms.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gslibctx.c<br>
gs/base/gslibctx.h<br>
gs/psi/zicc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-19 16:16:32 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9ccfc96d8885b419437f985baa7d26db3ff1950a">9ccfc96d8885b419437f985baa7d26db3ff1950a</a>
<blockquote>
<p>
    Add some PACIFY_VALGRIND magic for helgrind.<br>
<br>
    Various bits of code (notably gs_debug, some clist function pointers<br>
    and some constants in lcms) are held in statics. We accept that<br>
    gs_debug is going to be thread unsafe and choose to ignore it.<br>
    The others are initialised multiple times (to the same values) and<br>
    then never changed.<br>
<br>
    Helgrind is not smart enough to see that these are repeatedly<br>
    updated to the same values, so flags an error every time they are<br>
    written to.<br>
<br>
    We therefore add a bit of Valgrind magic before these places to<br>
    tell it to ignore these addresses when checking.<br>
<br>
gs/base/gsinit.c<br>
gs/base/gxclfile.c<br>
gs/base/gxclist.c<br>
gs/base/gxclmem.c<br>
gs/lcms2/src/cmserr.c<br>
gs/lcms2/src/cmswtpnt.c<br>
gs/psi/imain.c<br>
pl/plplatf.c<br>
pl/plplatfps.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-19 16:11:58 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9171c68f18ba278aa72df4a30ba89bb5400bdd79">9171c68f18ba278aa72df4a30ba89bb5400bdd79</a>
<blockquote>
<p>
    Disable various bits of debugging stats etc for GS_THREADSAFE<br>
<br>
    Various bits of code use statics to gather statistics in DEBUG<br>
    builds; disable these in GS_THREADSAFE builds as they are<br>
    incompatible with multi-threaded operation.<br>
<br>
gs/base/gdevm24.c<br>
gs/base/gdevm40.c<br>
gs/base/gdevm48.c<br>
gs/base/gdevm56.c<br>
gs/base/gdevm64.c<br>
gs/base/gxclip.c<br>
gs/base/gxfill.c<br>
gs/psi/idict.c<br>
gs/psi/idstack.c<br>
gs/psi/interp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-19 13:05:20 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2e03d8c5aac80eb56cb9097a316dc36bf311d380">2e03d8c5aac80eb56cb9097a316dc36bf311d380</a>
<blockquote>
<p>
    Update LCMS2 to avoid race condition in Tag handling.<br>
<br>
    LCMS2 as supplied (in both 2.3 and 2.4 at least) is broken w.r.t<br>
    multitasking due to a race condition in the Tag handling.<br>
<br>
    When a TagTypeHandler is needed, it is looked up from a system table.<br>
    The existing code then writes into this table with the ContextID and<br>
    calls the handler. This is a race condition if 2 threads are using<br>
    the same TagTypeHandler at a time.<br>
<br>
    The fix implemented here is to copy the TagTypeHandler structure to a<br>
    local one, write the ContextID into that, and then call through that.<br>
<br>
gs/lcms2/src/cmsio0.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-13 00:40:03 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6777c88fab2afc3e6558fda1dfb51110088ede61">6777c88fab2afc3e6558fda1dfb51110088ede61</a>
<blockquote>
<p>
    Introduce GS_THREADSAFE define and modify printing calls.<br>
<br>
    Lots of debugging/error information is printed using eprintf and<br>
    dlprintf etc. These functions do not take a gs_memory_t * and are<br>
    not safe for use within code that runs under multiple instances<br>
    created by gsapi.<br>
<br>
    Introduce new versions (dmprintf, dmlprintf etc) that DO take a<br>
    gs_memory_ *, and move as much of ghostscript/ghostpdl's usage<br>
    over to these as possible. I have not touched the contrib directory,<br>
    and some locations in the code do not easily have a gs_memory_t<br>
    to hand, so I have left them be.<br>
<br>
    If the GS_THREADSAFE define is made during building, then the<br>
    functions that don't take an explicit memory handle are #defined<br>
    away to nothing.<br>
<br>
    If the GS_THREADSAFE define is made, we disable the gsapi check that<br>
    checks for a single init.<br>
<br>
gs/base/gdebug.h<br>
gs/base/gdevabuf.c<br>
gs/base/gdevbbox.c<br>
gs/base/gdevdbit.c<br>
gs/base/gdevdevn.c<br>
gs/base/gdevdevn.h<br>
gs/base/gdevdflt.c<br>
gs/base/gdevdrop.c<br>
gs/base/gdevfax.c<br>
gs/base/gdevhl7x.c<br>
gs/base/gdevifno.c<br>
gs/base/gdevijs.c<br>
gs/base/gdevjpx.c<br>
gs/base/gdevm1.c<br>
gs/base/gdevm24.c<br>
gs/base/gdevmr1.c<br>
gs/base/gdevmr8n.c<br>
gs/base/gdevnfwd.c<br>
gs/base/gdevp14.c<br>
gs/base/gdevpbm.c<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevperm.c<br>
gs/base/gdevplan.c<br>
gs/base/gdevplib.c<br>
gs/base/gdevprn.c<br>
gs/base/gdevpsd.c<br>
gs/base/gdevpsds.c<br>
gs/base/gdevpsf2.c<br>
gs/base/gdevpsft.c<br>
gs/base/gdevpsfx.c<br>
gs/base/gdevpx.c<br>
gs/base/gdevrinkj.c<br>
gs/base/gdevsppr.c<br>
gs/base/gdevsvg.c<br>
gs/base/gdevsvga.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevtsep.c<br>
gs/base/gdevx.c<br>
gs/base/gdevxcf.c<br>
gs/base/gdevxcmp.c<br>
gs/base/gp_unifs.c<br>
gs/base/gp_unix.c<br>
gs/base/gsalloc.c<br>
gs/base/gsalphac.c<br>
gs/base/gscdevn.c<br>
gs/base/gschar0.c<br>
gs/base/gscie.c<br>
gs/base/gsciemap.c<br>
gs/base/gscoord.c<br>
gs/base/gscsepr.c<br>
gs/base/gscspace.c<br>
gs/base/gsequivc.c<br>
gs/base/gserrors.h<br>
gs/base/gsfcmap1.c<br>
gs/base/gsfont.c<br>
gs/base/gshsb.c<br>
gs/base/gsht.c<br>
gs/base/gsht1.c<br>
gs/base/gshtscr.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_profilecache.c<br>
gs/base/gsimage.c<br>
gs/base/gslib.c<br>
gs/base/gslibctx.c<br>
gs/base/gsmalloc.c<br>
gs/base/gsmchunk.c<br>
gs/base/gsmemory.c<br>
gs/base/gsmisc.c<br>
gs/base/gsovrc.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gsptype1.c<br>
gs/base/gsrefct.h<br>
gs/base/gsstate.c<br>
gs/base/gsstruct.h<br>
gs/base/gstrans.c<br>
gs/base/gstype1.c<br>
gs/base/gstype2.c<br>
gs/base/gstype42.c<br>
gs/base/gxacpath.c<br>
gs/base/gxalloc.h<br>
gs/base/gxblend.c<br>
gs/base/gxblend1.c<br>
gs/base/gxccache.c<br>
gs/base/gxccman.c<br>
gs/base/gxchar.c<br>
gs/base/gxclbits.c<br>
gs/base/gxcldev.h<br>
gs/base/gxclimag.c<br>
gs/base/gxclip.c<br>
gs/base/gxclip2.c<br>
gs/base/gxclipm.c<br>
gs/base/gxclist.c<br>
gs/base/gxclmem.c<br>
gs/base/gxclpath.c<br>
gs/base/gxclrast.c<br>
gs/base/gxclread.c<br>
gs/base/gxclrect.c<br>
gs/base/gxclthrd.c<br>
gs/base/gxclutil.c<br>
gs/base/gxcmap.c<br>
gs/base/gxcpath.c<br>
gs/base/gxdcconv.c<br>
gs/base/gxdevndi.c<br>
gs/base/gxdtfill.h<br>
gs/base/gxfapiu.c<br>
gs/base/gxfill.c<br>
gs/base/gxfillsl.h<br>
gs/base/gxfilltr.h<br>
gs/base/gxht.c<br>
gs/base/gxi12bit.c<br>
gs/base/gxicolor.c<br>
gs/base/gxidata.c<br>
gs/base/gxifast.c<br>
gs/base/gximag3x.c<br>
gs/base/gximage.c<br>
gs/base/gximage3.c<br>
gs/base/gximono.c<br>
gs/base/gxipixel.c<br>
gs/base/gxiscale.c<br>
gs/base/gxmclip.c<br>
gs/base/gxp1fill.c<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpcmap.c<br>
gs/base/gxpflat.c<br>
gs/base/gxstroke.c<br>
gs/base/gxtype1.c<br>
gs/base/lib.mak<br>
gs/base/sbwbs.c<br>
gs/base/scfd.c<br>
gs/base/scfe.c<br>
gs/base/sdctd.c<br>
gs/base/sdcte.c<br>
gs/base/sfilter2.c<br>
gs/base/sfxfd.c<br>
gs/base/sfxstdio.c<br>
gs/base/shc.h<br>
gs/base/shcgen.c<br>
gs/base/sidscale.c<br>
gs/base/siscale.c<br>
gs/base/sjbig2.c<br>
gs/base/sjbig2_luratech.c<br>
gs/base/sjpx_luratech.c<br>
gs/base/slzwd.c<br>
gs/base/slzwe.c<br>
gs/base/std.h<br>
gs/base/stream.c<br>
gs/contrib/pcl3/eprn/eprnparm.c<br>
gs/contrib/pcl3/eprn/eprnrend.c<br>
gs/contrib/pcl3/eprn/gdeveprn.c<br>
gs/contrib/pcl3/src/gdevpcl3.c<br>
gs/cups/gdevcups.c<br>
gs/psi/fapiufst.c<br>
gs/psi/ialloc.c<br>
gs/psi/iapi.c<br>
gs/psi/idebug.c<br>
gs/psi/idict.c<br>
gs/psi/idisp.c<br>
gs/psi/idstack.c<br>
gs/psi/igc.c<br>
gs/psi/igcref.c<br>
gs/psi/igcstr.c<br>
gs/psi/igcstr.h<br>
gs/psi/ilocate.c<br>
gs/psi/imain.c<br>
gs/psi/imainarg.c<br>
gs/psi/iname.c<br>
gs/psi/interp.c<br>
gs/psi/ireclaim.c<br>
gs/psi/isave.c<br>
gs/psi/iscan.c<br>
gs/psi/zcie.c<br>
gs/psi/zcolor.c<br>
gs/psi/zcontext.c<br>
gs/psi/zdscpars.c<br>
gs/psi/zfapi.c<br>
gs/psi/zfcid0.c<br>
gs/psi/zfile.c<br>
gs/psi/zfjbig2.c<br>
gs/psi/zfjpx.c<br>
gs/psi/zicc.c<br>
gs/psi/zpcolor.c<br>
gs/psi/zvmem.c<br>
pcl/pccid.c<br>
pcl/pccid.h<br>
pcl/pccsbase.c<br>
pcl/pcfont.c<br>
pcl/pcfsel.c<br>
pcl/pcindxed.c<br>
pcl/pcmacros.c<br>
pcl/pcpage.c<br>
pcl/pcparse.c<br>
pcl/pcpatrn.c<br>
pcl/pcsfont.c<br>
pcl/pcsymbol.c<br>
pcl/pctext.c<br>
pcl/pctop.c<br>
pcl/pgconfig.c<br>
pcl/pgdraw.c<br>
pcl/pginit.c<br>
pcl/pglabel.c<br>
pcl/pgmisc.c<br>
pcl/pgparse.c<br>
pcl/pgvector.c<br>
pl/pjparse.c<br>
pl/plchar.c<br>
pl/plfont.c<br>
pl/pllfont.c<br>
pl/plmain.c<br>
pl/plsrgb.c<br>
pl/plsymbol.c<br>
pl/plsymbol.h<br>
pl/pluchar.c<br>
pl/plulfont.c<br>
pxl/pxffont.c<br>
pxl/pxfont.c<br>
pxl/pxgstate.c<br>
pxl/pximage.c<br>
pxl/pxink.c<br>
pxl/pxparse.c<br>
pxl/pxpthr.c<br>
pxl/pxsessio.c<br>
svg/svgshapes.c<br>
svg/svgtop.c<br>
xps/ghostxps.h<br>
xps/xpsanalyze.c<br>
xps/xpscff.c<br>
xps/xpsdoc.c<br>
xps/xpsglyphs.c<br>
xps/xpsgradient.c<br>
xps/xpsimage.c<br>
xps/xpspage.c<br>
xps/xpspath.c<br>
xps/xpsresource.c<br>
xps/xpstop.c<br>
xps/xpsttf.c<br>
xps/xpsxml.c<br>
xps/xpszip.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-18 05:06:55 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1fa1eca3be2955e1ed1f8433c18d06417ea85f4c">1fa1eca3be2955e1ed1f8433c18d06417ea85f4c</a>
<blockquote>
<p>
    Perl script to drive apitest.<br>
<br>
    Runs over a given set of devices/set of test files. Run apitest on each<br>
    checking that output/stdout/stderr etc are the same for all threads.<br>
<br>
gs/toolbin/apitest.pl<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-09 07:58:30 -0700
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c74f2aa1128c39a2f75a6626f6a59d4f854dc94">4c74f2aa1128c39a2f75a6626f6a59d4f854dc94</a>
<blockquote>
<p>
    Simple apitest program.<br>
<br>
    Requires pthreads. Build with &quot;make apitest&quot; within gs.<br>
<br>
    Invoke with a ghostscript like command line: e.g.<br>
<br>
     bin/apitest -sDEVICE=pdfwrite -o outfile.%d. examples/tiger.eps<br>
<br>
    The command line must have a -o in it, because it rewrites the<br>
    &quot;outfile.%d.&quot; to be &quot;outfile.%d.THREADNUM&quot; where THREADNUM is 0 to 9<br>
    (change NUM_THREADS in psi/apitest.c to change this).<br>
<br>
    stdout and stderr are redirected to each stdout.THREADNUM and<br>
    stderr.THREADNUM respectively.<br>
<br>
gs/base/ugcclib.mak<br>
gs/base/unix-end.mak<br>
gs/base/unixlink.mak<br>
gs/psi/apitest.c<br>
gs/psi/iapi.c<br>
gs/psi/int.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-18 09:54:01 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=88077be834a9034282355e76bac1e76b66778483">88077be834a9034282355e76bac1e76b66778483</a>
<blockquote>
<p>
    Add a newline to the end of the file because Visual Studio won't correctly<br>
    compile it otherwise.<br>
<br>
gs/base/gscms.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-17 22:47:51 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8d274958209aed769e9804d0704c199b8f5cb4af">8d274958209aed769e9804d0704c199b8f5cb4af</a>
<blockquote>
<p>
    Added 'relaxtimeout' option to clusterpush.pl (and to the documentation).<br>
<br>
gs/toolbin/localcluster/clusterpush.pl<br>
gs/toolbin/localcluster/clusterpush.txt<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-12 04:32:52 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82c3d60735ef1a7e702db6833c1c709edeaca1d4">82c3d60735ef1a7e702db6833c1c709edeaca1d4</a>
<blockquote>
<p>
    Initial work towards adding in support for use of DeviceN ICC color profiles as the output profile.<br>
<br>
gs/base/gdevpdfk.c<br>
gs/base/gscms.h<br>
gs/base/gsdparam.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-17 08:53:10 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=928e28bc3521f479eb997eddfd8cffcb7a042cea">928e28bc3521f479eb997eddfd8cffcb7a042cea</a>
<blockquote>
<p>
    pdfwrite - improve Outline handling when processing a subset of pages from PDF input<br>
<br>
    The Outline pdfmarks could get confused if a leaf node was elided due to its<br>
    Viwe or Dest page lying outside the range of pages processed from a PDF file.<br>
    This could lead to nesting going wrong and trying to create more than 32 levels<br>
    of nodes.<br>
<br>
    This commit moves the checking of the Dest and View pages from the PDF interpreter<br>
    into pdfwrite, which means pdfwrite now needs to pick up the FirstPage and<br>
    LastPage switches. If a destination page lies outside the processed range we<br>
    need to preserve it (so that the tree works out properly), but we don't write<br>
    the View or Dest property, so that we don't point to non-existent pages.<br>
<br>
    No differences epxected this is not cluster tested.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfm.c<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfx.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-14 23:09:51 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=486dd619f9a705e4f9871974a5f0833964c1f32a">486dd619f9a705e4f9871974a5f0833964c1f32a</a>
<blockquote>
<p>
    Bug 688288: Finish transparency structure cleanup<br>
<br>
    Finish the cleanup started by rev. 0025b68a2df. Remove implementation<br>
    of zdiscardtransparencygroup and zdiscardtransparencymask operators from<br>
    the code base and their invocation from PDF interpreter.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
gs/Resource/Init/pdf_main.ps<br>
gs/psi/ztrans.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-14 11:11:46 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4808e18412d21da480ed7a7628015941fc596a08">4808e18412d21da480ed7a7628015941fc596a08</a>
<blockquote>
<p>
    pdfwrite - track form depth when creating forms with BP pdfmark<br>
<br>
    Bug #693327<br>
<br>
    In order to properly set the co-ordinate space for patterns inside forms<br>
    we need to know the form's default co-ordinate space. To do this we keep<br>
    a record of the nested form depth. However this wasn't being updated when<br>
    we created a new form with the /BP pdfmark.<br>
<br>
    This commit fixes that.<br>
<br>
gs/base/gdevpdfm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-14 09:59:22 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dfcfd64d31e6e6c5e07dfcb793e0c781e180afd0">dfcfd64d31e6e6c5e07dfcb793e0c781e180afd0</a>
<blockquote>
<p>
    pdfwrite, ps2write, txtwrite - add support for RTL DL<br>
<br>
    Commit 062c0b5847519633e4349cf3a1f0830e529c4842 implements the HPGL/RTL<br>
    Download Character (DL) operation. This commit adds support for the new<br>
    font type defined as part of that update.<br>
<br>
    Text using the DL font should now be preserved as text using a type 3 font<br>
    in pdfwrite or ps2write, permitting search and copy operations, and should<br>
    be extracted properly by the txtwrite device.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtf.c<br>
gs/base/gdevpdti.c<br>
gs/base/gdevpdts.c<br>
gs/base/gdevpdtt.c<br>
gs/base/gdevpdtw.c<br>
gs/base/gdevtxtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 10:34:22 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0025b68a2df2f7c68cdcf4ebe0b3b9901c6a3698">0025b68a2df2f7c68cdcf4ebe0b3b9901c6a3698</a>
<blockquote>
<p>
    Clean up of some of the transparency structures<br>
<br>
    The graphic state had vestiges of someones attempt to put the transparency<br>
    stack into the graphic state.   This is confusing for those looking at the code.<br>
    This clean up is suggested in Bug 688288.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfg.c<br>
gs/base/gdevpdft.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gsistate.c<br>
gs/base/gsstate.c<br>
gs/base/gstparam.h<br>
gs/base/gstrans.c<br>
gs/base/gstrans.h<br>
gs/base/gxdevcli.h<br>
gs/base/gxistate.h<br>
gs/base/gzstate.h<br>
gs/psi/ztrans.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-13 15:58:33 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bfae0b91bbe273318284a01d67b746b365827bb6">bfae0b91bbe273318284a01d67b746b365827bb6</a>
<blockquote>
<p>
    ps2write - correct %%BoundingBox comment<br>
<br>
    The upper right y co-ordinate of the bounding box was being incorrectly<br>
    set. Also added the %%HiResBoundingBox comment. Although this is not a<br>
    DSC 3 standard comment it is widely used.<br>
<br>
    No diffrences expected.<br>
<br>
gs/base/gdevpdfu.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-13 14:53:15 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44d00dd1bd34e2fb735d4682b73d880e208f92bd">44d00dd1bd34e2fb735d4682b73d880e208f92bd</a>
<blockquote>
<p>
    pdfwrite - improve subset font prefix generation<br>
<br>
    We generate the prefix for a subset font by creating a hash from the<br>
    usage pattern of glyphs in a font. If the font was already subset, and<br>
    'compact' (ie glyphs are used in order from 1 to n), then it was possible<br>
    to generate the same prefix for two differetn subsets of the same font.<br>
<br>
    In fact this is always possible, but here we add a heuristic which uses<br>
    the MD5 hash we create for stream objects as an additional hash when<br>
    generating the subset prefix. This does not guarantee that name collisions<br>
    won't occur but should reduce the incidence still further.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdtb.c<br>
gs/base/gdevpdtb.h<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdtd.h<br>
gs/base/gdevpdtf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-13 14:48:25 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e8cfe956fe45fa949d22b10e2af665506e49fde4">e8cfe956fe45fa949d22b10e2af665506e49fde4</a>
<blockquote>
<p>
    pdfwrite - linearisation, cater for unused objects<br>
<br>
    If we had an object which wasn't used on any page then we would try to add<br>
    it to the page or shared hints, which we obviously shouldn't, and which could<br>
    potentially cause a seg fault.<br>
<br>
    With this change we simply don't add such objects to the hints.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-13 08:31:24 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23d410c021a2b038ac5535e9eb028d6a808801ea">23d410c021a2b038ac5535e9eb028d6a808801ea</a>
<blockquote>
<p>
    pdfwrite - squash compiler warnings<br>
<br>
    a couple of compiler warnings on debug print messages.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 16:27:04 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e1ab0bc7410ec278f489a2e0c469a23b7aa17e9">8e1ab0bc7410ec278f489a2e0c469a23b7aa17e9</a>
<blockquote>
<p>
    pdfwrite - fix ridiculous typo in last commit....<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 16:17:41 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=119717599c8ab62b037f61b8f042a1eeae39b2f4">119717599c8ab62b037f61b8f042a1eeae39b2f4</a>
<blockquote>
<p>
    pdfwrite - linearisation fix stupid mistake causing infinte loop<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 12:54:54 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a010600d3d99b16251fbfa5fede57d4583978632">a010600d3d99b16251fbfa5fede57d4583978632</a>
<blockquote>
<p>
    pdfwrite - fix another compiler warning<br>
<br>
    This warning didn't show up previously, I have no idea why.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 10:08:27 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa335a8a51261060aab8726fd300161d3b6f4334">aa335a8a51261060aab8726fd300161d3b6f4334</a>
<blockquote>
<p>
    pdfwrite - linearisation, tidy up compiler warnings<br>
<br>
    also remove an accidentally commited change which led to us writing<br>
    invalid xref tables.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-06 11:33:42 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc538635d876a99e7cfc32b4c525126093fea67a">fc538635d876a99e7cfc32b4c525126093fea67a</a>
<blockquote>
<p>
    Add in option of -dPreBandThreshold=true/false to specify thresholding prior to clist<br>
<br>
    When halftoning, it may be advantageous from a memory storage to halftone an image pre-clist.<br>
    This adds code to check if the halftoned image at device resolution is smaller than the source<br>
    image.  It it is, then the image will by default be rendered before going into the clist.<br>
    This option is turned off through the use of the device parameter -dPreBandThreshold=false<br>
<br>
gs/base/gscms.h<br>
gs/base/gsdparam.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gxclimag.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-11 12:51:05 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8c77c16ad0f4e2bd107f6fa1a024c412e889a0ba">8c77c16ad0f4e2bd107f6fa1a024c412e889a0ba</a>
<blockquote>
<p>
    Convert BitsPerComponent to an integer when we get a float.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-11 09:53:46 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=062c0b5847519633e4349cf3a1f0830e529c4842">062c0b5847519633e4349cf3a1f0830e529c4842</a>
<blockquote>
<p>
    HPGL/RTL DL (Download Character) implementation.<br>
<br>
gs/base/gxftype.h<br>
pcl/pgchar.c<br>
pcl/pgfdata.c<br>
pcl/pgfdata.h<br>
pcl/pgfont.c<br>
pcl/pgfont.h<br>
pcl/pglabel.c<br>
pcl/pgmand.h<br>
pcl/pgstate.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-07 13:13:30 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=423501bbe9be110622edf4ef001edbd289136ee0">423501bbe9be110622edf4ef001edbd289136ee0</a>
<blockquote>
<p>
    A silly typo in an accessor function.<br>
<br>
    Fortunately, this function is mainly used only for debugging purposes.<br>
<br>
pcl/pccid.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-12 14:39:10 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1245d1ad8e4400b6689132d32ee174041eaa60e4">1245d1ad8e4400b6689132d32ee174041eaa60e4</a>
<blockquote>
<p>
    pdfwrite - sanitise linearisation file accesses to be 64-bit<br>
<br>
    Change all the fteel/fseel calls to use gp_***_64 so that we don't trip<br>
    over a maximum 4Gb.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-10 16:14:15 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5a1438b9f9d27be7e423300f563833a9d0d03ee4">5a1438b9f9d27be7e423300f563833a9d0d03ee4</a>
<blockquote>
<p>
    Fix for an indeterminism in the fast thresholding code<br>
<br>
    A byte of nonsense data was getting included with the image data to which we were thresholding<br>
    in very special resolution cases.<br>
<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-10 21:48:00 +0100
</strong>
<br>unknown &lt;ken@.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3904374b1a567ecbad3d496fc0cdac354225224a">3904374b1a567ecbad3d496fc0cdac354225224a</a>
<blockquote>
<p>
    pdfwrite - linearisation, memory cleanup<br>
<br>
    Free all the memory used in the course of producing a linearised PDF file.<br>
<br>
    No differences expected, not tested by cluster<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-09 18:43:52 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a56f4eb5a9f15795725374b297edab0fb8ebc5d">3a56f4eb5a9f15795725374b297edab0fb8ebc5d</a>
<blockquote>
<p>
    Bug 693045: Correctly restore PS stack when PDF stream run aborts.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-09 11:33:53 -0700
</strong>
<br>Tor Andersson &lt;tor.andersson@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7de89cff326888d9129b0ae6e4d003fd538b8321">7de89cff326888d9129b0ae6e4d003fd538b8321</a>
<blockquote>
<p>
    Merge 'gs/jbig2dec/' from jbig2dec.git using git-subtree<br>
<br>
    git-subtree-dir: gs/jbig2dec<br>
    git-subtree-mainline: faac14fb1532533a811649cef2b68cf95ec50fdf<br>
    git-subtree-split: 7a82fc0abd135e08875ec4941ba43e832bc1b7f3<br>
<br>
gs/jbig2dec/.cvsignore<br>
gs/jbig2dec/.gitignore<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-29 16:19:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a82fc0abd135e08875ec4941ba43e832bc1b7f3">7a82fc0abd135e08875ec4941ba43e832bc1b7f3</a>
<blockquote>
<p>
    Remove dependence on jbig2dec auto-generated files<br>
<br>
    Also provide a workaround for LCMS2 on systems without sqrtf().<br>
<br>
    No cluster differences<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-24 15:19:29 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a424b8fa0e30b76b49b9c2f2fe167e5dc653073">3a424b8fa0e30b76b49b9c2f2fe167e5dc653073</a>
<blockquote>
<p>
    Update the libpng check to a non-deprecated API call.<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 15:09:41 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=07abb8a54e2d910e3b5a73341b7912948e0d0b61">07abb8a54e2d910e3b5a73341b7912948e0d0b61</a>
<blockquote>
<p>
    Bug 693298; Memento tweak for memset compile problem.<br>
<br>
    Don't define memset if someone has already #defined it. Thanks to<br>
    William Bader.<br>
<br>
memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 15:03:03 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e5cff776abeb065e2c4ef5092256486fc3a2d35">5e5cff776abeb065e2c4ef5092256486fc3a2d35</a>
<blockquote>
<p>
    Revert &quot;Move memento include from jbig2.h to jbig2_priv.h&quot;<br>
<br>
    This reverts commit 91744cfb2fe5d8b5b66d31077b4b22c6b3c905a2.<br>
<br>
    This broke the memento build of gs due to the #defining of<br>
    free/realloc. For now, we'll have to live with the include<br>
    in the public header.<br>
<br>
jbig2.h<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 13:34:43 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91744cfb2fe5d8b5b66d31077b4b22c6b3c905a2">91744cfb2fe5d8b5b66d31077b4b22c6b3c905a2</a>
<blockquote>
<p>
    Move memento include from jbig2.h to jbig2_priv.h<br>
<br>
    There is no need to expose memento outside of jbig2. Thanks to<br>
    zeniko for the discussion in bug 693284 that lead to this.<br>
<br>
jbig2.h<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-13 17:03:22 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=13cc9dc158f12c3f446579655e942e44ac158634">13cc9dc158f12c3f446579655e942e44ac158634</a>
<blockquote>
<p>
    Update copyright headers.<br>
<br>
config_win32.h<br>
jbig2.c<br>
jbig2.h<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_halftone.c<br>
jbig2_halftone.h<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2_text.h<br>
jbig2dec.c<br>
memcmp.c<br>
memento.c<br>
memento.h<br>
os_types.h<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 17:13:39 +0200
</strong>
<br>Sebastian Rasmussen &lt;sebras@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=48fd721f3fb53b3fd10456e508b06d808ee9e647">48fd721f3fb53b3fd10456e508b06d808ee9e647</a>
<blockquote>
<p>
    Bug 693256: Free GR_/GB_stats......<br>
<br>
    ....as long as retaining them is yet to be implemented<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 15:24:43 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=28cc0cf46dc9455545631e54070edc2a8adc15e0">28cc0cf46dc9455545631e54070edc2a8adc15e0</a>
<blockquote>
<p>
    Remove files for unsupported build tools.<br>
<br>
Jamfile<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-08 15:51:43 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=536620333aa7b752506626dce651ede08e2cdbc9">536620333aa7b752506626dce651ede08e2cdbc9</a>
<blockquote>
<p>
    Enable Memento to be used with jbig2dec<br>
<br>
    ./configure or ./autogen.sh as usual, then<br>
    &quot;make XCFLAGS=-DMEMENTO&quot;.<br>
<br>
    This involves duplicating memento within jbig2dec. We disable the GS<br>
    specific build hacks, and add just one more; if GSBUILD is defined<br>
    then jbig2 uses the version of memento from base, rather than the version<br>
    of memento from inside jbig2. This avoids any potential problems with<br>
    version skew.<br>
<br>
Makefile.am<br>
jbig2.h<br>
memento.c<br>
memento.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-03 22:52:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e37802e46e06e7c3d9f01d626b244771bcad76a1">e37802e46e06e7c3d9f01d626b244771bcad76a1</a>
<blockquote>
<p>
    Bug 693050 : Fix compiler warnings<br>
<br>
jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-02 22:49:17 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b311c624ce08c9c702ba4e88e2b0d787830334d">1b311c624ce08c9c702ba4e88e2b0d787830334d</a>
<blockquote>
<p>
    Bug 693050 : Fix valgrind error in 0CF9 folder<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-02 21:53:20 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50d99ce72e1722427415ac745445dc1ca7e67c83">50d99ce72e1722427415ac745445dc1ca7e67c83</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 0717 folder<br>
<br>
jbig2_halftone.c<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 23:57:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=576c7d4162890ecee3b7322fd5665a8ae3c2d6d7">576c7d4162890ecee3b7322fd5665a8ae3c2d6d7</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in dcbd folder<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 23:00:47 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7feea483a0354e13c42ffa239b9b0c2d00f08428">7feea483a0354e13c42ffa239b9b0c2d00f08428</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 9557 folder<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 22:14:43 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6f9608495e1f4b1fcac518378a44e8704d943dd7">6f9608495e1f4b1fcac518378a44e8704d943dd7</a>
<blockquote>
<p>
    Bug 693050 : Fix memory leak in 4faa folder<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 21:12:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9df6dfdae0f2ffba6f1335a8a6c5e2a2274e0d84">9df6dfdae0f2ffba6f1335a8a6c5e2a2274e0d84</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 2908 folder<br>
<br>
jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-22 22:25:44 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8033c8336691c0b833cde32d47f4bbf8d7f4d4f2">8033c8336691c0b833cde32d47f4bbf8d7f4d4f2</a>
<blockquote>
<p>
    Bug 693050 : Fix memory leak in 146f folder<br>
<br>
jbig2_mmr.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-22 16:56:39 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a8ca8ed551e2897c422d0b6d46f1bd8ce30311b9">a8ca8ed551e2897c422d0b6d46f1bd8ce30311b9</a>
<blockquote>
<p>
    Bug 693050 : Fix minor typos and memory leak in 040d folder<br>
<br>
jbig2_arith.c<br>
jbig2_image.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-20 18:18:02 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76c000e507efff47e6f625bddef0a93323a7cc9d">76c000e507efff47e6f625bddef0a93323a7cc9d</a>
<blockquote>
<p>
    Bug 690723 : Prevent over writing unallocated memory when parsing an image<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 19:22:52 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cf138eae6a1ac6554ecc3414224fecb0ba2ec2b">9cf138eae6a1ac6554ecc3414224fecb0ba2ec2b</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issues labelled DestAv<br>
<br>
jbig2.c<br>
jbig2_priv.h<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-14 17:06:16 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c933c8c1d2beb7b6c6747c29fec58c6d6b8a02c">1c933c8c1d2beb7b6c6747c29fec58c6d6b8a02c</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issues labelled SourceAvNearNull<br>
<br>
jbig2_image.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 17:16:53 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3eff8ef1daf4de5232cb432fd685f6befdac1906">3eff8ef1daf4de5232cb432fd685f6befdac1906</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issue labelled HeapError<br>
<br>
jbig2.c<br>
jbig2_image.c<br>
jbig2_metadata.c<br>
jbig2_priv.h<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-05 16:39:39 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=08bc90379a7bd5d8eead94ae872f6fc6cc93a6fb">08bc90379a7bd5d8eead94ae872f6fc6cc93a6fb</a>
<blockquote>
<p>
    Bug 693025 : Correct memory leaks reported by Zeniko<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-31 17:51:51 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=017f11f142bdea0965f453d64a31ef02b3271cba">017f11f142bdea0965f453d64a31ef02b3271cba</a>
<blockquote>
<p>
    Bug 693025: Correct typos reported by Zeniko<br>
<br>
jbig2_huffman.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-30 17:42:29 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=90f453a7ea397418ed33966e6b94650efd99284f">90f453a7ea397418ed33966e6b94650efd99284f</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issue labelled DestAvNearNull<br>
<br>
jbig2_image.c<br>
jbig2_page.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 23:35:06 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26565665591e250cfbda9bc6d8834f8a2922d206">26565665591e250cfbda9bc6d8834f8a2922d206</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issue labelled BranchAvNearNull<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 22:47:02 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb27f271e4b508d63ca4f572b733e36977f0cbc4">bb27f271e4b508d63ca4f572b733e36977f0cbc4</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issue labelled BlockMoveAv<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 21:43:27 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dbf31907db5654184b9e7bca5d700f72deccc9fa">dbf31907db5654184b9e7bca5d700f72deccc9fa</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issue labelled SegFaultOnPc<br>
<br>
jbig2_generic.c<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-14 18:08:00 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4886f1c69e712a730399da308bfb1b731a652cbb">4886f1c69e712a730399da308bfb1b731a652cbb</a>
<blockquote>
<p>
    Bug 693025: Updated patch from Zeniko to fix various crashes and leaks<br>
<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-09 00:00:31 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a27094d1833bf10c9ab3b612182aa23f4eb3044f">a27094d1833bf10c9ab3b612182aa23f4eb3044f</a>
<blockquote>
<p>
    Bug 690974: This patch from Gorac implements the generic refinement region decoding procedure for when TPGRON is TRUE.<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 23:13:13 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a43f448139d0a72688c9191adab0718b9ef43ec5">a43f448139d0a72688c9191adab0718b9ef43ec5</a>
<blockquote>
<p>
    Bug 690870: This patch prevents the image compositing occurring if the src is outside of the clip region.<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-25 19:21:08 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33e85ea71051ad64ca4bb8b874dcf8bed9b66e62">33e85ea71051ad64ca4bb8b874dcf8bed9b66e62</a>
<blockquote>
<p>
    Bug 691254: This patch prevents the seg fault in Jbig2_042_14.pdf.<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 13:20:11 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1d120cab65c74fe97e4e4512f6a034f0fba0cac5">1d120cab65c74fe97e4e4512f6a034f0fba0cac5</a>
<blockquote>
<p>
    Tweak jbig2dec to cope better with NULLs.<br>
<br>
    Fix various destructors in jbig2dec to cope with being called<br>
    with image = NULL. This cures a problem in mupdf where it SEGVs<br>
    when called on &quot;1239 - skip invalid content streams.pdf&quot; from the<br>
    sumatra test set.<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 10:40:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1bfe4ae823054ac2dc94af15246fa489304cf80">b1bfe4ae823054ac2dc94af15246fa489304cf80</a>
<blockquote>
<p>
    Bug 691230, basic jbig2 halftone image support.<br>
<br>
    Thanks to George Gottleuber for this work.<br>
<br>
jbig2_halftone.c<br>
jbig2_halftone.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 22:24:35 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a42adfaa785b05670af63f8767c3ff55636c6686">a42adfaa785b05670af63f8767c3ff55636c6686</a>
<blockquote>
<p>
    Bug 691267: Check all realloc error paths.<br>
<br>
jbig2.c<br>
jbig2_huffman.c<br>
jbig2_page.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-29 20:33:16 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1fddee262691d23dc283965c0dbe0e0de2c85bf9">1fddee262691d23dc283965c0dbe0e0de2c85bf9</a>
<blockquote>
<p>
    Bug 691267: jbig2dec needs to check malloc() return values<br>
<br>
    This fix checks all return paths to ensure that the appropriate error<br>
    is returned on failure from any malloc() call within jbig2dec.<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_iaid.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_metadata.c<br>
jbig2_page.c<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-20 10:29:47 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f680c2d09d76172f7adee998608a8df0b8d2828c">f680c2d09d76172f7adee998608a8df0b8d2828c</a>
<blockquote>
<p>
    Fix 691958: check for an image before marking a page complete. Also update return code to handle errors correctly.<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2011-06-01 16:22:40 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=609901fe1d5496caeae2289ee20d7be965e413b0">609901fe1d5496caeae2289ee20d7be965e413b0</a>
<blockquote>
<p>
    Tweak jbig2dec os_types.h for android mupdf build.<br>
<br>
    If HAVE_STDINT_H is defined we are supposed to be getting our definitions<br>
    from stdint.h. Instead the header defines them anyway. Fix this. This showed<br>
    up when building MuPDF for Android.<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2011-05-11 15:39:06 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6e49f7e6d0c680ad0962cf7c620d67aa943c48a7">6e49f7e6d0c680ad0962cf7c620d67aa943c48a7</a>
<blockquote>
<p>
    Fixes bug #689870 - add proper big endian number accessors.<br>
<br>
    Previously only an unsigned accessor was provided and it was being<br>
    used to read both signed and unsigned quantities.<br>
<br>
jbig2.c<br>
jbig2_halftone.c<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2011-05-11 15:18:11 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ae98887d657761ac4d15881da559bb9ae24f26e7">ae98887d657761ac4d15881da559bb9ae24f26e7</a>
<blockquote>
<p>
    Fixes 690889, potential null dereference.<br>
<br>
    Prevent a theoretical (no test file) null dereference.  There are<br>
    several of these cases identified by by static analysis.  We believe<br>
    the authors intent was to pass the word stream if the arithmetic state<br>
    was not set, as in the other call of the same function.<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-08-11 16:17:45 +0000
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea866acb21033fd3cfe345352852ea1202ce2e32">ea866acb21033fd3cfe345352852ea1202ce2e32</a>
<blockquote>
<p>
    Fix bug # 691532. Do not attempt to clone an image that does not exist, each completed page should have an associated image. We'd like to handle this corrupt file with a better fix, for example the absence of an end page segement is clearly a problem with respect to the specification, but Adobe and Artifex have chosen to support other &quot;off spec&quot; streams so more subtle and less obvious error checking is needed. Thanks to Tim Waugh for analysis on this problem.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@11622 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-30 11:03:27 +0000
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca94f2ac3ab6cdbb6a36a72cae385afb4f25d4e8">ca94f2ac3ab6cdbb6a36a72cae385afb4f25d4e8</a>
<blockquote>
<p>
    On Tru64 the integer types are in inttypes.h and not in stdint.h as in VMS<br>
<br>
    Bug 691463, required for jbig2dec.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@11563 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-20 09:46:34 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c29b63557cb191f2b9371a06a73a11bc4b8f5544">c29b63557cb191f2b9371a06a73a11bc4b8f5544</a>
<blockquote>
<p>
    Add support for user defined huffman table.<br>
<br>
    This code adds support for segment type 53 segments, which supplies<br>
    inline huffman code table.  Bug 689853.<br>
<br>
    Many thanks to Justin Greer.<br>
<br>
    git-svn-id: svn+ssh://svn.ghostscript.com/svn/ghostscript/trunk/gs/jbig2dec@11526 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit e51f8e400e4502d7a6d60ee31890a195f55d1b64)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-20 08:01:29 +0000
</strong>
<br>Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d26c7e4f39f76fe70cc61d6dc14d05a042a9be48">d26c7e4f39f76fe70cc61d6dc14d05a042a9be48</a>
<blockquote>
<p>
    Fix jbig2_image_set_pixel function prototype<br>
<br>
    The declaration of jbig2_image_set_pixel was differenct between<br>
    jbig2_image.h and jbig2_image.c (int value vs bool value).  And<br>
    prevented compiling it by MSVC comiler in C++ mode.<br>
    This patch fixes it.  Bug #691461.<br>
<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-16 09:13:41 +0000
</strong>
<br>Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5d61c78c0de785b74b86d4e5298e3cc7b9e2b68">c5d61c78c0de785b74b86d4e5298e3cc7b9e2b68</a>
<blockquote>
<p>
    A little fix to allocating memory size<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-15 00:49:09 +0200
</strong>
<br>Tor Andersson &lt;tor.andersson@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e12fa07da845515911db8be2f7cfa8ef551061ba">e12fa07da845515911db8be2f7cfa8ef551061ba</a>
<blockquote>
<p>
    Use the jbig2_new and jbig2_renew macros instead of calling<br>
    jbig2_alloc and jbig2_realloc directly. Also adds a few typecasts<br>
    and #defines required to compile the source as C++.<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_iaid.c<br>
jbig2_generic.c<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_metadata.c<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-15 00:42:38 +0200
</strong>
<br>Tor Andersson &lt;tor.andersson@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=31dd7ef66dbd1c34df08365aa3c36e6391617f37">31dd7ef66dbd1c34df08365aa3c36e6391617f37</a>
<blockquote>
<p>
    Update VERSION define in config_win32.h<br>
<br>
config_win32.h<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-15 00:41:46 +0200
</strong>
<br>Tor Andersson &lt;tor.andersson@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=941b73315a166fe07e0f1a1b81171477285280f7">941b73315a166fe07e0f1a1b81171477285280f7</a>
<blockquote>
<p>
    Add Makefile.unix -- a simple makefile for unix-like systems.<br>
<br>
Makefile.unix<br>
<p>
</blockquote>
<hr>
<p><strong>2010-07-15 00:35:58 +0200
</strong>
<br>Tor Andersson &lt;tor.andersson@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f6066822041bbffd7169fd4bfc19c48daae8f155">f6066822041bbffd7169fd4bfc19c48daae8f155</a>
<blockquote>
<p>
    Fix memory leak of the word stream struct.<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-06-22 06:12:54 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad707fba426702631466973e6e80c48d16398b88">ad707fba426702631466973e6e80c48d16398b88</a>
<blockquote>
<p>
    Fix for bug 689836 and 691248.<br>
<br>
    Bug 689836 - Huffman tables with only positive values are decoded incorrectly<br>
    Bug 691248 - jbig2dec doesn't handle 042_11 (Huffman Symbol Region)<br>
<br>
    This patch fixes mulfunctions seen on standard huffman table K, L, M and N.<br>
    A difference will be seen on tests_private/comparefiles/Bug690360.pdf.<br>
    This file was affected by table K mulfunction and this is a improvement.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11415 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit d59bf48fcaefb0cb531d90cb748c173198a10f54)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_hufftab.h<br>
<p>
</blockquote>
<hr>
<p><strong>2010-06-22 05:59:23 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=606ce11fc930769a5bdf920a5902c158be8b3d5f">606ce11fc930769a5bdf920a5902c158be8b3d5f</a>
<blockquote>
<p>
    Added test code for every line of each standard huffman tables.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11413 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit aae02dab94f439a69744f4686c81d5633c8816a6)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-05-15 06:27:41 +0000
</strong>
<br>hintak &lt;hintak@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a54c8df662d4ab88afef6fcaa6c324030224d77d">a54c8df662d4ab88afef6fcaa6c324030224d77d</a>
<blockquote>
<p>
    try to make 'make -f base/unix-gcc.mak so' work<br>
<br>
    When not run through ./configure, HAVE_CONFIG_H isn't defined and<br>
    the jbig2 codes drop through to generic unknown unix platform - so we put some<br>
    generic unix values here.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11254 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit 27d16d20f97555d2874d9f04b374053ccd0731b7)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2010-05-14 04:18:42 +0000
</strong>
<br>hintak &lt;hintak@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6ef4989dcc7b51c9e8565258aa2a8a63e43d6b35">6ef4989dcc7b51c9e8565258aa2a8a63e43d6b35</a>
<blockquote>
<p>
    uint8_t type located in usual header on HP-UX needed for jbig2dec ; bug 688184<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11238 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit 15d65a1fded828b25ca20886cd3ca8bb7522a96f)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2010-04-21 07:20:14 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f51764fe4b4b31733ac1dc5c3d103106b9594c8d">f51764fe4b4b31733ac1dc5c3d103106b9594c8d</a>
<blockquote>
<p>
    A fix for a regression introduced by r11074 (bug 690094).<br>
<br>
    As I changed image number to be incremented when 'exflag' is false,<br>
    the problem of 'exrunlength' when SDHUFF == 1 was unveiled.<br>
    This fixes it.<br>
    JBIG2 images with SDHUFF == 1 should have been having trouble<br>
    between r11074 and this revision.  No other difference expected.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11093 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit 44b9be2b31622c91b8cb3e4acc6160269630d838)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-04-15 09:53:33 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=342ea4778d0ab98d8aabbaf62c2866afb804359d">342ea4778d0ab98d8aabbaf62c2866afb804359d</a>
<blockquote>
<p>
    A fix for 690094, &quot;missing letters replaced by little vertical lines&quot;.<br>
<br>
    This problem was in jbig2dec function jbig2_decode_symbol_dict().<br>
    The image number was not incremented correctly when it built<br>
    symbol dictionary.<br>
    No difference expected, other than JBIG2 pdf files suffered by<br>
    this problem.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11074 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit 75a5fa486571d0a9696976c290960f1bfdc7191b)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-04-14 02:31:58 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb629c8ff915730ff737ca6e4d564cc88ddafb22">eb629c8ff915730ff737ca6e4d564cc88ddafb22</a>
<blockquote>
<p>
    Fixed jbig2dec command getopt() parameter for -v option.<br>
<br>
    Not used by ghostscript itself but worth for standalone debugging.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11067 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit c72d87c7d7b32f0d33d5e5b9e72aca701dd80e01)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-04-14 02:26:16 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1ddf3c7a00c9f216f9a0bbd1285376c1e121dec">b1ddf3c7a00c9f216f9a0bbd1285376c1e121dec</a>
<blockquote>
<p>
    Fixed an indent. No influence on code.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11066 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit a6717367dee7a863788d74522e5ace5b548d80e1)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-04-13 09:50:08 +0000
</strong>
<br>masaki &lt;masaki@a1074d23-0009-0410-80fe-cf8c14f379e6&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f901b18ac90d291b98a1463e92f8d26c6f320c3e">f901b18ac90d291b98a1463e92f8d26c6f320c3e</a>
<blockquote>
<p>
    A fix for 691081, 691206, and part of 690094.<br>
<br>
    From r9769, jbig2dec wasn't capable of decoding some JBIG2 files<br>
    and throwing a error &quot;jbig2dec FATAL ERROR runlength too large in<br>
    export symbol table (XXX &gt; XX - XX) (segment 0xXX)&quot;.<br>
    This was caused by accidentaly bound checking export symbol table<br>
    size with number of non-export symbol.  This fixes it.<br>
    No differences expected, other than JBIG2 files suffered from this<br>
    problem.<br>
<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk/gs/jbig2dec/@11057 a1074d23-0009-0410-80fe-cf8c14f379e6<br>
    (cherry picked from commit e2c24fec806a2a84427ecfff9a9bbd078ca460bd)<br>
<br>
    Signed-off-by: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-02-02 11:09:54 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58b513e3ec60feac13ea429c4aff12ea8a8de91d">58b513e3ec60feac13ea429c4aff12ea8a8de91d</a>
<blockquote>
<p>
    Bump versioning for the 0.11 release.<br>
<br>
    The libtool shared library versioning starts with this release.<br>
<br>
CHANGES<br>
configure.ac<br>
jbig2dec-0.11/CHANGES<br>
jbig2dec.1<br>
<p>
</blockquote>
<hr>
<p><strong>2010-02-02 11:03:37 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa1bd62f45b780d5c8cbadaf66a25b03688590c5">fa1bd62f45b780d5c8cbadaf66a25b03688590c5</a>
<blockquote>
<p>
    The inclusion of JBIG2 in PDF 1.4 is no longer new news.<br>
<br>
README<br>
<p>
</blockquote>
<hr>
<p><strong>2010-02-02 11:03:05 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da42a22f05eb8af12a797c12bee3e5c121fe2842">da42a22f05eb8af12a797c12bee3e5c121fe2842</a>
<blockquote>
<p>
    Correct a whitespace formatting issue in the usage text.<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2010-02-02 11:01:42 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dd0c94f5c32a01ff8b7d502071495ba475fe8f8a">dd0c94f5c32a01ff8b7d502071495ba475fe8f8a</a>
<blockquote>
<p>
    Fix a manpage grammar error.<br>
<br>
jbig2dec.1<br>
<p>
</blockquote>
<hr>
<p><strong>2010-02-02 11:01:10 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=373b4606ef4b573e855b6be78fabd2496112da3b">373b4606ef4b573e855b6be78fabd2496112da3b</a>
<blockquote>
<p>
    Update change log for the 0.11 release.<br>
<br>
CHANGES<br>
jbig2dec-0.11/CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2009-11-23 16:49:06 -0800
</strong>
<br>Ralph Giles &lt;giles@cirrus.local&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a841c2481b35b7bf1bf5970a11ac750ff3a3ee2c">a841c2481b35b7bf1bf5970a11ac750ff3a3ee2c</a>
<blockquote>
<p>
    Implement generic region decode with typical prediction.<br>
<br>
    Patch from Gorac. Ghostscript bugs 690791 and 690913.<br>
<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-11-20 09:46:39 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad742b847dbb39b1376664d77fae0f8b31ae65f0">ad742b847dbb39b1376664d77fae0f8b31ae65f0</a>
<blockquote>
<p>
    Skip generic regions using TPGDON and issue a warning.<br>
<br>
    We don't yet implement this, and discarding the data is better than<br>
    proceeding with the incorrect decoding proceedures, which generally<br>
    just produce noise. Ghostscript bug 690791.<br>
<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-11-16 11:17:51 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fd7cb7fa6152573ab11ebfbce45582fa1652f117">fd7cb7fa6152573ab11ebfbce45582fa1652f117</a>
<blockquote>
<p>
    Correct bitmap offsets when setting transposed text.<br>
<br>
    Previously, the code was switching width and height, not just S and T<br>
    coordinates. We now properly decode the 042_19.jb2 test file.<br>
<br>
    Thanks to Drugo Pedrouvene for pointing out the issue. Bug 690923.<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 22:00:35 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcf0bd8c4288ff30d152b3741bc78c9fa055e49c">dcf0bd8c4288ff30d152b3741bc78c9fa055e49c</a>
<blockquote>
<p>
    Make -v print only info-level messages by default.<br>
<br>
    Previously -v set the verbosity level to 9. Anything 3 or greater<br>
    prints all debug messages, which can be quite overwhelming when<br>
    individual decode elements are traced. Now the default with -v is 2.<br>
<br>
    Run jbig2dec --verbose=3 to recover the old behaviour.<br>
<br>
jbig2dec.1<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 21:59:47 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1fddcf71a0cd81c02f7b52b757ea20c05f4292a">c1fddcf71a0cd81c02f7b52b757ea20c05f4292a</a>
<blockquote>
<p>
    Improve grammar in the usage message.<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 21:49:49 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf7917e8948a9296cd6bfdb0a1615287b88b769f">cf7917e8948a9296cd6bfdb0a1615287b88b769f</a>
<blockquote>
<p>
    Fix comment formatting.<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 21:19:54 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7018021f8232f62ff9c6822092405dd0467abb09">7018021f8232f62ff9c6822092405dd0467abb09</a>
<blockquote>
<p>
    Update the COPYING file to the text of the GPLv3.<br>
<br>
    The jbig2dec package is still licensed GPLv2 or later, but we want<br>
    to encourage use under the GPLv3.<br>
<br>
COPYING<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 16:52:50 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f8e18fdeb01cdbd9530804077beed6cac38ef077">f8e18fdeb01cdbd9530804077beed6cac38ef077</a>
<blockquote>
<p>
    Have the scons build automatically determine the version string.<br>
<br>
    SConstruct tries to call 'git describe --tags' which produces a version<br>
    string based on the most recent tag, with the number of commits and<br>
    current commit hash appended if HEAD isn't a tagged revision.<br>
<br>
    If that command fails (i.e. building from a release tarball or another<br>
    version control system) it attempts to read the CHANGES file and uses<br>
    the first version number there.<br>
<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 16:29:04 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f34a521eba46e811287fb4f35519fc32f0b6d4e8">f34a521eba46e811287fb4f35519fc32f0b6d4e8</a>
<blockquote>
<p>
    Update the version number in the scons build description.<br>
<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 16:04:42 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=077b6518dffc75dc74fc5e6990c8529f44cb47a0">077b6518dffc75dc74fc5e6990c8529f44cb47a0</a>
<blockquote>
<p>
    Remove the include of ~/.jamrules.<br>
<br>
    This was part of Tor's original commit, and was intended to set some<br>
    common default options among projects. However, it generates a warning<br>
    when the file is not available, and we now set thing like optimization<br>
    level and warning flags directly.<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-29 15:59:57 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bba07df1f607891f15bec1f1ace673f23d8360e2">bba07df1f607891f15bec1f1ace673f23d8360e2</a>
<blockquote>
<p>
    The jam build no longer requires a config.h.<br>
<br>
    Instead it sets the needed defines itself.<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-28 13:45:00 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fe50e6202700ad508c7f91e04330a962970ead5f">fe50e6202700ad508c7f91e04330a962970ead5f</a>
<blockquote>
<p>
    Remove _parse_ from the segment decode routines.<br>
<br>
    Our use wasn't consistent here; some decoders were jbig2_foo() and<br>
    others were jbig2_parse_bar(). Prefer the shorter names and keep<br>
    _parse_ only for the header and dispatch routines which don't themselves<br>
    decode the segment bodies.<br>
<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-28 12:22:40 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d2849e9e31de7cb3a921f9c69a9a4ecfd06feb02">d2849e9e31de7cb3a921f9c69a9a4ecfd06feb02</a>
<blockquote>
<p>
    Remove an unused variable.<br>
<br>
jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-28 12:19:57 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b108cbcfc9a2c7d10e70bd2bdc3a3a938ea3adb7">b108cbcfc9a2c7d10e70bd2bdc3a3a938ea3adb7</a>
<blockquote>
<p>
    Add prototypes for the publicly referenced halftone functions.<br>
<br>
    Corrects a missing prototype warning.<br>
<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2009-10-28 12:07:19 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=47bd82353ae27eb2c53e7253c39b70ef2e147ab2">47bd82353ae27eb2c53e7253c39b70ef2e147ab2</a>
<blockquote>
<p>
    Build optimized with debugging symbols and all warnings under jam.<br>
<br>
    Previously we used the default rules which are just 'cc'. This aligns<br>
    the behaviour with the other builds and lets of take advantage of jam's<br>
    cleaner output to see warnings more easily.<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-24 16:33:01 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20e5cd8ca494d3e715bcc38701cfd5923225415d">20e5cd8ca494d3e715bcc38701cfd5923225415d</a>
<blockquote>
<p>
    Fix a typo in a debug statement.<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-16 01:52:01 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b76f84cbe3982b71357c727c208401d6645ecad3">b76f84cbe3982b71357c727c208401d6645ecad3</a>
<blockquote>
<p>
    Clone and release the page images returned to the client.<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-16 01:32:29 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70a3ad1514050d5babcc18fb1bd327db1cfbfdc8">70a3ad1514050d5babcc18fb1bd327db1cfbfdc8</a>
<blockquote>
<p>
    Remove a specious comment.<br>
<br>
    Originally I thought we might need to access pages in random order,<br>
    but I don't think this is necessary.<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-16 01:56:34 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=56d7948b4d9f3825a20f0cb6cc26a0a3b6ae34f1">56d7948b4d9f3825a20f0cb6cc26a0a3b6ae34f1</a>
<blockquote>
<p>
    Check more return codes from jbig2_image_new().<br>
<br>
    There are still a number of unchecked instances in jbig2_symbol_dict.<br>
<br>
jbig2_generic.c<br>
jbig2_halftone.c<br>
jbig2_page.c<br>
jbig2_refinement.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-15 22:28:42 -0700
</strong>
<br>Ralph Giles &lt;giles@snow.ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19dabb532ae37749fdb6c06447e2dfcf0e216e9b">19dabb532ae37749fdb6c06447e2dfcf0e216e9b</a>
<blockquote>
<p>
    Check for NULL before freeing metadata or symbol segment results.<br>
<br>
    This protects against segfault during early termination.<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-15 22:28:03 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2e9e3314b4264e547ce9372b4bcd2f20c50b5357">2e9e3314b4264e547ce9372b4bcd2f20c50b5357</a>
<blockquote>
<p>
    Document that jbig2_data_in() can return -1 on fatal errors.<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-07-15 22:11:21 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f96255c8451e2d07406e2bd5f513f1d0aec34f29">f96255c8451e2d07406e2bd5f513f1d0aec34f29</a>
<blockquote>
<p>
    Check the return code from jbig2_data_in().<br>
<br>
    This avoids printing multiple 'Not a JBIG2 file header' errors on<br>
    corrupt or invalid files.<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-06-17 13:01:40 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1fde432da43cbe5bc34f3a95ee5d2f2466090e52">1fde432da43cbe5bc34f3a95ee5d2f2466090e52</a>
<blockquote>
<p>
    Add the jbig2dec manpage to the automake install and dist targets.<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2009-06-17 12:29:38 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ff59dbf7c7302a1a55768e0cdcbcdd4661b0b77c">ff59dbf7c7302a1a55768e0cdcbcdd4661b0b77c</a>
<blockquote>
<p>
    Manpage updates.<br>
<br>
    List the file.jbig2 and the embedded global+page stream pair<br>
    invocations separately, since they are exclusive.<br>
<br>
    Give a more complete description and elaborate on some of the options.<br>
<br>
    Use dot-macros instead of backslash commands for most of the formatting.<br>
    This isn't any less confusing because of the need to use double quotes<br>
    to enforce whitespace when alternating styles, but I still find it<br>
    more reasonable.<br>
<br>
    Fix a couple of spelling errors.<br>
<br>
jbig2dec.1<br>
<p>
</blockquote>
<hr>
<p><strong>2009-06-17 12:26:10 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e11f98fa775d99a531f18f5f4bffc754a205ce8f">e11f98fa775d99a531f18f5f4bffc754a205ce8f</a>
<blockquote>
<p>
    Add a manpage for the jbig2dec example client.<br>
<br>
    Contributed by Sebastian Rassmussen.<br>
<br>
jbig2dec.1<br>
<p>
</blockquote>
<hr>
<p><strong>2009-06-12 17:16:00 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e20020b1bd4fae157236fc9716cafa17481e3171">e20020b1bd4fae157236fc9716cafa17481e3171</a>
<blockquote>
<p>
    Build a shared library with GNU libtool.<br>
<br>
    Previously we used autoconf and automake, but just build a static<br>
    library. This commit checks for libtoolize in autogen.sh and adds<br>
    support for libtool to the configure.an and Makefile.am scripts.<br>
<br>
    We use this to build both static and dynamic versions of the jbig2dec<br>
    library, including soname versioning for the later.<br>
<br>
    Based on a patch by Sebastian Rasmussen.<br>
<br>
Makefile.am<br>
autogen.sh<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-29 07:25:13 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ae432288a105122d92f490d2d9cf212dae8aab4">5ae432288a105122d92f490d2d9cf212dae8aab4</a>
<blockquote>
<p>
    Initialize the pattern dict data offset to zero before first use.<br>
<br>
    Warning flagged by Coverity.<br>
<br>
jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-28 23:20:21 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=37e002db7ffce8121bd060c86fd9f0609879e99b">37e002db7ffce8121bd060c86fd9f0609879e99b</a>
<blockquote>
<p>
    Bump version after the 0.10 release.<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-28 21:49:29 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0d287050828a5878bb61e6971220d25674bae77e">0d287050828a5878bb61e6971220d25674bae77e</a>
<blockquote>
<p>
    Set release date and package version for the 0.10 release.<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-28 21:11:06 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=29d7c56e2aea052d51f33820a3f68f4e4a636c08">29d7c56e2aea052d51f33820a3f68f4e4a636c08</a>
<blockquote>
<p>
    Add some missing files to the automake build for distribution.<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-28 20:39:36 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=95e63680521ba68e3c21ca1e2bf9fee3a2c1958d">95e63680521ba68e3c21ca1e2bf9fee3a2c1958d</a>
<blockquote>
<p>
    Update changes with major points since the last release.<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-01 15:52:17 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e62b3968d0d897bb9a24ba7f75504f476e33ba6">4e62b3968d0d897bb9a24ba7f75504f476e33ba6</a>
<blockquote>
<p>
    Bounds check exported symbol run-lengths. CVE-2009-0196.<br>
<br>
    The final symbol dictionary is built from a combination of symbols<br>
    from referenced dictionaries and new symbols coded in the current<br>
    segment. Because the symbols can be composed and refined, not all<br>
    coded symbols are necessarily exported.<br>
<br>
    The list of symbols to export from those constructed by the decoding<br>
    process is coded as a series of on/off run-lengths. Previously we<br>
    accepted the value read as the run-length, even though this could<br>
    result in writing off the end of the exported symbol array. This<br>
    commit checks the read value against the number of elements remaining<br>
    in the export array and throws a fatal error if there is an overflow.<br>
<br>
    Thanks for Alin Rad Pop of Secunia Research for pointing out the issue.<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-22 23:21:48 +0200
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86e0b052dc32de4e0f9a3cbc7dbf27211a2b3182">86e0b052dc32de4e0f9a3cbc7dbf27211a2b3182</a>
<blockquote>
<p>
    Fix the jam build to work without config.h.<br>
<br>
    Previously, the Jamfile assumed a config.h had be created, usually by<br>
    running the configure script, but possibly also created manually. This<br>
    is extra work for those wanting a quick build. Therefore we pass some<br>
    defines on the compiler command line instead.<br>
<br>
    These are also likely to be wrong: we assume libpng is available on<br>
    all non-windows platforms. It's an incremental improvement, however,<br>
    and actual build-time configuration based on detected resources is<br>
    difficult in Jam.<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2009-05-22 23:14:33 +0200
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e6b447d8bddabc0acd5834fa493110b1bb3e9c7">8e6b447d8bddabc0acd5834fa493110b1bb3e9c7</a>
<blockquote>
<p>
    Provide fallbacks in jbig2dec.c if PACKAGE and VERSION aren't defined.<br>
<br>
    Normally, the configure script defines PACKAGE and VERSION, based on<br>
    its initializers. However, config.h is in fact optional, so we shouldn't<br>
    assume these are set. Since we use these to implement the command<br>
    'jbig2dec --version', we provide fallbacks in the source file to<br>
    simplify compiling outside the autotools build.<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-16 00:08:49 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c7c73d634dda170455d3cd7a1ef08a038e63cbb">3c7c73d634dda170455d3cd7a1ef08a038e63cbb</a>
<blockquote>
<p>
    Add a missing include in the halftone code.<br>
<br>
    jbig2_decode_pattern_dict() calls jbig2_decode_generic_mmr() but<br>
    wasn't including jbig2_mmr.h which declares that function.<br>
<br>
    Fixes a compiler warning on gcc and clang.<br>
<br>
jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-15 19:26:39 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1a03359b9f267714f60662dc021eef4054ae202">d1a03359b9f267714f60662dc021eef4054ae202</a>
<blockquote>
<p>
    Check the return value of sscanf when parsing pbm dimensions.<br>
<br>
    This is a follow-on to the previous commit. It shouldn't be<br>
    possible to reach the sscanf with less than one digit in the<br>
    parse buffer, but we abort anyway in case sscanf can't find<br>
    anything. If the code could proceed from that point with an<br>
    uninitialized value in the dim array the call to jbig2_image_new()<br>
    could request excessive resources.<br>
<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-15 18:41:10 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83c67854e5e0fd06045bd5e8fc53f98e1ddb9b76">83c67854e5e0fd06045bd5e8fc53f98e1ddb9b76</a>
<blockquote>
<p>
    Move an eof check out of a while loop where it was never called.<br>
<br>
    This section was flagged by coverity. Not because the eof check was<br>
    never executed, but because of casting away the possible EOF return<br>
    value of fgetc() inside the while condition. The isdigit() call would<br>
    still terminate the while on eof, and the worst that would happen<br>
    is that the allocated image would be smaller than intended and the<br>
    eof would be caught after trying to read the data, so this was not<br>
    a serious issue.<br>
<br>
    This commit removes the meaningless eof check inside the digit-copying<br>
    while loop and adds a specific check before. It also avoids copying the<br>
    first non-digit character to the parse buffer, which should resolve the<br>
    coverity warning.<br>
<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-01 17:40:01 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b525fc5d325e559dae1f9fb7d3956b8407df3d5">9b525fc5d325e559dae1f9fb7d3956b8407df3d5</a>
<blockquote>
<p>
    Ask git to ignore normal build products.<br>
<br>
.gitignore<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-01 17:38:47 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da580ddc6398b1818fc20036b79a89a7856b0296">da580ddc6398b1818fc20036b79a89a7856b0296</a>
<blockquote>
<p>
    Correct a typo in a debug message.<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-04-01 17:38:19 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c0c36828c7ded70a82bb65affd3cf10ef7ddc5ea">c0c36828c7ded70a82bb65affd3cf10ef7ddc5ea</a>
<blockquote>
<p>
    Remove a debug printout.<br>
<br>
    This was added in f1d00697, but isn't necessary beyond the initial<br>
    testing prior to that commit.<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-31 21:35:17 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76b6b9ec30859f32293286b3837f17a8252d010c">76b6b9ec30859f32293286b3837f17a8252d010c</a>
<blockquote>
<p>
    Close the output pbm file after writing to it.<br>
<br>
    Resource leak reported by Coverity.<br>
<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-31 21:32:38 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ceb71749c865a4a4cd4c5a6ed0b052dff533a76c">ceb71749c865a4a4cd4c5a6ed0b052dff533a76c</a>
<blockquote>
<p>
    Rename a local variable to avoid shadowing a function argument.<br>
<br>
    The code was correct, but confusing. Resolves a Coverity warning.<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-31 21:29:09 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fdefccb83e29b399d3c3935ed2ada533fb57bdd0">fdefccb83e29b399d3c3935ed2ada533fb57bdd0</a>
<blockquote>
<p>
    Remove unnecessary header includes.<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-31 21:24:16 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=261eb20b93e2fa36f34748be10232160955719cd">261eb20b93e2fa36f34748be10232160955719cd</a>
<blockquote>
<p>
    Remove an unnecessary header include.<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-30 18:35:21 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1d00697525dd2d7a5f63f96e01ad0d99e673b13">f1d00697525dd2d7a5f63f96e01ad0d99e673b13</a>
<blockquote>
<p>
    Restore the proper size of the huffman symbol length histogram.<br>
<br>
    The previous size as 256 KB, but LENCOUNT's highest index is PREFLEN<br>
    (or LENMAX - 1, but LENMAX is the largest value of PREFLEN) and that<br>
    comes from a byte member of a Jbig2HuffmanEntry. Therefore 256 members<br>
    are all that is necessary, or 1 KB on most machines.<br>
<br>
    This was changed in commit a0531af8 (jbig2dec svn c430) apparently in<br>
    the mistaken belief that it needed to scale with the size of the table<br>
    itself. In that revision the previous stack allocation of 256 elements<br>
    was replaced with the 1k, which later became 64k, generally overflowing<br>
    the stack. While 256 elements is a reasonable stack allocation, it's<br>
    safer to continue using the heap.<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-30 18:17:55 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63e0436a711c59f7fae6cfd721b90428ae19a7b3">63e0436a711c59f7fae6cfd721b90428ae19a7b3</a>
<blockquote>
<p>
    Dynamically allocate and initialize the huffman symbol length histogram.<br>
<br>
    Previously we allocated it on the stack, but it's quite large (256K)<br>
    and we were assuming it was initialized to zero. Issue flagged by<br>
    Coverity.<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-30 18:00:39 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=45f462f813cfef6be8f6755ebe02e8744222b3b1">45f462f813cfef6be8f6755ebe02e8744222b3b1</a>
<blockquote>
<p>
    Initialize Jbig2TextRegionParams.sbrat even when it is not used.<br>
<br>
    This avoids valgrind warnings in a later debug message which<br>
    unconditionally prints them out. After a patch by Alex Cherepanov,<br>
    ghostscript svn commit 9578.<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-03-30 17:45:50 -0700
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e2e186837bedf8211405c14b75c54849241193cd">e2e186837bedf8211405c14b75c54849241193cd</a>
<blockquote>
<p>
    Only define vnsprintf on MSVC versions prior to 9.<br>
<br>
    Visual Studio 2008 defines vnsprintf() in its stdio.h and our mapping<br>
    from _vnsprintf() conflicts. After a patch by Michael Vrhel, ghostscript<br>
    svn commits 8734 and 8735.<br>
<br>
config_win32.h<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-27 00:09:03 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aaed7c2e751f82d585f9b4d94601b48bfd196b6f">aaed7c2e751f82d585f9b4d94601b48bfd196b6f</a>
<blockquote>
<p>
    Protect refinement debug image dumps from the normal debug build.<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-26 23:53:08 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5f76927a09fc65adff87042eb0667ded96fef537">5f76927a09fc65adff87042eb0667ded96fef537</a>
<blockquote>
<p>
    Add the (unfinished) halftone source to the Jam build.<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-26 23:46:59 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d45e847d00a560fcd9a4ae917cda83a6dbf1686">4d45e847d00a560fcd9a4ae917cda83a6dbf1686</a>
<blockquote>
<p>
    Update the contact address in the file headers.<br>
<br>
config_win32.h<br>
jbig2.c<br>
jbig2.h<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2_text.h<br>
jbig2dec.c<br>
memcmp.c<br>
os_types.h<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-26 18:02:37 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d57cb4f565736e5a8473876dcd56464cd3aba70">4d57cb4f565736e5a8473876dcd56464cd3aba70</a>
<blockquote>
<p>
    Regularize the headers and clean up some additional whitespace.<br>
<br>
jbig2.c<br>
jbig2_generic.c<br>
jbig2_mmr.c<br>
jbig2_priv.h<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-24 18:29:48 -0800
</strong>
<br>Ralph Giles &lt;giles@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75de8111f83acd49a2eb75bed348cb4fac9f1e97">75de8111f83acd49a2eb75bed348cb4fac9f1e97</a>
<blockquote>
<p>
    Remove trailing whitespace.<br>
<br>
autogen.sh<br>
jbig2.h<br>
jbig2_arith.h<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_huffman.h<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.h<br>
jbig2_mmr.h<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2_text.h<br>
memcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2009-02-24 17:13:38 -0800
</strong>
<br>Ralph Giles &lt;giles@rain.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4db6758c0acf306c07cea834e22414d2db42b56a">4db6758c0acf306c07cea834e22414d2db42b56a</a>
<blockquote>
<p>
    Remove Id and other svn keyword substitution lines.<br>
<br>
    These were sometimes helpful in backtracking from isolated source<br>
    copies to a specific revision in a centralized version control<br>
    system, but git has poor support for such things. They are also<br>
    much less necessary now that public source repositories are a<br>
    more common part of development workflows.<br>
<br>
Jamfile<br>
Makefile.am<br>
autogen.sh<br>
config_win32.h<br>
configure.ac<br>
jbig2.c<br>
jbig2.h<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2_text.h<br>
jbig2dec.c<br>
memcmp.c<br>
os_types.h<br>
pbm2png.c<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-26 18:52:22 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d5db893a4dfe988b1ecea14595f3c7605ee166ea">d5db893a4dfe988b1ecea14595f3c7605ee166ea</a>
<blockquote>
<p>
    Work around broken streams created by Xerox WorkCentre products, where<br>
    the final segment length is written as -1. Ghostscript bug 689841.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@468 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-17 00:08:26 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2dea640032a72f9756cdccd54352c10b18348f56">2dea640032a72f9756cdccd54352c10b18348f56</a>
<blockquote>
<p>
    More whitespace cleanup.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@467 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
jbig2_arith_iaid.c<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_hufftab.h<br>
jbig2_metadata.c<br>
jbig2_priv.h<br>
jbig2dec.c<br>
os_types.h<br>
pbm2png.c<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-16 23:58:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f125f9553a1e3c8088cf59df7c983aef3785641a">f125f9553a1e3c8088cf59df7c983aef3785641a</a>
<blockquote>
<p>
    Only check for a code length antecedent under RUNCODE32. RUNCODE33 and<br>
    RUNCODE34 specify a repeat of zero so a previous code length isn't<br>
    necessary.<br>
<br>
    Thanks to Justin Greer for catching this. Ghostscript bug 689835.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@466 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-16 23:48:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c744e7207254f6719eb011a3a0b4984fdfa369dd">c744e7207254f6719eb011a3a0b4984fdfa369dd</a>
<blockquote>
<p>
    Clean up trailing whitespace.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@465 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_image.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-09 13:54:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e4e8acebad09764a3be793082de99bd1679ef0c0">e4e8acebad09764a3be793082de99bd1679ef0c0</a>
<blockquote>
<p>
    Runcodes 33 and 34 repeat a zero code length symbol id, not the previous<br>
    symbol like runcode 32.<br>
<br>
    Thanks to Justin Greer for the fix. Ghostscript bug 689824.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@464 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-09 13:41:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=46555913d6ed4b5479b50f45564ed94c478af863">46555913d6ed4b5479b50f45564ed94c478af863</a>
<blockquote>
<p>
    Support for aggregate symbol coding, patch from Ghostscript trunk.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@463 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2_text.h<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-09 13:38:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3092e1ff329e834e0e131ada149c692cff01688">e3092e1ff329e834e0e131ada149c692cff01688</a>
<blockquote>
<p>
    Windows build fixes. Patch from Ghostscript trunk.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@462 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
msvc.mak<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-07 21:37:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=381e60a9cbb6b42136e67e4dd48e67cb438b5a2d">381e60a9cbb6b42136e67e4dd48e67cb438b5a2d</a>
<blockquote>
<p>
    Update copyright headers. Ownership has been transferred<br>
    to Artifex.<br>
<br>
<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@461 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
jbig2.c<br>
jbig2.h<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_halftone.c<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2_text.h<br>
jbig2dec.c<br>
memcmp.c<br>
os_types.h<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2008-05-07 21:30:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86131c28d05eb84cbd8878c2fc6d3a6282b79cbc">86131c28d05eb84cbd8878c2fc6d3a6282b79cbc</a>
<blockquote>
<p>
    Set eol-style on the source files.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@460 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_image_png.c<br>
jbig2_metadata.h<br>
jbig2_mmr.h<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2007-11-09 01:13:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4446e2678f3bd9faa211a5d5bd50ac8f8c461a42">4446e2678f3bd9faa211a5d5bd50ac8f8c461a42</a>
<blockquote>
<p>
    Change the license from GPLv2 to GPLv2 or later.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@459 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
LICENSE<br>
<p>
</blockquote>
<hr>
<p><strong>2007-10-25 22:20:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=416c12b80383fe829edf8e986a0d5c860f8fabe6">416c12b80383fe829edf8e986a0d5c860f8fabe6</a>
<blockquote>
<p>
    Set appropriate ignores.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@458 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<p>
</blockquote>
<hr>
<p><strong>2007-10-25 22:13:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e2a295a921ad73b46c69bc33c67d8717b94d9b4e">e2a295a921ad73b46c69bc33c67d8717b94d9b4e</a>
<blockquote>
<p>
    Remove some gcc warnings.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@457 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_image.h<br>
jbig2_page.c<br>
jbig2_refinement.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2007-10-25 22:13:23 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=639e20afb817afd493b3802643f3dcf363962fce">639e20afb817afd493b3802643f3dcf363962fce</a>
<blockquote>
<p>
    Update autogen.sh to detect automake 1.10 and later.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@456 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2007-10-25 21:57:25 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6f92ef3754dff5fdf82a809662476c330b25e20c">6f92ef3754dff5fdf82a809662476c330b25e20c</a>
<blockquote>
<p>
    Add AM_PROG_CC_C_O as requested by automake 1.10.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@455 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2007-02-06 08:10:58 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad85e74393cfb2667ea1f15756502ea2bc3cf3d9">ad85e74393cfb2667ea1f15756502ea2bc3cf3d9</a>
<blockquote>
<p>
    Add a new header for declaring the public text region functions.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@454 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.h<br>
<p>
</blockquote>
<hr>
<p><strong>2007-02-05 23:42:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=41b78a49bf9e00d0d78532581b7e72836935f3d5">41b78a49bf9e00d0d78532581b7e72836935f3d5</a>
<blockquote>
<p>
    Export jbig2_decode_text_region() for use in aggregate symbol encoding<br>
    and stub out the setup for the call. Work in progress implementing<br>
    support for this function.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@453 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2007-02-05 22:59:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4cec0516180e0a8a79e88de5fbb12a28b3f64439">4cec0516180e0a8a79e88de5fbb12a28b3f64439</a>
<blockquote>
<p>
    Rewrite the test script to use a custom test class.<br>
<br>
    Previously we used the python unittest module, but we don't use most of<br>
    its features, and it's quite weak for this kind of file-based external<br>
    testing. So we lose on using a familiar api, but this doesn't add much<br>
    code, and we can now add long-desired features like 'xfail' results.<br>
<br>
    This grew out of work revising the Ghostscript test code for<br>
    parallelization.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@452 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2006-07-27 00:54:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=94071092c25507e1dd00451f89c0e82d45f65503">94071092c25507e1dd00451f89c0e82d45f65503</a>
<blockquote>
<p>
    Bump version number, post release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@449 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2006-07-26 23:57:39 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c04190c5824e209be28d5079787c3f05b5c1b3e">9c04190c5824e209be28d5079787c3f05b5c1b3e</a>
<blockquote>
<p>
    Update version info for the 0.9 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@447 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2006-05-15 21:16:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3421407ecff3d48427a0a848f58a0d1affe2c44b">3421407ecff3d48427a0a848f58a0d1affe2c44b</a>
<blockquote>
<p>
    Correct a typo resulting in inproper glyph placement with transposed text and a top left reference corner. Fixes bug 688645.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@446 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2006-02-17 20:25:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=34abc7a906ef9716d01ec93d74036a0be53a742c">34abc7a906ef9716d01ec93d74036a0be53a742c</a>
<blockquote>
<p>
    Update my email address; artofcode.com no longer works.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@445 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-18 18:12:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3753ca9c4e9543d34f6e20c5c55eef15fc6afcf8">3753ca9c4e9543d34f6e20c5c55eef15fc6afcf8</a>
<blockquote>
<p>
    Correct an invalid return value. Thanks to Leonardo for pointing this<br>
    out.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@444 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-06 01:50:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d94bdb63779c6d3bfa43197c791912cb954ae109">d94bdb63779c6d3bfa43197c791912cb954ae109</a>
<blockquote>
<p>
    Update changelog.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@443 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-06 01:47:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a9d42d067a6cd01c9f1fd73b00ff9c69c6ba85c6">a9d42d067a6cd01c9f1fd73b00ff9c69c6ba85c6</a>
<blockquote>
<p>
    The SBDSOFFSET field is a *signed* 5 bit integer, so we need to sign<br>
    extend when reading the field to get the proper value. We now correctly<br>
    handle the 042_20.jb2 test stream.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@442 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-05 23:39:55 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=994516f6db541df5f57d3de4851313af6a260f68">994516f6db541df5f57d3de4851313af6a260f68</a>
<blockquote>
<p>
    Add -DJBIG2_DEBUG to the default scons build.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@441 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-03 07:26:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49d3aed4dd6a1adc1ab03702cf324103febae1e6">49d3aed4dd6a1adc1ab03702cf324103febae1e6</a>
<blockquote>
<p>
    Fix data for Huffman table B.12.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@440 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_hufftab.h<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-03 03:35:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49519f4cfa5ca7d4f06ab11261e86a0d5aa55c64">49519f4cfa5ca7d4f06ab11261e86a0d5aa55c64</a>
<blockquote>
<p>
    Correct an operator precedence bug that was corrupting reading of uncompressed<br>
    collective bitmaps. Also improve debugging messages.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@439 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-01 23:56:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0d020e4fcfa9039853e76f0456e65805cff3d19d">0d020e4fcfa9039853e76f0456e65805cff3d19d</a>
<blockquote>
<p>
    Promote artimetic debug printout code to JBIG2_DECODE_ARITH from<br>
    plain JBIG2_DEBUG to cut down on noise.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@438 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-12-01 21:52:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=391a059aad7b801f004b01e17663a4024294d6ef">391a059aad7b801f004b01e17663a4024294d6ef</a>
<blockquote>
<p>
    Handle immediate lossless generic regions the same as immediate generic<br>
    regions. Fixes bug 688397.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@437 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-09-01 04:13:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b78900486172244c39187e89a085b12f2b6abdb1">b78900486172244c39187e89a085b12f2b6abdb1</a>
<blockquote>
<p>
    Some minor corrections and bug fixes.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@436 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-31 16:41:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a99885954277048b0d73840941dc47ede4c103a">6a99885954277048b0d73840941dc47ede4c103a</a>
<blockquote>
<p>
    Make a Jbig2WordStream return zeros past the end of the defined<br>
    buffer, as can happen when the huffman decoder tries to fill<br>
    its 'next_word' lookahead near the end of a segment.<br>
<br>
    Previously, we just relied on there being some data we could<br>
    read (and then ignore) which usually worked, but caused a<br>
    segfault with the 688080.pdf test file due to chance read<br>
    buffer alignment.<br>
<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@435 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-30 02:05:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8acccc58c83123286b0954053a7dd899de5a0630">8acccc58c83123286b0954053a7dd899de5a0630</a>
<blockquote>
<p>
    Fix some small bugs and add additional error checking to the<br>
    huffman decoding support.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@434 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-28 00:10:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e2ff5e373bd8ecda6db43c6b6414c8a3f3248297">e2ff5e373bd8ecda6db43c6b6414c8a3f3248297</a>
<blockquote>
<p>
    Comment clean-up.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@433 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-25 08:14:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d23b5e5b4d8fabdf51d202094ac4259d59dcc974">d23b5e5b4d8fabdf51d202094ac4259d59dcc974</a>
<blockquote>
<p>
    Work-in-progress commit of huffman text region support. Fix a number<br>
    of bugs in jbig2_huffman_get_bits() and implement symbol id huffman<br>
    table decode (a custom table is always included inline in the text<br>
    region segment header.)<br>
<br>
    However, the constructed table gives an out-of-bounds symbol id on<br>
    the first read with the UBC test file.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@432 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-23 06:09:55 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d2d97abc0be98770dc506620f5f8921900e55e5e">d2d97abc0be98770dc506620f5f8921900e55e5e</a>
<blockquote>
<p>
    Work-in-progress commit of huffman text region support. Initial implemetation of symbol id huffman<br>
    table decode.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@431 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-17 20:03:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a0531af83d6d29abe2fccb488fa7b741d68cb3fd">a0531af83d6d29abe2fccb488fa7b741d68cb3fd</a>
<blockquote>
<p>
    Hack around the lack of subtree support in jbig2_huffman_table_build()<br>
    by allocating a bigger flat table. This should be fixed the correct<br>
    way at some point, but lets us proceed with huffman text region<br>
    decoding implementation in the meantime.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@430 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-16 23:57:25 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5bbd972edf6b6441248d4201cd61767fa521cc97">5bbd972edf6b6441248d4201cd61767fa521cc97</a>
<blockquote>
<p>
    Work-in-progress commit. Partial implementation of Huffman text region<br>
    support.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@429 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-16 21:41:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d22a2ed8db5f8d99345b08762cabebcbc5873d64">d22a2ed8db5f8d99345b08762cabebcbc5873d64</a>
<blockquote>
<p>
    Copy out the collective bitmap symbols for huffman symbol dictionaries.<br>
<br>
    Also, some additional debug print pruning.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@428 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-16 21:16:22 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c04507a4138266c8266cc01886ca70ae8a9fa93">3c04507a4138266c8266cc01886ca70ae8a9fa93</a>
<blockquote>
<p>
    Implement reading an uncompressed collective symbol bitmap.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@427 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-16 20:38:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=338f0fbd294ee0dc9cbfabd7a15cce0ac657a708">338f0fbd294ee0dc9cbfabd7a15cce0ac657a708</a>
<blockquote>
<p>
    Remove huffman debugging printouts. Preserve the state dump functions<br>
    for future use, but #ifdef protect them.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@426 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-16 20:20:08 +0000
</strong>
<br>ray &lt;ray@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df910b6ffff7ae54db6c2d2430709ebb911eda49">df910b6ffff7ae54db6c2d2430709ebb911eda49</a>
<blockquote>
<p>
    Fix for shift right 32 bits of unsigned int being treated as shift right 0.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@425 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-04 07:05:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=720e508d03bae14bf0e412abb37ad08ecde72e46">720e508d03bae14bf0e412abb37ad08ecde72e46</a>
<blockquote>
<p>
    Work-in-progress commit of halftone dictionary implementation. This<br>
    is enabled in the scons build, but not the standard one.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@423 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
SConstruct<br>
jbig2_halftone.c<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-08-04 07:03:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3fb9f08036565d4bd4147283e2e685217b6e4b55">3fb9f08036565d4bd4147283e2e685217b6e4b55</a>
<blockquote>
<p>
    bstract the GB_stats size calculation into a function.<br>
    Also some comment cleanup.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@422 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-28 00:59:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=45a5c57347f7b7569808933207bb03c8edf30315">45a5c57347f7b7569808933207bb03c8edf30315</a>
<blockquote>
<p>
    Warning cleanup. Implement an unoptimized version of the REPLACE image<br>
    composition operator.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@421 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-27 23:55:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d9c7e26944b07cda1c81242b66aea7bbdfc1150">9d9c7e26944b07cda1c81242b66aea7bbdfc1150</a>
<blockquote>
<p>
    Some code cleanup. Remember the external combination op for region<br>
    segments and use it. Also add the missing REPLACE operator to the<br>
    enum (but not yet implemented in the compositor). Only some routines<br>
    can use this one. Also add some missing prototypes.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@420 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-27 23:49:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcb83f94c6dc0280a8edeb4dc303fc1451bcd881">dcb83f94c6dc0280a8edeb4dc303fc1451bcd881</a>
<blockquote>
<p>
    Fix an off-by-one in reading the SBDEFPIXEL and SBCOMBOP fields of<br>
    the text region segment flags, which caused us to clear the region<br>
    background to the wrong value. Bug 688244.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@419 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-27 17:29:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4a8c95e32a1a05dbf5587ff2262ea225f2dd6c2b">4a8c95e32a1a05dbf5587ff2262ea225f2dd6c2b</a>
<blockquote>
<p>
    Commit an off-by-one fix from Alex Cherepanov related to bug 688244.<br>
<br>
    Also #ifdef protect a debug image dump that was preventing compilation<br>
    in Ghostscript.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@418 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-27 08:29:56 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0d128dbed01e775befd59050c415b5aa7f21562d">0d128dbed01e775befd59050c415b5aa7f21562d</a>
<blockquote>
<p>
    Work in progress commit of huffman support. This version is still buggy and<br>
    includes some serious debug spew.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@417 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-13 16:51:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4cc11bea50d585804e93b985e7d7e8504990911b">4cc11bea50d585804e93b985e7d7e8504990911b</a>
<blockquote>
<p>
    Work-in-progress check in of huffman symbol dictionary support.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@416 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-07-13 16:28:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b6a01e666d0dbcd355c0b84fba43c1d02fb4b37">1b6a01e666d0dbcd355c0b84fba43c1d02fb4b37</a>
<blockquote>
<p>
    Move a repeated calculation out of a loop.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@415 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-20 11:09:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=46ff1e6277a432b9e1d18784ab5c30fc40b45476">46ff1e6277a432b9e1d18784ab5c30fc40b45476</a>
<blockquote>
<p>
    Minor cleanup of unimplemented huffman sections.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@414 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-19 14:16:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1eb7ae738d7af4508d7cbc547c0e386d55821820">1eb7ae738d7af4508d7cbc547c0e386d55821820</a>
<blockquote>
<p>
    Properly initialize the decode result field of the segment header struct<br>
    to NULL to avoid problems on free. Bug 688053.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@413 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-15 14:09:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84de63772c46a85128b6ada79cd2203918c7dec2">84de63772c46a85128b6ada79cd2203918c7dec2</a>
<blockquote>
<p>
    Fail on fatal symbol dict decoding errors.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@412 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-08 14:23:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e5bdc75cc8afaf2630953f1784381cc6c9305e36">e5bdc75cc8afaf2630953f1784381cc6c9305e36</a>
<blockquote>
<p>
    Add support for striped page decode. We still return a full<br>
    page buffer, so there is no savings in memory footprint.<br>
<br>
    We now decode 042_9.jb2 from the UBC test streams.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@411 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2.h<br>
jbig2_generic.c<br>
jbig2_image.c<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-08 14:23:23 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d954b0f143afbf16da24b2ea0a54d88b39af4129">d954b0f143afbf16da24b2ea0a54d88b39af4129</a>
<blockquote>
<p>
    Work in progress commit to support huffman text regions. Parse<br>
    and intantiate the huffman tables for text region decoding.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@410 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-08 14:20:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b28d531ea50bf15cc80cb068192b47b57a8916ce">b28d531ea50bf15cc80cb068192b47b57a8916ce</a>
<blockquote>
<p>
    Implement remaining standard huffman tables.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@409 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
<p>
</blockquote>
<hr>
<p><strong>2005-06-08 14:19:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ff386d420a62438df630a8b0ba3a022469cd3f8">2ff386d420a62438df630a8b0ba3a022469cd3f8</a>
<blockquote>
<p>
    Turn on -Wall when compiling with gcc.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@408 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-24 03:49:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a9dae0a3c665ce5c758f1575e0c8f08075aaf3c">0a9dae0a3c665ce5c758f1575e0c8f08075aaf3c</a>
<blockquote>
<p>
    Update the arith and huffman tests to run with the new code. We now<br>
    compile with -DTEST and link to the rest of the library since that's<br>
    required to access the allocator. In theory, that means we have duplicate<br>
    symbols, but GNU ld seems to cope. If it's a problem the test programs can<br>
    be split into separate source files.<br>
<br>
    Note that the arith test doesn't actually verify its results; it just<br>
    prints the results when compiled with -DJBIG2_DEBUG.<br>
<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@407 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_arith.c<br>
jbig2_huffman.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-18 00:42:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d78f4fbaac91f43bd14ac7d54c60e8edb0fa5bfe">d78f4fbaac91f43bd14ac7d54c60e8edb0fa5bfe</a>
<blockquote>
<p>
    Attempt to hook the self tests into the scons build. This is supposed<br>
    to work with the development version, but does not.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@406 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-11 07:14:25 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cc3a563ea709064bf47147bd817a962e368a5c2a">cc3a563ea709064bf47147bd817a962e368a5c2a</a>
<blockquote>
<p>
    Export the pre-defined huffman tables for external use.<br>
<br>
    Read the huffman fields of the symbol dictionary header and allocate<br>
    appropriate tables and decoder context. This is a prerequisite for<br>
    handling huffman-coded symbol dicts.i<br>
<br>
    Part of the fix for bug 688009.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@405 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-03 02:27:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=34b95add346fa8b27064e007da4e86eadc466bbd">34b95add346fa8b27064e007da4e86eadc466bbd</a>
<blockquote>
<p>
    Allocate a huffman decoder for symbol dictionaries that require it.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@404 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-03 02:25:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=67a0de3abce1a5ea08260cf937754ecfadbe7b41">67a0de3abce1a5ea08260cf937754ecfadbe7b41</a>
<blockquote>
<p>
    Update the huffman decoder interface.<br>
    Move hufftab.h with the static table definitions to only be included once<br>
      from huffman.c.<br>
    Use the client-replaceable jbig2_alloc() instead of bare malloc().<br>
    Add a 'free' call for the huffman state. This just calls jbig2_free().<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@403 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-03 01:10:27 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e2d6eade5dd4755e15db66e539256aa407b6d08">1e2d6eade5dd4755e15db66e539256aa407b6d08</a>
<blockquote>
<p>
    Re enable the huffman and arithmetic coder unit tests.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@402 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2005-05-02 20:49:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7fa4382f2f5cac1f1471617a23c9d1affa994e18">7fa4382f2f5cac1f1471617a23c9d1affa994e18</a>
<blockquote>
<p>
    Alter our portability fallback implementation of memcmp() to properly return<br>
    negative values is the first argument is &quot;less than&quot; the second. The previous<br>
    one was fine for our purposes, but could cause problems if it was accidentally<br>
    used by client applications.<br>
<br>
    Thanks to Ray Johnston for pointing this out.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@401 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
memcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-28 04:44:30 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65885f2808d815a4ce41d4712c19dc1dac61b6ab">65885f2808d815a4ce41d4712c19dc1dac61b6ab</a>
<blockquote>
<p>
    Add the changelog to the distribution.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@400 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-28 04:37:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=40379d7c353d1326615e08e64684fdc4065544ec">40379d7c353d1326615e08e64684fdc4065544ec</a>
<blockquote>
<p>
    Add experimental scons build file.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@399 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
SConstruct<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-28 04:36:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c358eca216ac6fb627a0d920c7fb9eb3f53d014">0c358eca216ac6fb627a0d920c7fb9eb3f53d014</a>
<blockquote>
<p>
    Fix implicit cast warnings from MSVC. Bug 687988.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@398 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-28 04:35:55 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26c310efdb8e8a914c36ffe7a4944448144adeef">26c310efdb8e8a914c36ffe7a4944448144adeef</a>
<blockquote>
<p>
    Bump the version number for new development work.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@397 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-28 04:31:34 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b67e1875a83632bc7e43e44d0a98ccc64c030b94">b67e1875a83632bc7e43e44d0a98ccc64c030b94</a>
<blockquote>
<p>
    Update version and changelog for the 0.8 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@395 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-06 18:14:30 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c49714a02996d398353fe76f51ef084dcaa99602">c49714a02996d398353fe76f51ef084dcaa99602</a>
<blockquote>
<p>
    Add an explicit cast to quiet a warning on MSVC. Bug 687988.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@393 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-06 00:29:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2561fd5c9ed06af167a245e2a09732a68655c8fb">2561fd5c9ed06af167a245e2a09732a68655c8fb</a>
<blockquote>
<p>
    Add a cast to in checking a range against an unsigned value.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@392 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-05 23:40:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf7b160a37331362d7bcff571e13e57d20193377">cf7b160a37331362d7bcff571e13e57d20193377</a>
<blockquote>
<p>
    Minor comment cleanup.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@391 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-04-05 23:39:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5393dfc4025b41895565f5b2a2f1786bffdf980">c5393dfc4025b41895565f5b2a2f1786bffdf980</a>
<blockquote>
<p>
    dd a missing break; in the segment release dispatch. Release of symbol<br>
    dictionary segments was falling through and causing a double free of<br>
    the result. Bug 688004.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@390 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-19 19:31:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c04c341b8cfbd2ee7b58269147a41bf6c24d7b7e">c04c341b8cfbd2ee7b58269147a41bf6c24d7b7e</a>
<blockquote>
<p>
    #ifdef out the cygwin stdint-from-sys/types fixup. Newer cygwin seems to provide<br>
    them all, but still not define stdint.h. Bug 687873.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@389 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 07:05:39 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fdc9d09b305474bffc749d23b51e025bba7fa567">fdc9d09b305474bffc749d23b51e025bba7fa567</a>
<blockquote>
<p>
    Correct some memory leaks in text region decoding: properly free arith<br>
    and word stream state, and release refined glyph images after<br>
    compositing.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@388 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 07:04:17 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3cf2d67fafefb607c8d436f2185d092457274cdb">3cf2d67fafefb607c8d436f2185d092457274cdb</a>
<blockquote>
<p>
    Correctly free the (dynamic) glyph array when freeing a symbol<br>
    dictionary.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@387 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 05:17:39 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad0de34366fd42c8f95d519dccb91115c4278580">ad0de34366fd42c8f95d519dccb91115c4278580</a>
<blockquote>
<p>
    Also correctly free the integer arith coding contexts in symbol<br>
    dictionary decode.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@386 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 05:07:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bff29a59cb009b2cb0b397c137e8576e9f3acb0b">bff29a59cb009b2cb0b397c137e8576e9f3acb0b</a>
<blockquote>
<p>
    Properly free the arith and word stream states in symbol dictionary decoding.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@385 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 04:53:16 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=81b746740b074f5a0a8b539bc4954dad5c5797be">81b746740b074f5a0a8b539bc4954dad5c5797be</a>
<blockquote>
<p>
    Properly free some segment results when the segment header structures<br>
    are freed. Symbol dictionaries are released, intermediate segment images<br>
    are released if they haven't already been released and nulled after<br>
    their use in the decode process, and metadata structures are properly<br>
    freed.<br>
<br>
    Resolves all known leaks with the first 7 ubc test streams.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@384 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 04:41:56 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=304420e16947853c697c9f50eb9e7c3cdd64f80c">304420e16947853c697c9f50eb9e7c3cdd64f80c</a>
<blockquote>
<p>
    Properly free tag and value strings from inside the metadata struct. We<br>
    now assume we own those pointers, which is fine if jbig2_metadata_add()<br>
    is used to construct them.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@383 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_metadata.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 04:40:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e641718f01a0a45ec8cfc89602daa345bb9383f8">e641718f01a0a45ec8cfc89602daa345bb9383f8</a>
<blockquote>
<p>
    Minor cleanup: remove an unnecessary check before releasing an immediate<br>
    text region after decode and composite, and simply reference to the page<br>
    image itself.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@382 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 00:53:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3a50c85fa43ebff2b3164e05cf3988c326cfb27">e3a50c85fa43ebff2b3164e05cf3988c326cfb27</a>
<blockquote>
<p>
    Properly free arithmetic coding and word stream states after region<br>
    decode. Also use the allocator defined in the library context instead<br>
    of raw malloc for the arith state.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@381 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
jbig2_generic.c<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 00:34:16 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=de271483ae5bf0ee87b73b44d9d433d4ca6a920a">de271483ae5bf0ee87b73b44d9d433d4ca6a920a</a>
<blockquote>
<p>
    Properly free the decoded page image array on context free.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@380 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2005-01-04 00:32:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f72323e48008adb89a21bf01770a9583f456ff36">f72323e48008adb89a21bf01770a9583f456ff36</a>
<blockquote>
<p>
    Simplify the ubc teststream hashes.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@379 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-23 12:53:49 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb7f46063eb1b3e220c13839ef622c29bcf5834f">eb7f46063eb1b3e220c13839ef622c29bcf5834f</a>
<blockquote>
<p>
    Properly mask the last row byte in the shift == 0 compositor<br>
    case. Fixes bug 687843.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@374 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-23 12:07:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=99672eb6ce4dad97c3ff22f9768b0073f730331e">99672eb6ce4dad97c3ff22f9768b0073f730331e</a>
<blockquote>
<p>
    update changelog.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@373 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-23 11:54:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6f0b0d1802ad565e908adac9601e650bdfb8af94">6f0b0d1802ad565e908adac9601e650bdfb8af94</a>
<blockquote>
<p>
    Implement a slow general fallback for image compositing. This adds<br>
    support for non-OR composition operators.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@372 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-22 09:34:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d9a6439364da7ea94311d69f877ae37485fd1f7">7d9a6439364da7ea94311d69f877ae37485fd1f7</a>
<blockquote>
<p>
    Clarify variable references to better match the spec.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@371 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-22 01:36:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b62aa9dd9154eba7122c56cab886207dce972cb1">b62aa9dd9154eba7122c56cab886207dce972cb1</a>
<blockquote>
<p>
    Trivial whitespace fix.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@370 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-21 22:59:04 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=afe3a66d19d98cf0017f4c7b433ae65b2286e259">afe3a66d19d98cf0017f4c7b433ae65b2286e259</a>
<blockquote>
<p>
    replace individual memset calls for clearing images with a new<br>
    jbig2_image_clear() utility function.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@369 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_image.c<br>
jbig2_page.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-21 01:05:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d264e8daa8c30ea3d4d43e287bcc97462f244e9e">d264e8daa8c30ea3d4d43e287bcc97462f244e9e</a>
<blockquote>
<p>
    Initialize the initial text region segment bitmap to zero.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@368 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-21 00:35:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50493055b3f099f6670df3ab2011af8085ba49c5">50493055b3f099f6670df3ab2011af8085ba49c5</a>
<blockquote>
<p>
    Re-assign the return value of jbig2_realloc() when growning the page<br>
    size array. Previously it was dropped which could cause crashes on some<br>
    systems processing documents with more than 4 pages. Thanks to Jan<br>
    Patera for reporting this.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@367 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-13 20:00:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=28e7ac27b12c59c271eacca8eb70dc97fe991c5b">28e7ac27b12c59c271eacca8eb70dc97fe991c5b</a>
<blockquote>
<p>
    Fix and error return. The normal 'return jbig2_error(ctx, JBIG2_SEVERITY_FATAL,...)'<br>
    idiom doesn't work when the function returns a pointer instead of an error code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@366 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-08 22:49:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a065bcb4b13998d875073212087b2a84aa132cc7">a065bcb4b13998d875073212087b2a84aa132cc7</a>
<blockquote>
<p>
    Bump version number post-release, and correct a CHANGES typo.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@365 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-08 21:00:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=afc8acb7f41c4569e208301153449c2fd8dbd9da">afc8acb7f41c4569e208301153449c2fd8dbd9da</a>
<blockquote>
<p>
    Set the release date.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@360 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-08 20:49:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0577ac1d30bd76622e9c2cd36ff573b3e144b19c">0577ac1d30bd76622e9c2cd36ff573b3e144b19c</a>
<blockquote>
<p>
    Error if the symbol id indicated for refinement in a refagg symbol<br>
    dictionary segment is out of range. UBC test stream 042_13 triggers<br>
    this, we don't fix this here, only handle the error more verbosely.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@359 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-07 01:37:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0aa9e029d3d78790d747b8fd6c62f2f6ffe403f5">0aa9e029d3d78790d747b8fd6c62f2f6ffe403f5</a>
<blockquote>
<p>
    Bump the version number for release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@358 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-07 01:23:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=422bfff0efc1eaedd88e5aa876a96ae36fbd13bb">422bfff0efc1eaedd88e5aa876a96ae36fbd13bb</a>
<blockquote>
<p>
    Add jbig2_refinement.c to the Jam and MSVC builds.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@357 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Jamfile<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-06 05:37:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=389ea3e65131d1644f3c894bd67c6dc433ccb0ec">389ea3e65131d1644f3c894bd67c6dc433ccb0ec</a>
<blockquote>
<p>
    Code cleanup. The refinement region decode procedures use a 'GR' prefix<br>
    in the spec even when the function is identical to the 'GB' prefix<br>
    variables in the generic region procedures. Change our code to match.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@356 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-06 05:36:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65b51e728aed87dfeb43227218be0c5cc4d642af">65b51e728aed87dfeb43227218be0c5cc4d642af</a>
<blockquote>
<p>
    Correct the test for the nominal generic region template 0 AT pixel<br>
    positions. The previous change invoked the optimized routine for the<br>
    wrong template, causing a regression with ubc test stream 042_10.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@355 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-05 04:15:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5bbe12052a1a34c065451a2c10741021caf6887c">5bbe12052a1a34c065451a2c10741021caf6887c</a>
<blockquote>
<p>
    Update the changelog<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@354 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-05 04:15:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=801c41b10d75f023ff2387aac576f5f3c152a308">801c41b10d75f023ff2387aac576f5f3c152a308</a>
<blockquote>
<p>
    Add an unoptimized generic decoder for generic region template 0. We now<br>
    properly decode UBC test stream 042_7.jb2.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@353 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-05 03:48:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2b6179196091f01a58c17a79024d7ee5243ab8a2">2b6179196091f01a58c17a79024d7ee5243ab8a2</a>
<blockquote>
<p>
    Add a generic but unoptimized handler for generic region arithmetic<br>
    template 3, and an optimized but untested handler for the default AT<br>
    pixel position. We now properly decode 042_6.jb2 from the UBC test<br>
    suite.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@352 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-04 02:29:17 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b8fc23e4731a172600282a65e9602ff1963bfead">b8fc23e4731a172600282a65e9602ff1963bfead</a>
<blockquote>
<p>
    Implement non-standard AT positions in the unoptimized version<br>
    of the refinement region template. We now properly decode ubc<br>
    test stream 042_23.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@351 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-04 02:24:11 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42c0312cc2855d2cc0d83954968c65a8e5e6107d">42c0312cc2855d2cc0d83954968c65a8e5e6107d</a>
<blockquote>
<p>
    The gbat and grat content pixel offset arrays are signed.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@350 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-03 17:04:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91496de8718924d6b112c093ea51894210ed8d3d">91496de8718924d6b112c093ea51894210ed8d3d</a>
<blockquote>
<p>
    Remove the reference image debug dump.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@349 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-03 17:03:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c51afb6cce1f14340b7ec8476c64949b469614a7">c51afb6cce1f14340b7ec8476c64949b469614a7</a>
<blockquote>
<p>
    #ifdef protect a debug image dump.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@348 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-03 06:55:35 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a90500857d4c0d9a6628196447002efe68a0f46">8a90500857d4c0d9a6628196447002efe68a0f46</a>
<blockquote>
<p>
    Implement text refinement regions (SBREFINE = 1 in text segments).<br>
    jbig2dec commandline now decodes 1page-output.jbig2 from bug #687575.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@347 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 22:19:57 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=74eba6a78944ccfada0ab7dc50f6363cfd225cbf">74eba6a78944ccfada0ab7dc50f6363cfd225cbf</a>
<blockquote>
<p>
    Implements IAID procedure for decoding reference symbol id's in symbol<br>
    dict segs (was incorrectly using generic int procedure). Fixes off-by-<br>
    one test for image bounds in jbig2_image_get_pixel and<br>
    jbig2_image_set_pixel.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@346 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 19:50:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a4d66009ee206247b2d9e61615a6fefbc49468c4">a4d66009ee206247b2d9e61615a6fefbc49468c4</a>
<blockquote>
<p>
    Use the correct definition of the SDREFAGG flag to switch GR_stats allocation.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@345 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 19:45:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=804b91c488cbb7ea22bad56edd0b39384066c908">804b91c488cbb7ea22bad56edd0b39384066c908</a>
<blockquote>
<p>
    Correct a typo, and switch allocation of GR_stats on SDREFAGG instead of SDRTEMPLATE.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@344 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 19:40:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d89f78a5cb864865e102192f5a44d6b149f0bf71">d89f78a5cb864865e102192f5a44d6b149f0bf71</a>
<blockquote>
<p>
    Trial implementation of separate GR_stats for refinement arithmetic coding.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@343 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 19:26:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d489de65d56c8277d5b078759c20a921f429cd63">d489de65d56c8277d5b078759c20a921f429cd63</a>
<blockquote>
<p>
    Zero the sdrat values if they are not going to be used. Avoids a UMR in a later debug message.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@342 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 18:51:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ccb4bbffa33b6c0e33b9bc6844ddf69d155c9eb3">ccb4bbffa33b6c0e33b9bc6844ddf69d155c9eb3</a>
<blockquote>
<p>
    Fix an error in REFAGG decoding, and properly warn that REFAGGNINST &gt; 1 isn't yes implemented.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@341 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 18:50:06 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f2bc04b3071d5617851f2255e73d3444ac179dfb">f2bc04b3071d5617851f2255e73d3444ac179dfb</a>
<blockquote>
<p>
    Update changelog with recent new features.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@340 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2004-12-01 18:21:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8291bc316fc9882c419c9fcd11dbd8f19d497402">8291bc316fc9882c419c9fcd11dbd8f19d497402</a>
<blockquote>
<p>
    Protect the refinement region debug output with an #ifdef.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@339 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 19:35:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b588b1a9e9599c5041db8279d953bb3aee57371c">b588b1a9e9599c5041db8279d953bb3aee57371c</a>
<blockquote>
<p>
    Implement an unoptimized version of refinement region template 0.<br>
    We now decode ubc test stream 042_21.jb2.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@338 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 19:29:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ccd602286a7f176ffb0fffc68be453d443f0644e">ccd602286a7f176ffb0fffc68be453d443f0644e</a>
<blockquote>
<p>
    Invert the check for refinement region movable template<br>
    offsets. This was the last bug in the refinement region<br>
    segment handling code, we now handle the ubc 042_22.jb2<br>
    test file!<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@337 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 19:26:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3f6e30d4f07e021cc818e584b085456b25865e6">c3f6e30d4f07e021cc818e584b085456b25865e6</a>
<blockquote>
<p>
    Rename the refinement region typical prediction flag<br>
    TPGRON in correspondence with the spec.<br>
<br>
    Also fixes some index comparison errors.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@336 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.h<br>
jbig2_refinement.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 17:52:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a01d4e48567de8c803e993a76b5d7749f597875d">a01d4e48567de8c803e993a76b5d7749f597875d</a>
<blockquote>
<p>
    Correct the size of the GB_stats allocation for the refinement<br>
    templates; the sizes were reversed.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@335 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 17:50:30 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e7c951253f1d39e3a6451cc476f89fd1a5827d97">e7c951253f1d39e3a6451cc476f89fd1a5827d97</a>
<blockquote>
<p>
    correct a typo<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@334 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 17:49:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=faf1a86071f89a81fd9c5f34840bb03a90650c50">faf1a86071f89a81fd9c5f34840bb03a90650c50</a>
<blockquote>
<p>
    We no longer need the result debug image; page composition is working ok.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@333 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 07:14:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf1418dc01a996a8f351918a5fd6202ce02a22d5">cf1418dc01a996a8f351918a5fd6202ce02a22d5</a>
<blockquote>
<p>
    Implement generic refinement region segment handling. Decoding is still<br>
    not correct.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@332 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 07:13:11 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e161b891ac484992cfff4127332498fb46125fa8">e161b891ac484992cfff4127332498fb46125fa8</a>
<blockquote>
<p>
    Clean up some debug messages.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@331 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_image.h<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-24 03:03:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=581b2c04128ae030deba492ea9a4dfc64a033eae">581b2c04128ae030deba492ea9a4dfc64a033eae</a>
<blockquote>
<p>
    Correct a typo in reading the SBRAT offsets in text segments.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@330 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-11-17 19:29:25 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b4c9f4c43bb969875ad842658e269646abaeb96e">b4c9f4c43bb969875ad842658e269646abaeb96e</a>
<blockquote>
<p>
    Promote the debugging get/set pixel routines to general availability.<br>
    Also, fix a bit order bug: we follow the pbm convention, where MSb is<br>
    leftmost, not rightmost.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@329 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-10-22 22:28:07 +0000
</strong>
<br>root &lt;root@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2c22eeab4e9a67bb218cb4e03df9ed9bad3b6647">2c22eeab4e9a67bb218cb4e03df9ed9bad3b6647</a>
<blockquote>
<p>
    Build an unoptimized version of the refinement template context calculation<br>
    to assist with debugging. This one doesn't seem to work either.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@328 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-10-22 22:21:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65a3e8bfeba6213859690722281ca290fe3e7d20">65a3e8bfeba6213859690722281ca290fe3e7d20</a>
<blockquote>
<p>
    minor comment reformatting<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@327 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
<p>
</blockquote>
<hr>
<p><strong>2004-10-08 01:29:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=872c0bb40abd41f305e2cd27a3673fe2f28b9ea6">872c0bb40abd41f305e2cd27a3673fe2f28b9ea6</a>
<blockquote>
<p>
    correct shift offsets<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@326 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-10-03 21:14:57 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=441dc4f503432969833a7124b45e1e98ffe7cb81">441dc4f503432969833a7124b45e1e98ffe7cb81</a>
<blockquote>
<p>
    Additional work on refinement region template 1. Context update still<br>
    incorrect.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@325 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-10-02 07:08:22 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5d03d94b2004361b89cbf977ad5519b661c2aea7">5d03d94b2004361b89cbf977ad5519b661c2aea7</a>
<blockquote>
<p>
    Commit of work in progress to support refinement region decode. First<br>
    draft of template 1.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@324 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-09-29 14:15:40 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c8fe23adba1f24273186b4a7379f588437d9f5d">0c8fe23adba1f24273186b4a7379f588437d9f5d</a>
<blockquote>
<p>
    Work in progress of refinement region support. Call logic for refagg<br>
    symbol dictionary entries.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@323 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_refinement.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-09-29 13:48:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef32d14a8d786981905bed84313d250d39b6dead">ef32d14a8d786981905bed84313d250d39b6dead</a>
<blockquote>
<p>
    Turn on all warnings by default.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@322 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-18 01:11:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5e8721505beec15991f7660b67fa9dbfd037b7f">f5e8721505beec15991f7660b67fa9dbfd037b7f</a>
<blockquote>
<p>
    correct some property settings in the source repository<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@321 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-18 01:04:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b17636877d0742ea430c1efc646b1e9c68b70014">b17636877d0742ea430c1efc646b1e9c68b70014</a>
<blockquote>
<p>
    enable Id keyword substitution on the new file<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@320 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-18 01:03:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1efb1d79e3dead9e474ff89cd0ce0d6c87d21ca3">1efb1d79e3dead9e474ff89cd0ce0d6c87d21ca3</a>
<blockquote>
<p>
    It looks like templates aren't shared between generic and generic refinement decoding, so split<br>
    the routines into separate files.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@319 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-13 00:00:17 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=508693c17eb8f052fbcc0ea4976cb326e746c2f0">508693c17eb8f052fbcc0ea4976cb326e746c2f0</a>
<blockquote>
<p>
    Work in progress to implement generic refinement regions and aggregate symbol coding.<br>
    Commit to avoid losing work.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@318 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-11 16:38:39 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19918285ec07521885d12a624507435a3da9f473">19918285ec07521885d12a624507435a3da9f473</a>
<blockquote>
<p>
    correct a typo in the previous commit<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@317 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-10 22:36:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a1f9f214d267dced3b00c96708c95e89d674790a">a1f9f214d267dced3b00c96708c95e89d674790a</a>
<blockquote>
<p>
    Include stdio.h when required for pbm debug output.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@316 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-10 22:34:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4813245d60e430c1b9528a4aa018ee6d45b28add">4813245d60e430c1b9528a4aa018ee6d45b28add</a>
<blockquote>
<p>
    document previous fix<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@315 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-10 22:33:46 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5264ffff604bc9da416b86b6ed382aa75638dc9">b5264ffff604bc9da416b86b6ed382aa75638dc9</a>
<blockquote>
<p>
    Properly initialize the page buffer to the default pixel value.<br>
    This caused, among other potential bugs, garbage and overlay<br>
    effects under some malloc implementatons, though not on GNU/Linux.<br>
<br>
    Fixes Ghostscript bugs 687530 and 687609. Thanks to Oleg Panashchenko<br>
    for analysis.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@314 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-08-06 05:01:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=99264987a0799fca10e9ccd0aeff86713878ba67">99264987a0799fca10e9ccd0aeff86713878ba67</a>
<blockquote>
<p>
    Actually implement the 'or later' part of the automake version<br>
    detection.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@313 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2004-07-06 13:32:01 +0000
</strong>
<br>tor &lt;tor@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=18b2ab815f85ec97de3dcdc2088d4986f1676b84">18b2ab815f85ec97de3dcdc2088d4986f1676b84</a>
<blockquote>
<p>
    added a rudimentary jamfile<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@312 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Jamfile<br>
<p>
</blockquote>
<hr>
<p><strong>2004-04-08 08:40:49 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca77e2fee1e77118981d33fb1b9ab5803717e343">ca77e2fee1e77118981d33fb1b9ab5803717e343</a>
<blockquote>
<p>
    Initialize some variables to avoid spurious warnings from gcc.<br>
<br>
    These are all used only in one code path or another, so there was no<br>
    danger of unitialized use. However, by the same token we lose nothing by<br>
    setting a default to quiet the warning.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@311 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-04-08 08:36:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=09e114b5849ac066755ae1625104896d232ef168">09e114b5849ac066755ae1625104896d232ef168</a>
<blockquote>
<p>
    Remove some unused variables. Bug 687413.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@310 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
<p>
</blockquote>
<hr>
<p><strong>2004-03-24 07:49:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da420b02de6412f053b759cd04d498762ac62fbe">da420b02de6412f053b759cd04d498762ac62fbe</a>
<blockquote>
<p>
    Check for defined(HAVE_CONFIG_H) instead of just a non-false value. Corrects a warning on the<br>
    Intel compiler. Ghostscript bug 687320.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@309 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-31 16:38:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=365418bd41891ad1627a4bf612dccd51492f6c2c">365418bd41891ad1627a4bf612dccd51492f6c2c</a>
<blockquote>
<p>
    Helps to actually increment the version number.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@307 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-31 16:29:40 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5715735568f8cdb7cce148b9335933ad20d3cd5">b5715735568f8cdb7cce148b9335933ad20d3cd5</a>
<blockquote>
<p>
    Update version and changelog for 0.6 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@306 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-31 16:25:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=297c9b5fdba66116c2e975789ad7d2d640123114">297c9b5fdba66116c2e975789ad7d2d640123114</a>
<blockquote>
<p>
    Portability update. Newer cygwin does provide stdint.h, conflicting with the work-around we<br>
    installed for older cygwin. Thanks to Alex Cherpanov for this.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@305 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-31 16:25:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49cc61770c6fadfa7a4f2a214a7040db129f3a08">49cc61770c6fadfa7a4f2a214a7040db129f3a08</a>
<blockquote>
<p>
    Apparently forgot to bump the version number in configure.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@304 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-04 16:24:55 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=344fc838a5c35bf4ccef6ec2259b3a317135ab36">344fc838a5c35bf4ccef6ec2259b3a317135ab36</a>
<blockquote>
<p>
    Update changelog for 0.5 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@301 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-04 16:19:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a413dad44bd527f43968e32258aed7a20245f5d5">a413dad44bd527f43968e32258aed7a20245f5d5</a>
<blockquote>
<p>
    Remove symbol dictionary export routine debugging prints and modify the dump_symbol_dictionary()<br>
    call so that it does not require stdio.h.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@300 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-04 16:11:27 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=204d69f4fce9cf5ee00e0fce774a622e9fca109f">204d69f4fce9cf5ee00e0fce774a622e9fca109f</a>
<blockquote>
<p>
    We no longer need to artificially recurse when building the list of referred symbol dictionaries<br>
    now that we properly construct an exported result.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@299 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-04 15:54:34 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a82d670d005fdd3e4fc877fddcf69ff01f6d53df">a82d670d005fdd3e4fc877fddcf69ff01f6d53df</a>
<blockquote>
<p>
    Remove an unused local variable.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@298 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-03 05:42:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e242d111c02050235102d9e466e9a4d6435f7867">e242d111c02050235102d9e466e9a4d6435f7867</a>
<blockquote>
<p>
    Avoid an unitialized variable warning.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@297 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-03 00:22:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb7d209f4e106ec97471b98efdce93814326c8cd">cb7d209f4e106ec97471b98efdce93814326c8cd</a>
<blockquote>
<p>
    First stab at parsing the export symbol bitfield and building a proper export dictionary.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@296 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-01 19:46:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a88581c12e2d029bb42aa7d2c745645a3a5d6fe">0a88581c12e2d029bb42aa7d2c745645a3a5d6fe</a>
<blockquote>
<p>
    Split an expression into two pieces to avoid confusion over order of operations.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@295 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-01 18:02:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02da65fafcef22d50df76638362b946d6a2ec96b">02da65fafcef22d50df76638362b946d6a2ec96b</a>
<blockquote>
<p>
    Add a cast to avoid an incompatible pointer type warning.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@294 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-01 17:54:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=12ab5048f182dda7a778b678781e604e6d3abbe6">12ab5048f182dda7a778b678781e604e6d3abbe6</a>
<blockquote>
<p>
    Prefer uint8_t to byte in some internal functions.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@293 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-01 17:53:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8d833614a9cdc49e405d72bbf1658859e4468df1">8d833614a9cdc49e405d72bbf1658859e4468df1</a>
<blockquote>
<p>
    Correct a warning. Offset, then cast to non-const, not the other way around.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@292 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_metadata.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-12-01 17:44:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7adeea559e68d424dd78ce440536ac2d78fc2a8c">7adeea559e68d424dd78ce440536ac2d78fc2a8c</a>
<blockquote>
<p>
    Add a prototype for the extension segment parser.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@291 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-11 13:49:50 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=018ec13e4a810da97e57725731d80ca3bff4b5af">018ec13e4a810da97e57725731d80ca3bff4b5af</a>
<blockquote>
<p>
    Make Jbig2SymbolDict more object like. Work in progress to unify<br>
    inheritance.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@290 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-11 13:15:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5933c48096aca791162c655d9570b2922835cdf6">5933c48096aca791162c655d9570b2922835cdf6</a>
<blockquote>
<p>
    Make the symbol dict lookup code public and move it out of jbig2_text.c.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@289 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-10 20:54:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02a9540fdd75a6ed8bfada759b46a42199d84d67">02a9540fdd75a6ed8bfada759b46a42199d84d67</a>
<blockquote>
<p>
    Properly quote nested M4 macros. The old code breaks in autoconf 2.58.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@288 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-10 17:02:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75c1235ecc921075cb4ec9c2c25e5008d9efad75">75c1235ecc921075cb4ec9c2c25e5008d9efad75</a>
<blockquote>
<p>
    Correct arguments to jbig2_image_free().<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@287 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-09 13:59:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=995e4a01171a87bd2453fb05b13612e76720cd26">995e4a01171a87bd2453fb05b13612e76720cd26</a>
<blockquote>
<p>
    Add reference counting to the image structure to permit sharing of the glyph images<br>
    between symbol dictionaries.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@286 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_generic.c<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-06 18:08:48 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8f2d8d661e4230e61e095e336f1b14c739b62ba0">8f2d8d661e4230e61e095e336f1b14c739b62ba0</a>
<blockquote>
<p>
    Fix a bug with text region rendering in the Patent.pdf example file from<br>
    the adobe's encoder.<br>
<br>
    The problem was that we weren't handling the export/import of symbols<br>
    from dictionaries referred to by the symbol dictionaries referred to by<br>
    the text region segment.<br>
<br>
    This patch is just a quick fix: we recurse when building the list of<br>
    referred to symbol dictionaries at text region decode time, which<br>
    allows us to get at all the symbols. This works because the adobe<br>
    encoder (at least in this file) always exports all the symbols, imported<br>
    and encoded, in each dictionary. If it did not, we would have offset<br>
    errors in the symbol lookup.<br>
<br>
    A proper fix requires decoding the exported symbol flags and building an<br>
    export version of SBSYMS to store in the segment result that includes<br>
    the symbols imported from any other dictionaries. All while<br>
    intelligently sharing the decoded glyph data, of course.<br>
<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@285 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-03 16:39:41 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=51ae6b8a96296c1aab50df9d8cee662d09f155bf">51ae6b8a96296c1aab50df9d8cee662d09f155bf</a>
<blockquote>
<p>
    Add a missing header. Record warning fixes in the changelog.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@284 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-03 16:38:57 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=04b5524d8767196d4331887cfc6641ada5e5bf42">04b5524d8767196d4331887cfc6641ada5e5bf42</a>
<blockquote>
<p>
    Add a 'default' case to the output file format switch to clear up some<br>
    warnings.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@283 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-03 16:34:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d46b5050cb2ba55fbeb32e70ae368e614ff33d5a">d46b5050cb2ba55fbeb32e70ae368e614ff33d5a</a>
<blockquote>
<p>
    Remove an unused variable.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@282 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-11-03 16:32:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a9edf8c0252898ffb46431e8b5f7bc79d19634f6">a9edf8c0252898ffb46431e8b5f7bc79d19634f6</a>
<blockquote>
<p>
    Add string.h for memset().<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@281 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-10-31 12:17:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3232929d33a254885ae6b63e2281eda9595af1e">e3232929d33a254885ae6b63e2281eda9595af1e</a>
<blockquote>
<p>
    Cosmetic changes to the bootstrap script.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@280 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2003-10-27 10:28:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=350f6edb35cbe35fbb0ac7add1a1c7e46147a763">350f6edb35cbe35fbb0ac7add1a1c7e46147a763</a>
<blockquote>
<p>
    Add a cast to correct an MSVC warning.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@279 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-10-01 19:30:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e552e5440e5e285d7df43789a444ccba5727d642">e552e5440e5e285d7df43789a444ccba5727d642</a>
<blockquote>
<p>
    Remove an unnecessary check for the symbol id &lt; 0 (it's unsigned) and<br>
    correct a type mismatch. Both of these may have been causing warnings on<br>
    MSVC. Thanks to Igor Melichev for tracking down the problem.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@278 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-10-01 17:05:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=539a19a063a962277c04f2c36dbdebc9bad28649">539a19a063a962277c04f2c36dbdebc9bad28649</a>
<blockquote>
<p>
    Add protection against uninitialized dictionary lists, as can happen for<br>
    example when parsing a huffman-coded dictionary (nyi).<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@277 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-10-01 14:21:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1fd3f35b2f031f1cad486daeff3f625588745e33">1fd3f35b2f031f1cad486daeff3f625588745e33</a>
<blockquote>
<p>
    Correct an allocation size bug that caused memory access errors when the<br>
    initial buffer handed to jbig_data_in() didn't match the internal 4k<br>
    size. Thanks to Tor for reporting the bug.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@276 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-09-29 15:33:48 +0000
</strong>
<br>tor &lt;tor@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bcc1da0257a3f721a4ca95421a996969b8bfb2f6">bcc1da0257a3f721a4ca95421a996969b8bfb2f6</a>
<blockquote>
<p>
    Bounds checking and fixed bug with a0 and black background<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@275 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-09-04 04:56:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=848fce58b72d73a7345e713f26591674bd019c78">848fce58b72d73a7345e713f26591674bd019c78</a>
<blockquote>
<p>
    Update the changelog (nothing new to report).<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@274 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-09-03 07:27:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5bd9271ff22faa44bfe4d0120562c52fa964237">c5bd9271ff22faa44bfe4d0120562c52fa964237</a>
<blockquote>
<p>
    Add some uint*_t typedefs for cygwin. Cygwin apparently doesn't provide stdint.h, but does define<br>
    some of the types in sys/types.h which conflict with the versions in config_types.h. We only use<br>
    sys/types.h in snprintf.c, but it's pulled in by Ghostscript's portability cruft when we're<br>
    compiling in rather than linking to that program. Thus we must circumvent the config_types.h<br>
    definitions on that platfrom.<br>
<br>
    After a patch by Alex Cherepanov.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@273 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-09-03 06:40:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d23c17acdea2efdbed778078e377c3325106de2">9d23c17acdea2efdbed778078e377c3325106de2</a>
<blockquote>
<p>
    Add double include protection to os_types.h.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@272 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-09-03 02:56:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=29466e003185c7d4ea43e3a1633c0aa8a6286e7f">29466e003185c7d4ea43e3a1633c0aa8a6286e7f</a>
<blockquote>
<p>
    Apply a patch to support compilation on VMS (as part of Ghostscript with openvms.mmk). Closes<br>
    http://bugs.ghostscript.com/show_bug.cgi?id=686966.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@271 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
snprintf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-08-01 14:57:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a11b2b5223c1f1704105ed5a26c319e7efeba5de">a11b2b5223c1f1704105ed5a26c319e7efeba5de</a>
<blockquote>
<p>
    Enable dist-zip since that packaging was the most popular on<br>
    sourceforge.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@270 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2003-08-01 14:34:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cd3bd3d78bb76152b58a6d529a4c34970fb03986">cd3bd3d78bb76152b58a6d529a4c34970fb03986</a>
<blockquote>
<p>
    Set release date for 0.4 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@267 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-07-16 00:52:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b26c92852bd3474fab9730bbcdadf81613ebef7d">b26c92852bd3474fab9730bbcdadf81613ebef7d</a>
<blockquote>
<p>
    Replace the if tree for choosing sized int types with an easier to read<br>
    case statement.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@266 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-07-16 00:40:34 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=231a82bff53bdc53098672af60c6436ca99faca4">231a82bff53bdc53098672af60c6436ca99faca4</a>
<blockquote>
<p>
    Use JBIG2_DEBUG instead of plain DEBUG for compile-conditional debugging<br>
    output. This reduces unnecessary output when we're compiled with our<br>
    client's CFLAGS. Request from Ray Johnston.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@265 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
jbig2_image.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-17 19:24:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=69366cad35ef4da5c3c030a4e34c667df2fe900a">69366cad35ef4da5c3c030a4e34c667df2fe900a</a>
<blockquote>
<p>
    Automake automatically distributes COPYING, but not LICENSE. :)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@264 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-14 11:11:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db0078f2e4e5a4db5bf4d489c05a4047a89a0b90">db0078f2e4e5a4db5bf4d489c05a4047a89a0b90</a>
<blockquote>
<p>
    Some wording cleanup.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@263 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-14 10:20:56 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c98a1913b50905360c05449ca30084ed51c6658a">c98a1913b50905360c05449ca30084ed51c6658a</a>
<blockquote>
<p>
    Grant GPL exception for linking to AFPL Ghostscript.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@262 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
LICENSE<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-14 10:15:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c0bc856d478246a9a5f0f6b264880fee99084a87">c0bc856d478246a9a5f0f6b264880fee99084a87</a>
<blockquote>
<p>
    Add banner change to the changelog.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@261 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-14 09:40:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8cb34f5bcc802d6ce57a78b50dc9c75eb0fe0667">8cb34f5bcc802d6ce57a78b50dc9c75eb0fe0667</a>
<blockquote>
<p>
    Turn on keyword substitution so our $Id$ lines get updated in<br>
    subversion.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@260 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-06-13 22:42:55 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43fcbcd7acbd0b2d64a770ca39590e2356df4337">43fcbcd7acbd0b2d64a770ca39590e2356df4337</a>
<blockquote>
<p>
    Update the license headers to use the same legal redirect as Ghostscript<br>
    does. The individual files point to the file LICENSE which contains the<br>
    real license (a pointer to the GPL in COPYING). This simplifies<br>
    remarking for commercial distribution.<br>
<br>
    Also some minor additional debug prints in the symbol lookup code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@259 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
LICENSE<br>
config_win32.h<br>
jbig2.c<br>
jbig2.h<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
jbig2dec.c<br>
memcmp.c<br>
os_types.h<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-20 12:03:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=54850de6b0bf55dd409a699be469a133be564028">54850de6b0bf55dd409a699be469a133be564028</a>
<blockquote>
<p>
    Bump version number post-commit.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@258 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-20 10:39:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0797f658a74d280ca5bcec76ca932475d3b24be9">0797f658a74d280ca5bcec76ca932475d3b24be9</a>
<blockquote>
<p>
    Set date for 0.3 release.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@255 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-20 10:34:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf4c5147c8ecf2babc6a1a816d27ddaf784b2a0f">cf4c5147c8ecf2babc6a1a816d27ddaf784b2a0f</a>
<blockquote>
<p>
    Update changelog.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@254 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-20 10:31:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4be0d08eaeb704454a7bf1dc95e7b6739fface4e">4be0d08eaeb704454a7bf1dc95e7b6739fface4e</a>
<blockquote>
<p>
    Complete implementation of mmr decoding. We now pass another of the ubc test bitstreams!<br>
    (042_3.jb2, mmr generic region) Patch from Tor Andersson.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@253 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-20 10:30:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=01736665634a1be9b07b275a5a365b56f445d965">01736665634a1be9b07b275a5a365b56f445d965</a>
<blockquote>
<p>
    Recorrect a typo in the recommit.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@252 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:45:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=72f228cadf2b189713cdcb92c1cb20facdab0822">72f228cadf2b189713cdcb92c1cb20facdab0822</a>
<blockquote>
<p>
    correct a typo.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed May  7 05:00:33 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@251 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:44:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96c0fc6a33671822f63d5941e045c8f88e8e3241">96c0fc6a33671822f63d5941e045c8f88e8e3241</a>
<blockquote>
<p>
    Add Theo deRaadt's portable (v)snprintf implementation for portability, under<br>
    the BSD license, including advertising. A simple check was added to the configure<br>
    script, but no prototypes, so it may not help any on systems without the functions.<br>
<br>
    Submission from Jouk Jansen to allow compilation into Ghostscript on OpenVMS.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed May  7 04:17:39 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@250 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
snprintf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:41:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c65c52c0638fdfd3613fc7becd77410769ac62ec">c65c52c0638fdfd3613fc7becd77410769ac62ec</a>
<blockquote>
<p>
    Move HAVE_LIBPNG to the msvc makefile; this shouldn't necessarily be included in the win32 build<br>
    (e.g. in ghostscript) so we only define it in our local msvc makefile.<br>
<br>
    (recommitted after repository became corrupt. original change Wed May  7 03:48:12 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@249 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:39:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ed232578276caf6e999a2a9c0b6fd8952af659c">1ed232578276caf6e999a2a9c0b6fd8952af659c</a>
<blockquote>
<p>
    Further conditionalize the symbol dictionary debug dump: it's now enabled with DUMP_SYMDICT<br>
    instead of just DEBUG.<br>
<br>
    (recommitted after repository became corrupt. original change date Mon May  5 10:26:31 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@248 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:34:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f525802258cbed79e961d81e15390adf0f597ee">2f525802258cbed79e961d81e15390adf0f597ee</a>
<blockquote>
<p>
    Avoid a (spurious) uninitialized variable warning.<br>
<br>
    (recommitted after repository became corrupt. original change date Mon May  5 10:23:28 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@247 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:33:22 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3539c7888e025ebd0847d7099cf0a88b2465c8e">e3539c7888e025ebd0847d7099cf0a88b2465c8e</a>
<blockquote>
<p>
    Pass the segment number to fprintf in the default error handler.<br>
<br>
    (recommitted after repository became corrupt. original change date Mon May  5 10:22:41 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@246 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:32:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5c9498154bb7e722777fcda2294b31535ef06e08">5c9498154bb7e722777fcda2294b31535ef06e08</a>
<blockquote>
<p>
    Bump version number post-release.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed Apr 16 19:42:34 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@245 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
config_win32.h<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 22:25:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=48db6a4570673a48ee2c911d2259c79437080b54">48db6a4570673a48ee2c911d2259c79437080b54</a>
<blockquote>
<p>
    Add brief instructions for building zlib and libpng under MSVC.<br>
    Contributed by Russell Lang.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed Apr 16 19:00:23 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@242 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:09:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bfea189549eccb3a6f1a81bbd1bbb092ab789b35">bfea189549eccb3a6f1a81bbd1bbb092ab789b35</a>
<blockquote>
<p>
    Mention adobe encoder handling in the changelog. We still don't handle multi-page (separate global<br>
    stream) documents properly.<br>
<br>
    (recommitted after repository became corrupt. original change dated Wed Apr 16 18:45:19 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@241 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:07:31 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bf2f470f28a35f6670aa9b31214e0624364f992f">bf2f470f28a35f6670aa9b31214e0624364f992f</a>
<blockquote>
<p>
    strncasecmp() isn't portable. work around until we can provide our own.<br>
<br>
    (recommitted after repository became corrupt. original change dated Wed Apr 16 18:44:11 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@240 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:05:37 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=09f3c413c9112606dc3afae719884151280f4e9d">09f3c413c9112606dc3afae719884151280f4e9d</a>
<blockquote>
<p>
    Update changelog for release.<br>
<br>
    (recommitted after repository became corrupt. original change dated Wed Apr 16 18:13:29 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@239 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:04:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6217b4a900b82dd6af3076e964382a402c0bfbf">a6217b4a900b82dd6af3076e964382a402c0bfbf</a>
<blockquote>
<p>
    It turned out not to be feasible to share rules between our MSVC<br>
    makefile and the integration makefile in ghostscript, so remove it.<br>
    msvc.mak is returned to it's previous state except for some additions<br>
    made when common.mak was introduced.<br>
<br>
    (recommitted after repository became corrupt. original change dated Apr 16 18:10:01 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@238 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
common.mak<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:02:11 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=816d22aedc4bf1bc5d629f3b94b801c2ccf14693">816d22aedc4bf1bc5d629f3b94b801c2ccf14693</a>
<blockquote>
<p>
    Remove the warnings flag; -Wall is gcc-specific so we need to turn it on from inside configure if<br>
    at all. There is an AC_COMPILE_WARNINGS() in the GNU ac-archive.<br>
<br>
    (recommitted after the repository became corrupt. original change dated Wed Apr 16 15:56:27 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@237 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 16:00:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3d615c2d58020492dda10a84ac06977a76035ef">e3d615c2d58020492dda10a84ac06977a76035ef</a>
<blockquote>
<p>
    MacOS generally has stdint.h available (Apple's tools on MacOS X or recent Metrowerks CodeWarrior)<br>
    but may not be using the autoconf detection. Include it in such cases.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed Apr 16 15:48:14 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@236 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
os_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 15:59:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7b85c55864583c6955e69f192795a66312b6aabd">7b85c55864583c6955e69f192795a66312b6aabd</a>
<blockquote>
<p>
    Add -Wall to the CFLAGS.<br>
<br>
    (recommitted after repository became corrupt. original change date Wed Apr 16 15:45:59 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@235 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2003-05-07 15:56:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9e4350a4eedb67290d35526d526878ab99d8a1a2">9e4350a4eedb67290d35526d526878ab99d8a1a2</a>
<blockquote>
<p>
    Change the declaration to match the prototype.<br>
<br>
    (recommitted after repository became corrupt; original change Wed Apr 16 15:45:15 2003)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@234 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-04-02 16:17:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=de8bf02d7172eba62b4d6a66c608cd9d11773d1e">de8bf02d7172eba62b4d6a66c608cd9d11773d1e</a>
<blockquote>
<p>
    Free the output filename.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@232 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-04-02 16:12:17 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=246505fd73f229f252b2ad368006ce234a09b7b9">246505fd73f229f252b2ad368006ce234a09b7b9</a>
<blockquote>
<p>
    Try to set the output format based on the extension given in -o if any.<br>
    Also fixes a bug where the format was undefined with -o. (yay valgrind!)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@231 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-04-01 21:57:40 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=362445ced69525d1556b72de5c078b87eed56625">362445ced69525d1556b72de5c078b87eed56625</a>
<blockquote>
<p>
    Implement the '-t' option for setting the output file format.<br>
    Useful for forcing pbm output even when compiled with png support.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@230 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-04-01 21:00:23 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e07cbaf880581cb1f808e409725d2b94c55a8630">e07cbaf880581cb1f808e409725d2b94c55a8630</a>
<blockquote>
<p>
    Allocate sufficient memory for the referred-to segment list.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@229 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-04-01 20:56:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5ff079d941a29486cc74bf08715b2a24c775af5">f5ff079d941a29486cc74bf08715b2a24c775af5</a>
<blockquote>
<p>
    Add some additional comments.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@228 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-31 21:27:05 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e95bfa1388379875a3b329b83046b997c15d853">5e95bfa1388379875a3b329b83046b997c15d853</a>
<blockquote>
<p>
    Abstract common build rules to a separate makefile to facilitate building into ghostscript.<br>
    Someone should test that msvc.mak still works.<br>
<br>
    Ideally we'll make autogen.sh re-create common.mak at some point.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@227 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
common.mak<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-25 00:17:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96f6a87358df7183b9070a8441cce4a2c2e46541">96f6a87358df7183b9070a8441cce4a2c2e46541</a>
<blockquote>
<p>
    add some comments<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@226 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-23 22:24:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8f68c407604a7584cbd9c0b2323530b2451b24eb">8f68c407604a7584cbd9c0b2323530b2451b24eb</a>
<blockquote>
<p>
    Mention the new subversion repository.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@225 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
README<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-10 14:44:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65b4b234ef4c5d12d8d5f9d624d51595f9e8f14f">65b4b234ef4c5d12d8d5f9d624d51595f9e8f14f</a>
<blockquote>
<p>
    add a debug message about segment page association<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@222 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-05 14:29:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f93bc27cbd73b33ac30122d2ca64aab63ce0e327">f93bc27cbd73b33ac30122d2ca64aab63ce0e327</a>
<blockquote>
<p>
    Make jbig2_find_segment() part of the public api and move it to jbig2_segment.c.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@221 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-05 12:25:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce9531e0941d40cd301d1c1dfd15d6b0a4289cc8">ce9531e0941d40cd301d1c1dfd15d6b0a4289cc8</a>
<blockquote>
<p>
    correct a nested debug #ifdef<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@220 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-05 03:32:41 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c63db75d9076c14e2e7f89f4d93950f51a30d606">c63db75d9076c14e2e7f89f4d93950f51a30d606</a>
<blockquote>
<p>
    Update copyright dates on new files.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@219 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-05 02:44:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22881a46c322b45b34e20b9270e825dbe5c2c1a1">22881a46c322b45b34e20b9270e825dbe5c2c1a1</a>
<blockquote>
<p>
    Add support for ASCII-format comment extension segments. So far it's just<br>
    useful for printing out the contents through the error callback; eventually<br>
    there should be a public interface of the metadata tables and references from<br>
    the associated ctx/page/segments.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@218 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_metadata.c<br>
jbig2_metadata.h<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-04 17:29:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4f74ab25a2904a70c3e1e017090aed00cbd4cae3">4f74ab25a2904a70c3e1e017090aed00cbd4cae3</a>
<blockquote>
<p>
    Code cleanup: re-order a buffer-size check in the segement header parser to avoid a memory leak on<br>
    failure.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@217 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-04 16:52:48 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=21c62259b5fa2ca459e5d0285ba35e1498523b95">21c62259b5fa2ca459e5d0285ba35e1498523b95</a>
<blockquote>
<p>
    Switch to automake 1.7 and move the options to Makefile.am.<br>
<br>
    Sorry, calling automake-1.6 on macosx was causing wierd errors. This was just<br>
    easier. I hope that with 1.7 the am maintainers are finally getting things stable.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@216 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-04 16:15:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=274ae8d1af9e66b43712a2ca589884cea01e9aee">274ae8d1af9e66b43712a2ca589884cea01e9aee</a>
<blockquote>
<p>
    Remove the check for malloc. Since we're assuming C99, it will definitely be there, and recent<br>
    versions of autoconf expect to be able to substitute a wrapper than handles malloc(0) a feature<br>
    we don't depend on.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@215 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-04 15:39:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb59bb24b925af295e1a387fc72042c143018e0e">cb59bb24b925af295e1a387fc72042c143018e0e</a>
<blockquote>
<p>
    Correct a typo in the previous commit.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@214 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2003-03-04 15:24:58 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e6ad78534cb77c4ae3beb02c2843f6a546794f13">e6ad78534cb77c4ae3beb02c2843f6a546794f13</a>
<blockquote>
<p>
    Try to make autogen.sh smarter about automake version mismatch.<br>
<br>
    This is really silly, but there's a serious problem with incompatibility<br>
    between the various versions of automake, and while there is a mechanism<br>
    for requesting a particular version in the Makefile.am, most<br>
    installations don't make use of this information, and you're supposed to<br>
    know which automake to call. Since this obviates the point of autogen,<br>
    we attempt to match a requested version in AUTOMAKE_HEADERS to likely<br>
    executables. Probably not very robust.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@213 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-11 22:59:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cfe0afbb44960be129c6d25fe3287d1ecfc15474">cfe0afbb44960be129c6d25fe3287d1ecfc15474</a>
<blockquote>
<p>
    Correct some accidentally-introduced line breaks in the sha1 code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@212 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-07 05:14:09 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5fb176e3daee8d87d1b6a25eb4d71b03a20694ea">5fb176e3daee8d87d1b6a25eb4d71b03a20694ea</a>
<blockquote>
<p>
    Debug message for &quot;referred to segment&quot; had an extra level of<br>
    redirection.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@211 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-07 05:06:46 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=376546a60ce0bf4ff095f234b1d8ad429b6b450b">376546a60ce0bf4ff095f234b1d8ad429b6b450b</a>
<blockquote>
<p>
    Fixes: make find_segment search globals, and also fix off-by-one.<br>
    Disable memcpy optimization in jbig2_image_compose, because it's not<br>
    always valid.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@210 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-05 15:27:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e048fb252ff7f9b0355e444b0fb65804e68e1c7">5e048fb252ff7f9b0355e444b0fb65804e68e1c7</a>
<blockquote>
<p>
    Use a namespace-prefixed, more verbose name for the MMR huffman tables. They<br>
    were of course conflicting with their counterparts in Ghostscript.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@209 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-05 15:09:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fce47c5bcdb3d0fe30fdc0ac0868a27a76198a2a">fce47c5bcdb3d0fe30fdc0ac0868a27a76198a2a</a>
<blockquote>
<p>
    Add double-include protection to the public header.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@208 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-02-03 20:04:11 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=66d05e3c767bad968a98b9f63a88b07cb9df624f">66d05e3c767bad968a98b9f63a88b07cb9df624f</a>
<blockquote>
<p>
    Provide a default error handler if the client doesn't specify one,<br>
    analogous to what we do with the allocator. Also, check for failure<br>
    of the initial context allocator and improve api description in the<br>
    public header file.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@207 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
<p>
</blockquote>
<hr>
<p><strong>2003-01-27 16:49:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8fd3ed86d9a6b47715235d32994bd355f5d99f69">8fd3ed86d9a6b47715235d32994bd355f5d99f69</a>
<blockquote>
<p>
    add some files to cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@206 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-11-14 12:19:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5df2b837e72d1d781fcc29c0d21f82222c2e7af4">5df2b837e72d1d781fcc29c0d21f82222c2e7af4</a>
<blockquote>
<p>
    Add the three-page test file from appendix h of the jbig2 spec. This version<br>
    was extracted from the final candidate draft but is identical to the officially<br>
    ratified versions.<br>
<br>
    Note that we can't actually handle this file yet.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@205 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
annex-h.jbig2<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-15 14:57:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f24a7a84cca3fefe41cc459baf692fee6f0cd2ce">f24a7a84cca3fefe41cc459baf692fee6f0cd2ce</a>
<blockquote>
<p>
    document portability fixes<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@204 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-15 14:54:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=73934fd922618a011046c6fcbd844b26854b584f">73934fd922618a011046c6fcbd844b26854b584f</a>
<blockquote>
<p>
    Remove //-style comments for the benifit of those not using gcc.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@203 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-15 13:52:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6d9d6dd41f859c4dd3fb53c4fccc0ca34ca6a87">c6d9d6dd41f859c4dd3fb53c4fccc0ca34ca6a87</a>
<blockquote>
<p>
    checkpoint commit: do-nothing -t option for setting output file type.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@202 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-15 11:55:34 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=771b3b4d02bb7f12c9e08cc602261857499ccefb">771b3b4d02bb7f12c9e08cc602261857499ccefb</a>
<blockquote>
<p>
    Prepend -lpng -lz to LIBS to preserve link order dependencies.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@201 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 16:58:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5911b3cda06461a8f4fab259bb6f86d5453a0bb">f5911b3cda06461a8f4fab259bb6f86d5453a0bb</a>
<blockquote>
<p>
    correct order of pow() check<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@200 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 16:07:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d113ae2198cca92f0c82f55e1cb792fa66cc6004">d113ae2198cca92f0c82f55e1cb792fa66cc6004</a>
<blockquote>
<p>
    Add a --with-libpng[=prefix] option. This can be used to specify the<br>
    prefix where libpng is installed (assuming prefix/include, prefix/lib)<br>
    if it's not on the default search path. It can also be used (as --without-libpng)<br>
    to explicitely disable the png output option.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@199 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 14:21:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63165e5f84efb734262603fe81633d7d89e18fe8">63165e5f84efb734262603fe81633d7d89e18fe8</a>
<blockquote>
<p>
    libpng calls pow() which on some systems means we need -lm.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@198 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 11:44:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=377728e4294c745faeec8f63523621e3839bb8ee">377728e4294c745faeec8f63523621e3839bb8ee</a>
<blockquote>
<p>
    Remove //-style comments.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@197 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 10:31:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=229557eb1f5fefdb69c63d38140edbbf5c7b6b6b">229557eb1f5fefdb69c63d38140edbbf5c7b6b6b</a>
<blockquote>
<p>
    Declare the test vector (strings) as char instead of unsigned char. We already cast to (uint8_t*) before passing to the hash routines, and the declaration caused a signed/unsigned warning in strlen() on some systems. Thanks to Tom Kacvinsky for this one.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@196 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 10:25:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=834b69f7023a5a3ea9c6e853cde1b67cbce29589">834b69f7023a5a3ea9c6e853cde1b67cbce29589</a>
<blockquote>
<p>
    remove spurious semicolon. thanks to Tom Kacvinsky for catching this.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@195 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-14 10:22:57 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f30fb27aea0ad95045aa6ce8ae51335268762cf7">f30fb27aea0ad95045aa6ce8ae51335268762cf7</a>
<blockquote>
<p>
    Fix up file-ending newlines. After a patch from Tom Kacvinsky.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@194 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
sha1.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-10 10:39:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=865f3114b422acadb98f51f9ffdaf92bfe8e680d">865f3114b422acadb98f51f9ffdaf92bfe8e680d</a>
<blockquote>
<p>
    refine const ** to const * const * to avoid warnings.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@193 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-07 12:50:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=85bf278b42fe3059dc8774d6f257dbc07ac50679">85bf278b42fe3059dc8774d6f257dbc07ac50679</a>
<blockquote>
<p>
    Use callbacks for writing png data out to a file. This is necessary when<br>
    dynamically linking to libpng on win32 when different run-times are used<br>
    for each library. Patch from Russell Lang.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@192 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image_png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-07 10:18:42 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6aa746d4788e43727f93ed58581ef13f45f5e4b1">6aa746d4788e43727f93ed58581ef13f45f5e4b1</a>
<blockquote>
<p>
    bump version post release<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@191 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
config_win32.h<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 14:35:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=45ced1e5e5c2cb8401bc7784297a905aba29051d">45ced1e5e5c2cb8401bc7784297a905aba29051d</a>
<blockquote>
<p>
    cvsignore additions<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@190 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 11:52:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a586cd6708d8255128081511e072778cd3f0d76">8a586cd6708d8255128081511e072778cd3f0d76</a>
<blockquote>
<p>
    fixup install target<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@188 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 11:31:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=037a0bdc906e729e42ecb6914c722db0a8f27270">037a0bdc906e729e42ecb6914c722db0a8f27270</a>
<blockquote>
<p>
    fix a typo<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@186 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image_png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 11:30:58 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4b55adb9e7e662440502d9a7a5558ce69f3f1dff">4b55adb9e7e662440502d9a7a5558ce69f3f1dff</a>
<blockquote>
<p>
    Wrap the README at 72 character-per-line and add links to the website and<br>
    mailing list.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@184 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
README<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 11:27:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4fa4291e3366e1794fcb594d5b1c1aea8c293e2f">4fa4291e3366e1794fcb594d5b1c1aea8c293e2f</a>
<blockquote>
<p>
    add the msvc makefile to the dist target<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@183 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 11:15:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bad2f808eed9cae57d030f76b3bb22f57618115e">bad2f808eed9cae57d030f76b3bb22f57618115e</a>
<blockquote>
<p>
    Add some casts to avoid MSVC warnings where it improves readability.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@181 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 10:57:49 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db6ba0ba18e02d73fcfcbdbddde043f8b841130f">db6ba0ba18e02d73fcfcbdbddde043f8b841130f</a>
<blockquote>
<p>
    Document png_init_io() not working on win32 when libpng is a dll. Please<br>
    link statically.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@180 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image_png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-06 10:54:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5debdea11d7e557cacc8d101d2b37784cba2668">f5debdea11d7e557cacc8d101d2b37784cba2668</a>
<blockquote>
<p>
    MSVC makefile updates from Russell Lang.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@178 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 23:07:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9fae8ec8e63aaa7eabdf3a1b87271da507e079d1">9fae8ec8e63aaa7eabdf3a1b87271da507e079d1</a>
<blockquote>
<p>
    additional code cleanup inspired by compiler warnings<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@176 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 23:00:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f8a8d032eda34625e956ad44a607c4243001ea81">f8a8d032eda34625e956ad44a607c4243001ea81</a>
<blockquote>
<p>
    remove unused variables<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@174 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:56:51 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9bdc3ab0c142018713b9ff4155b55525035b061">b9bdc3ab0c142018713b9ff4155b55525035b061</a>
<blockquote>
<p>
    Fix incorrect check for error condition; thanks to Russell Lang's MSVC<br>
    compile log for this.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@172 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:55:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=15db0db751e9ea2df2f56c25cce79c02b8bab9be">15db0db751e9ea2df2f56c25cce79c02b8bab9be</a>
<blockquote>
<p>
    include string.h for str* prototypes.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@170 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:47:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19968191d0e439174a62e9db1acda370373014ab">19968191d0e439174a62e9db1acda370373014ab</a>
<blockquote>
<p>
    make the buffer rd/wr offsets unsigned ints to avoid signed/unsigned<br>
    warnings. they should really be offset_t, but we're scared to use that<br>
    because no one else does.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@168 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:46:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a889e79e5e6b5815428ad9dbe56b11a65c8aa395">a889e79e5e6b5815428ad9dbe56b11a65c8aa395</a>
<blockquote>
<p>
    remove an unused variable<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@166 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:28:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2c6315036696b95ebec9dbb770283fee37b076fd">2c6315036696b95ebec9dbb770283fee37b076fd</a>
<blockquote>
<p>
    Define PACKAGE and VERSION for the win32 build<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@164 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 22:26:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=554d849f37c9e0a6b715378feca28c1187fc3c75">554d849f37c9e0a6b715378feca28c1187fc3c75</a>
<blockquote>
<p>
    remove an unreferenced variable.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@163 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 21:43:26 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=12819e23ead5fb7b54d28df3802d4678c0350a86">12819e23ead5fb7b54d28df3802d4678c0350a86</a>
<blockquote>
<p>
    properly pass in the client params with the error callback when opening embedded streams<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@162 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 18:06:37 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f4c012e1c266f010bb0f04b1319e9d5f82308dc">0f4c012e1c266f010bb0f04b1319e9d5f82308dc</a>
<blockquote>
<p>
    Add headers and test script to Makefile.am so they get distributed.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@161 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 18:06:06 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84599735f9e9e101f3f7a93002127b60248c7fa3">84599735f9e9e101f3f7a93002127b60248c7fa3</a>
<blockquote>
<p>
    remove redundant package and version indications<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@159 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 17:10:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6455a4bffb866a47732b574d1f2fd105f8b03544">6455a4bffb866a47732b574d1f2fd105f8b03544</a>
<blockquote>
<p>
    Add a memcmp() implementation, pulled in by autoconf if it's not available<br>
    or the system version is broken. Don't know where the header's supposed to<br>
    come from, since it defines no symbol for conditionalizing a prototype.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@157 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
memcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-08-05 16:56:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d77b454b4a356db81c8db7d0f74e5dc13dc46707">d77b454b4a356db81c8db7d0f74e5dc13dc46707</a>
<blockquote>
<p>
    mention reg testing in changelog<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@155 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 17:23:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a3078ab2eb1718856a54d53056da4b68d976932">0a3078ab2eb1718856a54d53056da4b68d976932</a>
<blockquote>
<p>
    move repeated configuration includes to a new os_types.h<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@153 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_iaid.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2dec.c<br>
os_types.h<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 17:06:04 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a07db105fb7181327662b01282ccae6b69fa67b">7a07db105fb7181327662b01282ccae6b69fa67b</a>
<blockquote>
<p>
    require automake 1.6<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@152 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 16:19:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=988dc4fc92252070dfdc00c7aa44ebc91c2c7a74">988dc4fc92252070dfdc00c7aa44ebc91c2c7a74</a>
<blockquote>
<p>
    minor rearrange<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@151 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 16:09:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d306e9ed969ff29bbceb2092ca67d9671e04a6a">4d306e9ed969ff29bbceb2092ca67d9671e04a6a</a>
<blockquote>
<p>
    document endian worry<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@150 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 16:05:14 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=201eeb8a511e28806bf1786ff1b57b8331b34808">201eeb8a511e28806bf1786ff1b57b8331b34808</a>
<blockquote>
<p>
    Remove an obsolete AC_SUBST<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@149 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 16:07:34 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a61fc54c09021114fae3744f16f4fa6fb79192be">a61fc54c09021114fae3744f16f4fa6fb79192be</a>
<blockquote>
<p>
    Space after testing message elipsis.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@148 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
sha1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-20 16:02:24 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bf37c640d04807206926a1fe7b7c501db9225452">bf37c640d04807206926a1fe7b7c501db9225452</a>
<blockquote>
<p>
    Replace (optional) linking to the openssl implementation of SHA-1, which<br>
    is not GPL compatible with a native implementation based on Steve Reid's<br>
    public domain implementation from sea-to-sky.net. Our version remains<br>
    public domain, but now requires our autotools-generated headers.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@146 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
configure.ac<br>
jbig2dec.c<br>
sha1.c<br>
sha1.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-17 23:59:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=950df8201674a19af5fa5ff61ba7b006b0691edb">950df8201674a19af5fa5ff61ba7b006b0691edb</a>
<blockquote>
<p>
    Use the recommended 'generalized' digest api from openssl, still computing<br>
    SHA-1. Treat the hash bytes as unsigned; update the ubc hash values to<br>
    properly printed ones. N.B.: the printing hash still doesn't match the one<br>
    generated by invoking 'openssl dgst -sha1 -hex' on the pbm output with the<br>
    header stripped. I don't understand why.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@144 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-17 13:59:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e21659fda78e53fdcbed87290a51a178d26788f6">e21659fda78e53fdcbed87290a51a178d26788f6</a>
<blockquote>
<p>
    Add a regression test script based on the python unittest framework.<br>
    It looks for known files, runs 'jbig2dec --hash' and compares the result<br>
    to the known correct value. Currently it looks for the ubc test files<br>
    in '../ubc/'<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@143 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
test_jbig2dec.py<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-17 13:52:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d88cf9f4fdb0b874f9544ac54bcbf3b536665096">d88cf9f4fdb0b874f9544ac54bcbf3b536665096</a>
<blockquote>
<p>
    comment out debug printouts<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@142 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-16 21:19:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d8a599b44667b94b66cc94d818ff62ea7826d3d">7d8a599b44667b94b66cc94d818ff62ea7826d3d</a>
<blockquote>
<p>
    implement --quiet and --verbose. Verbosity now defaults to '1', which<br>
    only warnings and fatal errors. -v recovers the old behavior. intermediate<br>
    levels can be set with --verbose=n. -q/--quiet is the same as --verbose=0;<br>
    it should supress all messages.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@141 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-15 23:50:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=427435dd1db50cb1b88000e6f785fcfe74c3bb0e">427435dd1db50cb1b88000e6f785fcfe74c3bb0e</a>
<blockquote>
<p>
    implement --version<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@140 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-15 23:25:30 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dabd594f325487412c44b593b8aae566c3fc9eab">dabd594f325487412c44b593b8aae566c3fc9eab</a>
<blockquote>
<p>
    add config_types.h.in, generated by autogen.sh, to the AM MAINTAINERCLEANFILES variable.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@139 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-15 20:01:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d53ab5a9d654df525f522afb43c6afeb6c1b6d4b">d53ab5a9d654df525f522afb43c6afeb6c1b6d4b</a>
<blockquote>
<p>
    Add a '--hash' cmdline option to print the SHA-1 hash of the decoded<br>
    document. Useful for regression testing. We currently use the openssl/<br>
    libcrypto implemention; there's provision for fallback to a local version<br>
    but I've not written one yet. It should probably just be the default once<br>
    provided.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@138 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 01:22:50 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=778b53afed3f8cd0caa85d81a3f1fd0a3a35c446">778b53afed3f8cd0caa85d81a3f1fd0a3a35c446</a>
<blockquote>
<p>
    update configure.ac to 2.53, use AC_LIBOBJ() instead of updating LIBOBJS directly<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@137 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 01:10:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da5605986165e0acfde37fda4dfe594eba8d95d0">da5605986165e0acfde37fda4dfe594eba8d95d0</a>
<blockquote>
<p>
    remove 'can define uint32_t as' messages and fix a typo<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@136 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 01:04:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=31aeca142b98bd794167a31c741bf73b191d6adb">31aeca142b98bd794167a31c741bf73b191d6adb</a>
<blockquote>
<p>
    Don't use shell expansions in the init macro arguments; autoconf now provides m4 macros for that.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@135 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 00:32:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f9e3d8813674fe45ec12a3b75f5ab9024747a41d">f9e3d8813674fe45ec12a3b75f5ab9024747a41d</a>
<blockquote>
<p>
    make jbig2_decode_text_region() static<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@134 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 00:32:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8c096907fe8dd6484d21c45b96ed035fee36b776">8c096907fe8dd6484d21c45b96ed035fee36b776</a>
<blockquote>
<p>
    Fix up make_output_filename(), improve usage message.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@133 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-13 00:03:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=372fddd151857b3047e1487589e88f4555c0ec9a">372fddd151857b3047e1487589e88f4555c0ec9a</a>
<blockquote>
<p>
    ui cleanup. output filename generation is broken<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@132 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 10:39:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e7ee4564585ddd8cd3ab20af5df840d818be0751">e7ee4564585ddd8cd3ab20af5df840d818be0751</a>
<blockquote>
<p>
    protect definitions of TRUE/FALSE<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@131 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 10:13:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=21b56ef9c96211883841f4b55342c805a09619a4">21b56ef9c96211883841f4b55342c805a09619a4</a>
<blockquote>
<p>
    Prefer #if defined()<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@130 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 10:09:19 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6bb931251b4346a34dca8eafdfa1157c3bf7b339">6bb931251b4346a34dca8eafdfa1157c3bf7b339</a>
<blockquote>
<p>
    Correct win32 headers dependency.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@129 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 09:49:31 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9f0cd84893d4b71effe4bfd4595d59a5be7f6fc5">9f0cd84893d4b71effe4bfd4595d59a5be7f6fc5</a>
<blockquote>
<p>
    We now decode the CVision Starr Report page embedded stream, once extracted from the pdf.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@128 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 09:45:32 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75e38f7a64fa7aace00e9a8a48cdfe1904adecc5">75e38f7a64fa7aace00e9a8a48cdfe1904adecc5</a>
<blockquote>
<p>
    Work around missing end-of-page segment in CVision's PDF-embedded jbig2 streams.<br>
    jbig2_complete_page() becomes a public function marking the current page finished<br>
    so the client can call it at end-of-data, since data-shovel interface has no way<br>
    of passing that out-of-band. The segment dispatch calls a new jbig2_parse_end_of_page()<br>
    which does error checking and then calls jbig2_complete_page().<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@126 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-09 09:38:37 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d7d07a0b4a33596ac29f0e3809720e829cf1427b">d7d07a0b4a33596ac29f0e3809720e829cf1427b</a>
<blockquote>
<p>
    Correct the dictionary-referral logic in the text segment decoder. Previously<br>
    we were using the decode order index to lookup the referenced segments(s) but<br>
    this breaks if the segment numbers don't begin and 0 and increase one-by-one.<br>
    We now search backward looking for a matching segment number. Should replace<br>
    this with a binary search once we start seeing bigger files.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@125 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 19:23:11 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=66b303cfa844f3f8afcebb5d212520cf6de77f7a">66b303cfa844f3f8afcebb5d212520cf6de77f7a</a>
<blockquote>
<p>
    additional debug messages<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@124 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 19:21:35 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca393a748cf39ff0818a4183a6deb272ade44bfb">ca393a748cf39ff0818a4183a6deb272ade44bfb</a>
<blockquote>
<p>
    Fix parsing of sequential files.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@123 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:54:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0e74e387b2ac9dfb748dc090528bc1debe347afa">0e74e387b2ac9dfb748dc090528bc1debe347afa</a>
<blockquote>
<p>
    Add support for building under Microsoft Visual C++ after a patch from Russell Lang. Please test.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@121 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
config_win32.h<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_iaid.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2dec.c<br>
msvc.mak<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:26:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44cbf7cdc4d9c545004218ffc10c41b2fab7c38c">44cbf7cdc4d9c545004218ffc10c41b2fab7c38c</a>
<blockquote>
<p>
    Remove the internal include of stdint.h from jbig2.h, enforcing the requirement<br>
    that the calling C file to do so.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@120 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:19:51 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ea3cbeb28b39fe56c7d791361f969b255fb59bd">7ea3cbeb28b39fe56c7d791361f969b255fb59bd</a>
<blockquote>
<p>
    Add a CHANGES document.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@119 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
CHANGES<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:13:04 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb37c87f0474f8d055520f3cda6fb0ddec667bbf">eb37c87f0474f8d055520f3cda6fb0ddec667bbf</a>
<blockquote>
<p>
    add pbm2png to cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@117 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:11:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=12c09379bf9380ca153eff8f96ebb84f00d7a000">12c09379bf9380ca153eff8f96ebb84f00d7a000</a>
<blockquote>
<p>
    Update pbm2png.c to pass a jbig2 context for the allocator, so that<br>
    it can be linked against the current routines.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@116 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 14:10:27 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c860cbae3e0b07420dfd2407173673a451a36237">c860cbae3e0b07420dfd2407173673a451a36237</a>
<blockquote>
<p>
    Don't look for png.h specifically. This was causing problems with png.h was in an -I in CFLAGS, but not the standard place.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@115 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 13:45:50 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af9ddb9b26b13821f97d789f866c09c15bcc254e">af9ddb9b26b13821f97d789f866c09c15bcc254e</a>
<blockquote>
<p>
    add config_types.h(.in) to cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@114 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-08 13:40:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9d1e45dc2ee18fe0935e174499779f5b2505028">b9d1e45dc2ee18fe0935e174499779f5b2505028</a>
<blockquote>
<p>
    Work around stdint.h portability problems. If the C99 header isn't available,<br>
    look for uint32_t in a few other likely headers. Also try and discover appropriate<br>
    sizes and use our own typedefs if no useful header is found.<br>
<br>
    All this goes into a new generated header file 'config_types.h'. We abuse<br>
    autogen.sh to create the template so it doesn't clutter cvs for non-autotools<br>
    builds.<br>
<br>
    Include config.h and config_types.h into every file that includes jbig2_priv.h<br>
    so ensure the types are defined.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@112 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
autogen.sh<br>
configure.ac<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith_iaid.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_huffman.c<br>
jbig2_image.c<br>
jbig2_image_png.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-07 20:38:26 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63beb9c3beb1b0a0ab3579ab8e7b17b02c0f76f9">63beb9c3beb1b0a0ab3579ab8e7b17b02c0f76f9</a>
<blockquote>
<p>
    minor rename<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@111 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-07 20:30:57 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6c00475e659e7f29c142e879ec3dd9d4b5375ee5">6c00475e659e7f29c142e879ec3dd9d4b5375ee5</a>
<blockquote>
<p>
    Handle lossy and intermediate text regions as well as lossless immediate.<br>
    Store the bitmap for intermediate text regions into the segment's result field for later use by a refinement region.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@110 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-04 16:33:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d85ffd487d624754ce5784fb970e939bc8b9dd5c">d85ffd487d624754ce5784fb970e939bc8b9dd5c</a>
<blockquote>
<p>
    API renames. Main loop is now jbig_data_in(data); image=jbig2_page_out();<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@109 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
jbig2_page.c<br>
jbig2_segment.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-04 13:54:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f94a083d0d5f35721a1fbdd61f2b908ae41b9189">f94a083d0d5f35721a1fbdd61f2b908ae41b9189</a>
<blockquote>
<p>
    cvsignore update<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@108 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-04 13:53:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c517739877594997a67dfd383c80c8d3dacc96b">4c517739877594997a67dfd383c80c8d3dacc96b</a>
<blockquote>
<p>
    fill out the README<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@107 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
README<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-04 13:34:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2048089ff9b99ac20bcfcb4dad4b2238e796db68">2048089ff9b99ac20bcfcb4dad4b2238e796db68</a>
<blockquote>
<p>
    Clean up some warnings from MSVC. Thanks to Russell Lang for the report.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@105 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_arith_iaid.c<br>
jbig2_arith_int.c<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_mmr.c<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-04 12:08:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6515f25ce92cb589a7ed16217dffcc012e08a4ea">6515f25ce92cb589a7ed16217dffcc012e08a4ea</a>
<blockquote>
<p>
    Code cleanup (obsuscation?) Turn off excessive debugging output.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@104 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 21:51:09 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cdac7ee4efe0e16a97c2d564af1b59b60f66e2d3">cdac7ee4efe0e16a97c2d564af1b59b60f66e2d3</a>
<blockquote>
<p>
    Fix image compositor. Code is not beautiful, but works.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@103 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 19:54:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f4a16df4d230a900f2068a268103184da90097e4">f4a16df4d230a900f2068a268103184da90097e4</a>
<blockquote>
<p>
    checkpoint compositor development<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@102 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 19:43:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6820e140bc4b306fb7852ae4994bf6d38f2a906">a6820e140bc4b306fb7852ae4994bf6d38f2a906</a>
<blockquote>
<p>
    As per raph's suggestion, switch to byte-wise addressing for the image data.<br>
    It solves some endianness problems, and saves a significant amount of memory<br>
    since page and pattern dictionaries contain many small (&lt; 32 pixels wide)<br>
    images.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@101 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 14:56:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=55a01f747fb2b992f7b777f1a2d7ee8cac1e13af">55a01f747fb2b992f7b777f1a2d7ee8cac1e13af</a>
<blockquote>
<p>
    Compositors now producing reasonable-looking output.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@100 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 00:55:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b872950543e8b6179b301da282baed48ddd6a67">6b872950543e8b6179b301da282baed48ddd6a67</a>
<blockquote>
<p>
    checkpoint commit of compositor.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@99 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 00:30:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=154b1f71742acab16d9106796cede9c3f12a65c8">154b1f71742acab16d9106796cede9c3f12a65c8</a>
<blockquote>
<p>
    Oops. Previous stride calculation was correct.<br>
    Also remove obsolete png test code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@98 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_image.c<br>
jbig2_image_png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 00:10:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3b182de2e206756ddcdd715d8f561273f75a62c2">3b182de2e206756ddcdd715d8f561273f75a62c2</a>
<blockquote>
<p>
    We've been using (and want) the image stride in bytes, not words.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@97 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-03 00:08:40 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a5f7064637d1d9efe7c0a0920d81f70f99c6d456">a5f7064637d1d9efe7c0a0920d81f70f99c6d456</a>
<blockquote>
<p>
    #ifdef the debug fprintf()s. comment cleanup. actually transpose on TRANSPOSED.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@96 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-07-01 19:34:31 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6c52ccfe9970dc5b709c378d49187ebb2874aa81">6c52ccfe9970dc5b709c378d49187ebb2874aa81</a>
<blockquote>
<p>
    Text region decoding now seems to decode 042_10.jb2 correctly. Added<br>
    IAID decoding procedure. Changed jbig2_decode_text_region to use IAID<br>
    procedure. Fixed off-by-one errors in corner alignment calculations.<br>
    Added for (;;) loop for 3c, corresponding to looping over all symbol<br>
    instances in a strip (outer while loop corresponds to looping over all<br>
    strips in the region). Fixed predicates in CURS updating logic.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@94 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_arith_iaid.c<br>
jbig2_arith_iaid.h<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-27 14:02:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91c71a44412a052616c45f6e50a0431a103514a8">91c71a44412a052616c45f6e50a0431a103514a8</a>
<blockquote>
<p>
    checkpoint in-progress text decoder. close but no data yet.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@93 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-24 23:28:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef06d243c1a26abd9223181b8c5751ceb051258e">ef06d243c1a26abd9223181b8c5751ceb051258e</a>
<blockquote>
<p>
    another checkpoint of text region decoding work. referred-to segment info is correct now.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@92 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-24 19:09:47 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5613e3f978e406268fe5c42b7da322c0e4bfa7a9">5613e3f978e406268fe5c42b7da322c0e4bfa7a9</a>
<blockquote>
<p>
    checkpoint in-progress text region decoding procedures<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@91 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-24 18:44:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6752fd2a6859efeabbb29954d5b5d34ec0eb96b">a6752fd2a6859efeabbb29954d5b5d34ec0eb96b</a>
<blockquote>
<p>
    use the correct number of bytes in reading the referred-to segment numbers. (still untested)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@90 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-24 18:40:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6cb5f391cd0ec8bdc0485780697793b71004429c">6cb5f391cd0ec8bdc0485780697793b71004429c</a>
<blockquote>
<p>
    Save referred-to segment numbers. (untested)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@89 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-24 15:51:57 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fcc43c7fb7d236c2c30a2b9eba5fdd52bb84f56a">fcc43c7fb7d236c2c30a2b9eba5fdd52bb84f56a</a>
<blockquote>
<p>
    checkpointing work on text region decoder.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@88 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_image.c<br>
jbig2_priv.h<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-22 21:20:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=468a9f35baa5c64f3be49f60ba800f72dba501ef">468a9f35baa5c64f3be49f60ba800f72dba501ef</a>
<blockquote>
<p>
    Store the decoded symbol dictionary in the result field of the corresponding<br>
    segment.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@86 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-22 16:05:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f2ac7803db2d376bab0734f3e7629faea7bc7297">f2ac7803db2d376bab0734f3e7629faea7bc7297</a>
<blockquote>
<p>
    Gratuitous renaming. Promote the segment header to Jbig2Segment and use it<br>
    to store intermediate results rather than the results objects raph had sketched.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@84 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-22 10:08:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7fc72d14be2af5e15866a9124a99b6dafea65dcd">7fc72d14be2af5e15866a9124a99b6dafea65dcd</a>
<blockquote>
<p>
    Treat seg_idx=-1 specially in the error callback, since we're using that for<br>
    cases where the segment number is inappropriate or not available.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@83 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-22 09:58:26 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8384a640605066b60d21140504f92d31dd77947f">8384a640605066b60d21140504f92d31dd77947f</a>
<blockquote>
<p>
    Interpret '-' as an output filename meaning stdout.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@82 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-22 09:47:31 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=72591b23f58efc91e6b92b85540825f29344d520">72591b23f58efc91e6b92b85540825f29344d520</a>
<blockquote>
<p>
    remove the redundant width and height fields from Jbig2GenericRegionParams<br>
    in favor of the dimensions of the passed Jbig2Image<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@81 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-21 23:11:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8f1012147073d64f79de947930f1ac6b4fca959a">8f1012147073d64f79de947930f1ac6b4fca959a</a>
<blockquote>
<p>
    restore original behavior for -DOUTPUT_PBM<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@80 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-21 22:56:54 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=30beab7a07268fe5ccd204fdc621a7fee3489e8f">30beab7a07268fe5ccd204fdc621a7fee3489e8f</a>
<blockquote>
<p>
    Update decode_symbol_dict() to use images, fixing a type-related bug from the earlier changes.<br>
    Report debug messages through the official mechanism.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@79 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-21 22:54:03 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=69b79684b3f800c7e22dcd16a1fd28a33d067e92">69b79684b3f800c7e22dcd16a1fd28a33d067e92</a>
<blockquote>
<p>
    remove dead code<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@78 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-21 19:11:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=acf706d0e91ebcf8b3d73c83d168af6e2de05a25">acf706d0e91ebcf8b3d73c83d168af6e2de05a25</a>
<blockquote>
<p>
    remove dead code<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@77 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-21 19:10:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=123697184141b211dfd599a1fb2eb94e8079ce5e">123697184141b211dfd599a1fb2eb94e8079ce5e</a>
<blockquote>
<p>
    Generic regions decode into Jbig2Image structures, which are then (trivially)<br>
    composited with the page buffer as the final step in handling the segment.<br>
    We now write the page data out at out.png or out.pbm. Compile with -DOUTPUT_PBM<br>
    for the old behavior.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@76 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-20 15:42:48 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed23b26857f9d5324a52730e7504c1a14a2d3161">ed23b26857f9d5324a52730e7504c1a14a2d3161</a>
<blockquote>
<p>
    Beginnings of text segment handling. Parse (most of) the text region<br>
    segment header. Move the region segment info parser to jbig2_segment.c<br>
    and jbig2_priv.h since this is shared by all region segment types.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@75 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_generic.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2_symbol_dict.c<br>
jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-20 15:40:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22320087293f0de716d1e214ee74e1e1da822234">22320087293f0de716d1e214ee74e1e1da822234</a>
<blockquote>
<p>
    Fix a precedence bug which prevented using the first page structure.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@74 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-18 13:40:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0cad58a5a6857aebb665c79706ba33acabc550fd">0cad58a5a6857aebb665c79706ba33acabc550fd</a>
<blockquote>
<p>
    Handle 'page info' segments, and allocate an image buffer based on the page size.<br>
    also adds hooks for final compositing and output of the page buffer.<br>
    in addition, minor code massage and dead code removal; make the image structure<br>
    public.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@72 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
jbig2_image.h<br>
jbig2_page.c<br>
jbig2_priv.h<br>
jbig2_segment.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-18 09:46:45 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=033b9666bac46060559b74b2f2a620fde5fc7f32">033b9666bac46060559b74b2f2a620fde5fc7f32</a>
<blockquote>
<p>
    Add warnings for remaining unhandled segment types. remove dead code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@71 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-17 21:11:51 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=867871515b0d0bce9d092e66a1a787b45681ad76">867871515b0d0bce9d092e66a1a787b45681ad76</a>
<blockquote>
<p>
    add prototypes for segment header routines<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@70 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-17 21:06:38 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5219d82fa11b750c446a1d00d2bc269cea245610">5219d82fa11b750c446a1d00d2bc269cea245610</a>
<blockquote>
<p>
    Further segment code rearrangement. Add some comments and promote some bitwise types to unsigned. Also add some diagnostic messages on segment type.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@69 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-17 16:30:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcb620344060d47d77e620d23c0e3e6aa3838f6b">dcb620344060d47d77e620d23c0e3e6aa3838f6b</a>
<blockquote>
<p>
    Update the image routines to use the ctx structure for dynamic memory and remove the test framework.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@68 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-17 13:27:07 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f46505e1adb56bcac9bbf00ec8b264dc50963764">f46505e1adb56bcac9bbf00ec8b264dc50963764</a>
<blockquote>
<p>
    add some autotools files to .cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@67 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-15 16:16:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=559870f8c41c8e7741035e28801cf6f8a911bd25">559870f8c41c8e7741035e28801cf6f8a911bd25</a>
<blockquote>
<p>
    actually add the segment header source<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@66 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_segment.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-15 16:02:56 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c47c3b08840eb8e709fad19c018845d2ec00087d">c47c3b08840eb8e709fad19c018845d2ec00087d</a>
<blockquote>
<p>
    add segment routines in a separate file. prune the semi-dead jbig2dec.h in<br>
    favor of jbig2.h and jbig2_priv.h. Update to C99 fixed-width types.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@64 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2.h<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2_image.c<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
jbig2_page.c<br>
jbig2_page.h<br>
jbig2_priv.h<br>
jbig2dec.c<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-15 15:47:21 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2dce5e044ea710e68b1716ca543800c64ad633aa">2dce5e044ea710e68b1716ca543800c64ad633aa</a>
<blockquote>
<p>
    Add -lpng to LIBS when the png library is available.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@63 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-15 14:15:12 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=57c5cda834b84dbec0f4898427bf4283dc2c327d">57c5cda834b84dbec0f4898427bf4283dc2c327d</a>
<blockquote>
<p>
    Add page segment parse and dump routines.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@62 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_page.c<br>
jbig2_page.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-15 14:12:50 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e22ae8f124c9ed5a3ccadbad3a302285d94ffc4c">e22ae8f124c9ed5a3ccadbad3a302285d94ffc4c</a>
<blockquote>
<p>
    minor code rearrangement and comments<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@61 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-05 00:15:57 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43bf50d093b48ad481fc24656b66d34422ac07dc">43bf50d093b48ad481fc24656b66d34422ac07dc</a>
<blockquote>
<p>
    Brings code into line with spec. This fixes the SOFTWARE_CONVENTION case<br>
    as well. Thanks to William Rucklidge for spec clarification.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@60 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-05 00:03:49 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8055e400b7d9b32c355e8c7dc2cf286a59dc1ece">8055e400b7d9b32c355e8c7dc2cf286a59dc1ece</a>
<blockquote>
<p>
    Fixes bug in arithmetic integer decoding procedure. Thanks to William<br>
    Rucklidge for providing trace data to help track down the problem.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@59 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith_int.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-04 16:51:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2d6d6e0c7b2c97e52a3363eae09841a17fe8e272">2d6d6e0c7b2c97e52a3363eae09841a17fe8e272</a>
<blockquote>
<p>
    Add pbm import support and a simple 'pbm2png' implementation as a test harness for the image code. No makefile support--just didn't want to lose the code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@58 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
pbm2png.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-06-04 16:47:09 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f508fadb8bfad2296ff963203183ea25ec6d8080">f508fadb8bfad2296ff963203183ea25ec6d8080</a>
<blockquote>
<p>
    add some description of the decoder commandline options<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@57 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-09 02:29:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=693e8b2190c36a706b8b5de4bc3771d8d0acbcd3">693e8b2190c36a706b8b5de4bc3771d8d0acbcd3</a>
<blockquote>
<p>
    add getopt implementation for portability to systems w/o getopt_long()<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@55 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
getopt.c<br>
getopt.h<br>
getopt1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-08 03:03:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=04d17fa29806f730e03290b7ab4ee415600ba9e7">04d17fa29806f730e03290b7ab4ee415600ba9e7</a>
<blockquote>
<p>
    Code cleanup and rearrangement.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@54 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_mmr.c<br>
jbig2_symbol_dict.c<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-08 02:36:04 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42ead910c9d9d4e3f6dd69e91be16f5de42ffef7">42ead910c9d9d4e3f6dd69e91be16f5de42ffef7</a>
<blockquote>
<p>
    Rename the png output source files, and add pbm output support. Also allow<br>
    writing to a FILE* instead of a filename so we can send things to stdout, etc.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@53 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
jbig2_image.c<br>
jbig2_image.h<br>
jbig2_image_pbm.c<br>
jbig2_image_png.c<br>
png_image.c<br>
png_image.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-08 02:28:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0459e440350325b04aaa0bd1f70120ce1066716b">0459e440350325b04aaa0bd1f70120ce1066716b</a>
<blockquote>
<p>
    add autotools files to .cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@52 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-08 02:27:29 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f12873269a2ab271026afa7640bbba2a73a6a5a7">f12873269a2ab271026afa7640bbba2a73a6a5a7</a>
<blockquote>
<p>
    Autoheader and configure fixups.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@51 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2002-05-08 00:59:20 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ab76b7e32ea5c79915b5ebe94a84ae8b4b29ee78">ab76b7e32ea5c79915b5ebe94a84ae8b4b29ee78</a>
<blockquote>
<p>
    Rought autotools support.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@50 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
Makefile.am<br>
autogen.sh<br>
configure.ac<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-04-25 23:24:35 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f218050d34326a38a89f07e772a7c4fc350fb10">0f218050d34326a38a89f07e772a7c4fc350fb10</a>
<blockquote>
<p>
    Makefile changes to add jbig2_mmr functions.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@49 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-04-25 23:24:08 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=971100aa3b5f56756fbd31a03ca4212209881f09">971100aa3b5f56756fbd31a03ca4212209881f09</a>
<blockquote>
<p>
    Adds partial support for mmr (CCITT 2D fax) decoding. This commit can<br>
    scan Huffman codes, but does not apply the logic to produce run lengths.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@48 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_generic.c<br>
jbig2_mmr.c<br>
jbig2_mmr.h<br>
jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-03-28 08:28:02 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=98a2ac892b58569ae1a5a258c0b502fbf56da0b4">98a2ac892b58569ae1a5a258c0b502fbf56da0b4</a>
<blockquote>
<p>
    basic getopt-based commandline parsing<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@47 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-19 07:09:16 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef36831c93670a262622d3acad6a208d73d1d81e">ef36831c93670a262622d3acad6a208d73d1d81e</a>
<blockquote>
<p>
    simple code cleanup. add license headers, include jbig2dec.h with dead code.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@46 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2dec.c<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-19 05:48:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5d215388772fd0c2931cdc4cafca74c1256bfea6">5d215388772fd0c2931cdc4cafca74c1256bfea6</a>
<blockquote>
<p>
    Abstract the compiler command.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@45 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-16 07:25:36 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=625abbded569d5ffde7301d497158b0116313f21">625abbded569d5ffde7301d497158b0116313f21</a>
<blockquote>
<p>
    Lots of changes: Added template 0 generic decoder. Added &quot;results&quot;<br>
    mechanism to Jbig2Ctx for storing the decoded results, but not yet<br>
    any segments which store their results there. Changed generic region<br>
    API slightly so callers could pass in more context (needed for<br>
    generic region decoding other than generic). Added arithmetic integer<br>
    decoder. Started symbol dictionary decoder. Currently, this decodes<br>
    about 200 symbols from the cvision global dict, then goes haywire.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@43 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_arith_int.c<br>
jbig2_arith_int.h<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_priv.h<br>
jbig2_symbol_dict.c<br>
jbig2_symbol_dict.h<br>
jbig2dec.c<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-15 20:46:30 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=107138382e590d3851ba1b5e897a33f2cf27ee4b">107138382e590d3851ba1b5e897a33f2cf27ee4b</a>
<blockquote>
<p>
    A good start at generic region decoding. The added jbig2_generic code<br>
    handles GBTEMPLATE=1 with vanilla options and the adaptive template<br>
    pixels in their nominal locations. This is sufficient to successfully<br>
    decode the 042_4.jb2 test stream.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@42 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2_arith.c<br>
jbig2_generic.c<br>
jbig2_generic.h<br>
jbig2_priv.h<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-13 08:47:18 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a9304dad738268b27556717bf83936c15618506">0a9304dad738268b27556717bf83936c15618506</a>
<blockquote>
<p>
    Implementation of new API as discussed on jbig2-dev. Not all logic<br>
    of existing jbig2dec.c has been ported to new codebase - in<br>
    particular, jbig2_read_symbol_dictionary and jbig2_read_page_info.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@41 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
jbig2_priv.h<br>
jbig2dec.c<br>
jbig2dec.h<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-12 02:19:36 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a77ab1dd49743f0ed9cc0ad862671f462781bd1">3a77ab1dd49743f0ed9cc0ad862671f462781bd1</a>
<blockquote>
<p>
    'normalize' formatting.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@40 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-12 02:19:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2eca8001a79d7df3c848139519bf7b7b9778113">a2eca8001a79d7df3c848139519bf7b7b9778113</a>
<blockquote>
<p>
    Standard protection against multiple and C++ inclusion.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@39 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-10 01:17:26 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce1259d7b14345427766fb5c541b41b2c5e1f203">ce1259d7b14345427766fb5c541b41b2c5e1f203</a>
<blockquote>
<p>
    Update usage to reflect the embedded stream mode.<br>
    Normalize formatting :)<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@38 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2002-02-09 22:31:53 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f0780d5ad41298cf609f8e27d869c534dbcdaa23">f0780d5ad41298cf609f8e27d869c534dbcdaa23</a>
<blockquote>
<p>
    Adds some support for &quot;embedded&quot; format, with separate global and page<br>
    streams. Also fixes some minor bugs.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@37 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-08-13 20:31:59 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=30034932cea9e2e37d781763d36b06607b8337be">30034932cea9e2e37d781763d36b06607b8337be</a>
<blockquote>
<p>
    Fix image stride calculation, and generate a simpler (checkerboard) test pattern.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@36 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
png_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-08-13 19:51:16 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=595741f11dc91377adf4093b88abccb5b1b30660">595741f11dc91377adf4093b88abccb5b1b30660</a>
<blockquote>
<p>
    one-line readme<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@35 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
README<br>
<p>
</blockquote>
<hr>
<p><strong>2001-08-13 19:50:52 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e42dde61dd9441585efa5874880b1c42dc90687c">e42dde61dd9441585efa5874880b1c42dc90687c</a>
<blockquote>
<p>
    start of a .cvsignore<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@34 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
.cvsignore<br>
jbig2_hufftab.h<br>
<p>
</blockquote>
<hr>
<p><strong>2001-08-11 06:46:15 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b82c5a1be026e14a63c6e3ede436acf9590a7610">b82c5a1be026e14a63c6e3ede436acf9590a7610</a>
<blockquote>
<p>
    png output now compiles<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@33 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
makefile<br>
png_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-08-10 23:29:28 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7181b7a84184562ccf72e34c11f75b158b58e61b">7181b7a84184562ccf72e34c11f75b158b58e61b</a>
<blockquote>
<p>
    initial image buffer and png output routines<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@32 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_image.c<br>
jbig2_image.h<br>
makefile<br>
png_image.c<br>
png_image.h<br>
<p>
</blockquote>
<hr>
<p><strong>2001-07-05 22:37:44 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=15fbf3afe60b17b958fd38ed902ddae67554f804">15fbf3afe60b17b958fd38ed902ddae67554f804</a>
<blockquote>
<p>
    more general huffmann test routine<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@31 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-26 00:30:00 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=678523a15572456b68612fafc422d4dee29ca59c">678523a15572456b68612fafc422d4dee29ca59c</a>
<blockquote>
<p>
    move the huffman tables to a separate header<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@30 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2_hufftab.h<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-14 23:09:23 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=47a138b6362c314be4cfd91977ac61b3cf772e0f">47a138b6362c314be4cfd91977ac61b3cf772e0f</a>
<blockquote>
<p>
    complain if the file uses the 'random access' layout which we don't handle yet.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@29 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-14 08:25:01 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83513ef82b18de95374d8e6c229658735d76af32">83513ef82b18de95374d8e6c229658735d76af32</a>
<blockquote>
<p>
    attempt to skip the right number of bytes in long-form segment references.<br>
    attempt to read long page association fields properly. both untested.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@28 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-12 23:35:53 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1a9f2cddd17bc53e0b3952b5f05c7427a493ba7">f1a9f2cddd17bc53e0b3952b5f05c7427a493ba7</a>
<blockquote>
<p>
    added parser for the page info segment<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@27 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-12 09:56:33 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a02a862c8fa9f0bb5def02e5ea9ccc1414dabe6">8a02a862c8fa9f0bb5def02e5ea9ccc1414dabe6</a>
<blockquote>
<p>
    added complete list of segement types to dump_segment()<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@26 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-12 09:15:13 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d498a8c2f375315c2de3c62ea270e447bf0bde44">d498a8c2f375315c2de3c62ea270e447bf0bde44</a>
<blockquote>
<p>
    make get_next_word return uint32<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@25 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2dec.c<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-12 09:09:04 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f77dcdbe70ec1ba574ba25c37de81dfaf27ebc52">f77dcdbe70ec1ba574ba25c37de81dfaf27ebc52</a>
<blockquote>
<p>
    more general huffmann test code, borrowing from the arith version.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@24 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-10 08:43:48 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bfc0107419650f5f696115c4accf1ab88b923c43">bfc0107419650f5f696115c4accf1ab88b923c43</a>
<blockquote>
<p>
    minor comment update<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@23 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_huffman.c<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-10 07:15:10 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5b572ab3f1e3a243408b84498bb7d7dce808b71">c5b572ab3f1e3a243408b84498bb7d7dce808b71</a>
<blockquote>
<p>
    added 'make clean' target<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@22 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-10 07:09:18 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d9367f7452f9117ce3a7f7649966cb42a2c33995">d9367f7452f9117ce3a7f7649966cb42a2c33995</a>
<blockquote>
<p>
    added copyright statements to the source files<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@21 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
jbig2_huffman.c<br>
jbig2_huffman.h<br>
jbig2dec.c<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-10 07:03:08 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2cb3337c3f559fc65d3122d649386c797fbc949">a2cb3337c3f559fc65d3122d649386c797fbc949</a>
<blockquote>
<p>
    updated includes for the jbig2dec.h name change<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@20 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
jbig2_huffman.c<br>
jbig2dec.c<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2001-06-10 06:50:58 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4369688dfbf2235ed466f38af4ddd11ab781ceaf">4369688dfbf2235ed466f38af4ddd11ab781ceaf</a>
<blockquote>
<p>
    renamed jbig2.* to the more eponymous jbig2dec.*<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@19 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2.c<br>
jbig2.h<br>
jbig2dec.c<br>
jbig2dec.h<br>
<p>
</blockquote>
<hr>
<p><strong>2001-05-31 06:23:32 +0000
</strong>
<br>raph &lt;raph@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cd558cd34c857cb3fc15167a754d1619ecc57d3">9cd558cd34c857cb3fc15167a754d1619ecc57d3</a>
<blockquote>
<p>
    Fixed API so that context is now an argument to the arithmetic decode<br>
    procedure. Context is also now packed into a byte, and context changes<br>
    are done with a single xor.<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@18 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
jbig2_arith.h<br>
makefile<br>
<p>
</blockquote>
<hr>
<p><strong>2001-05-30 21:36:25 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa37e9a7b8c933da66c2850a22c10559f38c68bb">fa37e9a7b8c933da66c2850a22c10559f38c68bb</a>
<blockquote>
<p>
    added GPL license<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@16 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
COPYING<br>
<p>
</blockquote>
<hr>
<p><strong>2001-05-30 21:05:43 +0000
</strong>
<br>giles &lt;giles@ded80894-8fb9-0310-811b-c03f3676ab4d&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df5789c4fe4bc7085bac37a70e630c326ffd3965">df5789c4fe4bc7085bac37a70e630c326ffd3965</a>
<blockquote>
<p>
    add missing stdio include<br>
<br>
<br>
    git-svn-id: http://svn.ghostscript.com/jbig2dec/trunk@15 ded80894-8fb9-0310-811b-c03f3676ab4d<br>
<br>
jbig2_arith.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-08 09:58:53 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=faac14fb1532533a811649cef2b68cf95ec50fdf">faac14fb1532533a811649cef2b68cf95ec50fdf</a>
<blockquote>
<p>
    Bug 693291: Quote shell variables to support spaces in path.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 09:27:00 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7254338bbdcc9b80805c644712edd5d24b781fcb">7254338bbdcc9b80805c644712edd5d24b781fcb</a>
<blockquote>
<p>
    pdfwrite - linearisation.<br>
<br>
    First attempt to make pdfwrite emit linearised PDF. THis basiclaly works<br>
    but needs some attention to the shared object table, and memory cleanup<br>
    still needs to be done.<br>
<br>
    pdfwrite - linearisation project, ma ny changes<br>
<br>
    Alter rewrite_object to parse the object and alter teh numbers of any objects which it<br>
    references<br>
<br>
    modify rewrite_object to record the offset of the nely rewritten object in the<br>
    linearised file, so we cna later write an xref.<br>
<br>
    Numerous 'off by 1' bug fixes relating to object 0 and whether pages are<br>
    numberd from 0 or not.<br>
<br>
    Write all pages and their objects, and shared objects, in the correct order.<br>
<br>
    Write a primary xref table.<br>
<br>
    Record CharProc resource usage by fonts.<br>
<br>
    pdfwrite - linearisation code<br>
<br>
    Add code to rewrite the secondary xref with the actual offsets of the objects<br>
<br>
    Write a dummy primary hint stream<br>
<br>
    Record the offsets of the primary hint stream and linearisation dictionary.<br>
<br>
    pdfwrite - linearisation<br>
<br>
    It turns out that for the hint stream we need to know which objects are used<br>
    on every page (shared or not).<br>
<br>
    This change laters the record for each resoruce to add an array of integers<br>
    documenting which page(s) the resource is used on, as well as whether it is<br>
    shared or not and so on.<br>
<br>
    This means that instead of a simple chunk of memory, the record is now a gc<br>
    object, properly tracked and relocated and so on.<br>
<br>
    Added code to track the location of some more objects in the linearised file,<br>
    for the benefit of the linearisation dictionary.<br>
<br>
    Added code to rewrite the linearisation dictionary with the final numbers, and the trailer dict with the correct numbers too.<br>
<br>
    pdfwrite - linearisation various changes<br>
<br>
    Remove some unused variables to silence compiler warnings<br>
<br>
    Sort out the object numbering so that the seocond page is object<br>
    number 1 (this is a requirement, but its not obvious in the spec). Make sure<br>
    the 'part 9' objects (Info dict, metadata etc) have number that start after<br>
    all the page objects, unique objects per page, and shared objects.<br>
<br>
    Move the hint stream generation so that the hint stream is *after* page 1 and its<br>
    resoruces as this is easier to deal with.<br>
<br>
    pdfwrite - linearisation work<br>
<br>
    preparing to write hint streams:<br>
<br>
    first we go back to using a temp file instead of a specific filename (except<br>
    when explicitly debugging).<br>
<br>
    second we only reorder the existing objects and the linearisation dict.<br>
<br>
    next we copy these re-oredered objects from the temp file, and insert the<br>
    dummy primary hint stream at the correct location.<br>
<br>
    Finally we write the primary xref, but taking the size of the inserted hint stream<br>
    into account for the offsets.<br>
<br>
    In a fit of tidying up, use gp_fseek_64 instead of fseek. Still work to do here.<br>
<br>
    pdfwrite - linearisation<br>
<br>
    add preliminary code to write a hint stream (still needs work)<br>
<br>
    Fix code which wrote teh page object twice for each page.<br>
<br>
    Various white space tweaking to make the output closer to the MuPDF output<br>
    in an abortive attempt to find out why files are not identified as linearised<br>
    by Acrobat<br>
<br>
    pdfwrite - linearisation, make files at least 4k<br>
<br>
    I don't believe it.....<br>
<br>
    Acrobat won't recognise a file as linearised unless it is at least 4k!<br>
<br>
    Also added some comments regarding various implementation notes from the<br>
    1.7 reference<br>
<br>
    pdfwrite - linearisation, move code into a routine of its own<br>
<br>
    Modularise the linearisation code somewhat by making it a new routine<br>
    instead of bloating pdf_close still further.<br>
<br>
    pdfwrite - linearisation, fixes for hint writing<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdti.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 12:24:49 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b16e0ada5e05737890e5bc340fdb181715ca4794">b16e0ada5e05737890e5bc340fdb181715ca4794</a>
<blockquote>
<p>
    Fix the allocation of teh Offsets table so that it doesn't get overrun while<br>
    storing xrefs.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 12:15:57 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e6a0ca2b94e4a80d02c2b85044b613d92d416249">e6a0ca2b94e4a80d02c2b85044b613d92d416249</a>
<blockquote>
<p>
    fix the size of LastResource so that the Offsets table is large enough to hold all the objects<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 11:30:45 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b085cd2bb5f95fdf842ad05615e9f411b823d79a">b085cd2bb5f95fdf842ad05615e9f411b823d79a</a>
<blockquote>
<p>
    Temporary commit for linearisation code in pdfwrite<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfe.c<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdtd.h<br>
gs/base/gdevpdtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-05 20:03:34 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c26a59a07d226db58c2952aeab65df4d58ee78c2">c26a59a07d226db58c2952aeab65df4d58ee78c2</a>
<blockquote>
<p>
    Make sure overprint works with shading pattern.  Fix for Bug 693018<br>
<br>
    For some reason it was believed that overprint was not used with shading patterns<br>
    and so it was disabled.  Also had to make sure that the graphic state stored in<br>
    the pattern instance was all up to date with the overprint state.<br>
<br>
gs/base/gsptype2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-17 12:43:55 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ab39e3d51a4d4fc78bd2532ef7141a57db50149">1ab39e3d51a4d4fc78bd2532ef7141a57db50149</a>
<blockquote>
<p>
    Enabling of fast threshold code for color source images as well as monochrome images to cmyk devices<br>
<br>
    Many cases where we could be using the fast thresholding code were disabled due to issues that this<br>
    commit fixes.  Some items such as the conversions to planar when the color management transform was<br>
    the identity were not in place.   In addition, for subtractive devices, the polarity of the threshold<br>
    array was wrong.<br>
<br>
gs/base/gsht.c<br>
gs/base/gsicc_nocm.c<br>
gs/base/gxht_thresh.c<br>
gs/base/gxht_thresh.h<br>
gs/base/gxicolor.c<br>
gs/base/gxidata.c<br>
gs/base/gximage.h<br>
gs/base/gximono.c<br>
gs/base/gxipixel.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-04 10:04:26 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e7d82066d92d4a4a2709c5dde4c35a4521d029e">4e7d82066d92d4a4a2709c5dde4c35a4521d029e</a>
<blockquote>
<p>
    Add overprint support into the pdf14 device group composing<br>
<br>
    This fixes Bug 693300.   This this file had two images. One in a separation color space,<br>
    the other an RGB color space each in their own transparency group.<br>
    Overprint  mode was enabled during the spot image drawing, which occurs after the RGB image is drawn.<br>
    During the group pop, there was no code in pdf14_compose_group to account for the overprint condition<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gsovrc.c<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-03 18:44:22 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23796278944b89b2afe2906cb0f725e9c6c8ce11">23796278944b89b2afe2906cb0f725e9c6c8ce11</a>
<blockquote>
<p>
    Fix clist_copy_planes to insure that all planes written together. Bug 693234.<br>
<br>
    The code at 'copy:' checked to make sure that the planes would fit in a<br>
    single cbuf, but did not check to make sure that all of the planes fit in<br>
    the remaining space in the BufferSpace from 'cnext' to 'cend'. The fix is<br>
    to call cmd_write_buffer if all planes don't fit in the current BufferSpace<br>
    so that an 'end_run' byte will not be inserted in the data stream.<br>
<br>
gs/base/gxclrect.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-04 13:37:28 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c62f5a9f5ead465c1d0fbf2826ba5a00b48a1fdb">c62f5a9f5ead465c1d0fbf2826ba5a00b48a1fdb</a>
<blockquote>
<p>
    Fix all GCC warnings in Luratech JPX interface.<br>
<br>
gs/base/sjpx_luratech.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-29 16:19:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=40c3e3f2b337d5aad89d49dd9f56bfedf6bcf5e5">40c3e3f2b337d5aad89d49dd9f56bfedf6bcf5e5</a>
<blockquote>
<p>
    Remove dependence on jbig2dec auto-generated files<br>
<br>
    Also provide a workaround for LCMS2 on systems without sqrtf().<br>
<br>
    No cluster differences<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/jbig2dec/Makefile.in<br>
gs/jbig2dec/aclocal.m4<br>
gs/jbig2dec/compile<br>
gs/jbig2dec/config.guess<br>
gs/jbig2dec/config.h.in<br>
gs/jbig2dec/config.sub<br>
gs/jbig2dec/config_types.h.in<br>
gs/jbig2dec/configure<br>
gs/jbig2dec/depcomp<br>
gs/jbig2dec/install-sh<br>
gs/jbig2dec/ltmain.sh<br>
gs/jbig2dec/missing<br>
gs/jbig2dec/mkinstalldirs<br>
gs/jbig2dec/os_types.h<br>
gs/jbig2dec/snprintf.c<br>
gs/jbig2dec/stamp-h1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-03 20:44:43 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26d8aeede6ce52c5a31720980cfcd096f6bd9f10">26d8aeede6ce52c5a31720980cfcd096f6bd9f10</a>
<blockquote>
<p>
    Another softmask memory leak fixed for Bug 693312<br>
<br>
    Leak was caused by the improper freeing when we have a soft mask created in a band<br>
    where it was not needed.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-03 21:58:34 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50ed871322720a7e0a01bf7e52509b77529c105e">50ed871322720a7e0a01bf7e52509b77529c105e</a>
<blockquote>
<p>
    Bug 693317: ignore multiple tokens between obj and endobj<br>
<br>
    Detect malformed objects that parse as multiple tokens, replace<br>
    the tokens with null, and issue a warning.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-09-03 07:55:32 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e37fa70cb16f286ad00b5573e6d548066d2c913e">e37fa70cb16f286ad00b5573e6d548066d2c913e</a>
<blockquote>
<p>
    Fix for memory leak in pdf14 softmask stack.  Bug 693312<br>
<br>
    When a new mask was getting created, it was possible that the stack was already set up with<br>
    softmasks.  When blowing away the old mask we need to make sure to go through and clean up<br>
    the stack.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-30 08:10:41 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ade6182ba16cbaf3084a1c9865f265cdd71525f">7ade6182ba16cbaf3084a1c9865f265cdd71525f</a>
<blockquote>
<p>
    Bug 692849: Prevent memory corruption by using temp buffer in CCITT decompression.<br>
<br>
pcl/rtraster.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-27 10:12:04 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4bc9598dbefcda47a483ea489409af412467d07f">4bc9598dbefcda47a483ea489409af412467d07f</a>
<blockquote>
<p>
    Remove obsolete call to set the path mode.  This is now only enable on<br>
    a per graphic basis as needed.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
pcl/pctop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-25 22:02:06 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=11bb4d6d57ea1a65b254e3013f5d16f406457793">11bb4d6d57ea1a65b254e3013f5d16f406457793</a>
<blockquote>
<p>
    Fix another warning detected by Visual Studio (negating an unsigned int).<br>
<br>
gs/base/gxfcache.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-25 18:21:28 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f939737f2e6479b815de40f46c20b07f40241124">f939737f2e6479b815de40f46c20b07f40241124</a>
<blockquote>
<p>
    Get rid of const warnings with Visual Studio.<br>
<br>
    There are still warnings, but at least the ones that are easy to fix<br>
    are now gone.<br>
<br>
gs/base/gdevdevn.c<br>
gs/base/gdevdevn.h<br>
gs/base/gdevdsp.c<br>
gs/base/gdevmpla.c<br>
gs/base/gdevp14.c<br>
gs/base/gxblend.c<br>
gs/base/gxclip.c<br>
gs/base/gxipixel.c<br>
gs/base/gxpcmap.c<br>
gs/base/gxshade.c<br>
gs/psi/zcie.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-25 18:18:06 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bac3f4be13b133b0c097a6ec426894ddc491f2e0">bac3f4be13b133b0c097a6ec426894ddc491f2e0</a>
<blockquote>
<p>
    Change TILE_TYPE_MASK size to avoid a truncation warning from VS.<br>
<br>
    The value 0x80000000 is problematic for the enum with Visual Studio.<br>
    The TilingType values are from 1 to 3, so 3 bits is plenty.<br>
<br>
gs/base/gsptype1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-25 15:15:38 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b12966f995393edb220c4b7bc94bc6eeef48987">6b12966f995393edb220c4b7bc94bc6eeef48987</a>
<blockquote>
<p>
    Change hpgl_path_mode to 'bool' (and hpglpathmode PS operators).<br>
<br>
    In cleaning up some of the type mismatch warnings with VS, this<br>
    needed to be consistent. There are no current users of the PS<br>
    operators, but now these are  &lt;bool&gt; .sethpglpathmode - and<br>
    .currenthpglpathmode &lt;bool&gt;.<br>
<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/psi/zgstate.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-24 19:03:34 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d840d02d5fd655c397b08e01a273a4e4e757f96e">d840d02d5fd655c397b08e01a273a4e4e757f96e</a>
<blockquote>
<p>
    Bug 692604: improve error messages for invalid arguments.<br>
<br>
    Inclide the invalid argument in the error message. Suggest to use -s<br>
    instead of -d when the token is an executable name. Most likely,<br>
    the user just tried to define a string.<br>
<br>
gs/psi/imainarg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-24 15:29:21 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e6c15fa2ee91c760943a3edd16e123f6879eb45">1e6c15fa2ee91c760943a3edd16e123f6879eb45</a>
<blockquote>
<p>
    Bring ghostpdl in-line with jbig2dec<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-24 01:47:45 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ebe054e32a88a5ea4a52367066f8a8259dd3d5db">ebe054e32a88a5ea4a52367066f8a8259dd3d5db</a>
<blockquote>
<p>
    Bug 693299: fix handling of array form of /FilterParms in pdfopt<br>
<br>
    Array form of /FilterParms attribute was processed like a dictionary,<br>
    smashing the stack, and causing a PS error later.<br>
<br>
gs/lib/pdfopt.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-22 12:26:33 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bb15658bdf6b463e62b34e1c3fa779942fa24902">bb15658bdf6b463e62b34e1c3fa779942fa24902</a>
<blockquote>
<p>
    Fix clist probelms with copy_planes, writer and reader out of sync.<br>
<br>
    When uncompressed data was written to the clist with height &gt; 1,<br>
    the last line was not padded. The reader was reading as if all<br>
    lines had the padding. Also fixed cmd_read_short_bits to skip<br>
    the memmove in cases where width_bytes == raster or height == 1.<br>
<br>
gs/base/gxclrast.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 15:12:13 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0279e3ba6819d41a36125fba934aba489e03617b">0279e3ba6819d41a36125fba934aba489e03617b</a>
<blockquote>
<p>
    Bug 693298; Memento build tweak for memset.<br>
<br>
    Don't define memset if someone else has already #defined it. Thanks<br>
    to William Bader.<br>
<br>
gs/base/memento.c<br>
gs/jbig2dec/memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 15:01:03 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2dba4f48cfe258c957da2754547fe22a5cc764f6">2dba4f48cfe258c957da2754547fe22a5cc764f6</a>
<blockquote>
<p>
    Fix broken Windows build with patch fb55f251.<br>
<br>
    This is an extended version of a commit from Ray, fixing a mistake<br>
    that I made. Ray's original version didn't make it into the repo<br>
    due to git problems.<br>
<br>
    Initialising a struct to { } doesn't work with VS. { 0 } is OK.<br>
<br>
gs/base/gsptype1.c<br>
gs/base/gxcht.c<br>
gs/base/gxclist.c<br>
gs/psi/iinit.c<br>
gs/psi/zmisc2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 14:59:05 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=04a0440368a18978049b999722320cbc850c7621">04a0440368a18978049b999722320cbc850c7621</a>
<blockquote>
<p>
    Revert &quot;Move memento include from jbig2.h to jbig2_priv.h&quot;<br>
<br>
    This reverts commit b6dc615180c04d016c6df4e9e7598a0d7c9df02b.<br>
<br>
    This broke the memento build of gs due to the #defining of<br>
    free/realloc. For now, we'll have to live with the include<br>
    in the public header.<br>
<br>
gs/jbig2dec/jbig2.h<br>
gs/jbig2dec/jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 13:34:43 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b6dc615180c04d016c6df4e9e7598a0d7c9df02b">b6dc615180c04d016c6df4e9e7598a0d7c9df02b</a>
<blockquote>
<p>
    Move memento include from jbig2.h to jbig2_priv.h<br>
<br>
    There is no need to expose memento outside of jbig2. Thanks to<br>
    zeniko for the discussion in bug 693284 that lead to this.<br>
<br>
gs/jbig2dec/jbig2.h<br>
gs/jbig2dec/jbig2_priv.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 02:10:20 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2740bef445c51680d831ec40753436291f01760a">2740bef445c51680d831ec40753436291f01760a</a>
<blockquote>
<p>
    Bug 693268: reinstate big references.<br>
<br>
    To make big references compatible with 8-byte alignment on 32-bit Windows<br>
    force ref structure to take 16 bytes by adding a dummy uint64_t member<br>
    to the union.<br>
<br>
gs/psi/iref.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-23 00:00:31 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb62043f520985f28ccaf265258ddb31cee79e1e">eb62043f520985f28ccaf265258ddb31cee79e1e</a>
<blockquote>
<p>
    Get rid of staticly allocated pseudo-references.<br>
<br>
    Replace staticly initialized pseudo-references with C strings to<br>
    simplify experiments with reference sizes.<br>
<br>
gs/Resource/Init/gs_init.ps<br>
gs/Resource/Init/gs_res.ps<br>
gs/psi/iconf.c<br>
gs/psi/iconf.h<br>
gs/psi/imain.c<br>
gs/psi/imainarg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-22 11:20:24 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e53dc6b19a96abed3b4a10c12a284d096b37701">1e53dc6b19a96abed3b4a10c12a284d096b37701</a>
<blockquote>
<p>
    More PACIFY_VALGRIND magic<br>
<br>
    While working on bug 693278, valgrind was showing use of<br>
    uninitialised values. This turns out to be (in part) due to the<br>
    clist recording the padding in bitmaps (which can be uninited).<br>
<br>
    The PACIFY_VALGRIND magic added here allows this file to run valgrind<br>
    clean.<br>
<br>
gs/base/gsptype1.c<br>
gs/base/gxcht.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-22 09:19:39 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20adaa4a395059c3234c5b49979dc21f70e95bbf">20adaa4a395059c3234c5b49979dc21f70e95bbf</a>
<blockquote>
<p>
    Add some PACIFY_VALGRIND stuff for refs.<br>
<br>
    Seen while investigating bug 693278.<br>
<br>
gs/psi/iinit.c<br>
gs/psi/zmisc2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-22 03:43:09 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fb55f251b06fbfdf40cad66432369c4b09aa7627">fb55f251b06fbfdf40cad66432369c4b09aa7627</a>
<blockquote>
<p>
    Add code to mask harmless valgrind warnings in DEBUG or PACIFY_VALGRIND builds<br>
<br>
    Spotted while investigating bug 693278.<br>
<br>
gs/base/gsptype1.c<br>
gs/base/gxclist.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-21 11:44:46 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=69727555e1ff7be4f0af4d8b79f33408181d25ba">69727555e1ff7be4f0af4d8b79f33408181d25ba</a>
<blockquote>
<p>
    Bug 693278: SEGV in 09-50.PS - bad enumeration of device colors<br>
<br>
    Masked device colors were all being enumerated as if they were<br>
    binary halftones. Colored halftones need to be handled differently<br>
    and this was causing this problem. It looks like devn device colors<br>
    should also be handled differently, so changed here too.<br>
<br>
gs/base/gsptype1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-20 15:16:18 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d527eade5778811475ea8be4cbba4eeec573b28a">d527eade5778811475ea8be4cbba4eeec573b28a</a>
<blockquote>
<p>
    Big 693272; fix SEGV due to optimised interpolation.<br>
<br>
    When calculating the leftmargin to skip over due to the clipping<br>
    region, we were failing to allow for the fact that dst_width might<br>
    be negative due to an image being horizontally flipped.<br>
<br>
    Simply using any_abs solves the SEGV and does the right thing, I<br>
    believe.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-18 00:22:53 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39fda0d88d35e2df4787b88b7d3e23eb74d59f49">39fda0d88d35e2df4787b88b7d3e23eb74d59f49</a>
<blockquote>
<p>
    Bug 692210: fix potential indeterminism in zsetcolor()<br>
<br>
    The value of a partly-initialized color created by zsetcolor()<br>
    is copied to graphic state and compared with other colors by<br>
    memcmp() in gx_hld_saved_color_equal() Full initialization is<br>
    the easiest way to avoid indeterminism.<br>
<br>
gs/psi/zcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-17 22:32:25 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=32e1d6b480017d0655b8926b69bb3b7617730665">32e1d6b480017d0655b8926b69bb3b7617730665</a>
<blockquote>
<p>
    Bug 692910: fix quoted arguments in ps2epsi.bat<br>
<br>
    Strip the quotes before assigning the values to environment variables.<br>
    Use the original quoted arguments elsewhere.<br>
<br>
gs/lib/ps2epsi.bat<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-17 15:16:41 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=de8f9636ef6bdbb8af039a44443d7e05c990848e">de8f9636ef6bdbb8af039a44443d7e05c990848e</a>
<blockquote>
<p>
    Bug 692040 - automake-1.8 is required in ijs sources<br>
<br>
    credit to Richard Hughes ( richard@hughsie.com ) for the patch.<br>
<br>
    No cluster differences.<br>
<br>
gs/ijs/Makefile.am<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-17 15:09:24 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d6d4cc55caed5462d7c4b41eb52da93bba854589">d6d4cc55caed5462d7c4b41eb52da93bba854589</a>
<blockquote>
<p>
    Bug 692552: Direct building of MacOS X universal binaries<br>
<br>
    Building universal binaries on OS X is now supported, removing the<br>
    need to build for each architecture, and &quot;lipo&quot; files together.<br>
<br>
    For this, configure should be called thus:<br>
    ./configure CC=&quot;gcc -arch i386 -arch x86_64&quot; CPP=&quot;gcc -E&quot;<br>
<br>
    and then invoke &quot;make&quot; normally.<br>
<br>
    Universal binaries including PPC support are not currently supported.<br>
<br>
    No cluster differences.<br>
<br>
gs/arch/osx-x86-x86_64-gcc.h<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/doc/Make.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 11:50:21 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fe79c76c8254faba9a2b422543062a577a375fee">fe79c76c8254faba9a2b422543062a577a375fee</a>
<blockquote>
<p>
    Bug 692750: have gdevwpr2 &quot;manage&quot; device icc profiles<br>
<br>
    gdevwpr2 is one of the rare devices that can change its color space during its<br>
    lifetime. Such devices need to &quot;manage&quot; their device ICC profiles directly.<br>
<br>
    As the cups device is similar, these changes are loosely based on the<br>
    analogous part of gdevcups.c.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevwpr2.c<br>
gs/base/pcwin.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-17 09:09:58 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9a114739f6e1f8837be17305784fc2ca9cbb6450">9a114739f6e1f8837be17305784fc2ca9cbb6450</a>
<blockquote>
<p>
    Bug 693279: font: default base encoding<br>
<br>
    There is some guess work here: Acrobat appears to be always using<br>
    StandardEcoding as the default encoding for (at least) some non-symbolic<br>
    fonts (rather than, as the spec states, the encoding specified by the font).<br>
    As this is contrary to spec, and we only have a CFF example, I've restricted<br>
    this to only apply to fonts with Subtype Type1C *and* that result in a Type 2<br>
    PS font.<br>
<br>
    No cluster differences.<br>
<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-15 21:32:15 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d5c42d3a14cee808fd889c14805a69adae8eb5b9">d5c42d3a14cee808fd889c14805a69adae8eb5b9</a>
<blockquote>
<p>
    Bug 688978: Generate DOCINFO pdfmark<br>
<br>
    Pass the content of /Info dictionary to the interpreter using<br>
    DOCINFO pdfmark. Also improve error recovery to avoid regression<br>
    on one of our test cases that has broken /Info dictionary.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-15 02:19:50 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c76d00aaf4504cb65fc82771b705c9dc529084a">9c76d00aaf4504cb65fc82771b705c9dc529084a</a>
<blockquote>
<p>
    Bug 687950: pass all PDF boxes to pdfmark<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-15 00:27:48 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=437360af2799796c42304faaf9a0cc1e5c6f908c">437360af2799796c42304faaf9a0cc1e5c6f908c</a>
<blockquote>
<p>
    Bug 690568: Type usage problem on Itanium.<br>
<br>
    Commit a contributed patch for Itanium. The patch looks reasonable: size_t is<br>
    a better type than unsigned int to express the offset. The patch has no effect<br>
    on our regression testing.<br>
<br>
gs/base/gxobj.h<br>
gs/psi/igc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-14 18:04:36 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc97d97b74f15a98219f45942485244da1e11bce">dc97d97b74f15a98219f45942485244da1e11bce</a>
<blockquote>
<p>
    Add support for 32 bit compile tests in clusterpush.pl<br>
<br>
gs/toolbin/localcluster/clusterpush.pl<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-14 13:54:36 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79f9321f6331a6598b6c52887890f0d03afa9f96">79f9321f6331a6598b6c52887890f0d03afa9f96</a>
<blockquote>
<p>
    Bug 693273: Use standard setpagedevice instead of a simplified one.<br>
<br>
    Don't try to save a few milliseconds per page at the expense of correctness.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-13 02:14:41 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=238d6b887693b3dca97ab72d0e669670d8a53079">238d6b887693b3dca97ab72d0e669670d8a53079</a>
<blockquote>
<p>
    Partly revert the commit for big objet support.<br>
<br>
    Unfortunately, 12-byte ref causes SEGV on Win32. 64 and 32 bit Linux<br>
    builds were fine. max object sizes are back to 64K.<br>
<br>
gs/psi/iref.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 12:12:00 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cfedd260650e7f615ec35cf88bd1bfd00ec502c9">cfedd260650e7f615ec35cf88bd1bfd00ec502c9</a>
<blockquote>
<p>
    Fixes 693267 and 693162, the default VMI (vertical motion index) and<br>
    PCL orientaion were not consistent.<br>
<br>
pcl/pcpage.c<br>
pcl/pcursor.c<br>
pcl/pcursor.h<br>
pl/pjparse.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 11:59:05 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6dd836c62658cfe38bf2988fd55ee05a9a3870d9">6dd836c62658cfe38bf2988fd55ee05a9a3870d9</a>
<blockquote>
<p>
    Adds debug logging for pcl macros.<br>
<br>
pcl/pcmacros.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 12:59:25 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39c501a222658d754b9ab9540f283d7bd05e19ad">39c501a222658d754b9ab9540f283d7bd05e19ad</a>
<blockquote>
<p>
    Fix scaling issues seen with fast halftoning code.<br>
<br>
    We were missing out the right hand column of source data in images<br>
    (see the turkeys on 09-47N page 2 in comparison to png or<br>
    USE_FAST_CODE=0 renderings); fix this by not subtracting 1 from<br>
    src_size. Don't subtract 1 from data_length (or dest width) either<br>
    to match.<br>
<br>
    Change dda to do a 'half step' to ensure we are sampling from the<br>
    centre of each pixel (avoids a shift to the right in zoomed up<br>
    images). This requires a new dda init macro - remove the old<br>
    (unused, slower) dda formulation to avoid having to think too hard.<br>
<br>
gs/base/gxdda.h<br>
gs/base/gxicolor.c<br>
gs/base/gximono.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 14:22:49 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dba8f75023dc5b1abac7e338a541360a106d9956">dba8f75023dc5b1abac7e338a541360a106d9956</a>
<blockquote>
<p>
    Fix bug 690963. Update the plane_extract device for hl color handling.<br>
<br>
    The plane_extract device (used by pksmraw, pamcmyk32, and bmpsep1 as<br>
    well as gdevbjc_.c) was never updated for many of the newer device<br>
    procedures, including fillpage. This is handled by extending the<br>
    prototype procs for the device so that gx_device_forward_fill_in_procs<br>
    does not use the procs from the target.<br>
<br>
gs/base/gdevplnx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 15:59:15 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86f9af6937e76e10a7adad201b06c337b1a9240b">86f9af6937e76e10a7adad201b06c337b1a9240b</a>
<blockquote>
<p>
    Increase max object size to 16M.<br>
<br>
    Increase the size of rsize member of the ref structure from ushort<br>
    to uint_32. This is needed to support large composite objects permitted by current<br>
    PDF specification. On 64-bit systems the actual size of ref didn't change.<br>
    On 32-bit systems the ref has grown to 12 bytes, which caused a couple of<br>
    changes in the alignment and padding code. Finally, the max size of all<br>
    composite objects has been increased to 16M.<br>
<br>
    This patch leaves large objects exposed PS interpreter.<br>
    Traditional PS limits can be re-imposed on the PS interpreter if<br>
    needed.<br>
<br>
    The patch results in a couple of progressions on the PDF test base,<br>
    and a few expected differences on PS test files that test traditional<br>
    limits on composite PS objects.<br>
<br>
gs/doc/Language.htm<br>
gs/psi/igcref.c<br>
gs/psi/int.mak<br>
gs/psi/iref.h<br>
gs/psi/zpacked.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 13:03:33 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d3ea65bd08665e48525a4f8694276814fdebded7">d3ea65bd08665e48525a4f8694276814fdebded7</a>
<blockquote>
<p>
    Correct fast halftoning code in multi plane case.<br>
<br>
    We were using an incorrect stride in a calculation, resulting in<br>
    corrupted output.<br>
<br>
gs/base/gxht_thresh.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-10 09:02:32 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c004cd6856445cdb5fccc40b5393ffb72a0d9433">c004cd6856445cdb5fccc40b5393ffb72a0d9433</a>
<blockquote>
<p>
    Fix the nsis installer config file.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/psi/nsisinst.nsi<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 09:34:02 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23087cc653c4fcaf401715d7f5c6a4509576a21f">23087cc653c4fcaf401715d7f5c6a4509576a21f</a>
<blockquote>
<p>
    Merge remote-tracking branches 'origin' and 'origin/OpenJpeg-1.5'<br>
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 00:51:35 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=946c6312efc2cbf74875d19fd7b49f3505ab7a81">946c6312efc2cbf74875d19fd7b49f3505ab7a81</a>
<blockquote>
<p>
    Apply a patch for CVE-2012-3358<br>
<br>
    See http://code.google.com/p/openjpeg/source/detail?r=1727<br>
    Other CVE patches are not needed for v.1.5.<br>
<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-09 00:45:09 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef85034141b90c05ba0bc5e2ad40f834205b4f2a">ef85034141b90c05ba0bc5e2ad40f834205b4f2a</a>
<blockquote>
<p>
    Reapply our patches to OpenJpeg-1.5<br>
<br>
gs/openjpeg/libopenjpeg/image.c<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/jp2.c<br>
gs/openjpeg/libopenjpeg/jp2.h<br>
gs/openjpeg/libopenjpeg/openjpeg.c<br>
gs/openjpeg/libopenjpeg/openjpeg.h<br>
gs/openjpeg/libopenjpeg/opj_malloc.h<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-08 20:36:38 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e3808ff733ed0d485b67211ad5bcf7aa992c739">4e3808ff733ed0d485b67211ad5bcf7aa992c739</a>
<blockquote>
<p>
    Import original OpenJpeg 1.5<br>
<br>
    This revision doesn't compile. It's here to establish a reference<br>
    for the diffs.<br>
<br>
gs/base/openjpeg.mak<br>
gs/openjpeg/libopenjpeg/CMakeLists.txt<br>
gs/openjpeg/libopenjpeg/Makefile.am<br>
gs/openjpeg/libopenjpeg/Makefile.in<br>
gs/openjpeg/libopenjpeg/cidx_manager.c<br>
gs/openjpeg/libopenjpeg/cidx_manager.h<br>
gs/openjpeg/libopenjpeg/cio.c<br>
gs/openjpeg/libopenjpeg/cio.h<br>
gs/openjpeg/libopenjpeg/dwt.c<br>
gs/openjpeg/libopenjpeg/event.c<br>
gs/openjpeg/libopenjpeg/event.h<br>
gs/openjpeg/libopenjpeg/image.c<br>
gs/openjpeg/libopenjpeg/image.h<br>
gs/openjpeg/libopenjpeg/indexbox_manager.h<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/j2k.h<br>
gs/openjpeg/libopenjpeg/j2k_lib.c<br>
gs/openjpeg/libopenjpeg/j2k_lib.h<br>
gs/openjpeg/libopenjpeg/jp2.c<br>
gs/openjpeg/libopenjpeg/jp2.h<br>
gs/openjpeg/libopenjpeg/mqc.c<br>
gs/openjpeg/libopenjpeg/openjpeg.c<br>
gs/openjpeg/libopenjpeg/openjpeg.h<br>
gs/openjpeg/libopenjpeg/opj_includes.h<br>
gs/openjpeg/libopenjpeg/opj_malloc.h<br>
gs/openjpeg/libopenjpeg/phix_manager.c<br>
gs/openjpeg/libopenjpeg/pi.c<br>
gs/openjpeg/libopenjpeg/pi.h<br>
gs/openjpeg/libopenjpeg/ppix_manager.c<br>
gs/openjpeg/libopenjpeg/t1.c<br>
gs/openjpeg/libopenjpeg/t2.c<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
gs/openjpeg/libopenjpeg/tcd.h<br>
gs/openjpeg/libopenjpeg/thix_manager.c<br>
gs/openjpeg/libopenjpeg/tpix_manager.c<br>
gs/openjpeg/opj_config.h.in.user<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 15:25:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=38da6175372319af334d1eb7a4474c98f6881f3d">38da6175372319af334d1eb7a4474c98f6881f3d</a>
<blockquote>
<p>
    Pull doc changes from 9.06 release branch.<br>
<br>
    Update docs for 9.06 release candidate 1.<br>
<br>
    Update changelog with post 9.06rc1 changes.<br>
<br>
    Update release date in docs.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 23:37:19 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=402806536e6ce5eb7b76eb7a4c5725ec2bbc4e80">402806536e6ce5eb7b76eb7a4c5725ec2bbc4e80</a>
<blockquote>
<p>
    Backport patches CVE problems.<br>
<br>
    CVE-2009-5030 http://code.google.com/p/openjpeg/source/detail?r=1703<br>
    CVE-2012-1499 http://code.google.com/p/openjpeg/source/detail?r=1330<br>
    CVE-2012-3358 http://code.google.com/p/openjpeg/source/detail?r=1727<br>
<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/jp2.c<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 18:05:58 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3ffd243ae375288c7c08607056dd08dae51018f">b3ffd243ae375288c7c08607056dd08dae51018f</a>
<blockquote>
<p>
    Remove devcups from default devices on Windows<br>
<br>
    Since devcups and its infrastructure were only added to gs to allow gs<br>
    developers who work on Windows to debug cups problems, it's not really<br>
    relevant for normal use.<br>
<br>
    This change makes it optional, by adding WITH_CUPS=1 to the nmake command<br>
    line arguments.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/ghostscript.vcproj<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 17:13:39 +0200
</strong>
<br>Sebastian Rasmussen &lt;sebras@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=010b1adedf128a7079729d10ad5a8c1b97c8acec">010b1adedf128a7079729d10ad5a8c1b97c8acec</a>
<blockquote>
<p>
    Bug 693256: Free GR_/GB_stats.....<br>
<br>
    .....as long as retaining them is yet to be implemented<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 16:00:08 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ae5e2a73654cb9d2845e053428ebfddd3670c2d">5ae5e2a73654cb9d2845e053428ebfddd3670c2d</a>
<blockquote>
<p>
    Workaround libpaper's poor memory management.<br>
<br>
    libpaper allocates using the stdlib malloc(), and expects the calling code<br>
    to release the memory via stdlib free().<br>
<br>
    Normally this works fine, but Memento hooks malloc() and free() in the<br>
    pre-processor, so it sees the free() call, but not the malloc() call.<br>
<br>
    This can result in confusing, spurious errors from memento.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gp_upapr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 08:43:48 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=327da990d82209c411841bbade4fc2a77fb326e7">327da990d82209c411841bbade4fc2a77fb326e7</a>
<blockquote>
<p>
    Bug 693223: remove apparently moribund dumphint tool<br>
<br>
    dumphint.ps and the scripts which call it seem to be of almost no value<br>
    these days, and appear to have suffered &quot;bit rot&quot;. So remove them.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/lib/dumphint<br>
gs/lib/dumphint.bat<br>
gs/lib/dumphint.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-04 09:18:50 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ec908d81e3dc999f694356a970f63b66f7e5976">5ec908d81e3dc999f694356a970f63b66f7e5976</a>
<blockquote>
<p>
    pdfwrite - fix PDF/X-3 annotation check<br>
<br>
    The previous commit 7167ebcceae78be8dcec24a059f936a861769cd5 incorrectly<br>
    checked the location of the annotation on the page, and prevented any annotation<br>
    in PDF/X-3 output, whereaas annotations off the page are actually permitted.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdfm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-03 18:49:32 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=27f22e3a48bafc8a663e08ac1aeb310b302055af">27f22e3a48bafc8a663e08ac1aeb310b302055af</a>
<blockquote>
<p>
    First attempt at Windows 8 &quot;Metro&quot; compatibility.<br>
<br>
    Standard MSVC builds will work for Windows 8 in desktop mode. The<br>
    complexity comes in supporting Windows RT (or &quot;Metro&quot; as Microsoft<br>
    have been calling it). To do Metro builds you need to download<br>
    Microsoft Visual C 2012 Express, and install it into a preview copy<br>
    of Windows 8.<br>
<br>
    MSVC 2012 Express will not import the existing Solution file (probably<br>
    because it's nmake based), so I've been compiling from the command<br>
    line.<br>
<br>
    Open a &quot;VS2012 x86 Native Tools Command Prompt&quot; and cd to the gs<br>
    directory. Then use:<br>
<br>
     nmake -f psi\msvc32.mak SBR=1 DEVSTUDIO=1 METRO=1<br>
<br>
    to build. For PCL change to main, then use:<br>
<br>
     nmake -f pcl6_msvc.mak SBR=1 DEVSTUDIO=1 METRO=1<br>
<br>
    etc.<br>
<br>
    Things to note:<br>
<br>
     * There is no message loop in Windows RT and the window handling is<br>
       all via different APIs anyway - so we only support the console<br>
       exe, with no display device.<br>
<br>
     * We have no registry access so the code just looks at the usual<br>
       environment variables.<br>
<br>
     * Cups has been disabled (as libcups wants to do useful things like<br>
       http, which won't currently compile under Windows RT).<br>
<br>
gs/base/gp_mswin.c<br>
gs/base/gp_wgetv.c<br>
gs/base/msvctail.mak<br>
gs/base/winlib.mak<br>
gs/psi/dwdll.c<br>
gs/psi/dwmainc.c<br>
gs/psi/gsdll32metro.def<br>
gs/psi/gsdll64metro.def<br>
gs/psi/msvc.mak<br>
gs/psi/winint.mak<br>
language_switch/pspcl6_msvc.mak<br>
main/pcl6_msvc.mak<br>
pl/dwmainc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-03 00:32:32 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6070a6f33bebf7538e48219010bc1e4de8341ea8">6070a6f33bebf7538e48219010bc1e4de8341ea8</a>
<blockquote>
<p>
    Rip out jasper -- openjpeg is our JPX implementation.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/gs.mak<br>
gs/base/jasper.mak<br>
gs/base/lib.mak<br>
gs/base/macgenmcpxml.sh<br>
gs/base/macos-mcp.mak<br>
gs/base/msvclib.mak<br>
gs/base/openvms.mak<br>
gs/base/openvms.mmk<br>
gs/base/sjpx.c<br>
gs/base/sjpx.h<br>
gs/base/winlib.mak<br>
gs/jasper/COPYRIGHT<br>
gs/jasper/INSTALL<br>
gs/jasper/LICENSE<br>
gs/jasper/Makefile.am<br>
gs/jasper/Makefile.in<br>
gs/jasper/NEWS<br>
gs/jasper/README<br>
gs/jasper/acaux/compile<br>
gs/jasper/acaux/config.guess<br>
gs/jasper/acaux/config.sub<br>
gs/jasper/acaux/depcomp<br>
gs/jasper/acaux/install-sh<br>
gs/jasper/acaux/ltmain.sh<br>
gs/jasper/acaux/missing<br>
gs/jasper/aclocal.m4<br>
gs/jasper/configure<br>
gs/jasper/configure.ac<br>
gs/jasper/data/Makefile.am<br>
gs/jasper/data/colorprofiles/README<br>
gs/jasper/data/colorprofiles/erimm.icm<br>
gs/jasper/data/colorprofiles/esrgb.icm<br>
gs/jasper/data/colorprofiles/esrgbgrey.icm<br>
gs/jasper/data/colorprofiles/grey.icm<br>
gs/jasper/data/colorprofiles/greyromm.icm<br>
gs/jasper/data/colorprofiles/romm.icm<br>
gs/jasper/data/colorprofiles/sgray.icm<br>
gs/jasper/data/colorprofiles/srgb.icm<br>
gs/jasper/data/colorprofiles/sycc.icm<br>
gs/jasper/data/images/README<br>
gs/jasper/data/images/example.mif<br>
gs/jasper/data/images/example.mif0<br>
gs/jasper/data/images/feep.pnm<br>
gs/jasper/data/images/feep2.pnm<br>
gs/jasper/data/images/goldenears.bmp<br>
gs/jasper/data/images/goldenears.jpg<br>
gs/jasper/data/images/goldenears.pnm<br>
gs/jasper/data/images/goldenears.ras<br>
gs/jasper/data/images/goldenears_gray.jpg<br>
gs/jasper/data/images/goldenears_gray.pnm<br>
gs/jasper/data/images/goldenears_gray.ras<br>
gs/jasper/data/images/small_16x1.pgm<br>
gs/jasper/data/images/small_1x1.pgm<br>
gs/jasper/data/images/stawamuschief.pnm<br>
gs/jasper/data/images/stawamuschief_gray.pnm<br>
gs/jasper/data/images/test.pnm<br>
gs/jasper/doc/README<br>
gs/jasper/doc/jasper.pdf<br>
gs/jasper/doc/jpeg2000.pdf<br>
gs/jasper/jasper.spec<br>
gs/jasper/jasper.spec.in<br>
gs/jasper/src/Makefile.am<br>
gs/jasper/src/Makefile.in<br>
gs/jasper/src/README<br>
gs/jasper/src/appl/Makefile.am<br>
gs/jasper/src/appl/Makefile.in<br>
gs/jasper/src/appl/dummy.c<br>
gs/jasper/src/appl/imgcmp.c<br>
gs/jasper/src/appl/imginfo.c<br>
gs/jasper/src/appl/jasper.c<br>
gs/jasper/src/appl/jasper_sdl.c<br>
gs/jasper/src/appl/jiv.c<br>
gs/jasper/src/libjasper/Makefile.am<br>
gs/jasper/src/libjasper/Makefile.in<br>
gs/jasper/src/libjasper/README<br>
gs/jasper/src/libjasper/base/Makefile.am<br>
gs/jasper/src/libjasper/base/Makefile.in<br>
gs/jasper/src/libjasper/base/jas_cm.c<br>
gs/jasper/src/libjasper/base/jas_debug.c<br>
gs/jasper/src/libjasper/base/jas_getopt.c<br>
gs/jasper/src/libjasper/base/jas_icc.c<br>
gs/jasper/src/libjasper/base/jas_iccdata.c<br>
gs/jasper/src/libjasper/base/jas_image.c<br>
gs/jasper/src/libjasper/base/jas_init.c<br>
gs/jasper/src/libjasper/base/jas_malloc.c<br>
gs/jasper/src/libjasper/base/jas_seq.c<br>
gs/jasper/src/libjasper/base/jas_stream.c<br>
gs/jasper/src/libjasper/base/jas_string.c<br>
gs/jasper/src/libjasper/base/jas_tvp.c<br>
gs/jasper/src/libjasper/base/jas_version.c<br>
gs/jasper/src/libjasper/bmp/Makefile.am<br>
gs/jasper/src/libjasper/bmp/Makefile.in<br>
gs/jasper/src/libjasper/bmp/bmp_cod.c<br>
gs/jasper/src/libjasper/bmp/bmp_cod.h<br>
gs/jasper/src/libjasper/bmp/bmp_dec.c<br>
gs/jasper/src/libjasper/bmp/bmp_enc.c<br>
gs/jasper/src/libjasper/bmp/bmp_enc.h<br>
gs/jasper/src/libjasper/dummy.c<br>
gs/jasper/src/libjasper/include/Makefile.am<br>
gs/jasper/src/libjasper/include/Makefile.in<br>
gs/jasper/src/libjasper/include/jasper/Makefile.am<br>
gs/jasper/src/libjasper/include/jasper/Makefile.in<br>
gs/jasper/src/libjasper/include/jasper/jas_cm.h<br>
gs/jasper/src/libjasper/include/jasper/jas_config.h<br>
gs/jasper/src/libjasper/include/jasper/jas_config_ac.h.in<br>
gs/jasper/src/libjasper/include/jasper/jas_config_win32.h<br>
gs/jasper/src/libjasper/include/jasper/jas_debug.h<br>
gs/jasper/src/libjasper/include/jasper/jas_fix.h<br>
gs/jasper/src/libjasper/include/jasper/jas_getopt.h<br>
gs/jasper/src/libjasper/include/jasper/jas_icc.h<br>
gs/jasper/src/libjasper/include/jasper/jas_image.h<br>
gs/jasper/src/libjasper/include/jasper/jas_init.h<br>
gs/jasper/src/libjasper/include/jasper/jas_malloc.h<br>
gs/jasper/src/libjasper/include/jasper/jas_math.h<br>
gs/jasper/src/libjasper/include/jasper/jas_seq.h<br>
gs/jasper/src/libjasper/include/jasper/jas_stream.h<br>
gs/jasper/src/libjasper/include/jasper/jas_string.h<br>
gs/jasper/src/libjasper/include/jasper/jas_tvp.h<br>
gs/jasper/src/libjasper/include/jasper/jas_types.h<br>
gs/jasper/src/libjasper/include/jasper/jas_version.h<br>
gs/jasper/src/libjasper/include/jasper/jasper.h<br>
gs/jasper/src/libjasper/jp2/Makefile.am<br>
gs/jasper/src/libjasper/jp2/Makefile.in<br>
gs/jasper/src/libjasper/jp2/jp2_cod.c<br>
gs/jasper/src/libjasper/jp2/jp2_cod.h<br>
gs/jasper/src/libjasper/jp2/jp2_dec.c<br>
gs/jasper/src/libjasper/jp2/jp2_dec.h<br>
gs/jasper/src/libjasper/jp2/jp2_enc.c<br>
gs/jasper/src/libjasper/jpc/Makefile.am<br>
gs/jasper/src/libjasper/jpc/Makefile.in<br>
gs/jasper/src/libjasper/jpc/jpc_bs.c<br>
gs/jasper/src/libjasper/jpc/jpc_bs.h<br>
gs/jasper/src/libjasper/jpc/jpc_cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_cs.c<br>
gs/jasper/src/libjasper/jpc/jpc_cs.h<br>
gs/jasper/src/libjasper/jpc/jpc_dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_fix.h<br>
gs/jasper/src/libjasper/jpc/jpc_flt.h<br>
gs/jasper/src/libjasper/jpc/jpc_math.c<br>
gs/jasper/src/libjasper/jpc/jpc_math.h<br>
gs/jasper/src/libjasper/jpc/jpc_mct.c<br>
gs/jasper/src/libjasper/jpc/jpc_mct.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqcod.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqcod.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqdec.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqdec.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqenc.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqenc.h<br>
gs/jasper/src/libjasper/jpc/jpc_qmfb.c<br>
gs/jasper/src/libjasper/jpc/jpc_qmfb.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1cod.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2cod.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_tagtree.c<br>
gs/jasper/src/libjasper/jpc/jpc_tagtree.h<br>
gs/jasper/src/libjasper/jpc/jpc_tsfb.c<br>
gs/jasper/src/libjasper/jpc/jpc_tsfb.h<br>
gs/jasper/src/libjasper/jpc/jpc_util.c<br>
gs/jasper/src/libjasper/jpc/jpc_util.h<br>
gs/jasper/src/libjasper/jpg/Makefile.am<br>
gs/jasper/src/libjasper/jpg/Makefile.in<br>
gs/jasper/src/libjasper/jpg/README<br>
gs/jasper/src/libjasper/jpg/jpg_cod.h<br>
gs/jasper/src/libjasper/jpg/jpg_dec.c<br>
gs/jasper/src/libjasper/jpg/jpg_dummy.c<br>
gs/jasper/src/libjasper/jpg/jpg_enc.c<br>
gs/jasper/src/libjasper/jpg/jpg_enc.h<br>
gs/jasper/src/libjasper/jpg/jpg_jpeglib.h<br>
gs/jasper/src/libjasper/jpg/jpg_val.c<br>
gs/jasper/src/libjasper/mif/Makefile.am<br>
gs/jasper/src/libjasper/mif/Makefile.in<br>
gs/jasper/src/libjasper/mif/README<br>
gs/jasper/src/libjasper/mif/mif_cod.c<br>
gs/jasper/src/libjasper/mif/mif_cod.h<br>
gs/jasper/src/libjasper/pgx/Makefile.am<br>
gs/jasper/src/libjasper/pgx/Makefile.in<br>
gs/jasper/src/libjasper/pgx/pgx_cod.c<br>
gs/jasper/src/libjasper/pgx/pgx_cod.h<br>
gs/jasper/src/libjasper/pgx/pgx_dec.c<br>
gs/jasper/src/libjasper/pgx/pgx_enc.c<br>
gs/jasper/src/libjasper/pgx/pgx_enc.h<br>
gs/jasper/src/libjasper/pnm/Makefile.am<br>
gs/jasper/src/libjasper/pnm/Makefile.in<br>
gs/jasper/src/libjasper/pnm/pnm_cod.c<br>
gs/jasper/src/libjasper/pnm/pnm_cod.h<br>
gs/jasper/src/libjasper/pnm/pnm_dec.c<br>
gs/jasper/src/libjasper/pnm/pnm_enc.c<br>
gs/jasper/src/libjasper/pnm/pnm_enc.h<br>
gs/jasper/src/libjasper/ras/Makefile.am<br>
gs/jasper/src/libjasper/ras/Makefile.in<br>
gs/jasper/src/libjasper/ras/ras_cod.c<br>
gs/jasper/src/libjasper/ras/ras_cod.h<br>
gs/jasper/src/libjasper/ras/ras_dec.c<br>
gs/jasper/src/libjasper/ras/ras_enc.c<br>
gs/jasper/src/libjasper/ras/ras_enc.h<br>
gs/jasper/src/msvc/Makefile.am<br>
gs/jasper/src/msvc/Makefile.in<br>
gs/jasper/src/msvc/README<br>
gs/jasper/src/msvc/imgcmp.dsp<br>
gs/jasper/src/msvc/imginfo.dsp<br>
gs/jasper/src/msvc/jasper.dsp<br>
gs/jasper/src/msvc/jasper.dsw<br>
gs/jasper/src/msvc/jiv.dsp<br>
gs/jasper/src/msvc/libjasper.dsp<br>
gs/psi/int.mak<br>
gs/psi/msvc.mak<br>
gs/psi/nsisinst.nsi<br>
gs/psi/winint.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-03 09:52:09 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7167ebcceae78be8dcec24a059f936a861769cd5">7167ebcceae78be8dcec24a059f936a861769cd5</a>
<blockquote>
<p>
    pdfwrite - check annotation placement and Box sizes for PDF/X-3 validity<br>
<br>
    Bug #693233 &quot;PDF/X-3 created using ghostscript gives preflight errors&quot;<br>
<br>
    We were not checking the bounds of annotations to ensure they were outside<br>
    the TrimBox or BleedBox (if present). Annotations are not permitted in the<br>
    printable area of a PDF/X-3 file.<br>
<br>
    In addition we were not checking to see that the TrimBox bounds did not exceed<br>
    the BleedBox or MediaBox.<br>
<br>
    There seems to be a bug in the Acrobat validation tool which insists that the<br>
    CropBox must not extend past the BleedBox. I can find no justification for<br>
    this in the specification, and indeed the PDF 1.7 spec notes that the CropBox has<br>
    'no defined relationship with any of the other boundaries' so for now I've chosen<br>
    to ignore this restriction.<br>
<br>
    No differences expected as PDF/X-3 output is not cluster tested<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfm.c<br>
gs/base/gdevpdfo.c<br>
gs/base/gdevpdfo.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 23:14:09 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b40b8fdcfdf4fc9f46fd5d2f8e7b88796490970a">b40b8fdcfdf4fc9f46fd5d2f8e7b88796490970a</a>
<blockquote>
<p>
    Bug 693185. The limitcheck in validatedevicenspace must match int_remap_color_info_s.<br>
<br>
    Commit e884e3 masked the failure, but since the test in validatedevicenspace<br>
    used GS_CLIENT_COLOR_MAX_COMPONENTS, the array bounds could still be exceeded.<br>
<br>
    Note that the confusing error message from the PDF interpreter from comment 1<br>
    still exists unless -dPDFSTOPONERROR is used, which gives a more meaningful<br>
    'limitcheck' immediately following the 'Do' of the image with 17 DeviceN<br>
    components. Bug 693185 is reopened for the error message as P3.<br>
<br>
gs/base/gsccolor.h<br>
gs/psi/icremap.h<br>
gs/psi/zcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 17:27:32 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d8ca80d1cb480702c109414c46e381981c94ddcb">d8ca80d1cb480702c109414c46e381981c94ddcb</a>
<blockquote>
<p>
    Get rid of 'icclib' since we now use lcms2 (or optionally lcms).<br>
<br>
common/msvc_top.mak<br>
common/ugcc_top.mak<br>
gs/base/Makefile.in<br>
gs/base/gdevpdfk.c<br>
gs/base/gs.mak<br>
gs/base/icclib.mak<br>
gs/base/ijs.mak<br>
gs/base/macos-mcp.mak<br>
gs/base/macosx.mak<br>
gs/base/openvms.mak<br>
gs/base/openvms.mmk<br>
gs/base/ugcclib.mak<br>
gs/base/unix-gcc.mak<br>
gs/base/unixansi.mak<br>
gs/base/winlib.mak<br>
gs/icclib/Licence.txt<br>
gs/icclib/NOTES<br>
gs/icclib/Readme.txt<br>
gs/icclib/icc.c<br>
gs/icclib/icc.h<br>
gs/icclib/icc9809.h<br>
gs/psi/os2.mak<br>
gs/psi/winint.mak<br>
gs/psi/zicc.c<br>
language_switch/pspcl6_gcc.mak<br>
language_switch/pspcl6_msvc.mak<br>
main/pcl6_gcc.mak<br>
main/pcl6_msvc.mak<br>
svg/svg_gcc.mak<br>
svg/svg_msvc.mak<br>
xps/xps_gcc.mak<br>
xps/xps_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 20:34:26 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a884b57b792291a6c713600662ab60718aca3e4f">a884b57b792291a6c713600662ab60718aca3e4f</a>
<blockquote>
<p>
    Update documentation for tiffsep planar device<br>
<br>
    Add in comments about the use of -dMaxSpots as well as the fact that the device,<br>
    and psdcmyk are planar and limited to 64 colorants per page.  Also add in a<br>
    hint about using -dMaxSpots when we are processing a Postscript file and bump<br>
    up to the default max limit of 10 colorants.  Tested it and it worked nicely.<br>
    Thanks Robin Watts.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 18:27:45 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cfbd3faf503983d35dec119bc4e618e7bae0af30">cfbd3faf503983d35dec119bc4e618e7bae0af30</a>
<blockquote>
<p>
    Add -dMaxSpots for tiffsep and psd devices.<br>
<br>
    psd and tiffsep devices now run with GS_SOFT_MAX_SPOTS spots enabled<br>
    by default (GS_CLIENT_COLOR_MAX_COMPONENTS-4 unless predefined<br>
    differently at build time). The user can change this value using<br>
    -dMaxSpots=X (where 0 &lt;= X &lt;= GS_CLIENT_COLOR_MAX_COMPONENTS-4).<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gsccolor.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 17:13:23 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=974ba5dde88108ba54c10e8c4f2c59fbce2db5cd">974ba5dde88108ba54c10e8c4f2c59fbce2db5cd</a>
<blockquote>
<p>
    Add new 'const' compression method for clist bits.<br>
<br>
    Spot that the compressed bitmap is all identically the same byte<br>
    value (most likely 0 or FF), and if so, send just a single byte.<br>
<br>
gs/base/gsbitops.c<br>
gs/base/gsbitops.h<br>
gs/base/gxclbits.c<br>
gs/base/gxcldev.h<br>
gs/base/gxclrast.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 09:09:05 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fe9465d90b4662eb56c7d0686ea87603b5c238b3">fe9465d90b4662eb56c7d0686ea87603b5c238b3</a>
<blockquote>
<p>
    ps2write - don't leave our dictionary on the stack at temination of the output<br>
<br>
    Bug #693241 &quot; save / restore around pdf2ps output causes invalidrestore&quot;<br>
<br>
    Although the output of ps2write isn't intended for encapsulation, we do intend<br>
    one day to produce an eps2write (or something) which will be. So we may as<br>
    well fix this now.<br>
<br>
    Previously we left our internal dictionary on the dictionary stack at the<br>
    end of the output, here we simply 'end' it which removes it from the stack and<br>
    make the output better suited for encapsulation.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 22:14:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2d613c33cda3b5c83ce83a6d9a48a0f5014c922f">2d613c33cda3b5c83ce83a6d9a48a0f5014c922f</a>
<blockquote>
<p>
    Fix the -disable-gtk &quot;so&quot; build option<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 14:07:49 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=004aeab5298b0a42ff08a1c9e626f41cf799039c">004aeab5298b0a42ff08a1c9e626f41cf799039c</a>
<blockquote>
<p>
    Fix lcms2 64-bit value decoding on big endian systems<br>
    that lack 64-bit types or have these types missed by configuration.<br>
<br>
gs/lcms2/src/cmsplugin.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 16:51:58 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1532d478d06dcd26d1307942705ce1f05135b7b">c1532d478d06dcd26d1307942705ce1f05135b7b</a>
<blockquote>
<p>
    Fix parenthesis typo that caused the return code from sscanf to be ignored.<br>
<br>
gs/psi/imainarg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 12:26:39 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60028f89756d3027ddf7f4a1dab09c06d0b1c81a">60028f89756d3027ddf7f4a1dab09c06d0b1c81a</a>
<blockquote>
<p>
    Add common unix style scaling suffix support for -d____= parameters.<br>
<br>
    Supported suffixes are 'k' and 'K' ( *= 1024), 'm' and 'M' ( *= 1024*1024)<br>
    and 'g' and 'G' ( *= 1024*1024*1024). Note that only 1g will not overflow.<br>
    No support is provided for .5g or 1.5g values, but this is better than<br>
    nothing. Both ghostscript and the other ghostpdl apps (that use plmain.c)<br>
    now provide this support.<br>
<br>
gs/psi/imainarg.c<br>
pl/plmain.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 17:53:58 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5876c67ba54ca41499fe4e595d140afa5d0c6120">5876c67ba54ca41499fe4e595d140afa5d0c6120</a>
<blockquote>
<p>
    Update tiffsep/tiffsep1 documentation w.r.t downscaler.<br>
<br>
    Document 32 and 34 ratios. Add extra info to tiffsep1 to distinguish<br>
    it from tiffsep in 1bpp mode.<br>
<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-30 11:17:55 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19c07c2f90a4fefd149c5e6d32ecb4496f9f01a4">19c07c2f90a4fefd149c5e6d32ecb4496f9f01a4</a>
<blockquote>
<p>
    Fix the confusion w.r.t fill_rectangle_hl_color between int and fixed coordinates<br>
<br>
    This isn't widely used -- for gs_fillpage and for gs_rectfill, but some uses<br>
    were using 'fixed' coordinates (such as gdevpdfd.c) and others implementation<br>
    behaved as if the rect contained 'int' pixel coordinates (gxdcolor.c).<br>
<br>
gs/base/gdevabuf.c<br>
gs/base/gdevdsha.c<br>
gs/base/gdevmpla.c<br>
gs/base/gdevnfwd.c<br>
gs/base/gdevp14.c<br>
gs/base/gsdps1.c<br>
gs/base/gsovrc.c<br>
gs/base/gxclip.c<br>
gs/base/gxclip2.c<br>
gs/base/gxclipm.c<br>
gs/base/gxclrast.c<br>
gs/base/gxclrect.c<br>
gs/base/gxdcolor.c<br>
gs/base/gxpcmap.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 10:50:43 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7eabd219b61418db08f1e707deb3dc9e753661f1">7eabd219b61418db08f1e707deb3dc9e753661f1</a>
<blockquote>
<p>
    Fix link warnings about bad memset in gdevtsep.c<br>
<br>
    Due to a mistake on my part, the tiffsep device had a couple of<br>
    memsets in that did nothing; these were intended to clear an array<br>
    of pointers before use. Not clearing the array would only have been<br>
    a problem if we'd hit an error condition in a very small region of<br>
    code, but nonetheless, this is a fix.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 08:26:34 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ba0272f00c1de822fff0ac4087446c45f46aeb6">1ba0272f00c1de822fff0ac4087446c45f46aeb6</a>
<blockquote>
<p>
    Bump the master version number.<br>
<br>
gs/Resource/Init/gs_init.ps<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-07 11:49:41 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed033afdc6dcd4a964dd6c54a08e53e807a33a4e">ed033afdc6dcd4a964dd6c54a08e53e807a33a4e</a>
<blockquote>
<p>
    Update changelog with post 9.06rc1 changes.<br>
<br>
    Update release date in docs.<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-08 08:42:26 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22d614c608778edf3fc6ba2481813c9e9e57cc2e">22d614c608778edf3fc6ba2481813c9e9e57cc2e</a>
<blockquote>
<p>
    Update product string and release date.<br>
<br>
gs/base/gscdef.c<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 23:37:19 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=291872308da215e1d7e12c8375fcf10dd5e651d2">291872308da215e1d7e12c8375fcf10dd5e651d2</a>
<blockquote>
<p>
    Backport patches CVE problems.<br>
<br>
    CVE-2009-5030 http://code.google.com/p/openjpeg/source/detail?r=1703<br>
    CVE-2012-1499 http://code.google.com/p/openjpeg/source/detail?r=1330<br>
    CVE-2012-3358 http://code.google.com/p/openjpeg/source/detail?r=1727<br>
<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/jp2.c<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 08:43:48 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20157526924fbe59436170085a17e530d08e9807">20157526924fbe59436170085a17e530d08e9807</a>
<blockquote>
<p>
    Bug 693223: remove apparently moribund dumphint tool<br>
<br>
    dumphint.ps and the scripts which call it seem to be of almost no value<br>
    these days, and appear to have suffered &quot;bit rot&quot;. So remove them.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/lib/dumphint<br>
gs/lib/dumphint.bat<br>
gs/lib/dumphint.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 23:14:09 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e48e87f883df0d39d1409d814c5d15444c3dca07">e48e87f883df0d39d1409d814c5d15444c3dca07</a>
<blockquote>
<p>
    Bug 693185. The limitcheck in validatedevicenspace must match int_remap_color_info_s.<br>
<br>
    Commit e884e3 masked the failure, but since the test in validatedevicenspace<br>
    used GS_CLIENT_COLOR_MAX_COMPONENTS, the array bounds could still be exceeded.<br>
<br>
    Note that the confusing error message from the PDF interpreter from comment 1<br>
    still exists unless -dPDFSTOPONERROR is used, which gives a more meaningful<br>
    'limitcheck' immediately following the 'Do' of the image with 17 DeviceN<br>
    components. Bug 693185 is reopened for the error message as P3.<br>
<br>
gs/base/gsccolor.h<br>
gs/psi/icremap.h<br>
gs/psi/zcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 20:34:26 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=588c2ee040526fbea470e36e7cbc8e87a503cab9">588c2ee040526fbea470e36e7cbc8e87a503cab9</a>
<blockquote>
<p>
    Update documentation for tiffsep planar device<br>
<br>
    Add in comments about the use of -dMaxSpots as well as the fact that the device,<br>
    and psdcmyk are planar and limited to 64 colorants per page.  Also add in a<br>
    hint about using -dMaxSpots when we are processing a Postscript file and bump<br>
    up to the default max limit of 10 colorants.  Tested it and it worked nicely.<br>
    Thanks Robin Watts.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 18:27:45 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=836a551b97dd4a8436608b6dcebe8f8fb8632bcd">836a551b97dd4a8436608b6dcebe8f8fb8632bcd</a>
<blockquote>
<p>
    Add -dMaxSpots for tiffsep and psd devices.<br>
<br>
    psd and tiffsep devices now run with GS_SOFT_MAX_SPOTS spots enabled<br>
    by default (ten, unless predefined differently at build time). The<br>
    user can change this value using -dMaxSpots=X (where<br>
    0 &lt;= X &lt;= GS_CLIENT_COLOR_MAX_COMPONENTS-4).<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gsccolor.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 22:14:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d723d72b3c9f7e171299a5ccc70a5f1ca715a50a">d723d72b3c9f7e171299a5ccc70a5f1ca715a50a</a>
<blockquote>
<p>
    Fix the -disable-gtk &quot;so&quot; build option<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 14:07:49 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7e7b4ae93066b841c0b1eac539c220b79d7f7a5d">7e7b4ae93066b841c0b1eac539c220b79d7f7a5d</a>
<blockquote>
<p>
    Fix lcms2 64-bit value decoding on big endian systems<br>
    that lack 64-bit types or have these types missed by configuration.<br>
<br>
gs/lcms2/src/cmsplugin.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 17:53:58 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c832985cab3b769d460a3f3e0ae894c2a84fa1ba">c832985cab3b769d460a3f3e0ae894c2a84fa1ba</a>
<blockquote>
<p>
    Update tiffsep/tiffsep1 documentation w.r.t downscaler.<br>
<br>
    Document 32 and 34 ratios. Add extra info to tiffsep1 to distinguish<br>
    it from tiffsep in 1bpp mode.<br>
<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 15:25:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af22330035dc852635b2102353cec1a94504cb88">af22330035dc852635b2102353cec1a94504cb88</a>
<blockquote>
<p>
    Update docs for 9.06 release candidate 1.<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 10:50:43 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76722bee735462eedf4f4c6d9dfa552e3c1f7ebc">76722bee735462eedf4f4c6d9dfa552e3c1f7ebc</a>
<blockquote>
<p>
    Fix link warnings about bad memset in gdevtsep.c<br>
<br>
    Due to a mistake on my part, the tiffsep device had a couple of<br>
    memsets in that did nothing; these were intended to clear an array<br>
    of pointers before use. Not clearing the array would only have been<br>
    a problem if we'd hit an error condition in a very small region of<br>
    code, but nonetheless, this is a fix.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 08:40:18 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e7ca769528b822b94ad8d1e498bde44d861637b">1e7ca769528b822b94ad8d1e498bde44d861637b</a>
<blockquote>
<p>
    Product string and date updates.<br>
<br>
gs/base/gscdef.c<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>

<h2><a name="Version9.06"></a>Version 9.06 (2012-07-31)</h2>

<p>This is the sixth full release in the stable 9.x series.

<p> Highlights in this release include:
<ul>
<li>
<p>PDF/A-2 - pdfwrite now supports the creation of PDF/A-2 files. The 'PDFA'
command line switch can now take a numeric parameter:
<ul>
<li>0 = not PDF/A compliant</li>
<li>1 = PDF/A-1b compliant</li>
<li>2 = PDF/A-2b compliant</li>
</ul>
<p>Simply specifying &quot;-dPDFA&quot; continues to have the old behaviour of creating PDF/A-1b files.
For PDF/A-2 the command line should include &quot;-dPDFA=2&quot;.
<br>
</li>
<li>
<p>pdfwrite &quot;Server mode&quot; - pdfwrite can now be run in &quot;server mode&quot; which allows
the device to be closed without closing the interpreter. This means it is no
longer necessary to terminate GS before starting a new PDF conversion. This leads on to:
<br>
</li>
<li>
<p>pdfwrite now supports the &quot;%d&quot; format in the OutputFile switch. If this is set
then pdfwrite will output each page of input to an individual file.
<br>
</li>
<li>
<p>ps2write - recent exposure to a range of PostScript devices has thrown up some
interesting deficiencies in those devices. ps2write now emits PostScript in
slightly different ways in order to produce output on a wider variety of devices.
In some cases this also results in improved print times but it is still important
to set the resolution appropriately for the output device, especially if the
input contains transparency.
<br>
</li>
<li>
<p>Ghostscript can now use output intents defined in PDFs by using the
&quot;-dUsePDFX3Profile&quot; command line option. See <a href="Use.htm#ICC_color_parameters">ICC Color Parameters</a> for details.
<br>
</li>
<li>
<p>tiffsep/tiffsep1: support for large numbers of separations improved. The previous
implementation of those devices utilised a &quot;compressed color encoding&quot; to
represent the tints for all the plates in one 64 bit value. As the number of
plates increased, fewer bits were available for the tint for each plate,
ultimately resulting in an &quot;unencodable pixels&quot; error. These revisions
remove the reliance on the compressed color encoding, thus ensuring that
we have a consistent color bit depth, regardless of the number of plates,
and ensuring the &quot;unencodable pixels&quot; error will never occur.
<p>Also as a result of these changes, there are substantial performance
improvements in jobs with separations and transparency.
<br>
</li>
<li>
<p>tiffsep, psdcmyk and psdrgb now support the &quot;downscaler&quot; functionality.
This brings the &quot;tiffscaled&quot; style functionality to the DeviceN output devices, so
jobs can be rendered internally in contone and at a high resolution, and the output
optionally downsampled by a level specified by &quot;-dDownScaleFactor=n&quot;, and
also optionally error diffused to 1bpp output.
<br>
</li>
<li>
<p>Third party libraries: libtiff, libpng, libjpeg , Freetype and zlib have all be updated.
<br>
</li>
<li>
<p>clist storage, for rendering pages in bands, is now a run-time option: -sBandListStorage={file|memory}.
<br>
</li>
<li>
<p>Plus the usual round of bug fixes, compatibility changes, and incremental improvements.
</ul>

<p>In addition, Ghostscript and GhostPDL 8.71 are now unsupported, and those
still using those versions (or earlier ones) should migrate to 9.x as soon as
possible since many improvements, features and fixes from the 9.x versions
are impractical or impossible to back-port to these legacy versions.

<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.04_Incompatible_changes"></a>Incompatible changes</h3>
<p>
No recorded incompatible changes.

<h3><a name="9.06_Changelog"></a>Changelog</h3>
<p><strong>2012-08-06 23:37:19 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=291872308da215e1d7e12c8375fcf10dd5e651d2">291872308da215e1d7e12c8375fcf10dd5e651d2</a>
<blockquote>
<p>
    Backport patches CVE problems.<br>
<br>
    CVE-2009-5030 http://code.google.com/p/openjpeg/source/detail?r=1703<br>
    CVE-2012-1499 http://code.google.com/p/openjpeg/source/detail?r=1330<br>
    CVE-2012-3358 http://code.google.com/p/openjpeg/source/detail?r=1727<br>
<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/jp2.c<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-06 08:43:48 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20157526924fbe59436170085a17e530d08e9807">20157526924fbe59436170085a17e530d08e9807</a>
<blockquote>
<p>
    Bug 693223: remove apparently moribund dumphint tool<br>
<br>
    dumphint.ps and the scripts which call it seem to be of almost no value<br>
    these days, and appear to have suffered &quot;bit rot&quot;. So remove them.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/lib/dumphint<br>
gs/lib/dumphint.bat<br>
gs/lib/dumphint.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 23:14:09 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e48e87f883df0d39d1409d814c5d15444c3dca07">e48e87f883df0d39d1409d814c5d15444c3dca07</a>
<blockquote>
<p>
    Bug 693185. The limitcheck in validatedevicenspace must match int_remap_color_info_s.<br>
<br>
    Commit e884e3 masked the failure, but since the test in validatedevicenspace<br>
    used GS_CLIENT_COLOR_MAX_COMPONENTS, the array bounds could still be exceeded.<br>
<br>
    Note that the confusing error message from the PDF interpreter from comment 1<br>
    still exists unless -dPDFSTOPONERROR is used, which gives a more meaningful<br>
    'limitcheck' immediately following the 'Do' of the image with 17 DeviceN<br>
    components. Bug 693185 is reopened for the error message as P3.<br>
<br>
gs/base/gsccolor.h<br>
gs/psi/icremap.h<br>
gs/psi/zcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 20:34:26 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=588c2ee040526fbea470e36e7cbc8e87a503cab9">588c2ee040526fbea470e36e7cbc8e87a503cab9</a>
<blockquote>
<p>
    Update documentation for tiffsep planar device<br>
<br>
    Add in comments about the use of -dMaxSpots as well as the fact that the device,<br>
    and psdcmyk are planar and limited to 64 colorants per page.  Also add in a<br>
    hint about using -dMaxSpots when we are processing a Postscript file and bump<br>
    up to the default max limit of 10 colorants.  Tested it and it worked nicely.<br>
    Thanks Robin Watts.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-02 18:27:45 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=836a551b97dd4a8436608b6dcebe8f8fb8632bcd">836a551b97dd4a8436608b6dcebe8f8fb8632bcd</a>
<blockquote>
<p>
    Add -dMaxSpots for tiffsep and psd devices.<br>
<br>
    psd and tiffsep devices now run with GS_SOFT_MAX_SPOTS spots enabled<br>
    by default (ten, unless predefined differently at build time). The<br>
    user can change this value using -dMaxSpots=X (where<br>
    0 &lt;= X &lt;= GS_CLIENT_COLOR_MAX_COMPONENTS-4).<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gsccolor.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 22:14:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d723d72b3c9f7e171299a5ccc70a5f1ca715a50a">d723d72b3c9f7e171299a5ccc70a5f1ca715a50a</a>
<blockquote>
<p>
    Fix the -disable-gtk &quot;so&quot; build option<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-08-01 14:07:49 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7e7b4ae93066b841c0b1eac539c220b79d7f7a5d">7e7b4ae93066b841c0b1eac539c220b79d7f7a5d</a>
<blockquote>
<p>
    Fix lcms2 64-bit value decoding on big endian systems<br>
    that lack 64-bit types or have these types missed by configuration.<br>
<br>
gs/lcms2/src/cmsplugin.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 17:53:58 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c832985cab3b769d460a3f3e0ae894c2a84fa1ba">c832985cab3b769d460a3f3e0ae894c2a84fa1ba</a>
<blockquote>
<p>
    Update tiffsep/tiffsep1 documentation w.r.t downscaler.<br>
<br>
    Document 32 and 34 ratios. Add extra info to tiffsep1 to distinguish<br>
    it from tiffsep in 1bpp mode.<br>
<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 15:25:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af22330035dc852635b2102353cec1a94504cb88">af22330035dc852635b2102353cec1a94504cb88</a>
<blockquote>
<p>
    Update docs for 9.06 release candidate 1.<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 10:50:43 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76722bee735462eedf4f4c6d9dfa552e3c1f7ebc">76722bee735462eedf4f4c6d9dfa552e3c1f7ebc</a>
<blockquote>
<p>
    Fix link warnings about bad memset in gdevtsep.c<br>
<br>
    Due to a mistake on my part, the tiffsep device had a couple of<br>
    memsets in that did nothing; these were intended to clear an array<br>
    of pointers before use. Not clearing the array would only have been<br>
    a problem if we'd hit an error condition in a very small region of<br>
    code, but nonetheless, this is a fix.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-31 08:40:18 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e7ca769528b822b94ad8d1e498bde44d861637b">1e7ca769528b822b94ad8d1e498bde44d861637b</a>
<blockquote>
<p>
    Product string and date updates.<br>
<br>
gs/base/gscdef.c<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-30 19:05:08 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=443ad5a4885be7abf5a1e0777275eefbc5322cd2">443ad5a4885be7abf5a1e0777275eefbc5322cd2</a>
<blockquote>
<p>
    Up default GS_CLIENT_COLOR_MAX_COMPONENTS to 32.<br>
<br>
    The planar changes have enabled us to increase the default maximum<br>
    number of spot changes to 32. Tests show only a few differences<br>
    due to roundings.<br>
<br>
    Hopefully we can push it to 64 soon.<br>
<br>
gs/base/gsccolor.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-27 13:47:49 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=71c939e116dcffe72bf0c8ece9c647805da7e655">71c939e116dcffe72bf0c8ece9c647805da7e655</a>
<blockquote>
<p>
    Pass the data_cs information into the minimal needed clist icc profile information<br>
<br>
    The knowledge that the source space is gray is needed so that we handle the gray_to_K<br>
    mapping correctly when going out to CMYK devices.   Fixes a rendering issue in 29-07A.PS.<br>
    Thanks to Robin Watts for doing a lot of the detective work.<br>
<br>
gs/base/gxclimag.c<br>
gs/base/gxclist.h<br>
gs/base/gxclrast.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 23:58:40 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=428869d288d87d95fbcb5dcf8a0563003ff26294">428869d288d87d95fbcb5dcf8a0563003ff26294</a>
<blockquote>
<p>
    Fix bug 693220. The pdf14 device used compressed encoding in clist mode.<br>
<br>
    The pdf14 device clist mode did not respect the USE_COMPRESSED_ENCODING<br>
    setting always using compressed encoding, and ended up writing pure<br>
    colors with num_bytes == -3. This was undetected because tiffsep1 is not<br>
    part of the regression testing, and because the tiffsep1 device did not<br>
    use 'planar' mode as the tiffsep device did. Also fixed some blanks before<br>
    line ends and tab indents.<br>
<br>
    Also, since planar mode is more efficient and allows for &gt; 8 colorants<br>
    tiffsep1 was changed to use planar mode, getting rid of the need for<br>
    compressed color encoding in this file (maybe the last one).<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-26 18:55:30 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8dfd92bc9d91105bd678940c20479fc9ecebbbdb">8dfd92bc9d91105bd678940c20479fc9ecebbbdb</a>
<blockquote>
<p>
    Fix clist_copy_planes causing clist corruption.<br>
<br>
    When clist_copy_planes is used with a planar device, it used to<br>
    leave a gap (9 bytes in the debugging example), then write the<br>
    first planes data. Then it would write each subsequent plane (preceeded<br>
    with a single byte gap). Then it would fill in the 9 bytes.<br>
<br>
    Unfortunately, if the buffer filled up while copying one of the<br>
    non-initial planes in, the date would be copied away and stored before<br>
    the header was filled in.<br>
<br>
    This leads to clist corruption, and all sorts of problems ranging from<br>
    rendering issues to SEGVs.<br>
<br>
    The fix is to move the header writing forward to immediately after<br>
    the first plane is successfully written.<br>
<br>
    This was causing problems with a 72dpi unbanded rendering of<br>
    tests_private/comparefiles/Bug692517.pdf to the psdcmyk device<br>
    with GS_CLIENT_COLOR_MAX_COMPONENTS set to 32, but was also<br>
    causing problems without the change in MAX_COMPONENTS.<br>
<br>
gs/base/gxclrect.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-26 13:32:36 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f43f3d2016ae165a392fad962cda196e60587f8c">f43f3d2016ae165a392fad962cda196e60587f8c</a>
<blockquote>
<p>
    Bug 693147: monitors need max alignmrnt.<br>
    On 32-bit SunOS 5.11 gp_monitor structure need larger alignment than<br>
    4-byte pointer. Make it an union and add 64-bit attributes to ensure<br>
    proper alignment.<br>
<br>
gs/base/gpsync.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 16:45:38 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d3bfe9bf857bb804a9bf710cccb36e3b78b9d663">d3bfe9bf857bb804a9bf710cccb36e3b78b9d663</a>
<blockquote>
<p>
    Fix so that the image_render_frac handles sep color spaces correctly<br>
<br>
    The separation color spaces were not being handled properly in this renderer.<br>
    Also, if the device supported devn colors we were not packing them into the<br>
    correct type.<br>
<br>
gs/base/gxi12bit.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 22:02:00 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c8fc89fe8d72ad87158569825ddf421887c47713">c8fc89fe8d72ad87158569825ddf421887c47713</a>
<blockquote>
<p>
    Replace magic 32 number with MAX_COMPONENTS_IN_DEVN<br>
<br>
gs/base/gsccolor.h<br>
gs/psi/icremap.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-24 21:40:05 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e884e39691346b35ea8b87fe26d8d98857689397">e884e39691346b35ea8b87fe26d8d98857689397</a>
<blockquote>
<p>
    Change the remap_color_info structure so that we can support up to 32 colorants DeviceN<br>
<br>
    AR supports up to 32 colorants in a DeviceN color space and this brings us in line with<br>
    that product's limits.   Note that if the number of colorants is greater than<br>
    GS_CLIENT_COLOR_MAX_COMPONENTS then we end up using the alternate tint transform.<br>
    Previously, the tint transform would fail if we encountered a color DeviceN color<br>
    space with more that GS_CLIENT_COLOR_MAX_COMPONENTS colorants.  This fixes bug 693185<br>
<br>
gs/psi/icremap.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 13:26:41 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=61fd8053c2c0b653df3d461b791ca3f61767c4f5">61fd8053c2c0b653df3d461b791ca3f61767c4f5</a>
<blockquote>
<p>
    Bug 693210: check for scanning big arrays<br>
<br>
    Check whether the size of an scanned array exceed the current<br>
    max_arra_size and throw /limitcheck. Old code tried to allocate big<br>
    arrays, which caused a cascade of obscure errors.<br>
<br>
gs/psi/iscan.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 18:12:23 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e0744128be80ff2a0acb48a2c5e018dbb32c168">1e0744128be80ff2a0acb48a2c5e018dbb32c168</a>
<blockquote>
<p>
    More fixes for deep color in the clist.<br>
<br>
    In the previous commit I missed the reading code for the delta color<br>
    form. Updated here.<br>
<br>
gs/base/gxclrast.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 14:14:25 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b750aec711bde8505173622d590eabdda2f3d789">b750aec711bde8505173622d590eabdda2f3d789</a>
<blockquote>
<p>
    Bug 692824: only apply word spacing to single byte space<br>
<br>
    PDF word spacing is defined as only applying to character codes of one byte<br>
    with the value 32. We were using widthshow/awidthshow to implement word<br>
    spacing, but the character matching for those means any character code<br>
    with the value 32 will have the width applied: so both &lt;32&gt; and &lt;0032&gt; will<br>
    have word spacing applied, where only the former should.<br>
<br>
    I've added two customer operators (.pdfwidthshow and .pdfawidthshow) which the<br>
    PDF interpreter now uses. Those trigger a small additional capability in the<br>
    graphics lib code which ensures space is only allowed to be the single byte<br>
    value 32.<br>
<br>
    Cluster progressions with this patch seen in fts_20_2001.pdf and<br>
    fts_22_2202.pdf - no other differences.<br>
<br>
gs/Resource/Init/pdf_ops.ps<br>
gs/base/gstext.c<br>
gs/base/gxchar.c<br>
gs/base/gxtext.h<br>
gs/psi/zchar.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 13:40:31 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee0365f54e5d2cd80f5cae501d13d796094d022a">ee0365f54e5d2cd80f5cae501d13d796094d022a</a>
<blockquote>
<p>
    Avoid cmd_put_color being confused by deep color.<br>
<br>
    With high level color, we can have depths that are too bit to fit in<br>
    a gx_color_index. cmd_put_color has no idea how many bits of a<br>
    gx_color_index are used, so assumes that as many bits are used as<br>
    are in the target depth. The encoding used goes wrong when the number<br>
    of bits is bigger it guesses at is bigger than the number of bits in<br>
    a gx_color_index.<br>
<br>
    The fix is simply to change the writing and reading code to be smarter<br>
    about guessing; when writing/reading a gx_color_index you can never<br>
    need to write more bits than there are actually in a gx_color_index.<br>
<br>
    While debugging this code, I spotted that the devn_{write,read}_color<br>
    routines were always leaving an unused byte at the end of their commands.<br>
    Trim that here.<br>
<br>
gs/base/gxclrast.c<br>
gs/base/gxclutil.c<br>
gs/base/gxdcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 13:05:35 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7de5b7e3b3c64f8c7dd01df54e8223ab1275684a">7de5b7e3b3c64f8c7dd01df54e8223ab1275684a</a>
<blockquote>
<p>
    Remove a couple of unused variables.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/gxblend.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-25 08:12:19 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0caff3862d36e99ba5d14077c58e88bd9a082c83">0caff3862d36e99ba5d14077c58e88bd9a082c83</a>
<blockquote>
<p>
    Bug 693216: replace &quot;word-wise&quot; copies with memcpy()<br>
<br>
    Various places in the blending code used a loop to explicitly copy bytes from<br>
    the input buffer to the output, with the comment that the idiom used was<br>
    actually quicker than using memcpy(). The idiom in question relies on casting<br>
    the byte buffer to a four byte type. This raises the spectre of unaligned<br>
    accesses.<br>
<br>
    Testing suggests any difference between the word-wise copying and &quot;modern&quot;<br>
    memcpy implementations is non-existent, or too small to measure (my tests<br>
    showed more variation between runs than between the two implementations).<br>
<br>
    We reckon the memcpy() solution is more maintainable in the long term than<br>
    forcing the buffers into alignment.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gxblend.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 15:46:06 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a06bb8cfd8791254655889d85a1d37f173f53597">a06bb8cfd8791254655889d85a1d37f173f53597</a>
<blockquote>
<p>
    Rework colors_used to be a color_usage bitfield.<br>
<br>
    Previously, the clist would collate the colors used in a band/page<br>
    by ORing together any color indexs uses into a single gx_color_index.<br>
    This relies on the gx_color_index being able to represent the whole<br>
    depth.<br>
<br>
    This is dodgy with compressed encoding, and fails entirely with the<br>
    new planar based tiffsep/psdcmyk and high level color stuff, as the<br>
    total depth can far exceed the number of bits available in a<br>
    gx_color_index.<br>
<br>
    The fix here is to change to using a bitfield (gx_color_usage_bits)<br>
    for this record; this allows us to have up to 64 colorants with a<br>
    standard build.<br>
<br>
    The code here is still imperfect for all the reasons listed within<br>
    the original code (only works for subtractive spaces, can falsely<br>
    detect 'no colors used', etc), but it is at least consistently<br>
    imperfect now.<br>
<br>
gs/base/gdevpbm.c<br>
gs/base/gdevprn.c<br>
gs/base/gdevprn.h<br>
gs/base/gxband.h<br>
gs/base/gxcldev.h<br>
gs/base/gxclimag.c<br>
gs/base/gxclist.c<br>
gs/base/gxclist.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclread.c<br>
gs/base/gxclrect.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-24 16:28:00 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7319a6de58e1986c5500d6181db158d3084da099">7319a6de58e1986c5500d6181db158d3084da099</a>
<blockquote>
<p>
    Bug 693219 - Clarify default output device description<br>
<br>
    Patch submitted by: roucaries.bastien+gs@gmail.com<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/man/gs.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-24 15:16:46 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83f1aed5358d314cc52b5c243f94bbecb1e4469b">83f1aed5358d314cc52b5c243f94bbecb1e4469b</a>
<blockquote>
<p>
    When unpacking 16 bit image data, unpack it all.<br>
<br>
    Ensure we don't miss the last one off. Differences appear on the right<br>
    hand edge of the images when rendering:<br>
<br>
     gs -dNOINTERPOLATE -o out-%d.psd -sDEVICE=psdcmyk -r300 -dMaxBitmap=10000 fts_02_0200.pdf<br>
<br>
    vs<br>
<br>
     gs -dNOINTERPOLATE --debug=memfill-empty -o out-%d.psd -sDEVICE=psdcmyk -r300 -dMaxBitmap=10000 fts_02_0200.pdf<br>
<br>
gs/base/gxi16bit.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-23 17:19:21 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef036b230f33ce1d9cdd135655319d3828ca6008">ef036b230f33ce1d9cdd135655319d3828ca6008</a>
<blockquote>
<p>
    Bug 693204: Fix masked devn uncolored pattern error<br>
<br>
    In the old (non device n) code copy_portrait calls<br>
    gx_dc_default_fill_masked which calls gx_device_color_fill_rectangle<br>
    (actually gx_dc_pure_masked_fill_rect).<br>
<br>
    In the new code copy_portrait calls gx_dc_devn_fill_masked. This<br>
    function is almost identical, but results in calls to the<br>
    fill_rectangle_hl_color device procedure. This turns out to be<br>
    clist_fill_rectangle_hl_color, which tries to cmd_put_drawing_color.<br>
    This fails (and indeed would have failed in the old code) as we cannot<br>
    serialise a masked color.<br>
<br>
    If instead of calling the device procedure to fill_rectangle_hl_color,<br>
    we call the device color procedure to fill a rectangle, this exactly<br>
    mirrors the old code, and indeed results in calls to the<br>
    fill_rectangle_hl_color code in a way that don't give errors.<br>
<br>
gs/base/gxdcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-23 14:27:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f661e5225bb017d15b50c2aecda7d4283f8f3aa9">f661e5225bb017d15b50c2aecda7d4283f8f3aa9</a>
<blockquote>
<p>
    Bug 693205: check for &quot;sane&quot; page dimensions in x11 drivers<br>
<br>
    In the x11 devices, the page size is used to request the window dimensions from<br>
    X, and X does not support 0 x 0 sized windows.<br>
<br>
    If a page size is, or rounds to 0 x 0, inform the user, and return a<br>
    rangecheck error.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/gdevxini.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-23 14:15:01 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7dfac701b8a36395a88a69b3a1e9eeaaa70c6b0b">7dfac701b8a36395a88a69b3a1e9eeaaa70c6b0b</a>
<blockquote>
<p>
    Bug 693208: improve error feedback (when we can)<br>
<br>
    Have configure check for the presence of strerror() and if it's available,<br>
    have gp_strerror() call it.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/gp_unix.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-22 13:30:12 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9ef234a8a065f2240173bd1d5131418d171fbf4a">9ef234a8a065f2240173bd1d5131418d171fbf4a</a>
<blockquote>
<p>
    Another fix for bug 692542 for garbled output with NumRenderingThreads &gt; 1.<br>
<br>
    The multi-threaded rendering &quot;predicts&quot; which direction to start threads,<br>
    but the 'next_band' calculation in clist_get_band_from_thread was not<br>
    correct if the thread prediction was incorrect as it would be if the<br>
    device requested bands in other than the normal order as happens when<br>
    the device makes multiple rendering passes (psdcmyk) or NumCopies &gt; 1.<br>
<br>
    Also, depending on the number of bands, 'clist_teardown_render_threads'<br>
    could free the main thread's 'data' area, then later point the cdev-&gt;data<br>
    to the freed block, also leaving one of the thread's data blocks leaked<br>
    (releasing the chunk memory for the thread would free this, so the leak<br>
    would be temporary).<br>
<br>
gs/base/gxclist.h<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 22:46:02 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5a7b42637b166615c3c1e3b553bd86d1dced329b">5a7b42637b166615c3c1e3b553bd86d1dced329b</a>
<blockquote>
<p>
    Fix so that when we are doing the sep devices with spots the blend spaces for transparency remain separated<br>
<br>
    This fixes bug 693144 first part which is the segv for Bug6992217.pdf which likely existed prior to the<br>
    planar change for the sep devices.  The issue with 12-07C.PS is different.  In any event, the<br>
    issue was that there was a fill with a pattern in a softmask and there was an RGB transparency group<br>
    within the pattern.  With the separation devices, the blending space is maintained as a subtractive<br>
    space to allow blending of all the spot colorants which means that the parent group is always maintained.<br>
    There is a discussion about this in the PDF specification with respect to spot colors and transparency<br>
    blending.  In any event, the current code has some confusion since the decision as to if we should use<br>
    the group color space was based upon the device name (e.g. pdf14cmykspot) which became a problem when we<br>
    had the pdf14clistgray device when the pattern was a clist.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 15:33:24 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9986753fb7e45556980e5b661dedba2fe9d2f92c">9986753fb7e45556980e5b661dedba2fe9d2f92c</a>
<blockquote>
<p>
    ps2write - Emit a %%BeginResource for FOntFile resources<br>
<br>
    Previously we were emittign an %%EndResource comment but not a %%BeginResource<br>
<br>
    No differences sxpected<br>
<br>
gs/base/gdevpdtd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 13:48:17 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3f0bee24591c8f690bd121fee272d925247ce307">3f0bee24591c8f690bd121fee272d925247ce307</a>
<blockquote>
<p>
    Stamp on a warning in fapiufst.c<br>
<br>
    Sort out the path length, and parameters to strncat() with the stand gs maximum path length value.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/fapiufst.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-19 19:02:04 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39f5af403d9cf49b9419a85e3569436907ade65d">39f5af403d9cf49b9419a85e3569436907ade65d</a>
<blockquote>
<p>
    Solve psdcmyk SEGVs when max components reaches 32.<br>
<br>
    Max components reaching 32 means that the total depth reaches 256.<br>
    Attempting to pack 256 into a byte for the clist leads to obvious<br>
    problems.<br>
<br>
gs/base/gsptype1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 00:03:13 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1213e26fd9d71526855e1978c7440f7175413fcb">1213e26fd9d71526855e1978c7440f7175413fcb</a>
<blockquote>
<p>
    Bug 693199: Ignore broken %%ViewingOrientation<br>
<br>
    Add a check whether the comment has been parsed successfully.<br>
    If not, ignore the comment.<br>
<br>
gs/psi/zdscpars.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-20 10:27:32 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=01dc18e8418fc44a993840f0aeaf741929c1921a">01dc18e8418fc44a993840f0aeaf741929c1921a</a>
<blockquote>
<p>
    ps2write - Always ascii hex encode the eexec portion of type 1 fonts<br>
<br>
    Bug #693197 &quot;ps2write outputs Type 1 fonts in pfb format&quot;<br>
<br>
    Technically it is possible for the eexec portion of a type 1 font to be in<br>
    binary or ascii hex. Because we always ascii85 encode binary data if the<br>
    device does not support it, we left eexec portion as binary.<br>
<br>
    However it seems that at least some printers (Kyocera, possibly others) are<br>
    unable to deal with this.<br>
<br>
    This patch means that we alays use ascii hex data for the eexec encrypted<br>
    portion of a type 1 font. We did consider making this a command line option<br>
    but were unable to find any other tools which emitted binary here so opted<br>
    simply to conform.<br>
<br>
    All the investigation and the original patch (see bug report) by Chris Liddell<br>
<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdtb.c<br>
gs/base/gdevpsf1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-19 15:40:03 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=04392ddc8b6a369b0ec4dfd9d0e9c894d1aa729e">04392ddc8b6a369b0ec4dfd9d0e9c894d1aa729e</a>
<blockquote>
<p>
    Fix bug 692542. NumRenderingThreads &gt; 1 failed with planar devices.<br>
<br>
    The tile_cache_size was inconsistent resulting in the 'data' area<br>
    being miscalculated if the prn_device was set up in planar mode.<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-19 13:16:29 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c7f3d73ea47bba783872ac193585601a4760dcfd">c7f3d73ea47bba783872ac193585601a4760dcfd</a>
<blockquote>
<p>
    Fix for bug in the named color example support<br>
<br>
    When the example in gs\toolbin\color\named_color is run we get a segv.  It was due to<br>
    the name information not getting set up in the nameed color structure that the example uses.<br>
    It essentially uses an ICC for with the named spot color data packed into the buffer.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-19 12:42:38 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ddc361cee517d73f4977c7600d9853cc1813ad1f">ddc361cee517d73f4977c7600d9853cc1813ad1f</a>
<blockquote>
<p>
    Fix of bug in setting source based rendering intent for RGB objects<br>
<br>
    There were several typos caused by copy and past of the CMYK code for<br>
    setting rendering intents.  Thanks to Stefan Lietermann for finding this.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-18 23:05:23 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=17a42fca39c61c256cc5bab4d343f6bf38ae5109">17a42fca39c61c256cc5bab4d343f6bf38ae5109</a>
<blockquote>
<p>
    Add in support for copy_planes into the overprint device<br>
<br>
    The copy_planes procedure is used during the default copy_alpha_hl_color and if we<br>
    are going out to the overprint device, we need to make sure to copy only those<br>
    planes that are specified in the drawn components vector.   We also needed to<br>
    distinguish from this case and a copy_planes coming from the pattern tiling code.<br>
    This was done by adding in a copy_alpha_hl_color proc for the overprint device that<br>
    sets a flag and calls the default copy_alpha_hl_color so that later when we get<br>
    back to the overprint device's copy_planes proc we will know to do the over print<br>
    rather than just pass things along to the target device.  Fixes Bug 693184.<br>
<br>
gs/base/gsovrc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-19 16:37:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44b01d274db5272055de6afb3d72788b6db84d53">44b01d274db5272055de6afb3d72788b6db84d53</a>
<blockquote>
<p>
    Bug 693188: don't skip glyphs with degenerate matrices<br>
<br>
    In commit 752397ab, the fix for Bug 692263 was to skip over glyphs when the<br>
    matrix in force for the glyph had a zero scale in either dimension.<br>
<br>
    It seems that this approach had potentially unfavourable side effects in the<br>
    glyph cache.<br>
<br>
    So, when we encounter a degenerate matrix rendering a glyph, we now force a<br>
    minimal, non-zero scale before attempting to render the glyph. This placates<br>
    the glyph cache.<br>
<br>
    Cluster testing shows (tiny) progressions in Bug689006.pdf, Bug690179.pdf,<br>
    and Bug692634.ps, and pixel differences, not identifiable as progressions<br>
    or regressions in Bug690497.pdf and 12-07C.PS.<br>
<br>
gs/psi/fapi_ft.c<br>
gs/psi/fapibstm.c<br>
gs/psi/fapiufst.c<br>
gs/psi/ifapi.h<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-18 20:57:54 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=71ddb93b2b679c980a4024fcc1089c2d56abc3ab">71ddb93b2b679c980a4024fcc1089c2d56abc3ab</a>
<blockquote>
<p>
    Recognise Darken and Lighten as idempotent rendering modes.<br>
<br>
    No need to set the lop_pdf14 bit, and consequently makes files that<br>
    use stroking with Darken/Lighten much faster. See Bug 693173.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-18 13:11:35 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a25653ddb875c29172b62eff48bec0147d09aab">8a25653ddb875c29172b62eff48bec0147d09aab</a>
<blockquote>
<p>
    Update scrollbar handling in Windows windows.<br>
<br>
    Drag ghostscript kicking and screaming into the 1980s by adding<br>
    proportional scrollbar handling.<br>
<br>
gs/psi/dwimg.c<br>
gs/psi/dwtext.c<br>
pl/dwimg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-17 12:52:59 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d7b56aa8c3b39e58d2b5faefd33ecb7e377f097e">d7b56aa8c3b39e58d2b5faefd33ecb7e377f097e</a>
<blockquote>
<p>
    Fix for bug in clist copy planes procedure.<br>
<br>
    The clist copy planes procedure was not indexing through the planes during the clist writing.<br>
    The 2nd plane was getting replicated into all the other subsequent planes.  This is a bug fix<br>
    for 693061.   I also added a message for when we are in debug and going out to a device that<br>
    supports devn color to notify us of a case where we have DeviceN color spaces with \None colorants.<br>
    As mentioned in bug 693061 Comment 5 this causes a problem for the composite preview in the<br>
    separation devices.  Ink amounts for the separations will be correct, but without having the \None<br>
    colorant ink amounts, the preview is not going to be correct.<br>
<br>
gs/base/devs.mak<br>
gs/base/gsequivc.c<br>
gs/base/gxclrect.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-13 13:05:06 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a88326f1ca382092c889ffa9be1abe857c118a34">a88326f1ca382092c889ffa9be1abe857c118a34</a>
<blockquote>
<p>
    Bug 693166: Optimise interpolation<br>
<br>
    When interpolating, ghostscript pays no heed to the clipping rectangle.<br>
    Hence if we scale (say) a 256x256 image up to (say)17067x17067, even<br>
    though only a small portion of the scaled up image is actually visible<br>
    we scale the whole lot only to throw away 90%+ of it.<br>
<br>
    To fix this, we have to extend the capabilities of the interpolation<br>
    code.<br>
<br>
    The existing code already copes with only being given data for a<br>
    subsection of the image (for when we split images in the clist, I<br>
    guess). This rectangle is referred to in the code as being 'the<br>
    subrectangle we are rendering', when it's actually 'the subtrectangle<br>
    we are being given data for'. We update the description to be more<br>
    accurate.<br>
<br>
    We introduce a new rectangle, 'the render rectangle' to indicate the<br>
    subrectangle that we are actually rendering - this will always be a<br>
    subset of the data rectangle.<br>
<br>
    If we are given a clipping rectangle, we read the outer bbox from it,<br>
    and map this back into the source space of the image; we intersect this<br>
    with the data rectangle to get the render rectangle.<br>
<br>
    We update the scaling stream filter to set an 'Active' flag to say<br>
    whether we are inside the render rectangle or not. If not, we can<br>
    safely skip lines in their totality. By default we leave this set to<br>
    1, so that any scaling cores that aren't updated to know about this<br>
    will perform in the old way.<br>
<br>
    We update the scaling code to make use of the Active flag; whole lines<br>
    are skipped if we aren't in the active region, and if we are, we skip<br>
    prefixes/suffixes of unused pixels.<br>
<br>
    We update the scaling cores themselves to avoid calculating values<br>
    outside the active regions.<br>
<br>
    Note that for simplicity we still allocate space as if we were<br>
    accessing the whole line. We still calculate contributions for the whole<br>
    of the images; to do otherwise would require significant changes to<br>
    the weight generation code, and this isn't a huge consumer of time.<br>
<br>
gs/base/gximage.h<br>
gs/base/gxipixel.c<br>
gs/base/gxiscale.c<br>
gs/base/siscale.c<br>
gs/base/sisparam.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-17 13:28:01 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cbcd1dc873db397af0866f9fd54a70421dc6692f">cbcd1dc873db397af0866f9fd54a70421dc6692f</a>
<blockquote>
<p>
    Tweak interpolation calculations<br>
<br>
    In preparation for the next commit, tweak the image interpolation<br>
    calculations; rather than doing a matrix multiplication and then<br>
    only using the X coords from it, change to doing both width and<br>
    height calculations in the same way.<br>
<br>
    This causes various (350ish) small changes in interpolation output<br>
    due to rounding issues.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-16 22:16:35 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f12f569672d84a1846905c41701fca52f8dc55e">2f12f569672d84a1846905c41701fca52f8dc55e</a>
<blockquote>
<p>
    Bug 689376: fix //name handling on command prompt.<br>
<br>
    We allocate %statementedit in the system memory. When a is read from<br>
    the command prompt we use gs_scan_token() to determine, whether the<br>
    line has a complete token. If the line has immediately evaluated names,<br>
    gs_scan_token() fails. This is interpreted as the end of the input.<br>
    If the line buffer has a complete token, the buffer is rescanned<br>
    and everything is fine. Otherwise, scanning a prematurely closed buffer<br>
    causes an error.<br>
<br>
    All we need to do to fix this is to force local memory allocation<br>
    instead of inheriting system memory from %statementedit. The scanned<br>
    token is discarded after determining whether the input line is<br>
    complete.<br>
<br>
gs/psi/ziodev.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-16 13:00:46 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b49d3c75a70cbdcdb2214f22ad1a1f62f1bb90fc">b49d3c75a70cbdcdb2214f22ad1a1f62f1bb90fc</a>
<blockquote>
<p>
    ps2write - create document %%BoundingBox from teh individual page Bounding boxes<br>
<br>
    Bug #693181<br>
<br>
    The document level BoundingBox is supposed to be the intersection of the<br>
    boundingbox of all the pages, whereas in fact it is the device media size.<br>
<br>
    Now we create the document BoundingBox by taking largest dimensions from all<br>
    the pages in the output.<br>
<br>
    NB the BoundingBox for each page is given from the media request, so this is<br>
    not a true BoundingBox anyway, but at least it is better then before.<br>
<br>
gs/base/gdevpdfu.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-14 16:25:13 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=479b462ffa4663a71a88d185aaf7cc5c4f5d1903">479b462ffa4663a71a88d185aaf7cc5c4f5d1903</a>
<blockquote>
<p>
    Replaced an '==' that was incorrectly being used for equality testing in configure with '='.<br>
<br>
gs/tiff/configure<br>
gs/tiff/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-13 12:25:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=808f39dd443b1e475f6d9bfd320d79d793124d3f">808f39dd443b1e475f6d9bfd320d79d793124d3f</a>
<blockquote>
<p>
    Bug 692684: stack variable corruption<br>
<br>
    In alloc_restore_step_in(), we have to make sure that, whenever we back up<br>
    a memory space to the previous save level, we hold onto the gc_status.psignal<br>
    pointer, and put it into the restored memory space. In case the &quot;save&quot;<br>
    happened during an earlier call to interp() and co.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/isave.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-13 14:14:47 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fef9eef583d2ac227d3f9037785e27f1d5ecfc0d">fef9eef583d2ac227d3f9037785e27f1d5ecfc0d</a>
<blockquote>
<p>
    Fix for missing variable set in overprint code from enhancement of simulated RGB overprint<br>
<br>
    Fixes Bug 693085<br>
<br>
gs/base/gscspace.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-13 16:15:22 -0400
</strong>
<br>Wendy &lt;wendyst2@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cdf018f4dc9e7765a8c3851c2e66edaad5642a0b">cdf018f4dc9e7765a8c3851c2e66edaad5642a0b</a>
<blockquote>
<p>
    Add missing '\n' to the last line, required by MSVC 7.<br>
<br>
gs/base/gxcldev.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-13 13:54:36 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=57fe0115f01724b3c50812678c63924d008a01d9">57fe0115f01724b3c50812678c63924d008a01d9</a>
<blockquote>
<p>
    pdfwrite - code cleanup<br>
<br>
    Deprecated the undocumented 'MaxViewerMemorySize' parameter whcih wasn't in<br>
    fact being used anywhere useful.<br>
<br>
    Deprecated the 'pdf_write_and_free_all_resoruces' function which is not used<br>
    after deprecating MaxViewerMemorySize.<br>
<br>
    Deprecated the function 'pdf_glyph_origin' as it is unused<br>
<br>
    made 'write-font_resources' non-static so it can be called from pdf_close<br>
<br>
    Deprecated pdf_close_text_document and moved the code (which actually writes<br>
    fonts and font descriptors) into pdf_close so that its easier to follow the<br>
    control flow. Also cleaned up the code so that it isn't one huge 'if' test<br>
    but each function call is separated out for easier debugging.<br>
<br>
    Made a number of '#if 0' blocks into '#ifdef DEPRECATED_906'. All blocks of<br>
    code marked this way will be removed after the release of 9.06.<br>
<br>
    Removed a number of cases where we had #define labels with a bug number, these<br>
    now use the #ifdef DEPRECATED_906 lable or are simply removed and the code<br>
    compiled in.<br>
<br>
    Simlarly with '#define RIGHT_SBW' and '#if !RIGHT_SBW'<br>
<br>
    Updated the ps2ps2.htm document to remove the reference to MaxViewerMemorySize.<br>
<br>
    No differences expected.<br>
<br>
gs/Resource/Init/gs_pdfwr.ps<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdt.h<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtf.h<br>
gs/base/gdevpdtt.c<br>
gs/base/gdevpdtw.c<br>
gs/base/gdevpsds.c<br>
gs/doc/Ps2ps2.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 11:56:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d73413d5ccb44b11a644848422dfb17e51eb7da">9d73413d5ccb44b11a644848422dfb17e51eb7da</a>
<blockquote>
<p>
    Changes to build on msys/mingw<br>
<br>
    Allows all the system header presence macros previously set in unix-aux.mak to<br>
    be set by configure instead. The tests remain unix-aux.mak for backwards<br>
    compatibility.<br>
<br>
    This also changes those macros to the &quot;tri-value&quot; style:<br>
    undefined, defined 0 and defined 1.<br>
<br>
    Also removes jbig2dec/config_types.h from source control.<br>
<br>
    No cluter differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/dirent_.h<br>
gs/base/gp_unifn.c<br>
gs/base/gp_unifs.c<br>
gs/base/openvms.mak<br>
gs/base/pipe_.h<br>
gs/base/time_.h<br>
gs/base/unix-aux.mak<br>
gs/doc/Make.htm<br>
gs/jbig2dec/config_types.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 17:15:13 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa35587db7ba9dc469060d30d3313b318ca45bd5">aa35587db7ba9dc469060d30d3313b318ca45bd5</a>
<blockquote>
<p>
    make the SEAC detector and type 1 -&gt; type 2 charstring converter tolerate broken fonts<br>
<br>
    Bug #693170 &quot;ps2pdf crashes on a given file&quot;<br>
<br>
    The fonts in the PostScript file are invalid in that some of the glyphs do not<br>
    end with an 'endchar' or other valid termination operator. This was causing<br>
    a buffer overrun which eventually could cause access to invalid memory and a crash.<br>
<br>
    Added limit checking where it was missing and choose to return an 'unknown'<br>
    error so that code which is able to handle this can detect the condition. Code<br>
    which is not expecting this contdition will continue to signal an error.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpsfx.c<br>
gs/base/gxtype1.c<br>
gs/base/gxtype1.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 15:44:52 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82ef3429ec2f3fc891a2f61455027842b7aa7581">82ef3429ec2f3fc891a2f61455027842b7aa7581</a>
<blockquote>
<p>
    Revert &quot;Move GC flag from stack to gs_lib_ctx.&quot;<br>
<br>
    This reverts commit 39b0a515d5101cf48ae35f1ebb14e4558cb78e88.<br>
<br>
    That commit doubled the runtime in cluster testing, so presumably<br>
    gc was being triggered too often.<br>
<br>
gs/base/gslibctx.h<br>
gs/psi/imain.c<br>
gs/psi/interp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 08:42:38 -0400
</strong>
<br>SaGS &lt;sags5495@hotmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b2e2def97f5b1664dc3d8e2be942a2de5857b802">b2e2def97f5b1664dc3d8e2be942a2de5857b802</a>
<blockquote>
<p>
    Bug 693155: 'resourceforall' returns truncated names for /CMap resources.<br>
<br>
    (A)<br>
    Comments say that gs_init.ps::.generate_dir_list_templates_with_length returns<br>
    the legth of the &quot;directory&quot; part, but if actually returned the length of<br>
    &quot;[base] directory&quot; + &quot;template&quot; - 1.<br>
<br>
    (B)<br>
    gs_res.ps::ResourceForAll passes part of the real &quot;directory&quot; (the &quot;Category/&quot;)<br>
    as part of the &quot;template&quot; argument of .generate_dir_list_templates_with_length,<br>
    but failed to take into consideration the length of this string when cutting<br>
    &quot;directory&quot; from the full filespec in order to remain with the resource name.<br>
<br>
    Note that .generate_dir_list_templates_with_length does not check if its<br>
    &quot;template&quot; argument contains directories too so cannot adjust the returned<br>
    length. The code as written intends to deal with resource names that include<br>
    .file_name_separator (see discussion on Bug 688737 &quot;'resourceforall' truncates<br>
    names of file-based resources&quot;); such a resource name would be<br>
    &quot;Times/Cyrillic&quot;.<br>
<br>
gs/Resource/Init/gs_init.ps<br>
gs/Resource/Init/gs_res.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 13:29:24 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=29a16f87849a874cd872fc8e2beab2b3986eea51">29a16f87849a874cd872fc8e2beab2b3986eea51</a>
<blockquote>
<p>
    Bug 693171: Patch OpenJPEG to avoid SEGVs with broken files.<br>
<br>
    Patch from Shailesh Mistry. In the case of corrupt files, tiles<br>
    were failing to be allocated, leaving the code attempting to<br>
    work with non existent tiles. The fix is to spot the failure,<br>
    mark the tiles as being non-existence and then to check this<br>
    before accessing them.<br>
<br>
gs/openjpeg/libopenjpeg/j2k.c<br>
gs/openjpeg/libopenjpeg/tcd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 11:44:29 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=514595fc2cc84f51efdef563cf7a35a0050902e5">514595fc2cc84f51efdef563cf7a35a0050902e5</a>
<blockquote>
<p>
    Bug 693038 - allow gsx to build against GTK+ 3.x<br>
<br>
    Patch from galtgendo@gmail.com applied with changes to maintain compatibility<br>
    with GTK+ 2.x, and replace a function deprecated in GTK+ 3.x.<br>
<br>
    This patch drops GTK+ 1.x support.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
gs/psi/dxmain.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 09:20:35 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b6252440c644b4f172c517a931fd3da73828f64c">b6252440c644b4f172c517a931fd3da73828f64c</a>
<blockquote>
<p>
    Fix for OpenJPEG build on FreeBSD<br>
<br>
    Make sure OpenJPEG does not try to use memalign() on FreeBSD systems.<br>
<br>
    Credit to Alex Zimnitsky ( aavzz@yandex.ru ) for the patch.<br>
<br>
    No cluster differences.<br>
<br>
gs/openjpeg/libopenjpeg/opj_malloc.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-12 00:11:37 -0400
</strong>
<br>SaGS &lt;sags5495@hotmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e0deadb4b3661e6c4e0811b45d1c251e124632be">e0deadb4b3661e6c4e0811b45d1c251e124632be</a>
<blockquote>
<p>
    Remove an additional, incorrect, search for resources,<br>
    intended for OpenVMS only.<br>
<br>
    ResourceForAll used a 2nd template for searching file-based resources,<br>
        GenericResourceDir + Category<br>
          + .file_name_separator + originaltemplate + .file_name_separator + &quot;*&quot;<br>
    in addition to the standard<br>
        GenericResourceDir + Category + .file_name_separator + originaltemplate<br>
    This was documented as needed for OpenVMS, but it results in<br>
        dev:[genericresourcedir.Category]originaltemplate]* (&quot;]&quot; twice)<br>
    which is definitely invalid. It is also unnecessary, the &quot;standard&quot; one is OK.<br>
<br>
    For other platforms, this 2nd form may or may not be syntacticly valid (&quot;*?&quot;,<br>
    coming in form the original template, in the &quot;directory&quot; part), but it's<br>
    definitely not useful.<br>
<br>
    Of course, it remains the question what was the intent of the person who added<br>
    these lines (in case we should keep the code but fix it). I considered:<br>
<br>
    - &quot;dev:[genericresourcedir.Category.*]template&quot;, but this searches one<br>
      directory level too deep.<br>
    - &quot;dev:[genericresourcedir.Category]template;*&quot;, but this would load all<br>
      versions of a same file. Definitely not what we want, because we may end<br>
      with an obsolete (old) copy of the resource.<br>
    - &quot;dev:[genericresourcedir.Category]template.*&quot;, but this is unnecessary. And<br>
      maybe more important is that the exact template used is the responsability<br>
      of the caller; I see no reason for ResourceForAll to modify it.<br>
<br>
    The most precise documentation on OpenVMS path syntax I found is &quot;Guide to<br>
    OpenVMS File Applications&quot;<br>
    &lt;http://h71000.www7.hp.com/doc/731final/documentation/pdf/ovms_731_file_app.pdf&gt;<br>
    available from &lt;http://h71000.www7.hp.com/doc/os83_index.html&gt;.<br>
    I also asked on comp.os.vms, and the response I got confirmed the form used is<br>
    invalid.<br>
<br>
gs/Resource/Init/gs_res.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-11 23:17:36 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39b0a515d5101cf48ae35f1ebb14e4558cb78e88">39b0a515d5101cf48ae35f1ebb14e4558cb78e88</a>
<blockquote>
<p>
    Move GC flag from stack to gs_lib_ctx.<br>
<br>
    Move the GC flag from the stack, where it can go out of scope to<br>
    lib context structure (gs_lib_ctx_t), which is allocated quite<br>
    early in stable memory and never goes out of scope.<br>
<br>
    Revert the commit a39e4831ba0d74d742b365f3b3b1af192731303c for the<br>
    bug 692684 because it didn't really fix anything. That patch just<br>
    changed the stack layout and masked the effect of writing into an<br>
    out-of-scope location.<br>
<br>
    The sample file 34_all.PS no longer causes SEGV but continues to<br>
    have a resolution-dependant rendering of one character.<br>
<br>
gs/base/gslibctx.h<br>
gs/psi/imain.c<br>
gs/psi/interp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-11 18:27:44 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c304a350330b3e333b34c048de009967f1a6caa1">c304a350330b3e333b34c048de009967f1a6caa1</a>
<blockquote>
<p>
    Fixed typos in comments.<br>
<br>
gs/base/lcms.mak<br>
gs/base/lcms2.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-11 15:51:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4f6b98548bec2c10b10207d4f25b805fc393ade8">4f6b98548bec2c10b10207d4f25b805fc393ade8</a>
<blockquote>
<p>
    Bug 693176: write transparent type2 pattern color to clist<br>
<br>
    When using a clist, ensure that the all the color space data for the<br>
    pattern gets written to the clist, *and* that the clist correctly<br>
    records all the relevant transparency data.<br>
<br>
    I'm at a loss to explain how COMPILE_INITS influenced this, but this<br>
    change brings the clist/non-clist output and code in line with each<br>
    other.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-10 15:03:49 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c7d2fbfef2ea176472c4459b3772ef3ac496ee5d">c7d2fbfef2ea176472c4459b3772ef3ac496ee5d</a>
<blockquote>
<p>
    Expanded -dDOINTERPOLATE section of Use.htm based on Robin's description of same.<br>
<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-09 14:04:16 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5d0a752ccd610aa4a3946e30e2a0917cacacf28">f5d0a752ccd610aa4a3946e30e2a0917cacacf28</a>
<blockquote>
<p>
    Fix for mistake in commit 951adcd6 .   which was the xps transparency fix<br>
<br>
    Fixes the reopening of bug 693042<br>
<br>
xps/xpspath.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-09 14:12:24 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=711883fd711772b7856e19207cc64f829033e254">711883fd711772b7856e19207cc64f829033e254</a>
<blockquote>
<p>
    Bug 693172: Truetype: disable hinting for broken glyph program<br>
<br>
    In the AFS Truetype code, if we encounter a glyph with a broken bytecode<br>
    program reset and retry the glyph with the bytcode interpreter disabled.<br>
<br>
    This reflects what the FAPI/Freetype does, and what most other TTF consumers<br>
    seem to do.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/ttfmain.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-07 13:50:54 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1815bdb424390c21289287d13f7e8747792c098">c1815bdb424390c21289287d13f7e8747792c098</a>
<blockquote>
<p>
    Simplify the ICC options PS code to do a single .setuserparams2<br>
<br>
    Use an array of names to collect all options that were set from the command<br>
    line and then do a single .setuserparams2 invocation.<br>
<br>
gs/Resource/Init/gs_lev2.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-06 16:38:55 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=149974a4a14999d5e336911b262600e5fa950e18">149974a4a14999d5e336911b262600e5fa950e18</a>
<blockquote>
<p>
    Fixes bug 693162, shifted text due to Vertical Motion Index command not<br>
    resetting the cursor to the home position.<br>
<br>
pcl/pcpage.c<br>
pcl/pcursor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-06 00:15:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=74897ff7aeecb9a76dde73a6554444b40a89beec">74897ff7aeecb9a76dde73a6554444b40a89beec</a>
<blockquote>
<p>
    Use .setuserparams2 instead of .setuserparams when setting the ICC user params<br>
<br>
    Thanks to Chris for pointing this out.  If we use .setuserparams then in gs_lev2.ps the<br>
    various user params such as /DefaultCMYKProfile are set.  This sets the profile<br>
    in the icc manager properly to what ever was set on the command line.<br>
    Unfortunately, the currentuserparams dictionary (or what ever object it is)<br>
    that is maintained by the interpreter is not updated with the same value, but<br>
    instead it has an old default value that it obtained from an earlier call of<br>
    .currentuserparams.   During a vm_reclaim,  context_state_store stores the<br>
    outdated userparam information and then context_state_load  does a call to<br>
    set_user_params with this outdated userparams information.  setuserparams2<br>
    takes care of this by getting the interpreters list in sync at the time we do<br>
    the setting of the parameter.  Fixes bug 693159<br>
<br>
gs/Resource/Init/gs_lev2.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-29 17:39:31 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=951adcd68cf899a472b8c280e58fd7ff589badd3">951adcd68cf899a472b8c280e58fd7ff589badd3</a>
<blockquote>
<p>
    Fix in XPS interpreter to ensures we only push the smallest transparency group needed + more<br>
<br>
    For a path that included an opacity mask, the XPS interpreter was pushing a soft mask<br>
    that included the entire page (it actually just looked at the current clip path). This<br>
    fix incorporates the path that we are filling in the computation of the transparency group<br>
    size.  Also, there were issues with the softmasks in general that were causing them to be<br>
    double applied.  Fixes 693042 and also provides improvements for 690951.  Also this should fix 693137 and 692892<br>
<br>
gs/base/gspath.c<br>
gs/base/gstrans.c<br>
gs/base/gstrans.h<br>
gs/base/gxpath.h<br>
gs/base/lib.mak<br>
gs/psi/ztrans.c<br>
xps/ghostxps.h<br>
xps/xpsglyphs.c<br>
xps/xpsgradient.c<br>
xps/xpsimage.c<br>
xps/xpsopacity.c<br>
xps/xpspage.c<br>
xps/xpspath.c<br>
xps/xpstile.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-04 17:32:21 +0200
</strong>
<br>Tor Andersson &lt;tor@ccxvii.net&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f71f5166422d5c61cb13c6078b2dfb1c3234db7">2f71f5166422d5c61cb13c6078b2dfb1c3234db7</a>
<blockquote>
<p>
    Implement XPS style simulations using shearing and fill+stroke.<br>
<br>
    Special case for pdfwrite to pass through Tr mode without using charpath<br>
    by looking for PreserveTrMode in the device parameters.<br>
<br>
    Fixes bug 689278.<br>
<br>
xps/ghostxps.h<br>
xps/xpsglyphs.c<br>
xps/xpstop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-03 22:52:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=31d9fb2b771272d7ba4712d8887c668d0e86d82e">31d9fb2b771272d7ba4712d8887c668d0e86d82e</a>
<blockquote>
<p>
    Bug 693050 : Fix compiler warnings<br>
<br>
gs/jbig2dec/jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-03 15:48:43 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0bc05670e841517b8a2041999c19c19507874a4a">0bc05670e841517b8a2041999c19c19507874a4a</a>
<blockquote>
<p>
    pdfwrite - when we have /Indexed space or non-identity transfer use lossless compression<br>
<br>
    Bug #689506<br>
<br>
    level 1 output from PScript5.dll can create a fake 'Indexed' space by using<br>
    a non-identity transfer function. Also if we do have a real /Indexed space,<br>
    then using lossy compression or downsmapling (other than Subsample) results<br>
    in garbage output.<br>
<br>
    Previously we disabled compression and subsampling when either condition was<br>
    true, but this leads to large files under some conditions. The code here instead<br>
    overrides any downsampling and uses Subsample instead, and selects a lossless<br>
    compression scheme.<br>
<br>
    This results in smaller files for some conditions without affecting ordinary files.<br>
<br>
    Also removed a line with a C++ style comment<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdfi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-03 14:55:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ceac6867c04ef61e5529b0af14a2c4b641ca4206">ceac6867c04ef61e5529b0af14a2c4b641ca4206</a>
<blockquote>
<p>
    Bug 693164: PDF (partially) ignore tr mode for type 3 fonts<br>
<br>
    The PDF spec states that: &quot;The text rendering mode has no effect on text<br>
    displayed in a Type 3 font&quot; - unfortunately, not only does Acrobat not<br>
    behave like that, it behaves differently with various versions Acrobat.<br>
    Worse, Acrobat X Pro seems to produce different results depending on how you<br>
    load the file!<br>
<br>
    This change makes GS match Acrobat X Pro, which ignores text rendering modes<br>
    for Type 3 fonts, except mode 3 (non-marking).<br>
<br>
    As well as the problem file now working, this causes tiny differences in outline<br>
    for Bug692129.pdf, chartab.pdf. It causes a progression with pdf-t3-simple.pdf<br>
    which now renders more like Acro X.<br>
<br>
gs/Resource/Init/pdf_ops.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-02 22:49:17 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e9bbff5f116eccd87946df28fced66ba42cbad1d">e9bbff5f116eccd87946df28fced66ba42cbad1d</a>
<blockquote>
<p>
    Bug 693050 : Fix valgrind error in 0CF9 folder<br>
<br>
gs/jbig2dec/jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-07-02 21:53:20 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aad5317a0e77dac6fd2766b99c12c3ca7874c7d4">aad5317a0e77dac6fd2766b99c12c3ca7874c7d4</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 0717 folder<br>
<br>
gs/jbig2dec/jbig2_halftone.c<br>
gs/jbig2dec/jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-01 14:05:03 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a5a524ea71a58cc0e9e0200bb98a2fc341ec033">3a5a524ea71a58cc0e9e0200bb98a2fc341ec033</a>
<blockquote>
<p>
    Fix for broken AA support for devices that support the devn color type<br>
<br>
    This fix involved the addition of a copy_alpha_hl_color for passing along the devn color<br>
    value when doing the copy_alpha procedure.  This required support through the clist,<br>
    special handing in the pdf14 device and a default procedure for the operation.<br>
    The only devices that should be affected are tiffsep and psdcmyk.  Support for 16bit psd<br>
    devices may have issues and I will go back to check on this later as a customer is waiting<br>
    for this for 8 bit tiffsep.<br>
<br>
gs/base/gdevabuf.c<br>
gs/base/gdevdbit.c<br>
gs/base/gdevdflt.c<br>
gs/base/gdevmem.c<br>
gs/base/gdevmem.h<br>
gs/base/gdevmpla.c<br>
gs/base/gdevnfwd.c<br>
gs/base/gdevp14.c<br>
gs/base/gsdcolor.h<br>
gs/base/gspaint.c<br>
gs/base/gxccman.c<br>
gs/base/gxcldev.h<br>
gs/base/gxclip.c<br>
gs/base/gxclip.h<br>
gs/base/gxclip2.c<br>
gs/base/gxclipm.c<br>
gs/base/gxclist.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxclrect.c<br>
gs/base/gxdevcli.h<br>
gs/base/gxdevice.h<br>
gs/base/gxdevmem.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-28 10:53:31 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58d67647585fdb2707ccdb5eccc0123c77fbe495">58d67647585fdb2707ccdb5eccc0123c77fbe495</a>
<blockquote>
<p>
    Bug 693156 - incorrect units.<br>
<br>
    PCL distinguishes between device units and native units, and before<br>
    this change we had interpreted them to be the same, resulting in what<br>
    appeared to resolution dependencies in HPGL/2 - RTL.  The native units<br>
    can now be set by the PJL resolution given on the command line<br>
    independent of the physical units of the device.<br>
<br>
pcl/pcjob.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-28 11:07:22 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc797976bca27ea5c706d93f5fcb42b5386cc6ed">dc797976bca27ea5c706d93f5fcb42b5386cc6ed</a>
<blockquote>
<p>
    pdfwrite - store widths for regular fonts when there is a vertical displacement.<br>
<br>
    Bug #691369 &quot;Widths array in font dictionary contains incorrect values for rotated text&quot;<br>
<br>
    Similar to bug #692365 but this time for regular fonts not CIDFonts. If there<br>
    is any vertcial displacement of the glyph then we did not store teh glyph<br>
    width, leading to it being emitted as 0.<br>
<br>
    Fix is very similar also.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-27 09:34:03 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ff29d1f499451c63ddb8b3cc152cb2eda4b5e33">2ff29d1f499451c63ddb8b3cc152cb2eda4b5e33</a>
<blockquote>
<p>
    pdfwrite - record glyph vertical metrics evne when the position vector has a vertical shift<br>
<br>
    Bug #692365<br>
<br>
    The store_glyph_width routine returns &gt;0 if there is any vertical shift in<br>
    addition to a width, this is defined as 'not safe to cache'. The routine<br>
    pdf_glyph_widths ORs that into its return value and passes the data back.<br>
<br>
    scan_cmap_text was checking that value before recording the width, and not<br>
    recording it if it was &gt; 0. This is incorrect, at least when in vertical writing<br>
    mode, as this is the only place that we record the vertical metrics for use<br>
    in the W2 array. If we don't record them here this information is lost. Also<br>
    we don't need to worry about the vertical movement here as that is dealt with<br>
    elswewhere by modifying the text matrix.<br>
<br>
    This was leading to pdfwrite emitting a /W2 entry with all 0 values [0 0 0]<br>
    which caused significant misplacement of glyphs.<br>
<br>
    Expected Differences<br>
    Bug692576.ps exhibits a progression<br>
<br>
gs/base/gdevpdtc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-27 09:07:06 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d026537beaf869a2792cf5d97e8b5c3555875f28">d026537beaf869a2792cf5d97e8b5c3555875f28</a>
<blockquote>
<p>
    Bug 693158: initialise the fapi_raster structure before use<br>
<br>
    Fixes several valgrind errors about use of uninitialised values.<br>
<br>
    No cluster differences expected.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-27 07:50:25 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bc9efbeb2e69cd6d1aac4d14f30ba3b170e6a8f7">bc9efbeb2e69cd6d1aac4d14f30ba3b170e6a8f7</a>
<blockquote>
<p>
    Fix a small typo in README.txt<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
README.txt<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-26 15:34:44 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=526c580e272ee15c488b9fe4845482a30ce05eef">526c580e272ee15c488b9fe4845482a30ce05eef</a>
<blockquote>
<p>
    Bug 693064: raise maximum possible GS_CLIENT_COLOR_MAX_COMPONENTS to 32<br>
<br>
    By default we support a maximum of 14 components. Supposedly this can be<br>
    increased by raising GS_CLIENT_COLOR_MAX_COMPONENTS to a larger number<br>
    on startup, but this starts to cause problems in various places throughout<br>
    the code.<br>
<br>
    The first such place is in the bpc_to_depth function (found in gdevdevn<br>
    and various other places), where the calculation goes wrong for anything<br>
    above 31 components at 8 bpc. We fix that here.<br>
<br>
    This allows us to get to 32 components. To raise it above 32 presents<br>
    problems on most architectures as the code assumes elsewhere that we<br>
    can use a bitmask to represent which components are present.<br>
<br>
    We may be able to tweak the code to use a uint64_t instead, in which<br>
    case we can probably get to 64 components; is that high enough?<br>
<br>
gs/base/gdevdevn.c<br>
gs/base/gdevrinkj.c<br>
gs/base/gdevxcf.c<br>
gs/base/gxclist.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-24 11:11:52 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49fd8e8156bb5b751ff8a03e86ea61cb9c496a6b">49fd8e8156bb5b751ff8a03e86ea61cb9c496a6b</a>
<blockquote>
<p>
    Bug 693142: Fix shape of highlight annotation.<br>
<br>
    Draw rotated highlight annotation correctly. Fix a bug in calculation<br>
    of the centers of the small arcs at the ends of the highlighted area.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 23:57:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5eff06782ad8c9b09f132add0d5f8a7458e0c7b2">5eff06782ad8c9b09f132add0d5f8a7458e0c7b2</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in dcbd folder<br>
<br>
gs/jbig2dec/jbig2_page.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 23:00:47 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b93322df872c8ff026127ea54fe86d3d940f1866">b93322df872c8ff026127ea54fe86d3d940f1866</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 9557 folder<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 22:14:43 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed7a9680adc24f0063455196d817810ff623f32a">ed7a9680adc24f0063455196d817810ff623f32a</a>
<blockquote>
<p>
    Bug 693050 : Fix memory leak in 4faa folder<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-23 21:12:19 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b306b997740d3ad904d8dc6b82ee981b1db52bd2">b306b997740d3ad904d8dc6b82ee981b1db52bd2</a>
<blockquote>
<p>
    Bug 693050 : Fix error handling in 2908 folder<br>
<br>
gs/jbig2dec/jbig2_halftone.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-22 22:25:44 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8c497936e37bdf430b87fd65db3fa6070716fcdf">8c497936e37bdf430b87fd65db3fa6070716fcdf</a>
<blockquote>
<p>
    Bug 693050 : Fix memory leak in 146f folder<br>
<br>
gs/jbig2dec/jbig2_mmr.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-22 16:56:39 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b73adca0e4e3b9ad4a2e4fd5ba16f845362fa37b">b73adca0e4e3b9ad4a2e4fd5ba16f845362fa37b</a>
<blockquote>
<p>
    Bug 693050 : Fix minor typos and memory leak in 040d folder<br>
<br>
gs/jbig2dec/jbig2_arith.c<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-20 18:18:02 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc77e931b2a6118092bac21b4dd38bc10d41e644">dc77e931b2a6118092bac21b4dd38bc10d41e644</a>
<blockquote>
<p>
    Bug 690723 : Prevent over writing unallocated memory when parsing an image<br>
<br>
gs/jbig2dec/jbig2_mmr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-19 11:57:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9eb67bc021dda346896786e0d813245387649ce2">9eb67bc021dda346896786e0d813245387649ce2</a>
<blockquote>
<p>
    Fix a parallel build problem......<br>
<br>
    A couple of places that depend upon gconfig.h had their dependency listed as<br>
    being gconfxx.h (would be created dynamically by its own target) and would<br>
    then copy gconfxx.h to gconfig.h (I have no idea why this extra complication<br>
    is there, but.....).<br>
<br>
    With an unfortunate, but not uncommon confluence of two make instances, both<br>
    instances could end up trying to copy gconfxx.h to gconfig.h, thus causing<br>
    Unix &quot;cp&quot; (at least) to throw an error, and the build to fail.<br>
<br>
    Now gconfig.h has its own target (which depends on gconfxx.h), and that<br>
    target is where gconfxx.h is copied to gconfig.h, thus allowing make to<br>
    correctly track the creation of the file.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gs.mak<br>
gs/base/lib.mak<br>
gs/psi/int.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-18 16:51:30 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7f98970a6c0e641e87eb202dc2087814249d0408">7f98970a6c0e641e87eb202dc2087814249d0408</a>
<blockquote>
<p>
    Add 3:2 and 3:4 downscaling to tiffsep/psd/downscaler.<br>
<br>
    Currently the downscaler can only downscale in integer increments. To<br>
    accomodate a potential need to efficiently scale 1200 -&gt; 800 and<br>
    600 -&gt; 800 dpi, we introduce new functionality to allow 3:2 and 3:4<br>
    scaling modes.<br>
<br>
    We shoehorn these into the existing scaler system by using DownScaleFactor<br>
    settings of 32 and 34 respectively; any other DownScaleFactor &gt; 8 will<br>
    give a rangecheck error.<br>
<br>
    This has required some changes within the downscaler code itself, and<br>
    will require more changes in any device that wants to use these. Currently<br>
    the cores are only provided in the planar modes; hence tiffsep and psd are<br>
    the only devices that have been updated to work with this.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtifs.c<br>
gs/base/gdevtsep.c<br>
gs/base/gxdownscale.c<br>
gs/base/gxdownscale.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-18 13:42:07 +0200
</strong>
<br>Tor Andersson &lt;tor.andersson@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7cd694d6e98719b77095069007e472334e16dd0e">7cd694d6e98719b77095069007e472334e16dd0e</a>
<blockquote>
<p>
    Check for opacity 0.0 in xps transparency analysis.<br>
<br>
    Objects with opacity 0.0 are skipped by the parser, so we don't<br>
    have to install transparency device for them.<br>
<br>
xps/xpsanalyze.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-01 12:16:08 +0100
</strong>
<br>Tor Andersson &lt;tor@ccxvii.net&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=32c5d9122cf7ea813755d079f80445e6f2d842f4">32c5d9122cf7ea813755d079f80445e6f2d842f4</a>
<blockquote>
<p>
    Move the has_transparency flag into the xps context.<br>
<br>
    Patterns to set the uses_transparency flag. The current transparency scan<br>
    doesn't resolve resources that have been inherited from a higher level.<br>
    Doing this would require rewriting the entire transparency scanning and<br>
    involve a lot more parsing. Instead we reuse the results from the<br>
    original transparency scan we do at the beginning of the page.<br>
<br>
    Fix bug 692513.<br>
<br>
xps/ghostxps.h<br>
xps/xpspage.c<br>
xps/xpstile.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-18 10:01:46 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a33ed5b599d73509d0cde7e84e257e89ff1c1fb">0a33ed5b599d73509d0cde7e84e257e89ff1c1fb</a>
<blockquote>
<p>
    Fix comment delineation.<br>
<br>
    I accidentally used the wrong comment delineator when I updated the copyright.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/pdfinflt.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 19:22:52 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=64984bdf351dc27e40cbe5af5751dcdfcb448366">64984bdf351dc27e40cbe5af5751dcdfcb448366</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issues labelled DestAv<br>
<br>
gs/jbig2dec/jbig2.c<br>
gs/jbig2dec/jbig2_priv.h<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_symbol_dict.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 14:38:15 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=28a37f219de0bbd04bef9026812cbb9ea42a9910">28a37f219de0bbd04bef9026812cbb9ea42a9910</a>
<blockquote>
<p>
    Add a default shared lib extension.<br>
<br>
    Just a minor tweak so the dynamic library extension is set to *something*<br>
    even on unrecognised platforms.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 14:01:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7c9a1a772cef2339c110238b40c73e8039dca2eb">7c9a1a772cef2339c110238b40c73e8039dca2eb</a>
<blockquote>
<p>
    Revert some copyrights accidentally changed in the recent revamp<br>
<br>
    Three files which are copyright FSF.<br>
<br>
    Thanks to zeniko for spotting the mistake.<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/getopt.c<br>
gs/jbig2dec/getopt.h<br>
gs/jbig2dec/getopt1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 13:44:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cd2cb0829b3a8ffe0e8a3bd87c08941663d691f9">cd2cb0829b3a8ffe0e8a3bd87c08941663d691f9</a>
<blockquote>
<p>
    Bug 693113: configure set shared lib file extension<br>
<br>
    Have the configure set the file extension for the shared library. This is<br>
    purely to handle Apple's (pointless?) decision to make OS X use &quot;.dylib&quot; as<br>
    the shared library extension, rather than the &quot;.so&quot; used by every other<br>
    Unix-a-like.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/macos-mcp.mak<br>
gs/base/macosx.mak<br>
gs/base/unix-dll.mak<br>
gs/base/unix-gcc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-15 08:35:50 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=570984d2074289bb06261112d26bc323725c321e">570984d2074289bb06261112d26bc323725c321e</a>
<blockquote>
<p>
    Bug 693119: Tweak EOL detection after 'stream'<br>
<br>
    Modify EOL processing after 'stream' operator to accept a new class of<br>
    broken PDF files. GS now stops skipping spaces when it finds '\n' or a<br>
    non-space character.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-14 17:06:16 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8988c41bf227e5f370fba7592bfd18e85330b0c2">8988c41bf227e5f370fba7592bfd18e85330b0c2</a>
<blockquote>
<p>
    Bug 693050 : Fixes CERT reported issues labelled SourceAvNearNull<br>
<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-14 16:36:11 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=53cc9631a7725b0f6a20d815252c3a23b978d8ee">53cc9631a7725b0f6a20d815252c3a23b978d8ee</a>
<blockquote>
<p>
    Update pdf_info.ps to report the UserUnit for a page, if present.<br>
<br>
    This allows users to correctly calculate media and crop sizes from the<br>
    relevant 'Box' arrats.<br>
<br>
    Not cluster tested<br>
<br>
gs/toolbin/pdf_info.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 14:24:18 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d8fd89891d07d4b04cf180c3f5a4ac4388c769ce">d8fd89891d07d4b04cf180c3f5a4ac4388c769ce</a>
<blockquote>
<p>
    Fixes Bug 692991 - XL assembler and dissasembler now work with python 3.<br>
<br>
    Thanks to Hin-Tak Leung for these changes.<br>
<br>
tools/pxlasm.py<br>
tools/pxldis.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 13:29:35 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=76aad1b9e4eb2ae30d42b995a3ba8998b8e0820f">76aad1b9e4eb2ae30d42b995a3ba8998b8e0820f</a>
<blockquote>
<p>
    Bug 690585 - Use the defalt strip copy rop routine when the<br>
    destination is not included.<br>
<br>
    Thanks to Hin-Tak Leung for this fix.<br>
<br>
    CLUSTER UNTESTED<br>
<br>
gs/base/gdevpx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 18:40:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c87f2d826726f8b1108d233096fa6fd4a872b020">c87f2d826726f8b1108d233096fa6fd4a872b020</a>
<blockquote>
<p>
    Fix parameter passed to dict_find_string()<br>
<br>
    Parameter was a ref *, should have been a ref **.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zchar42.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 18:37:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e786619c57be0c846051ec264eb80b69a9ca42de">e786619c57be0c846051ec264eb80b69a9ca42de</a>
<blockquote>
<p>
    Bug 693116: disable lzma compression in libtiff<br>
<br>
    lzma is not part of base line tiff, but is enabled by default in libtiff, since<br>
    we only support base line, disable lzma.<br>
<br>
    No cluster differences.<br>
<br>
configure.ac<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 13:15:32 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=85be3180530043232160745b04af9d293bd60fad">85be3180530043232160745b04af9d293bd60fad</a>
<blockquote>
<p>
    Squash a warning in commit fae7be45<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/int.mak<br>
gs/psi/zchar42.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 11:14:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39433fce0a15c5cae831848edd4cefd55019a241">39433fce0a15c5cae831848edd4cefd55019a241</a>
<blockquote>
<p>
    Update copyright &quot;headers&quot;.<br>
<br>
    As agreed on IRC and via e-mail:<br>
<br>
    Reinstate the reference to the LICENSE file.<br>
<br>
    Remove copyright references to Aladdin Enterprises and artofcode (some<br>
    references remain in comments about historical copyright assignments, and<br>
    the like), in favour of Artifex copyright notices.<br>
<br>
    Update copyright dates.<br>
<br>
    Remove the $Id$ &quot;tag&quot;.<br>
<br>
    Since the move to git, the $Id$ &quot;tag&quot; comment in each file is redundant.<br>
<br>
    No cluster differences.<br>
<br>
Makefile<br>
autogen.sh<br>
common/cp.bat<br>
common/gccdefs.mak<br>
common/generic.mak<br>
common/msvc_top.mak<br>
common/msvcdefs.mak<br>
common/mv.bat<br>
common/pcdefs.mak<br>
common/rm.bat<br>
common/sgidefs.mak<br>
common/ugcc_top.mak<br>
common/unixdefs.mak<br>
config.mak.in<br>
configure.ac<br>
gs/Resource/CIDFont/ArtifexBullet<br>
gs/Resource/CMap/Identity-UTF16-H<br>
gs/Resource/ColorSpace/DefaultCMYK<br>
gs/Resource/ColorSpace/DefaultGray<br>
gs/Resource/ColorSpace/DefaultRGB<br>
gs/Resource/ColorSpace/TrivialCMYK<br>
gs/Resource/ColorSpace/sGray<br>
gs/Resource/ColorSpace/sRGB<br>
gs/Resource/Decoding/FCO_Dingbats<br>
gs/Resource/Decoding/FCO_Symbol<br>
gs/Resource/Decoding/FCO_Unicode<br>
gs/Resource/Decoding/FCO_Wingdings<br>
gs/Resource/Decoding/Latin1<br>
gs/Resource/Decoding/StandardEncoding<br>
gs/Resource/Decoding/Unicode<br>
gs/Resource/Encoding/Wingdings<br>
gs/Resource/Init/FCOfontmap-PCLPS2<br>
gs/Resource/Init/Fontmap.GS<br>
gs/Resource/Init/cidfmap<br>
gs/Resource/Init/gs_agl.ps<br>
gs/Resource/Init/gs_btokn.ps<br>
gs/Resource/Init/gs_cet.ps<br>
gs/Resource/Init/gs_cff.ps<br>
gs/Resource/Init/gs_cidcm.ps<br>
gs/Resource/Init/gs_ciddc.ps<br>
gs/Resource/Init/gs_cidfm.ps<br>
gs/Resource/Init/gs_cidfn.ps<br>
gs/Resource/Init/gs_cidtt.ps<br>
gs/Resource/Init/gs_cmap.ps<br>
gs/Resource/Init/gs_cspace.ps<br>
gs/Resource/Init/gs_css_e.ps<br>
gs/Resource/Init/gs_dbt_e.ps<br>
gs/Resource/Init/gs_diskf.ps<br>
gs/Resource/Init/gs_diskn.ps<br>
gs/Resource/Init/gs_dpnxt.ps<br>
gs/Resource/Init/gs_dps.ps<br>
gs/Resource/Init/gs_dps1.ps<br>
gs/Resource/Init/gs_dps2.ps<br>
gs/Resource/Init/gs_dscp.ps<br>
gs/Resource/Init/gs_epsf.ps<br>
gs/Resource/Init/gs_fapi.ps<br>
gs/Resource/Init/gs_fntem.ps<br>
gs/Resource/Init/gs_fonts.ps<br>
gs/Resource/Init/gs_frsd.ps<br>
gs/Resource/Init/gs_icc.ps<br>
gs/Resource/Init/gs_il1_e.ps<br>
gs/Resource/Init/gs_img.ps<br>
gs/Resource/Init/gs_init.ps<br>
gs/Resource/Init/gs_l2img.ps<br>
gs/Resource/Init/gs_lev2.ps<br>
gs/Resource/Init/gs_ll3.ps<br>
gs/Resource/Init/gs_mex_e.ps<br>
gs/Resource/Init/gs_mgl_e.ps<br>
gs/Resource/Init/gs_mro_e.ps<br>
gs/Resource/Init/gs_pdf_e.ps<br>
gs/Resource/Init/gs_pdfwr.ps<br>
gs/Resource/Init/gs_res.ps<br>
gs/Resource/Init/gs_resmp.ps<br>
gs/Resource/Init/gs_setpd.ps<br>
gs/Resource/Init/gs_statd.ps<br>
gs/Resource/Init/gs_std_e.ps<br>
gs/Resource/Init/gs_sym_e.ps<br>
gs/Resource/Init/gs_trap.ps<br>
gs/Resource/Init/gs_ttf.ps<br>
gs/Resource/Init/gs_typ32.ps<br>
gs/Resource/Init/gs_typ42.ps<br>
gs/Resource/Init/gs_type1.ps<br>
gs/Resource/Init/gs_wan_e.ps<br>
gs/Resource/Init/pdf_base.ps<br>
gs/Resource/Init/pdf_cslayer.ps<br>
gs/Resource/Init/pdf_draw.ps<br>
gs/Resource/Init/pdf_font.ps<br>
gs/Resource/Init/pdf_main.ps<br>
gs/Resource/Init/pdf_ops.ps<br>
gs/Resource/Init/pdf_rbld.ps<br>
gs/Resource/Init/pdf_sec.ps<br>
gs/Resource/Init/xlatmap<br>
gs/Resource/SubstCID/CNS1-WMode<br>
gs/Resource/SubstCID/GB1-WMode<br>
gs/Resource/SubstCID/Japan1-WMode<br>
gs/Resource/SubstCID/Korea1-WMode<br>
gs/arch/windows-x64-msvc.h<br>
gs/arch/windows-x86-msvc.h<br>
gs/autogen.sh<br>
gs/base/ConvertUTF.c<br>
gs/base/ConvertUTF.h<br>
gs/base/Makefile.in<br>
gs/base/aes.c<br>
gs/base/aes.h<br>
gs/base/all-arch.mak<br>
gs/base/assert_.h<br>
gs/base/bench.c<br>
gs/base/catmake<br>
gs/base/configure.ac<br>
gs/base/contrib.mak<br>
gs/base/cp.bat<br>
gs/base/cp.cmd<br>
gs/base/ctype_.h<br>
gs/base/devs.mak<br>
gs/base/dirent_.h<br>
gs/base/dos_.h<br>
gs/base/echogs.c<br>
gs/base/errno_.h<br>
gs/base/expat.mak<br>
gs/base/fcntl_.h<br>
gs/base/freetype.mak<br>
gs/base/gconf.c<br>
gs/base/gconf.h<br>
gs/base/gdbflags.h<br>
gs/base/gdebug.h<br>
gs/base/gdev3852.c<br>
gs/base/gdev3b1.c<br>
gs/base/gdev4081.c<br>
gs/base/gdev4693.c<br>
gs/base/gdev8510.c<br>
gs/base/gdev8bcm.c<br>
gs/base/gdev8bcm.h<br>
gs/base/gdevabuf.c<br>
gs/base/gdevadmp.c<br>
gs/base/gdevagl.c<br>
gs/base/gdevagl.h<br>
gs/base/gdevatx.c<br>
gs/base/gdevbbox.c<br>
gs/base/gdevbbox.h<br>
gs/base/gdevbit.c<br>
gs/base/gdevbj10.c<br>
gs/base/gdevbjc.h<br>
gs/base/gdevbjcl.c<br>
gs/base/gdevbjcl.h<br>
gs/base/gdevbmp.c<br>
gs/base/gdevbmp.h<br>
gs/base/gdevbmpa.c<br>
gs/base/gdevbmpc.c<br>
gs/base/gdevccr.c<br>
gs/base/gdevcdj.c<br>
gs/base/gdevcfax.c<br>
gs/base/gdevcif.c<br>
gs/base/gdevclj.c<br>
gs/base/gdevcljc.c<br>
gs/base/gdevcp50.c<br>
gs/base/gdevcslw.c<br>
gs/base/gdevdbit.c<br>
gs/base/gdevdcrd.c<br>
gs/base/gdevdcrd.h<br>
gs/base/gdevddrw.c<br>
gs/base/gdevddrw.h<br>
gs/base/gdevdevn.c<br>
gs/base/gdevdevn.h<br>
gs/base/gdevdfax.c<br>
gs/base/gdevdflt.c<br>
gs/base/gdevdgbr.c<br>
gs/base/gdevdjet.c<br>
gs/base/gdevdjtc.c<br>
gs/base/gdevdljm.c<br>
gs/base/gdevdljm.h<br>
gs/base/gdevdm24.c<br>
gs/base/gdevdrop.c<br>
gs/base/gdevdsha.c<br>
gs/base/gdevdsp.c<br>
gs/base/gdevdsp.h<br>
gs/base/gdevdsp2.h<br>
gs/base/gdevemap.c<br>
gs/base/gdevepsc.c<br>
gs/base/gdevepsn.c<br>
gs/base/gdevescp.c<br>
gs/base/gdevevga.c<br>
gs/base/gdevfax.c<br>
gs/base/gdevfax.h<br>
gs/base/gdevherc.c<br>
gs/base/gdevhit.c<br>
gs/base/gdevhl7x.c<br>
gs/base/gdevicov.c<br>
gs/base/gdevifno.c<br>
gs/base/gdevijs.c<br>
gs/base/gdevimgn.c<br>
gs/base/gdevjbig2.c<br>
gs/base/gdevjpeg.c<br>
gs/base/gdevjpx.c<br>
gs/base/gdevl256.c<br>
gs/base/gdevl31s.c<br>
gs/base/gdevlbp8.c<br>
gs/base/gdevlj56.c<br>
gs/base/gdevlp8k.c<br>
gs/base/gdevlxm.c<br>
gs/base/gdevm1.c<br>
gs/base/gdevm16.c<br>
gs/base/gdevm2.c<br>
gs/base/gdevm24.c<br>
gs/base/gdevm32.c<br>
gs/base/gdevm4.c<br>
gs/base/gdevm40.c<br>
gs/base/gdevm48.c<br>
gs/base/gdevm56.c<br>
gs/base/gdevm64.c<br>
gs/base/gdevm8.c<br>
gs/base/gdevmac.c<br>
gs/base/gdevmac.h<br>
gs/base/gdevmacpictop.h<br>
gs/base/gdevmacttf.h<br>
gs/base/gdevmeds.c<br>
gs/base/gdevmeds.h<br>
gs/base/gdevmem.c<br>
gs/base/gdevmem.h<br>
gs/base/gdevmgr.c<br>
gs/base/gdevmgr.h<br>
gs/base/gdevmiff.c<br>
gs/base/gdevmpla.c<br>
gs/base/gdevmpla.h<br>
gs/base/gdevmr1.c<br>
gs/base/gdevmr2n.c<br>
gs/base/gdevmr8n.c<br>
gs/base/gdevmrop.h<br>
gs/base/gdevmrun.c<br>
gs/base/gdevmrun.h<br>
gs/base/gdevmswn.c<br>
gs/base/gdevmswn.h<br>
gs/base/gdevmsxf.c<br>
gs/base/gdevmx.c<br>
gs/base/gdevn533.c<br>
gs/base/gdevnfwd.c<br>
gs/base/gdevo182.c<br>
gs/base/gdevokii.c<br>
gs/base/gdevos2p.c<br>
gs/base/gdevp14.c<br>
gs/base/gdevp14.h<br>
gs/base/gdevp2up.c<br>
gs/base/gdevpbm.c<br>
gs/base/gdevpccm.c<br>
gs/base/gdevpccm.h<br>
gs/base/gdevpcfb.c<br>
gs/base/gdevpcfb.h<br>
gs/base/gdevpcl.c<br>
gs/base/gdevpcl.h<br>
gs/base/gdevpcx.c<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfb.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfc.h<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevpdfe.c<br>
gs/base/gdevpdfg.c<br>
gs/base/gdevpdfg.h<br>
gs/base/gdevpdfi.c<br>
gs/base/gdevpdfj.c<br>
gs/base/gdevpdfk.c<br>
gs/base/gdevpdfm.c<br>
gs/base/gdevpdfo.c<br>
gs/base/gdevpdfo.h<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfr.c<br>
gs/base/gdevpdft.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfv.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdt.c<br>
gs/base/gdevpdt.h<br>
gs/base/gdevpdtb.c<br>
gs/base/gdevpdtb.h<br>
gs/base/gdevpdtc.c<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdtd.h<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtf.c<br>
gs/base/gdevpdtf.h<br>
gs/base/gdevpdti.c<br>
gs/base/gdevpdti.h<br>
gs/base/gdevpdts.c<br>
gs/base/gdevpdts.h<br>
gs/base/gdevpdtt.c<br>
gs/base/gdevpdtt.h<br>
gs/base/gdevpdtv.c<br>
gs/base/gdevpdtv.h<br>
gs/base/gdevpdtw.c<br>
gs/base/gdevpdtw.h<br>
gs/base/gdevpdtx.h<br>
gs/base/gdevpe.c<br>
gs/base/gdevperm.c<br>
gs/base/gdevphex.c<br>
gs/base/gdevpipe.c<br>
gs/base/gdevpjet.c<br>
gs/base/gdevplan.c<br>
gs/base/gdevplib.c<br>
gs/base/gdevplib.h<br>
gs/base/gdevplnx.c<br>
gs/base/gdevplnx.h<br>
gs/base/gdevpm.h<br>
gs/base/gdevpng.c<br>
gs/base/gdevppla.c<br>
gs/base/gdevppla.h<br>
gs/base/gdevprn.c<br>
gs/base/gdevprn.h<br>
gs/base/gdevprna.c<br>
gs/base/gdevprna.h<br>
gs/base/gdevps.c<br>
gs/base/gdevpsd.c<br>
gs/base/gdevpsdf.h<br>
gs/base/gdevpsdi.c<br>
gs/base/gdevpsdp.c<br>
gs/base/gdevpsds.c<br>
gs/base/gdevpsds.h<br>
gs/base/gdevpsdu.c<br>
gs/base/gdevpsf.h<br>
gs/base/gdevpsf1.c<br>
gs/base/gdevpsf2.c<br>
gs/base/gdevpsfm.c<br>
gs/base/gdevpsft.c<br>
gs/base/gdevpsfu.c<br>
gs/base/gdevpsfx.c<br>
gs/base/gdevpsim.c<br>
gs/base/gdevpsu.c<br>
gs/base/gdevpsu.h<br>
gs/base/gdevpx.c<br>
gs/base/gdevpxat.h<br>
gs/base/gdevpxen.h<br>
gs/base/gdevpxop.h<br>
gs/base/gdevpxut.c<br>
gs/base/gdevpxut.h<br>
gs/base/gdevrinkj.c<br>
gs/base/gdevrops.c<br>
gs/base/gdevs3ga.c<br>
gs/base/gdevsco.c<br>
gs/base/gdevsgi.c<br>
gs/base/gdevsgi.h<br>
gs/base/gdevsj48.c<br>
gs/base/gdevsnfb.c<br>
gs/base/gdevsppr.c<br>
gs/base/gdevstc.c<br>
gs/base/gdevstc.h<br>
gs/base/gdevstc1.c<br>
gs/base/gdevstc2.c<br>
gs/base/gdevstc3.c<br>
gs/base/gdevstc4.c<br>
gs/base/gdevsun.c<br>
gs/base/gdevsunr.c<br>
gs/base/gdevsvg.c<br>
gs/base/gdevsvga.c<br>
gs/base/gdevsvga.h<br>
gs/base/gdevtfax.c<br>
gs/base/gdevtfax.h<br>
gs/base/gdevtfnx.c<br>
gs/base/gdevtifs.c<br>
gs/base/gdevtifs.h<br>
gs/base/gdevtknk.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevtsep.c<br>
gs/base/gdevtxtw.c<br>
gs/base/gdevupd.c<br>
gs/base/gdevvec.c<br>
gs/base/gdevvec.h<br>
gs/base/gdevvglb.c<br>
gs/base/gdevwddb.c<br>
gs/base/gdevwdib.c<br>
gs/base/gdevwpr2.c<br>
gs/base/gdevwprn.c<br>
gs/base/gdevx.c<br>
gs/base/gdevx.h<br>
gs/base/gdevxalt.c<br>
gs/base/gdevxcf.c<br>
gs/base/gdevxcmp.c<br>
gs/base/gdevxcmp.h<br>
gs/base/gdevxini.c<br>
gs/base/gdevxres.c<br>
gs/base/genarch.c<br>
gs/base/genconf.c<br>
gs/base/gendev.c<br>
gs/base/genht.c<br>
gs/base/gp.h<br>
gs/base/gp_dosfe.c<br>
gs/base/gp_dosfs.c<br>
gs/base/gp_dvx.c<br>
gs/base/gp_getnv.c<br>
gs/base/gp_mac.c<br>
gs/base/gp_mac.h<br>
gs/base/gp_macio.c<br>
gs/base/gp_macpoll.c<br>
gs/base/gp_mktmp.c<br>
gs/base/gp_msdll.c<br>
gs/base/gp_msdos.c<br>
gs/base/gp_mshdl.c<br>
gs/base/gp_mslib.c<br>
gs/base/gp_mspol.c<br>
gs/base/gp_msprn.c<br>
gs/base/gp_mswin.c<br>
gs/base/gp_mswin.h<br>
gs/base/gp_nsync.c<br>
gs/base/gp_ntfs.c<br>
gs/base/gp_os2.c<br>
gs/base/gp_os2.h<br>
gs/base/gp_os2fs.c<br>
gs/base/gp_os2pr.c<br>
gs/base/gp_os9.c<br>
gs/base/gp_paper.c<br>
gs/base/gp_psync.c<br>
gs/base/gp_stdia.c<br>
gs/base/gp_stdin.c<br>
gs/base/gp_strdl.c<br>
gs/base/gp_sysv.c<br>
gs/base/gp_unifn.c<br>
gs/base/gp_unifs.c<br>
gs/base/gp_unix.c<br>
gs/base/gp_unix_cache.c<br>
gs/base/gp_upapr.c<br>
gs/base/gp_vms.c<br>
gs/base/gp_wgetv.c<br>
gs/base/gp_win32.c<br>
gs/base/gp_wpapr.c<br>
gs/base/gp_wsync.c<br>
gs/base/gp_wutf8.c<br>
gs/base/gpcheck.h<br>
gs/base/gpgetenv.h<br>
gs/base/gpmisc.c<br>
gs/base/gpmisc.h<br>
gs/base/gpsync.h<br>
gs/base/gs.mak<br>
gs/base/gs_dll_call.h<br>
gs/base/gs_mgl_e.h<br>
gs/base/gs_mro_e.h<br>
gs/base/gsalloc.c<br>
gs/base/gsalloc.h<br>
gs/base/gsalpha.c<br>
gs/base/gsalpha.h<br>
gs/base/gsalphac.c<br>
gs/base/gsalphac.h<br>
gs/base/gsargs.c<br>
gs/base/gsargs.h<br>
gs/base/gsbitcom.c<br>
gs/base/gsbitmap.h<br>
gs/base/gsbitops.c<br>
gs/base/gsbitops.h<br>
gs/base/gsbittab.c<br>
gs/base/gsbittab.h<br>
gs/base/gsccode.h<br>
gs/base/gsccolor.h<br>
gs/base/gscdef.c<br>
gs/base/gscdefs.h<br>
gs/base/gscdevn.c<br>
gs/base/gscdevn.h<br>
gs/base/gscedata.c<br>
gs/base/gscedata.h<br>
gs/base/gscencs.c<br>
gs/base/gscencs.h<br>
gs/base/gschar.c<br>
gs/base/gschar.h<br>
gs/base/gschar0.c<br>
gs/base/gscicach.c<br>
gs/base/gscicach.h<br>
gs/base/gscie.c<br>
gs/base/gscie.h<br>
gs/base/gsciemap.c<br>
gs/base/gscindex.h<br>
gs/base/gsclipsr.c<br>
gs/base/gsclipsr.h<br>
gs/base/gscms.h<br>
gs/base/gscolor.c<br>
gs/base/gscolor.h<br>
gs/base/gscolor1.c<br>
gs/base/gscolor1.h<br>
gs/base/gscolor2.c<br>
gs/base/gscolor2.h<br>
gs/base/gscolor3.c<br>
gs/base/gscolor3.h<br>
gs/base/gscolorbuffer.c<br>
gs/base/gscolorbuffer.h<br>
gs/base/gscompt.h<br>
gs/base/gscoord.c<br>
gs/base/gscoord.h<br>
gs/base/gscparam.c<br>
gs/base/gscpixel.c<br>
gs/base/gscpixel.h<br>
gs/base/gscpm.h<br>
gs/base/gscrd.c<br>
gs/base/gscrd.h<br>
gs/base/gscrdp.c<br>
gs/base/gscrdp.h<br>
gs/base/gscrypt1.c<br>
gs/base/gscrypt1.h<br>
gs/base/gscscie.c<br>
gs/base/gscsel.h<br>
gs/base/gscsepr.c<br>
gs/base/gscsepr.h<br>
gs/base/gscspace.c<br>
gs/base/gscspace.h<br>
gs/base/gscssub.c<br>
gs/base/gscssub.h<br>
gs/base/gsdcolor.h<br>
gs/base/gsdevice.c<br>
gs/base/gsdevice.h<br>
gs/base/gsdevmem.c<br>
gs/base/gsdfilt.c<br>
gs/base/gsdfilt.h<br>
gs/base/gsdll.h<br>
gs/base/gsdllwin.h<br>
gs/base/gsdparam.c<br>
gs/base/gsdpnext.h<br>
gs/base/gsdps.c<br>
gs/base/gsdps.h<br>
gs/base/gsdps1.c<br>
gs/base/gsdsrc.c<br>
gs/base/gsdsrc.h<br>
gs/base/gsequivc.c<br>
gs/base/gsequivc.h<br>
gs/base/gserrors.h<br>
gs/base/gsexit.h<br>
gs/base/gsfcid.c<br>
gs/base/gsfcid2.c<br>
gs/base/gsfcmap.c<br>
gs/base/gsfcmap.h<br>
gs/base/gsfcmap1.c<br>
gs/base/gsflip.c<br>
gs/base/gsflip.h<br>
gs/base/gsfname.c<br>
gs/base/gsfname.h<br>
gs/base/gsfont.c<br>
gs/base/gsfont.h<br>
gs/base/gsfont0.c<br>
gs/base/gsfont0c.c<br>
gs/base/gsfunc.c<br>
gs/base/gsfunc.h<br>
gs/base/gsfunc0.c<br>
gs/base/gsfunc0.h<br>
gs/base/gsfunc3.c<br>
gs/base/gsfunc3.h<br>
gs/base/gsfunc4.c<br>
gs/base/gsfunc4.h<br>
gs/base/gsgc.h<br>
gs/base/gsgcache.c<br>
gs/base/gsgcache.h<br>
gs/base/gsgdata.c<br>
gs/base/gsgdata.h<br>
gs/base/gshsb.c<br>
gs/base/gshsb.h<br>
gs/base/gsht.c<br>
gs/base/gsht.h<br>
gs/base/gsht1.c<br>
gs/base/gsht1.h<br>
gs/base/gshtscr.c<br>
gs/base/gshtx.c<br>
gs/base/gshtx.h<br>
gs/base/gsicc.c<br>
gs/base/gsicc.h<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_cache.h<br>
gs/base/gsicc_cms.h<br>
gs/base/gsicc_create.c<br>
gs/base/gsicc_create.h<br>
gs/base/gsicc_lcms.c<br>
gs/base/gsicc_lcms2.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gsicc_nocm.c<br>
gs/base/gsicc_profilecache.c<br>
gs/base/gsicc_profilecache.h<br>
gs/base/gsimage.c<br>
gs/base/gsimage.h<br>
gs/base/gsimpath.c<br>
gs/base/gsinit.c<br>
gs/base/gsio.h<br>
gs/base/gsiodev.c<br>
gs/base/gsiodevs.c<br>
gs/base/gsiodisk.c<br>
gs/base/gsiomacres.c<br>
gs/base/gsiorom.c<br>
gs/base/gsiorom.h<br>
gs/base/gsipar3x.h<br>
gs/base/gsiparam.h<br>
gs/base/gsiparm2.h<br>
gs/base/gsiparm3.h<br>
gs/base/gsiparm4.h<br>
gs/base/gsistate.c<br>
gs/base/gsjconf.h<br>
gs/base/gsjmorec.h<br>
gs/base/gslib.c<br>
gs/base/gslib.h<br>
gs/base/gslibctx.c<br>
gs/base/gslibctx.h<br>
gs/base/gsline.c<br>
gs/base/gsline.h<br>
gs/base/gslparam.h<br>
gs/base/gsmalloc.c<br>
gs/base/gsmalloc.h<br>
gs/base/gsmatrix.c<br>
gs/base/gsmatrix.h<br>
gs/base/gsmchunk.c<br>
gs/base/gsmchunk.h<br>
gs/base/gsmdebug.h<br>
gs/base/gsmemlok.c<br>
gs/base/gsmemlok.h<br>
gs/base/gsmemory.c<br>
gs/base/gsmemory.h<br>
gs/base/gsmemraw.h<br>
gs/base/gsmemret.c<br>
gs/base/gsmemret.h<br>
gs/base/gsmisc.c<br>
gs/base/gsnamecl.c<br>
gs/base/gsnamecl.h<br>
gs/base/gsncdummy.c<br>
gs/base/gsncdummy.h<br>
gs/base/gsnogc.c<br>
gs/base/gsnogc.h<br>
gs/base/gsnotify.c<br>
gs/base/gsnotify.h<br>
gs/base/gsovrc.c<br>
gs/base/gsovrc.h<br>
gs/base/gspaint.c<br>
gs/base/gspaint.h<br>
gs/base/gsparam.c<br>
gs/base/gsparam.h<br>
gs/base/gsparam2.c<br>
gs/base/gsparams.c<br>
gs/base/gsparams.h<br>
gs/base/gsparamx.c<br>
gs/base/gsparamx.h<br>
gs/base/gspath.c<br>
gs/base/gspath.h<br>
gs/base/gspath1.c<br>
gs/base/gspath2.h<br>
gs/base/gspcolor.c<br>
gs/base/gspcolor.h<br>
gs/base/gspenum.h<br>
gs/base/gspmdrv.c<br>
gs/base/gspmdrv.h<br>
gs/base/gspmdrv.rc<br>
gs/base/gsptype1.c<br>
gs/base/gsptype1.h<br>
gs/base/gsptype2.c<br>
gs/base/gsptype2.h<br>
gs/base/gsrect.h<br>
gs/base/gsrefct.h<br>
gs/base/gsromfs0.c<br>
gs/base/gsrop.c<br>
gs/base/gsrop.h<br>
gs/base/gsroprun.c<br>
gs/base/gsroprun1.h<br>
gs/base/gsroprun24.h<br>
gs/base/gsroprun8.h<br>
gs/base/gsropt.h<br>
gs/base/gsroptab.c<br>
gs/base/gsserial.c<br>
gs/base/gsserial.h<br>
gs/base/gsshade.c<br>
gs/base/gsshade.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gsstruct.h<br>
gs/base/gsstype.h<br>
gs/base/gstext.c<br>
gs/base/gstext.h<br>
gs/base/gstparam.h<br>
gs/base/gstrans.c<br>
gs/base/gstrans.h<br>
gs/base/gstrap.c<br>
gs/base/gstrap.h<br>
gs/base/gstype1.c<br>
gs/base/gstype1.h<br>
gs/base/gstype2.c<br>
gs/base/gstype42.c<br>
gs/base/gstypes.h<br>
gs/base/gsuid.h<br>
gs/base/gsutil.c<br>
gs/base/gsutil.h<br>
gs/base/gswin.rc<br>
gs/base/gsxfont.h<br>
gs/base/gx.h<br>
gs/base/gxacpath.c<br>
gs/base/gxalloc.h<br>
gs/base/gxalpha.h<br>
gs/base/gxarith.h<br>
gs/base/gxband.h<br>
gs/base/gxbcache.c<br>
gs/base/gxbcache.h<br>
gs/base/gxbitfmt.h<br>
gs/base/gxbitmap.h<br>
gs/base/gxbitops.h<br>
gs/base/gxblend.c<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
gs/base/gxccache.c<br>
gs/base/gxccman.c<br>
gs/base/gxcdevn.h<br>
gs/base/gxchar.c<br>
gs/base/gxchar.h<br>
gs/base/gxchrout.c<br>
gs/base/gxchrout.h<br>
gs/base/gxcht.c<br>
gs/base/gxcid.h<br>
gs/base/gxcie.h<br>
gs/base/gxcindex.h<br>
gs/base/gxclbits.c<br>
gs/base/gxcldev.h<br>
gs/base/gxclfile.c<br>
gs/base/gxclimag.c<br>
gs/base/gxclio.h<br>
gs/base/gxclip.c<br>
gs/base/gxclip.h<br>
gs/base/gxclip2.c<br>
gs/base/gxclip2.h<br>
gs/base/gxclipm.c<br>
gs/base/gxclipm.h<br>
gs/base/gxclipsr.h<br>
gs/base/gxclist.c<br>
gs/base/gxclist.h<br>
gs/base/gxcllzw.c<br>
gs/base/gxclmem.c<br>
gs/base/gxclmem.h<br>
gs/base/gxclpage.c<br>
gs/base/gxclpage.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxclread.c<br>
gs/base/gxclrect.c<br>
gs/base/gxclthrd.c<br>
gs/base/gxclthrd.h<br>
gs/base/gxclutil.c<br>
gs/base/gxclzlib.c<br>
gs/base/gxcmap.c<br>
gs/base/gxcmap.h<br>
gs/base/gxcolor2.h<br>
gs/base/gxcomp.h<br>
gs/base/gxcoord.h<br>
gs/base/gxcpath.c<br>
gs/base/gxcpath.h<br>
gs/base/gxcspace.h<br>
gs/base/gxctable.c<br>
gs/base/gxctable.h<br>
gs/base/gxcvalue.h<br>
gs/base/gxdcconv.c<br>
gs/base/gxdcconv.h<br>
gs/base/gxdcolor.c<br>
gs/base/gxdcolor.h<br>
gs/base/gxdda.h<br>
gs/base/gxdevbuf.h<br>
gs/base/gxdevcli.h<br>
gs/base/gxdevice.h<br>
gs/base/gxdevmem.h<br>
gs/base/gxdevndi.c<br>
gs/base/gxdevndi.h<br>
gs/base/gxdevrop.h<br>
gs/base/gxdevsop.h<br>
gs/base/gxdht.h<br>
gs/base/gxdhtres.h<br>
gs/base/gxdhtserial.c<br>
gs/base/gxdhtserial.h<br>
gs/base/gxdither.h<br>
gs/base/gxdownscale.c<br>
gs/base/gxdownscale.h<br>
gs/base/gxdtfill.h<br>
gs/base/gxfapiu.c<br>
gs/base/gxfapiu.h<br>
gs/base/gxfarith.h<br>
gs/base/gxfcache.h<br>
gs/base/gxfcid.h<br>
gs/base/gxfcmap.h<br>
gs/base/gxfcmap1.h<br>
gs/base/gxfcopy.c<br>
gs/base/gxfcopy.h<br>
gs/base/gxfdrop.c<br>
gs/base/gxfdrop.h<br>
gs/base/gxfill.c<br>
gs/base/gxfill.h<br>
gs/base/gxfillsl.h<br>
gs/base/gxfilltr.h<br>
gs/base/gxfillts.h<br>
gs/base/gxfixed.h<br>
gs/base/gxfmap.h<br>
gs/base/gxfont.h<br>
gs/base/gxfont0.h<br>
gs/base/gxfont0c.h<br>
gs/base/gxfont1.h<br>
gs/base/gxfont42.h<br>
gs/base/gxfrac.h<br>
gs/base/gxftype.h<br>
gs/base/gxfunc.h<br>
gs/base/gxgetbit.h<br>
gs/base/gxhintn.c<br>
gs/base/gxhintn.h<br>
gs/base/gxhintn1.c<br>
gs/base/gxhldevc.c<br>
gs/base/gxhldevc.h<br>
gs/base/gxht.c<br>
gs/base/gxht.h<br>
gs/base/gxht_thresh.c<br>
gs/base/gxht_thresh.h<br>
gs/base/gxhtbit.c<br>
gs/base/gxhttile.h<br>
gs/base/gxhttype.h<br>
gs/base/gxi12bit.c<br>
gs/base/gxi16bit.c<br>
gs/base/gxiclass.h<br>
gs/base/gxicolor.c<br>
gs/base/gxidata.c<br>
gs/base/gxifast.c<br>
gs/base/gximag3x.c<br>
gs/base/gximag3x.h<br>
gs/base/gximage.c<br>
gs/base/gximage.h<br>
gs/base/gximage1.c<br>
gs/base/gximage2.c<br>
gs/base/gximage3.c<br>
gs/base/gximage3.h<br>
gs/base/gximage4.c<br>
gs/base/gximask.c<br>
gs/base/gximask.h<br>
gs/base/gximono.c<br>
gs/base/gxino12b.c<br>
gs/base/gxino16b.c<br>
gs/base/gxiodev.h<br>
gs/base/gxiparam.h<br>
gs/base/gxipixel.c<br>
gs/base/gxiscale.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxlum.h<br>
gs/base/gxmatrix.h<br>
gs/base/gxmclip.c<br>
gs/base/gxmclip.h<br>
gs/base/gxobj.h<br>
gs/base/gxoprect.c<br>
gs/base/gxoprect.h<br>
gs/base/gxp1fill.c<br>
gs/base/gxp1impl.h<br>
gs/base/gxpageq.c<br>
gs/base/gxpageq.h<br>
gs/base/gxpaint.c<br>
gs/base/gxpaint.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcache.h<br>
gs/base/gxpcmap.c<br>
gs/base/gxpcolor.h<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxpflat.c<br>
gs/base/gxrplane.h<br>
gs/base/gxsample.c<br>
gs/base/gxsample.h<br>
gs/base/gxsamplp.h<br>
gs/base/gxshade.c<br>
gs/base/gxshade.h<br>
gs/base/gxshade1.c<br>
gs/base/gxshade4.c<br>
gs/base/gxshade4.h<br>
gs/base/gxshade6.c<br>
gs/base/gxstate.h<br>
gs/base/gxstdio.h<br>
gs/base/gxstroke.c<br>
gs/base/gxsync.c<br>
gs/base/gxsync.h<br>
gs/base/gxtext.h<br>
gs/base/gxtmap.h<br>
gs/base/gxttf.h<br>
gs/base/gxttfb.c<br>
gs/base/gxttfb.h<br>
gs/base/gxtype1.c<br>
gs/base/gxtype1.h<br>
gs/base/gxxfont.h<br>
gs/base/gzacpath.h<br>
gs/base/gzcpath.h<br>
gs/base/gzht.h<br>
gs/base/gzline.h<br>
gs/base/gzpath.h<br>
gs/base/gzspotan.c<br>
gs/base/gzspotan.h<br>
gs/base/gzstate.h<br>
gs/base/icclib.mak<br>
gs/base/ijs.mak<br>
gs/base/instcopy<br>
gs/base/jasper.mak<br>
gs/base/jbig2.mak<br>
gs/base/jerror_.h<br>
gs/base/jpeg.mak<br>
gs/base/jpegxr.mak<br>
gs/base/lcms.mak<br>
gs/base/lcms2.mak<br>
gs/base/lcups.mak<br>
gs/base/lcupsi.mak<br>
gs/base/ldf_jb2.mak<br>
gs/base/lib.mak<br>
gs/base/locale_.h<br>
gs/base/lwf_jp2.mak<br>
gs/base/macgenmcpxml.sh<br>
gs/base/macos-fw.mak<br>
gs/base/macos-mcp.mak<br>
gs/base/macos_carbon_d_pre.h<br>
gs/base/macos_carbon_pre.h<br>
gs/base/macos_classic_d_pre.h<br>
gs/base/macosx.mak<br>
gs/base/macsystypes.h<br>
gs/base/malloc_.h<br>
gs/base/math_.h<br>
gs/base/md5.c<br>
gs/base/md5.h<br>
gs/base/md5main.c<br>
gs/base/memento.c<br>
gs/base/memento.h<br>
gs/base/memory_.h<br>
gs/base/minftrsz.c<br>
gs/base/minftrsz.h<br>
gs/base/mkromfs.c<br>
gs/base/msvccmd.mak<br>
gs/base/msvclib.mak<br>
gs/base/msvctail.mak<br>
gs/base/mv.bat<br>
gs/base/mv.cmd<br>
gs/base/opdfread.h<br>
gs/base/openjpeg.mak<br>
gs/base/openvms.mak<br>
gs/base/openvms.mmk<br>
gs/base/pcwin.mak<br>
gs/base/pipe_.h<br>
gs/base/png.mak<br>
gs/base/png_.h<br>
gs/base/rinkj/evenbetter-rll.c<br>
gs/base/rinkj/evenbetter-rll.h<br>
gs/base/rinkj/rinkj-byte-stream.c<br>
gs/base/rinkj/rinkj-byte-stream.h<br>
gs/base/rinkj/rinkj-config.c<br>
gs/base/rinkj/rinkj-config.h<br>
gs/base/rinkj/rinkj-device.c<br>
gs/base/rinkj/rinkj-device.h<br>
gs/base/rinkj/rinkj-dither.c<br>
gs/base/rinkj/rinkj-dither.h<br>
gs/base/rinkj/rinkj-epson870.c<br>
gs/base/rinkj/rinkj-epson870.h<br>
gs/base/rinkj/rinkj-screen-eb.c<br>
gs/base/rinkj/rinkj-screen-eb.h<br>
gs/base/rm.bat<br>
gs/base/rm.cmd<br>
gs/base/sa85d.c<br>
gs/base/sa85d.h<br>
gs/base/sa85x.h<br>
gs/base/saes.c<br>
gs/base/saes.h<br>
gs/base/sarc4.c<br>
gs/base/sarc4.h<br>
gs/base/sbcp.c<br>
gs/base/sbcp.h<br>
gs/base/sbhc.c<br>
gs/base/sbhc.h<br>
gs/base/sbtx.h<br>
gs/base/sbwbs.c<br>
gs/base/sbwbs.h<br>
gs/base/scanchar.h<br>
gs/base/scantab.c<br>
gs/base/scf.h<br>
gs/base/scfd.c<br>
gs/base/scfdgen.c<br>
gs/base/scfdtab.c<br>
gs/base/scfe.c<br>
gs/base/scfetab.c<br>
gs/base/scfparam.c<br>
gs/base/scfx.h<br>
gs/base/scommon.h<br>
gs/base/sdcparam.c<br>
gs/base/sdcparam.h<br>
gs/base/sdct.h<br>
gs/base/sdctc.c<br>
gs/base/sdctd.c<br>
gs/base/sdcte.c<br>
gs/base/sddparam.c<br>
gs/base/sdeparam.c<br>
gs/base/seexec.c<br>
gs/base/setjmp_.h<br>
gs/base/sfilter.h<br>
gs/base/sfilter2.c<br>
gs/base/sfxboth.c<br>
gs/base/sfxcommon.c<br>
gs/base/sfxfd.c<br>
gs/base/sfxstdio.c<br>
gs/base/shc.c<br>
gs/base/shc.h<br>
gs/base/shcgen.c<br>
gs/base/shcgen.h<br>
gs/base/sidscale.c<br>
gs/base/sidscale.h<br>
gs/base/siinterp.c<br>
gs/base/siinterp.h<br>
gs/base/simscale.c<br>
gs/base/simscale.h<br>
gs/base/siscale.c<br>
gs/base/siscale.h<br>
gs/base/sisparam.h<br>
gs/base/sjbig2.c<br>
gs/base/sjbig2.h<br>
gs/base/sjbig2_luratech.c<br>
gs/base/sjbig2_luratech.h<br>
gs/base/sjpeg.h<br>
gs/base/sjpegc.c<br>
gs/base/sjpegd.c<br>
gs/base/sjpege.c<br>
gs/base/sjpx.c<br>
gs/base/sjpx.h<br>
gs/base/sjpx_luratech.c<br>
gs/base/sjpx_luratech.h<br>
gs/base/sjpx_openjpeg.c<br>
gs/base/sjpx_openjpeg.h<br>
gs/base/slzwc.c<br>
gs/base/slzwd.c<br>
gs/base/slzwe.c<br>
gs/base/slzwx.h<br>
gs/base/smd5.c<br>
gs/base/smd5.h<br>
gs/base/smtf.c<br>
gs/base/smtf.h<br>
gs/base/spdiff.c<br>
gs/base/spdiffx.h<br>
gs/base/spngp.c<br>
gs/base/spngpx.h<br>
gs/base/spprint.c<br>
gs/base/spprint.h<br>
gs/base/spsdf.c<br>
gs/base/spsdf.h<br>
gs/base/srdline.h<br>
gs/base/srld.c<br>
gs/base/srle.c<br>
gs/base/srlx.h<br>
gs/base/ssha2.c<br>
gs/base/ssha2.h<br>
gs/base/sstring.c<br>
gs/base/sstring.h<br>
gs/base/stat_.h<br>
gs/base/std.h<br>
gs/base/stdint_.h<br>
gs/base/stdio_.h<br>
gs/base/stdpn.h<br>
gs/base/stdpre.h<br>
gs/base/stream.c<br>
gs/base/stream.h<br>
gs/base/strimpl.h<br>
gs/base/string_.h<br>
gs/base/strmio.c<br>
gs/base/strmio.h<br>
gs/base/szlibc.c<br>
gs/base/szlibd.c<br>
gs/base/szlibe.c<br>
gs/base/szlibx.h<br>
gs/base/szlibxx.h<br>
gs/base/tiff.mak<br>
gs/base/time_.h<br>
gs/base/ttcalc.c<br>
gs/base/ttcalc.h<br>
gs/base/ttcommon.h<br>
gs/base/ttconf.h<br>
gs/base/ttconfig.h<br>
gs/base/ttfinp.c<br>
gs/base/ttfinp.h<br>
gs/base/ttfmain.c<br>
gs/base/ttfmemd.c<br>
gs/base/ttfmemd.h<br>
gs/base/ttfoutl.h<br>
gs/base/ttfsfnt.h<br>
gs/base/ttinterp.c<br>
gs/base/ttinterp.h<br>
gs/base/ttload.c<br>
gs/base/ttload.h<br>
gs/base/ttmisc.h<br>
gs/base/ttobjs.c<br>
gs/base/ttobjs.h<br>
gs/base/tttables.h<br>
gs/base/tttype.h<br>
gs/base/tttypes.h<br>
gs/base/ugcclib.mak<br>
gs/base/unistd_.h<br>
gs/base/unix-aux.mak<br>
gs/base/unix-dll.mak<br>
gs/base/unix-end.mak<br>
gs/base/unix-gcc.mak<br>
gs/base/unixansi.mak<br>
gs/base/unixhead.mak<br>
gs/base/unixinst.mak<br>
gs/base/unixlink.mak<br>
gs/base/valgrind.h<br>
gs/base/vdtrace.c<br>
gs/base/vdtrace.h<br>
gs/base/version.mak<br>
gs/base/vms_x_fix.h<br>
gs/base/vmsmath.h<br>
gs/base/whitelst.c<br>
gs/base/whitelst.h<br>
gs/base/windows_.h<br>
gs/base/winlib.mak<br>
gs/base/winplat.mak<br>
gs/base/x_.h<br>
gs/base/zlib.mak<br>
gs/cups/colord.c<br>
gs/cups/colord.h<br>
gs/cups/cups.mak<br>
gs/cups/gdevcups.c<br>
gs/cups/gstopxl.in<br>
gs/cups/gstoraster.c<br>
gs/cups/pxlcolor.ppd<br>
gs/cups/pxlmono.ppd<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Changes.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/Hershey.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/gs.css<br>
gs/doc/index.html<br>
gs/doc/pscet_status.txt<br>
gs/doc/thirdparty.htm<br>
gs/examples/waterfal.ps<br>
gs/freetype/src/gzip/adler32.c<br>
gs/freetype/src/gzip/zconf.h<br>
gs/freetype/src/gzip/zutil.c<br>
gs/freetype/src/gzip/zutil.h<br>
gs/ijs/Makefile.am<br>
gs/ijs/configure.ac<br>
gs/jasper/src/libjasper/base/jas_cm.c<br>
gs/jasper/src/libjasper/base/jas_getopt.c<br>
gs/jasper/src/libjasper/base/jas_image.c<br>
gs/jasper/src/libjasper/base/jas_malloc.c<br>
gs/jasper/src/libjasper/base/jas_seq.c<br>
gs/jasper/src/libjasper/base/jas_stream.c<br>
gs/jasper/src/libjasper/base/jas_string.c<br>
gs/jasper/src/libjasper/base/jas_tvp.c<br>
gs/jasper/src/libjasper/bmp/bmp_cod.c<br>
gs/jasper/src/libjasper/bmp/bmp_cod.h<br>
gs/jasper/src/libjasper/bmp/bmp_dec.c<br>
gs/jasper/src/libjasper/bmp/bmp_enc.c<br>
gs/jasper/src/libjasper/include/jasper/jas_cm.h<br>
gs/jasper/src/libjasper/include/jasper/jas_debug.h<br>
gs/jasper/src/libjasper/include/jasper/jas_fix.h<br>
gs/jasper/src/libjasper/include/jasper/jas_getopt.h<br>
gs/jasper/src/libjasper/include/jasper/jas_image.h<br>
gs/jasper/src/libjasper/include/jasper/jas_malloc.h<br>
gs/jasper/src/libjasper/include/jasper/jas_math.h<br>
gs/jasper/src/libjasper/include/jasper/jas_seq.h<br>
gs/jasper/src/libjasper/include/jasper/jas_stream.h<br>
gs/jasper/src/libjasper/include/jasper/jas_string.h<br>
gs/jasper/src/libjasper/include/jasper/jas_tvp.h<br>
gs/jasper/src/libjasper/include/jasper/jas_types.h<br>
gs/jasper/src/libjasper/include/jasper/jas_version.h<br>
gs/jasper/src/libjasper/jp2/jp2_cod.c<br>
gs/jasper/src/libjasper/jp2/jp2_cod.h<br>
gs/jasper/src/libjasper/jp2/jp2_enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_bs.c<br>
gs/jasper/src/libjasper/jpc/jpc_bs.h<br>
gs/jasper/src/libjasper/jpc/jpc_cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_cs.c<br>
gs/jasper/src/libjasper/jpc/jpc_cs.h<br>
gs/jasper/src/libjasper/jpc/jpc_dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_fix.h<br>
gs/jasper/src/libjasper/jpc/jpc_flt.h<br>
gs/jasper/src/libjasper/jpc/jpc_math.c<br>
gs/jasper/src/libjasper/jpc/jpc_mct.c<br>
gs/jasper/src/libjasper/jpc/jpc_mct.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqcod.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqcod.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqdec.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqdec.h<br>
gs/jasper/src/libjasper/jpc/jpc_mqenc.c<br>
gs/jasper/src/libjasper/jpc/jpc_mqenc.h<br>
gs/jasper/src/libjasper/jpc/jpc_qmfb.c<br>
gs/jasper/src/libjasper/jpc/jpc_qmfb.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1cod.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_t1enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_t1enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2cod.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2cod.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2dec.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2dec.h<br>
gs/jasper/src/libjasper/jpc/jpc_t2enc.c<br>
gs/jasper/src/libjasper/jpc/jpc_t2enc.h<br>
gs/jasper/src/libjasper/jpc/jpc_tagtree.c<br>
gs/jasper/src/libjasper/jpc/jpc_tagtree.h<br>
gs/jasper/src/libjasper/jpc/jpc_tsfb.c<br>
gs/jasper/src/libjasper/jpc/jpc_tsfb.h<br>
gs/jasper/src/libjasper/jpc/jpc_util.c<br>
gs/jasper/src/libjasper/jpg/jpg_cod.h<br>
gs/jasper/src/libjasper/pgx/pgx_cod.h<br>
gs/jasper/src/libjasper/pnm/pnm_cod.c<br>
gs/jasper/src/libjasper/pnm/pnm_cod.h<br>
gs/jasper/src/libjasper/pnm/pnm_dec.c<br>
gs/jasper/src/libjasper/pnm/pnm_enc.c<br>
gs/jasper/src/libjasper/ras/ras_cod.c<br>
gs/jasper/src/libjasper/ras/ras_cod.h<br>
gs/jasper/src/libjasper/ras/ras_dec.c<br>
gs/jasper/src/libjasper/ras/ras_enc.c<br>
gs/jbig2dec/config_types.h<br>
gs/jbig2dec/config_types.h.in<br>
gs/jbig2dec/config_win32.h<br>
gs/jbig2dec/getopt.c<br>
gs/jbig2dec/getopt.h<br>
gs/jbig2dec/getopt1.c<br>
gs/jbig2dec/jbig2.c<br>
gs/jbig2dec/jbig2.h<br>
gs/jbig2dec/jbig2_arith.c<br>
gs/jbig2dec/jbig2_arith.h<br>
gs/jbig2dec/jbig2_arith_iaid.c<br>
gs/jbig2dec/jbig2_arith_iaid.h<br>
gs/jbig2dec/jbig2_arith_int.c<br>
gs/jbig2dec/jbig2_arith_int.h<br>
gs/jbig2dec/jbig2_generic.c<br>
gs/jbig2dec/jbig2_generic.h<br>
gs/jbig2dec/jbig2_halftone.c<br>
gs/jbig2dec/jbig2_halftone.h<br>
gs/jbig2dec/jbig2_huffman.c<br>
gs/jbig2dec/jbig2_huffman.h<br>
gs/jbig2dec/jbig2_hufftab.h<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_image.h<br>
gs/jbig2dec/jbig2_image_pbm.c<br>
gs/jbig2dec/jbig2_image_png.c<br>
gs/jbig2dec/jbig2_metadata.c<br>
gs/jbig2dec/jbig2_metadata.h<br>
gs/jbig2dec/jbig2_mmr.c<br>
gs/jbig2dec/jbig2_mmr.h<br>
gs/jbig2dec/jbig2_page.c<br>
gs/jbig2dec/jbig2_priv.h<br>
gs/jbig2dec/jbig2_refinement.c<br>
gs/jbig2dec/jbig2_segment.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_symbol_dict.h<br>
gs/jbig2dec/jbig2_text.c<br>
gs/jbig2dec/jbig2_text.h<br>
gs/jbig2dec/jbig2dec.c<br>
gs/jbig2dec/memcmp.c<br>
gs/jbig2dec/memento.c<br>
gs/jbig2dec/memento.h<br>
gs/jbig2dec/os_types.h<br>
gs/jbig2dec/pbm2png.c<br>
gs/jbig2dec/snprintf.c<br>
gs/lib/FAPIconfig-FCO<br>
gs/lib/FCOfontmap-PCLPS3<br>
gs/lib/FCOfontmap-PS3<br>
gs/lib/Fontmap.ATB<br>
gs/lib/Fontmap.ATM<br>
gs/lib/Fontmap.OS2<br>
gs/lib/Fontmap.SGI<br>
gs/lib/Fontmap.Sol<br>
gs/lib/Fontmap.URW-136.T1<br>
gs/lib/Fontmap.URW-136.TT<br>
gs/lib/Fontmap.Ult<br>
gs/lib/Fontmap.VMS<br>
gs/lib/PDFA_def.ps<br>
gs/lib/PDFX_def.ps<br>
gs/lib/acctest.ps<br>
gs/lib/addxchar.ps<br>
gs/lib/align.ps<br>
gs/lib/caption.ps<br>
gs/lib/cat.ps<br>
gs/lib/cid2code.ps<br>
gs/lib/decrypt.ps<br>
gs/lib/docie.ps<br>
gs/lib/dumphint<br>
gs/lib/dumphint.bat<br>
gs/lib/dumphint.ps<br>
gs/lib/dvipdf<br>
gs/lib/eps2eps<br>
gs/lib/eps2eps.bat<br>
gs/lib/eps2eps.cmd<br>
gs/lib/font2c<br>
gs/lib/font2c.bat<br>
gs/lib/font2c.cmd<br>
gs/lib/font2c.ps<br>
gs/lib/font2pcl.ps<br>
gs/lib/gs_ce_e.ps<br>
gs/lib/gs_cmdl.ps<br>
gs/lib/gs_fform.ps<br>
gs/lib/gs_il2_e.ps<br>
gs/lib/gs_kanji.ps<br>
gs/lib/gs_ksb_e.ps<br>
gs/lib/gs_lgo_e.ps<br>
gs/lib/gs_lgx_e.ps<br>
gs/lib/gs_pfile.ps<br>
gs/lib/gs_rdlin.ps<br>
gs/lib/gs_wl1_e.ps<br>
gs/lib/gs_wl2_e.ps<br>
gs/lib/gs_wl5_e.ps<br>
gs/lib/gsbj<br>
gs/lib/gsbj.bat<br>
gs/lib/gsdj<br>
gs/lib/gsdj.bat<br>
gs/lib/gsdj500<br>
gs/lib/gsdj500.bat<br>
gs/lib/gslj<br>
gs/lib/gslj.bat<br>
gs/lib/gslp<br>
gs/lib/gslp.bat<br>
gs/lib/gslp.ps<br>
gs/lib/gsnd<br>
gs/lib/gsnd.bat<br>
gs/lib/gsndt.bat<br>
gs/lib/gsnup.ps<br>
gs/lib/gssetgs.bat<br>
gs/lib/gssetgs32.bat<br>
gs/lib/gssetgs64.bat<br>
gs/lib/gst.bat<br>
gs/lib/gstt.bat<br>
gs/lib/ht_ccsto.ps<br>
gs/lib/image-qa.ps<br>
gs/lib/impath.ps<br>
gs/lib/jispaper.ps<br>
gs/lib/jobseparator.ps<br>
gs/lib/landscap.ps<br>
gs/lib/level1.ps<br>
gs/lib/lines.ps<br>
gs/lib/lp386.bat<br>
gs/lib/lp386r2.bat<br>
gs/lib/lpgs.bat<br>
gs/lib/lpr2.bat<br>
gs/lib/lprsetup.sh<br>
gs/lib/markhint.ps<br>
gs/lib/markpath.ps<br>
gs/lib/mkcidfm.ps<br>
gs/lib/opdfread.ps<br>
gs/lib/packfile.ps<br>
gs/lib/pcharstr.ps<br>
gs/lib/pdf2dsc<br>
gs/lib/pdf2dsc.bat<br>
gs/lib/pdf2dsc.ps<br>
gs/lib/pdf2ps<br>
gs/lib/pdf2ps.bat<br>
gs/lib/pdf2ps.cmd<br>
gs/lib/pdfopt<br>
gs/lib/pdfopt.bat<br>
gs/lib/pdfopt.ps<br>
gs/lib/pdfwrite.ps<br>
gs/lib/pf2afm<br>
gs/lib/pf2afm.bat<br>
gs/lib/pf2afm.cmd<br>
gs/lib/pf2afm.ps<br>
gs/lib/pfbtopfa<br>
gs/lib/pfbtopfa.bat<br>
gs/lib/pfbtopfa.ps<br>
gs/lib/pftogsf.bat<br>
gs/lib/ppath.ps<br>
gs/lib/pphs<br>
gs/lib/pphs.ps<br>
gs/lib/prfont.ps<br>
gs/lib/printafm<br>
gs/lib/printafm.ps<br>
gs/lib/ps2ai.ps<br>
gs/lib/ps2ascii<br>
gs/lib/ps2ascii.bat<br>
gs/lib/ps2ascii.cmd<br>
gs/lib/ps2ascii.ps<br>
gs/lib/ps2epsi<br>
gs/lib/ps2epsi.bat<br>
gs/lib/ps2epsi.cmd<br>
gs/lib/ps2epsi.ps<br>
gs/lib/ps2pdf<br>
gs/lib/ps2pdf.bat<br>
gs/lib/ps2pdf.cmd<br>
gs/lib/ps2pdf12<br>
gs/lib/ps2pdf12.bat<br>
gs/lib/ps2pdf12.cmd<br>
gs/lib/ps2pdf13<br>
gs/lib/ps2pdf13.bat<br>
gs/lib/ps2pdf13.cmd<br>
gs/lib/ps2pdf14<br>
gs/lib/ps2pdf14.bat<br>
gs/lib/ps2pdf14.cmd<br>
gs/lib/ps2pdfwr<br>
gs/lib/ps2pdfxx.bat<br>
gs/lib/ps2ps<br>
gs/lib/ps2ps.bat<br>
gs/lib/ps2ps.cmd<br>
gs/lib/ps2ps2<br>
gs/lib/ps2ps2.bat<br>
gs/lib/ps2ps2.cmd<br>
gs/lib/rollconv.ps<br>
gs/lib/showchar.ps<br>
gs/lib/stcinfo.ps<br>
gs/lib/stcolor.ps<br>
gs/lib/stocht.ps<br>
gs/lib/traceimg.ps<br>
gs/lib/traceop.ps<br>
gs/lib/type1enc.ps<br>
gs/lib/type1ops.ps<br>
gs/lib/uninfo.ps<br>
gs/lib/unix-lpr.sh<br>
gs/lib/unprot.ps<br>
gs/lib/viewcmyk.ps<br>
gs/lib/viewgif.ps<br>
gs/lib/viewjpeg.ps<br>
gs/lib/viewmiff.ps<br>
gs/lib/viewpbm.ps<br>
gs/lib/viewpcx.ps<br>
gs/lib/viewps2a.ps<br>
gs/lib/viewrgb.ps<br>
gs/lib/wftopfa<br>
gs/lib/wftopfa.ps<br>
gs/lib/winmaps.ps<br>
gs/lib/wmakebat.bat<br>
gs/lib/wrfont.ps<br>
gs/lib/zeroline.ps<br>
gs/man/de/dvipdf.1<br>
gs/man/de/font2c.1<br>
gs/man/de/gsnd.1<br>
gs/man/de/pdf2dsc.1<br>
gs/man/de/pdf2ps.1<br>
gs/man/de/pdfopt.1<br>
gs/man/de/printafm.1<br>
gs/man/de/ps2ascii.1<br>
gs/man/de/ps2pdf.1<br>
gs/man/de/ps2ps.1<br>
gs/man/de/wftopfa.1<br>
gs/man/dvipdf.1<br>
gs/man/eps2eps.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
gs/psi/bfont.h<br>
gs/psi/btoken.h<br>
gs/psi/dmmain.c<br>
gs/psi/dmmain.r<br>
gs/psi/dpmain.c<br>
gs/psi/dscparse.c<br>
gs/psi/dscparse.h<br>
gs/psi/dstack.h<br>
gs/psi/dwdll.c<br>
gs/psi/dwdll.h<br>
gs/psi/dwimg.c<br>
gs/psi/dwimg.h<br>
gs/psi/dwmain.c<br>
gs/psi/dwmain.rc<br>
gs/psi/dwmainc.c<br>
gs/psi/dwnodll.c<br>
gs/psi/dwreg.c<br>
gs/psi/dwreg.h<br>
gs/psi/dwres.h<br>
gs/psi/dwtext.c<br>
gs/psi/dwtext.h<br>
gs/psi/dwtrace.c<br>
gs/psi/dwtrace.h<br>
gs/psi/dxmain.c<br>
gs/psi/dxmainc.c<br>
gs/psi/estack.h<br>
gs/psi/fapi_ft.c<br>
gs/psi/fapibstm.c<br>
gs/psi/fapiufst.c<br>
gs/psi/files.h<br>
gs/psi/ghost.h<br>
gs/psi/gs.c<br>
gs/psi/gsdll.c<br>
gs/psi/gsdll2.rc<br>
gs/psi/gsdll32.rc<br>
gs/psi/gserver.c<br>
gs/psi/gsos2.rc<br>
gs/psi/ialloc.c<br>
gs/psi/ialloc.h<br>
gs/psi/iapi.c<br>
gs/psi/iapi.h<br>
gs/psi/iastate.h<br>
gs/psi/iastruct.h<br>
gs/psi/ibnum.c<br>
gs/psi/ibnum.h<br>
gs/psi/ichar.h<br>
gs/psi/ichar1.h<br>
gs/psi/icharout.h<br>
gs/psi/icid.h<br>
gs/psi/icie.h<br>
gs/psi/icolor.h<br>
gs/psi/iconf.c<br>
gs/psi/iconf.h<br>
gs/psi/icontext.c<br>
gs/psi/icontext.h<br>
gs/psi/icremap.h<br>
gs/psi/icsmap.h<br>
gs/psi/icstate.h<br>
gs/psi/iddict.h<br>
gs/psi/iddstack.h<br>
gs/psi/idebug.c<br>
gs/psi/idebug.h<br>
gs/psi/idict.c<br>
gs/psi/idict.h<br>
gs/psi/idictdef.h<br>
gs/psi/idicttpl.h<br>
gs/psi/idisp.c<br>
gs/psi/idisp.h<br>
gs/psi/idosave.h<br>
gs/psi/idparam.c<br>
gs/psi/idparam.h<br>
gs/psi/idsdata.h<br>
gs/psi/idstack.c<br>
gs/psi/idstack.h<br>
gs/psi/ierrors.h<br>
gs/psi/iesdata.h<br>
gs/psi/iestack.h<br>
gs/psi/ifapi.h<br>
gs/psi/ifcid.h<br>
gs/psi/ifilter.h<br>
gs/psi/ifilter2.h<br>
gs/psi/ifont.h<br>
gs/psi/ifont1.h<br>
gs/psi/ifont2.h<br>
gs/psi/ifont42.h<br>
gs/psi/ifrpred.h<br>
gs/psi/ifunc.h<br>
gs/psi/ifwpred.h<br>
gs/psi/igc.c<br>
gs/psi/igc.h<br>
gs/psi/igcref.c<br>
gs/psi/igcstr.c<br>
gs/psi/igcstr.h<br>
gs/psi/igstate.h<br>
gs/psi/iht.h<br>
gs/psi/iimage.h<br>
gs/psi/iimage2.h<br>
gs/psi/iinit.c<br>
gs/psi/iinit.h<br>
gs/psi/ilevel.h<br>
gs/psi/ilocate.c<br>
gs/psi/imain.c<br>
gs/psi/imain.h<br>
gs/psi/imainarg.c<br>
gs/psi/imainarg.h<br>
gs/psi/imemory.h<br>
gs/psi/iminst.h<br>
gs/psi/iname.c<br>
gs/psi/iname.h<br>
gs/psi/inamedef.h<br>
gs/psi/inameidx.h<br>
gs/psi/inames.h<br>
gs/psi/inamestr.h<br>
gs/psi/inobtokn.c<br>
gs/psi/inouparm.c<br>
gs/psi/int.mak<br>
gs/psi/interp.c<br>
gs/psi/interp.h<br>
gs/psi/iosdata.h<br>
gs/psi/iostack.h<br>
gs/psi/ipacked.h<br>
gs/psi/iparam.c<br>
gs/psi/iparam.h<br>
gs/psi/iparray.h<br>
gs/psi/ipcolor.h<br>
gs/psi/iplugin.c<br>
gs/psi/iplugin.h<br>
gs/psi/ireclaim.c<br>
gs/psi/iref.h<br>
gs/psi/isave.c<br>
gs/psi/isave.h<br>
gs/psi/iscan.c<br>
gs/psi/iscan.h<br>
gs/psi/iscanbin.c<br>
gs/psi/iscanbin.h<br>
gs/psi/iscannum.c<br>
gs/psi/iscannum.h<br>
gs/psi/isdata.h<br>
gs/psi/isstate.h<br>
gs/psi/istack.c<br>
gs/psi/istack.h<br>
gs/psi/istkparm.h<br>
gs/psi/istream.h<br>
gs/psi/istruct.h<br>
gs/psi/itoken.h<br>
gs/psi/iutil.c<br>
gs/psi/iutil.h<br>
gs/psi/iutil2.c<br>
gs/psi/iutil2.h<br>
gs/psi/ivmem2.h<br>
gs/psi/ivmspace.h<br>
gs/psi/main.h<br>
gs/psi/mkfilelt.cpp<br>
gs/psi/msvc.mak<br>
gs/psi/msvc32.mak<br>
gs/psi/msvc64.mak<br>
gs/psi/nsisinst.nsi<br>
gs/psi/oparc.h<br>
gs/psi/opcheck.h<br>
gs/psi/opdef.h<br>
gs/psi/oper.h<br>
gs/psi/opextern.h<br>
gs/psi/os2.mak<br>
gs/psi/ostack.h<br>
gs/psi/psromfs.mak<br>
gs/psi/sfilter1.c<br>
gs/psi/store.h<br>
gs/psi/winint.mak<br>
gs/psi/wrfont.c<br>
gs/psi/wrfont.h<br>
gs/psi/write_t1.c<br>
gs/psi/write_t1.h<br>
gs/psi/write_t2.c<br>
gs/psi/write_t2.h<br>
gs/psi/zalg.c<br>
gs/psi/zarith.c<br>
gs/psi/zarray.c<br>
gs/psi/zbfont.c<br>
gs/psi/zbseq.c<br>
gs/psi/zcfont.c<br>
gs/psi/zchar.c<br>
gs/psi/zchar1.c<br>
gs/psi/zchar2.c<br>
gs/psi/zchar32.c<br>
gs/psi/zchar42.c<br>
gs/psi/zchar42.h<br>
gs/psi/zcharout.c<br>
gs/psi/zcharx.c<br>
gs/psi/zcid.c<br>
gs/psi/zcidtest.c<br>
gs/psi/zcie.c<br>
gs/psi/zcie.h<br>
gs/psi/zcolor.c<br>
gs/psi/zcolor.h<br>
gs/psi/zcolor1.c<br>
gs/psi/zcolor2.c<br>
gs/psi/zcolor3.c<br>
gs/psi/zcontext.c<br>
gs/psi/zcontrol.c<br>
gs/psi/zcrd.c<br>
gs/psi/zcsdevn.c<br>
gs/psi/zcsindex.c<br>
gs/psi/zcspixel.c<br>
gs/psi/zcssepr.c<br>
gs/psi/zdevcal.c<br>
gs/psi/zdevice.c<br>
gs/psi/zdevice2.c<br>
gs/psi/zdfilter.c<br>
gs/psi/zdict.c<br>
gs/psi/zdosio.c<br>
gs/psi/zdouble.c<br>
gs/psi/zdpnext.c<br>
gs/psi/zdps.c<br>
gs/psi/zdps1.c<br>
gs/psi/zdscpars.c<br>
gs/psi/zfaes.c<br>
gs/psi/zfapi.c<br>
gs/psi/zfarc4.c<br>
gs/psi/zfbcp.c<br>
gs/psi/zfcid.c<br>
gs/psi/zfcid0.c<br>
gs/psi/zfcid1.c<br>
gs/psi/zfcmap.c<br>
gs/psi/zfdctd.c<br>
gs/psi/zfdcte.c<br>
gs/psi/zfdecode.c<br>
gs/psi/zfile.c<br>
gs/psi/zfile.h<br>
gs/psi/zfile1.c<br>
gs/psi/zfileio.c<br>
gs/psi/zfilter.c<br>
gs/psi/zfilter2.c<br>
gs/psi/zfilterx.c<br>
gs/psi/zfimscale.c<br>
gs/psi/zfjbig2.c<br>
gs/psi/zfjpx.c<br>
gs/psi/zfmd5.c<br>
gs/psi/zfont.c<br>
gs/psi/zfont0.c<br>
gs/psi/zfont1.c<br>
gs/psi/zfont2.c<br>
gs/psi/zfont32.c<br>
gs/psi/zfont42.c<br>
gs/psi/zfontenum.c<br>
gs/psi/zfproc.c<br>
gs/psi/zfrsd.c<br>
gs/psi/zfrsd.h<br>
gs/psi/zfsample.c<br>
gs/psi/zfsha2.c<br>
gs/psi/zfunc.c<br>
gs/psi/zfunc.h<br>
gs/psi/zfunc0.c<br>
gs/psi/zfunc3.c<br>
gs/psi/zfunc4.c<br>
gs/psi/zfzlib.c<br>
gs/psi/zgeneric.c<br>
gs/psi/zgstate.c<br>
gs/psi/zhsb.c<br>
gs/psi/zht.c<br>
gs/psi/zht1.c<br>
gs/psi/zht2.c<br>
gs/psi/zht2.h<br>
gs/psi/zicc.c<br>
gs/psi/zicc.h<br>
gs/psi/zimage.c<br>
gs/psi/zimage2.c<br>
gs/psi/zimage3.c<br>
gs/psi/ziodev.c<br>
gs/psi/ziodev2.c<br>
gs/psi/ziodevs.c<br>
gs/psi/ziodevsc.c<br>
gs/psi/zmath.c<br>
gs/psi/zmatrix.c<br>
gs/psi/zmedia2.c<br>
gs/psi/zmisc.c<br>
gs/psi/zmisc1.c<br>
gs/psi/zmisc2.c<br>
gs/psi/zmisc3.c<br>
gs/psi/zncdummy.c<br>
gs/psi/zpacked.c<br>
gs/psi/zpaint.c<br>
gs/psi/zpath.c<br>
gs/psi/zpath1.c<br>
gs/psi/zpcolor.c<br>
gs/psi/zpdfops.c<br>
gs/psi/zrelbit.c<br>
gs/psi/zrop.c<br>
gs/psi/zshade.c<br>
gs/psi/zstack.c<br>
gs/psi/zstring.c<br>
gs/psi/zsysvm.c<br>
gs/psi/ztoken.c<br>
gs/psi/ztrans.c<br>
gs/psi/ztrap.c<br>
gs/psi/ztype.c<br>
gs/psi/zupath.c<br>
gs/psi/zusparam.c<br>
gs/psi/zutf8.c<br>
gs/psi/zvmem.c<br>
gs/psi/zvmem2.c<br>
gs/psi/zwinutf8.c<br>
gs/toolbin/GenSubstCID.ps<br>
gs/toolbin/afmutil.py<br>
gs/toolbin/bughunt.sh<br>
gs/toolbin/color/icc_creator/ICC_Creator/CIELAB.h<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.cpp<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.h<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.cpp<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.h<br>
gs/toolbin/color/icc_creator/README.txt<br>
gs/toolbin/drawafm.ps<br>
gs/toolbin/encs2c.ps<br>
gs/toolbin/errlist.tcl<br>
gs/toolbin/extractFonts.ps<br>
gs/toolbin/extractICCprofiles.ps<br>
gs/toolbin/gen_ldf_jb2.py<br>
gs/toolbin/genfontmap.ps<br>
gs/toolbin/gitlog2changelog.py<br>
gs/toolbin/gsmake<br>
gs/toolbin/gsmake.tcl<br>
gs/toolbin/halftone/gen_ordered/README<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.c<br>
gs/toolbin/headers.tcl<br>
gs/toolbin/jpxtopdf.c<br>
gs/toolbin/leaks.tcl<br>
gs/toolbin/makehist.tcl<br>
gs/toolbin/memory.py<br>
gs/toolbin/ocheck.py<br>
gs/toolbin/pdf_info.ps<br>
gs/toolbin/pdfinflt.ps<br>
gs/toolbin/pre.tcl<br>
gs/toolbin/precheck.tcl<br>
gs/toolbin/pscet_status.pl<br>
gs/toolbin/smoke.ps<br>
gs/toolbin/split_changelog.py<br>
gs/toolbin/suite.tcl<br>
gs/toolbin/tests/build_revision.py<br>
gs/toolbin/tests/check_all.py<br>
gs/toolbin/tests/check_comments.py<br>
gs/toolbin/tests/check_dirs.py<br>
gs/toolbin/tests/check_docrefs.py<br>
gs/toolbin/tests/check_source.py<br>
gs/toolbin/tests/cmpi.py<br>
gs/toolbin/tests/compare_checksumdb.py<br>
gs/toolbin/tests/compare_checksums.py<br>
gs/toolbin/tests/dump_checksum.py<br>
gs/toolbin/tests/dump_checksum_plus.py<br>
gs/toolbin/tests/dump_checksum_raw.py<br>
gs/toolbin/tests/fuzzy.c<br>
gs/toolbin/tests/get_baseline_log.py<br>
gs/toolbin/tests/get_baselines.py<br>
gs/toolbin/tests/gscheck_all.py<br>
gs/toolbin/tests/gscheck_fuzzypdf.py<br>
gs/toolbin/tests/gscheck_pdfwrite.py<br>
gs/toolbin/tests/gscheck_raster.py<br>
gs/toolbin/tests/gscheck_testfiles.py<br>
gs/toolbin/tests/gsconf.py<br>
gs/toolbin/tests/gsparamsets.py<br>
gs/toolbin/tests/gssum.py<br>
gs/toolbin/tests/gstestgs.py<br>
gs/toolbin/tests/gstestutils.py<br>
gs/toolbin/tests/gsutil.py<br>
gs/toolbin/tests/make_baselinedb.py<br>
gs/toolbin/tests/make_testdb.py<br>
gs/toolbin/tests/make_two_pdfversions<br>
gs/toolbin/tests/make_two_versions<br>
gs/toolbin/tests/myoptparse.py<br>
gs/toolbin/tests/rasterdb.py<br>
gs/toolbin/tests/revert_baseline<br>
gs/toolbin/tests/revert_pdfbaseline<br>
gs/toolbin/tests/run_nightly.py<br>
gs/toolbin/tests/run_parallel<br>
gs/toolbin/tests/run_regression.py<br>
gs/toolbin/tests/testdiff.py<br>
gs/toolbin/tests/update_baseline.py<br>
gs/toolbin/tests/update_specific<br>
gs/toolbin/tmake.tcl<br>
gs/zlib/ChangeLog<br>
gs/zlib/adler32.c<br>
gs/zlib/compress.c<br>
gs/zlib/crc32.c<br>
gs/zlib/deflate.c<br>
gs/zlib/deflate.h<br>
gs/zlib/test/example.c<br>
gs/zlib/test/minigzip.c<br>
gs/zlib/trees.c<br>
gs/zlib/uncompr.c<br>
gs/zlib/zconf.h<br>
gs/zlib/zconf.h.cmakein<br>
gs/zlib/zconf.h.in<br>
gs/zlib/zutil.c<br>
gs/zlib/zutil.h<br>
language_switch/pspcl6_gcc.mak<br>
language_switch/pspcl6_msvc.mak<br>
pcl/pcbiptrn.c<br>
pcl/pcbiptrn.h<br>
pcl/pccid.c<br>
pcl/pccid.h<br>
pcl/pccolor.c<br>
pcl/pccoord.h<br>
pcl/pccprint.c<br>
pcl/pccsbase.c<br>
pcl/pccsbase.h<br>
pcl/pcdict.h<br>
pcl/pcdither.c<br>
pcl/pcdither.h<br>
pcl/pcdraw.c<br>
pcl/pcdraw.h<br>
pcl/pcfont.c<br>
pcl/pcfont.h<br>
pcl/pcfontpg.c<br>
pcl/pcfontst.h<br>
pcl/pcfrgrnd.c<br>
pcl/pcfrgrnd.h<br>
pcl/pcfsel.c<br>
pcl/pcfsel.h<br>
pcl/pcht.c<br>
pcl/pcht.h<br>
pcl/pcident.c<br>
pcl/pcident.h<br>
pcl/pcimpl.c<br>
pcl/pcindxed.c<br>
pcl/pcindxed.h<br>
pcl/pcjob.c<br>
pcl/pcl.mak<br>
pcl/pcl_top.mak<br>
pcl/pclookup.c<br>
pcl/pclookup.h<br>
pcl/pcmacros.c<br>
pcl/pcmisc.c<br>
pcl/pcmtx3.c<br>
pcl/pcmtx3.h<br>
pcl/pcommand.c<br>
pcl/pcommand.h<br>
pcl/pcpage.c<br>
pcl/pcpage.h<br>
pcl/pcpalet.c<br>
pcl/pcpalet.h<br>
pcl/pcparam.h<br>
pcl/pcparse.c<br>
pcl/pcparse.h<br>
pcl/pcpatrn.c<br>
pcl/pcpatrn.h<br>
pcl/pcpattyp.h<br>
pcl/pcpatxfm.c<br>
pcl/pcpatxfm.h<br>
pcl/pcrect.c<br>
pcl/pcsfont.c<br>
pcl/pcstate.h<br>
pcl/pcstatus.c<br>
pcl/pcsymbol.c<br>
pcl/pcsymbol.h<br>
pcl/pctext.c<br>
pcl/pctop.c<br>
pcl/pctop.h<br>
pcl/pctpm.h<br>
pcl/pcuptrn.c<br>
pcl/pcuptrn.h<br>
pcl/pcursor.c<br>
pcl/pcursor.h<br>
pcl/pcwhtidx.c<br>
pcl/pcwhtidx.h<br>
pcl/pcxfmst.h<br>
pcl/pgchar.c<br>
pcl/pgcolor.c<br>
pcl/pgconfig.c<br>
pcl/pgdraw.c<br>
pcl/pgdraw.h<br>
pcl/pgfdata.c<br>
pcl/pgfdata.h<br>
pcl/pgfont.c<br>
pcl/pgfont.h<br>
pcl/pgframe.c<br>
pcl/pggeom.c<br>
pcl/pggeom.h<br>
pcl/pginit.c<br>
pcl/pginit.h<br>
pcl/pglabel.c<br>
pcl/pglfill.c<br>
pcl/pgmand.h<br>
pcl/pgmisc.c<br>
pcl/pgmisc.h<br>
pcl/pgparse.c<br>
pcl/pgpoly.c<br>
pcl/pgstate.h<br>
pcl/pgvector.c<br>
pcl/rtgmode.c<br>
pcl/rtgmode.h<br>
pcl/rtmisc.c<br>
pcl/rtraster.c<br>
pcl/rtraster.h<br>
pcl/rtrstcmp.c<br>
pcl/rtrstcmp.h<br>
pcl/rtrstst.h<br>
pl/dwimg.c<br>
pl/dwimg.h<br>
pl/dwmainc.c<br>
pl/dwreg.c<br>
pl/dwreg.h<br>
pl/dwres.h<br>
pl/pjparse.c<br>
pl/pjparse.h<br>
pl/pjparsei.c<br>
pl/pjtop.c<br>
pl/pjtop.h<br>
pl/pl.mak<br>
pl/plalloc.c<br>
pl/plalloc.h<br>
pl/plapi.h<br>
pl/plchar.c<br>
pl/pldebug.h<br>
pl/pldict.c<br>
pl/pldict.h<br>
pl/pldraw.c<br>
pl/pldraw.h<br>
pl/plfont.c<br>
pl/plfont.h<br>
pl/plftable.c<br>
pl/plftable.h<br>
pl/plht.c<br>
pl/plht.h<br>
pl/plimpl.c<br>
pl/pllfont.c<br>
pl/pllfont.h<br>
pl/plmain.c<br>
pl/plmain.h<br>
pl/plparse.h<br>
pl/plplatf.c<br>
pl/plplatf.h<br>
pl/plplatfps.c<br>
pl/plsrgb.c<br>
pl/plsrgb.h<br>
pl/plsymbol.c<br>
pl/plsymbol.h<br>
pl/pltop.c<br>
pl/pltop.h<br>
pl/pltoputl.c<br>
pl/pltoputl.h<br>
pl/pluchar.c<br>
pl/plufont.c<br>
pl/plulfont.c<br>
pl/plvalue.c<br>
pl/plvalue.h<br>
pl/plvocab.c<br>
pl/plvocab.h<br>
pl/realmain.c<br>
psi/psi.mak<br>
psi/psitop.c<br>
pxl/pxasm.ps<br>
pxl/pxattr.h<br>
pxl/pxbfont.c<br>
pxl/pxbfont.h<br>
pxl/pxbfont.ps<br>
pxl/pxcet.txt<br>
pxl/pxdict.h<br>
pxl/pxdiff.txt<br>
pxl/pxenum.h<br>
pxl/pxerrors.c<br>
pxl/pxerrors.h<br>
pxl/pxffont.c<br>
pxl/pxfont.c<br>
pxl/pxfont.h<br>
pxl/pxfts.txt<br>
pxl/pxgstate.c<br>
pxl/pxgstate.h<br>
pxl/pximage.c<br>
pxl/pximpl.c<br>
pxl/pxink.c<br>
pxl/pxl.mak<br>
pxl/pxlib.txt<br>
pxl/pxoper.h<br>
pxl/pxpaint.c<br>
pxl/pxparse.c<br>
pxl/pxparse.h<br>
pxl/pxptable.c<br>
pxl/pxptable.h<br>
pxl/pxpthr.c<br>
pxl/pxpthr.h<br>
pxl/pxsessio.c<br>
pxl/pxspec.txt<br>
pxl/pxstate.c<br>
pxl/pxstate.h<br>
pxl/pxstream.c<br>
pxl/pxsymbol.ps<br>
pxl/pxsymbol.psc<br>
pxl/pxsymbol.psh<br>
pxl/pxtag.h<br>
pxl/pxtop.c<br>
pxl/pxvalue.c<br>
pxl/pxvalue.h<br>
svg/ghostsvg.h<br>
svg/svg.mak<br>
svg/svg_gcc.mak<br>
svg/svg_msvc.mak<br>
svg/svgcolor.c<br>
svg/svgcolorlist.h<br>
svg/svgdoc.c<br>
svg/svgshapes.c<br>
svg/svgtop.c<br>
svg/svgtransform.c<br>
svg/svgtypes.c<br>
svg/svgxml.c<br>
tools/gslite/gslt.h<br>
tools/gslite/gslt_font.h<br>
tools/gslite/gslt_font_api.c<br>
tools/gslite/gslt_font_api.h<br>
tools/gslite/gslt_font_api_test.c<br>
tools/gslite/gslt_font_cache.c<br>
tools/gslite/gslt_font_cff.c<br>
tools/gslite/gslt_font_encoding.c<br>
tools/gslite/gslt_font_glyph.c<br>
tools/gslite/gslt_font_int.h<br>
tools/gslite/gslt_font_test.c<br>
tools/gslite/gslt_font_ttf.c<br>
tools/gslite/gslt_image.c<br>
tools/gslite/gslt_image.h<br>
tools/gslite/gslt_image_jpeg.c<br>
tools/gslite/gslt_image_png.c<br>
tools/gslite/gslt_image_test.c<br>
tools/gslite/gslt_image_threads_test.c<br>
tools/gslite/gslt_image_tiff.c<br>
tools/gslite/gslt_init.c<br>
tools/gslite/gslt_stubs.c<br>
tools/gslite/gslt_test.c<br>
tools/null.pxl<br>
tools/suite.tcl<br>
xps/ghostxps.h<br>
xps/xps.mak<br>
xps/xps_gcc.mak<br>
xps/xps_msvc.mak<br>
xps/xpsanalyze.c<br>
xps/xpscff.c<br>
xps/xpscolor.c<br>
xps/xpscommon.c<br>
xps/xpscrc.c<br>
xps/xpsdoc.c<br>
xps/xpsfont.c<br>
xps/xpsglyphs.c<br>
xps/xpsgradient.c<br>
xps/xpshash.c<br>
xps/xpsimage.c<br>
xps/xpsjpeg.c<br>
xps/xpsjxr.c<br>
xps/xpsmem.c<br>
xps/xpsopacity.c<br>
xps/xpspage.c<br>
xps/xpspath.c<br>
xps/xpspng.c<br>
xps/xpsresource.c<br>
xps/xpstiff.c<br>
xps/xpstile.c<br>
xps/xpstop.c<br>
xps/xpsttf.c<br>
xps/xpsutf.c<br>
xps/xpsvisual.c<br>
xps/xpsxml.c<br>
xps/xpszip.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-13 12:22:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fae7be45fb7f2e9be889c07dc9d29e7ea1975dc9">fae7be45fb7f2e9be889c07dc9d29e7ea1975dc9</a>
<blockquote>
<p>
    Bug 692365: Don't derive metrics for CIDFontType 2.<br>
<br>
    pdfwrite uses zchar42_set_cache() to get the glyph metrics for a glyph from<br>
    CIDFontType 2 font. It turns out, that function contained the same faking<br>
    of vertical metrics as the FAPI code originally had. That's a problem because<br>
    a PS font without vertical metrics should be treated as horizontal, regardless<br>
    of the wmode value.<br>
<br>
    We *only* want to derive vertical metrics for TTF fonts read from disk being<br>
    used to emulate a missing CIDFont with wmode 1.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zchar42.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-11 14:09:28 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b4dbdb142e340596d9a8b440ca415832c39caef2">b4dbdb142e340596d9a8b440ca415832c39caef2</a>
<blockquote>
<p>
    Update libjpeg to 8d.<br>
<br>
gs/jpeg/Makefile.in<br>
gs/jpeg/README<br>
gs/jpeg/aclocal.m4<br>
gs/jpeg/change.log<br>
gs/jpeg/cjpeg.1<br>
gs/jpeg/cjpeg.c<br>
gs/jpeg/config.guess<br>
gs/jpeg/config.sub<br>
gs/jpeg/configure<br>
gs/jpeg/configure.ac<br>
gs/jpeg/depcomp<br>
gs/jpeg/install-sh<br>
gs/jpeg/install.txt<br>
gs/jpeg/jaricom.c<br>
gs/jpeg/jcarith.c<br>
gs/jpeg/jccoefct.c<br>
gs/jpeg/jccolor.c<br>
gs/jpeg/jconfig.mc6<br>
gs/jpeg/jctrans.c<br>
gs/jpeg/jdarith.c<br>
gs/jpeg/jdatadst.c<br>
gs/jpeg/jdatasrc.c<br>
gs/jpeg/jdcoefct.c<br>
gs/jpeg/jdcolor.c<br>
gs/jpeg/jdmaster.c<br>
gs/jpeg/jmemmgr.c<br>
gs/jpeg/jmorecfg.h<br>
gs/jpeg/jpegint.h<br>
gs/jpeg/jpeglib.h<br>
gs/jpeg/jpegtran.c<br>
gs/jpeg/jquant1.c<br>
gs/jpeg/jquant2.c<br>
gs/jpeg/jutils.c<br>
gs/jpeg/jversion.h<br>
gs/jpeg/libjpeg.txt<br>
gs/jpeg/ltmain.sh<br>
gs/jpeg/structure.txt<br>
gs/jpeg/transupp.c<br>
gs/jpeg/transupp.h<br>
gs/jpeg/usage.txt<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-11 11:37:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2214fb3da464f702ab4bd46d653aef1c9b69d483">2214fb3da464f702ab4bd46d653aef1c9b69d483</a>
<blockquote>
<p>
    Update zlib to 1.2.7<br>
<br>
    No cluster differences.<br>
<br>
gs/zlib/CMakeLists.txt<br>
gs/zlib/ChangeLog<br>
gs/zlib/FAQ<br>
gs/zlib/INDEX<br>
gs/zlib/Makefile<br>
gs/zlib/Makefile.in<br>
gs/zlib/README<br>
gs/zlib/adler32.c<br>
gs/zlib/algorithm.txt<br>
gs/zlib/amiga/Makefile.pup<br>
gs/zlib/amiga/Makefile.sas<br>
gs/zlib/as400/bndsrc<br>
gs/zlib/as400/compile.clp<br>
gs/zlib/as400/readme.txt<br>
gs/zlib/as400/zlib.inc<br>
gs/zlib/compress.c<br>
gs/zlib/configure<br>
gs/zlib/contrib/README.contrib<br>
gs/zlib/contrib/amd64/amd64-match.S<br>
gs/zlib/contrib/asm586/README.586<br>
gs/zlib/contrib/asm586/match.S<br>
gs/zlib/contrib/asm686/README.686<br>
gs/zlib/contrib/asm686/match.S<br>
gs/zlib/contrib/delphi/ZLib.pas<br>
gs/zlib/contrib/delphi/zlibd32.mak<br>
gs/zlib/contrib/dotzlib/DotZLib.build<br>
gs/zlib/contrib/dotzlib/DotZLib.chm<br>
gs/zlib/contrib/dotzlib/DotZLib/AssemblyInfo.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/CodecBase.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/Deflater.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/DotZLib.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/GZipStream.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/Inflater.cs<br>
gs/zlib/contrib/dotzlib/DotZLib/UnitTests.cs<br>
gs/zlib/contrib/dotzlib/readme.txt<br>
gs/zlib/contrib/gcc_gvmat64/gvmat64.S<br>
gs/zlib/contrib/infback9/infback9.c<br>
gs/zlib/contrib/infback9/inftree9.c<br>
gs/zlib/contrib/infback9/inftree9.h<br>
gs/zlib/contrib/inflate86/inffas86.c<br>
gs/zlib/contrib/masm686/match.asm<br>
gs/zlib/contrib/masmx64/gvmat64.asm<br>
gs/zlib/contrib/masmx64/gvmat64.obj<br>
gs/zlib/contrib/masmx64/inffas8664.c<br>
gs/zlib/contrib/masmx64/inffasx64.asm<br>
gs/zlib/contrib/masmx64/inffasx64.obj<br>
gs/zlib/contrib/masmx64/readme.txt<br>
gs/zlib/contrib/masmx86/bld_ml32.bat<br>
gs/zlib/contrib/masmx86/gvmat32.asm<br>
gs/zlib/contrib/masmx86/gvmat32.obj<br>
gs/zlib/contrib/masmx86/gvmat32c.c<br>
gs/zlib/contrib/masmx86/inffas32.asm<br>
gs/zlib/contrib/masmx86/inffas32.obj<br>
gs/zlib/contrib/masmx86/match686.asm<br>
gs/zlib/contrib/masmx86/mkasm.bat<br>
gs/zlib/contrib/masmx86/readme.txt<br>
gs/zlib/contrib/minizip/ChangeLogUnzip<br>
gs/zlib/contrib/minizip/Makefile.am<br>
gs/zlib/contrib/minizip/MiniZip64_Changes.txt<br>
gs/zlib/contrib/minizip/MiniZip64_info.txt<br>
gs/zlib/contrib/minizip/configure.ac<br>
gs/zlib/contrib/minizip/crypt.h<br>
gs/zlib/contrib/minizip/ioapi.c<br>
gs/zlib/contrib/minizip/ioapi.h<br>
gs/zlib/contrib/minizip/iowin32.c<br>
gs/zlib/contrib/minizip/iowin32.h<br>
gs/zlib/contrib/minizip/make_vms.com<br>
gs/zlib/contrib/minizip/miniunz.c<br>
gs/zlib/contrib/minizip/minizip.c<br>
gs/zlib/contrib/minizip/minizip.pc.in<br>
gs/zlib/contrib/minizip/mztools.c<br>
gs/zlib/contrib/minizip/mztools.h<br>
gs/zlib/contrib/minizip/unzip.c<br>
gs/zlib/contrib/minizip/unzip.h<br>
gs/zlib/contrib/minizip/zip.c<br>
gs/zlib/contrib/minizip/zip.h<br>
gs/zlib/contrib/pascal/zlibd32.mak<br>
gs/zlib/contrib/pascal/zlibpas.pas<br>
gs/zlib/contrib/puff/Makefile<br>
gs/zlib/contrib/puff/puff.c<br>
gs/zlib/contrib/puff/puff.h<br>
gs/zlib/contrib/puff/pufftest.c<br>
gs/zlib/contrib/puff/zeros.raw<br>
gs/zlib/contrib/testzlib/testzlib.c<br>
gs/zlib/contrib/vstudio/readme.txt<br>
gs/zlib/contrib/vstudio/vc10/miniunz.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/miniunz.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/miniunz.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc10/minizip.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/minizip.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/minizip.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc10/testzlib.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/testzlib.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/testzlib.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc10/testzlibdll.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc10/zlib.rc<br>
gs/zlib/contrib/vstudio/vc10/zlibstat.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/zlibstat.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/zlibstat.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc10/zlibvc.def<br>
gs/zlib/contrib/vstudio/vc10/zlibvc.sln<br>
gs/zlib/contrib/vstudio/vc10/zlibvc.vcxproj<br>
gs/zlib/contrib/vstudio/vc10/zlibvc.vcxproj.filters<br>
gs/zlib/contrib/vstudio/vc10/zlibvc.vcxproj.user<br>
gs/zlib/contrib/vstudio/vc7/miniunz.vcproj<br>
gs/zlib/contrib/vstudio/vc7/minizip.vcproj<br>
gs/zlib/contrib/vstudio/vc7/testzlib.vcproj<br>
gs/zlib/contrib/vstudio/vc7/zlib.rc<br>
gs/zlib/contrib/vstudio/vc7/zlibstat.vcproj<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.def<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.sln<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.vcproj<br>
gs/zlib/contrib/vstudio/vc8/miniunz.vcproj<br>
gs/zlib/contrib/vstudio/vc8/minizip.vcproj<br>
gs/zlib/contrib/vstudio/vc8/testzlib.vcproj<br>
gs/zlib/contrib/vstudio/vc8/testzlibdll.vcproj<br>
gs/zlib/contrib/vstudio/vc8/zlib.rc<br>
gs/zlib/contrib/vstudio/vc8/zlibstat.vcproj<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.def<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.sln<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.vcproj<br>
gs/zlib/contrib/vstudio/vc9/miniunz.vcproj<br>
gs/zlib/contrib/vstudio/vc9/minizip.vcproj<br>
gs/zlib/contrib/vstudio/vc9/testzlib.vcproj<br>
gs/zlib/contrib/vstudio/vc9/testzlibdll.vcproj<br>
gs/zlib/contrib/vstudio/vc9/zlib.rc<br>
gs/zlib/contrib/vstudio/vc9/zlibstat.vcproj<br>
gs/zlib/contrib/vstudio/vc9/zlibvc.def<br>
gs/zlib/contrib/vstudio/vc9/zlibvc.sln<br>
gs/zlib/contrib/vstudio/vc9/zlibvc.vcproj<br>
gs/zlib/crc32.c<br>
gs/zlib/crc32.h<br>
gs/zlib/deflate.c<br>
gs/zlib/deflate.h<br>
gs/zlib/doc/algorithm.txt<br>
gs/zlib/doc/rfc1950.txt<br>
gs/zlib/doc/rfc1951.txt<br>
gs/zlib/doc/rfc1952.txt<br>
gs/zlib/doc/txtvsbin.txt<br>
gs/zlib/example.c<br>
gs/zlib/examples/README.examples<br>
gs/zlib/examples/enough.c<br>
gs/zlib/examples/gun.c<br>
gs/zlib/examples/gzlog.c<br>
gs/zlib/examples/gzlog.h<br>
gs/zlib/examples/zlib_how.html<br>
gs/zlib/examples/zpipe.c<br>
gs/zlib/examples/zran.c<br>
gs/zlib/gzclose.c<br>
gs/zlib/gzguts.h<br>
gs/zlib/gzio.c<br>
gs/zlib/gzlib.c<br>
gs/zlib/gzread.c<br>
gs/zlib/gzwrite.c<br>
gs/zlib/infback.c<br>
gs/zlib/inffast.c<br>
gs/zlib/inffast.h<br>
gs/zlib/inffixed.h<br>
gs/zlib/inflate.c<br>
gs/zlib/inflate.h<br>
gs/zlib/inftrees.c<br>
gs/zlib/inftrees.h<br>
gs/zlib/make_vms.com<br>
gs/zlib/minigzip.c<br>
gs/zlib/msdos/Makefile.bor<br>
gs/zlib/msdos/Makefile.dj2<br>
gs/zlib/msdos/Makefile.emx<br>
gs/zlib/msdos/Makefile.msc<br>
gs/zlib/msdos/Makefile.tc<br>
gs/zlib/nintendods/Makefile<br>
gs/zlib/nintendods/README<br>
gs/zlib/old/Makefile.emx<br>
gs/zlib/old/zlib.html<br>
gs/zlib/projects/README.projects<br>
gs/zlib/projects/visualc6/README.txt<br>
gs/zlib/projects/visualc6/example.dsp<br>
gs/zlib/projects/visualc6/minigzip.dsp<br>
gs/zlib/projects/visualc6/zlib.dsp<br>
gs/zlib/projects/visualc6/zlib.dsw<br>
gs/zlib/qnx/package.qpg<br>
gs/zlib/test/example.c<br>
gs/zlib/test/infcover.c<br>
gs/zlib/test/minigzip.c<br>
gs/zlib/treebuild.xml<br>
gs/zlib/trees.c<br>
gs/zlib/trees.h<br>
gs/zlib/uncompr.c<br>
gs/zlib/watcom/watcom_f.mak<br>
gs/zlib/watcom/watcom_l.mak<br>
gs/zlib/win32/DLL_FAQ.txt<br>
gs/zlib/win32/Makefile.bor<br>
gs/zlib/win32/Makefile.emx<br>
gs/zlib/win32/Makefile.gcc<br>
gs/zlib/win32/Makefile.msc<br>
gs/zlib/win32/README-WIN32.txt<br>
gs/zlib/win32/zlib.def<br>
gs/zlib/win32/zlib1.rc<br>
gs/zlib/zconf.h<br>
gs/zlib/zconf.h.cmakein<br>
gs/zlib/zconf.h.in<br>
gs/zlib/zconf.in.h<br>
gs/zlib/zlib.3<br>
gs/zlib/zlib.3.pdf<br>
gs/zlib/zlib.h<br>
gs/zlib/zlib.map<br>
gs/zlib/zlib.pc.cmakein<br>
gs/zlib/zlib.pc.in<br>
gs/zlib/zlib2ansi<br>
gs/zlib/zutil.c<br>
gs/zlib/zutil.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-11 09:11:18 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c419d97583ed1c234d53bd9c0efac2ef9fff320">3c419d97583ed1c234d53bd9c0efac2ef9fff320</a>
<blockquote>
<p>
    Update libtiff to 4.0.1.<br>
<br>
    Remove globals from tif_pixarlog.c<br>
<br>
    Re-apply commit 786269bafff68f1965b1536acef11f25e0cd44d0<br>
<br>
    Also reapply some portability changes to tiffiop.h.<br>
<br>
    No cluster differences.<br>
<br>
gs/tiff/ChangeLog<br>
gs/tiff/HOWTO-RELEASE<br>
gs/tiff/Makefile.am<br>
gs/tiff/Makefile.in<br>
gs/tiff/Makefile.vc<br>
gs/tiff/README<br>
gs/tiff/RELEASE-DATE<br>
gs/tiff/TODO<br>
gs/tiff/VERSION<br>
gs/tiff/aclocal.m4<br>
gs/tiff/autogen.sh<br>
gs/tiff/build/Makefile.am<br>
gs/tiff/build/Makefile.in<br>
gs/tiff/config/config.guess<br>
gs/tiff/config/config.sub<br>
gs/tiff/config/depcomp<br>
gs/tiff/config/install-sh<br>
gs/tiff/config/ltmain.sh<br>
gs/tiff/config/missing<br>
gs/tiff/config/mkinstalldirs<br>
gs/tiff/configure<br>
gs/tiff/configure.ac<br>
gs/tiff/configure.com<br>
gs/tiff/contrib/Makefile.am<br>
gs/tiff/contrib/Makefile.in<br>
gs/tiff/contrib/acorn/Makefile.acorn<br>
gs/tiff/contrib/acorn/Makefile.am<br>
gs/tiff/contrib/acorn/Makefile.in<br>
gs/tiff/contrib/acorn/ReadMe<br>
gs/tiff/contrib/acorn/SetVars<br>
gs/tiff/contrib/acorn/cleanlib<br>
gs/tiff/contrib/acorn/convert<br>
gs/tiff/contrib/acorn/install<br>
gs/tiff/contrib/addtiffo/Makefile.am<br>
gs/tiff/contrib/addtiffo/Makefile.in<br>
gs/tiff/contrib/addtiffo/addtiffo.c<br>
gs/tiff/contrib/addtiffo/tif_overview.c<br>
gs/tiff/contrib/addtiffo/tif_ovrcache.c<br>
gs/tiff/contrib/addtiffo/tif_ovrcache.h<br>
gs/tiff/contrib/dbs/Makefile.am<br>
gs/tiff/contrib/dbs/Makefile.in<br>
gs/tiff/contrib/dbs/tiff-bi.c<br>
gs/tiff/contrib/dbs/tiff-grayscale.c<br>
gs/tiff/contrib/dbs/tiff-palette.c<br>
gs/tiff/contrib/dbs/tiff-rgb.c<br>
gs/tiff/contrib/dbs/xtiff/Makefile.am<br>
gs/tiff/contrib/dbs/xtiff/Makefile.in<br>
gs/tiff/contrib/dbs/xtiff/patchlevel.h<br>
gs/tiff/contrib/dbs/xtiff/xtiff.c<br>
gs/tiff/contrib/dbs/xtiff/xtifficon.h<br>
gs/tiff/contrib/iptcutil/Makefile.in<br>
gs/tiff/contrib/iptcutil/iptcutil.c<br>
gs/tiff/contrib/mac-cw/Makefile.am<br>
gs/tiff/contrib/mac-cw/Makefile.in<br>
gs/tiff/contrib/mac-cw/Makefile.script<br>
gs/tiff/contrib/mac-cw/README<br>
gs/tiff/contrib/mac-cw/mac_main.c<br>
gs/tiff/contrib/mac-cw/mac_main.h<br>
gs/tiff/contrib/mac-cw/metrowerks.note<br>
gs/tiff/contrib/mac-cw/mkg3_main.c<br>
gs/tiff/contrib/mac-cw/version.h<br>
gs/tiff/contrib/mac-mpw/BUILD.mpw<br>
gs/tiff/contrib/mac-mpw/Makefile.am<br>
gs/tiff/contrib/mac-mpw/Makefile.in<br>
gs/tiff/contrib/mac-mpw/README<br>
gs/tiff/contrib/mac-mpw/libtiff.make<br>
gs/tiff/contrib/mac-mpw/mactrans.c<br>
gs/tiff/contrib/mac-mpw/port.make<br>
gs/tiff/contrib/mac-mpw/tools.make<br>
gs/tiff/contrib/mac-mpw/top.make<br>
gs/tiff/contrib/mfs/Makefile.am<br>
gs/tiff/contrib/mfs/Makefile.in<br>
gs/tiff/contrib/mfs/mfs_file.c<br>
gs/tiff/contrib/pds/Makefile.am<br>
gs/tiff/contrib/pds/Makefile.in<br>
gs/tiff/contrib/pds/tif_imageiter.c<br>
gs/tiff/contrib/pds/tif_imageiter.h<br>
gs/tiff/contrib/pds/tif_pdsdirread.c<br>
gs/tiff/contrib/pds/tif_pdsdirwrite.c<br>
gs/tiff/contrib/ras/Makefile.am<br>
gs/tiff/contrib/ras/Makefile.in<br>
gs/tiff/contrib/ras/ras2tif.c<br>
gs/tiff/contrib/ras/tif2ras.c<br>
gs/tiff/contrib/stream/Makefile.am<br>
gs/tiff/contrib/stream/Makefile.in<br>
gs/tiff/contrib/stream/tiffstream.cpp<br>
gs/tiff/contrib/stream/tiffstream.h<br>
gs/tiff/contrib/tags/Makefile.am<br>
gs/tiff/contrib/tags/Makefile.in<br>
gs/tiff/contrib/tags/listtif.c<br>
gs/tiff/contrib/tags/maketif.c<br>
gs/tiff/contrib/tags/xtif_dir.c<br>
gs/tiff/contrib/tags/xtiffio.h<br>
gs/tiff/contrib/tags/xtiffiop.h<br>
gs/tiff/contrib/win_dib/Makefile.am<br>
gs/tiff/contrib/win_dib/Makefile.in<br>
gs/tiff/contrib/win_dib/Tiffile.cpp<br>
gs/tiff/contrib/win_dib/tiff2dib.c<br>
gs/tiff/html/Makefile.am<br>
gs/tiff/html/Makefile.in<br>
gs/tiff/html/bugs.html<br>
gs/tiff/html/build.html<br>
gs/tiff/html/document.html<br>
gs/tiff/html/images/Makefile.in<br>
gs/tiff/html/index.html<br>
gs/tiff/html/man/Makefile.in<br>
gs/tiff/html/man/TIFFClose.3tiff.html<br>
gs/tiff/html/man/TIFFDataWidth.3tiff.html<br>
gs/tiff/html/man/TIFFError.3tiff.html<br>
gs/tiff/html/man/TIFFFlush.3tiff.html<br>
gs/tiff/html/man/TIFFGetField.3tiff.html<br>
gs/tiff/html/man/TIFFOpen.3tiff.html<br>
gs/tiff/html/man/TIFFPrintDirectory.3tiff.html<br>
gs/tiff/html/man/TIFFRGBAImage.3tiff.html<br>
gs/tiff/html/man/TIFFReadDirectory.3tiff.html<br>
gs/tiff/html/man/TIFFReadEncodedStrip.3tiff.html<br>
gs/tiff/html/man/TIFFReadEncodedTile.3tiff.html<br>
gs/tiff/html/man/TIFFReadRGBAImage.3tiff.html<br>
gs/tiff/html/man/TIFFReadRGBAStrip.3tiff.html<br>
gs/tiff/html/man/TIFFReadRGBATile.3tiff.html<br>
gs/tiff/html/man/TIFFReadRawStrip.3tiff.html<br>
gs/tiff/html/man/TIFFReadRawTile.3tiff.html<br>
gs/tiff/html/man/TIFFReadScanline.3tiff.html<br>
gs/tiff/html/man/TIFFReadTile.3tiff.html<br>
gs/tiff/html/man/TIFFSetDirectory.3tiff.html<br>
gs/tiff/html/man/TIFFSetField.3tiff.html<br>
gs/tiff/html/man/TIFFWarning.3tiff.html<br>
gs/tiff/html/man/TIFFWriteDirectory.3tiff.html<br>
gs/tiff/html/man/TIFFWriteEncodedStrip.3tiff.html<br>
gs/tiff/html/man/TIFFWriteEncodedTile.3tiff.html<br>
gs/tiff/html/man/TIFFWriteRawStrip.3tiff.html<br>
gs/tiff/html/man/TIFFWriteRawTile.3tiff.html<br>
gs/tiff/html/man/TIFFWriteScanline.3tiff.html<br>
gs/tiff/html/man/TIFFWriteTile.3tiff.html<br>
gs/tiff/html/man/TIFFbuffer.3tiff.html<br>
gs/tiff/html/man/TIFFcodec.3tiff.html<br>
gs/tiff/html/man/TIFFcolor.3tiff.html<br>
gs/tiff/html/man/TIFFmemory.3tiff.html<br>
gs/tiff/html/man/TIFFquery.3tiff.html<br>
gs/tiff/html/man/TIFFsize.3tiff.html<br>
gs/tiff/html/man/TIFFstrip.3tiff.html<br>
gs/tiff/html/man/TIFFswab.3tiff.html<br>
gs/tiff/html/man/TIFFtile.3tiff.html<br>
gs/tiff/html/man/fax2ps.1.html<br>
gs/tiff/html/man/fax2tiff.1.html<br>
gs/tiff/html/man/gif2tiff.1.html<br>
gs/tiff/html/man/libtiff.3tiff.html<br>
gs/tiff/html/man/pal2rgb.1.html<br>
gs/tiff/html/man/ppm2tiff.1.html<br>
gs/tiff/html/man/ras2tiff.1.html<br>
gs/tiff/html/man/raw2tiff.1.html<br>
gs/tiff/html/man/rgb2ycbcr.1.html<br>
gs/tiff/html/man/sgi2tiff.1.html<br>
gs/tiff/html/man/thumbnail.1.html<br>
gs/tiff/html/man/tiff2bw.1.html<br>
gs/tiff/html/man/tiff2pdf.1.html<br>
gs/tiff/html/man/tiff2ps.1.html<br>
gs/tiff/html/man/tiff2rgba.1.html<br>
gs/tiff/html/man/tiffcmp.1.html<br>
gs/tiff/html/man/tiffcp.1.html<br>
gs/tiff/html/man/tiffcrop.1.html<br>
gs/tiff/html/man/tiffdither.1.html<br>
gs/tiff/html/man/tiffdump.1.html<br>
gs/tiff/html/man/tiffgt.1.html<br>
gs/tiff/html/man/tiffinfo.1.html<br>
gs/tiff/html/man/tiffmedian.1.html<br>
gs/tiff/html/man/tiffset.1.html<br>
gs/tiff/html/man/tiffsplit.1.html<br>
gs/tiff/html/man/tiffsv.1.html<br>
gs/tiff/html/tools.html<br>
gs/tiff/html/v3.9.0beta.html<br>
gs/tiff/html/v3.9.1.html<br>
gs/tiff/html/v3.9.2.html<br>
gs/tiff/html/v4.0.0.html<br>
gs/tiff/libtiff-4.pc.in<br>
gs/tiff/libtiff/Makefile.am<br>
gs/tiff/libtiff/Makefile.in<br>
gs/tiff/libtiff/Makefile.vc<br>
gs/tiff/libtiff/libtiff.def<br>
gs/tiff/libtiff/libtiff.map<br>
gs/tiff/libtiff/libtiffxx.map<br>
gs/tiff/libtiff/mkg3states.c<br>
gs/tiff/libtiff/oog_table.h<br>
gs/tiff/libtiff/t4.h<br>
gs/tiff/libtiff/tif_acorn.c<br>
gs/tiff/libtiff/tif_apple.c<br>
gs/tiff/libtiff/tif_atari.c<br>
gs/tiff/libtiff/tif_aux.c<br>
gs/tiff/libtiff/tif_close.c<br>
gs/tiff/libtiff/tif_codec.c<br>
gs/tiff/libtiff/tif_color.c<br>
gs/tiff/libtiff/tif_compress.c<br>
gs/tiff/libtiff/tif_config.h.in<br>
gs/tiff/libtiff/tif_config.vc.h<br>
gs/tiff/libtiff/tif_config.wince.h<br>
gs/tiff/libtiff/tif_dir.c<br>
gs/tiff/libtiff/tif_dir.h<br>
gs/tiff/libtiff/tif_dirinfo.c<br>
gs/tiff/libtiff/tif_dirread.c<br>
gs/tiff/libtiff/tif_dirwrite.c<br>
gs/tiff/libtiff/tif_dumpmode.c<br>
gs/tiff/libtiff/tif_error.c<br>
gs/tiff/libtiff/tif_extension.c<br>
gs/tiff/libtiff/tif_fax3.c<br>
gs/tiff/libtiff/tif_fax3.h<br>
gs/tiff/libtiff/tif_fax3sm.c<br>
gs/tiff/libtiff/tif_flush.c<br>
gs/tiff/libtiff/tif_getimage.c<br>
gs/tiff/libtiff/tif_jbig.c<br>
gs/tiff/libtiff/tif_jpeg.c<br>
gs/tiff/libtiff/tif_jpeg_12.c<br>
gs/tiff/libtiff/tif_luv.c<br>
gs/tiff/libtiff/tif_lzma.c<br>
gs/tiff/libtiff/tif_lzw.c<br>
gs/tiff/libtiff/tif_msdos.c<br>
gs/tiff/libtiff/tif_next.c<br>
gs/tiff/libtiff/tif_ojpeg.c<br>
gs/tiff/libtiff/tif_open.c<br>
gs/tiff/libtiff/tif_packbits.c<br>
gs/tiff/libtiff/tif_pixarlog.c<br>
gs/tiff/libtiff/tif_predict.c<br>
gs/tiff/libtiff/tif_predict.h<br>
gs/tiff/libtiff/tif_print.c<br>
gs/tiff/libtiff/tif_read.c<br>
gs/tiff/libtiff/tif_stream.cxx<br>
gs/tiff/libtiff/tif_strip.c<br>
gs/tiff/libtiff/tif_swab.c<br>
gs/tiff/libtiff/tif_thunder.c<br>
gs/tiff/libtiff/tif_tile.c<br>
gs/tiff/libtiff/tif_unix.c<br>
gs/tiff/libtiff/tif_version.c<br>
gs/tiff/libtiff/tif_warning.c<br>
gs/tiff/libtiff/tif_win3.c<br>
gs/tiff/libtiff/tif_win32.c<br>
gs/tiff/libtiff/tif_write.c<br>
gs/tiff/libtiff/tif_zip.c<br>
gs/tiff/libtiff/tiff.h<br>
gs/tiff/libtiff/tiffconf.h.in<br>
gs/tiff/libtiff/tiffconf.vc.h<br>
gs/tiff/libtiff/tiffconf.wince.h<br>
gs/tiff/libtiff/tiffio.h<br>
gs/tiff/libtiff/tiffio.hxx<br>
gs/tiff/libtiff/tiffiop.h<br>
gs/tiff/libtiff/tiffvers.h<br>
gs/tiff/libtiff/uvcode.h<br>
gs/tiff/m4/acinclude.m4<br>
gs/tiff/m4/libtool.m4<br>
gs/tiff/m4/ltoptions.m4<br>
gs/tiff/m4/ltversion.m4<br>
gs/tiff/m4/lt~obsolete.m4<br>
gs/tiff/man/Makefile.in<br>
gs/tiff/man/TIFFClose.3tiff<br>
gs/tiff/man/TIFFDataWidth.3tiff<br>
gs/tiff/man/TIFFError.3tiff<br>
gs/tiff/man/TIFFFlush.3tiff<br>
gs/tiff/man/TIFFGetField.3tiff<br>
gs/tiff/man/TIFFOpen.3tiff<br>
gs/tiff/man/TIFFPrintDirectory.3tiff<br>
gs/tiff/man/TIFFRGBAImage.3tiff<br>
gs/tiff/man/TIFFReadDirectory.3tiff<br>
gs/tiff/man/TIFFReadEncodedStrip.3tiff<br>
gs/tiff/man/TIFFReadEncodedTile.3tiff<br>
gs/tiff/man/TIFFReadRGBAImage.3tiff<br>
gs/tiff/man/TIFFReadRGBAStrip.3tiff<br>
gs/tiff/man/TIFFReadRGBATile.3tiff<br>
gs/tiff/man/TIFFReadRawStrip.3tiff<br>
gs/tiff/man/TIFFReadRawTile.3tiff<br>
gs/tiff/man/TIFFReadScanline.3tiff<br>
gs/tiff/man/TIFFReadTile.3tiff<br>
gs/tiff/man/TIFFSetDirectory.3tiff<br>
gs/tiff/man/TIFFSetField.3tiff<br>
gs/tiff/man/TIFFWarning.3tiff<br>
gs/tiff/man/TIFFWriteDirectory.3tiff<br>
gs/tiff/man/TIFFWriteEncodedStrip.3tiff<br>
gs/tiff/man/TIFFWriteEncodedTile.3tiff<br>
gs/tiff/man/TIFFWriteRawStrip.3tiff<br>
gs/tiff/man/TIFFWriteRawTile.3tiff<br>
gs/tiff/man/TIFFWriteScanline.3tiff<br>
gs/tiff/man/TIFFWriteTile.3tiff<br>
gs/tiff/man/TIFFbuffer.3tiff<br>
gs/tiff/man/TIFFcodec.3tiff<br>
gs/tiff/man/TIFFcolor.3tiff<br>
gs/tiff/man/TIFFmemory.3tiff<br>
gs/tiff/man/TIFFquery.3tiff<br>
gs/tiff/man/TIFFsize.3tiff<br>
gs/tiff/man/TIFFstrip.3tiff<br>
gs/tiff/man/TIFFswab.3tiff<br>
gs/tiff/man/TIFFtile.3tiff<br>
gs/tiff/man/bmp2tiff.1<br>
gs/tiff/man/fax2ps.1<br>
gs/tiff/man/fax2tiff.1<br>
gs/tiff/man/gif2tiff.1<br>
gs/tiff/man/libtiff.3tiff<br>
gs/tiff/man/pal2rgb.1<br>
gs/tiff/man/ppm2tiff.1<br>
gs/tiff/man/ras2tiff.1<br>
gs/tiff/man/raw2tiff.1<br>
gs/tiff/man/rgb2ycbcr.1<br>
gs/tiff/man/sgi2tiff.1<br>
gs/tiff/man/thumbnail.1<br>
gs/tiff/man/tiff2bw.1<br>
gs/tiff/man/tiff2pdf.1<br>
gs/tiff/man/tiff2ps.1<br>
gs/tiff/man/tiff2rgba.1<br>
gs/tiff/man/tiffcmp.1<br>
gs/tiff/man/tiffcp.1<br>
gs/tiff/man/tiffcrop.1<br>
gs/tiff/man/tiffdither.1<br>
gs/tiff/man/tiffdump.1<br>
gs/tiff/man/tiffgt.1<br>
gs/tiff/man/tiffinfo.1<br>
gs/tiff/man/tiffmedian.1<br>
gs/tiff/man/tiffset.1<br>
gs/tiff/man/tiffsplit.1<br>
gs/tiff/man/tiffsv.1<br>
gs/tiff/port/Makefile.am<br>
gs/tiff/port/Makefile.in<br>
gs/tiff/port/dummy.c<br>
gs/tiff/port/getopt.c<br>
gs/tiff/port/libport.h<br>
gs/tiff/port/strcasecmp.c<br>
gs/tiff/port/strtoull.c<br>
gs/tiff/test/Makefile.am<br>
gs/tiff/test/Makefile.in<br>
gs/tiff/test/ascii_tag.c<br>
gs/tiff/test/bmp2tiff_palette.sh<br>
gs/tiff/test/bmp2tiff_rgb.sh<br>
gs/tiff/test/check_tag.c<br>
gs/tiff/test/common.sh<br>
gs/tiff/test/gif2tiff.sh<br>
gs/tiff/test/images/README.txt<br>
gs/tiff/test/images/logluv-3c-16b.tiff<br>
gs/tiff/test/images/minisblack-1c-16b.tiff<br>
gs/tiff/test/images/minisblack-1c-8b.pgm<br>
gs/tiff/test/images/minisblack-1c-8b.tiff<br>
gs/tiff/test/images/minisblack-2c-8b-alpha.tiff<br>
gs/tiff/test/images/miniswhite-1c-1b.pbm<br>
gs/tiff/test/images/miniswhite-1c-1b.tiff<br>
gs/tiff/test/images/palette-1c-1b.tiff<br>
gs/tiff/test/images/palette-1c-4b.tiff<br>
gs/tiff/test/images/palette-1c-8b.bmp<br>
gs/tiff/test/images/palette-1c-8b.gif<br>
gs/tiff/test/images/palette-1c-8b.tiff<br>
gs/tiff/test/images/rgb-3c-16b.tiff<br>
gs/tiff/test/images/rgb-3c-8b.bmp<br>
gs/tiff/test/images/rgb-3c-8b.ppm<br>
gs/tiff/test/images/rgb-3c-8b.tiff<br>
gs/tiff/test/long_tag.c<br>
gs/tiff/test/ppm2tiff_pbm.sh<br>
gs/tiff/test/ppm2tiff_pgm.sh<br>
gs/tiff/test/ppm2tiff_ppm.sh<br>
gs/tiff/test/rewrite_tag.c<br>
gs/tiff/test/short_tag.c<br>
gs/tiff/test/strip.c<br>
gs/tiff/test/strip_rw.c<br>
gs/tiff/test/tiff2pdf.sh<br>
gs/tiff/test/tiff2ps-EPS1.sh<br>
gs/tiff/test/tiff2ps-PS1.sh<br>
gs/tiff/test/tiff2ps-PS2.sh<br>
gs/tiff/test/tiff2ps-PS3.sh<br>
gs/tiff/test/tiff2rgba-logluv-3c-16b.sh<br>
gs/tiff/test/tiff2rgba-minisblack-1c-16b.sh<br>
gs/tiff/test/tiff2rgba-minisblack-1c-8b.sh<br>
gs/tiff/test/tiff2rgba-minisblack-2c-8b-alpha.sh<br>
gs/tiff/test/tiff2rgba-miniswhite-1c-1b.sh<br>
gs/tiff/test/tiff2rgba-palette-1c-1b.sh<br>
gs/tiff/test/tiff2rgba-palette-1c-4b.sh<br>
gs/tiff/test/tiff2rgba-palette-1c-8b.sh<br>
gs/tiff/test/tiff2rgba-rgb-3c-16b.sh<br>
gs/tiff/test/tiff2rgba-rgb-3c-8b.sh<br>
gs/tiff/test/tiffcp-g3-1d-fill.sh<br>
gs/tiff/test/tiffcp-g3-1d.sh<br>
gs/tiff/test/tiffcp-g3-2d-fill.sh<br>
gs/tiff/test/tiffcp-g3-2d.sh<br>
gs/tiff/test/tiffcp-g3.sh<br>
gs/tiff/test/tiffcp-g4.sh<br>
gs/tiff/test/tiffcp-logluv.sh<br>
gs/tiff/test/tiffcp-split-join.sh<br>
gs/tiff/test/tiffcp-split.sh<br>
gs/tiff/test/tiffcp-thumbnail.sh<br>
gs/tiff/test/tiffcrop-R90-logluv-3c-16b.sh<br>
gs/tiff/test/tiffcrop-R90-minisblack-1c-16b.sh<br>
gs/tiff/test/tiffcrop-R90-minisblack-1c-8b.sh<br>
gs/tiff/test/tiffcrop-R90-minisblack-2c-8b-alpha.sh<br>
gs/tiff/test/tiffcrop-R90-miniswhite-1c-1b.sh<br>
gs/tiff/test/tiffcrop-R90-palette-1c-1b.sh<br>
gs/tiff/test/tiffcrop-R90-palette-1c-4b.sh<br>
gs/tiff/test/tiffcrop-R90-palette-1c-8b.sh<br>
gs/tiff/test/tiffcrop-R90-rgb-3c-16b.sh<br>
gs/tiff/test/tiffcrop-R90-rgb-3c-8b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-logluv-3c-16b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-minisblack-1c-16b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-minisblack-1c-8b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-minisblack-2c-8b-alpha.sh<br>
gs/tiff/test/tiffcrop-doubleflip-miniswhite-1c-1b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-palette-1c-1b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-palette-1c-4b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-palette-1c-8b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-rgb-3c-16b.sh<br>
gs/tiff/test/tiffcrop-doubleflip-rgb-3c-8b.sh<br>
gs/tiff/test/tiffcrop-extract-logluv-3c-16b.sh<br>
gs/tiff/test/tiffcrop-extract-minisblack-1c-16b.sh<br>
gs/tiff/test/tiffcrop-extract-minisblack-1c-8b.sh<br>
gs/tiff/test/tiffcrop-extract-minisblack-2c-8b-alpha.sh<br>
gs/tiff/test/tiffcrop-extract-miniswhite-1c-1b.sh<br>
gs/tiff/test/tiffcrop-extract-palette-1c-1b.sh<br>
gs/tiff/test/tiffcrop-extract-palette-1c-4b.sh<br>
gs/tiff/test/tiffcrop-extract-palette-1c-8b.sh<br>
gs/tiff/test/tiffcrop-extract-rgb-3c-16b.sh<br>
gs/tiff/test/tiffcrop-extract-rgb-3c-8b.sh<br>
gs/tiff/test/tiffcrop-extractz14-logluv-3c-16b.sh<br>
gs/tiff/test/tiffcrop-extractz14-minisblack-1c-16b.sh<br>
gs/tiff/test/tiffcrop-extractz14-minisblack-1c-8b.sh<br>
gs/tiff/test/tiffcrop-extractz14-minisblack-2c-8b-alpha.sh<br>
gs/tiff/test/tiffcrop-extractz14-miniswhite-1c-1b.sh<br>
gs/tiff/test/tiffcrop-extractz14-palette-1c-1b.sh<br>
gs/tiff/test/tiffcrop-extractz14-palette-1c-4b.sh<br>
gs/tiff/test/tiffcrop-extractz14-palette-1c-8b.sh<br>
gs/tiff/test/tiffcrop-extractz14-rgb-3c-16b.sh<br>
gs/tiff/test/tiffcrop-extractz14-rgb-3c-8b.sh<br>
gs/tiff/test/tiffdump.sh<br>
gs/tiff/test/tiffinfo.sh<br>
gs/tiff/test/tifftest.h<br>
gs/tiff/tools/Makefile.am<br>
gs/tiff/tools/Makefile.in<br>
gs/tiff/tools/Makefile.vc<br>
gs/tiff/tools/bmp2tiff.c<br>
gs/tiff/tools/fax2ps.c<br>
gs/tiff/tools/fax2tiff.c<br>
gs/tiff/tools/gif2tiff.c<br>
gs/tiff/tools/pal2rgb.c<br>
gs/tiff/tools/ppm2tiff.c<br>
gs/tiff/tools/ras2tiff.c<br>
gs/tiff/tools/rasterfile.h<br>
gs/tiff/tools/raw2tiff.c<br>
gs/tiff/tools/rgb2ycbcr.c<br>
gs/tiff/tools/sgi2tiff.c<br>
gs/tiff/tools/sgisv.c<br>
gs/tiff/tools/thumbnail.c<br>
gs/tiff/tools/tiff2bw.c<br>
gs/tiff/tools/tiff2pdf.c<br>
gs/tiff/tools/tiff2ps.c<br>
gs/tiff/tools/tiff2rgba.c<br>
gs/tiff/tools/tiffcmp.c<br>
gs/tiff/tools/tiffcp.c<br>
gs/tiff/tools/tiffcrop.c<br>
gs/tiff/tools/tiffdither.c<br>
gs/tiff/tools/tiffdump.c<br>
gs/tiff/tools/tiffgt.c<br>
gs/tiff/tools/tiffinfo.c<br>
gs/tiff/tools/tiffmedian.c<br>
gs/tiff/tools/tiffset.c<br>
gs/tiff/tools/tiffsplit.c<br>
gs/tiff/tools/ycbcr.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-09 01:16:35 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63a26299f47bb9931a2b47772c95c38594535041">63a26299f47bb9931a2b47772c95c38594535041</a>
<blockquote>
<p>
    Update the example build line given at the top of bmpcmp.c<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-07 17:21:55 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3cb19e101513e8fa99f86e959a493d7d57b9a69a">3cb19e101513e8fa99f86e959a493d7d57b9a69a</a>
<blockquote>
<p>
    Indentation fixes, plus avoid SEGVs in low memory cases.<br>
<br>
    If allocations fail, spot that and return an error rather than<br>
    dereferencing NULL pointers.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-08 15:51:43 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e0fd2c6fe5cdba60e0252993319408ce8962afd3">e0fd2c6fe5cdba60e0252993319408ce8962afd3</a>
<blockquote>
<p>
    Enable Memento to be used with jbig2dec<br>
<br>
    ./configure as usual, then &quot;make XCFLAGS=-DMEMENTO&quot;.<br>
<br>
    This involves duplicating memento within jbig2dec. We disable the GS<br>
    specific build hacks, and add just one more; if GSBUILD is defined<br>
    then jbig2 uses the version of memento from base, rather than the version<br>
    of memento from inside jbig2. This avoids any potential problems with<br>
    version skew.<br>
<br>
gs/base/jbig2.mak<br>
gs/jbig2dec/Makefile.in<br>
gs/jbig2dec/jbig2.h<br>
gs/jbig2dec/memento.c<br>
gs/jbig2dec/memento.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-08 13:02:43 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d7d86ee955e58d18f4ff3071c0f41c4e3f75aaea">d7d86ee955e58d18f4ff3071c0f41c4e3f75aaea</a>
<blockquote>
<p>
    Update libpng to version 1.5.10<br>
<br>
    Minor build revisions to deal with new libpng version:<br>
<br>
    We copy the predefined pnglibconf.h into the build directory, and have<br>
    libpng include it from there (it's less invasive than running the libpng<br>
    configure script).<br>
<br>
    We have to use the same kind of compiler incantation as lcms.mak because<br>
    libpng 1.5.x suffers compatibility problems with /Za in Visual Studio<br>
    as lcms does.<br>
<br>
    Minor revision to XPS png reading code to cope with libpng 1.5.x API:<br>
<br>
    Primarily, the 1.5.x API has made the png_info data type opaque to the calling<br>
    code, so all access to the it contains *must* be done through function calls.<br>
<br>
    No cluster differences expected.<br>
<br>
gs/base/png.mak<br>
gs/libpng/ANNOUNCE<br>
gs/libpng/CHANGES<br>
gs/libpng/CMakeLists.txt<br>
gs/libpng/INSTALL<br>
gs/libpng/KNOWNBUG<br>
gs/libpng/LICENSE<br>
gs/libpng/Makefile.am<br>
gs/libpng/Makefile.in<br>
gs/libpng/README<br>
gs/libpng/TODO<br>
gs/libpng/Y2KINFO<br>
gs/libpng/aclocal.m4<br>
gs/libpng/arm/filter_neon.S<br>
gs/libpng/autogen.sh<br>
gs/libpng/config.guess<br>
gs/libpng/config.h.in<br>
gs/libpng/config.sub<br>
gs/libpng/configure<br>
gs/libpng/configure.ac<br>
gs/libpng/contrib/README.txt<br>
gs/libpng/contrib/gregbook/COPYING<br>
gs/libpng/contrib/gregbook/Makefile.sgi<br>
gs/libpng/contrib/gregbook/Makefile.unx<br>
gs/libpng/contrib/gregbook/Makefile.w32<br>
gs/libpng/contrib/gregbook/README<br>
gs/libpng/contrib/gregbook/makevms.com<br>
gs/libpng/contrib/gregbook/readpng.c<br>
gs/libpng/contrib/gregbook/readpng2.c<br>
gs/libpng/contrib/gregbook/readpng2.h<br>
gs/libpng/contrib/gregbook/rpng-win.c<br>
gs/libpng/contrib/gregbook/rpng-x.c<br>
gs/libpng/contrib/gregbook/rpng2-win.c<br>
gs/libpng/contrib/gregbook/rpng2-x.c<br>
gs/libpng/contrib/gregbook/writepng.c<br>
gs/libpng/contrib/libtests/pngvalid.c<br>
gs/libpng/contrib/pngminim/README<br>
gs/libpng/contrib/pngminim/decoder/README<br>
gs/libpng/contrib/pngminim/decoder/gather.sh<br>
gs/libpng/contrib/pngminim/decoder/makefile<br>
gs/libpng/contrib/pngminim/decoder/pngusr.dfa<br>
gs/libpng/contrib/pngminim/decoder/pngusr.h<br>
gs/libpng/contrib/pngminim/encoder/README<br>
gs/libpng/contrib/pngminim/encoder/dummy_inflate.c<br>
gs/libpng/contrib/pngminim/encoder/gather.sh<br>
gs/libpng/contrib/pngminim/encoder/makefile<br>
gs/libpng/contrib/pngminim/encoder/pngusr.dfa<br>
gs/libpng/contrib/pngminim/encoder/pngusr.h<br>
gs/libpng/contrib/pngminim/preader/README<br>
gs/libpng/contrib/pngminim/preader/gather.sh<br>
gs/libpng/contrib/pngminim/preader/makefile<br>
gs/libpng/contrib/pngminim/preader/pngusr.dfa<br>
gs/libpng/contrib/pngminim/preader/pngusr.h<br>
gs/libpng/contrib/pngminus/makefile.std<br>
gs/libpng/contrib/pngminus/png2pnm.c<br>
gs/libpng/contrib/pngsuite/README<br>
gs/libpng/contrib/pngsuite/ftbbn1g04.png<br>
gs/libpng/contrib/pngsuite/ftbbn2c16.png<br>
gs/libpng/contrib/pngsuite/ftbbn3p08.png<br>
gs/libpng/contrib/pngsuite/ftbgn2c16.png<br>
gs/libpng/contrib/pngsuite/ftbgn3p08.png<br>
gs/libpng/contrib/pngsuite/ftbrn2c08.png<br>
gs/libpng/contrib/pngsuite/ftbwn1g16.png<br>
gs/libpng/contrib/pngsuite/ftbwn3p08.png<br>
gs/libpng/contrib/pngsuite/ftbyn3p08.png<br>
gs/libpng/contrib/pngsuite/ftp0n1g08.png<br>
gs/libpng/contrib/pngsuite/ftp0n2c08.png<br>
gs/libpng/contrib/pngsuite/ftp0n3p08.png<br>
gs/libpng/contrib/pngsuite/ftp1n3p08.png<br>
gs/libpng/contrib/visupng/PngFile.c<br>
gs/libpng/contrib/visupng/PngFile.h<br>
gs/libpng/contrib/visupng/README.txt<br>
gs/libpng/contrib/visupng/VisualPng.c<br>
gs/libpng/contrib/visupng/VisualPng.dsp<br>
gs/libpng/contrib/visupng/resource.h<br>
gs/libpng/depcomp<br>
gs/libpng/example.c<br>
gs/libpng/install-sh<br>
gs/libpng/libpng-1.2.42.txt<br>
gs/libpng/libpng-1.2.44.txt<br>
gs/libpng/libpng-config.in<br>
gs/libpng/libpng-manual.txt<br>
gs/libpng/libpng.3<br>
gs/libpng/libpng.pc.in<br>
gs/libpng/libpngpf.3<br>
gs/libpng/ltmain.sh<br>
gs/libpng/mkinstalldirs<br>
gs/libpng/png.5<br>
gs/libpng/png.c<br>
gs/libpng/png.h<br>
gs/libpng/pngconf.h<br>
gs/libpng/pngdebug.h<br>
gs/libpng/pngerror.c<br>
gs/libpng/pnggccrd.c<br>
gs/libpng/pngget.c<br>
gs/libpng/pnginfo.h<br>
gs/libpng/pngmem.c<br>
gs/libpng/pngpread.c<br>
gs/libpng/pngpriv.h<br>
gs/libpng/pngread.c<br>
gs/libpng/pngrio.c<br>
gs/libpng/pngrtran.c<br>
gs/libpng/pngrutil.c<br>
gs/libpng/pngset.c<br>
gs/libpng/pngstruct.h<br>
gs/libpng/pngtest.c<br>
gs/libpng/pngtest.png<br>
gs/libpng/pngtrans.c<br>
gs/libpng/pngusr.dfa<br>
gs/libpng/pngvcrd.c<br>
gs/libpng/pngwio.c<br>
gs/libpng/pngwrite.c<br>
gs/libpng/pngwtran.c<br>
gs/libpng/pngwutil.c<br>
gs/libpng/projects/beos/x86-shared.proj<br>
gs/libpng/projects/beos/x86-shared.txt<br>
gs/libpng/projects/beos/x86-static.proj<br>
gs/libpng/projects/beos/x86-static.txt<br>
gs/libpng/projects/cbuilder5/libpng.bpf<br>
gs/libpng/projects/cbuilder5/libpng.bpg<br>
gs/libpng/projects/cbuilder5/libpng.bpr<br>
gs/libpng/projects/cbuilder5/libpng.cpp<br>
gs/libpng/projects/cbuilder5/libpng.readme.txt<br>
gs/libpng/projects/cbuilder5/libpngstat.bpf<br>
gs/libpng/projects/cbuilder5/libpngstat.bpr<br>
gs/libpng/projects/cbuilder5/zlib.readme.txt<br>
gs/libpng/projects/netware.txt<br>
gs/libpng/projects/owatcom/libpng.tgt<br>
gs/libpng/projects/owatcom/libpng.wpj<br>
gs/libpng/projects/owatcom/pngconfig.mak<br>
gs/libpng/projects/owatcom/pngtest.tgt<br>
gs/libpng/projects/owatcom/pngvalid.tgt<br>
gs/libpng/projects/visualc6/README.txt<br>
gs/libpng/projects/visualc6/libpng.dsp<br>
gs/libpng/projects/visualc6/libpng.dsw<br>
gs/libpng/projects/visualc6/pngtest.dsp<br>
gs/libpng/projects/visualc71/PRJ0041.mak<br>
gs/libpng/projects/visualc71/README.txt<br>
gs/libpng/projects/visualc71/README_zlib.txt<br>
gs/libpng/projects/visualc71/libpng.sln<br>
gs/libpng/projects/visualc71/libpng.vcproj<br>
gs/libpng/projects/visualc71/pngtest.vcproj<br>
gs/libpng/projects/visualc71/zlib.vcproj<br>
gs/libpng/projects/vstudio/libpng/libpng.vcxproj<br>
gs/libpng/projects/vstudio/pnglibconf/pnglibconf.vcxproj<br>
gs/libpng/projects/vstudio/pngtest/pngtest.vcxproj<br>
gs/libpng/projects/vstudio/pngvalid/pngvalid.vcxproj<br>
gs/libpng/projects/vstudio/readme.txt<br>
gs/libpng/projects/vstudio/vstudio.sln<br>
gs/libpng/projects/vstudio/zlib.props<br>
gs/libpng/projects/vstudio/zlib/zlib.vcxproj<br>
gs/libpng/projects/wince.txt<br>
gs/libpng/projects/xcode/Info.plist<br>
gs/libpng/projects/xcode/libpng.xcodeproj/.gitignore<br>
gs/libpng/projects/xcode/libpng.xcodeproj/project.pbxproj<br>
gs/libpng/scripts/README.txt<br>
gs/libpng/scripts/checksym.awk<br>
gs/libpng/scripts/chkfmt<br>
gs/libpng/scripts/def.dfn<br>
gs/libpng/scripts/descrip.mms<br>
gs/libpng/scripts/libpng-config-head.in<br>
gs/libpng/scripts/libpng-config.in<br>
gs/libpng/scripts/libpng.icc<br>
gs/libpng/scripts/libpng.pc-configure.in<br>
gs/libpng/scripts/libpng.pc.in<br>
gs/libpng/scripts/makefile.32sunu<br>
gs/libpng/scripts/makefile.64sunu<br>
gs/libpng/scripts/makefile.acorn<br>
gs/libpng/scripts/makefile.aix<br>
gs/libpng/scripts/makefile.amiga<br>
gs/libpng/scripts/makefile.atari<br>
gs/libpng/scripts/makefile.bc32<br>
gs/libpng/scripts/makefile.beos<br>
gs/libpng/scripts/makefile.bor<br>
gs/libpng/scripts/makefile.cegcc<br>
gs/libpng/scripts/makefile.cygwin<br>
gs/libpng/scripts/makefile.darwin<br>
gs/libpng/scripts/makefile.dec<br>
gs/libpng/scripts/makefile.dj2<br>
gs/libpng/scripts/makefile.elf<br>
gs/libpng/scripts/makefile.freebsd<br>
gs/libpng/scripts/makefile.gcc<br>
gs/libpng/scripts/makefile.gcmmx<br>
gs/libpng/scripts/makefile.hp64<br>
gs/libpng/scripts/makefile.hpgcc<br>
gs/libpng/scripts/makefile.hpux<br>
gs/libpng/scripts/makefile.ibmc<br>
gs/libpng/scripts/makefile.intel<br>
gs/libpng/scripts/makefile.knr<br>
gs/libpng/scripts/makefile.linux<br>
gs/libpng/scripts/makefile.mingw<br>
gs/libpng/scripts/makefile.mips<br>
gs/libpng/scripts/makefile.msc<br>
gs/libpng/scripts/makefile.ne12bsd<br>
gs/libpng/scripts/makefile.netbsd<br>
gs/libpng/scripts/makefile.nommx<br>
gs/libpng/scripts/makefile.openbsd<br>
gs/libpng/scripts/makefile.os2<br>
gs/libpng/scripts/makefile.sco<br>
gs/libpng/scripts/makefile.sggcc<br>
gs/libpng/scripts/makefile.sgi<br>
gs/libpng/scripts/makefile.so9<br>
gs/libpng/scripts/makefile.solaris<br>
gs/libpng/scripts/makefile.solaris-x86<br>
gs/libpng/scripts/makefile.std<br>
gs/libpng/scripts/makefile.sunos<br>
gs/libpng/scripts/makefile.tc3<br>
gs/libpng/scripts/makefile.vcawin32<br>
gs/libpng/scripts/makefile.vcwin32<br>
gs/libpng/scripts/makefile.watcom<br>
gs/libpng/scripts/makevms.com<br>
gs/libpng/scripts/options.awk<br>
gs/libpng/scripts/png32ce.def<br>
gs/libpng/scripts/pnglibconf.dfa<br>
gs/libpng/scripts/pnglibconf.h.prebuilt<br>
gs/libpng/scripts/pnglibconf.mak<br>
gs/libpng/scripts/pngos2.def<br>
gs/libpng/scripts/pngw32.def<br>
gs/libpng/scripts/pngw32.rc<br>
gs/libpng/scripts/pngwin.rc<br>
gs/libpng/scripts/smakefile.ppc<br>
gs/libpng/scripts/sym.dfn<br>
gs/libpng/scripts/symbols.def<br>
gs/libpng/scripts/symbols.dfn<br>
gs/libpng/scripts/vers.dfn<br>
gs/libpng/test-pngtest.sh<br>
gs/libpng/test-pngvalid-full.sh<br>
gs/libpng/test-pngvalid-simple.sh<br>
xps/xpspng.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-08 13:21:44 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a85db51fecf74ba66bada63afece1799d58681ce">a85db51fecf74ba66bada63afece1799d58681ce</a>
<blockquote>
<p>
    Update bmpcmp png reading to cope with 8bit grayscale pngs.<br>
<br>
    This used to work, but became broken with the device n support (when I<br>
    stripped out the 8bpp operating modes)<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-08 11:05:52 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=304d22a1744fa6ac07355703069cacd54f0c3ac4">304d22a1744fa6ac07355703069cacd54f0c3ac4</a>
<blockquote>
<p>
    Move 'HighLevelDevice' from pdfwrite to gdevvec.c so vector devices inherit it.<br>
<br>
    The 'HighLevelDevice' parameter was only defined for pdfwrite/ps2write, here<br>
    we remove it from there and instead put it in the 'vector' device, so that<br>
    all deices based on the vector device will have the paramter set.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevvec.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-07 16:47:10 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c8138bc1db9b3627a2ba1047568c385568061d0">1c8138bc1db9b3627a2ba1047568c385568061d0</a>
<blockquote>
<p>
    pdfwrite - fix handling of transparent images from PDF interpreter<br>
<br>
    The PDF interperter can insert extra groups when dealing with transparent<br>
    images, which we don't want to emit in the output PDF. These are marked<br>
    by a 'image_with_SMask' flag.<br>
<br>
    Previously we stored a boolean in the device structure, and tested that, if<br>
    it was true we skipped the begin and transparency group operations.<br>
<br>
    It turns out that it is possible to get a new group *inside* the generated<br>
    group we are skipping, if that happens then the second group would reset<br>
    the flag. This led to us skipping the 'begin' but not the 'end' with predictabley<br>
    bad consequences.<br>
<br>
    In this commit we alter the boolena to an  unsigned int, and treat it as a<br>
    series of bits. We flip the bits based on the 'FormDepth' which we track<br>
    separately. This allows up to 32 levels of nesting which ought to be enough<br>
    to deal even with Cairo files.<br>
<br>
    Expected differences<br>
    Bug689897.pdf exhibits small differences, not visually apparent. I believe this<br>
    is a progression but its so slight as to be difficult to tell.<br>
<br>
gs/base/gdevpdft.c<br>
gs/base/gdevpdfx.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-07 13:20:08 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=683bcefa2a8a05fb57d2d0d2d7aebf16de6bd11d">683bcefa2a8a05fb57d2d0d2d7aebf16de6bd11d</a>
<blockquote>
<p>
    Add new '--debug=gc-disable' flag to completely disable gc.<br>
<br>
    Because I don't have any more hair to pull out.<br>
<br>
gs/base/gdbflags.h<br>
gs/psi/interp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 23:02:15 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb4f815d9b21a42280acb7ad2447ce69577b4ae5">eb4f815d9b21a42280acb7ad2447ce69577b4ae5</a>
<blockquote>
<p>
    Fix pdf14_push_transparency_state stack handling.<br>
<br>
    Rather than creating a new mask and adding it as the previous one,<br>
    we should be making the new mask the topmost one on the stack.<br>
<br>
    This way pop and push correctly do the opposite thing.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 17:16:53 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6d24d5b9135f8ef6aa4da51a03952d5b39beb59a">6d24d5b9135f8ef6aa4da51a03952d5b39beb59a</a>
<blockquote>
<p>
     Bug 693050 : Fixes CERT reported issue labelled HeapError<br>
<br>
gs/jbig2dec/jbig2.c<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_metadata.c<br>
gs/jbig2dec/jbig2_priv.h<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 10:48:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a0c6b9f271d715f122c01fc0fbbfd8d6cdf9c372">a0c6b9f271d715f122c01fc0fbbfd8d6cdf9c372</a>
<blockquote>
<p>
    Bug 693002 (again): fix doc and example file install list<br>
<br>
    There were a number of missing files from the Unix install targets for<br>
    the documentation and example files. Also, there were a few files in the<br>
    list which no longer exist.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/unixinst.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 09:23:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=07799bffd70992116da89ed4d1717ce441f71461">07799bffd70992116da89ed4d1717ce441f71461</a>
<blockquote>
<p>
    Bug 693094 related: missing libtiff build failure.<br>
<br>
    If libtiff is missing, we correctly disabled the devices classified as<br>
    &quot;tiff devices&quot;, but left the &quot;fax devices&quot; in place, and the fax devices<br>
    depend on libtiff.<br>
<br>
    We'll now disable *all* the libtiff dependent devices if libtiff is not found.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-06 09:38:39 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf75bee36e3a42f1bc253563a11169b47b92d307">cf75bee36e3a42f1bc253563a11169b47b92d307</a>
<blockquote>
<p>
    pdfwrite - don't write CIDSet for subset CIDFonts when emitting PDF/A-2<br>
<br>
    The specification for CIDSet has changed for PDF/A-2 and I am currently<br>
    unable to create a CIDSet which the Acrobat pre-flught tool will validate.<br>
<br>
    Since PDF/A-2 now makes CIDSet optional, this commit omits it when we are<br>
    producing PDF/A-2, so that we can create a valid file.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdtd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-05 17:44:16 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5fdae25deb3fa189f9d01a573fa77c2ec0f968ba">5fdae25deb3fa189f9d01a573fa77c2ec0f968ba</a>
<blockquote>
<p>
    Complete support for HPGL/2 new fill code, bug 692809.<br>
<br>
    The new implementation which eliminates many unnecessary &quot;moveto's&quot;<br>
    resulted in unexpected improvements in several CET files where<br>
    creating a new subpath caused a join to be missing.<br>
<br>
pcl/pgdraw.c<br>
pcl/pgdraw.h<br>
pcl/pgpoly.c<br>
pcl/pgvector.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-31 15:23:12 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d303c79851b02aa810525bdaa4751c8247b66912">d303c79851b02aa810525bdaa4751c8247b66912</a>
<blockquote>
<p>
    A new state variable added that indicates if a high level device is in use.<br>
<br>
pcl/pcstate.h<br>
pcl/pctop.c<br>
pl/plmain.c<br>
pl/plmain.h<br>
pl/pltop.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-19 16:53:26 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8cbdd395e653227966a682b9b2de869565b49b5e">8cbdd395e653227966a682b9b2de869565b49b5e</a>
<blockquote>
<p>
    Fixes 693049 - incorrect ccitt raster output.<br>
<br>
    The CCITT filter was initialized to an additive color space instead of<br>
    subtractive.  Problem analyzed by Shailesh Mistry.<br>
<br>
pcl/rtraster.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-16 15:26:11 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=868eda64307dabd30e308e07962346ef5991d3e3">868eda64307dabd30e308e07962346ef5991d3e3</a>
<blockquote>
<p>
    Changes to support the new fill code which allows filling when the pen is up.<br>
<br>
    With the graphics library implementation of the hpgl/2 style fill code<br>
    it is necessary to avoid unnecessary consecutive moveto's which were<br>
    harmless in the previous code.  In particular, closepath works<br>
    differently if there are 2 or more consecutive moveto's.  Using normal<br>
    PostScript style paths the closepath will return to the last moveto in<br>
    the path, the new code will convert a consecutive moveto to &quot;gapto&quot;<br>
    and retain the first moveto and closepath will return to the original<br>
    moveto.<br>
<br>
pcl/pgconfig.c<br>
pcl/pgdraw.c<br>
pcl/pglabel.c<br>
pcl/pgpoly.c<br>
pcl/pgvector.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-07 07:45:46 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c89c0b750594deac1b091776d18a9f0ed718ab60">c89c0b750594deac1b091776d18a9f0ed718ab60</a>
<blockquote>
<p>
    Debugging for dumping data from PCL commands that specify byte data<br>
    and a data length.<br>
<br>
pcl/pcparse.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-18 15:29:05 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3e81e6caf112d59e31c17924ee89d7f3abddd7b1">3e81e6caf112d59e31c17924ee89d7f3abddd7b1</a>
<blockquote>
<p>
    Fix bug 693034 -- correct comment in gxdevcl.h for GX_CINFO_UNKNOWN_SEP_LIN<br>
<br>
gs/base/gxdevcli.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-05 16:39:39 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=54144189c8093c5c09d2f50d8cd57abc34ddd385">54144189c8093c5c09d2f50d8cd57abc34ddd385</a>
<blockquote>
<p>
    Bug 693025 : Correct memory leaks reported by Zeniko<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-05 09:48:58 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad53769b1d690e790750f01bd6420fb2b8b76279">ad53769b1d690e790750f01bd6420fb2b8b76279</a>
<blockquote>
<p>
    Bug 693088: fix romfs?.dev dependency typo<br>
<br>
    The two romfs?.dev targets had ECHO_XE in their dependencies, and it shouldbe<br>
    ECHOGS_XE.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-04 17:02:46 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5b52e4534a2a7b9bc5d19a749df60e636ac4aa65">5b52e4534a2a7b9bc5d19a749df60e636ac4aa65</a>
<blockquote>
<p>
    Tweak filenames from RAW_DUMP debugging code.<br>
<br>
    Output 2 digits before &quot;)&quot;.<br>
<br>
    In multistage output, put 'a', 'b', 'c' etc after &quot;)&quot; to ensure<br>
    that they appear in alphasorted results in the same order as they<br>
    are produced.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gxblend.c<br>
gs/base/gxblend1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-04 15:22:57 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=316a85cd0c7311716e85dc8f5ab32e36301e829c">316a85cd0c7311716e85dc8f5ab32e36301e829c</a>
<blockquote>
<p>
    pdfwrite - Make sure TT fonts in PDF files are named using the PDF font name<br>
<br>
    Bug #693086<br>
<br>
    The problem was that the TrueType code used by the PDF interpreter uses the<br>
    font name from the TrueType font, not the name from the PDF file. If two<br>
    subsets are present then pdfwrite is unable to distinguish them if the<br>
    Encodings are apparently the same (as they are here) as the fonts have have<br>
    the same name internally, even though they are different in the PDF.<br>
<br>
    TrueType CIDFonts already take the font naem form the PDF file and apply that<br>
    so here we simply do the same for regular TrueType fonts.<br>
<br>
    This causes a small difference in Bug689073.pdf, apparently becuase it<br>
    contains two fonts called Arial,Bold<br>
<br>
gs/Resource/Init/gs_ttf.ps<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-03 13:37:58 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6e24b063febdc3286015e94854cac156e70e2f1">a6e24b063febdc3286015e94854cac156e70e2f1</a>
<blockquote>
<p>
    Rename pdf_open_document() to pdfwrite_pdf_open_document() to avoid a<br>
    name conflict with mupdf.<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfx.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-01 11:50:32 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c7aeb590a7a435d746a9400a15f8392746ac53c4">c7aeb590a7a435d746a9400a15f8392746ac53c4</a>
<blockquote>
<p>
    Addition of capability for overprint simulation for CMYK colorants with RGB target device<br>
<br>
    To have an RGB device do this simulation of CMYK overprinting you should have the device set<br>
    its opmode in color info from GX_CINFO_OPMODE_UNKNOWN to GX_CINFO_OPMODE_RGB.  In addition,<br>
    to ensure consistent color in the document you should use the -dUseFastColor option since<br>
    simulated RGB overprinting uses unmanaged color transformations.<br>
<br>
    The fix required the addition of a compositor parameter which was a k value to be make use<br>
    when we had K overprinting occurring.<br>
<br>
    To port this fix to an earlier ghostscript release (pre-ICC) you will want to create a<br>
    gx_set_overprint_DeviceRGB procedure for the gs_color_space_type_DeviceRGB type.   This will<br>
    be similar to gx_set_overprint_DeviceCMYK except it will end up calling gx_set_overprint_rgb<br>
    instead of gx_set_overprint_cmyk.   See changes in gsicc.c.<br>
<br>
gs/base/gscdevn.c<br>
gs/base/gscsepr.c<br>
gs/base/gscspace.c<br>
gs/base/gsicc.c<br>
gs/base/gsovrc.c<br>
gs/base/gsovrc.h<br>
gs/base/gxcspace.h<br>
gs/base/gxdevcli.h<br>
gs/base/gxoprect.c<br>
gs/base/gxoprect.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-01 20:11:09 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20e81025390c8487cb9794b37148f4bee9063bdc">20e81025390c8487cb9794b37148f4bee9063bdc</a>
<blockquote>
<p>
    Update RAW_DUMP_AS_PAM to cope with tag planes, and greyscale spaces.<br>
<br>
gs/base/gxblend.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-06-01 09:21:38 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1558100af4820b8718e7e346c3225d48eecf07c">b1558100af4820b8718e7e346c3225d48eecf07c</a>
<blockquote>
<p>
    Fix minor typo in German man page - Bug 693080<br>
<br>
gs/man/de/pdf2dsc.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-31 17:51:51 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cddb4c193c6123140c6f7b1960db34025f86e40">9cddb4c193c6123140c6f7b1960db34025f86e40</a>
<blockquote>
<p>
    Bug 693025: Correct typos reported by Zeniko<br>
<br>
gs/jbig2dec/jbig2_huffman.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-31 14:43:11 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da9b12c5056369c5593d5b3604e787052fdd2f13">da9b12c5056369c5593d5b3604e787052fdd2f13</a>
<blockquote>
<p>
    pdfwrite - properly mark cos_stream as closed when closing associated stream<br>
<br>
    Bug #6930 &quot;Regression: /rangecheck in --pdfmark-- starting with 25b6a2cdeb5a90bb7803958f2bf15b618fbcf120&quot;<br>
<br>
    Commit 25b6a2cdeb5a90bb7803958f2bf15b618fbcf120 was a little too<br>
    enthusiastic. In addition to properly closing the streams, I inadvertently<br>
    removed the code which marks the pdfwrite cos_stream object as closed when<br>
    we close the stream.<br>
<br>
    Ordinarily this doesn't matter, but the pdfmark code checks to maek sure the<br>
    stream associated with a named object is closed when it is used, and the<br>
    removal of the code left it apparently open, causing the error.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdti.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-31 10:59:03 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33dda0841be40cc8da9f350d10749ce8f4142fb7">33dda0841be40cc8da9f350d10749ce8f4142fb7</a>
<blockquote>
<p>
    pdfwrite - memory problems, don't free dictionary parameter lists too early<br>
<br>
    Bug #693069 &quot;Regression: lockup with pdfwrite&quot;<br>
<br>
    The image dictioanry parameter lists for distillerparams were being freed<br>
    after they were added to the 'parent' parameter list. If the same memory<br>
    should then be reused for another parameter, the parent list would end up<br>
    with corrupted linked list pointers leading to a variety of problems<br>
    includign seg faults and loops.<br>
<br>
    Although this appears as a regression its not really. The existing code only<br>
    worked by fluke, all that the offending commit did was change he memory<br>
    layout, triggering the problem.<br>
<br>
    My initial feeling was that the c_param_write code should 'deep copy' dict<br>
    parameters, just as it does for other complex objects. However reviewing the<br>
    existing usage makes it clear that this is *not* what is done at present.<br>
<br>
    Instead the list is simply inserted, and only freed when the parent list is<br>
    released. This seems to me to be poor design, because other complex types<br>
    are handled differntly, but that's the way it is. Copying the dictionary<br>
    would mean reviewing all the places that use it and modifying them. It<br>
    makes more sense to alter the pdfwrite code so that it doesn't release and<br>
    free the dictioanry list.<br>
<br>
    Took the opportunity to refactor a few places in the code which use massive<br>
    'if' clauses which call code. This construct is confusing and difficult to<br>
    debug.<br>
<br>
    No expected differences<br>
<br>
gs/base/gdevpsdp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-30 17:42:29 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c579ff60fd8f7a83d46a87ed0813536871c4d13e">c579ff60fd8f7a83d46a87ed0813536871c4d13e</a>
<blockquote>
<p>
     Bug 693050 : Fixes CERT reported issue labelled DestAvNearNull<br>
<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_page.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-29 11:04:55 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9623d013b27cd25257fa21ddb7d2df9c75f3e52d">9623d013b27cd25257fa21ddb7d2df9c75f3e52d</a>
<blockquote>
<p>
    Fix for mistake in hashcode setting for CMM used with UseFastColor option<br>
<br>
    Fixes bug 693036<br>
<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_nocm.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-28 13:05:00 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f30e8944b915936befffbadc036e1de16659914e">f30e8944b915936befffbadc036e1de16659914e</a>
<blockquote>
<p>
    Add 16bpp support to downscaler.<br>
<br>
    Currently unused, but passes local tests with James Cloos' proposed<br>
    psdcmyk16 and psdrgb16 devices.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gxdownscale.c<br>
gs/base/gxdownscale.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 23:35:06 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3c704eeab14e5d6401edd69867b06c812ce8f5a">c3c704eeab14e5d6401edd69867b06c812ce8f5a</a>
<blockquote>
<p>
     Bug 693050 : Fixes CERT reported issue labelled BranchAvNearNull<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 22:47:02 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=321055631457902050df08e645b0f91536cdd417">321055631457902050df08e645b0f91536cdd417</a>
<blockquote>
<p>
     Bug 693050 : Fixes CERT reported issue labelled BlockMoveAv<br>
<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-27 21:43:27 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fb006f93c6fb6278a58886e0f72a5836c674ed22">fb006f93c6fb6278a58886e0f72a5836c674ed22</a>
<blockquote>
<p>
     Bug 693050 : Fixes CERT reported issue labelled SegFaultOnPc<br>
<br>
gs/jbig2dec/jbig2_generic.c<br>
gs/jbig2dec/jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-26 09:07:54 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=13922518fea2f417ff2d2dfa153c95396616e8ae">13922518fea2f417ff2d2dfa153c95396616e8ae</a>
<blockquote>
<p>
    pdfwrite - remove unused variable to silence compiler warning<br>
<br>
    Although the warning is flagged as new, I don't think it is, its just that<br>
    the variable declaration has moved to a new line as a result of a commit<br>
    and so it appears to be new.<br>
<br>
    In any event, the variable is unused and has been removed.<br>
<br>
gs/base/gdevpsf1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-25 17:55:31 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fad17657f6f583dbdef5a634d0f11dd79e446ffe">fad17657f6f583dbdef5a634d0f11dd79e446ffe</a>
<blockquote>
<p>
    Bug 693070: psdrgb wasn't giving corrupted output.<br>
<br>
    There were actually 2 bugs in here. The first one was spotted and<br>
    fixed by James Cloos - many thanks; the arguments to memcpy were<br>
    reversed.<br>
<br>
    The second one was to do with the fact that postscript operation<br>
    now thinks it has 14 colors. When we encode/decode, we were packing<br>
    the colors into a word in such a way that we were losing the interesting<br>
    ones off the top. Reverse the order of packing, and all is well.<br>
<br>
    This still leaves an &quot;interesting&quot; fact about this device; we loop:<br>
<br>
      for (chan_idx = 0; chan_idx &lt; num_comp; chan_idx++)<br>
        ...<br>
        for (j = 0; j &lt; xc-&gt;height; j++)<br>
        ...<br>
           get_bits_rectangle<br>
<br>
    So, in the case where we have n components, and more than 1 band<br>
    we'll be rendering the entire file n times - despite the fact that<br>
    we request all the colors each time!<br>
<br>
gs/base/gdevpsd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-25 16:35:19 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c9e30044d1d698701091c9913a81e4b3688a134">1c9e30044d1d698701091c9913a81e4b3688a134</a>
<blockquote>
<p>
    Add new -debug=validate-chunks debug flag.<br>
<br>
    This causes a validation to be run after every operator is interpreted.<br>
<br>
    Also, update the chunk validation code to give more informative error<br>
    messages when problems are found. (For instance, if a reference is<br>
    found to be duff, it's often the source of that reference you are<br>
    interested in, not the reference itself).<br>
<br>
gs/base/gdbflags.h<br>
gs/base/gsmisc.c<br>
gs/psi/ialloc.h<br>
gs/psi/ilocate.c<br>
gs/psi/interp.c<br>
gs/psi/zvmem.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-25 14:12:37 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6f9e998b9ab277f85815b927a841c26c507928a">c6f9e998b9ab277f85815b927a841c26c507928a</a>
<blockquote>
<p>
    pdfwrite - fix /OtherSubr stripping with Multiple Master fonts<br>
<br>
    Commit:<br>
    9f656faebac150c6aceca16c5ef6a78b92b6da43<br>
<br>
    exposed a problem with this code, when we are stripping /OtherSubrs from MM<br>
    fonts, the new CharString could be larger than the original (this can't<br>
    happen for non-MM fonts). Because we only allocated a buffer big enough to<br>
    hold the original (unstripped) data, we ended up with a buffer overflow.<br>
<br>
    The code now calls the 'strip' routine twice, the first time to calculate<br>
    how big a buffer will be required, the second time to actually do the work.<br>
<br>
    This will fix the crash in test-setweightvector.ps introduced by the<br>
    earlier commit<br>
<br>
gs/base/gdevpsf1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-25 14:08:52 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9f656faebac150c6aceca16c5ef6a78b92b6da43">9f656faebac150c6aceca16c5ef6a78b92b6da43</a>
<blockquote>
<p>
    pdfwrite - address problems with stringwidth and composite fonts<br>
<br>
    Bug #693059 &quot;Asian fonts placed badly with pdfwrite output&quot;<br>
<br>
    The problem here was caused by the way that pdf_process_string deals with 'widths'<br>
    when responding to a strginwidth operation versus a regular show.<br>
<br>
    When handling stringwidth the width of each glyph is added to the enumerator<br>
    'returned.total_width'. However, when handling a regular show, the width of<br>
    the glyphs are simply stored directly into 'returned.total_width'.<br>
<br>
    To handle the latter case the higher level code maintains its own total width<br>
    but that was getting confused when a stringwidth was used.<br>
<br>
    Ideally we would fix pdf_process_string to behave the same whether in response<br>
    to a stringwidht or a show, but that routine is called from other places and<br>
    making it coherent looks difficult. Instead we now process stringwidth<br>
    differently form show, and don't accuulate wodths when we have a steingwidth<br>
    operation in the higher level composite font code routines.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdtc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-24 09:03:09 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e21f69e10ddd68ea807773a8b57e10d23bd74a4f">e21f69e10ddd68ea807773a8b57e10d23bd74a4f</a>
<blockquote>
<p>
    Fix a couple of error messages in bmpcmp<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-23 15:53:53 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e13b5cf5b8c7db67f88c5da62eeb8c8a4d077436">e13b5cf5b8c7db67f88c5da62eeb8c8a4d077436</a>
<blockquote>
<p>
    Update psdcmyk and psdrgb to use the downscaler.<br>
<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-23 10:18:56 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=27afc73a71b9c059b9d5358ed816cdf50e0a1f08">27afc73a71b9c059b9d5358ed816cdf50e0a1f08</a>
<blockquote>
<p>
    Fix 2 'unused variable' warnings in downscaler.<br>
<br>
gs/base/gxdownscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-22 20:42:31 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce801afb90764b4863dab9e51bc18082222fb3ce">ce801afb90764b4863dab9e51bc18082222fb3ce</a>
<blockquote>
<p>
    Unroll some loops in the downscaler for speed.<br>
<br>
    Time to render first 10 pages of pdf_reference17.pdf to tiff:<br>
     @200dpi = 5.2s<br>
     @600dpi downscaled by 3 = 7.2s (before this)<br>
     @600dpi downscaled by 3 = 6.5s (after this)<br>
<br>
gs/base/gxdownscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-22 13:35:31 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=15cc33536ada0b4cb105110a48df0132539c54db">15cc33536ada0b4cb105110a48df0132539c54db</a>
<blockquote>
<p>
    Add downscaler functionality to tiffsep.<br>
<br>
    Update tiffsep to call the downscaler. This means adding MinFeatureSize<br>
    and DownScaleFactor to tiffsep. Also add BitsPerComponent to allow us to<br>
    specify 8 (default) or 1 (monochrome). MinFeatureSize is ignored except<br>
    in monochrome mode.<br>
<br>
    This has meant slight reworking of the downscaler to cope with planar<br>
    buffers, and its use of get_bits_rectangle rather than get_bits.<br>
<br>
    Also updated docs, and fixed some leaks on memory allocation failures<br>
    within tiffsep.<br>
<br>
gs/base/gdevtsep.c<br>
gs/base/gxdownscale.c<br>
gs/base/gxdownscale.h<br>
gs/base/lib.mak<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-21 08:54:59 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4677f28c2a0bf72a6bc89e785cc651d3deedc043">4677f28c2a0bf72a6bc89e785cc651d3deedc043</a>
<blockquote>
<p>
    txtwrite - Bug #693046 handle TEXT_FROM_CHARS and TEXT_FROM_SINGLE_CHAR ops<br>
<br>
    I seem to have overlooked these operations when writing the original code,<br>
    probably because I couldn't' find any test cases. However PCL seems to make<br>
    extensive use of them, and the lack of code causes access outside array<br>
    boundaries.<br>
<br>
    Fixed here in a simplistic fashion, which seems to work well.<br>
<br>
    No differences expected, txtwrite is not cluster tested<br>
<br>
gs/base/gdevtxtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-20 16:31:14 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=535d11e8a1d667a3d71680b27f18e4a89df98b2d">535d11e8a1d667a3d71680b27f18e4a89df98b2d</a>
<blockquote>
<p>
    Bug 693044: fix pdfopt utility.<br>
<br>
    Disable checking for the max pdf object number during PDF linearisation,<br>
    because linearisation adds a few new objects to the PDF file.<br>
<br>
gs/lib/pdfopt.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-18 14:32:56 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=40cc976eae680d6a6f1297c5a0d556a37e9eb4b8">40cc976eae680d6a6f1297c5a0d556a37e9eb4b8</a>
<blockquote>
<p>
    txtwrite - clean up some benign silly compiler warnings<br>
<br>
gs/base/gdevtxtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-18 12:56:17 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44869447f94a15ae0082b89668576636e4c39575">44869447f94a15ae0082b89668576636e4c39575</a>
<blockquote>
<p>
    txtwrite - add a 'do nothing' rop device method to avoid errors<br>
<br>
gs/base/gdevtxtw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-16 14:55:02 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1831d329606c767069dbc706632c4b30db4488ce">1831d329606c767069dbc706632c4b30db4488ce</a>
<blockquote>
<p>
    Attempt to fix dashing in hpgl path mode.<br>
<br>
    We were giving up dashing as soon as we hit the first gap in a path.<br>
    Fix by treating gaps as an 'ink off' dash segment.<br>
<br>
gs/base/gxpdash.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-16 18:22:38 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=422773777f1e6df2fd4decb3ca6b65801acfc1ac">422773777f1e6df2fd4decb3ca6b65801acfc1ac</a>
<blockquote>
<p>
    Update bmpcmp to cope with rgb and greyscale psd files.<br>
<br>
    Also have a better stab at handling spot equivalent colors.<br>
<br>
    CLUSTER_UNTESTED.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-15 20:00:19 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8610551db7cc10c72d7a6bbfaa7ffe61d521a5d9">8610551db7cc10c72d7a6bbfaa7ffe61d521a5d9</a>
<blockquote>
<p>
    Memento tweak: Allow MEMENTO_LEAKONLY to be defined by command line<br>
<br>
    Currently Memento undefines MEMENTO_LEAKONLY at the top of memento.c.<br>
<br>
    Change it here not to do that, so it can be supplied as part of a<br>
    CFLAGS or XCFLAGS line.<br>
<br>
    CLUSTER_UNTESTED.<br>
<br>
gs/base/memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-15 19:44:50 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a846030605e04c09265241853ed5ac3442c258e9">a846030605e04c09265241853ed5ac3442c258e9</a>
<blockquote>
<p>
    Leak checking tweaks; memory finalisation and param handling<br>
<br>
    When Ghostscript shuts down, it closes its malloc handler, which frees<br>
    all the outstanding blocks it knows about. This is unhelpful behaviour<br>
    when checking for leaks, so we disable this freeing in MEMENTO builds.<br>
<br>
    Also, the Ghostscript arg handling code is quite keen on 'arg_copy'ing<br>
    args only to pass them into routines that immediate copy them again<br>
    into heap allocated buffers. These copies are then allowed to leak.<br>
<br>
    Where it is obviously safe, avoid these copies. Where it's not so clear<br>
    free them (using a new arg_free function).<br>
<br>
gs/base/gsargs.c<br>
gs/base/gsargs.h<br>
gs/base/gsmalloc.c<br>
gs/psi/imainarg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-15 18:22:06 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b549f7df132df28783e34ef6839812b691c9eed5">b549f7df132df28783e34ef6839812b691c9eed5</a>
<blockquote>
<p>
    Bug 693039: Fix Memento crashes<br>
<br>
    After reallocing a block, it is best to avoid reading from the old<br>
    location. (Read flags, then realloc, then write flags).<br>
<br>
    Also some minor tweaks to avoid warnings etc.<br>
<br>
gs/base/memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-15 12:10:14 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=be37389c29534ffd9ce6bb31353f4f8c0273bfd3">be37389c29534ffd9ce6bb31353f4f8c0273bfd3</a>
<blockquote>
<p>
    Add a bunch of derived files to .gitignore<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
.gitignore<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-15 12:08:18 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=676ca45571121495de22c02ac7b03da14f75525c">676ca45571121495de22c02ac7b03da14f75525c</a>
<blockquote>
<p>
    Call libtiff configure from ghostpdl configure.<br>
<br>
    We had worked around the lack of a ghostpdl configure script by calling the<br>
    libtiff configure from the Makefile - which is a horrible hack.<br>
<br>
    Now that ghostpdl has a configure script, we can do the right thing, and call<br>
    the libtiff script from the ghostodl one.<br>
<br>
    No cluster differences.<br>
<br>
Makefile<br>
configure.ac<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-14 21:00:46 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=827e5420e2d0b3c1bb3b9e656c27236ac650eacc">827e5420e2d0b3c1bb3b9e656c27236ac650eacc</a>
<blockquote>
<p>
    Really remove derived files from jbig2dec directory<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/config.h<br>
gs/jbig2dec/libtool<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-14 18:08:00 +0100
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26ac0d3505530c6782dffeeaa053328a481afcb0">26ac0d3505530c6782dffeeaa053328a481afcb0</a>
<blockquote>
<p>
    Bug 693025: Updated patch from Zeniko to fix various crashes and leaks<br>
<br>
gs/jbig2dec/jbig2_halftone.c<br>
gs/jbig2dec/jbig2_huffman.c<br>
gs/jbig2dec/jbig2_image.c<br>
gs/jbig2dec/jbig2_refinement.c<br>
gs/jbig2dec/jbig2_segment.c<br>
gs/jbig2dec/jbig2_symbol_dict.c<br>
gs/jbig2dec/jbig2_text.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-14 14:26:24 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2699766796d407f04e790ca1374f68be00532847">2699766796d407f04e790ca1374f68be00532847</a>
<blockquote>
<p>
    remove an unused variable to silence a compiler warning<br>
<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-14 13:35:51 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ea8d0df81d2552a3470bbf708b91fb4467a5be2">8ea8d0df81d2552a3470bbf708b91fb4467a5be2</a>
<blockquote>
<p>
    pdfwrite - memory fixes. don't track pdf_font_cache in GS fonts<br>
<br>
    pdfwrite maintains a 'font cache' of PDF font objects which are related to<br>
    GS fonts. Previously these were tracked by adding a pointer to the GS font,<br>
    and freeing the memory when the font was unloaded, by using the gs_notify_register<br>
    callback.<br>
<br>
    This causes problems when we are in 'file per page' mode. We want to discard<br>
    and rebuild the font cache at the end of each page, so we don't try to<br>
    reuse font objects. But if we discard the memory, the font is still pointing<br>
    at it. This causes later memory problems.<br>
<br>
    The simplest solution is to stop tracking the elements in the GS fonts. This<br>
    means that an element will persist and be stale after the font goes out of<br>
    scope, but its a fairly small amount of memory per font. We now clean up the<br>
    PDF font cache and all the elements in pdf_close along with all the other memory.<br>
<br>
    The 'file per page' mode using the '-sOutputFilename=%d.pdf' syntax now seems<br>
    to work correctly. There does not seem to be any great amount of memory leakage<br>
    now either.<br>
<br>
    The next step is to implement a 'server' mode application and use that to<br>
    check that there are no remaining memory leaks<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-11 09:57:23 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b31a6466c0819db229cbde420c72789eecdbe2d">6b31a6466c0819db229cbde420c72789eecdbe2d</a>
<blockquote>
<p>
    Add missing part of commit to prevent access to freed memory.<br>
<br>
    Somehow when applying this part of the reverted patch, this line (the<br>
    one that actually prevented the access to freed memory) was missed.<br>
<br>
gs/base/gsicc_profilecache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-11 16:33:53 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f9c1df276e998fc754d5c0e416c606cc5404a495">f9c1df276e998fc754d5c0e416c606cc5404a495</a>
<blockquote>
<p>
    pdfwrite - memory clean up. Clear outlines<br>
<br>
    The outline objects are released in write_outline, but the entries in the<br>
    device were not previously cleared leaving them pointing to freed memory.<br>
<br>
gs/base/gdevpdf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-11 11:38:32 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=08d715446bb97015d16e085aa8f8c4bd8f73c2cc">08d715446bb97015d16e085aa8f8c4bd8f73c2cc</a>
<blockquote>
<p>
    pdfrite - memory cleanup, free Annotations<br>
<br>
    Annotations weren't being freed along with their enclosing Page structure<br>
    Add some comments about what is stored where, and when it is released, in<br>
    a few places<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-10 13:24:15 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=54ecaf86c6fa0c4a31fb17e0c21361cb134ec376">54ecaf86c6fa0c4a31fb17e0c21361cb134ec376</a>
<blockquote>
<p>
    CIELAB vector and CIELAB images have to use a slightly different remap proc.<br>
<br>
    The image data is already scaled as needed for the ICC code to handle directly.<br>
    Vector colors require the decode from real CIELAB values.  This fix was missing<br>
    in the in image interpolation code.  Fix for Bug 692885<br>
<br>
gs/base/gxiscale.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-11 15:07:43 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79925e26467289515d4cf499d2c3a2d3b1cdcaa4">79925e26467289515d4cf499d2c3a2d3b1cdcaa4</a>
<blockquote>
<p>
    Delay of obtaining handles from CMM for default profiles<br>
<br>
    Obtaining the profiles handles for all the default profiles in<br>
    the ICC manager eats up a tiny amount of time on startup.  For<br>
    some customers that start and stop gs over and over instead of<br>
    running in server mode, this startup time is an issue.  This<br>
    fix performs the initialization in a lazy manner, obtaining the<br>
    profile handle only when finally needed.<br>
<br>
    This commit also fixed some issues with images that are in the<br>
    LAB color space.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gscdevn.c<br>
gs/base/gscsepr.c<br>
gs/base/gsicc.c<br>
gs/base/gsicc.h<br>
gs/base/gsicc_cache.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/base/gstrans.c<br>
gs/base/gxclimag.c<br>
gs/base/gxcmap.c<br>
gs/base/gxicolor.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-09 22:01:46 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6d74690be87eb37ca5b4590ed6b44673e4125c7">c6d74690be87eb37ca5b4590ed6b44673e4125c7</a>
<blockquote>
<p>
    Fix bug 692372 and bug 693001 to free semaphores without leaking memory.<br>
<br>
    The original fix (fe8d7b6) for 692372 released the semaphores, but resulted<br>
    in memory leaks of many other parts of the imager state. The leak was fixed<br>
    by reverting the above change. This change insures that sempahores are not<br>
    leaked by adding 'finalization' to the icc_linkcache and icc_link structs.<br>
<br>
gs/base/gsicc_cache.c<br>
gs/base/gsistate.c<br>
gs/base/gsstruct.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-09 09:56:00 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=055ed5f7a69ad5cf4181cf337abf2245df668c01">055ed5f7a69ad5cf4181cf337abf2245df668c01</a>
<blockquote>
<p>
    Prevent reference to freed memory when freeing the profile cache.<br>
<br>
gs/base/gsicc_profilecache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-09 09:51:11 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af974d1bd4b4f0470e77d28eb0cdcb72def2de76">af974d1bd4b4f0470e77d28eb0cdcb72def2de76</a>
<blockquote>
<p>
    Revert &quot;Fix bug 692372: Add finalize for imager_state to ref_count decrement icc structs.&quot;<br>
<br>
    This reverts commit fe8d7b6aebfed3c724a860e31ff170764d5429dc.<br>
    This commit resulted in a subsantial memory leak detected with PCL. See<br>
    bug 693001. The finalization should be for the icc structs that have<br>
    semaphores.<br>
<br>
gs/base/gsicc_profilecache.c<br>
gs/base/gsistate.c<br>
gs/base/gsstate.c<br>
gs/base/gxistate.h<br>
gs/base/gzstate.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-09 13:07:39 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0ee6bd45c59c2ae99ec30cba4dae22d1f2e20dc4">0ee6bd45c59c2ae99ec30cba4dae22d1f2e20dc4</a>
<blockquote>
<p>
    Remove a couple of derived files from jbig2dec.<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/libtool<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-09 09:52:11 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a32c42253c299d55d44ad39ba3d998fcebbef7ba">a32c42253c299d55d44ad39ba3d998fcebbef7ba</a>
<blockquote>
<p>
    pdfwrite - memory cleanup; use correct allocater, don't free tracked object<br>
<br>
    Previously the code to free font resources was using the wrong memory<br>
    allocator to free some objects, fixed here.<br>
<br>
    It also seems that, contrary to what I thought Function resources *are*<br>
    tracked by 'last_resource' in teh pdfwrite device structure. So its important<br>
    not to free those twice.<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdtf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-07 19:14:28 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=365df54880adff1bd0b7d983c440fb518250c9f0">365df54880adff1bd0b7d983c440fb518250c9f0</a>
<blockquote>
<p>
    Fix a warning in zfapi.c<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-07 17:47:33 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=949993da66cd9850ce47c7319465aed42585b261">949993da66cd9850ce47c7319465aed42585b261</a>
<blockquote>
<p>
    Tweak bmpcmp error message<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-07 16:34:51 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fee1ab3e7e38c3e2bd82a855d7bdec2c18751320">fee1ab3e7e38c3e2bd82a855d7bdec2c18751320</a>
<blockquote>
<p>
    Bug 693023: fix $Blend in Type 1 font serialization<br>
<br>
    When serializing a MultipleMaster font, we were writing both a 'boiler plate'<br>
    $Blend procedure, and a broken $Blend from the font dictionary - broken because<br>
    the code to read the procedure from the dictionary ignored name objects.<br>
<br>
    In general, this was fine, as all the current FAPI scalers ignore the $Blend.<br>
    A problem arose because the code which calculated size of the procedure did<br>
    handle PS name objects, so we ended up with unitialized bytes trailing the<br>
    dictionary data, which could cause the scaler to error.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/write_t1.c<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-03 12:13:06 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7b81312d205a2f9b89f40da4b4f6b67bcacd8ef1">7b81312d205a2f9b89f40da4b4f6b67bcacd8ef1</a>
<blockquote>
<p>
    Fix for issues in use of /SeparationOrder and /SeparationColorNames<br>
<br>
    Several issues and quite a bit of confusion in the code with respect<br>
    to this option.  I believe this should clear some things up.<br>
    Documentation still needs to be updated as to how this option functions<br>
    and what devices it actually works with.  Note that<br>
    SeparationOrder and SeparationColorNames really only works for the<br>
    tiffsep device.  The psdcmyk device was never really set up for use<br>
    with this option.  Not sure if we want to add it.  Also, I discovered<br>
    that with the disabling of compressed color encoding, the tiffsep1<br>
    device renders incorrectly.  I had not converted this device to planar<br>
    as I had thought that it performed halftoning during rendering.  I<br>
    did not realize it was rendering 8 bit data and then doing<br>
    a thresholding operation.  We may want to just move this to a planar<br>
    based device.  In that case, we could use the fast planar halftoning.<br>
<br>
    Note that with this fix, the device will only create output for the<br>
    colorants listed in /SeparationOrder.  The psdcmyk device was not<br>
    making use of the /SeparationOrder information properly.  It is now<br>
    which makes for some different renderings in the ps3cet/29-07*.ps test<br>
    files which exercise  /SeparationOrder changes.  In such a case, the<br>
    device will not output any missing colorants, which previously<br>
    it was doing.<br>
<br>
gs/base/gdevdevn.c<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-05 11:21:31 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5f91f9fa29922713d3751654dda09ccc8518801">c5f91f9fa29922713d3751654dda09ccc8518801</a>
<blockquote>
<p>
    pdfwrite - memory leaks with CIDFonts<br>
<br>
    Move the code to free font resources from the 'pdf close' into a separate<br>
    routine in the font handling module. Additionally call it for CIDFont<br>
    resoruces as well as Font resources (the code copes with freeing both)<br>
<br>
    No differences expected<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdtf.c<br>
gs/base/gdevpdtf.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-05 01:03:31 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=922400e9056ad46a27e0ab5964213415061bd801">922400e9056ad46a27e0ab5964213415061bd801</a>
<blockquote>
<p>
    Bug 693027: Add missing spot color extraction from shading patterns.<br>
<br>
    Old code processed all patterns as tiled patterns and missed the<br>
    shading color space.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-04 15:19:15 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b2b2473f2064b4abd835449b761e46fdbb5a47f1">b2b2473f2064b4abd835449b761e46fdbb5a47f1</a>
<blockquote>
<p>
    Bring the gs/jbig2dec directory in line with jbig2dec repos.<br>
<br>
    Mainly autoconf source files like configure.ac<br>
<br>
    No cluster differences.<br>
<br>
gs/jbig2dec/Makefile.in<br>
gs/jbig2dec/aclocal.m4<br>
gs/jbig2dec/annex-h.jbig2<br>
gs/jbig2dec/autogen.sh<br>
gs/jbig2dec/compile<br>
gs/jbig2dec/config.guess<br>
gs/jbig2dec/config.h<br>
gs/jbig2dec/config.h.in<br>
gs/jbig2dec/config.sub<br>
gs/jbig2dec/configure<br>
gs/jbig2dec/depcomp<br>
gs/jbig2dec/install-sh<br>
gs/jbig2dec/libtool<br>
gs/jbig2dec/ltmain.sh<br>
gs/jbig2dec/missing<br>
gs/jbig2dec/pbm2png.c<br>
gs/jbig2dec/stamp-h1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-19 16:44:48 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19e1c90a1185b681e081cc50ea64a73e8fd8f9b7">19e1c90a1185b681e081cc50ea64a73e8fd8f9b7</a>
<blockquote>
<p>
    pdfwrite - address memory leaks<br>
<br>
    First pass at cleaning up pdfwrite's memory 'management'.<br>
<br>
    Add clean up code in pdf_close for fonts, font descriptors, type 3 CharProc<br>
    and Pattern resources.<br>
<br>
    Since we only need the object number for a reference we now create a new<br>
    type of cos object 'reference'. This only contains the object ID so that<br>
    we cna write out the reference. We also set the ID to 0 after we write it<br>
    as this will allow us to free the object. (id == 0 is a crazy reference<br>
    counting thing, it seems)<br>
<br>
    Free the 'aside' associated with a pattern after releasing it.<br>
<br>
    free ExtGState resources at close.<br>
<br>
    There was no code to free CMaps, none at all. Added routines to free regular<br>
    CMaps and ToUnicode CMaps, and added code to pdfwrite to call these in order<br>
    to actually free CMap resources.<br>
<br>
    When manufacturing a BaseFont, if we already have a BaseFont name, dispose<br>
    of it before assigning a new one. Previously this leaked the string<br>
    containing the name.<br>
<br>
    release font resoruce objects<br>
<br>
    when freeing a font descriptor, free the object as well as the glyphs<br>
<br>
    Free copied base font FontName string on close<br>
<br>
    This is opaque data specific to each font type, so we may need to add<br>
    specific cleanup routines, but this is a start.<br>
<br>
    Secondly, when pdfwrite copeis a font it makes 2 copies, a subset and a<br>
    complete copy. However the complete copy can fail because of an unused<br>
    glyph. So we dicard the complete copy and carry on with the subset. In<br>
    this case we didnt' clean up the 'complete' copy.<br>
<br>
    Modified the previous code into one routine to free copied fonts, when we<br>
    discard a (complete) copied font during font copying free the font copy.<br>
<br>
    free Encoding from copied fonts if present<br>
<br>
    Also, change the text for font freeing so it makes sense.<br>
<br>
    Free copied font 'data' when freeing copied font<br>
<br>
    Free the 'base_font' structure when freeing FontDescriptors<br>
<br>
    release colour spaces.<br>
<br>
    Make a routine to free colour spaces, and have it free the 'serialized'<br>
    color space memory.<br>
<br>
    Free the page dictionary when we free pages.<br>
<br>
    We seem to have (at least) two different kinds of param lists which are used<br>
    to deal with getting/setting device params. The PostScript interpreter uses<br>
    'ref_params' and the PCL interpreter uses 'c_params'.<br>
<br>
    The problem is that 'ref_params_end_write_collection' frees the list memory<br>
    but 'c_params_end_write_collection' does not. Since these are accessed through<br>
    methods in the list, we don't know whether we need to free the memory or not.<br>
    This leads to a memory leak when using the PCL interpreter.<br>
<br>
    I suspect this is a bug in the implementation, but for now I've modified<br>
    'ref_params_end_write_collection' so that it nulls the pointer to the list<br>
    when it frees it. The code in gdevdsp.c can then test to see whether the<br>
    memory needs to be freed (non-NULL) or not.<br>
<br>
    For some reason this leads to a Seg Fault with fts_09_0923.pdf, but I<br>
    can't see why. I believe this is unrelated, so will investigate it further<br>
    after this work is completed.<br>
<br>
    Also changed a typecast to eliminate a warning<br>
<br>
    create a routine to clean up the 'text data' and call it. Add the<br>
    'standard fonts' to the clenaup in there.<br>
<br>
    Clean up a number of allocations (name index stack, namespace<br>
    stack etc).<br>
<br>
    Add code to free Funtiocn resource dictionaries, objects and resources,<br>
<br>
    These were missed previously, because the development was done in PCL and<br>
    teh PCL interpreter can't trigger the use of Functions.<br>
<br>
    Add code to clean up Shading and group dictionary resources. Add code to<br>
    clear the resource chains on close so that we don't end up trying to use<br>
    freed memory pointers.<br>
<br>
gs/base/gdevpdf.c<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfg.h<br>
gs/base/gdevpdfi.c<br>
gs/base/gdevpdfo.c<br>
gs/base/gdevpdfo.h<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfv.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdt.c<br>
gs/base/gdevpdt.h<br>
gs/base/gdevpdtb.c<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdtd.h<br>
gs/base/gdevpdtf.c<br>
gs/base/gdevpdti.c<br>
gs/base/gdevpdti.h<br>
gs/base/gdevpsdp.c<br>
gs/base/gsfcmap.c<br>
gs/base/gsfcmap.h<br>
gs/base/gxfcmap.h<br>
gs/base/gxfcopy.c<br>
gs/base/gxfcopy.h<br>
gs/psi/iparam.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-01 12:29:03 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=714b375a58593b62a38c3fa5dfacd0fae2d7d1f9">714b375a58593b62a38c3fa5dfacd0fae2d7d1f9</a>
<blockquote>
<p>
    Bug 693006: Guess malformed numbers.<br>
<br>
    If an unknown PDF operator has only [-.0-9], consider it a malformed<br>
    number and replace with 0.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-01 01:41:25 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=885289be955a17cb75a401a71d3b6529c755e96b">885289be955a17cb75a401a71d3b6529c755e96b</a>
<blockquote>
<p>
    Fix for another indeterminism from 60640aeb33b18f9a9fcd76fc6f1083d7c7635f2<br>
<br>
gs/base/gxdcolor.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-05-01 01:41:18 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c51dd0ad9b442a05844e1b8eb3e4b511af8c0392">c51dd0ad9b442a05844e1b8eb3e4b511af8c0392</a>
<blockquote>
<p>
    Optimize transparency bbox for image SMask.<br>
<br>
    SMask with GreyBackground != 1.0 needs to use parent bbox, but image<br>
    SMask only paint the image area so the BC cannot affect areas outside.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-30 15:11:38 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af102f5fe9a91a071b2d01c3e8ee35a0c99275ea">af102f5fe9a91a071b2d01c3e8ee35a0c99275ea</a>
<blockquote>
<p>
    Fix for indeterminism introduced in 60640aeb33b18f9a9fcd76fc6f1083d7c7635f24<br>
<br>
    The shading code was using the number of components of the target device<br>
    in making a linearity determination.  It should make use of the destination<br>
    ICC profile in that computation.<br>
<br>
gs/base/gsicc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-29 23:36:02 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e8f8eed2369d5e8709acd0aa65306758aa322e3d">e8f8eed2369d5e8709acd0aa65306758aa322e3d</a>
<blockquote>
<p>
    Initialize color procs for clip list accumulator<br>
<br>
    There are calls made during filling with this device to get the black point<br>
    of the device due to some ROP related call.  The device did not have any<br>
    procedures for mapping colors or for decode and encode.  Fix for Bug 692720.<br>
<br>
gs/base/gxacpath.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-30 15:27:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3cde6d6d3d24a0930d591df9914ddda194d13b37">3cde6d6d3d24a0930d591df9914ddda194d13b37</a>
<blockquote>
<p>
    Bug 692459: stop tiffsep(1) overwriting pages already written<br>
<br>
    The tiffsep and tiffsep1 devices both get closed and reopen when the separations<br>
    change (communicated by put_params). Previously this caused the output files to<br>
    be closed and reopened - not a problem when writing each page to its own set of<br>
    files, but when writing multipage tiffs, it resulted in all pages up to that<br>
    point to be overwritten.<br>
<br>
    We now have tiffsep and tiffsep1 handle their own file &quot;management&quot;, and prevent<br>
    output files from being closed and reopened when the device is closed and<br>
    reopened due to a put_params call.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-27 18:46:27 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60640aeb33b18f9a9fcd76fc6f1083d7c7635f24">60640aeb33b18f9a9fcd76fc6f1083d7c7635f24</a>
<blockquote>
<p>
    * Change of the tiffsep and psdcmyk device to planar devices.<br>
<br>
    This change in these devices was made to remove the 64 bit limitation of<br>
    our existing color encoding which limits us to 8 colorants without<br>
    compressed color encoding.  The motivation for this work is that even<br>
    with compressed color encoding we were starting<br>
    to encounter files with transparency in particular that exceeded the<br>
    capabilities of encoding, leading to dropped colors.   With this fix, we<br>
    encode through the clist the DeviceN color values.  The buffers for the<br>
    devices are maintained as planar buffers and fills occur with the high level<br>
    device colors.<br>
<br>
    Support was added to handle the devn color type through the shading code.  The old<br>
    code would have supported only 8 colorants in a shading.<br>
<br>
    Support was also added to the transparency code to enable the use of the put_image<br>
    procedure which for the planar device saves quite a bit of time since we can do the<br>
    copy_planes proc directly from the pdf14 planar buffer to the planar memory device buffer.<br>
    The pdf14 device also had to support fill_rectangle_hl_color.<br>
<br>
    Changes were also made to the pattern tiling code so that we avoid any planar to chunky and<br>
    back to planar conversions.  These were being done to handle ROPs.   Even when there were<br>
    not any ROPs to perform we were going through strip_tile_rop operations since the<br>
    gx_default_strip_tile_rectangle did not support planar to planar.  That support is added<br>
    with this commit.<br>
<br>
    Support had to be added to the overprint compositor to support the new color type with<br>
    fill_rectangle_hl_color.<br>
<br>
    Support had to be added to the clist for fill_rectangle_hl_color.  This required changes<br>
    on both the writing and reading side.  It is possible that the amount of data written<br>
    for these commands could be reduced and that is commented in the code.<br>
<br>
    Support also had to be added to the clip device and the mask_clip device as well<br>
    for uncolored patterns.  Also the tile clip device required support and the transparency device<br>
    required support for copy_planes.  This last function needs to be optimized.<br>
<br>
    Both of the separation devices (tiffsep and psdcmyk) that we currently have are updated to<br>
    support this method.   There is an #if option in each device file to return the<br>
    code back to the old chunky format.<br>
<br>
    A new device procedure for handling strip tiling of masks with devn colors had<br>
    to be added.  Functionality was only required for the mem planar and clist devices.<br>
<br>
    Also, it was found that the tiffsep and psdcmyk devices were maintaining separations<br>
    (spot colors) across pages. That is if page 1 had a spot color, subsequent pages<br>
    created a separation for that spot<br>
    even if those pages did not contain it.  This was fixed so that separations for a page<br>
    are only created for the spots that occur on that page.<br>
<br>
    A fix was also made to ensure that we had proper handling for the None colorants when<br>
    they are part of the DeviceN color space.<br>
<br>
gs/base/devs.mak<br>
gs/base/gdevbbox.c<br>
gs/base/gdevdbit.c<br>
gs/base/gdevdevn.c<br>
gs/base/gdevdevn.h<br>
gs/base/gdevdflt.c<br>
gs/base/gdevdsha.c<br>
gs/base/gdevmem.c<br>
gs/base/gdevmem.h<br>
gs/base/gdevmpla.c<br>
gs/base/gdevmx.c<br>
gs/base/gdevnfwd.c<br>
gs/base/gdevp14.c<br>
gs/base/gdevpdfi.c<br>
gs/base/gdevppla.c<br>
gs/base/gdevprn.c<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
gs/base/gscdevn.c<br>
gs/base/gscicach.c<br>
gs/base/gscms.h<br>
gs/base/gscsepr.c<br>
gs/base/gsdcolor.h<br>
gs/base/gsdps1.c<br>
gs/base/gsequivc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsovrc.c<br>
gs/base/gsptype1.c<br>
gs/base/gxblend.h<br>
gs/base/gxblend1.c<br>
gs/base/gxcldev.h<br>
gs/base/gxclimag.c<br>
gs/base/gxclip.c<br>
gs/base/gxclip.h<br>
gs/base/gxclip2.c<br>
gs/base/gxclipm.c<br>
gs/base/gxclist.c<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxclrect.c<br>
gs/base/gxcmap.c<br>
gs/base/gxdcolor.c<br>
gs/base/gxdcolor.h<br>
gs/base/gxdevcli.h<br>
gs/base/gxdevice.h<br>
gs/base/gxdevsop.h<br>
gs/base/gxgetbit.h<br>
gs/base/gxht.c<br>
gs/base/gxicolor.c<br>
gs/base/gxp1fill.c<br>
gs/base/gxp1impl.h<br>
gs/base/gxpcmap.c<br>
gs/base/gxpcolor.h<br>
gs/base/gxshade6.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-26 15:11:18 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dd09a0706ab09a54f5fbb05c63420c86375b45bf">dd09a0706ab09a54f5fbb05c63420c86375b45bf</a>
<blockquote>
<p>
    Memento tweaks; add Memento_breakOnFree/Realloc functionality.<br>
<br>
    Memento_breakOnFree(address) will cause a breakpoint when the block<br>
    including a given address is freed. If the block is realloced (and<br>
    hence moves elsewhere) the breakpoint is not triggered until the new<br>
    block is itself freed.<br>
<br>
    Memento_breakOnRealloc(address) will cause a breakpoint when the block<br>
    including a given address is freed or realloced.<br>
<br>
gs/base/memento.c<br>
gs/base/memento.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-25 17:33:59 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=012aef926d1e33cc64c32bf8e94ef92a299d73f9">012aef926d1e33cc64c32bf8e94ef92a299d73f9</a>
<blockquote>
<p>
    Bug 692243: Replace dictionary look-up with .execn<br>
<br>
    Replace a fragment that stores line width in a dictionary with an equivalent<br>
    code that uses execution stack and .execn . These tricks are needed to keep<br>
    the stack depth constant.<br>
<br>
gs/Resource/Init/pdf_ops.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-25 00:08:53 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70d513095fba13b20e6bba5bb77805b5233028d1">70d513095fba13b20e6bba5bb77805b5233028d1</a>
<blockquote>
<p>
    Bug 692243: Fix a typo in absolute value comparison.<br>
<br>
gs/Resource/Init/pdf_ops.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-24 17:35:10 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1830075608195e2976751303d220fda3f796abb">f1830075608195e2976751303d220fda3f796abb</a>
<blockquote>
<p>
    Bug 692969: Don't verify PDF 1.5 xref.<br>
<br>
    Don't verify stream xref table because we cannot repair PDF files with<br>
    new object format. Such verification only increases the chance that the<br>
    file fails.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-24 15:06:16 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=430e9e345c84912f953161aa843b37f235c97708">430e9e345c84912f953161aa843b37f235c97708</a>
<blockquote>
<p>
    Bug 693000: Verify /Subtype of CIDFont resource.<br>
<br>
    Check whether CIDFont resource refers to a Type 1 file and process<br>
    it accordingly.<br>
<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-24 17:48:12 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5d2134b8ebea14594411580776f1bce5c40363c">b5d2134b8ebea14594411580776f1bce5c40363c</a>
<blockquote>
<p>
    Add gx_forward_copy_planes.<br>
<br>
    Add this to the overprint device.<br>
<br>
gs/base/gdevnfwd.c<br>
gs/base/gsovrc.c<br>
gs/base/gxdevice.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-24 10:15:59 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c2a982ffda019b2822799a918d53022ec06342fa">c2a982ffda019b2822799a918d53022ec06342fa</a>
<blockquote>
<p>
    Pacify Valgrind: don't calculate unused values from undefined data.<br>
<br>
gs/lcms2/src/cmsopt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-24 10:19:01 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f10560765a226f668b72fd9b8298d644cbce08ab">f10560765a226f668b72fd9b8298d644cbce08ab</a>
<blockquote>
<p>
    Bug 693002: Add recently added files to install-doc target.<br>
<br>
    thirdparty.htm WhatIsGS.htm GS9_Color_Management.pdf<br>
<br>
    No cluster differences.<br>
<br>
gs/base/unixinst.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-23 23:44:18 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d561224d1495321d40012230abbcf835b298f557">d561224d1495321d40012230abbcf835b298f557</a>
<blockquote>
<p>
    Bug 692983: Require EOD mark in ASCII85 string.<br>
<br>
    Make sure that ASCII85-encoded string is terminated with '~&gt;' and<br>
    throw an error if it isn't. Old code accepted EOF as a valid<br>
    termination for a string token.<br>
<br>
gs/base/sa85d.c<br>
gs/base/sa85d.h<br>
gs/psi/iscan.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-23 20:03:50 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ec092a2630dd215a317f509ca283fc5cfb4e8b02">ec092a2630dd215a317f509ca283fc5cfb4e8b02</a>
<blockquote>
<p>
    Planar device memory setup tweaks.<br>
<br>
    When setting up a memory planar device, we currently build a mask<br>
    out of the plane information supplied to us about how to pack<br>
    colors into a gx_color_index. This seems like a reasonable thing to<br>
    do as we will always need to pack colors into a gx_color_index at<br>
    some point.<br>
<br>
    As part of his work on tiffsep, Michael is about to lift this<br>
    requirement though, enabling us to cope with larger numbers of<br>
    spots. The code as is fails on certain machines/compilers due to<br>
    C's undefined behaviour when shifting by more bits than are in the<br>
    variable. We spot this case explicitly, and don't bother checking<br>
    for overlap in this case.<br>
<br>
gs/base/gdevmpla.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-23 15:51:17 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a8fbd9c52897cccce7cb6e61e06acb1fe8bff7f">3a8fbd9c52897cccce7cb6e61e06acb1fe8bff7f</a>
<blockquote>
<p>
    Fix uninitialised variable access<br>
<br>
    Previous commit highlighted a missing a return value check which could result<br>
    in an uninitialised variable being accessed.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-23 13:36:53 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f57b7562c79a9e3649e95e7bafa6193b571154bb">f57b7562c79a9e3649e95e7bafa6193b571154bb</a>
<blockquote>
<p>
    Handle the remaining CIDFonts that FAPI was missing.<br>
<br>
    This causes a number of cluster file differences, almost all are the usual<br>
    single pixel differences. There are few cases slightly better, and a few<br>
    slightly worse.<br>
<br>
    One file is a &quot;regression&quot; (depending on your point of view) which is badq.pdf<br>
    where the two contours making up the lower case &quot;q&quot; both go in the same<br>
    direction, so non-zero winding for filling results in the &quot;loop&quot; in the &quot;q&quot;<br>
    being completely filled.<br>
<br>
    The font is to blame here, but I will continue to look into a solution for<br>
    Freetype.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-21 13:46:37 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b40ce1e58c211008831971f3866cb49e912a1e4f">b40ce1e58c211008831971f3866cb49e912a1e4f</a>
<blockquote>
<p>
    bmpcmp: Error handling tweaks.<br>
<br>
    When failing to match a page due to differences in number of colors<br>
    or sizes etc, output the page number and continue looking at other<br>
    pages in the file.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-20 13:52:33 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a943658240231bede6cd5f04d7f1bfa713918ccf">a943658240231bede6cd5f04d7f1bfa713918ccf</a>
<blockquote>
<p>
    Fixes 692992.  Implicit closepaths not properly detected.<br>
<br>
    GL/2 closepaths, implicitly detected when the first point of a subpath<br>
    and last are equal, were not recognized in some cases because we were<br>
    doing a comparison of transformed floating point values, the<br>
    comparison is now done correctly in fixed point.<br>
<br>
    Many regression test files have progressions where the first and last<br>
    point of a path now have a proper join where one did not exist before.<br>
<br>
pcl/pgdraw.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-14 22:29:40 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=579e0e04b0d83d4364c9c4e42dcced8ca85fc634">579e0e04b0d83d4364c9c4e42dcced8ca85fc634</a>
<blockquote>
<p>
    Remove obsolete bug list.<br>
<br>
tools/bug-list.txt<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-20 14:58:18 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9350f4a92c1765d13afbff3e6a4576c33290d91">b9350f4a92c1765d13afbff3e6a4576c33290d91</a>
<blockquote>
<p>
    Default to Windows UNICODE file names &quot;off&quot;.<br>
<br>
    Bring the PCL build in-line with Ghostscript so that the halding of UNICODE file names<br>
    is disabled in the default build.<br>
<br>
    As with Ghostscript, adding &quot;USEUNICODE=1&quot; to the nmake parameters will enable that code.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
main/pcl6_msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-20 07:20:16 +0100
</strong>
<br>Chris Liddell &lt;Chris.Liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=67a924e4b93987d2c915a161ce67bdf9c1d6d4a5">67a924e4b93987d2c915a161ce67bdf9c1d6d4a5</a>
<blockquote>
<p>
    Bug 692962: fix endian issue with lcms2 i/face<br>
<br>
    In the lcms2 interface code, am endian flag was being set on big endian<br>
    platforms, and it shouldn't be.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gsicc_lcms2.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-19 14:27:57 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d252b4f9d3a949778894a86bb71cc2206fce11cf">d252b4f9d3a949778894a86bb71cc2206fce11cf</a>
<blockquote>
<p>
    Bug 692968: regenerate some appearances.<br>
<br>
    Regenerate appearance streams when it is requested by the file<br>
    and implemented in PDF interpreter. (NeedAppearances is set)<br>
    Otherwise, continue to use appearance streams provided by the<br>
    file.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-17 10:39:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2d76c9849ea165176dc836f926ba1604e8e85513">2d76c9849ea165176dc836f926ba1604e8e85513</a>
<blockquote>
<p>
    Small change to djet500C device.<br>
<br>
    Remove an optimisation that seems to cause issues with newer HP Deskjets.<br>
<br>
    The device previously would determine how much (if any) of the right side<br>
    of a given scanline was blank, and drop those samples - thus avoiding sending<br>
    unmarked samples to the printer.<br>
<br>
    On recent Deskjets, this resulted those unmarked samples printing black. We<br>
    retain the similar optimisation for skipping entirely unmarked scanlines.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gdevdjtc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-16 10:32:06 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=adb39bd6b16e20c7c6cf235518fc98ab242552e7">adb39bd6b16e20c7c6cf235518fc98ab242552e7</a>
<blockquote>
<p>
    Fix segfault caused by change in zcharx (34f32ee) seen with 11-13.PS.<br>
<br>
    Under some error conditions, the 'penum' was not being set, and we would<br>
    de-reference whatever (undefined) value was laying around. Initialize it<br>
    to NULL and check before clearing pointers. I couldn't get this to fail<br>
    in a debug or profile build -- only a release build.<br>
<br>
gs/psi/zcharx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-16 09:04:39 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=67894626809b89f813d3ed580210ee11da72af52">67894626809b89f813d3ed580210ee11da72af52</a>
<blockquote>
<p>
    Fix segfault in 12-13.PS CET. Yet another ref counted pointer not being cleared.<br>
<br>
gs/base/gscscie.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-15 16:53:58 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ffedf4d9c97b1f502e47bab7aed8ee2531c3de5c">ffedf4d9c97b1f502e47bab7aed8ee2531c3de5c</a>
<blockquote>
<p>
    Fix ref counting of CIEBased 'params' during alloc_restore_all with 11-19.PS CET.<br>
<br>
    The 'const' had to be broken to allow the pointer to be set to NULL when the object is freed<br>
    due to reference count going to zero. Debug build showed an error message due to ref_count<br>
    going below zero, but since this is referencing freed memory, can cause a segfault.<br>
<br>
gs/base/gscscie.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-12 11:55:50 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=34f32ee8cb08590aeaaab23d1e14ee48c9932fb2">34f32ee8cb08590aeaaab23d1e14ee48c9932fb2</a>
<blockquote>
<p>
    Fix 692707. Clear pointers in text_enum when freeing the widths array.<br>
<br>
    When an error occurred (as with the CET ILLEGAL test in 33_all.ps) the widths array would be freed,<br>
    but the pointer in the gs_text_enum_t (text.x_widths, text.y_widths) was not cleared.<br>
<br>
gs/psi/zcharx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-14 12:52:51 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fd34d1533bfef0ec2a12500ea8b9fe80249cb990">fd34d1533bfef0ec2a12500ea8b9fe80249cb990</a>
<blockquote>
<p>
    bmpcmp: Flip psdcmyk images to be the right way up.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-13 19:36:36 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=365d6f549be4f8fd289adb06078d568ae37b108a">365d6f549be4f8fd289adb06078d568ae37b108a</a>
<blockquote>
<p>
    Update bmpcmp to (at least try to) honour the color mapping for psd spots.<br>
<br>
    We read the color info for the spots, and we try to apply it when mapping<br>
    down to cmyk. It's entirely possible that the color information needs<br>
    to be inverted or reordered or something, but I don't have anything<br>
    that can display psd files to check.<br>
<br>
    Talk to Michael about this when he returns. This is better than nothing.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-27 03:11:02 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1579963f90d1bfff7fa7e6e7a0417fa8be266b4">d1579963f90d1bfff7fa7e6e7a0417fa8be266b4</a>
<blockquote>
<p>
    Support HPGL style path handling.<br>
<br>
    HPGL handles paths slightly differently to the postscript imaging model.<br>
<br>
    When a path is filled, successive moveto's are treated as linetos.<br>
    (i.e. the 'place we close the path to' is left at the first moveto,<br>
    and the area remains fillable). Stroking is unaffected however.<br>
<br>
    To model this in Ghostscript we add a new path segment type 's_gap'.<br>
    The filling code treats this as a lineto. The stroking code is updated<br>
    to not stroke such edges (and not to break the subpath at this point).<br>
<br>
    We add a new parameter to the imager state (hpgl_path_mode), new<br>
    accessor functions (gs_sethpglpathmode, gs_currenthpglpathmode),<br>
    and new postscript operators (.sethpglpathmode and .currenthpglpathmode).<br>
<br>
    If hpgl path mode is set to a non-zero value, then path construction<br>
    treats movetos in an open subpath as gaptos.<br>
<br>
    Currently this is disabled (see pcl/pctop.c for where it would be<br>
    enabled) until we get the pcl interpreter to generate paths in<br>
    exactly the right form.<br>
<br>
    Still to do:<br>
      * Update PDF write to spot such paths and to convert them as<br>
        appropriate when writing out.<br>
<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevvec.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gspenum.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxcpath.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxstroke.c<br>
gs/base/gxttfb.c<br>
gs/base/gzpath.h<br>
gs/doc/Language.htm<br>
gs/psi/zgstate.c<br>
pcl/pctop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-13 18:51:34 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=34b74d7bb34390ad75ba8ca52b6bd5e94e85a51e">34b74d7bb34390ad75ba8ca52b6bd5e94e85a51e</a>
<blockquote>
<p>
    bmpcmp: Another attempt to make cmyk + spots psdcmyk files work.<br>
<br>
    Hopefully this should work; we now make the diff map, then<br>
    convert down to cmyk (by dropping the spots), then convert<br>
    cmyk -&gt; rgb.<br>
<br>
    Next step is to add the spots into the cmyk as we map down.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-13 18:34:00 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42af17e78ebac4e31e4694d949ef5dfadeacb4fd">42af17e78ebac4e31e4694d949ef5dfadeacb4fd</a>
<blockquote>
<p>
    Update bmpcmp so that it saves pngs from bpp &gt; 32 psdcmyk images<br>
<br>
    I'd forgotten to update the png saving code.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-12 16:41:59 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=35908068027eb9b7d2a6d1adaf371bc9fdeeb800">35908068027eb9b7d2a6d1adaf371bc9fdeeb800</a>
<blockquote>
<p>
    Modified to not ignore error codes, no expected differences.<br>
<br>
gs/base/gxp1fill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-12 09:34:32 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b355f679fd03a5d5d334b6d74202d9c3d58110b">1b355f679fd03a5d5d334b6d74202d9c3d58110b</a>
<blockquote>
<p>
    Fix 692970 - device reference counting incorrect.<br>
<br>
    The tile clipping device did not properly release its reference to the<br>
    target device.<br>
<br>
gs/base/gxclip2.c<br>
gs/base/gxclip2.h<br>
gs/base/gxp1fill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-11 14:42:51 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3769efbb709889aae39f905dd04b72a81bc37f3d">3769efbb709889aae39f905dd04b72a81bc37f3d</a>
<blockquote>
<p>
    Fix make clean for GhostPDL.<br>
<br>
common/ugcc_top.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-11 09:50:55 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42c6f088344544b5e854899e4126e0d3ec4ee496">42c6f088344544b5e854899e4126e0d3ec4ee496</a>
<blockquote>
<p>
    Slight hack in gsmchunk.c for Memento builds.<br>
<br>
    In Memento builds we nobble the chunk manager to only put a single<br>
    block in each chunk. As such, the debugging is much nicer if we<br>
    label the chunks with the block name rather than &quot;chunk_mem_node_add&quot;.<br>
<br>
gs/base/gsmchunk.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-10 18:04:39 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ebc8452e68710ace66b3acca4d1701bfa6f59143">ebc8452e68710ace66b3acca4d1701bfa6f59143</a>
<blockquote>
<p>
    Add Memento_label calls to gs_heap_alloc_bytes malloc calls.<br>
<br>
    Should get us a lot more information in the debug output of<br>
    Memento.<br>
<br>
gs/base/gsmalloc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-10 17:49:33 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=113beaf41ec17de71a57ffda7324442fe2000623">113beaf41ec17de71a57ffda7324442fe2000623</a>
<blockquote>
<p>
    Tidy up pattern accumulator device handling code.<br>
<br>
    Hopefully slightly more comprehensible. Does the same job as before.<br>
<br>
gs/base/gxpcmap.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-09 09:32:12 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=612f02c29f356c44ca72ec31eb6a64b65d7e7d04">612f02c29f356c44ca72ec31eb6a64b65d7e7d04</a>
<blockquote>
<p>
    Print out message from bmpcmp.c if no differences detected.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-08 15:40:42 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e0dd327627f3c5dfe50f51ab583b5d696957972">5e0dd327627f3c5dfe50f51ab583b5d696957972</a>
<blockquote>
<p>
    Prefaced bmpcmp.c error messages with 'bmpcmp:'.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-06 23:43:04 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5431c68e9c666e3c8010202e9501f101f6725d9">b5431c68e9c666e3c8010202e9501f101f6725d9</a>
<blockquote>
<p>
    Remove the need for seeking in bmpcmp when reading psdcmyk files.<br>
<br>
    The cluster likes to drive bmpcmp from pipes.<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-06 14:22:33 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=554b5c6088a1f53a648b5702a3245bdbba884ffa">554b5c6088a1f53a648b5702a3245bdbba884ffa</a>
<blockquote>
<p>
    Fixed bmpcmp.c to properly set *cmyk in psd_read().<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-06 16:53:07 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20dcd26801be3d10bd5ebd596b50eaa3908050be">20dcd26801be3d10bd5ebd596b50eaa3908050be</a>
<blockquote>
<p>
    Add psdcmyk support to bmpcmp.<br>
<br>
    bmpcmp now reads psdcmyk files. It will read all n planes (cmyk +<br>
    spots) and search in them for diffs. When it comes to output<br>
    the differences are highlighted correctly in the diff image,<br>
    but only the cmyk planes are used to create the output images<br>
    (i.e. spots are not mapped down to cmyk currently).<br>
<br>
gs/toolbin/bmpcmp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-05 16:21:05 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e97d23a41580b3609a7b98dc90c4a59c6d093e8">8e97d23a41580b3609a7b98dc90c4a59c6d093e8</a>
<blockquote>
<p>
    Bug 692967: drop incorrect filter parameters.<br>
<br>
    Check for an empty array given as filter parameters and<br>
    intrrpret it as no parameters.<br>
<br>
gs/Resource/Init/pdf_base.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-05 11:06:36 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3679722d0c3ade2f644bad1c5b7fafde8de5fb6">c3679722d0c3ade2f644bad1c5b7fafde8de5fb6</a>
<blockquote>
<p>
    Add the 32-bit Memento directories to .gitignore<br>
<br>
.gitignore<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-02 17:47:41 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6e7d591ae3b2dab7808406e6052a4b79b05f2633">6e7d591ae3b2dab7808406e6052a4b79b05f2633</a>
<blockquote>
<p>
    Fix a makefile typo....<br>
<br>
    Back in an previous commit, I made a typo for the cross platform makefile<br>
    variables - I used '_D_' instead of 'D_'<br>
<br>
    No cluster differences.<br>
<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-04-02 17:08:15 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82eb1a659a96fcd834d0e673c7c8f36781499959">82eb1a659a96fcd834d0e673c7c8f36781499959</a>
<blockquote>
<p>
    Bug 692761: some errors reported by cppcheck<br>
<br>
    Patch from Joshua Beck ( jxb091000@utdallas.edu ) addressing issues<br>
    identified by cppcheck.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/genconf.c<br>
gs/base/gsiomacres.c<br>
gs/base/mkromfs.c<br>
gs/psi/dwmainc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-30 13:36:37 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ff339b6aca7087e32be7516fda9ef0b9df38e72">1ff339b6aca7087e32be7516fda9ef0b9df38e72</a>
<blockquote>
<p>
    Bug 692767: Render shading as a group.<br>
<br>
    Render shading as an isolated group if the file has a soft mask.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-30 11:59:14 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8eb4118573d2d6959f8578a10f9d76ce9d802799">8eb4118573d2d6959f8578a10f9d76ce9d802799</a>
<blockquote>
<p>
    PDF interpreter - preserve CIDSystemInfo in embedded CID fonts<br>
<br>
    The PDF interpreter was not preserving the CIDSystemInfo from CIDFonts in<br>
    PDF files (the TrueType code did not allow for this to be done)<br>
<br>
    Updated the TrueType CIDFont building code to accept a CIDSystemInfo dictionary<br>
    as a parameter, and teh PDF interpreter to pass it form the original<br>
    CIDFont.<br>
<br>
    No differences expected as this is not tested<br>
<br>
gs/Resource/Init/gs_ttf.ps<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-29 08:50:13 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=67e3458154d8ef718be5a495aa64dc77c59393fe">67e3458154d8ef718be5a495aa64dc77c59393fe</a>
<blockquote>
<p>
    Fix bugs 692542 and 692706, bad rendering of copies after first page with NumRenderingThreads &gt; 1<br>
<br>
    The clist_get_band_from_thread logic would get confused as to the lookahead_direction if the<br>
    requested thread was the first or last and the most recent previously rendered thread didn't<br>
    match.<br>
<br>
gs/base/gxclthrd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-29 16:05:44 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0604c2368ca3fd75be1c26ce6c7697cbce55968f">0604c2368ca3fd75be1c26ce6c7697cbce55968f</a>
<blockquote>
<p>
    Fix a minor compiler warning by casting a pointer.<br>
<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-29 11:38:54 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=be6456331f4cff58f11f681450166fe2309e2ad5">be6456331f4cff58f11f681450166fe2309e2ad5</a>
<blockquote>
<p>
    pdfwrite - when a Charstring is not found for a glyph use the /.notdef width instead of 0<br>
<br>
    Bug #692944 the file uses an embedded font which does not include a /space<br>
    glyph, but proceeds to use the space anyway. We were using a widht of 0 in<br>
    this case but the file programmatically spaces glyphs to a predefined size.<br>
    This was causing the PDF to be incorrectly spaced.<br>
<br>
    We now use the width of the /.notdef glyph instead for sizing calculations,<br>
    since this si the glyph which will eventually be used.<br>
<br>
    This exhibits a small difference in 30-06.ps but since this is testing<br>
    missing glyphs in a QL test file, I'm going to accept it as a difference in<br>
    order to improve the result with files of this type.<br>
<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-29 02:23:20 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23e8552bb2c1849c118d9f5d81f5629ebe436acb">23e8552bb2c1849c118d9f5d81f5629ebe436acb</a>
<blockquote>
<p>
    Bug 692886: use sequential page numbers in PDF collections.<br>
<br>
    Use sequential page numbering for -dFirstPage and -dLastPage parameters<br>
    when they are used with PDF Collections.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-28 13:52:27 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa9f730f07f8d471c222956e6a532ab2698ef58e">aa9f730f07f8d471c222956e6a532ab2698ef58e</a>
<blockquote>
<p>
    Fix bug 692688: pdf14_copy_alpha did not move the source data pointer when adjusting for y&lt;rect.p.y<br>
<br>
    The pdf14_copy_alpha doesn't use the 'fit_copy' macro since that macro has specific variables<br>
    embedded, but the when the 'h' and 'y' are adjusted, the source data pointer needs to move to<br>
    the first line that will be used.<br>
<br>
gs/base/gdevp14.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-28 17:03:25 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a1075141f25f7bf38bf372f9ccc65dfd9c0c8baa">a1075141f25f7bf38bf372f9ccc65dfd9c0c8baa</a>
<blockquote>
<p>
    Bug 692950: further revise falling back to unhinted rendering.<br>
<br>
    In the FAPI/FT interface, we caught some errors from Freetype to do with the<br>
    byte code hinting in TrueType fonts - when they occur we retry the glyph<br>
    rendering with hinting disabled.<br>
<br>
    This commit expands that to *any* error from the byte code interpreter will<br>
    now cause us to retry unhinted.<br>
<br>
    (the core problem in this case seems to be scale depending operations in the<br>
    font program, which is supposed not to be permitted).<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/fapi_ft.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-27 19:29:56 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5b50a46f4ed3e54fec6727a1ad52258e5d32b0a9">5b50a46f4ed3e54fec6727a1ad52258e5d32b0a9</a>
<blockquote>
<p>
    Add -sBandListStorage={file|memory} option and default to no bitmap compression if file clist.<br>
<br>
    Also alphabetize the clist options and remove the arbitrary 10000 minimum for MaxBitmap<br>
    (now -dMaxBitmap=0 is legal). The change to not compress bitmaps (using CCITT) when going<br>
    to disk based clist improves performance.<br>
<br>
gs/base/gdevprn.c<br>
gs/base/gdevprn.h<br>
gs/base/gxclbits.c<br>
gs/base/gxclist.c<br>
gs/base/lib.mak<br>
gs/doc/Language.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-26 18:57:48 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a13e642324435d92f2f79f6c28b5f25758a249c">6a13e642324435d92f2f79f6c28b5f25758a249c</a>
<blockquote>
<p>
    Ensure FAPI uses appropriate glyph name for metrics.<br>
<br>
    Found investigating a customer 532 report: Ghostscript &quot;augments&quot; glyph names<br>
    under certain circumstances, and depending on the font type, FAPI may have to<br>
    remove that augmentation (mainly when disc based fonts are being used).<br>
<br>
    FAPI was then using the un-augmented glyph name to read the glyph metrics,<br>
    which caused the wrong metrics to be used because the metrics(s) dictionary was<br>
    created with the augmented glyph name in place.<br>
<br>
    Causes a difference in the cluster file Bug691031.pdf - this is<br>
    progression.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-26 14:44:05 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9ca16b047d2ee4dc862aa18465c80c2250c213c5">9ca16b047d2ee4dc862aa18465c80c2250c213c5</a>
<blockquote>
<p>
    Bug 692938: fix link error on AIX<br>
<br>
    AIX 5.x (probably others) don't have memalign, so update the conditions<br>
    under which openjpeg will (try to) use memalign to exclude AIX systems.<br>
<br>
    No cluster differences.<br>
<br>
gs/openjpeg/libopenjpeg/opj_malloc.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-22 15:08:43 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=701b769786f6e2b036df8427c17c6a5dc294a672">701b769786f6e2b036df8427c17c6a5dc294a672</a>
<blockquote>
<p>
    pdfwrite - update CIDSet emission for PDF/A-2 compatibility<br>
<br>
    This completes the work for creation of PDF/A-2 files. Note that Acrobat X<br>
    preflight complains about the CIDSet we include in PDF/A-2 files. However I<br>
    believe that the current code is correct, and that the Acrobat preflight is<br>
    incorrect. The PDF-Tools validator is completely happy with our CIDSet.<br>
<br>
    I'm unable to fathom what it is the Acrobat preflight tool wants. The old<br>
    PDF/A-1 CIDSet is flagged as invalid, as is every premutation of values I<br>
    can think of.<br>
<br>
    In the absence of any example file to look at, or a definitive resource on<br>
    the subject, I'm comitting this and concluding the development. I will of<br>
    course be happy to work on the CIDSet emission if someone can bring more<br>
    information.<br>
<br>
    No differences expected PDF/A is not tested by the cluster.<br>
<br>
gs/base/gdevpdtd.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-21 09:36:40 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b68ee69570803001a959721209fff6a2e4430f84">b68ee69570803001a959721209fff6a2e4430f84</a>
<blockquote>
<p>
    Improves 692527 - the missing characters now print and the prototype<br>
    svg device now works with many more files.<br>
<br>
    Before this change very few jobs would work, the color state wasn't<br>
    updated properly.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/gdevsvg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-21 14:22:35 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8031fd574e3949cf1e17eed0372034e522580dca">8031fd574e3949cf1e17eed0372034e522580dca</a>
<blockquote>
<p>
    Bug 692850: FAPI: clamp fixed-point overflows instead of error.<br>
<br>
    This job ends up with an insanely big scale factor when trying rendering glyphs<br>
    from a font. Obviously that ends up too big to render to a bitmap in the<br>
    font renderer, so we build a path instead.<br>
<br>
    Previously, during FAPI path extraction, if the coordinates overflowed what we<br>
    can represent in our fixed point representation, give a rangecheck error. But<br>
    the AFS code seems to clamp the coordinate to something we can represent, and<br>
    carry on.<br>
<br>
    Do the same in FAPI.<br>
<br>
    No cluster differences.<br>
<br>
gs/psi/zfapi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-15 11:51:23 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c0f193bc6673fd4c6c257fd8c6fe740882c6023">0c0f193bc6673fd4c6c257fd8c6fe740882c6023</a>
<blockquote>
<p>
    Another Freetype fix.<br>
<br>
    From:<br>
    http://git.savannah.gnu.org/cgit/freetype/freetype2.git/commit/?id=b43e0f44<br>
<br>
gs/freetype/src/type1/t1load.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-14 14:49:19 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb20f1cf128936c871e1ccb8161db382e866336a">eb20f1cf128936c871e1ccb8161db382e866336a</a>
<blockquote>
<p>
    Backport incremental interface fix from FT git.<br>
<br>
    http://git.savannah.gnu.org/cgit/freetype/freetype2.git/commit/?id=9a55cb<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/freetype/src/type1/t1load.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-14 14:48:31 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=078d7ccbeb5250c93b758c6566d368c11c1da986">078d7ccbeb5250c93b758c6566d368c11c1da986</a>
<blockquote>
<p>
    Update to Freetype 2.4.9<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/freetype/ChangeLog<br>
gs/freetype/Jamfile<br>
gs/freetype/README<br>
gs/freetype/autogen.sh<br>
gs/freetype/builds/amiga/makefile<br>
gs/freetype/builds/amiga/makefile.os4<br>
gs/freetype/builds/amiga/smakefile<br>
gs/freetype/builds/amiga/src/base/ftsystem.c<br>
gs/freetype/builds/mac/FreeType.m68k_cfm.make.txt<br>
gs/freetype/builds/mac/FreeType.m68k_far.make.txt<br>
gs/freetype/builds/mac/FreeType.ppc_carbon.make.txt<br>
gs/freetype/builds/mac/FreeType.ppc_classic.make.txt<br>
gs/freetype/builds/mac/ftmac.c<br>
gs/freetype/builds/symbian/bld.inf<br>
gs/freetype/builds/symbian/freetype.mmp<br>
gs/freetype/builds/toplevel.mk<br>
gs/freetype/builds/unix/.gitignore<br>
gs/freetype/builds/unix/aclocal.m4<br>
gs/freetype/builds/unix/config.guess<br>
gs/freetype/builds/unix/config.sub<br>
gs/freetype/builds/unix/configure<br>
gs/freetype/builds/unix/configure.ac<br>
gs/freetype/builds/unix/configure.raw<br>
gs/freetype/builds/unix/detect.mk<br>
gs/freetype/builds/unix/freetype-config.in<br>
gs/freetype/builds/unix/freetype2.in<br>
gs/freetype/builds/unix/ftconfig.in<br>
gs/freetype/builds/unix/install-sh<br>
gs/freetype/builds/unix/ltmain.sh<br>
gs/freetype/builds/vms/ftconfig.h<br>
gs/freetype/builds/vms/ftsystem.c<br>
gs/freetype/builds/win32/vc2005/freetype.vcproj<br>
gs/freetype/builds/win32/vc2005/index.html<br>
gs/freetype/builds/win32/vc2008/freetype.vcproj<br>
gs/freetype/builds/win32/vc2008/index.html<br>
gs/freetype/builds/win32/vc2010/freetype.sln<br>
gs/freetype/builds/win32/vc2010/freetype.vcxproj<br>
gs/freetype/builds/win32/vc2010/freetype.vcxproj.filters<br>
gs/freetype/builds/win32/vc2010/index.html<br>
gs/freetype/builds/win32/visualc/freetype.dsp<br>
gs/freetype/builds/win32/visualc/freetype.vcproj<br>
gs/freetype/builds/win32/visualc/index.html<br>
gs/freetype/builds/win32/visualce/freetype.dsp<br>
gs/freetype/builds/win32/visualce/freetype.vcproj<br>
gs/freetype/builds/win32/visualce/index.html<br>
gs/freetype/builds/wince/vc2005-ce/freetype.vcproj<br>
gs/freetype/builds/wince/vc2005-ce/index.html<br>
gs/freetype/builds/wince/vc2008-ce/freetype.vcproj<br>
gs/freetype/builds/wince/vc2008-ce/index.html<br>
gs/freetype/configure<br>
gs/freetype/devel/ftoption.h<br>
gs/freetype/docs/CHANGES<br>
gs/freetype/docs/GPL.TXT<br>
gs/freetype/docs/GPLv2.TXT<br>
gs/freetype/docs/INSTALL<br>
gs/freetype/docs/INSTALL.ANY<br>
gs/freetype/docs/INSTALL.UNIX<br>
gs/freetype/docs/LICENSE.TXT<br>
gs/freetype/docs/PROBLEMS<br>
gs/freetype/docs/UPGRADE.UNIX<br>
gs/freetype/docs/VERSION.DLL<br>
gs/freetype/docs/formats.txt<br>
gs/freetype/docs/reference/.gitignore<br>
gs/freetype/docs/reference/ft2-base_interface.html<br>
gs/freetype/docs/reference/ft2-basic_types.html<br>
gs/freetype/docs/reference/ft2-bdf_fonts.html<br>
gs/freetype/docs/reference/ft2-bitmap_handling.html<br>
gs/freetype/docs/reference/ft2-bzip2.html<br>
gs/freetype/docs/reference/ft2-cache_subsystem.html<br>
gs/freetype/docs/reference/ft2-cid_fonts.html<br>
gs/freetype/docs/reference/ft2-computations.html<br>
gs/freetype/docs/reference/ft2-font_formats.html<br>
gs/freetype/docs/reference/ft2-gasp_table.html<br>
gs/freetype/docs/reference/ft2-glyph_management.html<br>
gs/freetype/docs/reference/ft2-glyph_stroker.html<br>
gs/freetype/docs/reference/ft2-glyph_variants.html<br>
gs/freetype/docs/reference/ft2-gx_validation.html<br>
gs/freetype/docs/reference/ft2-gzip.html<br>
gs/freetype/docs/reference/ft2-header_file_macros.html<br>
gs/freetype/docs/reference/ft2-incremental.html<br>
gs/freetype/docs/reference/ft2-index.html<br>
gs/freetype/docs/reference/ft2-lcd_filtering.html<br>
gs/freetype/docs/reference/ft2-list_processing.html<br>
gs/freetype/docs/reference/ft2-lzw.html<br>
gs/freetype/docs/reference/ft2-mac_specific.html<br>
gs/freetype/docs/reference/ft2-module_management.html<br>
gs/freetype/docs/reference/ft2-multiple_masters.html<br>
gs/freetype/docs/reference/ft2-ot_validation.html<br>
gs/freetype/docs/reference/ft2-outline_processing.html<br>
gs/freetype/docs/reference/ft2-pfr_fonts.html<br>
gs/freetype/docs/reference/ft2-quick_advance.html<br>
gs/freetype/docs/reference/ft2-raster.html<br>
gs/freetype/docs/reference/ft2-sfnt_names.html<br>
gs/freetype/docs/reference/ft2-sizes_management.html<br>
gs/freetype/docs/reference/ft2-system_interface.html<br>
gs/freetype/docs/reference/ft2-toc.html<br>
gs/freetype/docs/reference/ft2-truetype_engine.html<br>
gs/freetype/docs/reference/ft2-truetype_tables.html<br>
gs/freetype/docs/reference/ft2-type1_tables.html<br>
gs/freetype/docs/reference/ft2-user_allocation.html<br>
gs/freetype/docs/reference/ft2-version.html<br>
gs/freetype/docs/reference/ft2-winfnt_fonts.html<br>
gs/freetype/docs/release<br>
gs/freetype/include/freetype/config/ftconfig.h<br>
gs/freetype/include/freetype/config/ftheader.h<br>
gs/freetype/include/freetype/config/ftoption.h<br>
gs/freetype/include/freetype/config/ftstdlib.h<br>
gs/freetype/include/freetype/freetype.h<br>
gs/freetype/include/freetype/ftbbox.h<br>
gs/freetype/include/freetype/ftbzip2.h<br>
gs/freetype/include/freetype/ftcache.h<br>
gs/freetype/include/freetype/ftchapters.h<br>
gs/freetype/include/freetype/fterrdef.h<br>
gs/freetype/include/freetype/fterrors.h<br>
gs/freetype/include/freetype/ftgasp.h<br>
gs/freetype/include/freetype/ftglyph.h<br>
gs/freetype/include/freetype/ftmoderr.h<br>
gs/freetype/include/freetype/ftoutln.h<br>
gs/freetype/include/freetype/ftrender.h<br>
gs/freetype/include/freetype/ftstroke.h<br>
gs/freetype/include/freetype/fttypes.h<br>
gs/freetype/include/freetype/internal/autohint.h<br>
gs/freetype/include/freetype/internal/ftdriver.h<br>
gs/freetype/include/freetype/internal/ftobjs.h<br>
gs/freetype/include/freetype/internal/ftpic.h<br>
gs/freetype/include/freetype/internal/ftrfork.h<br>
gs/freetype/include/freetype/internal/ftserv.h<br>
gs/freetype/include/freetype/internal/ftstream.h<br>
gs/freetype/include/freetype/internal/fttrace.h<br>
gs/freetype/include/freetype/internal/pcftypes.h<br>
gs/freetype/include/freetype/internal/pshints.h<br>
gs/freetype/include/freetype/internal/services/svbdf.h<br>
gs/freetype/include/freetype/internal/services/svcid.h<br>
gs/freetype/include/freetype/internal/services/svgldict.h<br>
gs/freetype/include/freetype/internal/services/svmm.h<br>
gs/freetype/include/freetype/internal/services/svpostnm.h<br>
gs/freetype/include/freetype/internal/services/svpscmap.h<br>
gs/freetype/include/freetype/internal/services/svpsinfo.h<br>
gs/freetype/include/freetype/internal/services/svsfnt.h<br>
gs/freetype/include/freetype/internal/services/svttcmap.h<br>
gs/freetype/include/freetype/internal/services/svttglyf.h<br>
gs/freetype/include/freetype/internal/sfnt.h<br>
gs/freetype/include/freetype/internal/t1types.h<br>
gs/freetype/include/freetype/internal/tttypes.h<br>
gs/freetype/include/freetype/t1tables.h<br>
gs/freetype/include/freetype/tttables.h<br>
gs/freetype/modules.cfg<br>
gs/freetype/objs/.gitignore<br>
gs/freetype/src/autofit/afangles.c<br>
gs/freetype/src/autofit/afcjk.c<br>
gs/freetype/src/autofit/afcjk.h<br>
gs/freetype/src/autofit/afdummy.c<br>
gs/freetype/src/autofit/afdummy.h<br>
gs/freetype/src/autofit/aferrors.h<br>
gs/freetype/src/autofit/afglobal.c<br>
gs/freetype/src/autofit/afglobal.h<br>
gs/freetype/src/autofit/afhints.c<br>
gs/freetype/src/autofit/afhints.h<br>
gs/freetype/src/autofit/afindic.c<br>
gs/freetype/src/autofit/aflatin.c<br>
gs/freetype/src/autofit/aflatin.h<br>
gs/freetype/src/autofit/aflatin2.c<br>
gs/freetype/src/autofit/afloader.c<br>
gs/freetype/src/autofit/afloader.h<br>
gs/freetype/src/autofit/afmodule.c<br>
gs/freetype/src/autofit/afpic.c<br>
gs/freetype/src/autofit/afpic.h<br>
gs/freetype/src/autofit/aftypes.h<br>
gs/freetype/src/autofit/afwarp.c<br>
gs/freetype/src/autofit/autofit.c<br>
gs/freetype/src/autofit/rules.mk<br>
gs/freetype/src/base/basepic.c<br>
gs/freetype/src/base/basepic.h<br>
gs/freetype/src/base/ftadvanc.c<br>
gs/freetype/src/base/ftbase.c<br>
gs/freetype/src/base/ftbase.h<br>
gs/freetype/src/base/ftbitmap.c<br>
gs/freetype/src/base/ftcalc.c<br>
gs/freetype/src/base/ftdbgmem.c<br>
gs/freetype/src/base/ftglyph.c<br>
gs/freetype/src/base/ftinit.c<br>
gs/freetype/src/base/ftmac.c<br>
gs/freetype/src/base/ftobjs.c<br>
gs/freetype/src/base/ftoutln.c<br>
gs/freetype/src/base/ftpatent.c<br>
gs/freetype/src/base/ftpic.c<br>
gs/freetype/src/base/ftrfork.c<br>
gs/freetype/src/base/ftstream.c<br>
gs/freetype/src/base/ftstroke.c<br>
gs/freetype/src/base/ftsystem.c<br>
gs/freetype/src/base/fttype1.c<br>
gs/freetype/src/bdf/README<br>
gs/freetype/src/bdf/bdf.h<br>
gs/freetype/src/bdf/bdfdrivr.c<br>
gs/freetype/src/bdf/bdfdrivr.h<br>
gs/freetype/src/bdf/bdferror.h<br>
gs/freetype/src/bdf/bdflib.c<br>
gs/freetype/src/bzip2/Jamfile<br>
gs/freetype/src/bzip2/ftbzip2.c<br>
gs/freetype/src/bzip2/rules.mk<br>
gs/freetype/src/cache/ftcbasic.c<br>
gs/freetype/src/cache/ftccache.c<br>
gs/freetype/src/cache/ftccache.h<br>
gs/freetype/src/cache/ftccback.h<br>
gs/freetype/src/cache/ftccmap.c<br>
gs/freetype/src/cache/ftcerror.h<br>
gs/freetype/src/cache/ftcglyph.c<br>
gs/freetype/src/cache/ftcglyph.h<br>
gs/freetype/src/cache/ftcmanag.c<br>
gs/freetype/src/cache/ftcmanag.h<br>
gs/freetype/src/cache/ftcmru.c<br>
gs/freetype/src/cache/ftcsbits.c<br>
gs/freetype/src/cache/ftcsbits.h<br>
gs/freetype/src/cff/cffdrivr.c<br>
gs/freetype/src/cff/cfferrs.h<br>
gs/freetype/src/cff/cffgload.c<br>
gs/freetype/src/cff/cffload.c<br>
gs/freetype/src/cff/cffload.h<br>
gs/freetype/src/cff/cffobjs.c<br>
gs/freetype/src/cff/cffparse.c<br>
gs/freetype/src/cff/cffparse.h<br>
gs/freetype/src/cff/cffpic.c<br>
gs/freetype/src/cff/cffpic.h<br>
gs/freetype/src/cff/cfftoken.h<br>
gs/freetype/src/cff/cfftypes.h<br>
gs/freetype/src/cff/rules.mk<br>
gs/freetype/src/cid/ciderrs.h<br>
gs/freetype/src/cid/cidgload.c<br>
gs/freetype/src/cid/cidload.c<br>
gs/freetype/src/cid/cidobjs.c<br>
gs/freetype/src/cid/cidparse.c<br>
gs/freetype/src/cid/cidriver.c<br>
gs/freetype/src/cid/cidriver.h<br>
gs/freetype/src/gxvalid/gxvcommn.c<br>
gs/freetype/src/gxvalid/gxvcommn.h<br>
gs/freetype/src/gxvalid/gxverror.h<br>
gs/freetype/src/gxvalid/gxvfeat.c<br>
gs/freetype/src/gxvalid/gxvjust.c<br>
gs/freetype/src/gxvalid/gxvkern.c<br>
gs/freetype/src/gxvalid/gxvmod.c<br>
gs/freetype/src/gxvalid/gxvmod.h<br>
gs/freetype/src/gxvalid/gxvmort.c<br>
gs/freetype/src/gxvalid/gxvmort0.c<br>
gs/freetype/src/gxvalid/gxvmort1.c<br>
gs/freetype/src/gxvalid/gxvmort2.c<br>
gs/freetype/src/gxvalid/gxvmort5.c<br>
gs/freetype/src/gxvalid/gxvmorx.c<br>
gs/freetype/src/gxvalid/gxvmorx0.c<br>
gs/freetype/src/gxvalid/gxvmorx1.c<br>
gs/freetype/src/gxvalid/gxvmorx2.c<br>
gs/freetype/src/gxvalid/gxvmorx5.c<br>
gs/freetype/src/gxvalid/gxvprop.c<br>
gs/freetype/src/gxvalid/gxvtrak.c<br>
gs/freetype/src/gzip/ftgzip.c<br>
gs/freetype/src/lzw/ftlzw.c<br>
gs/freetype/src/lzw/ftzopen.c<br>
gs/freetype/src/otvalid/otverror.h<br>
gs/freetype/src/otvalid/otvmod.c<br>
gs/freetype/src/otvalid/otvmod.h<br>
gs/freetype/src/pcf/README<br>
gs/freetype/src/pcf/pcf.h<br>
gs/freetype/src/pcf/pcfdrivr.c<br>
gs/freetype/src/pcf/pcfdrivr.h<br>
gs/freetype/src/pcf/pcferror.h<br>
gs/freetype/src/pcf/pcfread.c<br>
gs/freetype/src/pfr/pfrdrivr.c<br>
gs/freetype/src/pfr/pfrdrivr.h<br>
gs/freetype/src/pfr/pfrerror.h<br>
gs/freetype/src/pfr/pfrload.c<br>
gs/freetype/src/pfr/pfrobjs.c<br>
gs/freetype/src/psaux/afmparse.c<br>
gs/freetype/src/psaux/psauxerr.h<br>
gs/freetype/src/psaux/psauxmod.c<br>
gs/freetype/src/psaux/psauxmod.h<br>
gs/freetype/src/psaux/psconv.c<br>
gs/freetype/src/psaux/psobjs.c<br>
gs/freetype/src/psaux/t1cmap.c<br>
gs/freetype/src/psaux/t1decode.c<br>
gs/freetype/src/pshinter/pshnterr.h<br>
gs/freetype/src/pshinter/pshpic.c<br>
gs/freetype/src/pshinter/pshpic.h<br>
gs/freetype/src/pshinter/rules.mk<br>
gs/freetype/src/psnames/psmodule.c<br>
gs/freetype/src/psnames/psnamerr.h<br>
gs/freetype/src/psnames/pspic.c<br>
gs/freetype/src/psnames/pspic.h<br>
gs/freetype/src/psnames/pstables.h<br>
gs/freetype/src/psnames/rules.mk<br>
gs/freetype/src/raster/ftraster.c<br>
gs/freetype/src/raster/ftrend1.c<br>
gs/freetype/src/raster/rasterrs.h<br>
gs/freetype/src/raster/rastpic.c<br>
gs/freetype/src/raster/rastpic.h<br>
gs/freetype/src/raster/rules.mk<br>
gs/freetype/src/sfnt/rules.mk<br>
gs/freetype/src/sfnt/sfdriver.c<br>
gs/freetype/src/sfnt/sferrors.h<br>
gs/freetype/src/sfnt/sfntpic.c<br>
gs/freetype/src/sfnt/sfntpic.h<br>
gs/freetype/src/sfnt/sfobjs.c<br>
gs/freetype/src/sfnt/ttcmap.c<br>
gs/freetype/src/sfnt/ttcmap.h<br>
gs/freetype/src/sfnt/ttload.c<br>
gs/freetype/src/sfnt/ttmtx.c<br>
gs/freetype/src/sfnt/ttsbit.c<br>
gs/freetype/src/smooth/ftgrays.c<br>
gs/freetype/src/smooth/ftsmerrs.h<br>
gs/freetype/src/smooth/ftsmooth.c<br>
gs/freetype/src/smooth/ftspic.c<br>
gs/freetype/src/smooth/ftspic.h<br>
gs/freetype/src/smooth/rules.mk<br>
gs/freetype/src/tools/apinames.c<br>
gs/freetype/src/tools/docmaker/.gitignore<br>
gs/freetype/src/tools/glnames.py<br>
gs/freetype/src/truetype/rules.mk<br>
gs/freetype/src/truetype/ttdriver.c<br>
gs/freetype/src/truetype/tterrors.h<br>
gs/freetype/src/truetype/ttgload.c<br>
gs/freetype/src/truetype/ttgload.h<br>
gs/freetype/src/truetype/ttgxvar.c<br>
gs/freetype/src/truetype/ttinterp.c<br>
gs/freetype/src/truetype/ttinterp.h<br>
gs/freetype/src/truetype/ttobjs.c<br>
gs/freetype/src/truetype/ttobjs.h<br>
gs/freetype/src/truetype/ttpic.c<br>
gs/freetype/src/truetype/ttpic.h<br>
gs/freetype/src/truetype/ttpload.c<br>
gs/freetype/src/type1/t1afm.c<br>
gs/freetype/src/type1/t1driver.c<br>
gs/freetype/src/type1/t1driver.h<br>
gs/freetype/src/type1/t1errors.h<br>
gs/freetype/src/type1/t1gload.c<br>
gs/freetype/src/type1/t1gload.h<br>
gs/freetype/src/type1/t1load.c<br>
gs/freetype/src/type1/t1objs.c<br>
gs/freetype/src/type1/t1objs.h<br>
gs/freetype/src/type1/t1parse.c<br>
gs/freetype/src/type1/t1tokens.h<br>
gs/freetype/src/type42/t42drivr.c<br>
gs/freetype/src/type42/t42drivr.h<br>
gs/freetype/src/type42/t42error.h<br>
gs/freetype/src/type42/t42objs.c<br>
gs/freetype/src/type42/t42objs.h<br>
gs/freetype/src/type42/t42parse.c<br>
gs/freetype/src/winfonts/fnterrs.h<br>
gs/freetype/src/winfonts/winfnt.c<br>
gs/freetype/src/winfonts/winfnt.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-20 16:56:36 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcf401ee8172aaff5363b2fc86e166f73225e429">dcf401ee8172aaff5363b2fc86e166f73225e429</a>
<blockquote>
<p>
    Close the device before exiting PCL, XPS and friends.<br>
<br>
    The languages deallocated the memory associated with a device but<br>
    never did the associated gs_closedevice().  This might have some<br>
    effect on 692816 where indeterminate output was observed on stdout.<br>
    Without the close device call the &quot;OutputFile&quot; was never actually<br>
    closed (fclose), and so there might have been a missing flush.  All of<br>
    that is speculation, I wasn't able to reproduce the indeterminism -<br>
    but we want the closedevice anyway so here it is.<br>
<br>
pl/plmain.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-20 11:35:04 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=731707a165665554577d3779fdeb93eb49ab2a52">731707a165665554577d3779fdeb93eb49ab2a52</a>
<blockquote>
<p>
    Fix Visual Studio PROFILE=1 builds so that Instrumented performance analyzer works.<br>
<br>
    We were missing the /PROFILE linker option.<br>
<br>
gs/psi/msvc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-19 18:02:47 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2371ed3ee29b5470dd892b78249d64d8f4466f4">a2371ed3ee29b5470dd892b78249d64d8f4466f4</a>
<blockquote>
<p>
    Clean up warnings.<br>
<br>
    Clean up a couple of warnings I introduced in:<br>
    f63237e1bb9a85124349ec0d0eae58737d7cb5ee<br>
<br>
    No cluster differences expected.<br>
<br>
gs/base/gxccache.c<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-19 10:06:10 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d6f83dfa81a2073c3d1f67a30aee7e8407e4685a">d6f83dfa81a2073c3d1f67a30aee7e8407e4685a</a>
<blockquote>
<p>
    ps2write - work-around bugs in Brother printer CCITTFaxDecode filter<br>
<br>
    Raised on irc by Till Kamppeter, see Ubuntu bug :<br>
<br>
    https://bugs.launchpad.net/ubuntu/+source/cups/+bug/955553<br>
<br>
    After much work by Chris Liddell and Bruce Stough it transpires that at<br>
    least some Brother printers have a bug in their CCITTFaxDecode filter,<br>
    especially with small amounts of data.<br>
<br>
    Since the ps2write otuput for bitmapped glyhs (which is required when the<br>
    input is a CIDFont) always uses the CCITTFax filter, this led to corrupted<br>
    output from the Brother (Note this is a bug in the *printer* not ps2write)<br>
<br>
    This patch adds a new command line parameter 'NoT3CCITT' which disables<br>
    compression of bitmapped glyphs. It should only be used with printers which<br>
    have a problem with CCITTFax data, and in that case should also be used with<br>
    the EncodeMonoImages switch to disable compression of monochrome images. Eg:<br>
<br>
    -dNoT3CCITT -dEncodeMonoImages=false<br>
<br>
    No differences expected as these are not tested by our regression tests<br>
<br>
gs/base/gdevpdfb.c<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfx.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-18 22:34:39 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c558e93a7f63b470880ea44fbf883c61de4b13a">1c558e93a7f63b470880ea44fbf883c61de4b13a</a>
<blockquote>
<p>
    Bug 692589: Copy CIDSystemInfo from PDF to CMap<br>
<br>
    Collect CIDSystemInfo attributes from PDF CMap dictionary and copy<br>
    them to the embedded CMap resource.<br>
<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-16 14:25:06 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2cd895c6ad8e4e1ace368d04a783bf0cccb30f3c">2cd895c6ad8e4e1ace368d04a783bf0cccb30f3c</a>
<blockquote>
<p>
    Fixes Bug 692931 - Regression: seg fault<br>
<br>
    The ICC parameters were set when the interpreter was allocated before<br>
    the the command line options were actually set, resulting in a crash.<br>
<br>
xps/xpstop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-16 09:35:53 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=25b6a2cdeb5a90bb7803958f2bf15b618fbcf120">25b6a2cdeb5a90bb7803958f2bf15b618fbcf120</a>
<blockquote>
<p>
    pdfwrite - cure memory leaks caused by 'aside' streams<br>
<br>
    When writing an object it can happen that pdfwrite needs to write another<br>
    object (Eg a ToUnicode CMap in a font), it does this with an 'aside' which<br>
    opens a Ghostscritp stream to contain the data.<br>
<br>
    The code to do this uses low level access to the stream code, but it did<br>
    not previously correctly free the memory used by the stream and its associated<br>
    buffer leading to memory leaks.<br>
<br>
    By closing the entire stream when we close the filters we get the stream and<br>
    all its memory freed, so we do that here to cure the memory leak.<br>
<br>
    Inspecting the four other cases in the pdfwrite code they appear to be OK.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gdevpdti.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-16 00:51:54 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca6e4653abdc2921e44f416633b7d5e4bc5f4382">ca6e4653abdc2921e44f416633b7d5e4bc5f4382</a>
<blockquote>
<p>
    Add indexed color space support to the ICC extraction tool.<br>
<br>
    Recognize ICC color spaces referenced by indexed color spaces and<br>
    process them the same way as stand-alone ICC color spaces.<br>
<br>
gs/toolbin/extractICCprofiles.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-15 12:07:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=044b6ca010ecb8f264fcd4b3515051c037659967">044b6ca010ecb8f264fcd4b3515051c037659967</a>
<blockquote>
<p>
    Fix for broken setting of Default ICC profiles<br>
<br>
    A recent change http://git.ghostscript.com/?p=ghostpdl.git;a=commit;h=d6f504174bd51d22cc43b2f87bee8c275c004cc1<br>
    broke the ability to set the profiles.  Previously there was a check in gsicc_set_profile to<br>
    avoid reseting the profiles.  Once removed, the call from gsicc_init_manager was always blowing<br>
    away any non default settings for the defaults.  A check was added into gsicc_init_manager to<br>
    avoid this.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-15 09:58:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=72fe9304f98beff3c97347d6e402bb812136de49">72fe9304f98beff3c97347d6e402bb812136de49</a>
<blockquote>
<p>
    Fix for memory issue in icc user params<br>
<br>
    The icc user parameters where improperly being set as being persistent<br>
    for the user params list when they were not.  In the case when we are<br>
    using the output intent profile, one of the default profiles is freed<br>
    and replaced by the output intent profile.  In this case, the default<br>
    profile contained the string that was used for the user params.  During<br>
    a VMreclaim, we would then go and restore the user params and<br>
    unfortunately this default one had been freed.<br>
<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-14 09:15:36 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82d1d263a13ccfe64e78cd0e6f1cf1a275adcb9c">82d1d263a13ccfe64e78cd0e6f1cf1a275adcb9c</a>
<blockquote>
<p>
    Update of Use.htm to include description of -dUsePDFX3Profile<br>
<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-02 10:52:19 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1d8c46688c07cec9e58f492223d1a9c92f4374e4">1d8c46688c07cec9e58f492223d1a9c92f4374e4</a>
<blockquote>
<p>
    Output Intent Implementation Part 2<br>
<br>
    The interpreter part of the output intent plus fixes in the c code.<br>
    Thanks to Alex for his help on this.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
gs/Resource/Init/pdf_main.ps<br>
gs/base/gsicc_manage.c<br>
gs/psi/zicc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-13 22:45:00 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0eae84aaf7a1c27f077d4aff3050ae48bb5a6aaa">0eae84aaf7a1c27f077d4aff3050ae48bb5a6aaa</a>
<blockquote>
<p>
    Fix for broken tiff devices due to use of huge signed number in overflow test<br>
<br>
    0xFFFFFFFF is used in a calculation to see how close we are to the 4G limit in<br>
    a tiff file.  Problem was this was cast as a long which, in a 32 bit<br>
    system ends up being -1.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-13 10:13:06 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa131f2321abe0e65415242a4563fbf3fba005fa">aa131f2321abe0e65415242a4563fbf3fba005fa</a>
<blockquote>
<p>
    Make -dPDFA backwards compatible, equivalent to -dPDFA=1<br>
<br>
    As of commit d0371d9 the actual device parameter was changed to be an int.<br>
    This change detects if it is defined as a boolean and sets it to 1 if so.<br>
<br>
gs/Resource/Init/gs_init.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-13 09:37:15 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d21eb36fda00dcfefc2e65c2202cb0536562385d">d21eb36fda00dcfefc2e65c2202cb0536562385d</a>
<blockquote>
<p>
    pdfwrite - correction to PDF/A processing<br>
<br>
    The previous commit for PDF/A prcoessing did not properly check the PDF/A<br>
    level in the PostScript handlers, and treated any setting as being PDF/A.<br>
    In fact only settings greater than 0 shuold be checked, 0 means 'not PDF/A'<br>
<br>
    Add code in gdev_pdf_put_params to ensure that PDFA has a permitted value<br>
    (0-&gt;2) and signal rangecheck if not.<br>
<br>
    No differences expected.<br>
<br>
gs/Resource/Init/gs_cspace.ps<br>
gs/Resource/Init/gs_pdfwr.ps<br>
gs/base/gdevpdfp.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-13 09:20:59 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d0371d915bae6b3d52487d49e470b0e560837ab2">d0371d915bae6b3d52487d49e470b0e560837ab2</a>
<blockquote>
<p>
    pdfwrite - first pass at PDF/A-2 output<br>
<br>
    This is the first part of making it possible to produce PDF/A-2b output from<br>
    pdfwrite.<br>
<br>
    The PDFA switch has changed from a boolean to an integer, where the value gives<br>
    the level of PDF/A compatibility. This has knock-on effects throughout the<br>
    C and PostScript code which has been revised to expect an integer instead<br>
    of boolean value.<br>
<br>
    When PDFA has the value 2 we no longer flatten transparency, and we write<br>
    '2' in the pdfaid field in the XMP metadata.<br>
<br>
    PDF/A-1b output still seems to work correctly, but it is unlikely that the<br>
    work so far is sufficient for correct PDF/A-2 output.<br>
<br>
    No differences expected as the cluster does not test PDF/A output.<br>
<br>
gs/Resource/Init/gs_cspace.ps<br>
gs/Resource/Init/gs_pdfwr.ps<br>
gs/base/gdevpdfb.c<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfe.c<br>
gs/base/gdevpdfg.c<br>
gs/base/gdevpdfj.c<br>
gs/base/gdevpdfm.c<br>
gs/base/gdevpdfo.c<br>
gs/base/gdevpdfp.c<br>
gs/base/gdevpdfu.c<br>
gs/base/gdevpdfx.h<br>
gs/base/gdevpdtb.c<br>
gs/base/gdevpdtd.c<br>
gs/base/gdevpdte.c<br>
gs/base/gdevpdtf.c<br>
gs/base/gdevpdti.c<br>
gs/base/gdevpdtt.c<br>
gs/base/gdevpdtw.c<br>
gs/doc/Ps2pdf.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-12 21:57:09 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bdcf6ae7c1dab92c48715982ae804211dc558a78">bdcf6ae7c1dab92c48715982ae804211dc558a78</a>
<blockquote>
<p>
    Bug 692851: Implement the case of bps &lt; 8 for Luratech JPX decoder<br>
<br>
    Implement a missing case of Luratech JPX with components &gt; 1, and<br>
    bps &lt; 8. Also fix incorrect bit shift calculation in OpenJpeg<br>
    part.<br>
<br>
gs/base/sjpx_luratech.c<br>
gs/base/sjpx_openjpeg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-10 00:15:41 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5352d4cf5b3fd17a22b4a126fe5d5fdceb0ad7b6">5352d4cf5b3fd17a22b4a126fe5d5fdceb0ad7b6</a>
<blockquote>
<p>
    Revert &quot;Support HPGL style path handling. (Work in progress)&quot;<br>
<br>
    This reverts commit 93bf2df8f6a6b2ed60a8c3f5037865b8646243db.<br>
<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevvec.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gspenum.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gxclpath.c<br>
gs/base/gxcpath.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxstroke.c<br>
gs/base/gxttfb.c<br>
gs/base/gzpath.h<br>
gs/psi/zgstate.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 15:31:50 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b89c0e35a15e3a786da346d3cd63d0c558a9fb6a">b89c0e35a15e3a786da346d3cd63d0c558a9fb6a</a>
<blockquote>
<p>
    Hack to fix memento.c build problem on Mac OS X.<br>
<br>
gs/base/memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 13:53:55 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc98b15546522ce28edad3f129f1ae8e05300a34">dc98b15546522ce28edad3f129f1ae8e05300a34</a>
<blockquote>
<p>
    Change compression of the tiffsep device composite output to match the separations.<br>
<br>
    Previous to this commit the tiffsep device would always write out<br>
    an uncompressed composite file; the separation files were lzw<br>
    compressed by default and this could be changed via the -sCompression=<br>
    option.  Now the compression of the composite file is the same as<br>
    that of the separation files.<br>
<br>
    Fixes Bug 692907.<br>
<br>
gs/base/gdevtsep.c<br>
gs/doc/Devices.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-27 03:11:02 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=93bf2df8f6a6b2ed60a8c3f5037865b8646243db">93bf2df8f6a6b2ed60a8c3f5037865b8646243db</a>
<blockquote>
<p>
    Support HPGL style path handling. (Work in progress)<br>
<br>
    HPGL handles paths slightly differently to the postscript imaging model.<br>
<br>
    When a path is filled, successive moveto's are treated as linetos.<br>
    (i.e. the 'place we close the path to' is left at the first moveto,<br>
    and the area remains fillable). Stroking is unaffected however.<br>
<br>
    To model this in Ghostscript we add a new path segment type 's_gap'.<br>
    The filling code treats this as a lineto. The stroking code is updated<br>
    to not stroke such edges (and not to break the subpath at this point).<br>
<br>
    We add a new parameter to the imager state (hpgl_fill_mode), new<br>
    accessor functions (gs_sethpglfillmode, gs_currenthpglfillmode),<br>
    and new postscript operators (.sethpglfillmode and .currenthpglfillmode).<br>
<br>
    If hpgl fill mode is set to a non-zero value, then path construction<br>
    treats movetos in an open subpath as gaptos.<br>
<br>
    Still to do:<br>
      * Double check the output from this code matches HPGL.<br>
      * Update the clist code to send hpgl fill mode changes.<br>
      * Update PDF write to spot such paths and to convert them as<br>
        appropriate when writing out.<br>
<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevvec.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gspenum.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gxclpath.c<br>
gs/base/gxcpath.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxstroke.c<br>
gs/base/gxttfb.c<br>
gs/base/gzpath.h<br>
gs/psi/zgstate.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 17:58:13 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91b362b05a16c4d74f9309d92fa7387899fed53a">91b362b05a16c4d74f9309d92fa7387899fed53a</a>
<blockquote>
<p>
    Fix typo in last commit that stopped Memento builds working.<br>
<br>
    Committed before VS had saved out. Sorry.<br>
    CLUSTER_UNTESTED.<br>
<br>
gs/base/memento.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 16:57:13 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c66ce76a0c6f8edb075f28ffe1e8f326cc9eb40c">c66ce76a0c6f8edb075f28ffe1e8f326cc9eb40c</a>
<blockquote>
<p>
    Updated Memento pulled in from mupdf. Plus nesting fixes.<br>
<br>
    Bring in Memento from MuPDF (where it has had some more tweaks<br>
    added). Fix the nested display code. Add hack to ignore prev/next<br>
    pointers in chunk blocks.<br>
<br>
    CLUSTER_UNTESTED.<br>
<br>
gs/base/memento.c<br>
gs/base/memento.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 14:47:43 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75bc089fe804d692d8ac86a6f19be807980084f3">75bc089fe804d692d8ac86a6f19be807980084f3</a>
<blockquote>
<p>
    Fix Memento GhostPDL builds to actually build Memento on windows.<br>
<br>
    Windows makefiles were failing to pass the MEMENTO flag down due<br>
    to some makefile wackiness.<br>
<br>
    CLUSTER_UNTESTED.<br>
<br>
common/msvc_top.mak<br>
gs/base/msvclib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-09 10:41:29 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7629dfecfafa5b3fc82b3767a786b732a0b17645">7629dfecfafa5b3fc82b3767a786b732a0b17645</a>
<blockquote>
<p>
    colour handling - ensure ink names are maintained in the name table while in use<br>
<br>
    Bug #692884 &quot;Empty Spotcolor Name in generated PDF&quot;<br>
<br>
    The ink name wasn't being marked as 'in use' by the colour space structure<br>
    and so was being freed by a garbage collection, resulting in an empty name.<br>
<br>
    Robin Watts supplied this patch which allows us to *much* more easily mark<br>
    names as in use, and also kindly updated the colour handling as well.<br>
<br>
    No differences expected.<br>
<br>
gs/base/gscdevn.c<br>
gs/base/gscsepr.c<br>
gs/base/gslib.c<br>
gs/base/gsstruct.h<br>
gs/psi/igc.c<br>
pl/plplatf.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-07 17:56:47 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e76a4d070d7d6d90cc7d09849108bca806a9b253">e76a4d070d7d6d90cc7d09849108bca806a9b253</a>
<blockquote>
<p>
    Change the icc user parameter operators to use the graphics state not<br>
    the imager state.<br>
<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/psi/zusparam.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-07 17:43:07 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ff83bab4ddf49c5bbbce9a37cfa8e4d5c42c9009">ff83bab4ddf49c5bbbce9a37cfa8e4d5c42c9009</a>
<blockquote>
<p>
    Add MEMENTO to preprocessor definition list in the VS solution.<br>
<br>
    No difference to builds, but may make intellisense work better<br>
    for Memento builds.<br>
<br>
gs/ghostscript.vcproj<br>
win32/language_switch.vcproj<br>
win32/pcl.vcproj<br>
win32/svg.vcproj<br>
win32/xps.vcproj<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-07 17:41:32 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b47dc4f294e2b267d139001c6c749603e6ba2570">b47dc4f294e2b267d139001c6c749603e6ba2570</a>
<blockquote>
<p>
    Tweak rm.bat (and hence fix 'clean' builds on windows)<br>
<br>
    Cope with -r command. Add /Q flag to erase call (so it doesn't prompt<br>
    before deleting).<br>
<br>
gs/base/rm.bat<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-07 17:13:35 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f63237e1bb9a85124349ec0d0eae58737d7cb5ee">f63237e1bb9a85124349ec0d0eae58737d7cb5ee</a>
<blockquote>
<p>
    Problems with glyphs, T1 patterns and transparecy.....<br>
<br>
    From investigations of a problem reported by customer 532.<br>
<br>
    When imaging a cached glyph, if the glyph bitmap cannot be inserted into the<br>
    clist tile cache, we'd normally resort to degenerating the glyph bitmap into<br>
    rectangles, and writing those to the clist. When the glyph is filled with a<br>
    tiling (Type 1) pattern, this means going through the pattern tiling code.<br>
<br>
    The problem is when transparency is involved (i.e. if the pattern is in a trans<br>
    group, or contains a transparency group) the tiling code cannot reliably<br>
    degerate to rectangles at this stage. This usually just works due to the various<br>
    fallbacks in the clist writing code and the glyph imaging code, but<br>
    occasionally glyphs can either disappear, or other problems occur.<br>
<br>
    This change makes us use that &quot;fallback&quot; route for all glyphs when we're<br>
    filling a glyph with a type 1 pattern, with transprency involved and we're<br>
    writing to a clist device.<br>
<br>
    NOTE: this is analogous to what the FAPI does in similar circumstances for<br>
    uncached glyphs.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/gsptype1.c<br>
gs/base/gsptype1.h<br>
gs/base/gxccache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-06 09:06:55 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23e37b6fc4d79741007cc18d770bb3e449e53014">23e37b6fc4d79741007cc18d770bb3e449e53014</a>
<blockquote>
<p>
    Fix the checks in gdevtsep.c missed by commit e954dd4683c35dbd66de3e045d979ebbf20c4d72<br>
<br>
    Henry pointed out that my e954dd4683c35dbd66de3e045d979ebbf20c4d72<br>
    fix was incomplete; this commit replaces the remaining max_long<br>
    references with 2^32-1.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-01 13:47:18 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0611ef428368816b4f123003df98263e674eab5a">0611ef428368816b4f123003df98263e674eab5a</a>
<blockquote>
<p>
    Add command line parsing for icc user parameters.<br>
<br>
pcl/pctop.c<br>
pl/plmain.c<br>
pl/plmain.h<br>
pl/pltop.h<br>
pxl/pxtop.c<br>
xps/xpstop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-05 19:21:53 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e954dd4683c35dbd66de3e045d979ebbf20c4d72">e954dd4683c35dbd66de3e045d979ebbf20c4d72</a>
<blockquote>
<p>
    Fix detection of TIFF file size overflow in tiffsep.<br>
<br>
    The TIFF spec limits files to 4 Gigs.  The code to detect attempts<br>
    to write files that were larger than this in gdevtsep.c was broken<br>
    on systems were a long != 32 bit.<br>
<br>
    Fixes Bug 692896.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-29 12:55:19 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d6f504174bd51d22cc43b2f87bee8c275c004cc1">d6f504174bd51d22cc43b2f87bee8c275c004cc1</a>
<blockquote>
<p>
    User params reset issue of icc profile strings<br>
<br>
    If the user params end up getting set during a vmreclaim<br>
    while we are in a swapped icc profile situation when<br>
    processing a softmask we were ending up freeing profiles<br>
    that should not have been freed.   This issue was masked<br>
    by a check that was disallowing profiling settings in<br>
    the manager once they were already set.  Also discovered<br>
    issues with a corner case where we have a softmask that<br>
    includes a pattern with a softmask.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gscms.h<br>
gs/base/gsicc_manage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-03 16:41:59 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=32463b4fe74f855e39be7b5eb74d8be444fffae3">32463b4fe74f855e39be7b5eb74d8be444fffae3</a>
<blockquote>
<p>
    Fix 692893 gl/2 rectangles not properly placed.<br>
<br>
    When resetting the hpgl/2 page parameters we were setting scaling to<br>
    its default value overriding any setting in the PCL job.  HP does not<br>
    reset the scaling as might be expected.<br>
<br>
pcl/pginit.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-03 11:03:53 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c98813be9c1a24bbcf9ca0c1d4127cb4aa4209f">0c98813be9c1a24bbcf9ca0c1d4127cb4aa4209f</a>
<blockquote>
<p>
    Fixes bug 692894, orientation of pcl pages incorrect.<br>
<br>
    This is a case of the current code emulating undocumented behavior<br>
    incorrectly.  It appears the HP printers resets the print direction<br>
    upon receiving a new page size command. Previously we tried to emulate<br>
    this by not resetting the logical page orientation which is incorrect<br>
    but happened to print the tests we had correctly.<br>
<br>
pcl/pcpage.c<br>
pcl/pcstate.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-17 13:51:23 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d10c339014b9e554116ef55c697f50109071bb2">9d10c339014b9e554116ef55c697f50109071bb2</a>
<blockquote>
<p>
    Better error handling in the absence of fonts.<br>
<br>
pcl/pcfsel.c<br>
pcl/pctext.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-02 22:34:20 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7180b9328f00fb5df41e6d019e16f70ae4f66ec7">7180b9328f00fb5df41e6d019e16f70ae4f66ec7</a>
<blockquote>
<p>
    Clean up of distclean target in Makefile.<br>
<br>
    Improve the distclean target so that the Memento obj and bin directory<br>
    contents are deleted and also remove the debug, pg, memento, and<br>
    production obj and bin directories.<br>
<br>
gs/base/Makefile.in<br>
gs/base/gs.mak<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-02 11:50:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ceef3232c1fce21f65d4ba43bb54eaf678389bfd">ceef3232c1fce21f65d4ba43bb54eaf678389bfd</a>
<blockquote>
<p>
    Bug 692891: don't hack the libjpeg mem manager....<br>
<br>
    When linking with a shared libjpeg library, don't include the non-public<br>
    libjpeg API hack to replace it's low level memory manager with Ghostscript's.<br>
    But still do so when using our &quot;local&quot; libjpeg source.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/sjpegc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-02 11:41:21 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa3a2bb36828d07c2b71ff0a37f784d8e6fb0f5a">aa3a2bb36828d07c2b71ff0a37f784d8e6fb0f5a</a>
<blockquote>
<p>
    Fix the &quot;WHICH_CMS&quot; setting.....<br>
<br>
    ...so it uses the $(D_) and $(_D_) variables instead of -D directly.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-01 11:06:54 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2a57a68efe18dd4f7898b180400a95d7baccfbc2">2a57a68efe18dd4f7898b180400a95d7baccfbc2</a>
<blockquote>
<p>
    pdfwrite - Improve handling of PCL downloaded TrueType fonts<br>
<br>
    Bug #692629. PCL TrueType fonts are missing some important tables for the<br>
    purposes of pdfwrite. In particular the CMAP table, which makes it impossible<br>
    to create glyph names.<br>
<br>
    This causes an error which *should* have resulted in pdfwrite falling back to<br>
    bitmaps. In the case of a single glyph, or a string where the fiirst glyph fails,<br>
    this did work correctly, but when one or more initial glyphs did work, the<br>
    calling code did not expect an error from TrueType fonts and failed to cope<br>
    properly by continuing to process the remaining glyphs.<br>
<br>
    Added TrueType fonts to the list which may error in this fashion.<br>
<br>
    Expected Differences:<br>
    AS40AOJ3.BIN<br>
    LW97DOJ2.BIN<br>
    SW108OJ2.BIN<br>
    VerdanaItalic.prn<br>
    bug689100.xl<br>
    bug689905.xl<br>
<br>
    All exhibit significant progressions (text was previously missing)<br>
<br>
gs/base/gdevpdtt.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-03-01 07:43:13 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=867fb8607edd04b0b1c8e8bd635347a542b0f50f">867fb8607edd04b0b1c8e8bd635347a542b0f50f</a>
<blockquote>
<p>
    Bug 692602: revise script vs job confusion<br>
<br>
    Slight revision to the previous change, again from jrnieder@gmail.com.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/man/gs.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-29 16:46:33 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=90e6a864f0e4b4b0e6d6a0a1258295cf1cb3e1a6">90e6a864f0e4b4b0e6d6a0a1258295cf1cb3e1a6</a>
<blockquote>
<p>
    Bug 692602: revise SAFER section in the man page<br>
<br>
    patch courtesy of Jonathan Nieder ( jrnieder@gmail.com ).<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/man/gs.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-29 11:20:50 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3648acb1e3fd3e07faceedde1a71e1b282e25de3">3648acb1e3fd3e07faceedde1a71e1b282e25de3</a>
<blockquote>
<p>
    Revert &quot;Support HPGL style path handling.&quot;<br>
<br>
    This reverts commit 43f3cdae4bdf00c09fdd69c53c03fb99d0b4aca1.<br>
<br>
    This caused unexpected changes in many postscript files. Reverting<br>
    until I can figure out why.<br>
<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevvec.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gspenum.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxcpath.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxstroke.c<br>
gs/base/gxttfb.c<br>
gs/base/gzpath.h<br>
gs/doc/Language.htm<br>
gs/psi/zgstate.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-29 08:31:44 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=34b2e8fd2c33a7fc349b0c51046c3d0c99b74d0c">34b2e8fd2c33a7fc349b0c51046c3d0c99b74d0c</a>
<blockquote>
<p>
    pdfwrite - Fix XMP ModDate metaData<br>
<br>
    The XMP metadata Modification date was being written using the Creation<br>
    date instead of the Modification date.<br>
<br>
    No differences expected, metadata is not checked by regression tests<br>
<br>
gs/base/gdevpdfe.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-28 12:01:12 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e228753bde054e549c8643cf726c951a512a4a6">8e228753bde054e549c8643cf726c951a512a4a6</a>
<blockquote>
<p>
    Another fix to fuzzy.c dealing with different sized input files.<br>
<br>
gs/toolbin/tests/fuzzy.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-27 03:11:02 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43f3cdae4bdf00c09fdd69c53c03fb99d0b4aca1">43f3cdae4bdf00c09fdd69c53c03fb99d0b4aca1</a>
<blockquote>
<p>
    Support HPGL style path handling.<br>
<br>
    HPGL handles paths slightly differently to the postscript imaging model.<br>
<br>
    When a path is filled, successive moveto's are treated as linetos.<br>
    (i.e. the 'place we close the path to' is left at the first moveto,<br>
    and the area remains fillable). Stroking is unaffected however.<br>
<br>
    To model this in Ghostscript we add a new path segment type 's_gap'.<br>
    The filling code treats this as a lineto. The stroking code is updated<br>
    to not stroke such edges (and not to break the subpath at this point).<br>
<br>
    We add a new parameter to the imager state (hpgl_path_mode), new<br>
    accessor functions (gs_sethpglpathmode, gs_currenthpglpathmode),<br>
    and new postscript operators (.sethpglpathmode and .currenthpglpathmode).<br>
<br>
    If hpgl path mode is set to a non-zero value, then path construction<br>
    treats movetos in an open subpath as gaptos.<br>
<br>
    Still to do:<br>
      * Update PDF write to spot such paths and to convert them as<br>
        appropriate when writing out.<br>
<br>
gs/base/gdevpdfd.c<br>
gs/base/gdevtrac.c<br>
gs/base/gdevvec.c<br>
gs/base/gspath.c<br>
gs/base/gspath1.c<br>
gs/base/gspenum.h<br>
gs/base/gsstate.c<br>
gs/base/gsstate.h<br>
gs/base/gxclpath.c<br>
gs/base/gxclpath.h<br>
gs/base/gxclrast.c<br>
gs/base/gxcpath.c<br>
gs/base/gxistate.h<br>
gs/base/gxline.h<br>
gs/base/gxpath.c<br>
gs/base/gxpath.h<br>
gs/base/gxpath2.c<br>
gs/base/gxpcopy.c<br>
gs/base/gxpdash.c<br>
gs/base/gxstroke.c<br>
gs/base/gxttfb.c<br>
gs/base/gzpath.h<br>
gs/doc/Language.htm<br>
gs/psi/zgstate.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-24 22:37:26 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0d095e8511ec1469b0ef4cb741d1fba9363570e7">0d095e8511ec1469b0ef4cb741d1fba9363570e7</a>
<blockquote>
<p>
    Movement of code for setting ICC system/user params into graphics lib.<br>
<br>
    The code that set the system/user params related to ICC profiles was<br>
    contained in the zusparam.c file.  This file is not used with the<br>
    other languages (e.g. xps and pcl).  The functions that do the actual<br>
    work have been moved to gsicc_manage reducing any code duplication for<br>
    the other languages.<br>
<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/psi/zusparam.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-25 14:54:03 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6d93192f3469bedb51f73abc0a1f8f71d3bfba24">6d93192f3469bedb51f73abc0a1f8f71d3bfba24</a>
<blockquote>
<p>
    Bug 692878: Convert Type 4 image with invalid mask to Type 1<br>
<br>
    Improve the revision 3de55841eefb38c751772ac767c5abab155d7d91.<br>
    Convert Type 4 images with invalid /Mask attribute to Type 1<br>
    images. Previous version used the mask [1 0] in such cases,<br>
    which was not compatible with pdfwrite.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-25 15:07:08 +0000
</strong>
<br>unknown &lt;ken@.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d97d5dcfcfb580177566b0f03d75048485683ac">7d97d5dcfcfb580177566b0f03d75048485683ac</a>
<blockquote>
<p>
    Bug #692880 Correct the initial Windows display device flags for PCL<br>
<br>
    The flags used for the Windows display device were incorrect and caused<br>
    at least some rasterops not to display correctly.<br>
<br>
    No expetced differences, the display device, and Windows builds, are not<br>
    cluster tested.<br>
<br>
pl/dwmainc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-24 21:25:08 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9971445d1460a3b0c57b176c73d722ed6db99e1">b9971445d1460a3b0c57b176c73d722ed6db99e1</a>
<blockquote>
<p>
    Add &quot;-I directories&quot; option.<br>
<br>
    Add a new form of -I option similar to -o, where the directory list<br>
    is taken from the next parameter. This form is more convenient to use<br>
    on UN*X command line with tilda expansion.<br>
<br>
gs/doc/Use.htm<br>
gs/psi/imainarg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-24 20:45:31 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9178d875547dafe5f89ae7bbbe9f4fd83e18000c">9178d875547dafe5f89ae7bbbe9f4fd83e18000c</a>
<blockquote>
<p>
    Bug 692867: ignore PDF path operators without current point<br>
<br>
    Run l, c, v, y in a stopped context. When they fail (presumably<br>
    with /nocurrentpoint), ignore the operator and continue.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-21 11:30:58 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2c4aa5f1a90ee03aacce58f24b819cab3bdd1625">2c4aa5f1a90ee03aacce58f24b819cab3bdd1625</a>
<blockquote>
<p>
    Fix for bug 692865.  Make XPS interpreter use ICC color spaces for default<br>
<br>
    The XPS interpreter was still using Device color spaces for its default<br>
    color spaces.  This fix has it use ICC color spaces by default which<br>
    is required by the spec.   This revealed an issue with the color space<br>
    handling of the opacity masks.  These were getting drawn in sRGB color<br>
    space but the transparency group is linear gray.  Since we are drawing<br>
    the opacity mask as a luminosity mask that is gray we ended up<br>
    mapping through a nonlinearity.<br>
<br>
gs/base/gscspace.c<br>
gs/base/gscspace.h<br>
gs/base/gxblend.c<br>
xps/ghostxps.h<br>
xps/xpsgradient.c<br>
xps/xpsimage.c<br>
xps/xpsopacity.c<br>
xps/xpspage.c<br>
xps/xpstop.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-24 18:39:09 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=77a8045048a4aaa727f700187816170d7fbd072c">77a8045048a4aaa727f700187816170d7fbd072c</a>
<blockquote>
<p>
    Bug 692832: Drop setcachedevice calls with large arguments.<br>
<br>
    Reject setcachedevice arguments that are too big and, probably, invalid.<br>
    The threshold, 32000, is arbitrary. Normal fonts have the values about 1000.<br>
<br>
gs/base/gxchar.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-24 18:27:41 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9aedcfcd26aea249e0a06061f4d2e579fa5cdffc">9aedcfcd26aea249e0a06061f4d2e579fa5cdffc</a>
<blockquote>
<p>
    Bug 692859: Add Portfolio support to pdf_info.ps<br>
<br>
    Enumerate PDF subfiles in PDF collection (=portfolio) and apply<br>
    the old pdf_info.ps to every component.<br>
<br>
gs/toolbin/pdf_info.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-23 01:25:59 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3de55841eefb38c751772ac767c5abab155d7d91">3de55841eefb38c751772ac767c5abab155d7d91</a>
<blockquote>
<p>
    Bug 692851: Fix OpenJpeg JPX with components &gt; 1, and bps &lt; 8<br>
<br>
    Fix packing of multi-component color values with bps &lt; 8 into the<br>
    output stream. This results in progressions on Bug691843.pdf, and<br>
    minor differences in Bug690147.pdf<br>
<br>
gs/base/sjpx_openjpeg.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-22 09:40:31 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b105c3678ff3c22ab65995953b4599d8c5c37a7e">b105c3678ff3c22ab65995953b4599d8c5c37a7e</a>
<blockquote>
<p>
    Typo fix in non color managed transform<br>
<br>
    Thanks to Peter Skarpetis for finding this.<br>
<br>
gs/base/gxblend1.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-22 11:27:16 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b4a8edb730e25f5c03103a2bb687e223a440d990">b4a8edb730e25f5c03103a2bb687e223a440d990</a>
<blockquote>
<p>
    Bug 692852: Broken /Mask in 1 bpc /Indexed images<br>
<br>
    Following AR9 implementation, add special processing for<br>
    repairing a broken /Mask attribute of 1 bpc indexed images.<br>
    Ignore the whole Mask if its first element is out of range.<br>
    Replace the second component with 1 when it's out of range.<br>
<br>
gs/Resource/Init/pdf_draw.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-20 06:23:06 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed07da9075aa82bc0c4335228cc9c934e6efdb45">ed07da9075aa82bc0c4335228cc9c934e6efdb45</a>
<blockquote>
<p>
    Revert 2e807ab6d4eecfce43561b9e8d5b66386a5165ee and fix fuzzy.c correctly.<br>
<br>
gs/toolbin/tests/fuzzy.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-19 15:45:43 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e277c5e8d76325f56259a4f930caa166a594cfc0">e277c5e8d76325f56259a4f930caa166a594cfc0</a>
<blockquote>
<p>
    Improve image performance by rotating Width 1 images to Height 1.<br>
<br>
    The image code makes a call to 'image_render' for each line of the Height. This defeats the joining<br>
    of any same color pixels into a larger rectangle and also creates extra overhead. Problem analyzed<br>
    with profiles from cust 532 file &quot;PWTTQ1CC.pdf&quot;. Regression testing shows some single pixel differences<br>
    presumably due to rounding, but no obvious problems.<br>
<br>
gs/psi/zimage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-18 09:28:14 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2e807ab6d4eecfce43561b9e8d5b66386a5165ee">2e807ab6d4eecfce43561b9e8d5b66386a5165ee</a>
<blockquote>
<p>
        Make fuzzy not lock up when comparing images of different sizes.<br>
<br>
gs/toolbin/tests/fuzzy.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-16 20:03:26 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d00354a21670d16f00c96228591b3d8213d6a590">d00354a21670d16f00c96228591b3d8213d6a590</a>
<blockquote>
<p>
    Fix interpolation of indexed colorspaces.<br>
<br>
    WMB1102317A01.pdf (supplied by a customer) shows a problem with<br>
    Interpolation of Index colorspaces.<br>
<br>
    Specifically, we have an Indexed DeviceGrey space (which is, in<br>
    the new world order, an Indexed ICC space, with 1 component).<br>
<br>
    At line 678 of gxiscale.c we correctly detect that pcs-&gt;type-&gt;index<br>
    is Indexed, and therefore use the base space as the 'actual' space.<br>
<br>
    At line 683 we find the concrete space (which in this case is<br>
    exactly the same space). We then decide whether we are working in<br>
    an icc world, or a device_color world by checking for the presence<br>
    of icc data. The old code used to (incorrectly) check pcs (the<br>
    indexed space), when it should really have checked the concrete<br>
    space.<br>
<br>
    The remaining changes in the code are purely tidying:<br>
<br>
     * avoid calling concrete_space a second time (when pconcs already<br>
       holds the answer)<br>
     * pass pconcs as an arg when calling pconcs-&gt;type-&gt;remap_concrete_color<br>
       rather than pactual_cs. At that point pactual_cs and pconcs must<br>
       be identical, but it's nicer to be consistent.<br>
<br>
    This produces 3 differences in the cluster tests, all in the cups<br>
    tests. These can be reproduced locally using tiffsep.<br>
<br>
     comparefiles/148-11.ps.cups.300.1<br>
        Definite progression<br>
<br>
     PDFIA1.7_SUBSET/CATX1028.pdf.cups.300.1<br>
        Looks like progression to me<br>
<br>
     ps/ps3cet/12-07B.PS.cups.300.1<br>
        Definite progressions on page 12-15. A problem still exists on<br>
        page 12 though, but that's unaffected by this change.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-16 18:16:16 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=21579b00e53b97cd655f164bb92c5280c586e365">21579b00e53b97cd655f164bb92c5280c586e365</a>
<blockquote>
<p>
    Output helpful debug warning when tif output would be too large.<br>
<br>
    Currently we just raise a rangecheck, which can be very confusing.<br>
<br>
    CLUSTER_UNTESTED.<br>
<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-15 19:03:56 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43b14b24fcc13d816dd41ca335d52cd3074bd0d8">43b14b24fcc13d816dd41ca335d52cd3074bd0d8</a>
<blockquote>
<p>
    Update garbage collection to cope with pdf14_compressed_color_list.<br>
<br>
    A second list of compressed colors was recently added to the<br>
    gdevn_params structure, but this wasn't added to the garbage<br>
    collection routines. Fixed here.<br>
<br>
gs/base/gdevp14.c<br>
gs/base/gdevpsd.c<br>
gs/base/gdevtsep.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-15 19:02:34 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d375ea1908bfe1770b108a6c7d1e7cdbe38b99f2">d375ea1908bfe1770b108a6c7d1e7cdbe38b99f2</a>
<blockquote>
<p>
    Fix Division by Zero in interpolated scaler.<br>
<br>
    If we find we are scaling an image to be zero width or<br>
    height, handle the image without interpolation.<br>
<br>
gs/base/gxiscale.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-14 18:11:15 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a0aa751d8cb5d49052a0c4ed3ae38ad66b9fb8e">0a0aa751d8cb5d49052a0c4ed3ae38ad66b9fb8e</a>
<blockquote>
<p>
    Fix 692857, wrong current unit initialization in HPGL/2-RTL.<br>
<br>
    The code was actually written fixed once correcly but then was broken<br>
    with a bad fix (5ad194f) largely because we didn't have good bookkeeping<br>
    for the original fix.  Hopefully now that we have an associated bug<br>
    report and test file a similar problem won't happen again.<br>
<br>
pcl/pcjob.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-14 14:57:07 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=00a96d35b30d77f8dfbc8ae12326c81053fc50c9">00a96d35b30d77f8dfbc8ae12326c81053fc50c9</a>
<blockquote>
<p>
    Fix Bug 692854; tweak gdev_prn color procs.<br>
<br>
    A previous commit (cf37ea5) changed the prn device macros to<br>
    duplicate map_color_rgb/map_rgb_color to encode/decode_color.<br>
    I thought this was safe as the default color encoding/decoding<br>
    functions were actually implemented as encode/decode, rather<br>
    than map_ variants.<br>
<br>
    Unfortunately, this falls down when other devices (such as the<br>
    tiffscaled ones) provide genuine map_ functions rather than<br>
    encode/decodes.<br>
<br>
    So, a small tweak to the macros is required; we now duplicate<br>
    to encode/decode only if specifically told to - and the macros<br>
    that use the defaults specifically say to. Other devices should<br>
    remain unchanged.<br>
<br>
gs/base/gdevprn.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-13 08:46:29 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ba2a8e63783227033506688bebccf664b2b922c7">ba2a8e63783227033506688bebccf664b2b922c7</a>
<blockquote>
<p>
    C portion for making use of output intent ICC profile.<br>
<br>
    This commit puts into place the c-code for making use of an<br>
    ICC profile stream from the PDF interpreter for setting of the<br>
    output intent.   This is done through the use of zset_outputintent.<br>
    This function will make the various settings of the icc profiles<br>
    in the device and in the icc manager based upon the process model<br>
    of the target device and the icc profile of the output intent.  It<br>
    will be up to the interpreter to make the call to  .set_outputintent<br>
    with the proper output intent ICCBased dictionary on the top of the<br>
    stack.  This should be done in the interpreter after the device has<br>
    been set up and all the default ICC profiles are in place.  The<br>
    interpreter should make the call if we have specified -dUsePDFX3Profile.<br>
    The first output intent that is present in the file should be used,<br>
    unless someone specifies a different intent through the use of<br>
    –dOutputIntent=x   .  In this case, the x+1 output intent (if it<br>
    exists) will be used.  Note that if the particular output intent does<br>
    not include an ICC profile entry (DestOutputProfile), then the output<br>
    intent will not be used.  In this case, we will eventually want to<br>
    specify what the OutputConditionIdentifier was for that particular<br>
    intent if it was missing the DestOutputProfile.<br>
<br>
gs/base/gdevpdfk.c<br>
gs/base/gscms.h<br>
gs/base/gsequivc.c<br>
gs/base/gsicc_manage.c<br>
gs/base/gsicc_manage.h<br>
gs/psi/int.mak<br>
gs/psi/zicc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-12 21:14:34 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7aa3debb84673b38d805aa6de1afce60f0d6c6ab">7aa3debb84673b38d805aa6de1afce60f0d6c6ab</a>
<blockquote>
<p>
    Improve character fills, bug #692849.<br>
<br>
    The unusual loops inside the characters (graphic 3 and 8 center of<br>
    page) were caused by trying to edge stick and arc fonts which aren't<br>
    outlines but paths (stroked fonts).<br>
<br>
pcl/pgdraw.c<br>
pcl/pglabel.c<br>
pcl/pgmisc.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-10 18:13:00 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bcdb21c092a4a788d7252cc1b560aa427743a197">bcdb21c092a4a788d7252cc1b560aa427743a197</a>
<blockquote>
<p>
    Improvements for bug 692849.<br>
<br>
    Better emulation of HP printers in the absence of a requested pattern.<br>
<br>
pcl/pcl.mak<br>
pcl/pglfill.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-10 11:29:16 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a81f5d7f83271e2e3e0fb28ad32c9fb337c8553a">a81f5d7f83271e2e3e0fb28ad32c9fb337c8553a</a>
<blockquote>
<p>
    Bug 692849, missing green filled boxes fixed.<br>
<br>
    The green boxes for fill type 22 (user defined) were missing because<br>
    the download pattern command was disabled in HPGL-2/RTL mode.<br>
<br>
pcl/pcuptrn.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-09 17:24:34 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1bf302eec20ce9b543aee523b441dd7adc677cc0">1bf302eec20ce9b543aee523b441dd7adc677cc0</a>
<blockquote>
<p>
    Remove relic data files used by the wts device.<br>
<br>
CMYK.icc<br>
Makefile<br>
link.icc<br>
sRGB.icc<br>
wts_dump_0<br>
wts_plane_0<br>
wts_plane_1<br>
wts_plane_2<br>
wts_plane_3<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-09 17:15:41 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e2867c6bcb2dc6cf9325e9ac87f980684469dee4">e2867c6bcb2dc6cf9325e9ac87f980684469dee4</a>
<blockquote>
<p>
    PCL shared library build for unix.<br>
<br>
Makefile<br>
common/ugcc_top.mak<br>
main/pcl6_gcc.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-10 17:24:00 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a13600f1c241c3e36dbe4973e9d78a8934b16004">a13600f1c241c3e36dbe4973e9d78a8934b16004</a>
<blockquote>
<p>
    Further clipping optimisations.<br>
<br>
    When clipping the region to be used for an image plot, reduce the<br>
    rectangle by the outer box of the clipping path before checking to<br>
    see if a clip is needed or not.<br>
<br>
    This enables us to avoid a clipping device in more cases.<br>
<br>
gs/base/gxclip.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-10 17:20:36 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf37ea5d017193c76341aafd60e35d3b1826046f">cf37ea5d017193c76341aafd60e35d3b1826046f</a>
<blockquote>
<p>
    Prn device changes to encode/decode_color.<br>
<br>
    At the moment, prn devices do not implement encode_decode/color,<br>
    choosing instead to provide map_rgb_color/map_color_rgb which<br>
    just get called through a 'backwards compatibility' layer.<br>
<br>
    In fact, they actually implement encode/decode_rgb rather than<br>
    map_rgb_color/map_color_rgb, so we just copy the entries here.<br>
<br>
    No changes expected in cluster.<br>
<br>
gs/base/gdevprn.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-09 00:00:31 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=082c31b99fd38ebb1a9bc678d06ac9791db2e222">082c31b99fd38ebb1a9bc678d06ac9791db2e222</a>
<blockquote>
<p>
    Bug 690974: This patch from Gorac implements the generic refinement region<br>
    decoding procedure for when TPGRON is TRUE.<br>
<br>
gs/jbig2dec/jbig2_refinement.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 23:13:13 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8b150573a88276849b32b359030fc195786d2be8">8b150573a88276849b32b359030fc195786d2be8</a>
<blockquote>
<p>
    Bug 690870: This patch prevents the image compositing occurring if the src<br>
    is outside of the clip region.<br>
<br>
gs/jbig2dec/jbig2_image.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 09:50:34 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=059dfa8389ff1dde2bb35237b12f72c6fd62da9b">059dfa8389ff1dde2bb35237b12f72c6fd62da9b</a>
<blockquote>
<p>
    Fix for bug 682719.   Fix bad icc profiles in examples/annots.pdf<br>
<br>
    The ICC profiles in annots.pdf were missing all sorts of required information in<br>
    the header.<br>
<br>
gs/examples/annots.pdf<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 08:40:12 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2390c3b6be80d1147f1ef60c16c70d75033a475">a2390c3b6be80d1147f1ef60c16c70d75033a475</a>
<blockquote>
<p>
    Amend date and update changelog for 9.05 release.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/version.mak<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-01 10:59:52 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eed3745432f9bce3e20d9b634d78d1a72dbbf040">eed3745432f9bce3e20d9b634d78d1a72dbbf040</a>
<blockquote>
<p>
    Update docs for 9.05 release candidate.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/History9.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 15:01:57 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0816e3b87ec1843a31e3075a4fa382e844a46158">0816e3b87ec1843a31e3075a4fa382e844a46158</a>
<blockquote>
<p>
    Bug #688227 Alter the PostScript 'show' operators so that the show enumerator is in local VM<br>
<br>
    As described in the bug, it seems to be technically possible for a local font to be<br>
    referenced from a show enumerator. If the enumerator is in global VM this<br>
    causes a garbage collector crash.<br>
<br>
    This code modifies the PostScript 'show' family of operators so that the<br>
    enumerator is always allocated from local VM, avoiding the problem.<br>
<br>
    There is no specimen or method of reproduction supplied in the bug report so<br>
    this is rather speculative, however it runs a cluster test without problem.<br>
    If it does cause any problems we should simply revert this change.<br>
<br>
    As part of this change it was noticed that there are a number of procedures<br>
    defined in gschar.c which are apparently dead code and these have been removed.<br>
<br>
    No expected differences.<br>
<br>
gs/base/gschar.c<br>
gs/base/gschar.h<br>
gs/psi/zchar.c<br>
gs/psi/zcharx.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-07 09:23:30 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6a7d7b62d5bb5cbe00c1051d8a9cb749e43fe86">a6a7d7b62d5bb5cbe00c1051d8a9cb749e43fe86</a>
<blockquote>
<p>
    pdfwrite - fallback to 'LeaveColorunchanged' if we cannot deal with color conversion<br>
<br>
    Some of the PDFSETTINGS collection of settings set the ColorConversionStrategy<br>
    to spaces which may not be possible (in the current architecture) to convert<br>
    every colour space into. For example ICCBased spaces. This causes a fairly<br>
    incomprehensible error to be thrown.<br>
<br>
    In future we intend to do a better job with colour taking advantage of the<br>
    built-in colour management, but for now we simply choose to change the<br>
    ColorConversionStrategy to 'LeaveColorUnchanged' and emit a warning.<br>
<br>
    Bug #692030 and Bug #692108<br>
<br>
    No Expected Differences as this is not tested by the cluster<br>
<br>
gs/base/gdevpdfc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-06 12:01:53 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e448aeaf3d3d572bf4e91d9acdf3fa623ed9b6fb">e448aeaf3d3d572bf4e91d9acdf3fa623ed9b6fb</a>
<blockquote>
<p>
    Clipping optimisations; avoid needless clipping device.<br>
<br>
    When filling a mask, check any clipping path given; if it trivially<br>
    includes all the mask, then don't bother creating a clipping<br>
    device. If it trivially excludes, then don't bother plotting at all.<br>
    If the bbox partially covers the area, then reduce the area<br>
    of the mask.<br>
<br>
    This gives a 6-8% speedup of customer 532's test files; they are<br>
    filling a mask with a halftone, which breaks down into lots of<br>
    short run, 1 pixel high rectangles. Avoiding the clipping device<br>
    avoids lots of function call overhead.<br>
<br>
gs/base/gdevdbit.c<br>
gs/base/gxclip.c<br>
gs/base/gxcpath.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-06 15:37:04 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=09a47e5c2b0fff0d2598e38305bc3d0bc050a26f">09a47e5c2b0fff0d2598e38305bc3d0bc050a26f</a>
<blockquote>
<p>
    Remove overzealous call to image_init_clues.<br>
<br>
    Investigation of customer 532's problem files lead Ray to<br>
    spot that we are blowing away the color clues on every call to<br>
    image_render_mono (called for every scanline in an image at<br>
    least), rather than just once per image.<br>
<br>
    Here, therefore, we change to call image_init_clues in<br>
    gs_image_class_3_mono (the function that returns image_render_mono)<br>
    rather than in image_render_mono itself.<br>
<br>
gs/base/gximono.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-06 15:25:33 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea8d2baefa33457d89b4daa8a80dd1898a362bd3">ea8d2baefa33457d89b4daa8a80dd1898a362bd3</a>
<blockquote>
<p>
    Remove last vestiges of halftone cache.<br>
<br>
    Back in 2002 code was committed (as part of the DeviceN work) that<br>
    removed the halftone cache from the image state. The last vestiges<br>
    of this were functions:<br>
<br>
     gx_check_tile_cache_current<br>
     gx_check_tile_cache<br>
     gx_check_tile_size<br>
<br>
    All these were hardwired to return a constant value, but the calls<br>
    to them were never removed from the code.<br>
<br>
    Here, we remove those calls. No differences should be given.<br>
<br>
gs/base/gxht.c<br>
gs/base/gximono.c<br>
gs/base/gxipixel.c<br>
gs/base/gzht.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-06 10:55:59 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=013136f0e1050dc25c441fdf49dbfeb21ce0ee7a">013136f0e1050dc25c441fdf49dbfeb21ce0ee7a</a>
<blockquote>
<p>
    Bug 692838: fix building against system zlib<br>
<br>
    Commit 75ff1314c3de8fb5df702211b6effb6df2b87faa broke building against the<br>
    system zlib by adding an explicit dependency on a file in the &quot;local&quot; zlib<br>
    source directory.<br>
<br>
    Ensure that dependency only applies when building non-shared zlib.<br>
<br>
    Also, at some point, the mkromfs with shared zlib has been broken, so fix that<br>
    by passing the &quot;-lz&quot; option to the CCAUX compiler variable.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/Makefile.in<br>
gs/base/configure.ac<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-04 21:14:04 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75ff1314c3de8fb5df702211b6effb6df2b87faa">75ff1314c3de8fb5df702211b6effb6df2b87faa</a>
<blockquote>
<p>
    Added dependencies to base/lib.mak.<br>
<br>
gs/base/gs.mak<br>
gs/base/lib.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-04 11:09:47 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=051ed7e56c0d3ef36149c45610bd19a0e55647c0">051ed7e56c0d3ef36149c45610bd19a0e55647c0</a>
<blockquote>
<p>
    ps2write - Handle nested patterns better<br>
<br>
    Patterns inside patterns were not working properly, because PDF and PostScript<br>
    handle this differently. opdfread.ps resets teh graphics state CTM to the<br>
    identity when drawing patterns, because the PDF spec says patterns are always<br>
    referenced to the default co-ordinate space and in order that the matrix gets<br>
    applied correctly we need to reset the CTM.<br>
<br>
    However, when the pattern is inside another pattern, the defualt co-ordinate<br>
    space is that of the enclosing pattern, so restting the CTM is a problem. We<br>
    can't simply avoid the reset as normal patterns would stop working. We can't<br>
    'undo#' the pattern matrix in PostScript, because we don't know what the<br>
    resolution scaling was.<br>
<br>
    So we track the pattern depth in ps2write, and the accumulated matrix transforms<br>
    from all the patterns so far. Then we apply that accumulated matrix to any new<br>
    pattern when the pattern depth is not zero.<br>
<br>
    This works, but is not 100% reliable, 2 patterns inside a single parent would<br>
    be concatenated, resulting in the second pattern being incorrect. However the<br>
    nested pattern situation is rare enough that I'm going to leave this as it is.<br>
<br>
    Expected Differences:<br>
    09_47N.pdf<br>
    Bug6901014_org_Chromium_AN03F.pdf<br>
<br>
    these files now work correctly with ps2write.<br>
<br>
gs/base/gdevpdfb.h<br>
gs/base/gdevpdfi.c<br>
gs/base/gdevpdfv.c<br>
gs/base/gdevpdfx.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 17:50:37 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e7c3c6e02fac1a6e24030a2815645610b42fde47">e7c3c6e02fac1a6e24030a2815645610b42fde47</a>
<blockquote>
<p>
    Fixes 692387, the font rotation code did not work properly for some<br>
    rotations.<br>
<br>
    There are many progressions and small character placement adjustments<br>
    in many regression files.  The latter due to how the rotation matrix<br>
    is now calculated with a rounded angle.<br>
<br>
pcl/pglabel.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 17:31:27 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2cffba33ed7bb6aafe9176688535eab290cb20f0">2cffba33ed7bb6aafe9176688535eab290cb20f0</a>
<blockquote>
<p>
    RTL mode's print direction is always rotated with respect to the<br>
    physical page size.<br>
<br>
pcl/pcpage.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 16:18:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84abcb901a8451ece9f23fda4b17f670b335eb07">84abcb901a8451ece9f23fda4b17f670b335eb07</a>
<blockquote>
<p>
    Propogate dynmic device flags to 'so' subtarget.<br>
<br>
    When I brought the Makefile into line with convention for some of the FLAGS<br>
    variables, I forgot to add the new 'AC_CFLAGS' value to the subtarget for<br>
    the dynamic library build.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 16:20:25 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=03ab853b064b491cb463e392fe6988e904d76fd5">03ab853b064b491cb463e392fe6988e904d76fd5</a>
<blockquote>
<p>
    CUPS Raster: Fixed rotating of input pages with unknown sizes<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 21:02:26 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d0b64a75d54948b3f07da0128bb0002523a39040">d0b64a75d54948b3f07da0128bb0002523a39040</a>
<blockquote>
<p>
    CUPS Raster: More on improving page size fitting<br>
<br>
    Raised the tolerance of matching the document's page sizes with the PPD's<br>
    page sizes on the short dimension to 2 %. This also covers the overspray<br>
    full-bleed page sizes of HPLIP.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 20:43:22 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2d4fac37ee36948c0b30e6b95292b68f718cafdc">2d4fac37ee36948c0b30e6b95292b68f718cafdc</a>
<blockquote>
<p>
    Merge branch 'master' of ghostscript.com:/home/git/ghostpdl<br>
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 12:14:41 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=72887eac758eba7638258b6b375347ee16efbbdc">72887eac758eba7638258b6b375347ee16efbbdc</a>
<blockquote>
<p>
    Add 4 new raster decompression methods to PCL.<br>
<br>
    HPGL/2 and RTL plotters support the following decompression methods:<br>
    uncompressed block (#4), CCITT group 3 1 dimensional (#6), CCITT group<br>
    3 2 dimensional (#7), CCITT group 4 2 dimensional (#8).  These have<br>
    gotten little testing we only have a couple test files at the current<br>
    time.<br>
<br>
pcl/pcl.mak<br>
pcl/rtgmode.c<br>
pcl/rtraster.c<br>
pcl/rtrstcmp.c<br>
pcl/rtrstcmp.h<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 19:37:07 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49be0086211ef92988468cee4bad5d361b8b6c7d">49be0086211ef92988468cee4bad5d361b8b6c7d</a>
<blockquote>
<p>
    Improved page size matching in the CUPS Raster output device<br>
<br>
    The tolerances when comparing the page sizes in the document with the<br>
    sizes in the PPD file are changed to 1% for the short dimension of the<br>
    page and 5% for the long dimension. The 1% for the short dimension is<br>
    more or less the same as the 5.0pt used before (on letter or A4<br>
    paper). The 5% can cover the half inch deviation which HP puts into<br>
    the sheet length for their duplex paper sizes on ink jets.<br>
<br>
    If there is no matching paper size in the PPD and therefore the paper<br>
    size is considered custom, the page will be rotated in the case that<br>
    it does not fit into the maximum custom paper size (= printer<br>
    dimensions) but fits rotated.<br>
<br>
    With these measures, pages with slightly incorrectly defined size or<br>
    slightly incorrectly defined sizes in the PPD file (like the different<br>
    entries for one and the same paper size in the PPDs of HPLIP) will<br>
    find their size in the PPD and so rotated if needed.<br>
<br>
    This avoids cut-off print outs or even crashes of the printer<br>
    (https://bugs.launchpad.net/ubuntu/+source/linux/+bug/917148) due to<br>
    landscape pages not getting rotated.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:55:34 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee811255187a9367a090ce542e78c13912e92ca6">ee811255187a9367a090ce542e78c13912e92ca6</a>
<blockquote>
<p>
    Device Link and Proof Profile fix<br>
<br>
    If a proofing profile or a device link profile are<br>
    specified, the link transform is more than likely not going<br>
    to be identity.  This fix ensures that the transform<br>
    is properly applied.<br>
<br>
gs/base/gsicc_cache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 18:20:00 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a68dde56d66d7a5b9aabf0c742efb77b5fbdca03">a68dde56d66d7a5b9aabf0c742efb77b5fbdca03</a>
<blockquote>
<p>
    Bug 690473: scale substitute fonts to fit in Widths.<br>
<br>
    Compare the width of the glyphs in a substitute font with those in the PDF<br>
    Widths array, and scale the font down to fit better, if necessary. This<br>
    does not add scaling up the font.<br>
<br>
    This changes a number of cluster files - most are progressions, some are just<br>
    different (no worse, no better), none that I consider regressions.<br>
<br>
gs/Resource/Init/pdf_font.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 15:28:05 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d630ef2c042179ecf0443b15b488194690f6b980">d630ef2c042179ecf0443b15b488194690f6b980</a>
<blockquote>
<p>
    Make device link profile work with lcms2.   Also update documentation and add error handling.<br>
<br>
    The device link profile handling was put in place when we had lcms 1.8 but was not ported<br>
    over to the 2.0 interface.<br>
<br>
gs/base/gsicc.c<br>
gs/base/gsicc_lcms2.c<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 18:04:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=306f7dce4e74bc715a91dd892eab78f856cf11da">306f7dce4e74bc715a91dd892eab78f856cf11da</a>
<blockquote>
<p>
    Have gitlog2changelog.py use html code for &quot;quote&quot; char<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 17:49:42 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c61e0b90b63dbef94f75e370ccef9dd5a077c26">3c61e0b90b63dbef94f75e370ccef9dd5a077c26</a>
<blockquote>
<p>
    Add new &quot;WhatIsGS.htm&quot; document<br>
<br>
    This explains how Ghostscript, GhostPCL, GhostXPS, etc are related.<br>
<br>
gs/doc/Readme.htm<br>
gs/doc/WhatIsGS.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 11:26:31 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ddedf257534b7c628442d92f771dc8240cf546a7">ddedf257534b7c628442d92f771dc8240cf546a7</a>
<blockquote>
<p>
    Bug 691483: Fix access to PDF collections.<br>
<br>
    Fix a bug in enumeration of a name tree that prevented acceaa to some<br>
    files in the PDF file collection when the name tree was more than<br>
    one level deep.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:01:53 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26a96f7660a921d80dba77ef0220845918cfd4a8">26a96f7660a921d80dba77ef0220845918cfd4a8</a>
<blockquote>
<p>
    Have plver.mak use Ghostscript version.mak version number<br>
<br>
    No (significant) cluster differences.<br>
<br>
common/msvc_top.mak<br>
pl/pl.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 08:12:14 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20cd9c7595492684ac564789afeb2df1b6066554">20cd9c7595492684ac564789afeb2df1b6066554</a>
<blockquote>
<p>
    ps2write - silence a benign compiler warning<br>
<br>
    Picked up by scan-build; presumably this only gets run for commits, not<br>
    for regular cluster tests as it didn't show up previously.<br>
<br>
gs/base/gdevpdfc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 20:26:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca932b9ee0a84e7725b347d9fc99ef8b2b3ad8c8">ca932b9ee0a84e7725b347d9fc99ef8b2b3ad8c8</a>
<blockquote>
<p>
    gitlog2changelog.py use html sequence for '&amp;'<br>
<br>
    Thanks to SaGS for pointing it out.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 18:14:22 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=69d0fee61911ef6044b07cd7b36bc2148e6bb214">69d0fee61911ef6044b07cd7b36bc2148e6bb214</a>
<blockquote>
<p>
    Tweak gitlog2changelog.py to avoid trailing whitespace<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:41:35 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=08a189c3b72e6bf89ae938b0bbacbbf113e0e346">08a189c3b72e6bf89ae938b0bbacbbf113e0e346</a>
<blockquote>
<p>
    Improve the html output of the changelog generator.<br>
<br>
    There were some compatibility problems with the html from the git log to<br>
    html changelog generator - such as including '&lt;' and '&gt;' characters in<br>
    text to be displayed.<br>
<br>
    Also, improve the actual formatting slightly.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:46:27 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5dd29e182ea1fec5e504558173bbb875501d04a1">5dd29e182ea1fec5e504558173bbb875501d04a1</a>
<blockquote>
<p>
    Move the JPEG XR code to a separate section......<br>
<br>
    ... for non-GPL compatible, open source licensed code.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/thirdparty.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:32:05 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef2a4bfbf4f590635277299bf0e0d7aaea1f392b">ef2a4bfbf4f590635277299bf0e0d7aaea1f392b</a>
<blockquote>
<p>
    ps2write - correctly convert ICCBased *image* colour spaces<br>
<br>
    Previously we handled ICCbased spaces by pretending they were device spaces<br>
    with the same number of components as the ICCBased space. This works<br>
    suprisingly well, but fails utterly for Lab spaces where images come out<br>
    completely incorrect.<br>
<br>
    We now convert the image data to the current device space. We do not yet handle<br>
    vector colour spaces, this will be handled by a future rewrite of the colour<br>
    handling to permit much better control over colour space handling.<br>
<br>
    This change causes quite a number o differences in the regression suite.<br>
    These fall into one of 4 causes:<br>
<br>
    1) Colour space conversion; previously ICCBases spaces with 1 or 4 components<br>
    would be handled as grey or CMYK respectively. They are now converted to the<br>
    device space (RGB by default). This causes some colour changes, especially<br>
    in halftoned output with a 1 component space. These are not incorrect as can<br>
    be seen from the contone output<br>
<br>
    2) There are some minor shifts in colour caused by correctly handling the<br>
    ICCBased space, in general these are progressions (especially the Altona<br>
    suite).<br>
<br>
    3) Handling of Lab colour spaces. These now work correctly where previously<br>
    they did not. Especially catx4929.pdf and IA3Z3476.pdf<br>
<br>
    4) Honouring rendering intents. Files hwich used a rendering intent now are<br>
    correctly converted. cf Bug #691926, comment 3.<br>
<br>
    5) There seems to be a possible problem with converting some CalRGB spaces,<br>
    the resulting output seems 'blue' with respect to the Acrobat otuput. In the<br>
    case of 1 file which contains scanned images of books, it is clear from the<br>
    original book covers that the output is incorrect. Michael suggest this may be<br>
    a White POitn problem. A separate bug report will be filed for this. Ghostscript<br>
    rendering of the original matches the ps2write output.<br>
<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfg.h<br>
gs/base/gdevpdfi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:25:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58e2df820785b88a544f625de35fbcb39c35b305">58e2df820785b88a544f625de35fbcb39c35b305</a>
<blockquote>
<p>
    Update LICENSE<br>
<br>
    Revise the LICENSE file to reflect the latest Adobe CMap license<br>
    conditions, and to note that there is an Artifex copyright CMap in the<br>
    CMap directory.<br>
<br>
    Also, add a note about the JPEX XR source license.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/LICENSE<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:23:18 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=523697346bbc88bf309cb44b47f53516c33917f7">523697346bbc88bf309cb44b47f53516c33917f7</a>
<blockquote>
<p>
    Increment Ghostscript version on master to 9.06.<br>
<br>
    No (important) cluster differences.<br>
<br>
gs/Resource/Init/gs_init.ps<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 08:42:09 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=593431146ef93a53744a04c2a571a6f1f40b0084">593431146ef93a53744a04c2a571a6f1f40b0084</a>
<blockquote>
<p>
    Remove &quot;RELEASE CANDIDATE&quot; from product string.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/gscdef.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-08 08:40:12 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1d20ffdb4d184c9019ee7f58bc279c6d633d05d">c1d20ffdb4d184c9019ee7f58bc279c6d633d05d</a>
<blockquote>
<p>
    Amend date and update changelog for 9.05 release.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/version.mak<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/WhatIsGS.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 16:18:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dd4c7f1f03aa7ea18d43db224126502725af91ba">dd4c7f1f03aa7ea18d43db224126502725af91ba</a>
<blockquote>
<p>
    Propogate dynmic device flags to 'so' subtarget.<br>
<br>
    When I brought the Makefile into line with convention for some of the FLAGS<br>
    variables, I forgot to add the new 'AC_CFLAGS' value to the subtarget for<br>
    the dynamic library build.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 16:20:25 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e837609b2955680dc59ca4f357076be7cd819a46">e837609b2955680dc59ca4f357076be7cd819a46</a>
<blockquote>
<p>
    CUPS Raster: Fixed rotating of input pages with unknown sizes<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 21:02:26 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3464da3ee42b8af645af6eadabea4977d948b1a">c3464da3ee42b8af645af6eadabea4977d948b1a</a>
<blockquote>
<p>
    CUPS Raster: More on improving page size fitting<br>
<br>
    Raised the tolerance of matching the document's page sizes with the PPD's<br>
    page sizes on the short dimension to 2 %. This also covers the overspray<br>
    full-bleed page sizes of HPLIP.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 19:37:07 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c12ed06596207d895739b41e5c920af0aa48a2ff">c12ed06596207d895739b41e5c920af0aa48a2ff</a>
<blockquote>
<p>
    Improved page size matching in the CUPS Raster output device<br>
<br>
    The tolerances when comparing the page sizes in the document with the<br>
    sizes in the PPD file are changed to 1% for the short dimension of the<br>
    page and 5% for the long dimension. The 1% for the short dimension is<br>
    more or less the same as the 5.0pt used before (on letter or A4<br>
    paper). The 5% can cover the half inch deviation which HP puts into<br>
    the sheet length for their duplex paper sizes on ink jets.<br>
<br>
    If there is no matching paper size in the PPD and therefore the paper<br>
    size is considered custom, the page will be rotated in the case that<br>
    it does not fit into the maximum custom paper size (= printer<br>
    dimensions) but fits rotated.<br>
<br>
    With these measures, pages with slightly incorrectly defined size or<br>
    slightly incorrectly defined sizes in the PPD file (like the different<br>
    entries for one and the same paper size in the PPDs of HPLIP) will<br>
    find their size in the PPD and so rotated if needed.<br>
<br>
    This avoids cut-off print outs or even crashes of the printer<br>
    (https://bugs.launchpad.net/ubuntu/+source/linux/+bug/917148) due to<br>
    landscape pages not getting rotated.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-01 11:06:38 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f945ac6dd076b367fb9a9d8851cca783049b77a0">f945ac6dd076b367fb9a9d8851cca783049b77a0</a>
<blockquote>
<p>
    Change product string to &quot;RELEASE CANDIDATE 1&quot;<br>
<br>
gs/base/gscdef.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-01 10:59:52 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5f1a49cb3b05b5fed23e7eab99d6e036f16921dd">5f1a49cb3b05b5fed23e7eab99d6e036f16921dd</a>
<blockquote>
<p>
    Update docs for 9.05 release candidate.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/History9.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:55:34 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ffca2758193c517edf1d20c6af17acd85f8d5f99">ffca2758193c517edf1d20c6af17acd85f8d5f99</a>
<blockquote>
<p>
    Device Link and Proof Profile fix<br>
<br>
    If a proofing profile or a device link profile are<br>
    specified, the link transform is more than likely not going<br>
    to be identity.  This fix ensures that the transform<br>
    is properly applied.<br>
<br>
gs/base/gsicc_cache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 15:28:05 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dbf3d3403bc928c183b0674aa5adbb6263d56e42">dbf3d3403bc928c183b0674aa5adbb6263d56e42</a>
<blockquote>
<p>
    Make device link profile work with lcms2.   Also update documentation and add error handling.<br>
<br>
    The device link profile handling was put in place when we had lcms 1.8 but was not ported<br>
    over to the 2.0 interface.<br>
<br>
gs/base/gsicc.c<br>
gs/base/gsicc_lcms2.c<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 18:04:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=55049debcc22152c42a62b1fc350eb087125be5a">55049debcc22152c42a62b1fc350eb087125be5a</a>
<blockquote>
<p>
    Have gitlog2changelog.py use html code for &quot;quote&quot; char<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 17:49:42 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6123f6bc89a9c682dd0e0b8cb62d526fdca1b50a">6123f6bc89a9c682dd0e0b8cb62d526fdca1b50a</a>
<blockquote>
<p>
    Add new &quot;WhatIsGS.htm&quot; document<br>
<br>
    This explains how Ghostscript, GhostPCL, GhostXPS, etc are related.<br>
<br>
gs/doc/Readme.htm<br>
gs/doc/WhatIsGS.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 11:26:31 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1216fd5e30a1a09b8b381d4e43d795728a030cc8">1216fd5e30a1a09b8b381d4e43d795728a030cc8</a>
<blockquote>
<p>
    Bug 691483: Fix access to PDF collections.<br>
<br>
    Fix a bug in enumeration of a name tree that prevented acceaa to some<br>
    files in the PDF file collection when the name tree was more than<br>
    one level deep.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 08:12:14 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a549a4395c169a547e95a2905650dbc05388794">0a549a4395c169a547e95a2905650dbc05388794</a>
<blockquote>
<p>
    ps2write - silence a benign compiler warning<br>
<br>
    Picked up by scan-build; presumably this only gets run for commits, not<br>
    for regular cluster tests as it didn't show up previously.<br>
<br>
gs/base/gdevpdfc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:01:53 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4003b18b598c81df02d3d2c043276d54e7de7c6d">4003b18b598c81df02d3d2c043276d54e7de7c6d</a>
<blockquote>
<p>
    Have plver.mak use Ghostscript version.mak version number<br>
<br>
    No (significant) cluster differences.<br>
<br>
common/msvc_top.mak<br>
pl/pl.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 20:39:29 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=613b796e44ad8e29d9b4f8166a8b19796f1a024c">613b796e44ad8e29d9b4f8166a8b19796f1a024c</a>
<blockquote>
<p>
    Change a couple of '&amp;' to &amp;amp;<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/History9.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 20:26:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f58e15f60683f2be163e0a64ef1a86141a0d45c3">f58e15f60683f2be163e0a64ef1a86141a0d45c3</a>
<blockquote>
<p>
    gitlog2changelog.py use html sequence for '&amp;'<br>
<br>
    Thanks to SaGS for pointing it out.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 18:14:22 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a9e90a4710a90ce3d12da590280e91166eb2dc5">7a9e90a4710a90ce3d12da590280e91166eb2dc5</a>
<blockquote>
<p>
    Tweak gitlog2changelog.py to avoid trailing whitespace<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 18:00:23 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4aaa5f1594df678db91e3e9e913d1b27d5f7cd05">4aaa5f1594df678db91e3e9e913d1b27d5f7cd05</a>
<blockquote>
<p>
    Update docs in prep for 9.05 release candidate<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:59:49 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60ef9ebafb60f60cb709f7cb48ff15b94bad45fe">60ef9ebafb60f60cb709f7cb48ff15b94bad45fe</a>
<blockquote>
<p>
    Change product string in prep for 9.05 release candidate<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:46:27 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16195b5e1c104405e095753bc1343597cad32a28">16195b5e1c104405e095753bc1343597cad32a28</a>
<blockquote>
<p>
    Move the JPEG XR code to a separate section......<br>
<br>
    ... for non-GPL compatible, open source licensed code.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/thirdparty.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:41:35 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4961e763aeb795e7dc91dc64575837d170cca367">4961e763aeb795e7dc91dc64575837d170cca367</a>
<blockquote>
<p>
    Improve the html output of the changelog generator.<br>
<br>
    There were some compatibility problems with the html from the git log to<br>
    html changelog generator - such as including '&lt;' and '&gt;' characters in<br>
    text to be displayed.<br>
<br>
    Also, improve the actual formatting slightly.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:32:05 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3cc9b71fb9f1fe64556ecad34418bb4cf44ba7f">c3cc9b71fb9f1fe64556ecad34418bb4cf44ba7f</a>
<blockquote>
<p>
    ps2write - correctly convert ICCBased *image* colour spaces<br>
<br>
    Previously we handled ICCbased spaces by pretending they were device spaces<br>
    with the same number of components as the ICCBased space. This works<br>
    suprisingly well, but fails utterly for Lab spaces where images come out<br>
    completely incorrect.<br>
<br>
    We now convert the image data to the current device space. We do not yet handle<br>
    vector colour spaces, this will be handled by a future rewrite of the colour<br>
    handling to permit much better control over colour space handling.<br>
<br>
    This change causes quite a number o differences in the regression suite.<br>
    These fall into one of 4 causes:<br>
<br>
    1) Colour space conversion; previously ICCBases spaces with 1 or 4 components<br>
    would be handled as grey or CMYK respectively. They are now converted to the<br>
    device space (RGB by default). This causes some colour changes, especially<br>
    in halftoned output with a 1 component space. These are not incorrect as can<br>
    be seen from the contone output<br>
<br>
    2) There are some minor shifts in colour caused by correctly handling the<br>
    ICCBased space, in general these are progressions (especially the Altona<br>
    suite).<br>
<br>
    3) Handling of Lab colour spaces. These now work correctly where previously<br>
    they did not. Especially catx4929.pdf and IA3Z3476.pdf<br>
<br>
    4) Honouring rendering intents. Files hwich used a rendering intent now are<br>
    correctly converted. cf Bug #691926, comment 3.<br>
<br>
    5) There seems to be a possible problem with converting some CalRGB spaces,<br>
    the resulting output seems 'blue' with respect to the Acrobat otuput. In the<br>
    case of 1 file which contains scanned images of books, it is clear from the<br>
    original book covers that the output is incorrect. Michael suggest this may be<br>
    a White POitn problem. A separate bug report will be filed for this. Ghostscript<br>
    rendering of the original matches the ps2write output.<br>
<br>
gs/base/gdevpdfc.c<br>
gs/base/gdevpdfg.h<br>
gs/base/gdevpdfi.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:25:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2bb769a5b1ff2d1b8a5e6f0320cb210befe3f5bd">2bb769a5b1ff2d1b8a5e6f0320cb210befe3f5bd</a>
<blockquote>
<p>
    Update LICENSE<br>
<br>
    Revise the LICENSE file to reflect the latest Adobe CMap license<br>
    conditions, and to note that there is an Artifex copyright CMap in the<br>
    CMap directory.<br>
<br>
    Also, add a note about the JPEX XR source license.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/LICENSE<br>
<p>
</blockquote>
<hr>
<hr size=20>

<h2><a name="Version9.05"></a>Version 9.05 (2012-02-08)</h2>

<p>This is the fifth full release in the stable 9.x series.

<p> Highlights in this release include:
<ul>
<li><p>Ghostscript's PDF interpreter is now able to make use of the DroidSansFallback
TrueType font to automatically substitute for missing CIDFonts. Whilst it is
<b>always</b> best to ensure the original CIDFont is available for the best
and most accurate output, the ability to make an automatic substitution will
be valuable for those merely viewing or proofing such files.
</li>
<li><p>This release includes support for a proofing ICC profile. The command option
is specified using -sProofProfile=filename. With this option, the color output will
emulate what would be obtained had the source file been rendered on a device defined
by the proofing profile.
(See <a href="GS9_Color_Management.pdf">GS9_Color_Management.pdf</a> for details.)
</li>
<li><p>This release includes support for a device link ICC profile. The command option
is specified using -sDeviceLinkProfile=filename.  With this option, the device link profile
is added to the end of the link transform from source to destination. In this case, one can
include a command line option like &quot;-sDevice=tiff32nc -sOutputICCProfile=srgb.icc
-sDeviceLinkProfile=linkRGBtoCMYK.icc&quot; and source colors will be mapped through sRGB
and through the device link profile to CMYK values for the device.
(See <a href="GS9_Color_Management.pdf">GS9_Color_Management.pdf</a> for details.)
</li>
<li><p>Ghostscript now supports "unmanaged color transformations" for source DeviceXXX
colors (in other words, they use a simplistic conversion, rather than the ICC profile
based color workflow). This is beneficial in uses where performance takes precedence
over ultimate color fidelity (the command line parameter -dUseFastColor enables this).
</li>
<li><p>The font set distributed with Ghostscript has been changed to the standard
35 Postscript-compatible fonts distributed by URW.
</li>
<li><p>Ghostscript now includes a simple ink-coverage device, contributed by
Sebastian Kapfer (inkconv).
</li>
<li><p>The TIFF, JPEG and PNG output devices now support embedding of the device ICC profile
in the output file.
</li>
<li><p>Ghostscript now ships modified OpenJPEG sources for JPEG2000 decoding (replacing
JasPer - although JasPer is still included for this release). Performance, reliability
and memory use whilst decoding JPX streams are all improved (in many cases, significantly).
</li>
<li><p>jbig2dec now has simple halftone region support.
</li>
<li><p>The ps2write device has had a large number of output quality and stability
improvements.
</li>
<li><p>The txtwrite output was modified so that it more closely matches the output from
MuPDF, if requested. Note that the algorithms used by the two products are not
identical and may return slightly differing results.
</li>
</ul>
<br>(See <a href="Devices.htm#TXT">Devices.htm</a> for details)
<p>
<br>
<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.05_Incompatible_changes"></a>Incompatible changes</h3>
<p>
No recorded incompatible changes.

<h3><a name="9.05_Changelog"></a>Changelog</h3>
<p><strong>2012-02-03 16:18:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dd4c7f1f03aa7ea18d43db224126502725af91ba">dd4c7f1f03aa7ea18d43db224126502725af91ba</a>
<blockquote>
<p>
    Propogate dynmic device flags to 'so' subtarget.<br>
<br>
    When I brought the Makefile into line with convention for some of the FLAGS<br>
    variables, I forgot to add the new 'AC_CFLAGS' value to the subtarget for<br>
    the dynamic library build.<br>
<br>
    No cluster differences.<br>
<br>
gs/base/unix-dll.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-03 16:20:25 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e837609b2955680dc59ca4f357076be7cd819a46">e837609b2955680dc59ca4f357076be7cd819a46</a>
<blockquote>
<p>
    CUPS Raster: Fixed rotating of input pages with unknown sizes<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 21:02:26 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3464da3ee42b8af645af6eadabea4977d948b1a">c3464da3ee42b8af645af6eadabea4977d948b1a</a>
<blockquote>
<p>
    CUPS Raster: More on improving page size fitting<br>
<br>
    Raised the tolerance of matching the document's page sizes with the PPD's<br>
    page sizes on the short dimension to 2 %. This also covers the overspray<br>
    full-bleed page sizes of HPLIP.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-02 19:37:07 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c12ed06596207d895739b41e5c920af0aa48a2ff">c12ed06596207d895739b41e5c920af0aa48a2ff</a>
<blockquote>
<p>
    Improved page size matching in the CUPS Raster output device<br>
<br>
    The tolerances when comparing the page sizes in the document with the<br>
    sizes in the PPD file are changed to 1% for the short dimension of the<br>
    page and 5% for the long dimension. The 1% for the short dimension is<br>
    more or less the same as the 5.0pt used before (on letter or A4<br>
    paper). The 5% can cover the half inch deviation which HP puts into<br>
    the sheet length for their duplex paper sizes on ink jets.<br>
<br>
    If there is no matching paper size in the PPD and therefore the paper<br>
    size is considered custom, the page will be rotated in the case that<br>
    it does not fit into the maximum custom paper size (= printer<br>
    dimensions) but fits rotated.<br>
<br>
    With these measures, pages with slightly incorrectly defined size or<br>
    slightly incorrectly defined sizes in the PPD file (like the different<br>
    entries for one and the same paper size in the PPDs of HPLIP) will<br>
    find their size in the PPD and so rotated if needed.<br>
<br>
    This avoids cut-off print outs or even crashes of the printer<br>
    (https://bugs.launchpad.net/ubuntu/+source/linux/+bug/917148) due to<br>
    landscape pages not getting rotated.<br>
<br>
gs/cups/gdevcups.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-01 11:06:38 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f945ac6dd076b367fb9a9d8851cca783049b77a0">f945ac6dd076b367fb9a9d8851cca783049b77a0</a>
<blockquote>
<p>
    Change product string to &quot;RELEASE CANDIDATE 1&quot;<br>
<br>
gs/base/gscdef.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-02-01 10:59:52 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5f1a49cb3b05b5fed23e7eab99d6e036f16921dd">5f1a49cb3b05b5fed23e7eab99d6e036f16921dd</a>
<blockquote>
<p>
    Update docs for 9.05 release candidate.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/History9.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:55:34 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ffca2758193c517edf1d20c6af17acd85f8d5f99">ffca2758193c517edf1d20c6af17acd85f8d5f99</a>
<blockquote>
<p>
    Device Link and Proof Profile fix<br>
<br>
    If a proofing profile or a device link profile are<br>
    specified, the link transform is more than likely not going<br>
    to be identity.  This fix ensures that the transform<br>
    is properly applied.<br>
<br>
gs/base/gsicc_cache.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 15:28:05 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dbf3d3403bc928c183b0674aa5adbb6263d56e42">dbf3d3403bc928c183b0674aa5adbb6263d56e42</a>
<blockquote>
<p>
    Make device link profile work with lcms2.   Also update documentation and add error handling.<br>
<br>
    The device link profile handling was put in place when we had lcms 1.8 but was not ported<br>
    over to the 2.0 interface.<br>
<br>
gs/base/gsicc.c<br>
gs/base/gsicc_lcms2.c<br>
gs/doc/Use.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 18:04:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=55049debcc22152c42a62b1fc350eb087125be5a">55049debcc22152c42a62b1fc350eb087125be5a</a>
<blockquote>
<p>
    Have gitlog2changelog.py use html code for &quot;quote&quot; char<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 17:49:42 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6123f6bc89a9c682dd0e0b8cb62d526fdca1b50a">6123f6bc89a9c682dd0e0b8cb62d526fdca1b50a</a>
<blockquote>
<p>
    Add new &quot;WhatIsGS.htm&quot; document<br>
<br>
    This explains how Ghostscript, GhostPCL, GhostXPS, etc are related.<br>
<br>
gs/doc/Readme.htm<br>
gs/doc/WhatIsGS.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 11:26:31 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1216fd5e30a1a09b8b381d4e43d795728a030cc8">1216fd5e30a1a09b8b381d4e43d795728a030cc8</a>
<blockquote>
<p>
    Bug 691483: Fix access to PDF collections.<br>
<br>
    Fix a bug in enumeration of a name tree that prevented acceaa to some<br>
    files in the PDF file collection when the name tree was more than<br>
    one level deep.<br>
<br>
gs/Resource/Init/pdf_main.ps<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 08:12:14 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0a549a4395c169a547e95a2905650dbc05388794">0a549a4395c169a547e95a2905650dbc05388794</a>
<blockquote>
<p>
    ps2write - silence a benign compiler warning<br>
<br>
    Picked up by scan-build; presumably this only gets run for commits, not<br>
    for regular cluster tests as it didn't show up previously.<br>
<br>
gs/base/gdevpdfc.c<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-31 12:01:53 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4003b18b598c81df02d3d2c043276d54e7de7c6d">4003b18b598c81df02d3d2c043276d54e7de7c6d</a>
<blockquote>
<p>
    Have plver.mak use Ghostscript version.mak version number<br>
<br>
    No (significant) cluster differences.<br>
<br>
common/msvc_top.mak<br>
pl/pl.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 20:39:29 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=613b796e44ad8e29d9b4f8166a8b19796f1a024c">613b796e44ad8e29d9b4f8166a8b19796f1a024c</a>
<blockquote>
<p>
    Change a couple of '&amp;' to &amp;amp;<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/History9.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 20:26:30 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f58e15f60683f2be163e0a64ef1a86141a0d45c3">f58e15f60683f2be163e0a64ef1a86141a0d45c3</a>
<blockquote>
<p>
    gitlog2changelog.py use html sequence for '&amp;'<br>
<br>
    Thanks to SaGS for pointing it out.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 18:14:22 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a9e90a4710a90ce3d12da590280e91166eb2dc5">7a9e90a4710a90ce3d12da590280e91166eb2dc5</a>
<blockquote>
<p>
    Tweak gitlog2changelog.py to avoid trailing whitespace<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 18:00:23 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4aaa5f1594df678db91e3e9e913d1b27d5f7cd05">4aaa5f1594df678db91e3e9e913d1b27d5f7cd05</a>
<blockquote>
<p>
    Update docs in prep for 9.05 release candidate<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/API.htm<br>
gs/doc/C-style.htm<br>
gs/doc/Commprod.htm<br>
gs/doc/DLL.htm<br>
gs/doc/Deprecated.htm<br>
gs/doc/Details8.htm<br>
gs/doc/Details9.htm<br>
gs/doc/Develop.htm<br>
gs/doc/Devices.htm<br>
gs/doc/Drivers.htm<br>
gs/doc/Fonts.htm<br>
gs/doc/Helpers.htm<br>
gs/doc/History1.htm<br>
gs/doc/History2.htm<br>
gs/doc/History3.htm<br>
gs/doc/History4.htm<br>
gs/doc/History5.htm<br>
gs/doc/History6.htm<br>
gs/doc/History7.htm<br>
gs/doc/History8.htm<br>
gs/doc/History9.htm<br>
gs/doc/Install.htm<br>
gs/doc/Issues.htm<br>
gs/doc/Language.htm<br>
gs/doc/Lib.htm<br>
gs/doc/Make.htm<br>
gs/doc/News.htm<br>
gs/doc/Projects.htm<br>
gs/doc/Ps-style.htm<br>
gs/doc/Ps2epsi.htm<br>
gs/doc/Ps2pdf.htm<br>
gs/doc/Ps2ps2.htm<br>
gs/doc/Psfiles.htm<br>
gs/doc/Readme.htm<br>
gs/doc/Release.htm<br>
gs/doc/Source.htm<br>
gs/doc/Unix-lpr.htm<br>
gs/doc/Use.htm<br>
gs/doc/Xfonts.htm<br>
gs/doc/gs-vms.hlp<br>
gs/doc/thirdparty.htm<br>
gs/man/dvipdf.1<br>
gs/man/font2c.1<br>
gs/man/gs.1<br>
gs/man/gslp.1<br>
gs/man/gsnd.1<br>
gs/man/pdf2dsc.1<br>
gs/man/pdf2ps.1<br>
gs/man/pdfopt.1<br>
gs/man/pf2afm.1<br>
gs/man/pfbtopfa.1<br>
gs/man/printafm.1<br>
gs/man/ps2ascii.1<br>
gs/man/ps2epsi.1<br>
gs/man/ps2pdf.1<br>
gs/man/ps2pdfwr.1<br>
gs/man/ps2ps.1<br>
gs/man/wftopfa.1<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:59:49 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60ef9ebafb60f60cb709f7cb48ff15b94bad45fe">60ef9ebafb60f60cb709f7cb48ff15b94bad45fe</a>
<blockquote>
<p>
    Change product string in prep for 9.05 release candidate<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/base/version.mak<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:46:27 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16195b5e1c104405e095753bc1343597cad32a28">16195b5e1c104405e095753bc1343597cad32a28</a>
<blockquote>
<p>
    Move the JPEG XR code to a separate section......<br>
<br>
    ... for non-GPL compatible, open source licensed code.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/doc/thirdparty.htm<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 17:41:35 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4961e763aeb795e7dc91dc64575837d170cca367">4961e763aeb795e7dc91dc64575837d170cca367</a>
<blockquote>
<p>
    Improve the html output of the changelog generator.<br>
<br>
    There were some compatibility problems with the html from the git log to<br>
    html changelog generator - such as including '&lt;' and '&gt;' characters in<br>
    text to be displayed.<br>
<br>
    Also, improve the actual formatting slightly.<br>
<br>
    CLUSTER_UNTESTED<br>
<br>
gs/toolbin/gitlog2changelog.py<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:32:05 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3cc9b71fb9f1fe64556ecad34418bb4cf44ba7f">c3cc9b71fb9f1fe64556ecad34418bb4cf44ba7f</a>
<blockquote>
<p>
    ps2write - correctly convert ICCBased *image* colour spaces
<br>

<br>
    Previously we handled ICCbased spaces by pretending they were device spaces
<br>
    with the same number of components as the ICCBased space. This works
<br>
    suprisingly well, but fails utterly for Lab spaces where images come out
<br>
    completely incorrect.
<br>

<br>
    We now convert the image data to the current device space. We do not yet handle
<br>
    vector colour spaces, this will be handled by a future rewrite of the colour
<br>
    handling to permit much better control over colour space handling.
<br>

<br>
    This change causes quite a number o differences in the regression suite.
<br>
    These fall into one of 4 causes:
<br>

<br>
    1) Colour space conversion; previously ICCBases spaces with 1 or 4 components
<br>
    would be handled as grey or CMYK respectively. They are now converted to the
<br>
    device space (RGB by default). This causes some colour changes, especially
<br>
    in halftoned output with a 1 component space. These are not incorrect as can
<br>
    be seen from the contone output
<br>

<br>
    2) There are some minor shifts in colour caused by correctly handling the
<br>
    ICCBased space, in general these are progressions (especially the Altona
<br>
    suite).
<br>

<br>
    3) Handling of Lab colour spaces. These now work correctly where previously
<br>
    they did not. Especially catx4929.pdf and IA3Z3476.pdf
<br>

<br>
    4) Honouring rendering intents. Files hwich used a rendering intent now are
<br>
    correctly converted. cf Bug #691926, comment 3.
<br>

<br>
    5) There seems to be a possible problem with converting some CalRGB spaces,
<br>
    the resulting output seems 'blue' with respect to the Acrobat otuput. In the
<br>
    case of 1 file which contains scanned images of books, it is clear from the
<br>
    original book covers that the output is incorrect. Michael suggest this may be
<br>
    a White POitn problem. A separate bug report will be filed for this. Ghostscript
<br>
    rendering of the original matches the ps2write output.
<br>

<br>
gs/base/gdevpdfc.c
<br>
gs/base/gdevpdfg.h
<br>
gs/base/gdevpdfi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-30 13:25:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2bb769a5b1ff2d1b8a5e6f0320cb210befe3f5bd">2bb769a5b1ff2d1b8a5e6f0320cb210befe3f5bd</a>
<blockquote>
<p>
    Update LICENSE
<br>

<br>
    Revise the LICENSE file to reflect the latest Adobe CMap license
<br>
    conditions, and to note that there is an Artifex copyright CMap in the
<br>
    CMap directory.
<br>

<br>
    Also, add a note about the JPEX XR source license.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/LICENSE
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-28 01:24:50 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e25d12238406245ade09eaeb3dd815933f7bcb2">4e25d12238406245ade09eaeb3dd815933f7bcb2</a>
<blockquote>
<p>
    Bug 692704: Don't reset PageSpotColors after every page
<br>

<br>
    Don't reset PageSpotColors after every PDF page. Do it once when
<br>
    PDF is closed. first, this resetting serves no useful purpose.
<br>
    Second, this change avoids re-initialisation of tiffsep and psdcmyk
<br>
    devices, which causes overwriting of the first page.
<br>

<br>
    The fix results in progressions in all multi-page PDF files on
<br>
    psdcmyk device.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-27 09:57:33 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d385d65cddb8770c0b6e08d0a34609d0951eab1f">d385d65cddb8770c0b6e08d0a34609d0951eab1f</a>
<blockquote>
<p>
    Add a link in Readme.htm to the new thirdparty.htm
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Readme.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-26 16:58:02 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b6cc2a2539097d71ec200591788134703a2840a1">b6cc2a2539097d71ec200591788134703a2840a1</a>
<blockquote>
<p>
    XPS Whitespace handling fix
<br>

<br>
    Update the xps point reading code to use strtod rather than atof;
<br>
    this returns us an updated string pointer, rather than relying
<br>
    on us second-guessing where it may end up.
<br>

<br>
    Change xps_get_point to return this updated pointer, and change some
<br>
    calls of this to avoid having to skip whitespace (and potentially
<br>
    getting it wrong) after the call.
<br>

<br>
    Spotted as part of the commit to take the latest XPS changes into
<br>
    MuPDF.
<br>

<br>
xps/ghostxps.h
<br>
xps/xpspath.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-26 15:17:34 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8eb237bc17ea481f75f482288c854ca42b31466b">8eb237bc17ea481f75f482288c854ca42b31466b</a>
<blockquote>
<p>
    ps2write - do not allow Widths aray to alter /.notdef width.
<br>

<br>
    The way the Widths array works, if the Encoding has a /.notdef entry then
<br>
    the width of the /.notdef is altered to that width.
<br>

<br>
    If we have an earlier re-assignment, this breaks the assigned width.
<br>

<br>
    The file catx1490.pdf relies on a ./notdef to draw a 'box' (crazy but
<br>
    that's what it does). If we redefine the width tehn it is incorrect.
<br>

<br>
    Expected differences
<br>
    Catx1490.pdf
<br>
    Bug691221.pdf
<br>
    Bug689757.pdf
<br>
    THe latter two are minor differences, but slight progressions
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-26 11:07:06 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=043a20124c63ee48f874e8a9d869098d099c6d19">043a20124c63ee48f874e8a9d869098d099c6d19</a>
<blockquote>
<p>
    Have the &quot;configure&quot; build cope with missing &quot;contrib&quot;
<br>

<br>
    For the Artifex commercial release, we remove the files from the contrib
<br>
    directory. This meant a successful build had to be &quot;configured&quot; with the
<br>
    --without-contrib option.
<br>

<br>
    Now, configure looks for a specific file in &quot;contrib&quot;, and if it is not there
<br>
    the contributed drivers are automatically disabled.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-25 19:58:52 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0fb4785ef74fd22b8c1cced5ec16bd28d5bcc666">0fb4785ef74fd22b8c1cced5ec16bd28d5bcc666</a>
<blockquote>
<p>
    Fix Bug 692343 - ignore invalid padding length bytes.
<br>

<br>
    AES streams contain padding at the end to bring them up to 16
<br>
    byte chunks. The last byte of the plaintext is supposed to be
<br>
    a value between 1 and 16 telling us how many bytes to ignore
<br>
    from the last one? (Why 16? 15 would make more sense).
<br>

<br>
    If the padding byte was out of range we would previously have
<br>
    thrown an error. Here we change to just warn and set the
<br>
    padding length to 0. This means we'll err on the side of making
<br>
    the stream too long, which is better than the alternative.
<br>

<br>
gs/base/saes.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-25 19:21:08 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=845ac2669008d3c8daf6461c0fda3b0496d7443e">845ac2669008d3c8daf6461c0fda3b0496d7443e</a>
<blockquote>
<p>
    Bug 691254: This patch prevents the seg fault in Jbig2_042_14.pdf.
<br>

<br>
gs/jbig2dec/jbig2_symbol_dict.c
<br>
gs/jbig2dec/jbig2_text.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-25 08:14:22 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=679964341b8543bc37bf3cb783f12434af829f64">679964341b8543bc37bf3cb783f12434af829f64</a>
<blockquote>
<p>
    ps2write - properly check number of components when converting Image type 3/4
<br>

<br>
    The code to limit optimisation of image type 3 or 4 into an imagemask was
<br>
    testing to see if the routine which returned the numebr of components in
<br>
    the colour space was a particular routine, instead of testing the return
<br>
    value of that routine to see if it was 1.
<br>

<br>
    Expected Differences
<br>
    Bug689717.pdf
<br>
    ImageProb2.pdf
<br>
    12-07c.ps
<br>
    all now render correctly or (in the case of 12-07c.ps) exhibit useful
<br>
    progressions, when converted to PostScript using ps2write
<br>

<br>
gs/base/gdevpdfi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 12:59:20 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83ce7cf6c9252c39e280040b12db1dcfbd8a7cb2">83ce7cf6c9252c39e280040b12db1dcfbd8a7cb2</a>
<blockquote>
<p>
    Fix for bug 692733.  Pattern clist improperly cleared.
<br>

<br>
    The pattern code was performing an initial clear of the pattern.  This is OK
<br>
    when the pattern is not a clist since the mask was not drawn in when this
<br>
    fill occurs (seee gx_erase_colored_pattern).  Unfortunately this rect fill
<br>
    was getting into the pattern clist which is should not.
<br>

<br>
gs/base/gxpcmap.c
<br>
gs/psi/zpcolor.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 16:44:07 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1fab5a6b3945ba46fadd326e01f25e94f8af0886">1fab5a6b3945ba46fadd326e01f25e94f8af0886</a>
<blockquote>
<p>
    Note that we patch lcms2 in thirdparty.htm
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/thirdparty.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 16:22:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=345be99ff34a6023dd28c06869ff8db41a3c640c">345be99ff34a6023dd28c06869ff8db41a3c640c</a>
<blockquote>
<p>
    Add a file detailing our use of third party libraries.
<br>

<br>
    Including, name, version, purpose, license and URL.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/thirdparty.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 13:20:11 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fb56842749e5430ed18d938eb78d1cf24c3e9759">fb56842749e5430ed18d938eb78d1cf24c3e9759</a>
<blockquote>
<p>
    Tweak jbig2dec to cope better with NULLs.
<br>

<br>
    Fix various destructors in jbig2dec to cope with being called
<br>
    with image = NULL. This cures a problem in mupdf where it SEGVs
<br>
    when called on &quot;1239 - skip invalid content streams.pdf&quot; from the
<br>
    sumatra test set.
<br>

<br>
gs/jbig2dec/jbig2_image.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 12:03:43 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a92b0c487e0e003a6a69b93acb7c1ef84d2f9683">a92b0c487e0e003a6a69b93acb7c1ef84d2f9683</a>
<blockquote>
<p>
    Add details to Make.htm about Luratech
<br>

<br>
    Make it clear that if there, Luratech will be used automatically.
<br>

<br>
    Add details about disabling automatic Luratech inclusion.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Make.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 11:49:43 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=672fba9c5396ff7079e166a7535b879deffd801a">672fba9c5396ff7079e166a7535b879deffd801a</a>
<blockquote>
<p>
    Bug 691184: update doc and example for getenv in cidfmap
<br>

<br>
    Add information to the cidfmap section of Use.htm mentioning the ability to
<br>
    use &quot;getenv&quot; to influence paths to font files in cidfmap.
<br>

<br>
    And fix the example in cidfmap.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/Resource/Init/cidfmap
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-24 11:44:34 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=997f750a5dd4cf70b18d011e3297dd7c8f4abd97">997f750a5dd4cf70b18d011e3297dd7c8f4abd97</a>
<blockquote>
<p>
    Bug 692810: fix OpenJPEG section of configure --help
<br>

<br>
    I forgot to reverse the logic of the help message when I made OpenJPEG the
<br>
    default JPEG2000 decoder - so the option is now to *disable* it.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-23 22:52:33 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1f3469404c599093df2e6c8157ac70111b0c80e2">1f3469404c599093df2e6c8157ac70111b0c80e2</a>
<blockquote>
<p>
    Revert &quot;Addition of objects to support the output intent.&quot;
<br>

<br>
    This reverts commit 89546758c858d53c105dfc73fc4d108171b8437d.
<br>

<br>
    Something appears to be wrong with this when I was doing some other testing
<br>
    although it did ok in the cluster push.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gscms.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-23 09:59:35 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=89546758c858d53c105dfc73fc4d108171b8437d">89546758c858d53c105dfc73fc4d108171b8437d</a>
<blockquote>
<p>
    Addition of objects to support the output intent.
<br>

<br>
    This doesn't do anything yet.  There will be another commit for the
<br>
    PDF interpreter to make use of these objects.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gscms.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-23 11:12:04 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=315a899b2f9bd8be2f247550a05d807a8c698f07">315a899b2f9bd8be2f247550a05d807a8c698f07</a>
<blockquote>
<p>
    ps2write/pdfwrite - Don't arbitrarily change VVECTOR0 flag in type 1 info
<br>

<br>
    Way back in 2003 code was added 'in lieu of proper CDevProc processing' to
<br>
    alter the behaviour of pdfwrite. In particular a flag was set which always
<br>
    causes pdfwrite to handle width chnages.
<br>

<br>
    However, we do now handle CDevProc correctly, and the arbitrary assignment
<br>
    of this flag causes serious problems for pdfwrite &amp; ps2write in the
<br>
    (admittedly rare and unreasonable) case where the FontMatrix of an already
<br>
    used font is modified.
<br>

<br>
    Expected Differences:
<br>
    14-12.ps
<br>
    16-05.ps
<br>

<br>
    Both now work better with ps2write and pdfwrite, though not 100% correct
<br>

<br>
gs/base/gxtype1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-21 14:07:15 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d0d411c0830b81fa9fb38e3f938ac855fde9a6e3">d0d411c0830b81fa9fb38e3f938ac855fde9a6e3</a>
<blockquote>
<p>
    Bug 692798: Ignore the request for undefined color space.
<br>

<br>
    Ignore the attempt to set an undefined color spece resource,
<br>
    issue a warning, and continue.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 12:32:13 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eaaa284dcd5901de156c52c0dc0aff78816e4b81">eaaa284dcd5901de156c52c0dc0aff78816e4b81</a>
<blockquote>
<p>
    Fix for bug 692787.  Rending Intent aliased with Blending mode in clist
<br>

<br>
    When I had added the rendering intent into the clist misc parameters I did not
<br>
    have enough bits to fit everything into a single byte.
<br>

<br>
gs/base/gxclpath.c
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-20 15:26:15 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf6946a1762b975a0450e0d11bdcb13889cdd877">cf6946a1762b975a0450e0d11bdcb13889cdd877</a>
<blockquote>
<p>
    Add a note about building on Mac.......
<br>

<br>
    .....with MacPorts installed.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Make.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 09:31:53 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e7702813865b8c149f7a8462491d4ca72e70e8e">5e7702813865b8c149f7a8462491d4ca72e70e8e</a>
<blockquote>
<p>
    Fix pdfwrite and other vector devices for changing filename and separate pages
<br>

<br>
    Previously vector devices did not allow changing OutputFile and (most) did not support the %d
<br>
    OutputFile to generate single page files (pswrite was the exception). The function used by
<br>
    pswrite was generalized and renamed gx_outputfile_is_separate_pages for general use. If this
<br>
    returns true vector devices will close and reopen after each page. The PageCount will then be
<br>
    used in the formation of the filename for the next page.
<br>

<br>
    Since vector devices open an write the OutputFile when the device is opened the file will be
<br>
    written even if there is no input, and if a format specifier is used in the OutputFile, then
<br>
    an extra blank page will be written (maybe this will be fixed later).
<br>

<br>
    For example, now pdfwrite can be used in server mode by changing the OutputFile device param
<br>
    which will cause the current collection of pages to be written to the PDF file, and a new
<br>
    PDF will be started. This is most useful from gsapi calls, but creating two PDF's from one
<br>
    invocation of gs via the command line would be:
<br>
        gs -sDEVICE=pdfwrite -o tiger.pdf examples/tiger.eps \
<br>
         -c &quot;&lt;&lt; /OutputFile (colorcir.pdf) &gt;&gt; setpagedevice&quot; \
<br>
         -f examples/colorcir.ps
<br>

<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevps.c
<br>
gs/base/gdevpx.c
<br>
gs/base/gdevsvg.c
<br>
gs/base/gdevvec.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gxdevice.h
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-19 10:37:43 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d0f46b66b275c794dd87525e066e84ccabb4f96">7d0f46b66b275c794dd87525e066e84ccabb4f96</a>
<blockquote>
<p>
    Bug 692801: Fix build with shared lcms2 and &quot;so&quot; target
<br>

<br>
    The targets for the lcms2 integration were mixed up, meaning the shared
<br>
    lib build had a couple of dependencies on our &quot;local&quot; lcms2 source files.
<br>

<br>
    The &quot;so&quot; target failed because the compiler for the lcms2 integration
<br>
    code used the wrong compiler variable (and consequently dropped some
<br>
    vital flags).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-19 09:41:53 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a75b5a720684d6e599c28cae9abb9357aa97d7b3">a75b5a720684d6e599c28cae9abb9357aa97d7b3</a>
<blockquote>
<p>
    ps2write - alter /NumCopies handling.
<br>

<br>
    Previously we mimicked /NumCopies and /#copies by using copypage. This is
<br>
    unreliable because copypage differs on level 3 devices and won't work as
<br>
    expected. Also it breaks DSC compliance and is probably undesirable with
<br>
    other PostScript processors such as CUPS.
<br>

<br>
    This commit alters the behaviour so that we use copypage only if the flag
<br>
    DoNumCopies is true *and* we ProduceDSC is not true. This changes the
<br>
    default to match pdfwrite and what I think is most logical while preserving
<br>
    the ability to use copypage in environments where its use can be supported.
<br>

<br>
    Expected Differences
<br>
    Any files using /NumCopies or /#copies will behave differently, producing
<br>
    fewer (blank!) pages than before. In our test suite I think this only
<br>
    affects the Quality Logic files. In particular 268-03.ps and 29-07b.ps
<br>

<br>
gs/base/gdevpdf.c
<br>
gs/doc/Ps2ps2.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 12:24:15 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2a7bf50f7cb797b0f3213eb091960700c0ff50e6">2a7bf50f7cb797b0f3213eb091960700c0ff50e6</a>
<blockquote>
<p>
    Integrates the new URW WingDing font.
<br>

<br>
    For reasons unknown URW has named the font NewDingbats.  This will
<br>
    result in many healthy progressions in the regression test suite.
<br>

<br>
pl/plftable.c
<br>
urwfonts/NewDingbats.ttf
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 12:05:36 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=71bb3ba36e2d15ec409185c69716c7cf40b89ea2">71bb3ba36e2d15ec409185c69716c7cf40b89ea2</a>
<blockquote>
<p>
    Prevent double file close on font file.
<br>

<br>
    Introduced with the recent change to close font files at
<br>
    initialization.  If a file in the font directory could not be found in
<br>
    the font table (was not a known font) the file would be closed twice.
<br>

<br>
pl/pllfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 10:22:47 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=406c8ff0f0414294e52d27d706db51dd11f83725">406c8ff0f0414294e52d27d706db51dd11f83725</a>
<blockquote>
<p>
    PJL support for the resolution variable.
<br>

<br>
    The PJL resolution variable is now properly supported, for example &quot;PJL
<br>
    SET RESOLUTION = 300&quot; will see the resolution for the next job to 300
<br>
    but will be overridden if -r is given directly on the command line.
<br>
    Note the PJL resolution is only one value, there is no way to specify
<br>
    asymmetric resolution as there is with the -r option.
<br>

<br>
pcl/pcjob.c
<br>
pcl/pcstate.h
<br>
pcl/pctop.c
<br>
pl/pjparse.c
<br>
pl/plmain.c
<br>
pl/plmain.h
<br>
pl/pltop.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-17 14:45:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3e60553237af409e4d23d5c8dd39eb136665752">b3e60553237af409e4d23d5c8dd39eb136665752</a>
<blockquote>
<p>
    Close PCL font files after initial read.
<br>

<br>
    Upon startup PCL reads all the font files to gather attribute
<br>
    information but the files were being left open wasting file handles.
<br>
    This change closes the files.
<br>

<br>
pl/pllfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-17 14:42:43 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ad194fca3c799f3928d714567a17c5d8361a424">5ad194fca3c799f3928d714567a17c5d8361a424</a>
<blockquote>
<p>
    Reverts 3ab47d0e1e357a16cf5b35747b10b26d99b4d6f0, bad fix.
<br>

<br>
    Now that we have a larger corpus of hpgl/2-rtl files it is clear this
<br>
    fix cannot be right, something must have been wrong with the analysis,
<br>
    unfortunately the, referenced test file from the logs (&quot;sprinkler&quot;)
<br>
    seems to be gone.
<br>

<br>
pcl/pcjob.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 15:31:35 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39eb74a7a55793f6acdc473efd014a95a93f7542">39eb74a7a55793f6acdc473efd014a95a93f7542</a>
<blockquote>
<p>
    Shell script to convert HPGL/2-RTL to PDF.
<br>

<br>
    Aside from the obvious purpose of converting hpgl/2 files to pdf, the
<br>
    script demonstrates how to use the bounding box device to find the
<br>
    extant of the graphics in the gl/2 file and then use those bounding
<br>
    box coordinates to defiine a plot size for the file so there is no
<br>
    white space margin.  This is commonly needed as the plot size command
<br>
    in GL/2 files specifies a plot much larger than needed.
<br>

<br>
tools/plot2pdf.sh
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 12:07:37 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dbab71fabce6bdeda5f478a077f739457e88f542">dbab71fabce6bdeda5f478a077f739457e88f542</a>
<blockquote>
<p>
    Refines '-J' option to process Exit Language properly.
<br>

<br>
    The previous set up sent a truncated string to the PJL parser so Exit
<br>
    Language was never returned.  Now all the output is sent and the Exit
<br>
    Language code is required otherwise an error is returned.
<br>

<br>
pl/plmain.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 09:47:07 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84cb959e0a2ed1cb0a898b8e2bebf120f55ebc57">84cb959e0a2ed1cb0a898b8e2bebf120f55ebc57</a>
<blockquote>
<p>
    Allow multiple PJL commands with the -J option.
<br>

<br>
    Previously only 1 PJL command could be issued on the command line with
<br>
    the -J option.  Now multiple commands may be issued by separating
<br>
    commands with a semicolon:
<br>

<br>
    pcl6 -lRTL -J&quot;@PJL DEFAULT PLOTSIZEOVERRIDE=ON;\
<br>
       @PJL DEFAULT PLOTSIZE1=10000;@PJL DEFAULT PLOTSIZE2=8000&quot;
<br>

<br>
    Unfortunately, the odd behavior of HP's PJL parser does not allow
<br>
    whitespace before &quot;@PJL&quot; which should start a new command each on a
<br>
    different line, similarly there can be no leading white space at the
<br>
    beginning or after a semicolon.
<br>

<br>
pl/plmain.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 10:27:40 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c2d126b790a81d2f9338834429cc46fcc84dab2">0c2d126b790a81d2f9338834429cc46fcc84dab2</a>
<blockquote>
<p>
    Bug 692788: Wrong and missing manpage links in unixinst.mak
<br>

<br>
    Patch from Stefan Bruens ( stefan.bruens@rwth-aachen.de ).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/unixinst.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-18 08:33:00 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=25198491321b0540910d9aaa6dcc4367f2098dab">25198491321b0540910d9aaa6dcc4367f2098dab</a>
<blockquote>
<p>
    Bug 692789: add some buffer limit protection.
<br>

<br>
    In one place add buffer overrun protection and error out, and in another,
<br>
    error out if the incoming string is greater than the buffer length (in this
<br>
    case there would be no buffer overrun, as we only read a buffer full of
<br>
    data).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/echogs.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-16 11:23:18 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91f728c058e3ab4705e53916d07597c7a755c730">91f728c058e3ab4705e53916d07597c7a755c730</a>
<blockquote>
<p>
    Fix pdfwrite's stringwidth for text rendering mode 3
<br>

<br>
    pdfwrite provides it's own &quot;low level&quot stringwidth code, which includes code to
<br>
    convert the resulting coordinates into user space. Unexplicably, this
<br>
    conversion to user space was *not* applied when text rendering more 3 was in
<br>
    force.
<br>

<br>
    This caused a problem for a pending enhancement.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gdevpdte.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-16 10:19:50 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3efaa3a6fabad09a4442f281fdbccc33f0474ea0">3efaa3a6fabad09a4442f281fdbccc33f0474ea0</a>
<blockquote>
<p>
    ps2write - Prevent charpath optimisation to Tr for ps2write
<br>

<br>
    As a legacy of the old Text rendering mode code there is an optimisation in
<br>
    pdfwrite which detects sequences such as &quot;true charpath gsave fill grestore
<br>
    stroke&quot; and converts them to Text rendering mode 2.
<br>

<br>
    However, ps2write doesn't support text rendering modes, so if the colour changes
<br>
    then this produces incorrect output.
<br>

<br>
    Disabling the optimisation when the device is ps2write cures the problem.
<br>

<br>
    Expected Differences
<br>
    Progressions in:
<br>
    Bug687817.ps
<br>
    Bug690164.ps
<br>
    Catx6562.pdf
<br>

<br>
    Small (single pixel) diffferences in a number of files due to the emission
<br>
    of a path rather than executing charpath.
<br>

<br>
gs/base/gdevpdfd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 10:16:03 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=85a94168a4e64199b5a237dbf0d262f5e457440f">85a94168a4e64199b5a237dbf0d262f5e457440f</a>
<blockquote>
<p>
    Fix typo in document.  9.05 not 9.5
<br>

<br>
gs/doc/GS9_Color_Management.pdf
<br>
gs/doc/GS9_Color_Management.tex
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 10:40:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a9e65e32b4a12c0f5de8ed6a3dcd38b3216f3ae1">a9e65e32b4a12c0f5de8ed6a3dcd38b3216f3ae1</a>
<blockquote>
<p>
    Bug 691230, basic jbig2 halftone image support.
<br>

<br>
    Thanks to George Gottleuber for this work.
<br>

<br>
gs/base/jbig2.mak
<br>
gs/jbig2dec/jbig2_halftone.c
<br>
gs/jbig2dec/jbig2_halftone.h
<br>
gs/jbig2dec/jbig2_mmr.c
<br>
gs/jbig2dec/jbig2_mmr.h
<br>
gs/jbig2dec/jbig2_segment.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 14:23:19 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=993377ba237144726cd25e2d8851c70090370dd4">993377ba237144726cd25e2d8851c70090370dd4</a>
<blockquote>
<p>
    Optimise TetrahedralInterp16 in lcms2
<br>

<br>
    Port Michaels optimisations from lcms1, and further tweak
<br>
    for speed.
<br>

<br>
gs/lcms2/src/cmsintrp.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 13:45:44 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e03b7f4769120ba60224cc6484b8766b386e054">8e03b7f4769120ba60224cc6484b8766b386e054</a>
<blockquote>
<p>
    Better lcms2 support in autoconf build
<br>

<br>
    Make reverting to lcms a configure option, make lcms2 the default in configure
<br>
    allow linking of the system lcms2.
<br>

<br>
    Improve the feedback a little.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-13 01:02:52 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e400364e182ae838a9a844ea40c4cca8d33bc09">4e400364e182ae838a9a844ea40c4cca8d33bc09</a>
<blockquote>
<p>
    Silence lcms2 warnings.
<br>

<br>
    Make a few functions static. Announce some in the headers.
<br>

<br>
    Fix some #ifdefferey.
<br>

<br>
gs/base/gsicc_lcms2.c
<br>
gs/lcms2/include/lcms2.h
<br>
gs/lcms2/src/cmspack.c
<br>
gs/lcms2/src/cmstypes.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/lcms2_internal.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 16:05:09 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf11f0f7e68ac576138e49ab8d2c05a0121c6997">cf11f0f7e68ac576138e49ab8d2c05a0121c6997</a>
<blockquote>
<p>
    Change default cms to be lcms2 (for autogen.sh builds).
<br>

<br>
    Continuation of commit 319474974fe4ddb99d29e8d3976afcc25f0e54ba.
<br>

<br>
gs/base/Makefile.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 11:22:18 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8aa37658b48f4fbda7551598f8de216f2d3dd33d">8aa37658b48f4fbda7551598f8de216f2d3dd33d</a>
<blockquote>
<p>
    Update of color documentation
<br>

<br>
    The new document includes several figures.  Rather than clutter the tree with the additional figures that LaTeX uses in creating the pdf, I removed the figures folder.  The new LaTeX file uses PDFLaTeX to create the pdf rather than the dvi2ps approach.
<br>

<br>
gs/doc/GS9_Color_Management.pdf
<br>
gs/doc/GS9_Color_Management.tex
<br>
gs/doc/figures/Ghost.eps
<br>
gs/doc/figures/Overview.eps
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-12 15:23:20 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=afad2d730c8f5f6137791259fab3c45fda0f6862">afad2d730c8f5f6137791259fab3c45fda0f6862</a>
<blockquote>
<p>
    ps2write - When converting shaded fills to image+clip, preserve insidenes rule
<br>

<br>
    ps2write cannot preserve a fill with a Shading pattern, so it converts these
<br>
    to an image and a clip (the path to fill is converted to a clip path).
<br>

<br>
    However it did not preserve the 'insideness' winding rule which meant that
<br>
    both eofill and fill were converted to 'clip' when eofill should be converted
<br>
    to eoclip.
<br>

<br>
    Expected Differences
<br>
    fts_31_3110.pdf
<br>
    fts_31_3115.pdf
<br>
    fts_31_3118.pdf
<br>
    09-47A.ps
<br>
    09-47B.ps
<br>
    09-47C.ps
<br>
    09-47D.ps
<br>
    09-47E.ps
<br>
    09-47G.ps
<br>
    09-47H.ps
<br>
    09-47I.ps
<br>
    09-47J.ps
<br>
    09-47K.ps
<br>
    09-47L.ps
<br>
    09-47M.ps
<br>
    18-02A.ps
<br>
    18-02B.ps
<br>
    18-02F.ps
<br>
    23-12W.ps
<br>

<br>
    All show progressions with ps2write
<br>

<br>
gs/base/gdevpdfd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-11 11:25:41 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f6b83ef318aaf22b84cdeca55ba40208b9c3caad">f6b83ef318aaf22b84cdeca55ba40208b9c3caad</a>
<blockquote>
<p>
    Port color transform speedups from lcms1 to lcms2.
<br>

<br>
    Use a chameleonic header file to generate optimised transform
<br>
    functions.
<br>

<br>
gs/base/lcms2.mak
<br>
gs/lcms2/src/cmspack.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/cmsxform.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 14:41:36 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=defb2b18e49123f4cad571070156a27ece868652">defb2b18e49123f4cad571070156a27ece868652</a>
<blockquote>
<p>
    Adds the bbox device.
<br>

<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 21:16:10 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f50368d684e84fe63579494b3e3efe0e4f39f98c">f50368d684e84fe63579494b3e3efe0e4f39f98c</a>
<blockquote>
<p>
    Clean up of the icc color code.
<br>

<br>
    Remove objects and redundant functions that were introduced over the
<br>
    past couple years.  Found these while writing the documentation.
<br>

<br>
gs/base/gdevpdfi.c
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevxcf.c
<br>
gs/base/gscms.h
<br>
gs/base/gscsepr.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gsicc_nocm.c
<br>
gs/base/gxcmap.c
<br>
xps/xpsgradient.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 18:27:46 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9e2df6f6194c5091dbfc6bde2218569645f5c89a">9e2df6f6194c5091dbfc6bde2218569645f5c89a</a>
<blockquote>
<p>
    Make fuzzy not seg fault when comparing images of different sizes.
<br>

<br>
    Horrible hack to allow fuzzy to compare two files that have different
<br>
    dimensions (necessary when compareing outupt from muPDF vs. Ghostscript).
<br>

<br>
gs/toolbin/tests/fuzzy.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 23:05:58 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=319474974fe4ddb99d29e8d3976afcc25f0e54ba">319474974fe4ddb99d29e8d3976afcc25f0e54ba</a>
<blockquote>
<p>
    Change default cms to be lcms2 (for non-windows builds)
<br>

<br>
    Forgot to change the unix builds. Expect lots of small changes in
<br>
    the cluster.
<br>

<br>
common/ugcc_top.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/macosx.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 22:24:35 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c0573245db4f03c6cdca24906d73151a4e9be3c9">c0573245db4f03c6cdca24906d73151a4e9be3c9</a>
<blockquote>
<p>
    Bug 691267: Check all realloc error paths.
<br>

<br>
gs/base/sjbig2.c
<br>
gs/jbig2dec/jbig2.c
<br>
gs/jbig2dec/jbig2_huffman.c
<br>
gs/jbig2dec/jbig2_page.c
<br>
gs/jbig2dec/jbig2_symbol_dict.c
<br>
gs/jbig2dec/jbig2_text.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 22:09:28 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e1c54b4c4cbc12185e44a758dcfae8f6095fa6c">4e1c54b4c4cbc12185e44a758dcfae8f6095fa6c</a>
<blockquote>
<p>
    Add 2 more files missing from solution.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 22:08:28 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d23e07f6895eb581eaea17bf812be9f89d207b3">9d23e07f6895eb581eaea17bf812be9f89d207b3</a>
<blockquote>
<p>
    Change default cms to lcms2.
<br>

<br>
    Expect lots of small changes.
<br>

<br>
gs/base/winlib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 19:47:56 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2468c2bce2ae03750ccab220b16fa6a62b31135f">2468c2bce2ae03750ccab220b16fa6a62b31135f</a>
<blockquote>
<p>
    Move icc34.h from lcms directory to gs/base
<br>

<br>
    It's not supplied as part of the lib, and we need it for lcms,
<br>
    lcms2, the non-cmm cmm and the creation tools, so having it
<br>
    somewhere central seems sensible.
<br>

<br>
gs/base/icc34.h
<br>
gs/base/lcms.mak
<br>
gs/base/lcms2.mak
<br>
gs/base/lib.mak
<br>
gs/lcms/include/icc34.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 19:45:25 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1a09075987875224abdaf8d6c62fdf40895ba98">d1a09075987875224abdaf8d6c62fdf40895ba98</a>
<blockquote>
<p>
    LCMS2 fix: MSVC version check uses &lt;= rather than &lt;
<br>

<br>
    Checking for &lt;= 1400 includes VS2005. The intent is to only include
<br>
    VS2003. Change to &lt; and all is well.
<br>

<br>
gs/lcms2/src/lcms2_internal.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 19:16:34 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df2872f8b3cff582871ae15f4c3221bcb6e607fc">df2872f8b3cff582871ae15f4c3221bcb6e607fc</a>
<blockquote>
<p>
    Add lcms2 entries to Visual Studio Solution.
<br>

<br>
    Doesn't make any difference to building - just enables us to search
<br>
    for code etc more easily.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-10 10:55:10 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3996236547b4f6b2c4e0d60cd7b4196c33123ac0">3996236547b4f6b2c4e0d60cd7b4196c33123ac0</a>
<blockquote>
<p>
    Update of our lcms2 directory to 2.3 release
<br>

<br>
gs/lcms2/AUTHORS
<br>
gs/lcms2/ChangeLog
<br>
gs/lcms2/Projects/BorlandC_5.5/lcms2.rc
<br>
gs/lcms2/Projects/VC2008/lcms2.rc
<br>
gs/lcms2/Projects/VC2010/lcms2.rc
<br>
gs/lcms2/Projects/mac/.DS_Store
<br>
gs/lcms2/Projects/mac/LittleCMS/.DS_Store
<br>
gs/lcms2/bin/Bin.txt
<br>
gs/lcms2/bin/Thumbs.db
<br>
gs/lcms2/configure
<br>
gs/lcms2/configure.ac
<br>
gs/lcms2/doc/LittleCMS2.0 API.pdf
<br>
gs/lcms2/doc/LittleCMS2.0 Plugin API.pdf
<br>
gs/lcms2/doc/LittleCMS2.0 tutorial.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 API.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 Plugin API.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 tutorial.pdf
<br>
gs/lcms2/doc/LittleCMS2.3 API.pdf
<br>
gs/lcms2/doc/LittleCMS2.3 Plugin API.pdf
<br>
gs/lcms2/doc/LittleCMS2.3 tutorial.pdf
<br>
gs/lcms2/doc/src.zip
<br>
gs/lcms2/include/icc34.h
<br>
gs/lcms2/include/lcms2.h
<br>
gs/lcms2/lcms2.pc.in
<br>
gs/lcms2/src/cmscgats.c
<br>
gs/lcms2/src/cmscnvrt.c
<br>
gs/lcms2/src/cmserr.c
<br>
gs/lcms2/src/cmsio1.c
<br>
gs/lcms2/src/cmslut.c
<br>
gs/lcms2/src/cmsnamed.c
<br>
gs/lcms2/src/cmsopt.c
<br>
gs/lcms2/src/cmspack.c
<br>
gs/lcms2/src/cmsplugin.c
<br>
gs/lcms2/src/cmssm.c
<br>
gs/lcms2/src/cmstypes.c
<br>
gs/lcms2/src/cmsvirt.c
<br>
gs/lcms2/src/cmswtpnt.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/lcms2.def
<br>
gs/lcms2/src/lcms2_internal.h
<br>
gs/lcms2/testbed/USWebCoatedSWOP.icc
<br>
gs/lcms2/testbed/UncoatedFOGRA29.icc
<br>
gs/lcms2/testbed/sRGBSpac.icm
<br>
gs/lcms2/testbed/sRGB_Color_Space_Profile.icm
<br>
gs/lcms2/testbed/sRGB_v4_ICC_preference.icc
<br>
gs/lcms2/testbed/test1.icc
<br>
gs/lcms2/testbed/test2.icc
<br>
gs/lcms2/testbed/test3.icc
<br>
gs/lcms2/testbed/test4.icc
<br>
gs/lcms2/testbed/test5.icc
<br>
gs/lcms2/testbed/testcms2.c
<br>
gs/lcms2/utils/common/vprf.c
<br>
gs/lcms2/utils/delphi/lcms2.dll
<br>
gs/lcms2/utils/linkicc/linkicc.c
<br>
gs/lcms2/utils/samples/roundtrip.c
<br>
gs/lcms2/utils/tificc/tificc.c
<br>
gs/lcms2/utils/transicc/transicc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-09 11:06:41 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20a53310422c41df4f48deef3f704b39c291a5f2">20a53310422c41df4f48deef3f704b39c291a5f2</a>
<blockquote>
<p>
    PLOTSIZEROTATE is no longer used with the current scheme to initialize
<br>
    HPGL-2/RTL (see last few commits).
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pl/pjparse.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-09 10:48:58 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96726af52822d442cceb1531c1d12bd6141ac322">96726af52822d442cceb1531c1d12bd6141ac322</a>
<blockquote>
<p>
    The previous standalone GL/2 mode is incompatible with how the
<br>
    transformations are set up in PCL.  We have found that plots for
<br>
    standalone mode can be viewed properly in HPGL-2/RTL mode.  We think
<br>
    this is the best alternative for now, if we get into the business of
<br>
    emulating individual plotters the issue can be revisited.
<br>

<br>
pcl/pgdraw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-08 12:57:46 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e6d68e396ec5842af5b8cb5cb226c9de1f46d31">1e6d68e396ec5842af5b8cb5cb226c9de1f46d31</a>
<blockquote>
<p>
    The HPGL-2/RTL work of the last few commits introduce a regression -
<br>
    disabling bound coordinates in normal PCL mode.
<br>

<br>
pcl/pgdraw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 22:09:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d18b90db02540b1bf1005537aa38b42ef2486f43">d18b90db02540b1bf1005537aa38b42ef2486f43</a>
<blockquote>
<p>
    Implements transformations and clipping needed by HPGL/2-RTL.  The
<br>
    previous setup was only appropriate for HPGL standalone mode and only
<br>
    appeared to work based on the small number of example files we had at
<br>
    the time.
<br>

<br>
pcl/pcpage.c
<br>
pcl/pgconfig.c
<br>
pcl/pgdraw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 22:02:59 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9f40ae210f923553413e44135e796fcb981ec34e">9f40ae210f923553413e44135e796fcb981ec34e</a>
<blockquote>
<p>
    Presentation mode 3 and clipping when the cap is coincident with the
<br>
    logical page is not seen in the HPGL-2/RTL examples we have.  There
<br>
    might be something more complicated going on here, it would be
<br>
    difficult to determine without a device to run experiments.
<br>

<br>
pcl/rtgmode.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 21:58:50 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3687f6b4cbafd91d5f29c604f86a56a5b118001f">3687f6b4cbafd91d5f29c604f86a56a5b118001f</a>
<blockquote>
<p>
    Support the geometry option on the command line, note this really
<br>
    duplicates the functionality of setting a media size using PJL, but we
<br>
    implement it anyway because users prefer the familiarity of the
<br>
    option.
<br>

<br>
pcl/pcpage.c
<br>
pcl/pcstate.h
<br>
pcl/pctop.c
<br>
pl/plmain.c
<br>
pl/plmain.h
<br>
pl/pltop.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 21:35:57 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=275066d79d9f01a90f0fd91bc8448c5746cbac2c">275066d79d9f01a90f0fd91bc8448c5746cbac2c</a>
<blockquote>
<p>
    The default top and left margin are 0 in HPGL-2/RTL mode, not the standard
<br>
    PCL values.
<br>

<br>
pcl/pcpage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 21:09:37 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5a1eda769a573ef37e2930502c25bfab8d1fb457">5a1eda769a573ef37e2930502c25bfab8d1fb457</a>
<blockquote>
<p>
    The transformation setup for HPGL-2 and RTL was really only correct
<br>
    for standalone mode (GL only).  So we have to save the entry operand
<br>
    to the &quot;Enter HPGL/2 command&quot; in the state so it can be used when the
<br>
    transformation matrices are recalculated.
<br>

<br>
pcl/pcommand.c
<br>
pcl/pcstate.h
<br>
pcl/pgdraw.c
<br>
pcl/rtmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-07 20:50:17 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9632b092e1d3ea35c855ae1ccba78fd2e4695d9a">9632b092e1d3ea35c855ae1ccba78fd2e4695d9a</a>
<blockquote>
<p>
    Remove unnecessary warning of dubious origin.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pcl/pcursor.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-20 18:19:40 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d5c4a0e75e89618e08418ec50809bcbc9886fcf">9d5c4a0e75e89618e08418ec50809bcbc9886fcf</a>
<blockquote>
<p>
    Conditionalize a debug message.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pl/plfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-20 11:45:52 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bddfe691c7caae4653cb9ad46645443274fe42a2">bddfe691c7caae4653cb9ad46645443274fe42a2</a>
<blockquote>
<p>
    The new ICC flow does not require CRD's and we now do not selectively
<br>
    choose halftones based on setting from the palette vs. the foreground,
<br>
    the latter, an implemented but never used feature.
<br>

<br>
pcl/pcdraw.c
<br>
pcl/pcht.c
<br>
pcl/pcht.h
<br>
pcl/pcpatrn.c
<br>
pcl/pgdraw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-08 16:32:03 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=acf3f93fa0b9b0b0af938d0517045446e0d94042">acf3f93fa0b9b0b0af938d0517045446e0d94042</a>
<blockquote>
<p>
    Add missing '\n' before EOF.
<br>

<br>
    Add missing '\n' to the last line of gdevp14.c.
<br>
    This caused compilation errors on MSVC 7.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-06 12:14:15 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=de1badc8e7dcf9b2728f46c5a187a2b76a1bf682">de1badc8e7dcf9b2728f46c5a187a2b76a1bf682</a>
<blockquote>
<p>
    ps2write - Properly handle masked images with interpolation
<br>

<br>
    ps2write converts type 3 and 4 (masked) images into an image and clip
<br>
    combination. The clip is created from the mask, and the image is rendered
<br>
    to a memory device. Note that the memory device canvas is just large enough to
<br>
    contain the image.
<br>

<br>
    The image is drawn as a series of rectangular fills, and our 'local conveter'
<br>
    device shifts these from the original page location to the correct (relocated to 0,0)
<br>
    position in the memory device.
<br>

<br>
    However, if interpolation is true for the image, then we don't get a series
<br>
    of rectangular fills, we get a 'copy_color' instead which the converter
<br>
    device didn't handle. Adding a copy_color method which properly translates the
<br>
    image position solves the problem.
<br>

<br>
    Expected Differences
<br>
    Progressions in Bug691210.pdf, 12-07B.ps and 12-07C.ps
<br>

<br>
gs/base/gdevpdfd.c
<br>
gs/base/gdevpdfx.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-06 11:49:13 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=62633d12eb583116c0a0e1f888c283977cb593b2">62633d12eb583116c0a0e1f888c283977cb593b2</a>
<blockquote>
<p>
    Bug 692764: check Freetype is new enough
<br>

<br>
    We must use Freetype v 2.4.0 at the earliest, so configure will now check that
<br>
    if being asked to use a shared Freetype lib.
<br>

<br>
    Add a configure check for Freetype shared lib that doesn't depend on pkg-config.
<br>

<br>
    Move the warning about falling back to the deprecated AFS code to the end of
<br>
    the configure output.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-05 22:09:09 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c3bf6f733b8aed99f2a87058b8689c063beae9a0">c3bf6f733b8aed99f2a87058b8689c063beae9a0</a>
<blockquote>
<p>
    Fixed missing Rendering Intent Override in gs_lev2.ps
<br>

<br>
    In creating some examples and writing the documentation I
<br>
    discovered that this was missing and so none of the
<br>
    rendering intent settings were working.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-05 13:41:17 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da508b027e16d926f2e200fd6ff17d58f3392855">da508b027e16d926f2e200fd6ff17d58f3392855</a>
<blockquote>
<p>
    Added the ability to clusterpush.pl mupdf.
<br>

<br>
    This feature is still largely untested and known problems remain,
<br>
    in particular there is an issue with the wrong information in the
<br>
    email report for the first mupdf clusterpush following a ghostscript
<br>
    clusterpush.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-05 10:05:51 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f45061bbea6a75abe17187fd06b67ad36fc7e779">f45061bbea6a75abe17187fd06b67ad36fc7e779</a>
<blockquote>
<p>
    Fix memory issue when creating source color structure
<br>

<br>
    One of the objects in the source color structure was getting allocated in
<br>
    GC memory where it should have been in non-GC memory.
<br>

<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-05 16:13:07 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d3bd93d8da482714c30e58731829cac4f9e3510e">d3bd93d8da482714c30e58731829cac4f9e3510e</a>
<blockquote>
<p>
    Add RAW_DUMP_AS_PAM option.
<br>

<br>
    If RAW_DUMP_AS_PAM is enabled, then (where possible) we RAW_DUMP
<br>
    blends as pam rather than raw files. Easier for people without
<br>
    full photoshop to handle.
<br>

<br>
gs/base/gxblend.c
<br>
gs/base/gxblend.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-03 17:50:07 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e503591e1cc9d6f6c4c91fd5e0500df0cb6df21b">e503591e1cc9d6f6c4c91fd5e0500df0cb6df21b</a>
<blockquote>
<p>
    Revise example in comments.
<br>

<br>
    Revise the example using &quot;getenv&quot; to correcly account for the return values of getenv.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/Resource/Init/cidfmap
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-03 16:10:02 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c974aa83b814e9bf9c3e1b29493edb8cd5ed8091">c974aa83b814e9bf9c3e1b29493edb8cd5ed8091</a>
<blockquote>
<p>
    Bug 692641 (again): prevent symbol name clash
<br>

<br>
    Another case where our &quot;internal&quot; SHA symbols could clash with the &quot;real&quot;
<br>
    OpenSSL ones if libgs is being statically linked. As before, trivial rename
<br>
    to avoid this (courtesy of Alan Hourihane - alanh@fairlite.co.uk).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/sha2.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-03 13:08:07 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d48a3d162fd38aaa2582e32565c07df41e7c02cb">d48a3d162fd38aaa2582e32565c07df41e7c02cb</a>
<blockquote>
<p>
    pdfwrite/ps2write - Properly validate BitsPerComponent for images
<br>

<br>
    Suprisingly (to me) the BitsPerComponent value for images is not validated
<br>
    at the interpreter (language) level, but is handled in the graphics library.
<br>

<br>
    pdfwrite and ps2write were not validating the BitsPerComponent, other than
<br>
    to check it was 8 or less, and so could create invalid images in the PDF or
<br>
    PostScritp output.
<br>

<br>
    This commit adds the missing checks.
<br>

<br>
    Expected Differences
<br>
    12-07a.ps - ps2write no longer produces an invalid PostScript file
<br>
    12-07a.ps - pdfwrite no longer produces an invalid PDF file
<br>
    12-02.ps - ps2write no longer produces an invalid PostScript file
<br>
    12-02.ps - pdfwrite no longer produces an invalid PDF file
<br>

<br>
gs/base/gdevpdfi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2012-01-03 09:20:05 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8cfb57fdd350cbda7578226b150ed0014d5949c9">8cfb57fdd350cbda7578226b150ed0014d5949c9</a>
<blockquote>
<p>
    ps2write - fix uncoloured Pattern spaces with a complex colour space
<br>

<br>
    Certain kinds of colour space, eg /Separation, can have a function which
<br>
    converts to the alternate space. If one of these was used as the colour
<br>
    space for an uncoloured pattern then the function was not properly loaded
<br>
    from the object defuinition, leading to an invalid colour space declaration.
<br>

<br>
    This tests the initial space to see if it is /Pattern and if it is, checks
<br>
    to see if the pattern is uncoloured (the array contains more than /Pattern).
<br>
    If so we test the colour space and, if it is an array, process the array as
<br>
    a colour space, which properly dereferences all the elements.
<br>

<br>

<br>
    Expected Differences:
<br>
    09-47a.ps, 09-47b.ps and 18-02b.ps should now work correctly.
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-28 14:37:49 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e681a04de79896406946d5487efe0a37eb6d2b2">4e681a04de79896406946d5487efe0a37eb6d2b2</a>
<blockquote>
<p>
    Proof and DeviceLink ICC profile support
<br>

<br>
    This enables the use of the device link and/or a proofing profile.   When
<br>
    present, the transformations are as follows
<br>
    src profile -&gt; PCS -&gt; proof -&gt; PCS -&gt; proof -&gt; PCS -&gt; device profile -&gt; device link
<br>
    where PCS is the profile connection space.  The CMM obviously would
<br>
    normally mash these together in a single transform.  This is what
<br>
    occurs in lcms.
<br>

<br>
    This implies that the output color space for the device link
<br>
    profile must match the color model for the real target device and
<br>
    that the input color space for the device link profile must match
<br>
    the color space specified for the device profile.
<br>
    Still need to do some additional testing and update documentation.
<br>

<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/gxiscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 09:55:25 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d4625c5b5a262501fefabe68f2bbea000dcecb52">d4625c5b5a262501fefabe68f2bbea000dcecb52</a>
<blockquote>
<p>
    Movement of proof profile an device link profile to device.
<br>

<br>
    The proofing profile and the device link profile are now in the device's
<br>
    profile structure.  This makes it much easier to include in the proofing
<br>
    profile and/or the device link profile during the link transformation
<br>
    creation.   This commit includes all the changes except for the actual
<br>
    creation of the link with the proof.  That will come in a separate commit
<br>
    since there are a lot of changes in this commit and I want to spend
<br>
    a little more time on that to make it clean and
<br>
    dependent upon the capabilities of the CMM.  The reason is that there are
<br>
    some CMMs that support the chaining together of multiple transformations and
<br>
    some that do not.  Those that do not may not be able to handle both a
<br>
    proofing profile AND a device link profile.  We want to handle that case
<br>
    gracefully.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevpdfk.c
<br>
gs/base/gscms.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_nocm.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxshade.c
<br>
gs/psi/zusparam.c
<br>
xps/xpsgradient.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-23 11:50:08 -0800
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63571a25cbd787573f0c4918abe7c783f5e5209c">63571a25cbd787573f0c4918abe7c783f5e5209c</a>
<blockquote>
<p>
    Memento/Valgrind integration tweak.
<br>

<br>
    Ensure block header is set to be readable when reading blk-&gt;tail
<br>
    to avoid spurious read errors.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-23 15:56:43 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1430adef1955c8c85001b2fbcd371bfccfead179">1430adef1955c8c85001b2fbcd371bfccfead179</a>
<blockquote>
<p>
    ps2write - Correct the DecodeLMN matrix creation for a CalGray -&gt; CIEBasedA
<br>

<br>
    When converting a CalGray to a CIEBasedA dpace, the Gamma from the CalGray is
<br>
    used to create a DecodeLMN array. However the code only created a single
<br>
    executable array, when it is required to be an array of 3 procedures.
<br>

<br>
    Expected Diffrences
<br>
    09-34.ps no longer fails when converted via ps2write
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-23 08:06:18 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1ca1565f903490bd71dcc8182e69d4ab5eb6c3a">b1ca1565f903490bd71dcc8182e69d4ab5eb6c3a</a>
<blockquote>
<p>
    Initialise a pointer to silence a compiler warning
<br>

<br>
    In fact this is benign, the code can't get here without previously allocating
<br>
    and initialising the pointer, but that takes place in another branch and
<br>
    static analysis can't reveal that.
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 16:21:10 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e758e15df0497f85c6843b57e65a6d7f072cf815">e758e15df0497f85c6843b57e65a6d7f072cf815</a>
<blockquote>
<p>
    Prevent a crash trying to get MissingWidth from sa non-CID font in txtwrite
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 15:29:26 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2eb7ab1f1e57d118259ae7bf2fce9c2872152478">2eb7ab1f1e57d118259ae7bf2fce9c2872152478</a>
<blockquote>
<p>
    Txtwrite - initialise members of an array, silences compiler warning.
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 14:45:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b90f64665896669124bb6f219a77a556371c67c8">b90f64665896669124bb6f219a77a556371c67c8</a>
<blockquote>
<p>
    Revise DisplayHandle documentation in API.htm
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/API.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 14:47:24 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e391e19723bad3de19beb2fa584f0d9c8b62cac9">e391e19723bad3de19beb2fa584f0d9c8b62cac9</a>
<blockquote>
<p>
    Correctly read all parameters in put_params as well as get_params
<br>

<br>
    Fixes the txtwrite device with the language switch build
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-22 12:42:53 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1eb9f0069dce7d626118333fd51477d734daa88e">1eb9f0069dce7d626118333fd51477d734daa88e</a>
<blockquote>
<p>
    Add the txtwrite device to PCL and language switch and supply a method
<br>
    for get_page_device in txtwrite (prevents SEGV)
<br>

<br>
gs/base/gdevtxtw.c
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 12:25:57 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=157a91639635abad452872cf521f743bbadb0c68">157a91639635abad452872cf521f743bbadb0c68</a>
<blockquote>
<p>
    Addition of debug output for icc color conversions
<br>

<br>
    To get detailed information about ICC profile allocations,
<br>
    mappings, profile creations from PS color objects and
<br>
    link creations use the command line option --debug=icc
<br>

<br>
gs/base/gdbflags.h
<br>
gs/base/gsciemap.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclthrd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 17:51:31 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e99a07ab13789ae7d561390bf0f07721fbf4917">4e99a07ab13789ae7d561390bf0f07721fbf4917</a>
<blockquote>
<p>
    Clean up some target mess left over from earlier commit.
<br>

<br>
    I missed some changes from the removal of the old installer, some
<br>
    targets were still there which relied on the removed files.
<br>

<br>
    Also, a name didn't make any sense.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
gs/psi/winint.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 17:07:45 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2cba2590e1a8edfef6f0b13f8d392a756f889690">2cba2590e1a8edfef6f0b13f8d392a756f889690</a>
<blockquote>
<p>
    Bug 692089 (prt 2): Update Install.htm with 64 bit versions of Windows binaries
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Install.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 17:00:03 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=37053da2b828df8101be25eed9bfadf3c13dbd7b">37053da2b828df8101be25eed9bfadf3c13dbd7b</a>
<blockquote>
<p>
    Bug 692089 (prt 1): install gssetgs.bat suitable for current installer.
<br>

<br>
    As the istaller knows whether it is installer the 32 bit or 64 bit version
<br>
    of Ghostscript, the installer now chooses between two gssetgs.bat versions
<br>
    so that the other batch files find the appropriate GS exe.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/lib/gssetgs32.bat
<br>
gs/lib/gssetgs64.bat
<br>
gs/psi/msvc.mak
<br>
gs/psi/nsisinst.nsi
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 16:56:47 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a11f84267931e805148ed63025002851d3f3d2eb">a11f84267931e805148ed63025002851d3f3d2eb</a>
<blockquote>
<p>
    Remove source files for the old Ghostscript installer.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/dwinst.cpp
<br>
gs/psi/dwinst.h
<br>
gs/psi/dwsetup.cpp
<br>
gs/psi/dwsetup.h
<br>
gs/psi/dwsetup.rc
<br>
gs/psi/dwuninst.cpp
<br>
gs/psi/dwuninst.h
<br>
gs/psi/dwuninst.rc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 15:20:37 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83b1e0429c3ab74da7dd1c9b78401671bac4d6f6">83b1e0429c3ab74da7dd1c9b78401671bac4d6f6</a>
<blockquote>
<p>
    Make OpenJPEG the default for JPXDecode.
<br>

<br>
    This introduces differences for all the cluster tests with JPX encoded image
<br>
    data in them.
<br>

<br>
gs/base/configure.ac
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 13:23:57 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4bcc37370e97105ae3d4aff085b15541a7cd6a51">4bcc37370e97105ae3d4aff085b15541a7cd6a51</a>
<blockquote>
<p>
    Bug 692754: have configure setup endian setting for lcms
<br>

<br>
    The lcms header files have some educated guesses for the current platform
<br>
    big/little endianness, but they are not comprehensive (for example, PA-RISC
<br>
    HP UX defeats it).
<br>

<br>
    So, add a test to our configure scripts, and pass the setting as required as a
<br>
    compiler option for lcms. NOTE: I added an explicit test for endianness because
<br>
    the autoconf built-in test has problems in recent releases.
<br>

<br>
    Also, noticed in passing: revise the other explicit compile/link tests to use
<br>
    the AC_LANG_PROGRAM() macro - currently not doing so produces a warning, but
<br>
    the implication is future versions will throw an error.
<br>

<br>
    No cluster differences.
<br>

<br>
config.mak.in
<br>
configure.ac
<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/lcms.mak
<br>
gs/base/lcms2.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-21 09:16:50 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=39182690d9d7242d7a8e6e2f5fe9aff52d0ee3ab">39182690d9d7242d7a8e6e2f5fe9aff52d0ee3ab</a>
<blockquote>
<p>
    ps2write - Use Font level Resources for type 3 font CharProcs
<br>

<br>
    Part of Bug #691928, file tpc2.ps. It is possible (in PDF) for a font to have
<br>
    Resources separately from teh page stream. This is properly catered for in
<br>
    PDF interpreters.
<br>

<br>
    However, ps2write's prolog only allowed resources defined at the page level
<br>
    when executing CharProc procedures from a type 3 font (because we are in the
<br>
    page stream at the time, not the font object).
<br>

<br>
    If the type 3 font executes findfont, and the font is not defined at the page
<br>
    level (often the case for the Quark q font and other substitutes) then the
<br>
    font cannot be found. Due to a quirk of the way fonts are defined, the *first*
<br>
    page to use the type 3 font always includes definitions for any fonts used by
<br>
    the type 3 font, so this problem only exhibits on mutiple page documents.
<br>

<br>
    This was tricky to fix, we cannot simply replace the Resources in the current
<br>
    Context, as we need to return to the pre-existing Context after running the
<br>
    CharProc. Additionally, type 3 fonts can execute other type 3 fonts which may
<br>
    themselves call other fonts. It was neccesary to implement a stack of saved
<br>
    resources in order to deal with this situation.
<br>

<br>
    Expected Differences
<br>
    tpc2.ps should now work properly with ps2write
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-20 11:42:18 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa34b3ab12b15f5e1ace688f00c28a75667afdb4">fa34b3ab12b15f5e1ace688f00c28a75667afdb4</a>
<blockquote>
<p>
    Fix for bug 691998 avoid the creation of the CRD cache.
<br>

<br>
    Since we are using ICC profiles to define the output color to not create the
<br>
    cache for the CRD.
<br>

<br>
gs/psi/zcrd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-19 17:54:51 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c85b3957cb896af69d8b7f630a56635cc0eb7a8c">c85b3957cb896af69d8b7f630a56635cc0eb7a8c</a>
<blockquote>
<p>
    Revise the SSE2 tests to work with Sun cc compiler
<br>

<br>
    The Sun/Oracle C compiler doesn't throw an error when compiling SSE2 code
<br>
    without the requisite SSE2 command line option, and building non-
<br>
    optimized.
<br>

<br>
    This commit applies a more stringent test, and ensures we use the optimized
<br>
    build option when we do the test build/link.
<br>

<br>
    Also, adds some use feedback for the SSE2, byteswap intrinsic and byteswap
<br>
    header tests.
<br>

<br>
    No cluster differences.
<br>

<br>
configure.ac
<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-19 15:33:01 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a4ff3a5c387f8958016b3678d919373c57ec5bd">6a4ff3a5c387f8958016b3678d919373c57ec5bd</a>
<blockquote>
<p>
    CIDFont substitution tweak for *Light,Bold fonts
<br>

<br>
    When we have to substitute for a &quot;Light&quot; style CIDFont which has been made
<br>
    bold, don't apply artificial emboldening unless the substitute font is
<br>
    also a &quot;Light&quot;.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-19 08:00:17 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=269ddabfb17657114b8e09b0c2fb2ee8440d92df">269ddabfb17657114b8e09b0c2fb2ee8440d92df</a>
<blockquote>
<p>
    Check a return code, silences a compiler warning and is more robust
<br>

<br>
gs/base/gxfcopy.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-17 14:08:37 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=464ef7f26f33b3f8a5d4c8732674e75a6aff39dc">464ef7f26f33b3f8a5d4c8732674e75a6aff39dc</a>
<blockquote>
<p>
    Bug 692747: Trap errors in operator sh and continue.
<br>

<br>
    Execute .shfill operator in a stopped contect, trap errors,
<br>
    issue a warning, and continue.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-15 13:54:15 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea9a951756d495c6b8e427cbcea80fb94f9ccaa5">ea9a951756d495c6b8e427cbcea80fb94f9ccaa5</a>
<blockquote>
<p>
    Bug 687297: Revert to the URW fonts
<br>

<br>
    Revert to using the &quot;pristine&quot; URW fonts.
<br>

<br>
    Cluster differences: every job which uses one of the base 35 fonts.
<br>

<br>
gs/Resource/Font/CenturySchL-Bold
<br>
gs/Resource/Font/CenturySchL-BoldItal
<br>
gs/Resource/Font/CenturySchL-Ital
<br>
gs/Resource/Font/CenturySchL-Roma
<br>
gs/Resource/Font/Dingbats
<br>
gs/Resource/Font/NimbusMonL-Bold
<br>
gs/Resource/Font/NimbusMonL-BoldObli
<br>
gs/Resource/Font/NimbusMonL-Regu
<br>
gs/Resource/Font/NimbusMonL-ReguObli
<br>
gs/Resource/Font/NimbusRomNo9L-Medi
<br>
gs/Resource/Font/NimbusRomNo9L-MediItal
<br>
gs/Resource/Font/NimbusRomNo9L-Regu
<br>
gs/Resource/Font/NimbusRomNo9L-ReguItal
<br>
gs/Resource/Font/NimbusSanL-Bold
<br>
gs/Resource/Font/NimbusSanL-BoldCond
<br>
gs/Resource/Font/NimbusSanL-BoldCondItal
<br>
gs/Resource/Font/NimbusSanL-BoldItal
<br>
gs/Resource/Font/NimbusSanL-Regu
<br>
gs/Resource/Font/NimbusSanL-ReguCond
<br>
gs/Resource/Font/NimbusSanL-ReguCondItal
<br>
gs/Resource/Font/NimbusSanL-ReguItal
<br>
gs/Resource/Font/StandardSymL
<br>
gs/Resource/Font/URWBookmanL-DemiBold
<br>
gs/Resource/Font/URWBookmanL-DemiBoldItal
<br>
gs/Resource/Font/URWBookmanL-Ligh
<br>
gs/Resource/Font/URWBookmanL-LighItal
<br>
gs/Resource/Font/URWChanceryL-MediItal
<br>
gs/Resource/Font/URWGothicL-Book
<br>
gs/Resource/Font/URWGothicL-BookObli
<br>
gs/Resource/Font/URWGothicL-Demi
<br>
gs/Resource/Font/URWGothicL-DemiObli
<br>
gs/Resource/Font/URWPalladioL-Bold
<br>
gs/Resource/Font/URWPalladioL-BoldItal
<br>
gs/Resource/Font/URWPalladioL-Ital
<br>
gs/Resource/Font/URWPalladioL-Roma
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-14 16:23:24 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3875e5a471e3f9b9b4a2f5ea03e37b59fcd8913c">3875e5a471e3f9b9b4a2f5ea03e37b59fcd8913c</a>
<blockquote>
<p>
    Bug 690779 (pt2): revisions to CIDFont substition.
<br>

<br>
    The original code (commit 18a51701) didn't work well with pdfwrite, so this
<br>
    revision handles substition by modifying the CIDFont resource .map dictionary.
<br>
    This means that the &quot;fake&quot; CIDFont is created with the requested parameters
<br>
    from the start.
<br>

<br>
    Also, add command line paramters and environment variables to control the
<br>
    path to and file name of the subsitute TTF.
<br>

<br>
    Differences in Bug692320.pdf.
<br>

<br>
    No other cluster differences.
<br>

<br>
gs/Resource/Init/gs_cidfm.ps
<br>
gs/Resource/Init/pdf_font.ps
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-14 09:10:55 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce35f1657aac012a492f05f61b56a605243fe83e">ce35f1657aac012a492f05f61b56a605243fe83e</a>
<blockquote>
<p>
    Re-enable CDevProc for substituted CIDFonts.
<br>

<br>
    Previously, CDevProc execution was disabled for CIDFonts which had been
<br>
    substituted by a TTF (through cidfmap, for example) because the index that
<br>
    gets passed to zchar_set_cache() is the TTF GID, not the CID, and the
<br>
    CDevProc requires the CID.
<br>

<br>
    We can, however, retrieve the CID from the text enumerator, and pass that to
<br>
    the CDevProc, which is what this commit implements.
<br>

<br>
    Cluster differences in Bug692320.pdf because we now reposition glyphs with the
<br>
    CDevProc where we previously were not.
<br>

<br>
    No other differences.
<br>

<br>
gs/psi/zcharout.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-13 12:47:57 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=863d3d5383aaf59a04715115f72651cbbb3d8435">863d3d5383aaf59a04715115f72651cbbb3d8435</a>
<blockquote>
<p>
    Fix for bug 688387; Type 3 image range checking is too restrictive.
<br>

<br>
    Modified version of patch from Olavi Sakari.
<br>

<br>
    For explicit masking, regenerate the mask matrix from the image
<br>
    matrix, with scaling changes to allow for different widths/heights.
<br>

<br>
    Cluster testing shows differences in:
<br>
      tests_private/comparefiles/468-01.ps      (We now match acrobat)
<br>
      tests_private/comparefiles/Bug690237.pdf  (rounding diffs, fine)
<br>
      tests_private/ps/ps3cet/12-07C.PS         (content now appears)
<br>

<br>
gs/base/gximage3.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-13 11:19:08 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=93bdb2010c0c1ce074c3cd4bddc6a77f6808d920">93bdb2010c0c1ce074c3cd4bddc6a77f6808d920</a>
<blockquote>
<p>
    Common subexpression elimination - no expected changes.
<br>

<br>
pcl/pcindxed.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 21:58:38 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e04069bf8549eba33e7ba71398769609b72d2026">e04069bf8549eba33e7ba71398769609b72d2026</a>
<blockquote>
<p>
    Reorganize the initialization of the pen width and residual palette
<br>
    color entries.  In particular, the pen width initialization was
<br>
    incorrect, applying default pen widths to pens that shouldn't be
<br>
    reset.  This changes result in progressions for the following files:
<br>

<br>
    tests_private/pcl/pcl5ccet/31-09.BIN
<br>
    tests_private/pcl/pcl5ccet/34-03.BIN
<br>
    tests_private/xl/pcl6cet3.0/C705.bin
<br>

<br>
pcl/pcindxed.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 09:58:43 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=abf148da6950f4f39d57603fb316584ea0975fa7">abf148da6950f4f39d57603fb316584ea0975fa7</a>
<blockquote>
<p>
    Addresses 692051, the palette string's allocated size always
<br>
    matches the number of entries in the palette times 3 (bytes).
<br>

<br>
pcl/pcindxed.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 09:57:30 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0880ae03de6174fc13c3016a1c0f49c850047df7">0880ae03de6174fc13c3016a1c0f49c850047df7</a>
<blockquote>
<p>
    Make fuction static.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pcl/pcpalet.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 09:54:30 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a074d9ebc08bda2680133ae3fc09fd9ff55637be">a074d9ebc08bda2680133ae3fc09fd9ff55637be</a>
<blockquote>
<p>
    Fix long standing problem where too many palette entries were
<br>
    initialized.  This was not an issue with a fixed static palette but
<br>
    with the new dynamic palettes forthcoming this would cause writing
<br>
    past the end of the palette data string.
<br>

<br>
pcl/pcindxed.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-09 09:37:26 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dea0afb058b76ea57832f6e48a0bfc080898e9cb">dea0afb058b76ea57832f6e48a0bfc080898e9cb</a>
<blockquote>
<p>
    Back out valgrind workarounds to resize and initialize indexed color
<br>
    spaces.  A more complete solution is forthcoming.
<br>

<br>
pcl/pcindxed.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-08 23:18:54 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aacecd032249027269e896ebc0abada3a8e82945">aacecd032249027269e896ebc0abada3a8e82945</a>
<blockquote>
<p>
    Extra debugging support for PCL color spaces.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pcl/pccid.c
<br>
pcl/pccid.h
<br>
pcl/pccsbase.c
<br>
pcl/pcindxed.c
<br>
pcl/pcpatrn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-13 15:21:42 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5f5921ad464e39676328705c874485e66a6d6469">5f5921ad464e39676328705c874485e66a6d6469</a>
<blockquote>
<p>
    Fix crash when using a TrueType substitute for a missing CIDFont with pdfwrite
<br>

<br>
    The changes to better handle PCL fonts accidentally left out an important
<br>
    test which could lead to a seg fault if a PDF file was processed which
<br>
    contained a reference to a non-embedded CIDFont, and we had defined a
<br>
    TrueType substitute to use instead.
<br>

<br>
    This restores the old behaviour of exiting with an error.
<br>

<br>
    Bug692320 should no longer seg fault with cluster testing.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-13 11:46:53 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=18a5170163b690647f70d58e4c9d75873cd1324b">18a5170163b690647f70d58e4c9d75873cd1324b</a>
<blockquote>
<p>
    Bug 690779: Provide fallback for missing CIDFonts in PDF
<br>

<br>
    Rather than throw an error when a PDF references a CIDFont that is not
<br>
    available, we'll now fall back to using DroidSansFallback.ttf, by default.
<br>

<br>
    This gives a reasonable analogue of other PDF consumers' behavior.
<br>

<br>
    Results in extensive differences in Bug692320.pdf because we now complete
<br>
    content streams, and image the text they contain, rather than skipping
<br>
    them. NOTE: this does not make the output from Bug692320.pdf &quot;correct&quot;, but
<br>
    arguably makes it &quot;less wrong&quot;.
<br>

<br>
    Other than that, no differences.
<br>

<br>
gs/DroidSansFallback.NOTICE
<br>
gs/Resource/CIDFSubst/DroidSansFallback.ttf
<br>
gs/Resource/CIDFont/ArtifexBullet
<br>
gs/Resource/Init/gs_ciddc.ps
<br>
gs/Resource/Init/gs_cidfm.ps
<br>
gs/Resource/Init/gs_init.ps
<br>
gs/Resource/Init/gs_ttf.ps
<br>
gs/Resource/Init/pdf_font.ps
<br>
gs/Resource/Init/xlatmap
<br>
gs/doc/Use.htm
<br>
gs/psi/psromfs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 15:38:32 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=405d67e60c1b943f4faeed728bace0f2103a7ec8">405d67e60c1b943f4faeed728bace0f2103a7ec8</a>
<blockquote>
<p>
    Bug 692736: fix logic contolling FAPI's bitmap production.
<br>

<br>
    Non-marking operations (such as stringwidth) sometimes require FAPI to produce
<br>
    a bitmap. We were taking the &quot;slegdehammer&quot; approach of always producing a
<br>
    bitmap, and throwing it away when not required.
<br>

<br>
    This commit fixes the decision on whether we should produce a bitmap.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-12 14:29:29 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=77f2e7c475bdf79e478d59c878d6ae30c53c5a17">77f2e7c475bdf79e478d59c878d6ae30c53c5a17</a>
<blockquote>
<p>
    Add missing dependencies for gdevicov.c.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-10 16:41:06 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70b1623bf91ea2a75da69f40caefb7efa56f49d9">70b1623bf91ea2a75da69f40caefb7efa56f49d9</a>
<blockquote>
<p>
    Add ink coverage device: inkconv.  Resolves Bug 692665.
<br>

<br>
    Add the inkcov device, written by sebastian.kapfer@physik.uni-erlangen.de.
<br>
    This dummy device produce output listing the percentage of pixels
<br>
    containing c, m, y, and k ink.
<br>

<br>
    No cluster differences expected since this device isn't tested by the
<br>
    cluster.
<br>

<br>
gs/base/configure.ac
<br>
gs/base/gdevicov.c
<br>
gs/base/lib.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/macosx.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-09 10:01:57 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9a2555a91fbc2fa73a6e2f8f4035b58b4ff5ae57">9a2555a91fbc2fa73a6e2f8f4035b58b4ff5ae57</a>
<blockquote>
<p>
    Bug 692686: use same scan conversion settings for &quot;clip&quot; as for &quot;fill&quot;
<br>

<br>
    The PDF job in question renders most of its text as simple text render mode 0,
<br>
    but about three glyphs are done using tr mode 7, and showing an image through
<br>
    the resulting clip.
<br>

<br>
    The problem is that when we image a glyph, we use fill_adjust 0 (rather than the
<br>
    default of ~0.3), otherwise glyphs are overly bold. When using one of the clip
<br>
    text modes in PDF, however, we still used the default fill_adjust, which
<br>
    resulted in an overly &quot;bold&quot; clip path.
<br>

<br>
    This causes a number of cluster differences: several are progressions, the
<br>
    others are pixel differences - mostly cases where resolution and/or zoom level
<br>
    affect whether we precisely match Acrobat.
<br>

<br>
gs/Resource/Init/pdf_ops.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-09 10:07:33 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5359a2d0bf10568102f85d797a91c0595518ae23">5359a2d0bf10568102f85d797a91c0595518ae23</a>
<blockquote>
<p>
    Do not use hexadecimal names for type42 Charstrings and Encoding
<br>

<br>
    Bug #692711 - When creating CharStrings and Encoding for an embedded
<br>
    TrueType font, to create a type 42 font, we need to supply numeric names
<br>
    according to the spec. We were doing this using hex values which has the
<br>
    unfortunate effect of creating 5 of the names as /A to /F.
<br>

<br>
    These are not numeric! In fact they duplicate 5 of the Ghostscript
<br>
    standard names. While this is not actually a problem when rendering, it
<br>
    *is* a problem for ps2write because it uses the names to rebuild the font
<br>
    for embedding. If the name is one of the standard names then it leads
<br>
    (through complex routes) to us creating a CMAP subtable where the GID is
<br>
    not correct, we use the value of the stadnard name instead of the correct
<br>
    numeric value.
<br>

<br>
    By using decimal numbers we avoid this problem.
<br>

<br>
    This change exhibits progressions in the regression files Bug688421.pdf
<br>
    (which is now 100% correct with the earlier fixes for composite glyphs)
<br>
    and Bug691121.pdf
<br>

<br>
gs/Resource/Init/gs_ttf.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-09 09:43:53 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db2cf48ecc2e287d2685c4b43fa7bcaa0fde1721">db2cf48ecc2e287d2685c4b43fa7bcaa0fde1721</a>
<blockquote>
<p>
    Bug 692730: fix confusion in stream opening for FAPI/FT
<br>

<br>
    When I wrote the custom stream code so that Freetype uses the Ghostscript
<br>
    stream functions, I misunderstood a couple of aspects of the Ghostscript
<br>
    stream opening code, especially where paths did not include a Postscript
<br>
    device.
<br>

<br>
    I believe this resolves that.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-08 21:35:46 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ac67fdf4beb52a8f804b146a13af208004c6f88">8ac67fdf4beb52a8f804b146a13af208004c6f88</a>
<blockquote>
<p>
    Fix for accidental changes in ghostscript.vcproj during previous commit.
<br>

<br>
    Problem was caused by the fact that I add added a file that I wanted in the
<br>
    project display but I am running a newer version of visual studio compared to
<br>
    what we maintain in the trunk.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-06 12:52:31 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=592047c6c30012f86ada508870554c9eff9a749a">592047c6c30012f86ada508870554c9eff9a749a</a>
<blockquote>
<p>
    Allow use of unmanaged color transformations for source DeviceXXX colors
<br>

<br>
    This introduces a CMM that can hand back &quot;links&quot; to gs where the
<br>
    links in this case contain pointers to the simple procedures that
<br>
    transform between the various color spaces.  This CMM (or non-CMM) can
<br>
    be invoked when we encounter DeviceRGB, DeviceGray or DeviceCMYK color
<br>
    spaces by use of the parameter -dUseFastColor.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevxcf.c
<br>
gs/base/gscms.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_nocm.c
<br>
gs/base/gxblend.c
<br>
gs/base/gxblend.h
<br>
gs/base/gxcmap.c
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gxipixel.c
<br>
gs/base/gxiscale.c
<br>
gs/base/lib.mak
<br>
gs/ghostscript.vcproj
<br>
xps/xpsgradient.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-08 15:18:16 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ab94321918a4d4575435361e685836016ee9368">2ab94321918a4d4575435361e685836016ee9368</a>
<blockquote>
<p>
    Removed cgm devices.  Fixed Bug 692401.
<br>

<br>
    No cluster differences expected, since the cluster doesn't test any of the cgm devices.
<br>

<br>
gs/base/configure.ac
<br>
gs/base/devs.mak
<br>
gs/base/gdevcgm.c
<br>
gs/base/gdevcgml.c
<br>
gs/base/gdevcgml.h
<br>
gs/base/gdevcgmx.h
<br>
gs/doc/Develop.htm
<br>
gs/doc/Drivers.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-07 15:32:14 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f52122736b932c511a02b095d056cfb3a19a7fa8">f52122736b932c511a02b095d056cfb3a19a7fa8</a>
<blockquote>
<p>
    Bug 692641: Misc build fixes for static systems
<br>

<br>
    Patch contributed by Alan Hourihane ( alanh@fairlite.co.uk ) to improve
<br>
    compatibility with system which need static linking. So disable dynmic devices
<br>
    unless they explicitly enabled, rename our internal SHA functions so they don't
<br>
    clash when libssl is linked in.
<br>

<br>
    Finally, a fix so configure doesn't assume pkgconfig availability (although it
<br>
    is widely available, it is not &quot;standard&quot;).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
gs/base/sha2.c
<br>
gs/base/sha2.h
<br>
gs/base/ssha2.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-06 13:38:01 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3d64dd5fa86827f374ded02b220cf9bddbc852c7">3d64dd5fa86827f374ded02b220cf9bddbc852c7</a>
<blockquote>
<p>
    Another parital fix for Bug 692434.
<br>

<br>
gs/base/gdevddrw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-06 13:34:47 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0b21c79855e8f50a218a478bf9fc9d10e20c4db4">0b21c79855e8f50a218a478bf9fc9d10e20c4db4</a>
<blockquote>
<p>
    Partial fix for Bug 692434, removed some of the memcmp() of structures.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevpdfg.c
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdts.c
<br>
gs/base/gdevprn.c
<br>
gs/base/gsequivc.h
<br>
gs/base/gsfont.c
<br>
gs/base/gsmatrix.c
<br>
gs/base/gsmatrix.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-06 19:20:28 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9335aeee4aab3e7454c827fc3a327437dec85637">9335aeee4aab3e7454c827fc3a327437dec85637</a>
<blockquote>
<p>
    Bug 692526: Partial fix (clipping path initialisation)
<br>

<br>
    Ghostscript paths have a 'local_segments' structure inside them
<br>
    enabling them to be allocated entirely on the stack. Clipping
<br>
    paths contain paths, so have the same structure. When a new
<br>
    clipping path is initialised on the stack, it can share the
<br>
    segments from an existing clipping path.
<br>

<br>
    If this existing clipping path is on the stack, and 'goes away'
<br>
    (due to garbage collection etc) the new clipping path can be left
<br>
    holding pointers to invalid data. As such there is code in the gs
<br>
    lib to detect that a clipping path is being asked to share
<br>
    segments from another stack allocated clipping path, and to refuse.
<br>

<br>
    The file referenced in the bug runs into exactly this situation.
<br>
    It is however entirely safe, as the lifespan of the second clipping
<br>
    path is 'nested' safely within the lifespan of the original.
<br>

<br>
    I have therefore introduced another function that allows the
<br>
    initialisation to be done as long as the caller guarantees that it
<br>
    is safely nested.
<br>

<br>
    This is sufficient to avoid the warning messages, and the file now
<br>
    runs to completion successfully.
<br>

<br>
    So why is this only a partial fix?
<br>

<br>
    The original code refuses to initialise the clip path, and returns
<br>
    a (negative) error code. This is caught by the calling code and
<br>
    various things are not done. Later, a compositor comes to be shut
<br>
    down, and pdf14_compose_group is called.
<br>

<br>
    This finds that maskbuf != NULL, but maskbuf-&gt;transfer_fn == NULL.
<br>
    This leads to a SEGV.
<br>

<br>
    Something (presumably in the cleanup code that should be handling
<br>
    the error) is leaving the compositor in an unexpected state however.
<br>

<br>
    The code change here stops the error return code, so the cleanup code
<br>
    is not called, and the regression is fixed. It leaves the broken
<br>
    cleanup code in there though - I'll leave the bug open until this is
<br>
    fixed.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxcpath.c
<br>
gs/base/gxfill.c
<br>
gs/base/gxpath.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-05 11:36:19 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a7b85f9823b1a1dea1530716a3e2fb3dd2f75c9c">a7b85f9823b1a1dea1530716a3e2fb3dd2f75c9c</a>
<blockquote>
<p>
    Fix for bug 692567.  Knockout support in pdf14_copy_alpha
<br>

<br>
    During a combined stroke and fill we push a knockout group for the stroke.  This was not being handled properly in the pdf14 device's copy_alpha operation.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 10:19:42 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2cde54397abe935ff96300a4ac2588b40ad68d2b">2cde54397abe935ff96300a4ac2588b40ad68d2b</a>
<blockquote>
<p>
    Embedding of device ICC profile into JPEG output device
<br>

<br>
    Addresses bug 692186.  This includes the fix to make sure the profile
<br>
    is not used for pdfwrite image output.
<br>

<br>
gs/base/gdevjpeg.c
<br>
gs/base/gdevpsdu.c
<br>
gs/base/sdct.h
<br>
gs/base/sdcte.c
<br>
gs/psi/zfdcte.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-04 20:58:58 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=224672fa4af11c4723c38ea11b4d51503a96f609">224672fa4af11c4723c38ea11b4d51503a96f609</a>
<blockquote>
<p>
    Fix for bug 692717.  Initialization of ICC profile data range in pdf14_put_image
<br>

<br>
    The ICC profile that is used to specify the PDF14 image data was not having its
<br>
    range values properly initialized.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-12-03 22:33:04 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fd7c24da5b84f99605a38108c8cc0bfae813fbf4">fd7c24da5b84f99605a38108c8cc0bfae813fbf4</a>
<blockquote>
<p>
    Fix for bug 692692. Anti-alias with pdf14 device.
<br>

<br>
    This fixes several bugs that were present in the pdf14 copy alpha
<br>
    procedure.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-29 20:33:16 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d20a6cb9f12682804af2e74ec5d6bb75ca9d5410">d20a6cb9f12682804af2e74ec5d6bb75ca9d5410</a>
<blockquote>
<p>
    Bug 691267: jbig2dec needs to check malloc() return values
<br>

<br>
    This fix checks all return paths to ensure that the appropriate error
<br>
    is returned on failure from any malloc() call within jbig2dec.
<br>

<br>
gs/base/sjbig2.c
<br>
gs/jbig2dec/jbig2.c
<br>
gs/jbig2dec/jbig2_arith.c
<br>
gs/jbig2dec/jbig2_arith_iaid.c
<br>
gs/jbig2dec/jbig2_arith_int.c
<br>
gs/jbig2dec/jbig2_generic.c
<br>
gs/jbig2dec/jbig2_halftone.c
<br>
gs/jbig2dec/jbig2_huffman.c
<br>
gs/jbig2dec/jbig2_image.c
<br>
gs/jbig2dec/jbig2_metadata.c
<br>
gs/jbig2dec/jbig2_page.c
<br>
gs/jbig2dec/jbig2_refinement.c
<br>
gs/jbig2dec/jbig2_segment.c
<br>
gs/jbig2dec/jbig2_symbol_dict.c
<br>
gs/jbig2dec/jbig2_text.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-28 10:06:39 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79de8a34f93165b5839f9fcbd75be9ca0048fd21">79de8a34f93165b5839f9fcbd75be9ca0048fd21</a>
<blockquote>
<p>
    Bug 692694: unaligned memory access in image ht code.
<br>

<br>
    When image data does not land exactly on the necessary alignment for SSE2
<br>
    optimisations, we handle the &quot;left over&quot; samples on their own, before the
<br>
    suitably aligned samples. When we come to copy the halftoned data to the
<br>
    target device, we first handle the &quot;left over&quot; samples, and then the
<br>
    SSE2 aligned samples in separate calls to copy_mono/copy_plane. The &quot;left
<br>
    over&quot; samples never number more than 16.
<br>

<br>
    Previously, after dealing with the non-SSE2 aligned samples, we'd increment
<br>
    the samples pointer two bytes (to skip the up to 16 bits of unaligned samples).
<br>
    The problem is, that causes us to 32 bits at time, on 16 bit aligned boundaries,
<br>
    which on SPARC causes a bus error.
<br>

<br>
    We now use the copy_mono/copy_plane API parameter which gives the function an
<br>
    offset into the samples which is should use before starting the operation.
<br>
    Implementations of copy_mono/copy_plane must handle non-aligned samples
<br>
    gracefully anyway.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-27 13:23:46 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a39e4831ba0d74d742b365f3b3b1af192731303c">a39e4831ba0d74d742b365f3b3b1af192731303c</a>
<blockquote>
<p>
    Bug 692684: stop gcc optimization bug.
<br>

<br>
    Divide gs_main_init2() into two functions to work around a bug in
<br>
    gcc 4.5.1 with -O2 option. The bug caused gcc to drop 2nd
<br>
    assignment to i_ctx_p and resulted in SEGV error later on.
<br>

<br>
gs/psi/imain.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-25 17:37:39 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa65667a25048b730e629bd4d8544d621cae2810">fa65667a25048b730e629bd4d8544d621cae2810</a>
<blockquote>
<p>
    Clean-up txtwrite device.
<br>

<br>
    Make debug tracing use a special flag instead of DEBUG.
<br>
    Fix two cases of '=' used instead of '=='.
<br>
    Fix all gcc warnings.
<br>
    Add proper dependencies to the makefile.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-25 12:24:11 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e46cb584f6ab876828bb5c7943881cfbbc549e43">e46cb584f6ab876828bb5c7943881cfbbc549e43</a>
<blockquote>
<p>
    Add missing txtwrite device to autoconf-based build.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-25 15:50:42 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=979f2182372d924ce69f8d904e87173107209b6b">979f2182372d924ce69f8d904e87173107209b6b</a>
<blockquote>
<p>
    ps2write - fix conversion of escaped string to Hex string
<br>

<br>
    This is used when Indexed spac es are encountered, the lookup table is
<br>
    created as an escaped string, but written to the output as a Hex string.
<br>
    The conversion was not catering for the 'special' escaped characters,
<br>
    \r, \n, \b, \t and \f
<br>

<br>
    This results in a number of differences, casreful comparison shows them all
<br>
    to be progressions:
<br>

<br>
    Bug6901014_launch_leaflet.pdf
<br>
    annot-fit-bbox-in-rect.pdf
<br>
    0.pdf
<br>
    01_001.pdf
<br>
    148-11.ps
<br>
    1_2001.pdf
<br>
    Altona.Page_3.2002-09-27.pdf
<br>
    Altona_Technical_1v1_x3.pdf
<br>
    Bug687840.pdf
<br>
    Bug689083.pdf
<br>
    Bug689189.pdf
<br>
    Bug689362.pdf
<br>
    Bug689748.pdf
<br>
    Bug690109.pdf
<br>
    Bug690348.pdf
<br>
    Bug690395.pdf
<br>
    Bug690489.pdf
<br>
    Bug690559.pdf
<br>
    Bug691045.pdf
<br>
    Bug691228.pdf
<br>
    Bug691335.eps
<br>
    Bug691734.ps
<br>
    Bug691740.pdf
<br>
    Bug691816.pdf
<br>
    Bug691941.pdf
<br>
    Bug692365.pdf
<br>
    H00216q.pdf
<br>
    MagicEye.pdf
<br>
    NECPNTD.pdf
<br>
    Openhuis_pdf_zw.pdf
<br>
    PixelisAd.pdf
<br>
    RealCities.pdf
<br>
    S2_Digitalproof-Forum_x3k.pdf
<br>
    adesso2.pdf
<br>
    bulletin.pdf
<br>
    dave.pdf
<br>
    file.pdf
<br>
    file2.pdf
<br>
    japan.ps
<br>
    korea.ps
<br>
    messenger.pdf
<br>
    messenger16.pdf
<br>
    p2b-100.pdf
<br>
    CATX0249.pdf
<br>
    CATX1028.pdf
<br>
    CATX1421.pdf
<br>
    CATX1593.pdf
<br>
    CATX2050.pdf
<br>
    CATX2181.pdf
<br>
    CATX2447.pdf
<br>
    CATX2905.pdf
<br>
    CATX2937.pdf
<br>
    CATX3740.pdf
<br>
    CATX3783.pdf
<br>
    CATX4574.pdf
<br>
    CATX4879.pdf
<br>
    CATX4998.pdf
<br>
    CATX5365.pdf
<br>
    CATX6460.pdf
<br>
    CATX7581.pdf
<br>
    CATX7762.pdf
<br>
    CATX8839.pdf
<br>
    CATX9297.pdf
<br>
    IA3Z0248.pdf
<br>
    IA3Z0440.pdf
<br>
    IA3Z1148.pdf
<br>
    IA3Z1284.pdf
<br>
    IA3Z3096.pdf
<br>
    IA3Z3100.pdf
<br>
    IA3Z3298.pdf
<br>
    IA3Z3881.pdf
<br>
    IA3Z4393.pdf
<br>
    IA3Z4925.pdf
<br>

<br>
gs/base/gdevpdfu.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-25 15:27:03 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3f99f9c568fa7a93ce4ca5acdc0c8fed6cf505bd">3f99f9c568fa7a93ce4ca5acdc0c8fed6cf505bd</a>
<blockquote>
<p>
    Add a &quot;dummy&quot; call to validate UFST font.
<br>

<br>
    It turns out that UFST's CGIFfont() call does little or no validation of the
<br>
    font for which it is creating an object. So, add a &quot;dummy&quot; call to
<br>
    CGIFfont_metrics() which will return an error if, for example, a request
<br>
    for a font index which doesn't exist in the current FCO is made.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/fapiufst.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 20:31:09 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83788c03875545d620e6885e4f5ab4af08f8f55b">83788c03875545d620e6885e4f5ab4af08f8f55b</a>
<blockquote>
<p>
    Bug 692666: grid fit images.
<br>

<br>
    The file in bug 692666 draws many thin horizontal rectangles, then draws
<br>
    1 pixel high images on top of each one. Current gs 'thickens' the
<br>
    rectangles (due to the 'any part of a pixel' rule), and they overwrite
<br>
    the previously drawn image - hence it appears black.
<br>

<br>
    The problem is thus that the images are not similarly stretched.
<br>

<br>
    Images are not supposed to use the &quot;any part of a pixel&quot; rule, where
<br>
    vectors are, but the fact this file works in acrobat would seem to
<br>
    contradict that. Instead we try a simple fix; if we are using the
<br>
    'any part of a pixel' file (i.e. fill_adjust != 0), and we meet an
<br>
    ImageMask image that is either 1 pixel high, or 1 pixel wide, then we
<br>
    ensure that it is 'stretched' to completely fill any pixels that it
<br>
    touches.
<br>

<br>
    We specifically do NOT perform this stretching if we are in the process
<br>
    of rendering a glyph.
<br>

<br>
    This produces various rendering diffs, none that offensive.
<br>

<br>
gs/base/gxipixel.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-23 15:36:11 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4298afc461ec583637d5ce2b41facc40403867d5">4298afc461ec583637d5ce2b41facc40403867d5</a>
<blockquote>
<p>
    Correct CIDSet and CIDToGIDMap generation when LastChar &gt; number of glyphs
<br>

<br>
    More CIDSet work. WHen LastChar is &gt; number of glyphs in font (already a subset)
<br>
    we were setting the length of the CIDToGIDMap and the CIDSet to the LastChar
<br>
    value. This should be LastChar + 1 to allow for the /.notdef.
<br>

<br>
    No differences expected, this only happens when generating PDF/A which is not tested.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-22 17:58:47 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7cf40e90d53c0a86b05561985608d3d292025a00">7cf40e90d53c0a86b05561985608d3d292025a00</a>
<blockquote>
<p>
    Bug 692681: handle invalid Encoding arrays in Type 3 fonts
<br>

<br>
    Distiller quietly converts the contents the contents of a Type 3 font's encoding
<br>
    array to names (at least if they are integer objects), whilst CPSI throws an
<br>
    error.
<br>

<br>
    We will now do as Distiller and convert to name objects, unless we are in &quot;CPSI
<br>
    compatibility mode&quot;, when we will throw an error.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/zbfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-19 00:02:59 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=365dd132567f8007176ca48d36741b6c98d4a514">365dd132567f8007176ca48d36741b6c98d4a514</a>
<blockquote>
<p>
    Bug 692512: fts_10xx.xps shows white lines in pattern.
<br>

<br>
    The matrix used for the pattern is skewed; this was enough to avoid
<br>
    my previous fix being used. Amend the tests to cope with the skewed
<br>
    case too. We may need to cope with 90 degree rotated/skewed cases too.
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-18 23:59:14 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6fc9006fb9e381c42308d7d7967fdcac5f31e26d">6fc9006fb9e381c42308d7d7967fdcac5f31e26d</a>
<blockquote>
<p>
    Bug 692512: Disable stroke adjust in xps to avoid gradient issues.
<br>

<br>
    The fts_1003.xps file has a series of parallel lines (as separate
<br>
    strokes) to make up a gradient. Having stroke adjust enabled
<br>
    causes gaps (white lines) to appear between them.
<br>

<br>
    Tests show that simply disabling stroke adjust all the time gives
<br>
    nasty effects (thickening of lines). We therefore disable it just
<br>
    for patterns here. This is enough to fix the current bug.
<br>

<br>
xps/xpstile.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-22 08:15:27 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5cce07051c3616c250a960ae48759a1c1af2fb47">5cce07051c3616c250a960ae48759a1c1af2fb47</a>
<blockquote>
<p>
    ps2write - only execute setpagedevice if /PageSize changes
<br>

<br>
    Bug #692691
<br>

<br>
    The ps2write output (being based on pdfwrite) always emits a /MediaBox as
<br>
    this is a required key for PDF. Previously the PostScript prolog would
<br>
    always emit a setpagedevice using the MediaBox as the PageSize entry.
<br>

<br>
    This caused a problem for CUPS as it inserts PPD code into the ps2write
<br>
    output, and if this enables Duplex then each invocation of setpagedevice
<br>
    will flush the accumulated output, which defeats Duplex.
<br>

<br>
    The prolog code now tests the current page size and only executes
<br>
    setpagedevice if the newly requested size differs from the current size. In
<br>
    a simple attempt to ignore small differences we round the current and requested
<br>
    media sizes, and convert to integers before comparison.
<br>

<br>
    No differences expected in regression tests
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 18:56:17 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a14c04c93138fab042063999af3610ea7b9852a">8a14c04c93138fab042063999af3610ea7b9852a</a>
<blockquote>
<p>
    Revisions for Freetype custom stream use.
<br>

<br>
    There were some subtleties of FT's custom stream use that I misunderstood:
<br>
    unused entries in the structures must be null/zero, and the stream length
<br>
    is required data.
<br>

<br>
    Also, reorganise the code so building the stream object is contained in
<br>
    a dedicated function.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 11:10:22 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc8350604816f8314cb8c6355bfb9335feab5561">fc8350604816f8314cb8c6355bfb9335feab5561</a>
<blockquote>
<p>
    Fix one of the casts from b6cd8ce7351fc7bb759b5b7dcea7e74b2abb3850
<br>

<br>
    The cast in the calls to hpgl_args_add_int() in pcl/pgconfig.c:hpgl_IR()
<br>
    was wrong.  The entire second argument needed to be cast to int32, not
<br>
    just the results of the division.  This caused regressions in a bunch
<br>
    of the nightly/cluster test files, e.g.:
<br>

<br>
      main/obj/pcl6 -sDEVICE=ppmraw -r75 -o test.ppm fts.1930
<br>

<br>
pcl/pgconfig.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 15:38:07 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=590dcb6b2df9f4722b4f78607d35bd9c374624b1">590dcb6b2df9f4722b4f78607d35bd9c374624b1</a>
<blockquote>
<p>
    Bug 692672: slightly revise symbolic fonts in PDFs
<br>

<br>
    This is a slightly better of approximation of what Acrobat does in the out
<br>
    of spec condition when a font has both an encoding in the font object and
<br>
    the symbolic flag set in the descriptor's flags entry.
<br>

<br>
    If the flags say symbolic, *and* the font contains a symbol cmap table,
<br>
    ignore Encoding if there is one, treat as symbolic.
<br>

<br>
    If the flags say symbolic, and the font doesn't have a symbol cmap, but we do
<br>
    have an Encoding, treat it as non-symbolic if we don't have an Encoding, try
<br>
    the MacRoman cmap table.
<br>

<br>
    Finally, if none of that works, remove the Encoding, and treat it as
<br>
    non-symbolic. This part is the biggest guess at Acrobat's behavior.
<br>

<br>
    The various tests used in investigating what Acrobat does are attached to the
<br>
    bug (692672).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/Resource/Init/gs_ttf.ps
<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 08:55:17 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bd108fc1a4b52c885a8e26362f346c0cd2fb6670">bd108fc1a4b52c885a8e26362f346c0cd2fb6670</a>
<blockquote>
<p>
    Update to Commit 63a5fe390d2534f6b48e2dd58f46ed9941582e83
<br>

<br>
    This added detection of URW font names and their replacement with base 14
<br>
    font names, when the fonts are not embedded. One of the Base 14 names
<br>
    was not correct.
<br>

<br>
gs/base/gdevpdtb.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 08:47:51 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e2215693fe25a78865632b6bbbd52a3b4f2ab95c">e2215693fe25a78865632b6bbbd52a3b4f2ab95c</a>
<blockquote>
<p>
    Fix some minor return code inconsistencies.
<br>

<br>
    Bug #692682, spotted by Alex, fix up a couple of inconsistent return values.
<br>

<br>
gs/base/gdevpdfo.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 08:12:45 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cd8f3973ac735480fcd02de9e0214de80ea79e94">cd8f3973ac735480fcd02de9e0214de80ea79e94</a>
<blockquote>
<p>
    ps2write - fix handling of format 4 CMAP subtables in TrueType fonts
<br>

<br>
    Bug #692687. Format 4 CMAP subtables are intended for use where the range
<br>
    of glyphs are not continuous, but the code for building a CharStrings
<br>
    dictionary (to handle the font as type 42) was treating them as if they
<br>
    were continuous, and starting from 0.
<br>

<br>
    This led to the CharStrings dictionary, which maps glyph names to TrueType
<br>
    Glyph IDS, being built incorrectly and incorrect, mostly /.notdef, glyphs
<br>
    being used.
<br>

<br>
    Regression testing shows no regressions and the following test files exhibit
<br>
    progressions:
<br>
    Bug6901014_Additional_testcase.pdf
<br>
    Bug6901014_SMP_Warwick_14.pdf
<br>
    Altona.Page_3.2002-09-27.pdf
<br>
    Altona_Technical_1v1_x3.pdf
<br>
    Bug687828.pdf
<br>
    Bug688421.pdf
<br>
    Bug688946.pdf
<br>
    Bug689014.pdf
<br>
    Bug689754.ps
<br>
    Bug690269.ps
<br>
    Bug691116.pdf
<br>
    Bug691733.ps
<br>
    Faktura.pdf
<br>
    altona_technical_1v2_x3.pdf
<br>
    test_multipage_prob.pdf
<br>
    type42_glyph_index.ps
<br>
    CATX4030.pdf
<br>
    CATX9201.pdf
<br>
    IA3Z4488.pdf
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-21 01:26:01 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ae0f7a3be733a04293a757f6ae395391339b78f5">ae0f7a3be733a04293a757f6ae395391339b78f5</a>
<blockquote>
<p>
    Finish interface to OpenJpeg library.
<br>

<br>
    This version handles all out tests correctly, although all files
<br>
    show minor differences in color values. The build process has
<br>
    not been changed and continues to build Jasper by default.
<br>

<br>
gs/base/sjpx_openjpeg.c
<br>
gs/base/sjpx_openjpeg.h
<br>
gs/openjpeg/libopenjpeg/image.c
<br>
gs/openjpeg/libopenjpeg/jp2.c
<br>
gs/openjpeg/libopenjpeg/jp2.h
<br>
gs/openjpeg/libopenjpeg/openjpeg.c
<br>
gs/openjpeg/libopenjpeg/openjpeg.h
<br>
gs/openjpeg/libopenjpeg/tcd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-20 10:29:47 +0000
</strong>
<br>Shailesh Mistry &lt;shailesh.mistry@hotmail.co.uk&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f7f2daea2778213306a3edfe87a8f72af494427a">f7f2daea2778213306a3edfe87a8f72af494427a</a>
<blockquote>
<p>
    Fix 691958: check for an image before marking a page complete.
<br>
    Also update return code to handle errors correctly.
<br>

<br>
gs/jbig2dec/jbig2_page.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-20 10:43:51 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44049d64ebd14bd76f94d87cd0fd55ea725f7510">44049d64ebd14bd76f94d87cd0fd55ea725f7510</a>
<blockquote>
<p>
    Update ownership.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
doc/who_owns_what.txt
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-18 14:42:40 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=38cb1fd0cb7f38e6d7cf4b4fe06809865ccd0fff">38cb1fd0cb7f38e6d7cf4b4fe06809865ccd0fff</a>
<blockquote>
<p>
    Fix 692559, integrate Josef Hinteregger's patch to detect a font
<br>
    directory without fonts and continue gracefully.
<br>

<br>
pl/pllfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-18 14:09:04 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3457a11ec419dcce4cd9e444674967b4dd5e8740">3457a11ec419dcce4cd9e444674967b4dd5e8740</a>
<blockquote>
<p>
    The indeterminism in the test file TIFFOffsetA4PL.pcl was caused by
<br>
    the new custom page size implementation.  The new code updates the
<br>
    current page structure instead of creating a new one - later the page
<br>
    size logic doesn't recognize a page size change and doesn't clear the
<br>
    page (erasepage) properly.  The custom page size implementation is
<br>
    less than ideal, but the simple fix here is to just erase the page
<br>
    unconditionally when the custom page size command is received.  There
<br>
    was no bug reported for this problem.
<br>

<br>
pcl/pcpage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 17:59:41 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f482ab7c57e8a20f760be5b329bee528a66e7927">f482ab7c57e8a20f760be5b329bee528a66e7927</a>
<blockquote>
<p>
    Capitalize a symbolic constant.
<br>

<br>
pcl/pcpage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 17:44:49 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7b9a1eeaa1fce33270957e302e09189c6202f1a5">7b9a1eeaa1fce33270957e302e09189c6202f1a5</a>
<blockquote>
<p>
    Fix 692677, in passthrough mode we initialize the PCL interpreter with
<br>
    the paper size current in PXL's state.  Previously the there could be
<br>
    a mismatch in paper size which could lead to, for example, an A4
<br>
    memory buffer erased as if it were LETTER, this left a small strip at
<br>
    the bottom of the page uninitialized.
<br>

<br>
pxl/pxpthr.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 17:43:05 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fdb03e00c09a32d23a831cecfea9f4b1955b9b7a">fdb03e00c09a32d23a831cecfea9f4b1955b9b7a</a>
<blockquote>
<p>
    A new interface procedure to allow the languages to invoke the PJL parser.
<br>

<br>
pl/pjparsei.c
<br>
pl/pjtop.c
<br>
pl/pjtop.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 17:39:28 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc3aa53aafc7b73ae9703d253ae4040658e22b74">fc3aa53aafc7b73ae9703d253ae4040658e22b74</a>
<blockquote>
<p>
    The &quot;wide a4&quot; state variable could be used unitialized when using
<br>
    custom paper sizes.
<br>

<br>
pcl/pcpage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-15 11:26:36 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=27806596e3c2820064788bba903cc569ce89f1e7">27806596e3c2820064788bba903cc569ce89f1e7</a>
<blockquote>
<p>
    Removal of WTS from code.
<br>

<br>
    Plan is to suggest the use of screens generated with gs\toolbin\halftone\gen_ordered
<br>

<br>
gs/base/gdevdflt.c
<br>
gs/base/gp.h
<br>
gs/base/gsdcolor.h
<br>
gs/base/gsdps1.c
<br>
gs/base/gsht.c
<br>
gs/base/gsht1.c
<br>
gs/base/gshtscr.c
<br>
gs/base/gslibctx.h
<br>
gs/base/gswts.c
<br>
gs/base/gswts.h
<br>
gs/base/gxbitfmt.h
<br>
gs/base/gxclread.c
<br>
gs/base/gxdcolor.c
<br>
gs/base/gxdcolor.h
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevndi.c
<br>
gs/base/gxdht.h
<br>
gs/base/gxdhtserial.c
<br>
gs/base/gxht.h
<br>
gs/base/gxshade.c
<br>
gs/base/gxwts.c
<br>
gs/base/gxwts.h
<br>
gs/base/lib.mak
<br>
gs/doc/Language.htm
<br>
gs/ghostscript.vcproj
<br>
gs/psi/zusparam.c
<br>
pl/plsrgb.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 12:05:24 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aef9ee68391088d1c7e371a6f1e3fa4092688eae">aef9ee68391088d1c7e371a6f1e3fa4092688eae</a>
<blockquote>
<p>
    Revert &quot;Embedding of device ICC profile into JPEG output device&quot;
<br>

<br>
    This reverts commit 23a2b8e765a4d56cfeacddaaaa497e817bec499e.
<br>
    Need to see how this screws up pdfwrite.
<br>

<br>
gs/base/gdevjpeg.c
<br>
gs/base/sdct.h
<br>
gs/base/sdcte.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-17 10:19:42 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=23a2b8e765a4d56cfeacddaaaa497e817bec499e">23a2b8e765a4d56cfeacddaaaa497e817bec499e</a>
<blockquote>
<p>
    Embedding of device ICC profile into JPEG output device
<br>

<br>
    Addresses bug 692186.
<br>

<br>
gs/base/gdevjpeg.c
<br>
gs/base/sdct.h
<br>
gs/base/sdcte.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-16 10:32:30 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6fbdd32889dfa9d318170e63245755057bb8b401">6fbdd32889dfa9d318170e63245755057bb8b401</a>
<blockquote>
<p>
    Save ICC profile in TIFF and PNG device output.
<br>

<br>
    This addresses Bug 692183.  The patch for the TIFF case was not
<br>
    quite sufficient due to changes in the device profile structure,
<br>
    issues regarding the separations from the tiffsep device, and
<br>
    how we handle the case when the output profile is CIELAB.
<br>

<br>
gs/base/gdevpng.c
<br>
gs/base/gdevtifs.c
<br>
gs/base/gdevtsep.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-15 18:02:06 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a088c1913fae07ea8016ef29853610741e16851">3a088c1913fae07ea8016ef29853610741e16851</a>
<blockquote>
<p>
    Bug 692683: revise FAPI/FT code so it uses the GS file handling
<br>

<br>
    When the Freetype interface was called to create a font object with a path
<br>
    to the font file, it previously simply passed the path into Freetype, and
<br>
    left it to handle the file details.
<br>

<br>
    This revision changes that so that we build a custom Freetype stream object
<br>
    which uses the Ghostscript file API to access the data. We generally prefer
<br>
    to operate that way anyway, and (more importantly) this allows FT &quot;direct&quot;
<br>
    acccess to font files stored in our ROM filesystem.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-15 17:25:27 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=445f78bf167f27a5358bff72d314d6ecc83a5384">445f78bf167f27a5358bff72d314d6ecc83a5384</a>
<blockquote>
<p>
    Add a wildcard to CIDFont mkromfs parameter
<br>

<br>
    To correctly including the _contents_ of the Resource/CIDFont directory
<br>
    when building the rom filesystem, we need a wildcardm, so it ends up
<br>
    as &quot;Resource/CIDFont/*&quot;
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/psromfs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 22:37:28 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f0b1c2aefaed5ba17fea69848c0b5489b541c4cf">f0b1c2aefaed5ba17fea69848c0b5489b541c4cf</a>
<blockquote>
<p>
    Clarification of the gen_ordered settings and README.
<br>

<br>
    The current default value for -s (size of the super cell) is 1
<br>
    which indicates that them smallest possible size should be used.
<br>
    This occurs regardless of the requested quantization levels.
<br>
    This is clarified in the README and a message is displayed
<br>
    during the creation of the screen providing a minimum suggested
<br>
    value for -s to achieve the number of requested levels.
<br>

<br>
gs/toolbin/halftone/gen_ordered/README
<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 10:10:05 -0800
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0cf2574289f8825620dd805f49f1cfaab04f005b">0cf2574289f8825620dd805f49f1cfaab04f005b</a>
<blockquote>
<p>
    Addition of thresholding functions for subtractive color spaces.
<br>

<br>
    Previously, I had swapped the threshold and the image data to handle the subtractive case.
<br>
    Unfortunately due to the way things were written that caused issues.  So for now we added
<br>
    unique functions for the subtractive case to avoid an additional conditional in the low
<br>
    level part of the code.
<br>

<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 18:11:44 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3becda050c87511153170a85c7d3414e9a78e189">3becda050c87511153170a85c7d3414e9a78e189</a>
<blockquote>
<p>
    Squash some more PCL warnings.
<br>

<br>
    Implicit typecasts made explicit.
<br>

<br>
gs/base/gdevclj.c
<br>
pcl/pcrect.c
<br>
pl/plchar.c
<br>
pxl/pxerrors.c
<br>
pxl/pxgstate.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 12:19:32 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96ab69c8bcc1bcf3e366b494ed099dc5b46009fe">96ab69c8bcc1bcf3e366b494ed099dc5b46009fe</a>
<blockquote>
<p>
    Planar rop fixes; extensive changes throughout code.
<br>

<br>
    The changes here are largely forced upon us by the rop source device,
<br>
    the internal mechanism used within the gs lib to cope with performing
<br>
    rop operations with drawing operations. The rop source device is
<br>
    created and is given a 'source'. Any operations then done to that device
<br>
    are then passed on to its target device rewritten into a form that will
<br>
    cause the output to be ropped with the source.
<br>

<br>
    This causes problems when the source is in planar format (such as when
<br>
    the source is a pattern tile intended for use on a planar device). There
<br>
    is no way to call strip_copy_rop with planar data currently, neither
<br>
    can it easily be shoehorned through. We therefore add a new
<br>
    'strip_copy_rop2' entrypoint that takes an additional 'planar_height'
<br>
    parameter that gives the number of lines of data before the next
<br>
    planes data starts.
<br>

<br>
    We add implementations of this call throughout the code; some are
<br>
    very simple (bbox, null, trace, clip, clip2, clip2, tile_clip etc).
<br>
    Others 'common up' with the strip_copy_rop (gx_default,
<br>
    mem_planar).
<br>

<br>
    The underlying memory devices should never be called with strip_copy_rop2
<br>
    as the planar data will always be rewritten to chunky format before
<br>
    this happens. We are free to change this approach later if we want.
<br>

<br>
    The gx_rop_source_t structure used by the rop source device is extended
<br>
    to have a new planar_height field, and the rop source device itself
<br>
    extended to pass this on. Various places that create this structure now
<br>
    initialise that correctly.
<br>

<br>
    The clist reader/writer is updated to send the extra planar_height
<br>
    field through and call strip_cop_rop or strip_copy_rop2 as appropriate.
<br>

<br>
    In a similar vein, we are forced to change the copy_plane entry point
<br>
    to be copy_planes (as it is impossible (or very hard at least) for the
<br>
    rop source device to implement copy_plane).
<br>

<br>
    This incorporates changes from Michael to the new &quot;fast threshold&quot; image
<br>
    halftoning code to make it use the new copy_planes operation.
<br>

<br>
gs/base/gdevbbox.c
<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevdrop.c
<br>
gs/base/gdevmem.h
<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevrops.c
<br>
gs/base/gdevtrac.c
<br>
gs/base/gxacpath.c
<br>
gs/base/gxcht.c
<br>
gs/base/gxcldev.h
<br>
gs/base/gxclimag.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
gs/base/gxclip2.c
<br>
gs/base/gxclipm.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxclrast.c
<br>
gs/base/gxclrect.c
<br>
gs/base/gxdcolor.c
<br>
gs/base/gxdcolor.h
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevice.h
<br>
gs/base/gxht.c
<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/gxicolor.c
<br>
gs/base/gximage.h
<br>
gs/base/gximono.c
<br>
gs/base/gxp1fill.c
<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 08:31:38 -0800
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=940b007282d74686a20aa5cf434d20353680344c">940b007282d74686a20aa5cf434d20353680344c</a>
<blockquote>
<p>
    Fixed a template -&gt; templat for the Luratech build.
<br>

<br>
gs/base/gdevpsdi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-14 10:39:24 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=08dc12934adaa27978ec264dbf9c691a18d8c429">08dc12934adaa27978ec264dbf9c691a18d8c429</a>
<blockquote>
<p>
    ps2write - improve TrueType composite glyph handling
<br>

<br>
    Bug #692626, #696264.
<br>

<br>
    When emitting a TrueType font from a CIDFont with TrueType outlines if a
<br>
    glyph was a composite glyph we did not create an entry in name table for
<br>
    any components of the glyph which were not already present in the output
<br>
    font.
<br>

<br>
    This caused problems creating the CMAP subtable for the embedded TrueType
<br>
    font.
<br>

<br>
    This patch shows progressions with ps2write and files CATX4638.pdf, bug690450.pdf.
<br>
    A regresison with pdfwrite and file bug688421.pdf and a difference in
<br>
    Bug 691121.pdf with pswrite (wrong before, differnetly wrong now)
<br>

<br>
    Despite the regression I'm committing it, as it shows significant improvements
<br>
    for ps2write.
<br>

<br>
gs/base/gxfcopy.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-12 19:44:39 +0100
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed8664ed1a8a797d949270d707966aadefb3b9e8">ed8664ed1a8a797d949270d707966aadefb3b9e8</a>
<blockquote>
<p>
    Renamed the PXL CUPS filter from &quot;pstopxl&quot; to &quot;gstopxl&quot;, as like &quot;gstoraster&quot;
<br>
    it understands both PostScript and PDF as input.
<br>

<br>
gs/base/configure.ac
<br>
gs/cups/cups.mak
<br>
gs/cups/gstopxl.in
<br>
gs/cups/pstopxl.in
<br>
gs/cups/pxlcolor.ppd
<br>
gs/cups/pxlmono.ppd
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-11 21:09:02 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8c3d5996d379818c8c0422bb8330840d0fb12645">8c3d5996d379818c8c0422bb8330840d0fb12645</a>
<blockquote>
<p>
    Bug 692675: drop ivalid filter parameters.
<br>

<br>
    Check for /dicttype instead of null. Drop null and invalid filter
<br>
    parameters at once.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-11 14:09:09 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9a015bf889ea43c050fcf652c37d3c786483e243">9a015bf889ea43c050fcf652c37d3c786483e243</a>
<blockquote>
<p>
    The PXL assembler and dissassembler had the incorrect attribute code
<br>
    for PCLSelectFont and the PCLSelectFont attribute name was missing
<br>
    from a debug name table.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pxl/pxptable.c
<br>
tools/pxlasm.py
<br>
tools/pxldis.py
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-11 00:07:57 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d53286dbb42db66166b7af2f68a63baf7da43791">d53286dbb42db66166b7af2f68a63baf7da43791</a>
<blockquote>
<p>
    Fix 690417 - new PCL command &quot;set logical page&quot;.  This allows the user
<br>
    to provide arbitrary width, height and offsets which are then
<br>
    associated with the currently selected paper.
<br>

<br>
pcl/pcl.mak
<br>
pcl/pcpage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 21:57:16 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b6cd8ce7351fc7bb759b5b7dcea7e74b2abb3850">b6cd8ce7351fc7bb759b5b7dcea7e74b2abb3850</a>
<blockquote>
<p>
    Squash warnings in pcl/pxl.
<br>

<br>
    Mostly making type coercions explicit.
<br>

<br>
pcl/pcbiptrn.c
<br>
pcl/pccid.c
<br>
pcl/pccsbase.c
<br>
pcl/pcfont.c
<br>
pcl/pcfontpg.c
<br>
pcl/pcfsel.c
<br>
pcl/pcindxed.c
<br>
pcl/pcjob.c
<br>
pcl/pcpage.c
<br>
pcl/pcpatrn.c
<br>
pcl/pcrect.c
<br>
pcl/pcsfont.c
<br>
pcl/pctext.c
<br>
pcl/pcuptrn.c
<br>
pcl/pcursor.c
<br>
pcl/pgconfig.c
<br>
pcl/pgframe.c
<br>
pcl/pgpoly.c
<br>
pcl/rtgmode.c
<br>
pcl/rtmisc.c
<br>
pcl/rtraster.c
<br>
pl/pjparse.c
<br>
pl/plchar.c
<br>
pl/plsrgb.c
<br>
pxl/pxink.c
<br>
pxl/pxsessio.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 20:49:55 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42aa659090c896b807745b4eba81335dbd8e8d92">42aa659090c896b807745b4eba81335dbd8e8d92</a>
<blockquote>
<p>
    Replace 'this' with 'self'.
<br>

<br>
    Using C++ reserved words in ghostscript is bad form, especially as
<br>
    MSVC gets confused by them when debugging.
<br>

<br>
    I haven't changed the use of 'this' in zlib as it's not ours to change.
<br>

<br>
gs/base/gscicach.c
<br>
gs/base/gsgcache.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxhintn.c
<br>
gs/base/gxhintn1.c
<br>
gs/base/gximono.c
<br>
gs/base/gxpflat.c
<br>
gs/base/gxttfb.c
<br>
gs/base/ttfmain.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 20:11:03 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d81dffe6142ead8245baacf12f3b2ae4fe20b206">d81dffe6142ead8245baacf12f3b2ae4fe20b206</a>
<blockquote>
<p>
    Squash warnings in MSVC build.
<br>

<br>
    All self evident, really. Lots of char's that should be bytes etc.
<br>

<br>
gs/base/gdevclj.c
<br>
gs/base/gdevpdtw.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gp_wgetv.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gxipixel.c
<br>
gs/base/sidscale.c
<br>
pcl/pcht.c
<br>
pcl/rtmisc.c
<br>
pl/plchar.c
<br>
pl/plfont.c
<br>
xps/xpspath.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 19:09:05 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d182ddaf5d46dc68d7f266fcb7f4de1ed64b7b56">d182ddaf5d46dc68d7f266fcb7f4de1ed64b7b56</a>
<blockquote>
<p>
    Replace all uses of 'template' with 'templat'.
<br>

<br>
    Using C++ reserved words is bad form, if only because they upset MSVC
<br>
    when debugging.
<br>

<br>
gs/base/gdevcfax.c
<br>
gs/base/gdevfax.c
<br>
gs/base/gdevjbig2.c
<br>
gs/base/gdevjpeg.c
<br>
gs/base/gdevjpx.c
<br>
gs/base/gdevpdfd.c
<br>
gs/base/gdevpdfi.c
<br>
gs/base/gdevpdfm.c
<br>
gs/base/gdevpdfo.c
<br>
gs/base/gdevpdfu.c
<br>
gs/base/gdevpdfv.c
<br>
gs/base/gdevpsdi.c
<br>
gs/base/gdevpsdp.c
<br>
gs/base/gdevpsds.c
<br>
gs/base/gdevpsdu.c
<br>
gs/base/gdevpsim.c
<br>
gs/base/genconf.c
<br>
gs/base/gsfunc4.c
<br>
gs/base/gsptype1.c
<br>
gs/base/gsptype2.c
<br>
gs/base/gsptype2.h
<br>
gs/base/gstrans.c
<br>
gs/base/gxclbits.c
<br>
gs/base/gxcllzw.c
<br>
gs/base/gxclmem.c
<br>
gs/base/gxclzlib.c
<br>
gs/base/gxcolor2.h
<br>
gs/base/gxidata.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxpcmap.c
<br>
gs/base/scommon.h
<br>
gs/base/sdct.h
<br>
gs/base/sdctd.c
<br>
gs/base/sdcte.c
<br>
gs/base/smd5.c
<br>
gs/base/spsdf.c
<br>
gs/base/ssha2.c
<br>
gs/base/stream.c
<br>
gs/psi/fapi_ft.c
<br>
gs/psi/ifilter.h
<br>
gs/psi/ifrpred.h
<br>
gs/psi/ifwpred.h
<br>
gs/psi/iscan.c
<br>
gs/psi/zfapi.c
<br>
gs/psi/zfdctd.c
<br>
gs/psi/zfdcte.c
<br>
gs/psi/zfdecode.c
<br>
gs/psi/zfile.c
<br>
gs/psi/zfilter.c
<br>
gs/psi/zfilter2.c
<br>
gs/psi/zfproc.c
<br>
gs/psi/zfrsd.c
<br>
gs/psi/zmisc1.c
<br>
gs/psi/zpcolor.c
<br>
gs/psi/zshade.c
<br>
pxl/pximage.c
<br>
pxl/pxink.c
<br>
xps/xpsjpeg.c
<br>
xps/xpstiff.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 11:08:56 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=108bf3d9fd2770c1b97a4eabcd4f09dd13c7fe18">108bf3d9fd2770c1b97a4eabcd4f09dd13c7fe18</a>
<blockquote>
<p>
    Fix several problems with the 16-bit PS output from gen_ordered.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 10:35:57 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=73770f28c263a514a318aa91af24b26814062bd1">73770f28c263a514a318aa91af24b26814062bd1</a>
<blockquote>
<p>
    Change options and README for gen_ordered.c and fix 16-bit PS output.
<br>

<br>
    Also add check for missing value for an option (get_arg returning NULL) and add specific 'format' for
<br>
    16-bit .raw (raw16) (reserving the -b option for number of bits 1, 2, 4) for multi-level threshold
<br>
    arrays.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/halftone/gen_ordered/README
<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-10 09:01:28 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cde0561c8ffc71c231a0aeff399852c43ab7a9e8">cde0561c8ffc71c231a0aeff399852c43ab7a9e8</a>
<blockquote>
<p>
    Move the ordered dither screen creation tool to toolbin/halftone/gen_ordered.
<br>

<br>
    Previously this was buried under the toolbin/color directory. Also by putting it into gen_ordered, we
<br>
    prepare for the addition of gen_stochastic and threshold_remap tools related halftone tools. Michael
<br>
    Vrhel as agreed with this change.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/color/halftone/README
<br>
gs/toolbin/color/halftone/halfttoning.sln
<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
gs/toolbin/color/halftone/halfttoning/halfttoning.vcproj
<br>
gs/toolbin/halftone/gen_ordered/README
<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.c
<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.sln
<br>
gs/toolbin/halftone/gen_ordered/gen_ordered.vcproj
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-31 18:39:24 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1da2a46ed9f6ae0b0afc5fd4417943a36e532171">1da2a46ed9f6ae0b0afc5fd4417943a36e532171</a>
<blockquote>
<p>
    More work on bug 690538: introduce macros for color rounding.
<br>

<br>
    Introduce new macros to gxcvalue.h header file that defines helpful macros
<br>
    for colour depth changing.
<br>

<br>
    COLROUND macros do rounding (16-&gt;n bits), COLDUP macros do bit duplication
<br>
    (n-&gt;16 bits). Use these macros in various places throughout the code.
<br>

<br>
    Also tweak the gx_color_value_to_byte macro to round in the same way.
<br>

<br>
    Colors for devices that use these functions are now rounded in the same way
<br>
    that lcms does.
<br>

<br>
    Change as many encode_color routines as I can find to use this new code
<br>
    rather than simply truncating.
<br>

<br>
gs/base/gdevbit.c
<br>
gs/base/gdevcdj.c
<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevdsp.c
<br>
gs/base/gdevperm.c
<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gdevxcf.c
<br>
gs/base/gxblend1.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxcvalue.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-09 17:46:06 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4ccf3ba715990923281126bd9b300aa645d7a1d6">4ccf3ba715990923281126bd9b300aa645d7a1d6</a>
<blockquote>
<p>
    Squash some warnings produced in the last memento fix.
<br>

<br>
    giving me a warning on MSVC).
<br>

<br>
    Remove unused variable.
<br>

<br>
gs/psi/zmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-09 16:29:24 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=36e4f24d76e9f33bf5b531b8bd7d2c31ebee9153">36e4f24d76e9f33bf5b531b8bd7d2c31ebee9153</a>
<blockquote>
<p>
    Properly finalize the DCT-writing memory device to avoid memory leaks
<br>

<br>
    Bug #692670 &quot;Ghostscript uses 2 gigs of memory reading file&quot;. When writing
<br>
    images a JPEG the pdfwrite code creates a memory device temporarily. It
<br>
    was not, however, finalizing the device. Previously this did not cause a
<br>
    problem, but with the ICC colour work, this left the ICC buffers set up,
<br>
    causing a ~6Kb per image memory leak.
<br>

<br>
    This commit explicitly finalizes the device, which frees the memory and
<br>
    gets rid of the leak.
<br>

<br>
    No differences expected
<br>

<br>
gs/base/gdevpsdi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-09 13:12:49 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=136065f0fcaa871376561a1c81c16c7d9b2bb3c7">136065f0fcaa871376561a1c81c16c7d9b2bb3c7</a>
<blockquote>
<p>
    Memento 'list blocks' tweaks.
<br>

<br>
    Make Memento_listBlocks() function non-static.
<br>

<br>
    Add new Memento_listNewBlocks() function.
<br>

<br>
    Add flags word to Memento block header, only 1 bit of which is used
<br>
    curently (to indicate that a block is new since the last listNewBlocks
<br>
    call).
<br>

<br>
    Add .mementolistnewblocks postscript operator.
<br>

<br>
    Add (commented out) code in gs_init.ps to call vmreclaim and then
<br>
    .mementolistnewblocks at the end of each showpage. This allows
<br>
    tracking of blocks that 'leak' during each page (where 'leak' doesn't
<br>
    necessarily mean truly leak).
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/base/memento.c
<br>
gs/base/memento.h
<br>
gs/psi/zmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 08:25:13 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=138d68e2d7dd5567c7a24740ec71858e24342a1f">138d68e2d7dd5567c7a24740ec71858e24342a1f</a>
<blockquote>
<p>
    Fix type 1 font copying code SEAC scanner.
<br>

<br>
    When embedding type 1/CFF fotns the code scans the glyphs to see is any of
<br>
    them are SEAC (Single Encoding Accented Characters) glyphs and expands
<br>
    them if they are.
<br>

<br>
    The CFF parsing was skipping over the 'shotint' operator (itself an awful hack)
<br>
    instead of pushing the value onto the stack. If the shortint was the index
<br>
    for a /Subr this led to the wrong Subr being called. Because Subrs expect
<br>
    parameters on the stack, calling the wrong one leads to stack cuorruption
<br>
    and in this case caused a crash.
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/gxtype1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 02:40:09 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c5ba8fd910be3985212b104f2c111556db4b871">3c5ba8fd910be3985212b104f2c111556db4b871</a>
<blockquote>
<p>
    Bug 692648: dead code in gdevcp50.c
<br>

<br>
    Remove ineffective error checks after functiom calls. Real error
<br>
    processing is done at the end of the function, when device is
<br>
    closed. Found by Coverity.
<br>

<br>
gs/base/gdevcp50.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 02:16:57 -0500
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5915259f6800b600fff1af9e4d40f5dddee8f477">5915259f6800b600fff1af9e4d40f5dddee8f477</a>
<blockquote>
<p>
    Bug 692649: dead code in gxi12bit.c and gxicolor.c
<br>

<br>
    The dead fragments are rudiments (rather than logic problems)
<br>
    and so can be safely removed. Found by Coverity.
<br>

<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 01:57:42 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=724390c14c6f52489d83df18f7cfcd6a4be7bced">724390c14c6f52489d83df18f7cfcd6a4be7bced</a>
<blockquote>
<p>
    Bug 692647: Mistaken comparison instead of assignment.
<br>

<br>
    Fix two obvious typos in a contributed Japanese driver.
<br>

<br>
gs/contrib/japanese/gdevmjc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 01:33:49 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=595309e7b1883b985756510ee210bd3176a0da3a">595309e7b1883b985756510ee210bd3176a0da3a</a>
<blockquote>
<p>
    Bug 692598: bad sizeof() usage in gxfcopy.c
<br>

<br>
    Use the right type to calculate the size of an array of unsigned long.
<br>
    Old code used sizeof(gs_glyph *) instead of sizeof(unsigned long).
<br>
    Memory corruption was possible when sizeof(long) &gt; sizeof(void *).
<br>
    The problem was found by Coverity.
<br>

<br>
gs/base/gxfcopy.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-08 01:26:56 -0500
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4a6124a3870a07ff19562559e6d155560d22c01d">4a6124a3870a07ff19562559e6d155560d22c01d</a>
<blockquote>
<p>
    Fix a typo s/elseif/elsif/ in clusterpush.pl
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 10:53:09 -0700
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91ce46e08ae37a9c5116bc379b7712c10df5a8f2">91ce46e08ae37a9c5116bc379b7712c10df5a8f2</a>
<blockquote>
<p>
    Fix 692614 - the unsolid pattern should be used when the gl/2 white
<br>
    pattern is specified.  Also, progressions noted in PCL5 CET 32-01.
<br>

<br>
pcl/pcpatrn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 16:52:38 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a4230e24b386ac647b0562cb2bf34c25043a1903">a4230e24b386ac647b0562cb2bf34c25043a1903</a>
<blockquote>
<p>
    Change to clusterpush to allow filters.
<br>

<br>
    Change here (and throughout cluster code) to allow filtering of the jobs
<br>
    to be scheduled.
<br>

<br>
    Rather than simply doing:
<br>

<br>
     clusterpush.pl gs
<br>

<br>
    you can now do:
<br>

<br>
     clusterpush.pl gs filter=ppmraw
<br>

<br>
    and have it only test the ppmraw files. Or you can specifiy a list
<br>
    of filters that must all pass:
<br>

<br>
     clusterpush.pl xps filter=ppmraw,xpsfts-a4
<br>

<br>
    This will test the xpsfts-a4 files through the ppmraw device only.
<br>
    Or you can specify several filters to broaden the scope:
<br>

<br>
     clusterpush.pl gs filter=ppmraw,72 filter=pgmraw,300
<br>

<br>
    And it will test ppmraw files at 72 dpi and pgmraw files at 300dpi.
<br>

<br>
    The filtering is done on the 'test' string formed by the cluster
<br>
    code (that is, test__file__path.device.res.band)
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 12:10:16 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ab54e1549793df22e0eddf43033494ea6ab0544b">ab54e1549793df22e0eddf43033494ea6ab0544b</a>
<blockquote>
<p>
    Fix for (part of) Bug 692513. (xps pattern white lines)
<br>

<br>
    XPS renders with the &quot;pixel centres covered&quot; rule, rather than the
<br>
    &quot;any part of a pixel&quot; rule. As such fill_adjust is 0. This exposes
<br>
    limitations in ghostscripts pattern tile handling code.
<br>

<br>
    When we come to create a pattern tile, if the pattern is (for instance)
<br>
    7.5x7.5 device pixels in size, we round this to the nearest integer
<br>
    and end up with an 8x8 pattern tile. For PS/PDF (which has a non zero
<br>
    fill_adjust) the pattern will still cause the entire range of pattern
<br>
    pixels to be drawn.
<br>

<br>
    With XPS (and it's 0 fill_adjust) the patterns frequently leave gaps
<br>
    around the edge of the enlarged tile, resulting in white lines in the
<br>
    final image.
<br>

<br>
    My first attempt at a fix for this was to scale the pattern up by
<br>
    the appropriate amount to ensure it filled the pattern tile (8/7.5
<br>
    in the example). This works, but causes thousands of diffs; having
<br>
    examined them all in a bmpcmp, it feels like a win, to me.
<br>

<br>
    However, consulting with Tor and Michael and checking the XPS spec
<br>
    leads me to believe that that we shouldn't be using TilingType 1
<br>
    anyway; xps patterns are supposed to be accurately positioned (if not
<br>
    accurately rendered). As such we should be using TilingType 2.
<br>

<br>
    The patch here therefore forces XPS to use TilingType 2. This does not
<br>
    solve the problem in itself, as we can still get these white lines.
<br>
    Furthermore the definition of what TilingType 2 does in postscript
<br>
    prohibits us from scaling the pattern cell.
<br>

<br>
    The solution adopted here, therefore, is to spot that we are using
<br>
    TilingType 2, and a fill adjust of 0, and to translate the pattern
<br>
    by half the change in size; this should ensure that 'edge to edge'
<br>
    pattern cells should cover all the pixel centres appropriate and
<br>
    the white lines should disappear.
<br>

<br>
    This appears to work except for one disappearing grid in Page 2 of
<br>
    tests_private/xps/xpsfts-a4/fts_01xx.xps.ppmraw.72.0. I will look
<br>
    into this before pushing this commit.
<br>

<br>
gs/base/gscoord.c
<br>
gs/base/gscoord.h
<br>
gs/base/gsptype1.c
<br>
xps/xpstile.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-06 13:54:03 -0800
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=61074849e40ec86302e06bf0ef18f0872f8cf99a">61074849e40ec86302e06bf0ef18f0872f8cf99a</a>
<blockquote>
<p>
    Fix bug 692623. clist_get_data and clist_put_data changed to use int64_t offset.
<br>

<br>
    The above functions are used by gx_dc_pattern_read_raster and gx_dc_pattern_write_raster
<br>
    which are instances of the dev_color_proc_read and dev_color_proc_write procs of the
<br>
    gx_device_color_type_s struct. The definitions for all color types is changed to use
<br>
    int64_t (as well as the prototype) and the stdint_.h is added to gxdcolor.h.
<br>

<br>
gs/base/gsptype1.c
<br>
gs/base/gxcht.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxclist.h
<br>
gs/base/gxdcolor.c
<br>
gs/base/gxdcolor.h
<br>
gs/base/gxht.c
<br>
gs/base/gxwts.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 13:28:56 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9bcbb7d1ae61b2ccf5a6761a176ead71d327d27">b9bcbb7d1ae61b2ccf5a6761a176ead71d327d27</a>
<blockquote>
<p>
    Fix a couple of benign compiler warnings.
<br>

<br>
gs/base/gdevpdtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 02:17:07 -0500
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1440326b1ef9a8aa539e9a2a6f8d0c32b1e879b">d1440326b1ef9a8aa539e9a2a6f8d0c32b1e879b</a>
<blockquote>
<p>
    Bug 692651: fix possible 0 dereference in error handler.
<br>

<br>
    At the end of gstate_alloc_parts(), gstate_free_parts() might be
<br>
    called with parts-&gt;path == 0; but gx_path_free() will de-reference it.
<br>
    Found using Coverity.
<br>

<br>
gs/base/gsstate.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 10:48:42 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c4e3f9c1d245e374eb30cc179e27bdcd2746812c">c4e3f9c1d245e374eb30cc179e27bdcd2746812c</a>
<blockquote>
<p>
    Bug 692661: setup dict and op stacks for executing a &quot;charproc&quot;
<br>

<br>
    When an (invalid!!) Type 1 font has a procedure instead of a charstring
<br>
    we weren't setting up the stacks correctly in FAPI before executing the
<br>
    proc.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 09:57:41 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63a5fe390d2534f6b48e2dd58f46ed9941582e83">63a5fe390d2534f6b48e2dd58f46ed9941582e83</a>
<blockquote>
<p>
    pdfwrite - Improve font naming when standard fonts are not embedded.
<br>

<br>
    Bug #692608; When the input is PCL, 'standard' font names are used (eg Courier),
<br>
    and font embedding is false, the output PDF file contains the names of the
<br>
    URW fonts which are used as substittues for the standard fonts.
<br>

<br>
    This means that the resulting PDF needs to be read on a system with URW fonts
<br>
    installed, or the fonts will be substituted, which may result in poor choices.
<br>

<br>
    By instead embedding the correct original (standard) font name we can get
<br>
    better substitution.
<br>

<br>
    Thanks to Hin-Tak Leung for the original work and the patch which has been
<br>
    adopted with slight modifications to pacify compilers.
<br>

<br>
    No diffreences expected.
<br>

<br>
gs/base/gdevpdtb.c
<br>
gs/base/gdevpdtb.h
<br>
gs/base/gdevpdtd.c
<br>
gs/base/gdevpdtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-07 00:27:34 -0500
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=184e6fe81072d94489223ce4d4a9ba085843258c">184e6fe81072d94489223ce4d4a9ba085843258c</a>
<blockquote>
<p>
    Bug 692653: fix base pattern color space check.
<br>

<br>
    Old code tested an uninitialized value instead of the base color
<br>
    space, found using Coverity.
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-06 10:59:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=850145bc08fd8ebcc4cc9c6827cde750d9ed9acf">850145bc08fd8ebcc4cc9c6827cde750d9ed9acf</a>
<blockquote>
<p>
    Bug 692470: remove sscanf() in CFF code
<br>

<br>
    On Linux (at least) the locale affects the behaviour of sscanf(): certain
<br>
    languages use a comma (&quot;,&quot;) for the decimal point, rather than a full stop
<br>
    (&quot;.&quot;). Setting one of those locales (such as Spanish) causes sscanf() to fail
<br>
    when parsing a number with a fractional component in the CFF interpreter.
<br>

<br>
    Replace the sscanf() call in the CFF interpreter with a call to Ghostscript
<br>
    PS interpreter's internal scan_number() function which is unaffected by locale.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/zfont2.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-04 10:02:38 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2a3a329ab0ee0e2f4971ee0327ae78d532399619">2a3a329ab0ee0e2f4971ee0327ae78d532399619</a>
<blockquote>
<p>
    Bug 692646: remove bad call to memcmp()
<br>

<br>
    The memcmp() to compare the matrices (to decide if we need to rescale the font)
<br>
    was the address of the pointer to the matrix, rather than the pointer itself.
<br>

<br>
    This change addresses that by changing the memcmp() to an explicit check for
<br>
    the equality of each element of the arrays. The reason I've opted for this is
<br>
    because, for example, [1 -0 0 1 0 0] == [1 0 0 1 0 0] which an explicit
<br>
    equality check will evaluate correctly, but a memcmp() will fail the check.
<br>

<br>
    This causes what seems to be a progression in comparefiles/Bug689006.pdf.
<br>
    Other than that, no cluster differences are expected.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-03 18:00:41 +0000
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42146da35d49aa1debc683d7285fcd8cefc1f9f8">42146da35d49aa1debc683d7285fcd8cefc1f9f8</a>
<blockquote>
<p>
    Let configure check for time.h
<br>

<br>
    Recent Linux distributions defeat the check in unix-aux.mak for sys/time.h
<br>
    with the hard coded path. So have configure check for it, and its
<br>
    setting take precedence over the unix-aux.mak.
<br>

<br>
    No cluster differences.
<br>

<br>
config.mak.in
<br>
configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-02 19:32:04 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d42d005f6adcb9e6911418a6b61c43df87fb7513">d42d005f6adcb9e6911418a6b61c43df87fb7513</a>
<blockquote>
<p>
    Fix for (part of) bug 692513.
<br>

<br>
    When drawing the a radial shading, we approximate the join between the
<br>
    two circles by 4 tensor patches based on joining the 4 quadrants of
<br>
    the circles in question. The order in which these were being drawn was
<br>
    causing unexpected overwriting of pixels.
<br>

<br>
    Here I have rejigged the order in which they are drawn to solve the
<br>
    problem.
<br>

<br>
    Cluster testing shows various progressions, and only one regression.
<br>
    This has been noted as Bug 692657, and shows signs of it being an
<br>
    independent bug.
<br>

<br>
gs/base/gxshade1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-02 19:34:50 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1bcd6274fbe15784fa0726f234b0608b994abbd7">1bcd6274fbe15784fa0726f234b0608b994abbd7</a>
<blockquote>
<p>
    Fix MEMENTO build; pacify valgrind code was in the wrong place.
<br>

<br>
    I'd added a memset to pacify valgrind, but had left it in the
<br>
    middle of variable declarations; gcc was accepting this, but
<br>
    MSVC was (rightly) complaining. Simple fix is to move it down.
<br>

<br>
    CLUSTER_UNTESTED as cluster does not test MEMENTO builds.
<br>

<br>
gs/base/gxcht.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-03 11:11:27 +0000
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cc592c4162673a99932cdcdc64b39e0abe5aff9e">cc592c4162673a99932cdcdc64b39e0abe5aff9e</a>
<blockquote>
<p>
    Further enhance txtwrite output; detect blocks of text.
<br>

<br>
    Yet another output mode for txtwrite will now attempt to detect blocks of
<br>
    text and output the blocks. This is similar to the MuPDF '-ttt' output
<br>
    but, since the algorithm is entirely different, the output will not be
<br>
    identical.
<br>

<br>
    Updated the documentation in devices.htm.
<br>

<br>
    No differences expected, txtwrite is not regression tested.
<br>

<br>
gs/base/gdevtxtw.c
<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-11-02 15:10:25 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65486b6c7533f0be9e15a8380729fdb5032e0bef">65486b6c7533f0be9e15a8380729fdb5032e0bef</a>
<blockquote>
<p>
    Fix for bug 692639.  PDF14 mono device initialization.
<br>

<br>
    With the fix of the max_gray initialization in pdf14 device to avoid halftoning during interpolation of images (see description in 2b91a85069d421465220a83c82ea491733d15017)
<br>
    a conflict occurred when checking if the device was separable and
<br>
    linear.  Setting of the dither_grays for the pdf14 gray device
<br>
    fixes this  issue.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-31 12:36:29 +0000
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e4a9ab0594ccb8beb43c0bc83ba0b41deeb128ff">e4a9ab0594ccb8beb43c0bc83ba0b41deeb128ff</a>
<blockquote>
<p>
    Fix stroke_adjust logic; apply adjust in fewer cases.
<br>

<br>
    In 'adjust_stroke', we decide whether to apply stroke adjustment or not.
<br>
    With the logic as it stands, the only time we DO NOT apply stroke
<br>
    adjustment is when stroke adjustment is disabled, AND we have a diagonal
<br>
    stroke segment.
<br>

<br>
    My understanding of stroke adjustment is that it is only supposed to
<br>
    apply when we have a horizontal or vertical line, AND when it is
<br>
    configured on. In line with this, I have changed the logic so that
<br>
    we DO NOT apply stroke adjustment either when stroke adjustment is
<br>
    disable, OR we have a diagonal stroke segment.
<br>

<br>
    This produces many thousands of differences in the cluster testing, but
<br>
    having looked through the first bmpcmp load of them (1000 files), they
<br>
    all look to be exactly as expected with no changes so horrific as to
<br>
    stop this commit.
<br>

<br>
gs/base/gxstroke.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-30 02:45:48 -0400
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=78727e97d82435052df2f8e0333e47671bafbc59">78727e97d82435052df2f8e0333e47671bafbc59</a>
<blockquote>
<p>
    Bug 692594: gdevijs: add missing error check.
<br>

<br>
    Add missing error check, found using Coverity.
<br>

<br>
gs/base/gdevijs.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-30 00:20:30 -0400
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8adebdf0f6e87f36792637ff88db874ea86fd803">8adebdf0f6e87f36792637ff88db874ea86fd803</a>
<blockquote>
<p>
    Bug 692596: fix memory leaks in rinkj-epson870.c.
<br>

<br>
    There were a few memory leaks in rinkj-epson870.c in error handling
<br>
    branches, found using Coverity.
<br>

<br>
gs/base/rinkj/rinkj-epson870.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 23:46:28 -0400
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af01406940d211167c202cbc54c3ff7ad31d5c0e">af01406940d211167c202cbc54c3ff7ad31d5c0e</a>
<blockquote>
<p>
    Bug 692595: fix memory leaks in gp_unix_cache.c
<br>

<br>
    There were some memory leaks in gp_unix_cache.c, found using Coverity.
<br>

<br>
gs/base/gp_unix_cache.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 20:03:40 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c803e62759fd9d38c088aa8c24d71640ecfb51d">9c803e62759fd9d38c088aa8c24d71640ecfb51d</a>
<blockquote>
<p>
    Added a final return to --debug message.
<br>

<br>
gs/base/gsmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 21:54:51 -0400
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=66567074a91d05a27f2439cbcc43e2d2301a776f">66567074a91d05a27f2439cbcc43e2d2301a776f</a>
<blockquote>
<p>
    Bug 692597: bad sizeof() usage in base/sdcparam.c
<br>

<br>
    Taking sizeof() of an array parameter gives the size of the pointer,
<br>
    not the array; found using Coverity.
<br>

<br>
gs/base/sdcparam.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 18:14:14 -0400
</strong>
<br>Tim Waugh &lt;twaugh@redhat.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c00d4bc5eb87191674463af9444c457ac361c07">4c00d4bc5eb87191674463af9444c457ac361c07</a>
<blockquote>
<p>
    Bug 692599: fix bad sizeof() usage in base/sha2.c
<br>

<br>
    sizeof() was being used incorrectly in base/sha2.c,
<br>
    found using Coverity.
<br>

<br>
gs/base/sha2.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 14:09:56 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6116f7e9633c7c112c09c048b317de34c060ba5b">6116f7e9633c7c112c09c048b317de34c060ba5b</a>
<blockquote>
<p>
    Bug 692502: add missing dereference of an indirect object.
<br>

<br>
    Fix access to indirect /Names and /Nums objects in name and number
<br>
    trees, respectively.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-29 16:47:58 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d8089a9dcf0971a1131f8391049c602a61852f65">d8089a9dcf0971a1131f8391049c602a61852f65</a>
<blockquote>
<p>
    Bug 692634: handle skipping &quot;cached&quot; outline glyphs
<br>

<br>
    Avoid trying to access a FAPI outline when glyph scaling has collapsed to zero.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-28 15:45:56 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=38e7372c539bcc6174c42be2d438d8311da2cff2">38e7372c539bcc6174c42be2d438d8311da2cff2</a>
<blockquote>
<p>
    Fix ppm color reversal in bmpcmp.
<br>

<br>
    When I did the recent speedups, I inadvertantly reversed the rgb order
<br>
    when reading ppm files. Fixed here.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-28 01:59:47 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6dc04dcacd37256f8d0c61cec49975ba67297873">6dc04dcacd37256f8d0c61cec49975ba67297873</a>
<blockquote>
<p>
    Bug 692590: Ignore self-referencing /SMask attribute.
<br>

<br>
    Check whether /SMask attribute points to its own dictionary and
<br>
    ignore it when it does.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 13:26:44 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7b2b1f7f7989ab0106627f420e7a4848619355df">7b2b1f7f7989ab0106627f420e7a4848619355df</a>
<blockquote>
<p>
    Fix enhancement bug 692615: Create a platform specific hook to set the serialnumber
<br>

<br>
    The main change is to add the hook, but for common platforms, try to get a reasonably
<br>
    unique serialnumber based on the hardware (we hope). Initial platform in this patch is
<br>
    only Windows. We would like to support linux/unix and mac OS/X. If the mechanism fails,
<br>
    just return gs_serialnumber set from GS_SERIALNUMBER in gscdefs.c
<br>

<br>
gs/base/gp.h
<br>
gs/base/gp_dvx.c
<br>
gs/base/gp_mac.c
<br>
gs/base/gp_msdos.c
<br>
gs/base/gp_os2.c
<br>
gs/base/gp_unix.c
<br>
gs/base/gp_vms.c
<br>
gs/base/gp_wgetv.c
<br>
gs/psi/imain.c
<br>
gs/psi/zmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-22 23:51:42 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2b91a85069d421465220a83c82ea491733d15017">2b91a85069d421465220a83c82ea491733d15017</a>
<blockquote>
<p>
    Fix for Bug 692505  XPS patterns with transparency.
<br>

<br>
    There were essentially three issues two in the xps interpreter and one in the graphics library.
<br>

<br>
    First in the xps interpreter we need to know if the pattern object has transparency and to
<br>
    set up the pattern object for the graphics library so that the graphics library will
<br>
    know to push the pdf14 device on the pattern accumulator object.
<br>

<br>
    We also had the issue that we were not undoing the pre-multiplied alpha in the tiff image
<br>
    in the interpreter.
<br>

<br>
    Second issue is that in ghostscript, we call pattern_paint_finish from
<br>
    the pdf interpreter when we are all done setting things up for the pattern.  This is now
<br>
    handled prior to the call before gx_pattern_cache_add_entry which is where it is done in
<br>
    pattern_paint_finish.
<br>

<br>
    Also, some debugging of the mask stack was added in gdevp14.c.  This was needed to track down
<br>
    a bug that become visible when I added in the pattern transparency support.  The issue
<br>
    was that the parent PDF14 device may often have a valid soft mask in its mask stack if there
<br>
    had been a previous soft mask push.  Since we made the soft mask state be part of the q Q
<br>
    operations in the PDF interpreter (the soft mask is actually part of the extended graphics state
<br>
    in PDF), we have to make sure to pop the soft mask we we are all
<br>
    done using it in the XPS interpreter.  I added the appropriate commands for that.
<br>

<br>
    There was also an issue that cropped up with the pdf14 device and the interaction of the image
<br>
    interpolation code.   We always interpolate image in XPS and it turned out that if we had an
<br>
    opacity mask pattern created with an image we installed a gray pdf14 device for the pattern.
<br>
    The interpolation code was incorrectly using halftoning for the pdf14 gray device due to the
<br>
    color info settings in that device.
<br>

<br>
    This commit results in many progressions in PDF and XPS (450 differences).  In PDF, if the
<br>
    target was a gray devices and the content had
<br>
    interpolated images with transparency we see progressions due to the fact that we were improperly
<br>
    halftoning the images when the trans device is a contone device.  In XPS, several missing
<br>
    figures now are visible and we correctly handle tiling with objects that have transparency.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxpcmap.c
<br>
gs/base/lib.mak
<br>
xps/xpsgradient.c
<br>
xps/xpsimage.c
<br>
xps/xpsopacity.c
<br>
xps/xpstile.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-27 13:44:05 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58722d520578050aad3d81c0f5fb477bc701a944">58722d520578050aad3d81c0f5fb477bc701a944</a>
<blockquote>
<p>
    Fix warning; initial_decode was declared to return an int rather than void.
<br>

<br>
    initial_decode never returns a value, neither does any caller check for
<br>
    one. Change it to be void.
<br>

<br>
gs/base/gxiscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-27 13:24:08 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f75ccf57f4d052652204f6508f4f9949d3448840">f75ccf57f4d052652204f6508f4f9949d3448840</a>
<blockquote>
<p>
    Correct direction of implication for gs_debug_flags.
<br>

<br>
    I had incorrectly implemented the implication table; a =&gt; A rather than
<br>
    A =&gt; a. Corrected here.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/gdbflags.h
<br>
gs/base/gdebug.h
<br>
gs/base/gsmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-27 10:42:18 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=59b1c64adb147a209b6468a669146edf13973a4b">59b1c64adb147a209b6468a669146edf13973a4b</a>
<blockquote>
<p>
    Make txtwrite 'XML' output compatible with MuPDF output.
<br>

<br>
    The txtwrite device now outputs 'XML' (something like XML) in a compatible
<br>
    fashion to the '-ttt' output from MuPDF. It does not yet attempt to create
<br>
    blocks of text, it just outputs the data it received as it received it,
<br>
    there is no ordering of the data whatsoever. The format is compatible with
<br>
    the MuPDF format though.
<br>

<br>
    No differences expected, txtwrie is not cluster tested.
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-24 16:07:50 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=97e6cdad5061fe92d16aae87524fe985c8436796">97e6cdad5061fe92d16aae87524fe985c8436796</a>
<blockquote>
<p>
    Fix bug 692618. Crash and Object not in any chunk error and VMerror.
<br>

<br>
    Actually two problems showed up after the previous commit related to this bug. A crash
<br>
    could occur (or cause &quot;Object not in any chunk&quot;) because the pdf14 device did not use
<br>
    stable_memory for separation names. The second issue was a VMerror when the decision
<br>
    for banded (clist) mode was flawed, because if the device supported separations the
<br>
    estimates for transparency buffers was too small because the call to
<br>
    gdev_prn_allocate_memory was sometimes called with new_width, hew_height = 0,0 which
<br>
    expected the 0,0 to be ignored. The new_width and new_height are only used from
<br>
    gdev_prn_reallocate_memory.
<br>

<br>
    The non-encodable pixel issue still remains.
<br>

<br>
gs/base/gdevmem.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevprn.c
<br>
gs/base/gstrans.h
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-26 16:40:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf8815855af78ddc9d4d9bebafbb21bff603e71d">cf8815855af78ddc9d4d9bebafbb21bff603e71d</a>
<blockquote>
<p>
    Bug 692605: resolve FAPI/UFST matrix clash
<br>

<br>
    The Microtype fonts require a unit design grid, but many jobs assume that the
<br>
    standard fonts set have a design grid of 1000x1000. For those two conflicting
<br>
    requirements to be satisfied, the UFST integration layer has to compensate
<br>
    for the scaling.
<br>

<br>
    As usual with the UFST code, that exposed a host of other problems, including
<br>
    failing to produce a bitmap sometimes when one is require for the glyph cache
<br>
    and failing to handle a glyph too big for UFST to image (i.e. fallback to an
<br>
    outline) in some cases.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/Resource/Init/gs_fapi.ps
<br>
gs/psi/fapiufst.c
<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 20:30:29 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e8f10150dd2404757d648a1568c1002dd5310b4">8e8f10150dd2404757d648a1568c1002dd5310b4</a>
<blockquote>
<p>
    More gs_debug_flags fixes.
<br>

<br>
    Today, I am less than competent. Hopefully this will fix it.
<br>

<br>
    My previous attempt to move gs_debug_flags from header to c file was
<br>
    thrwarted by my missing an 'extern' out.
<br>

<br>
    This now compiles on both linux and windows without warnings, I think.
<br>

<br>
gs/base/gdebug.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 20:19:24 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5f56c0c13c92232c9f77b548476fa10f1aec28f">b5f56c0c13c92232c9f77b548476fa10f1aec28f</a>
<blockquote>
<p>
    Fix silly mistake in gs_debug_flags changes.
<br>

<br>
    I'd inadvertently caused the gs_debug_flags tables to be built in every
<br>
    object that included gdebug.h.
<br>

<br>
    Move them into gsmisc.c.
<br>

<br>
gs/base/gdebug.h
<br>
gs/base/gsmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 19:37:52 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1a8b636cc4fe9419b31ed21c62b6e8d40fa4f1e">f1a8b636cc4fe9419b31ed21c62b6e8d40fa4f1e</a>
<blockquote>
<p>
    Fix warning; remove static definition for non-existent function.
<br>

<br>
    I added, then removed a function, and left a static prototype in place
<br>
    that was causing a warning. Remove that.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/psi/imainarg.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 19:04:13 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=370a5fae98c76c76df84ad35f79ce849a7ecf015">370a5fae98c76c76df84ad35f79ce849a7ecf015</a>
<blockquote>
<p>
    Add 'implication' table for gs_debug operations.
<br>

<br>
    Previously setting an upper case debug flag would imply the lower case
<br>
    equivalent. Now we extend (break) that system so that any flag can
<br>
    imply any other flag (and indeed we can have a chain of implied flags).
<br>

<br>
    This frees up lots of uppercase flags for us to use.
<br>

<br>
gs/base/gdbflags.h
<br>
gs/base/gdebug.h
<br>
gs/base/gsmisc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 16:27:57 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d644cdc4b16cb92a70af3fea16c40cd39bc700a6">d644cdc4b16cb92a70af3fea16c40cd39bc700a6</a>
<blockquote>
<p>
    Add new 'long form' debugging flags.
<br>

<br>
    Add a table of 'known' debugging flags to ghostscript (gdbflags.h). These
<br>
    list all the currently defined -Z flags, together with 'long form' names
<br>
    for them (i.e. --debug=tiling will do the same as -Zt).
<br>

<br>
    Add a new routine to list the known flags (and hook this up so that
<br>
    --debug on the command line lists the flags).
<br>

<br>
    Add a new routine to parse a set of flags passed to --define= on the
<br>
    command line (and hook that up).
<br>

<br>
    The code that does:
<br>

<br>
     if_debug6('c',...)
<br>

<br>
    all remains unchanged, but we now have the ability to add new flags,
<br>
    and to do:
<br>

<br>
     if_debug6(gs_debug_flag_whatever, ...)
<br>

<br>
    in the same way. This frees us from the limitations of only having
<br>
    a limited number of easily representable 'character' flags.
<br>

<br>
gs/base/gdbflags.h
<br>
gs/base/gdebug.h
<br>
gs/base/gsmisc.c
<br>
gs/doc/Use.htm
<br>
gs/ghostscript.vcproj
<br>
gs/psi/imainarg.c
<br>
pl/plmain.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 21:12:40 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b7bcf1a9efdbcd8c0ebac2eeece8c81f61d18396">b7bcf1a9efdbcd8c0ebac2eeece8c81f61d18396</a>
<blockquote>
<p>
    Tiny whitespace fix.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 08:28:31 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f9f50966fe6baecb1c9ebefa44594e7c21d9d194">f9f50966fe6baecb1c9ebefa44594e7c21d9d194</a>
<blockquote>
<p>
    Make common warning message only output when pcl font parsing
<br>
    debugging is enabled (-Z=).
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
pl/plfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-25 10:05:53 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf7e75532e0f16c819954b71a686fb5b83c47c61">cf7e75532e0f16c819954b71a686fb5b83c47c61</a>
<blockquote>
<p>
    Add UTF-8 as an output option to the txtwrite device.
<br>

<br>
    The TextFormat parameter now has three values; 0, 1 or 2 to allow for 'XML'
<br>
    output with full information, simple UCS2 or simple UTF-8 output.
<br>

<br>
    Altered the meanings of the TextFormat so that 0 is now the 'XML' output
<br>
    which allows a more sensible selection of 1 for UCS2 or 2 for UTF-8, since
<br>
    these output foramts are otherwise identical. Modified the default to be
<br>
    '2' (UTF-8).
<br>

<br>
    Updated the documentation in devices.htm.
<br>

<br>
    Also removed a number of C++ comments.
<br>

<br>
    No differences expected, this device is not cluster tested.
<br>

<br>
gs/base/gdevtxtw.c
<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-24 16:48:44 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5fa52b7e60a7eb23b77c4fd117ed37eb04263b5">b5fa52b7e60a7eb23b77c4fd117ed37eb04263b5</a>
<blockquote>
<p>
    Bug #692621 Ensure that when copying width information, we create an array as large as the new MaxCID value
<br>

<br>
    Commit 312255297353a9f62b5090e9137586a8ecfc8601 create the new MaxCID entry
<br>
    for CIDFont type 0 fonts which use a GlyphDirectory. We must use the same
<br>
    value when creating the arrays to store the widths of the glyphs, or we will
<br>
    no have a large enough array, leading to soem glyphs getting the Default Width.
<br>

<br>
    No differences expected
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-22 19:43:48 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33e827eb32d282a550e2f7a9fdb786dd777b0903">33e827eb32d282a550e2f7a9fdb786dd777b0903</a>
<blockquote>
<p>
    Bug 692622: spurious warnings on Indexed colour spaces.
<br>

<br>
    Fix indexed color space processing code that miscalculated
<br>
    the length of an index table when the table stream was compressed.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-20 22:11:00 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ebbcae24116a37b2f32f52bc7330383752f903f">7ebbcae24116a37b2f32f52bc7330383752f903f</a>
<blockquote>
<p>
    Fix bug 692618. Clear pointers to compressed color structured in pdf14 device.
<br>

<br>
    After the devn compressed color structures were freed, the pointers were not reset to
<br>
    NULL so subsequent GC would trace into freed or re-used memory. -Z? showed errors and,
<br>
    depending on memory contents and usage could result in a seg fault. Also add 'mem'
<br>
    element to the compressed_color_list structure to be used when freeing to avoid
<br>
    confusion about the correct allocator.
<br>

<br>
    Issue with non-encodable colors is _not_ fixed by this, only the segfault.
<br>

<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevdevn.h
<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-21 23:27:50 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a298a05dcf4ce3f1f530759680a2f65c3e72e3fc">a298a05dcf4ce3f1f530759680a2f65c3e72e3fc</a>
<blockquote>
<p>
    Fix to handle tiff associated alpha images correctly in XPS
<br>

<br>
    TIFF images in XPS can come with an alpha channel that may or may
<br>
    not be premultiplied.  In our existing XPS flow, we currently store
<br>
    the alpha channel in a separate channel and treat it as an image mask
<br>
    in the graphics library.  This is fine, but if the image data was
<br>
    premultiplied by the alpha data, we will need to undo this operation
<br>
    otherwise we end up applying the mask on image data that is already
<br>
    scaled by the alpha data.
<br>

<br>
xps/xpstiff.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-21 10:52:26 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=312255297353a9f62b5090e9137586a8ecfc8601">312255297353a9f62b5090e9137586a8ecfc8601</a>
<blockquote>
<p>
    Font copying does not work with CIDFonts using dictioanry form of GlyphDirectory
<br>

<br>
    Bug #692573, the font copying code uses 'slots' to record glyph data, which
<br>
    are entries in an array. The index into the array can be a name or a CID.
<br>

<br>
    This assumes that CIDCount (the number of glyphs in the font) is the same as
<br>
    the maximum CID (ie the range is continuous), which is generally true.
<br>
    However, the dictionary form of GlyphDirectory allows for discontinuous CIDs.
<br>
    This meant that the array was too small to use the CID as an index.
<br>

<br>
    Fixing this efficeintly would mean completely rewriting the code in gxfcopy.c
<br>
    so that it uses some kind of dictionary structure instead of an array. Instead
<br>
    I've chosen to find the highest CID in the font (by enumerating the GlyphDirectory)
<br>
    and use that to create he array with enough entries. Inefficient use of memory
<br>
    but it saves having to re-architect the code.
<br>

<br>
    The text that was previously missing is now present, and this reveals a new
<br>
    problem, some of the text is incorrectly spaced after conversion with pdfwrite.
<br>
    I'll open this as a new bug.
<br>

<br>
    No differences expected
<br>

<br>
gs/base/gxfcid.h
<br>
gs/base/gxfcopy.c
<br>
gs/psi/zfcid.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-20 23:04:31 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=41faddadc03e389f4f1b3c3d9a4f6bdf36ebbfb1">41faddadc03e389f4f1b3c3d9a4f6bdf36ebbfb1</a>
<blockquote>
<p>
    Fix for bug 692511  Dash cap rendering in XPS
<br>

<br>
    There was an issue that we were setting both the end cap and the dash
<br>
    caps to the starting cap value for the stroke when we went through
<br>
    clist rendering.  Page mode worked correctly.  Clusterpush shows no
<br>
    diffs with XPS rendering since all tests are done in Page mode.
<br>

<br>
gs/base/gxclpath.c
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 23:27:30 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91dc74950f0a9ce391de0f0f1f0be5220a68db04">91dc74950f0a9ce391de0f0f1f0be5220a68db04</a>
<blockquote>
<p>
    Fix for Bug 692510 white space XPS interpreter fix
<br>

<br>
    XPS interpreter was not very robust in its handling of white space in
<br>
    many locations.  I created a general function to handle this in place
<br>
    of the many uses of sscanf in the interpreter.
<br>

<br>
xps/ghostxps.h
<br>
xps/xpsgradient.c
<br>
xps/xpspath.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 14:53:30 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=856eedc584a224bd311fa7688fc29ba487521dfb">856eedc584a224bd311fa7688fc29ba487521dfb</a>
<blockquote>
<p>
    Fix for Bug 692509.  Issues with parsing of dashed line attributes.
<br>

<br>
    Problem was caused by a space preceding the ending quote, which gave
<br>
    the dashed line lengths.
<br>

<br>
xps/xpspath.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 10:29:18 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3d3e4f5d6e83539fc5a5877ef6d1e3591ec25c49">3d3e4f5d6e83539fc5a5877ef6d1e3591ec25c49</a>
<blockquote>
<p>
    Memento buld tweak; valgrind warnings quieted for temporary buffers.
<br>

<br>
    Temporary buffers are used in the planar device and the color halftoning.
<br>
    These are uninitialised by default, which means that the last 'part byte'
<br>
    transferred is thought of as being undefined in valgrind.
<br>

<br>
    In memento builds we memset them to 0 to avoid this.
<br>

<br>
    CLUSTER_UNTESTED as memento builds are not testing in the cluster.
<br>

<br>
gs/base/gdevmpla.c
<br>
gs/base/gxcht.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 10:25:27 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=99f7cf83e2bef8b1d61126c065328f7f91ba1fce">99f7cf83e2bef8b1d61126c065328f7f91ba1fce</a>
<blockquote>
<p>
    Add some more excludes to the clusterpush.pl rsync.
<br>

<br>
    Specifically, avoid the memento, profiling and 64bit directories
<br>
    as well as any .pngs.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 10:23:14 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bace25f82cd2d84d951a33eb5a9797435f50b836">bace25f82cd2d84d951a33eb5a9797435f50b836</a>
<blockquote>
<p>
    Remove rop_source member from gxp1fill.c
<br>

<br>
    When set, this member variable was only ever set to be the same as
<br>
    the 'source' member variable, and then forced to be non-NULL.
<br>

<br>
    By doing this forcing at the last moment, we get exactly the same
<br>
    behaviour with less confusing code.
<br>

<br>
    No differences shown during cluster testing.
<br>

<br>
gs/base/gxp1fill.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-19 17:31:47 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e383ccc9e7f56435a8f89cf65125ee1eb6a880e5">e383ccc9e7f56435a8f89cf65125ee1eb6a880e5</a>
<blockquote>
<p>
    Fix FAPI charpath handling.
<br>

<br>
    The way FAPI appended the segments of a charpath to the current path was
<br>
    incorrect, and in extremely rare cases could cause an error (due to an
<br>
    attempt to draw outside the established bounding box in the path
<br>
    structure).
<br>

<br>
    ps3cet/11-20.PS now runs without a &quot;Font Renderer Plugin .... error&quot;
<br>

<br>
    Other than 11-20.PS, no cluster differences expected.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-18 22:12:24 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=357009d7fc55166a6e8f9da539e1f785d05e9b6c">357009d7fc55166a6e8f9da539e1f785d05e9b6c</a>
<blockquote>
<p>
    Maintain 16bit precision in threshold array creation.
<br>

<br>
    Also add option to output either 8bit or 16bit data
<br>
    including a type 16 halftone dictionary
<br>

<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 12:26:17 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d0f6ec0fc64eba04cc85693d16bc7158599578b">4d0f6ec0fc64eba04cc85693d16bc7158599578b</a>
<blockquote>
<p>
    Fix bug 691978: Ignore PS vmreclaim requests for GC. Only GC when vmthreshold exceeded.
<br>

<br>
    Some poorly designed PostScript creators make liberal use of '2 vmreclaim' which would
<br>
    trigger a full GC (mark/scan/reloc) pass each time. The document with the bug did this
<br>
    &gt; 10,000 times. Since the vmthreshold already triggers GC when the allocated amount
<br>
    exceeds the threshold, we don't need to really do anything when a job requests GC.
<br>
    Change &quot;internal&quot; (infrequent) interpreter uses to use '2 .vmreclaim'. Speeds up the
<br>
    file from the bug by 79X !
<br>

<br>
    Also fix areas that didn't update i_ctx_p after running the interpreter (which may do
<br>
    a GC) and a minor typo in gs.c noticed while scanning for all instances of this.
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/psi/gs.c
<br>
gs/psi/idisp.c
<br>
gs/psi/imain.c
<br>
psi/psitop.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 20:48:26 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bcfc1a94c76d84511cec09673e220b8bf15823e9">bcfc1a94c76d84511cec09673e220b8bf15823e9</a>
<blockquote>
<p>
    Make it possible to output turn on sequence for ordered dithered screens
<br>

<br>
    This enables us to use the linearize_threshold program that Ray wrote to apply a TRC
<br>
    to our screen.
<br>

<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 15:57:50 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=253285f2a4cb681d601817185d6dba083d8b117e">253285f2a4cb681d601817185d6dba083d8b117e</a>
<blockquote>
<p>
    Addition of support for different vertical and horizontal resolution in ordered dithered screen creation.
<br>

<br>
    The support for this was already in place in the code.  It was only was a matter of getting the parameters set.
<br>

<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 20:15:56 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=312a786bd935908c2c0c0cb428ae066b7f01a8e3">312a786bd935908c2c0c0cb428ae066b7f01a8e3</a>
<blockquote>
<p>
    Fix pxlasm.py on windows.
<br>

<br>
    pxlasm.py outputs to stdout. On windows stdout is not binary safe by
<br>
    default. Fix it with a couple of lines cribbed from stackoverflow.
<br>

<br>
    I have now successfully used pxldis and pxlasm on windows.
<br>

<br>
tools/pxlasm.py
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 11:08:18 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f20243b7ec6ea8f6a9b7826ac8ca2e1cebbacda">0f20243b7ec6ea8f6a9b7826ac8ca2e1cebbacda</a>
<blockquote>
<p>
    Fix longstanding color halftone limitation.
<br>

<br>
    gx_dc_ht_colored_fill_rectangle in gxcht.c contains a long standing
<br>
    limitation (bug/defect), in that when doing strip_copy_rop with
<br>
    subrectangles, it fails to offset the source samples for each call.
<br>
    This is noted in the form of a comment.
<br>

<br>
    This is fixed here.
<br>

<br>
    There appears to be an underlying bug in this code (or in the code it
<br>
    calls) in that the 'optimisation' case (do it all in a single
<br>
    tile, rather than subdividing) gives different results to the normal
<br>
    (subdividing) case. See bug 692609.
<br>

<br>
    This can be shown with tests_private/pcl/pcl5cats/Subset/PWEP6SC1.BIN
<br>
    at 300dpi with or without banding to the plank or pamcmyk4 device.
<br>

<br>
    The limitation that this patch fixes does NOT solve the problem - but
<br>
    I fixed it in the hopes that it would. Committing the code here as it's
<br>
    an improvement anyway.
<br>

<br>
gs/base/gxcht.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-17 00:35:20 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=85e64010450ebafb453b4028356a6ccd20e440b8">85e64010450ebafb453b4028356a6ccd20e440b8</a>
<blockquote>
<p>
    Bug 692574: libjasper: creating temp failed due to buffer overflow.
<br>

<br>
    Increase the size of a temp file buffer to accomodate larger path names
<br>
    needed for mkstemp (instead of tmpnam that was used originally).
<br>
    Thanks to Henk Jan Priester for the patch.
<br>

<br>
gs/jasper/src/libjasper/include/jasper/jas_stream.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 23:00:03 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2e92d2916a189d19213d830956a2e02f7cfb6872">2e92d2916a189d19213d830956a2e02f7cfb6872</a>
<blockquote>
<p>
    Addition of dot shape specification in ordered dither screen threshold array creation.
<br>

<br>
    This provides a number of example dot shapes including, circles, diamonds, lines and
<br>
    inverted circles.  Also cleaned up the code a bit.
<br>

<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 19:17:34 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9cbeac223ffa44dd6cac3954e1f420501d5f29ae">9cbeac223ffa44dd6cac3954e1f420501d5f29ae</a>
<blockquote>
<p>
    Silence a clang warning
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 17:07:38 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7b498fc5e1d0532f60e70e244edfc58bbeb18a50">7b498fc5e1d0532f60e70e244edfc58bbeb18a50</a>
<blockquote>
<p>
    Fix planar device bug; tiles becoming corrupted on gc.
<br>

<br>
    The relocation code for memory devices had not been updated to cope
<br>
    with planar stuff; as such only the first 'mdev-&gt;height' line pointers
<br>
    were being updated. This was showing up in plank vs pamcmyk4 testing
<br>
    as some planes of patterns being corrupted.
<br>

<br>
gs/base/gdevmem.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 15:17:49 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=419d3f8f787d90a71623b27100972eca64d03cc1">419d3f8f787d90a71623b27100972eca64d03cc1</a>
<blockquote>
<p>
    Better preservation of PDF text rendering modes in pdfwrite.
<br>

<br>
    Bug #688267, #692243. The 'swapcolors' is now moved into pdfwrite, instead
<br>
    of being performed in PostScript in the PDF interpreter. The 'spaced'
<br>
    variants of show now perform simlar techniques to the 'pdfwrite' text rendering
<br>
    routines, when teh device supports text rendering modes.
<br>

<br>
    Caveats: pdfwrite always emits text enclosed in gsave/grestore. Because of
<br>
    this we cannot preserve any of the text rendering modes involoving clipping
<br>
    as the grestore also restores the clip path! So we subtract 4 from the mode
<br>
    and emit the text that way, then handle the clip separately.
<br>

<br>
    Because text_process doesn't expect to receive gs_error_Remap_Color errors
<br>
    (which cause the interpreter to run Pattern PaintProcs usually) we can't
<br>
    set the stroke colour during text processing (which is how it worked before).
<br>
    Instead we set the colours during text_begin. We don't actually write the colours
<br>
    to the PDF file at that point though, because that causes problems synchronising
<br>
    graphics states. Instead we leave the emission of the colour unchanged, we
<br>
    just evaluate the colours in text_begin.
<br>

<br>
    There is some weirdness in the PDF interpreter which I do not understand.
<br>
    Most cases are surrounded by 'currentlinewidth exch.......setlinewidth'
<br>
    which preserves the current line width in case we have to change it for
<br>
    stroked text. In one case, however, this causes files to fail with an error.
<br>

<br>
    I have tried without success to unravel the PDF interpreter to figure out
<br>
    what is going on. Since I can't work it out I have created a dictionary,
<br>
    stored the linewidth in that, and then pulled it back out and restored at
<br>
    the end. I did try wrapping a gsave/grestore round the operation (taking
<br>
    care to preserve the modfified currentpoint) but that caused even more
<br>
    problems. Again I have no idea why.
<br>

<br>
    I would like Alex to look into this so I'm leaving one of the bugs open
<br>
    and re-assigning to him. Also he will probably want to reformat the code
<br>
    I've added to the PDF interpreter.
<br>

<br>
gs/Resource/Init/pdf_ops.ps
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfg.c
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdts.c
<br>
gs/base/gdevpdts.h
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gserrors.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 10:40:27 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83d6f1c5d048d70e89c3e13ef11f87a28e414a7a">83d6f1c5d048d70e89c3e13ef11f87a28e414a7a</a>
<blockquote>
<p>
    Squash a couple of warning in the previous commit.
<br>

<br>
    No functional change.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-14 10:19:15 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=056c8a6dc2409db6ac06ead1fc1b58b277400b04">056c8a6dc2409db6ac06ead1fc1b58b277400b04</a>
<blockquote>
<p>
    Bug 692578: improve FAPI/FT handling of non-square resolutions
<br>

<br>
    The previous code only worked correctly for glyphs rotated by a multiple
<br>
    of 90 degrees, any interim rotation would show a shearing effect.
<br>

<br>
    We'll now apply the &quot;non-squareness&quot; scaling in the matrix, rather in the
<br>
    resution which we pass to Freetype. We have to do this because Freetype
<br>
    treats the resolution as being in &quot;glyph space&quot;, which means it is &quot;incorrect&quot;
<br>
    for any rotated/sheared glyph.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 22:16:52 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b49fc2b7fbd16c81a3480660d27d36ebe94ab6d2">b49fc2b7fbd16c81a3480660d27d36ebe94ab6d2</a>
<blockquote>
<p>
    Fix Bug 692584. Fix wrong sprintf format specifier types. Thanks to Arthur Ford.
<br>

<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-11 16:08:00 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c5cc5db0746981baaad4c07cca370541254e03be">c5cc5db0746981baaad4c07cca370541254e03be</a>
<blockquote>
<p>
    Fix PDFFitPage when PDF orientation doesn't match page orientation.
<br>

<br>
    There was logic to determine if the pdf Box (after /Rotate is applied) orientation
<br>
    matches the orientation of the PageSize (landscape vs. portrait), but the rotation to
<br>
    make the image match the Page orientation was missing. Previously this caused the
<br>
    scaling to be wrong and caused the image to be clipped. Adding the 90 degree rotate
<br>
    fixes it. Feature needed by customer 531.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 20:15:51 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6accc37afd5d124c1feaea6481a771f2d1e6662">c6accc37afd5d124c1feaea6481a771f2d1e6662</a>
<blockquote>
<p>
    Solve more plank rop problems with the clist.
<br>

<br>
    In the planar memory device, protect against C's broken %. As we don't
<br>
    replicate the textures, ensure we only set the size for a single repetition.
<br>

<br>
    When placing new tiles into the clist, ensure we calculate the number of
<br>
    bytes used correctly (previously reuse of tile n would fail as tile n+1
<br>
    would have overwritten its data).
<br>

<br>
gs/base/gdevmpla.c
<br>
gs/base/gxclbits.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 17:22:49 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0d472d36958ba10ce3e5747f91776ad2d53530c7">0d472d36958ba10ce3e5747f91776ad2d53530c7</a>
<blockquote>
<p>
    Bug 692534: revert to unit matrix for Microtype fonts.
<br>

<br>
    I changed the MT fonts to use a &quot;conventional&quot; Type 1 font matrix to
<br>
    make a Quality Logic file &quot;work&quot; as expected - it's a daft test which
<br>
    makes the invalid assumption that the fonts in the standard font set
<br>
    will *always* use a 1000x1000 design matrix. That assumption is invalid
<br>
    since nothing in the spec dictates that the standard fonts must be Type 1
<br>
    (clearly as in this case we're using MT fonts!), nor even that Type 1
<br>
    fonts have to use a 1000x1000 font matrix.
<br>

<br>
    As the change breaks a valid file, to try to satisfy a file which relies
<br>
    on an invalid assumption, I'm reverting it.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/Resource/Init/gs_fapi.ps
<br>
gs/psi/fapiufst.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 16:59:24 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1a9f315d20871be0498bd7a1fc94cbd2a47ebc4f">1a9f315d20871be0498bd7a1fc94cbd2a47ebc4f</a>
<blockquote>
<p>
    Bug 692550: address scanline alignment in halftone
<br>

<br>
    Apply Ghostscript's usual raster memory alignment to interim
<br>
    bitmap memory for the threshold halftone code. This ensures
<br>
    scanlines are correctly aligned for mem_mono_copy_mono(), and
<br>
    prevents a bus error on SPARC.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 16:23:45 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f6ed8f824fc3ca41ba0296131646d10e29657bda">f6ed8f824fc3ca41ba0296131646d10e29657bda</a>
<blockquote>
<p>
    Fix more plank rop problems (shown in plank vs pamcmyk4 testing)
<br>

<br>
    I'd missed one case where we are writing a texture bitmap to the clist,
<br>
    so we were only writing the first plane.
<br>

<br>
    I'd also missed a case when reading bits back from the clist (showed
<br>
    up with 1x1 textures).
<br>

<br>
gs/base/gxclbits.c
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 13:36:22 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d670fb3473fbb455881125086f649e416ea755fe">d670fb3473fbb455881125086f649e416ea755fe</a>
<blockquote>
<p>
    Bug 689450: deal with invalid font entry in res dict.
<br>

<br>
    In the event that an entry in a resource dictionary for a font is or
<br>
    references an invalid object type (i.e. not a dictionary), issue a
<br>
    warning and use the same logic as we do for a missing font resource.
<br>

<br>
    For this error, we'll also honor the PDFSTOPONERROR setting.
<br>

<br>
    In addition, as I was touching the logic around the same place, this
<br>
    commit changes the missing font resource case to also honor PDFSTOPONERROR.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-12 00:58:50 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=237f8f0204a7e11db79fa60ec21503cfd0953116">237f8f0204a7e11db79fa60ec21503cfd0953116</a>
<blockquote>
<p>
    Remove duplicated line from gxicolor.c
<br>

<br>
    In my previous commit I inadvertantly duplicated a line. Fixed here.
<br>
    No ill effects, but removing for neatness.
<br>

<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-11 22:07:39 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc7bfc56e9132ade936d92e397cc8820bb8a8115">fc7bfc56e9132ade936d92e397cc8820bb8a8115</a>
<blockquote>
<p>
    Fix uninitialised 'num_planes' in texture for strip_copy_rop call.
<br>

<br>
    Was causing some differences in plank vs pamcmyk4 testing.
<br>

<br>
gs/base/gxcht.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-11 10:02:48 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e96836194b0eb6085f59d41feb445d60f946dda9">e96836194b0eb6085f59d41feb445d60f946dda9</a>
<blockquote>
<p>
    Fix of bugs in halftone ordered screen creation code
<br>

<br>
    This fixes several bugs.  Including fixes for issues with modulo operation on negative numbers,
<br>
    integer division, faulty logic that prevented maximum lpi screens and non-dithered ordered screens.
<br>

<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-11 17:36:48 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fecf36b333ddac3e469512be536a498382741003">fecf36b333ddac3e469512be536a498382741003</a>
<blockquote>
<p>
    Fix Bug 692569; SEGV in threshold halftoning code.
<br>

<br>
    penum-&gt;xci can be negative in clist rendering of landscape cases.
<br>
    The % operator in C is broken (or at least counter-intuitive) so
<br>
    the code goes wrong; fix it up with some tweaks to the logic
<br>
    afterwards.
<br>

<br>
    In a future commit, we'll move from % 16 to &amp; 15 (does the right thing,
<br>
    and is a lot faster).
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-10 11:42:29 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ce12e824d7e4cb5e54f8ba730cbf6939d20834e">5ce12e824d7e4cb5e54f8ba730cbf6939d20834e</a>
<blockquote>
<p>
    Fix Bug 692224: Handle transparent background with custom fillpage in pngalpha
<br>

<br>
    The previous hack looked for the entire page being filled with white and then filled
<br>
    with transparent (0xffffffff). With a pngalpha_fillpage we simply fill with that color
<br>
    which actually allows the page to be filled with non-transparent white if desired.
<br>
    Remove the pngalpha_fill_rectangle hack.
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-09 01:10:38 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f790680acba5c1574728d5ff40124f9e27762d2a">f790680acba5c1574728d5ff40124f9e27762d2a</a>
<blockquote>
<p>
    Bug 692571: Fix ouf-of-buffer access in Luratech jb2 interface.
<br>

<br>
    Luratech jb2 library can requiet data outside of the input buffer
<br>
    if it is fed a corrupted data stream. The old code tried to detect
<br>
    this but failed because of the missed signed-to-unsighed promotion.
<br>

<br>
gs/base/sjbig2_luratech.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-07 21:36:55 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c760cef454473970972260b5b1c7ab078711e43d">c760cef454473970972260b5b1c7ab078711e43d</a>
<blockquote>
<p>
    Resolve more plank/pamcmyk4 differences (banding).
<br>

<br>
    When coding planar data into the clist, I'd missed the 'short' case,
<br>
    and so only the first plane was being coded; this was causing knock
<br>
    on effects of rectangles being wrong giving large blocks of color
<br>
    in the output.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-07 12:49:09 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=62166be1e0beaa765daf96b77a8e6b1ee99a9b52">62166be1e0beaa765daf96b77a8e6b1ee99a9b52</a>
<blockquote>
<p>
    Remove the 'return' from the macro gx_set_dev_color
<br>

<br>
    Macros shouldn't do a return, its highly surprising to a developer. In addition
<br>
    I need access to the return value for pdfwrite, and potentially other
<br>
    devices may do so as well. In this case the return value is Remap_color
<br>
    which happens when a Pattern is set.
<br>

<br>
    No differences expected in regression tests.
<br>

<br>
gs/base/gsdps1.c
<br>
gs/base/gsimage.c
<br>
gs/base/gspaint.c
<br>
gs/base/gstext.c
<br>
gs/base/gxccache.c
<br>
gs/base/gxdcolor.h
<br>
pl/plchar.c
<br>
pl/pldraw.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-06 07:24:57 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1225753bd332857b02e546d20bc35d821fd20f58">1225753bd332857b02e546d20bc35d821fd20f58</a>
<blockquote>
<p>
    Improve PDFFitPage to center the PDF Box on the page.
<br>

<br>
    This was requested by customer 531 and seems reasonable. We didn't document exactly
<br>
    where the PDF was placed on the page after 'fitting', so centering seems like an
<br>
    acceptable behavior, so I didn't add a command line option to lower/left position.
<br>
    If we get any complaints, we can add this.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-05 11:30:21 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d5f1e72357d77dbb03abe0442ac8b8b09d27ceb6">d5f1e72357d77dbb03abe0442ac8b8b09d27ceb6</a>
<blockquote>
<p>
    Fix bug 692568. Set up initial clist_color_info to match pdf14 device.
<br>

<br>
    For the funky RGBW device, since it is 4 component additive color the pdf14 logic chose
<br>
    a pdf14_clist_RGB_device which has 3 components and a depth of 24. The clist logic uses
<br>
    the clist_color_info.depth which was never set correctly to match the pdf14 device (depth
<br>
    = 24), so it wrote 32-bits and only read 24, causing the clist reader to bomb.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-04 10:30:56 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49e6b0c7144a4a694271e2f24edf03b16ecc14e1">49e6b0c7144a4a694271e2f24edf03b16ecc14e1</a>
<blockquote>
<p>
    Require CUPS_DEBUG2 to enable noisy gdevcups messages instead of just DEBUG
<br>

<br>
    Using a DEBUG build with the cups device was extremely slow and painful for complex
<br>
    files. This is easy to enable via build -DCUPS_DEBUG2 or uncommenting the #define
<br>
    in gdevcups.c
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-03 19:51:15 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=77e2fb25375f50389bfe6942507a0a513fa83ee9">77e2fb25375f50389bfe6942507a0a513fa83ee9</a>
<blockquote>
<p>
    Fix for Bug 692507
<br>

<br>
    The image interpolation code did not make use of the proper unpacking
<br>
    routine when the data was 16bit and we were using the faster ICC
<br>
    based renderer, which avoided the conversion to the frac type.
<br>

<br>
gs/base/gxino16b.c
<br>
gs/base/gxiscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-03 17:15:53 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e776cc41b9da0a535adde126464d6af906b082ae">e776cc41b9da0a535adde126464d6af906b082ae</a>
<blockquote>
<p>
    Fix for Bug 692553; SEGV in fast thresholding halftoning code.
<br>

<br>
    Stupid C got the % operation wrong.
<br>

<br>
    In this instance, it gives an unexpected negative value causing out of
<br>
    bounds offsets. Simple fix is to offset by the period if it's negative.
<br>

<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-29 19:07:44 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3420c5c029771eee268d049fe9b6869221b18d48">3420c5c029771eee268d049fe9b6869221b18d48</a>
<blockquote>
<p>
    Add num_planes to gx_strip_bitmap for planar devices.
<br>

<br>
    Here we alter all existing uses (that I can find) to set num_planes
<br>
    as appropriate.
<br>

<br>
    We update the clist code to encode/decode the new num_planes field. In
<br>
    order to fit the extra bit required to signal that this is present into
<br>
    the encoding byte we optimise the representation of depth down to 4 bits
<br>
    from 5.
<br>

<br>
    We remove the lop_t_is_planar hack as we now have a cleaner scheme for
<br>
    signalling it.
<br>

<br>
    This should hopefully remove the last differences between pamcmyk4 and
<br>
    plank.
<br>

<br>
gs/base/gdevdbit.c
<br>
gs/base/gdevdrop.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevmr2n.c
<br>
gs/base/gsptype1.c
<br>
gs/base/gsropt.h
<br>
gs/base/gxbitmap.h
<br>
gs/base/gxcht.c
<br>
gs/base/gxclbits.c
<br>
gs/base/gxcldev.h
<br>
gs/base/gxclimag.c
<br>
gs/base/gxclist.h
<br>
gs/base/gxclrast.c
<br>
gs/base/gxht.c
<br>
gs/base/gximage3.c
<br>
gs/base/gxp1fill.c
<br>
gs/base/gxpcmap.c
<br>
gs/doc/Drivers.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-10-02 22:26:58 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8e6d888502506e061241f2cdeb7c3f76d4dfb04f">8e6d888502506e061241f2cdeb7c3f76d4dfb04f</a>
<blockquote>
<p>
    Bug 692560: read objects with invalid obj# as nulls.
<br>

<br>
    According to PDF spec, objects with invalid object numbers should
<br>
    be considered null objects. GS finally implements this.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-30 12:46:53 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3380bef5e77ddfaa8aab496a4da13fd297480bd1">3380bef5e77ddfaa8aab496a4da13fd297480bd1</a>
<blockquote>
<p>
    Fix for bug 692558
<br>

<br>
    Issue was that the pdf14 device profile was getting set from an ICC profile that
<br>
    was contained in the source profile for the transparency group.  This needs to
<br>
    be detected when we are getting the device parameters.
<br>

<br>
gs/base/gsdparam.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-30 17:52:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b39b7cbfcf8719b9f41153ccf6172fbf8f800642">b39b7cbfcf8719b9f41153ccf6172fbf8f800642</a>
<blockquote>
<p>
    Some tweaks to allow &quot;make so&quot; to build in Mac OSX.
<br>

<br>
    The change still results in a &quot;.so&quot; object file, rather than usual Mac
<br>
    &quot;.dylib&quot; file, but other than the name, they are internally identical.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/unix-dll.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-30 16:00:51 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b295fcef1b5a32e299f50f99248ae05099bd757d">b295fcef1b5a32e299f50f99248ae05099bd757d</a>
<blockquote>
<p>
    Remove the option to build with an external LCMS
<br>

<br>
    Given the extent which our bundled LittleCMS has diverged from the
<br>
    official release, remove the capability to build with another, at least
<br>
    until there is an lcms release incorprating the fixes we require.
<br>

<br>
    No cluster differences
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-30 10:30:05 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=54ee17d027c6be432a742ca5d313a56ac317361f">54ee17d027c6be432a742ca5d313a56ac317361f</a>
<blockquote>
<p>
    Bug 692561: fix handling of tr 3 in setshowstate
<br>

<br>
    In setshowstate we have to work around buggy PDFs in a manner which
<br>
    means we &quot;show&quot; the text in question, but then rely on a charpath
<br>
    operation to update the current point accurately. The problem was
<br>
    that the currentpoint had already been updated by the show operation.
<br>

<br>
    This change ensures we return the currentpoint to the correct position
<br>
    before doing to charpath to get the accurate text advance.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/Resource/Init/pdf_ops.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-29 15:45:04 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=63f2476edccc4860312737b61e86c929c340cb72">63f2476edccc4860312737b61e86c929c340cb72</a>
<blockquote>
<p>
    Bug 692557: Tolerate null XObjects
<br>

<br>
    Check for null XObjects during PDF resource enumeration and
<br>
    ignore them. Since null objects can appear anywhere in PDF file,
<br>
    the sample file was OK, but GS didn't handle this case before.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-28 20:44:53 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=03b20ec31afa843d5a4bac878568f60abcdea5fc">03b20ec31afa843d5a4bac878568f60abcdea5fc</a>
<blockquote>
<p>
    Fix for Bug 692494 and Bug 692433.  Overprint issues.
<br>

<br>
    The fix for bug 692494 involved making sure that we use the original floating point values in
<br>
    determining if we have a nonzero component so that overprint mode occurs properly
<br>
    for very small values.  Thanks to Ken and Ray for the initial analysis on this bug.
<br>

<br>
    A study of 692433 revealed that AR does not do overprint simulation when the source
<br>
    ICC profile does not match the destination profile.  To test this, I created a
<br>
    test file that had 2 overlapping fills with CMYK values that were specified by
<br>
    SWOP CMYK values.  If the simulation profile in AR matched this profile, then overprinting
<br>
    was properly displayed by AR.  If not, then overprinting was not displayed.  This
<br>
    makes sense as the overprinted inks really should be in the color space for the
<br>
    target device.   Hence, if the source and destination profiles do not match we will
<br>
    not be showing overprint  This test file is called overprint_icc.pdf and will be added to
<br>
    our test files.
<br>

<br>
gs/base/gscspace.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-29 16:15:01 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86bd5228ef5f88b747dd228a4b90938d3c9defa5">86bd5228ef5f88b747dd228a4b90938d3c9defa5</a>
<blockquote>
<p>
    Speed optimisations to bmpcmp
<br>

<br>
    pam/pnm/pgm reading was using repeated fgetc calls. Change it here to
<br>
    use fread and then shuffle the buffer around.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-29 16:03:06 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b60dc77805746ca685e272abe9b3f056320d612">9b60dc77805746ca685e272abe9b3f056320d612</a>
<blockquote>
<p>
    Partial fix for planar device pattern rop problems.
<br>

<br>
    plank vs pamcmyk4 tests have revealed various files still rendering wrongly
<br>
    in plank format. These are to do with a halftone being rendered as a pattern
<br>
    and then used as part of a rop.
<br>

<br>
    Specifically, if the 'rop source' device is used, then it is fed a pattern
<br>
    tile that is in planar format. When this calls strip_copy_rop, the pattern
<br>
    tiles data is used as the 'T' field; strip_copy_rop assumes that both T
<br>
    and S are always in chunky format, and so garbage is read for the T plane.
<br>

<br>
    The fix, implemented here, is to spot that the pattern tile is planar, and
<br>
    to set a new bit (lop_t_is_planar) in the lop to indicate this fact. The
<br>
    planar device can then catch this bit and can handle it.
<br>

<br>
    Currently, this is implemented by doing a planar_to_chunky operation into
<br>
    a temporary buffer, performing the strip_copy_rop, and then freeing the
<br>
    buffer. Later we may well implement cores that can cope with the common
<br>
    cases with T being still in planar form.
<br>

<br>
    This commit only fixes unbanded operation; currently when the clist writer
<br>
    puts the tile into the clist, it has no way of indicating that the tile
<br>
    is in planar format, hence only writes 1/4 of the data. I need to talk to
<br>
    Ray and Michael about this. This is broken already, so this commit shouldn't
<br>
    make anything worse.
<br>

<br>
    I have updated the docs (out of date since 1998, at least) in related areas,
<br>
    and fixed some broken english.
<br>

<br>
gs/base/gdevdrop.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gsropt.h
<br>
gs/base/gxcht.c
<br>
gs/base/gxp1fill.c
<br>
gs/doc/Drivers.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-29 14:35:12 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d4741818da0a3f9a5a7ab98c328795dde6f850cb">d4741818da0a3f9a5a7ab98c328795dde6f850cb</a>
<blockquote>
<p>
    Add Memento targets to unix/autoconf makefiles.
<br>

<br>
    Add new targets to unix makefiles (pcl-memento, xps-memento etc) that
<br>
    build executables into memobj. Parallels the work done with the windows
<br>
    builds.
<br>

<br>
Makefile
<br>
common/ugcc_top.mak
<br>
gs/base/Makefile.in
<br>
gs/base/macosx.mak
<br>
gs/base/ugcclib.mak
<br>
gs/base/unix-end.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-18 17:01:43 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fe8d7b6aebfed3c724a860e31ff170764d5429dc">fe8d7b6aebfed3c724a860e31ff170764d5429dc</a>
<blockquote>
<p>
    Fix bug 692372: Add finalize for imager_state to ref_count decrement icc structs.
<br>

<br>
    The graphics atates were being freed by the 'alloc_restore_all' done during gs_lib_finit
<br>
    but the icc_link_cache was not getting its ref_count decremented, so it never freed the
<br>
    semaphore which caused handles to be lost by windows. The rc_gsicc_profile_cache_free
<br>
    function is also fixed to save the 'next' pointer to avoid dereferencing freed memory.
<br>

<br>
    Note that we _should_ be able to call gs_imager_state_release to decrement the counts
<br>
    of ALL of the elements, but the ref counting of the other elements is _so_ badly
<br>
    maintained that some elements (dev_ht and halftone) are prematurely freed by this.
<br>
    This change is enough to fix the bug and pass cluster regression.
<br>

<br>
gs/base/gsicc_profilecache.c
<br>
gs/base/gsistate.c
<br>
gs/base/gsstate.c
<br>
gs/base/gxistate.h
<br>
gs/base/gzstate.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-28 09:33:31 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02bdba18be7f2b78ca03d3f4126cef830eab28eb">02bdba18be7f2b78ca03d3f4126cef830eab28eb</a>
<blockquote>
<p>
    Fixes 692544, an &quot;off by one&quot; error in the parser caused a pcl data
<br>
    scanning command at the end of a stream to be skipped.  No expected
<br>
    differences.
<br>

<br>
pcl/pcparse.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-28 09:32:07 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f21756f217abc06b41d09946cffad083c8992ac5">f21756f217abc06b41d09946cffad083c8992ac5</a>
<blockquote>
<p>
    Change to new indenting style, no expected differences.
<br>

<br>
pcl/pcparse.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-28 11:29:27 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=326f67e01b02936dfdf5d51b918e3d1878765282">326f67e01b02936dfdf5d51b918e3d1878765282</a>
<blockquote>
<p>
    Bug 692551. Remove .min for compatibility with other interpreters.
<br>

<br>
gs/lib/prfont.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-27 11:36:28 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=48e7b9e6aaf93eded227a089b94f90db209476ff">48e7b9e6aaf93eded227a089b94f90db209476ff</a>
<blockquote>
<p>
    Fix for Bug 692378
<br>

<br>
    The function which decodes runs of compressed color values was not reseting
<br>
    the solid color value as we looped through the line.  So, if it was altered
<br>
    during one compressed color decode in the line, subsequent values were affected.
<br>

<br>
gs/base/gdevdevn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-27 09:15:59 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ddf450125929a9c261b3f7f99ec29c8da69b0207">ddf450125929a9c261b3f7f99ec29c8da69b0207</a>
<blockquote>
<p>
    Bug 692529: reduce potential rounding errors in FAPI/FT
<br>

<br>
    Tweak the heuristic used for avoiding over/underflow problems when converting
<br>
    scaling to pass into Freetype. This change distributes the over/underflow
<br>
    protection more evenly between Freetype's resolution, size and matrix
<br>
    parameters. This prevents the resolution parameter from getting excessively
<br>
    small, and grid fitting producing unacceptable rounding errors.
<br>

<br>
    This causes differences in about 20 cluster jobs, they are all small changes
<br>
    in the position of glyphs - neither regressions nor progressions.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-26 13:19:34 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f97a9171cfb7f1081040a7bd56c4238105e6865a">f97a9171cfb7f1081040a7bd56c4238105e6865a</a>
<blockquote>
<p>
    Fix for bug 692537
<br>

<br>
    Need to make sure that the color mapping information (what colorants are supported and what
<br>
    their index is) is updated in gx_set_overprint_DeviceN before setting up the overprint information.
<br>

<br>
gs/base/gscdevn.c
<br>
gs/base/gsovrc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-26 12:03:36 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=692f2f74da514b5ba42179ea357263aa77caacd7">692f2f74da514b5ba42179ea357263aa77caacd7</a>
<blockquote>
<p>
    Fix cmyk 1bpc planar rop SEGVs.
<br>

<br>
    The new cmyk 1bpc planar rop code does not cope with transparent rops.
<br>
    Reflect this in the if's surrounding the code that calls it.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-24 08:42:38 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3ee407fafffce3d680039f0f094081e46d9bc6d3">3ee407fafffce3d680039f0f094081e46d9bc6d3</a>
<blockquote>
<p>
    Fix so that fast thresholding code works with simple orders.
<br>

<br>
    Simple orders are those that are represented by shifts of a smaller template.
<br>

<br>
gs/base/gsht.c
<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 23:23:02 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=545cd811c4a2c33c472f302088a10a807e98d9be">545cd811c4a2c33c472f302088a10a807e98d9be</a>
<blockquote>
<p>
    Fix for Bug 692339
<br>

<br>
    Threshold creation code in the tiffsep1 code was not handled correctly when the dorder was a simple form
<br>
    that included a repeated shift.
<br>

<br>
gs/base/gdevtsep.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 20:26:09 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=24ff7262bc333194c27c463b88fd54a1217faac7">24ff7262bc333194c27c463b88fd54a1217faac7</a>
<blockquote>
<p>
    More optimisations to planar_cmyk4bit_strip_copy_rop
<br>

<br>
    Fix some bugs that would again only show up when width &gt; 8.
<br>

<br>
    Add a new case (the hairiest) to the function. The others should all be
<br>
    easier from here on in if we decide to do them.
<br>

<br>
    CLUSTER_UNTESTED as plank is not enabled on pcl yet.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 17:00:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5688545987a05f38359298e7649bdebe8e87dcaf">5688545987a05f38359298e7649bdebe8e87dcaf</a>
<blockquote>
<p>
    Bug 692532: fix setting the ICCProfilesDir userparam
<br>

<br>
    Change from .setuserparams to .setuserparams2 when setting the
<br>
    ICCProfilesDir entry so that the Postscript world dictionary gets updated
<br>
    along with the internal values stored in the current context.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 16:35:10 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f7a01d98266270908f041b1d2b78b2777cc577a8">f7a01d98266270908f041b1d2b78b2777cc577a8</a>
<blockquote>
<p>
    Fix to planar_cmyk4bit_strip_copy_rop.
<br>

<br>
    The previous version would have gone wrong for any use of the new case
<br>
    where width &gt; 8. I missed this as (presumably) my test case doesn't
<br>
    exercise the new code, and the cluster is not testing plank on pcl files.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 15:16:38 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2946424a03da33d2f00d27626c4692f8942f7f04">2946424a03da33d2f00d27626c4692f8942f7f04</a>
<blockquote>
<p>
    More planar_cmyk4bit_strip_copy_rop optimisations.
<br>

<br>
    Firstly, fix a bug that was present in the previous version; cproc,
<br>
    mproc and yproc could not be set when they were used. Also, we
<br>
    incorrectly failed to check for scolors being non NULL before calling
<br>
    this routine.
<br>

<br>
    We fix this latter problem, by implementing the scolors == NULL case.
<br>

<br>
    This drastically speeds up the time for pcl/pcl5cats/Subset/PL2KCSC2.BIN
<br>
    (plank 300dpi, banded).
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 12:09:03 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1f426395a41ef2fc8a68b24b9970194127d0def2">1f426395a41ef2fc8a68b24b9970194127d0def2</a>
<blockquote>
<p>
    Fix some minor compiler warnings introduced in commit
<br>
    237f153545faec22782b64016b5f14dabb4cf6ed
<br>

<br>
gs/base/gdevpsf1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 11:23:35 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7e048c5e4c4ea35d22801196af1e6bc8886e87d5">7e048c5e4c4ea35d22801196af1e6bc8886e87d5</a>
<blockquote>
<p>
    Bug 692532 (part): catch error return, prevent crash.
<br>

<br>
    This fixes the crash by catching an error, but doesn't fix the underlying
<br>
    problem of not finding the ICC profile file.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gstrans.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 11:03:24 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=237f153545faec22782b64016b5f14dabb4cf6ed">237f153545faec22782b64016b5f14dabb4cf6ed</a>
<blockquote>
<p>
    Bug #692488 add limited support for MM fonts to ps2write
<br>

<br>
    ps2write currently emits MM fonts with the WeightVector but no other parts
<br>
    of the font, and so it is not a valid MM font. However it also emits MM
<br>
    OtherSubr calls in the CharString, which is not legal and causes errors.
<br>

<br>
    This code parses (but does not interpret) the Subrs and CharStrings and
<br>
    removes the blending values, leaving only the base values.
<br>

<br>
    This is not a comprehensive solution, the parser can be defeated by a
<br>
    sufficiently convoluted CharString/Subr combination and in addition the
<br>
    code should really blend the vlaues instead of discarding them. This would
<br>
    require writing a new version of 'psf_convert_type1_to_type2' which emits
<br>
    type 1 CharStrings instead of type 2. The bug has been left open and
<br>
    converted to an enhancement to reflect this ambition.
<br>

<br>
    This code shows 2 progressions in the regression test suite:
<br>
    test-setweightvector.ps
<br>
    fts_20_2005.pdf
<br>

<br>
gs/base/gdevpsf1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-23 00:50:34 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=36a46a8bfdf60fb682d5acf200b9da7d5d57ed51">36a46a8bfdf60fb682d5acf200b9da7d5d57ed51</a>
<blockquote>
<p>
    Optimise mem_planar_copy_color_4to1 (table based version).
<br>

<br>
    Performance testing plank shows tests_private/comparefiles/knight.pdf
<br>
    taking a much longer time with plank than pamcmyk4. A large amount of
<br>
    time seems to be spend in mem_planar_copy_color_4to1.
<br>

<br>
    The implementation seems to fare badly on x86 due to branches skipping
<br>
    ahead that cannot be predicted. A table based implementation seems to
<br>
    halve the runtime of the problem file (300dpi, no banding).
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-22 18:14:06 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65092efad877169870f9d907eda46a9b8298c1aa">65092efad877169870f9d907eda46a9b8298c1aa</a>
<blockquote>
<p>
    Add special case code for rops in cmyk 1bpc planar space.
<br>

<br>
    We add special case code to speed planar rops. Should give identical
<br>
    results to the original method of doing it (planar_to_chunky, cmyk
<br>
    to rgb, apply rop, cmyk back to rgb and split out to planes), but
<br>
    rolls all that into a single traversal of the data, and doesn't
<br>
    call the map functions for every single pixel.
<br>

<br>
    Speeds 600 dpi unbanded planks processing of lj5200_pcl6_mono_PWTW51DC.prn
<br>
    from 58 seconds to 22.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-21 17:57:55 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=53900176669849e91b2563ea57568db41e55d2d9">53900176669849e91b2563ea57568db41e55d2d9</a>
<blockquote>
<p>
    Add special case for faster planar rops in greyscale and rgb modes.
<br>

<br>
    If we're doing a planar rop, and (S is either unused, or constant) and
<br>
    (T is either unused, or constant), and (we're in rgb or greyscale), then
<br>
    we can treat each component separately. This avoids pulling the planes
<br>
    together, converting to rgb, doing the rop, converting back to cmyk and
<br>
    splitting back out again.
<br>

<br>
    I had hoped to use a variant of this code to do cmyk rops too, but that
<br>
    turned out to be impossible; even if we 'rewrite' the rop on entry to
<br>
    change it from an rgb one to a cmy one, the non-orthogonal nature of the
<br>
    K plane bites us.
<br>

<br>
    CLUSTER_UNTESTED as not currently enabled on the cluster.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-21 17:48:51 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33e280b132b5527e4a9cb5683d10f9395f45bb92">33e280b132b5527e4a9cb5683d10f9395f45bb92</a>
<blockquote>
<p>
    Add map_color_rgb functions to cmyk plan devices (required for rops).
<br>

<br>
    Contrary to the documentation, it is important to provide a map_color_rgb
<br>
    so that rops work.
<br>

<br>
    CLUSTER_UNTESTED as only the plank device is enabled in testing, and that
<br>
    one is unchanged.
<br>

<br>
gs/base/gdevplan.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-21 17:39:45 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e2b027a201b1aeeebfff807a45f1e1cb021dc0e">1e2b027a201b1aeeebfff807a45f1e1cb021dc0e</a>
<blockquote>
<p>
    Add 24bit case to pack_planar_from_standard (also fix &lt;=8 bit case)
<br>

<br>
    pack_planar_to_standard is missing the 24 bit case; trivially add it in.
<br>

<br>
    Also, the &lt;= 8 bit case looks horribly broken to me; rewrite it here,
<br>
    keeping old code around in case I am (again) proven to be a loon.
<br>

<br>
    CLUSTER_UNTESTED as this code isn't executed in any tests currently.
<br>

<br>
gs/base/gdevdrop.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-21 16:18:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16aebf73c4eb716b5393bf0912b7b740a3867bf8">16aebf73c4eb716b5393bf0912b7b740a3867bf8</a>
<blockquote>
<p>
    Bug 692300: Allow cidfmap to have paths to CIDFont files
<br>

<br>
    Revise the cidfmap handling so that it can be used to point Ghostscript
<br>
    at Postscript CIDFont files that are outside the normal resource search
<br>
    path (i.e. not in &quot;Resource/CIDFont&quot;).
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/Resource/Init/gs_cidfm.ps
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-20 16:14:27 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=36925c8f0864e8ecd54625011696d4bcdbc26fcc">36925c8f0864e8ecd54625011696d4bcdbc26fcc</a>
<blockquote>
<p>
    Fix for bug 692517
<br>

<br>
    The icc_table member variable needs to be allocated in stable memory.  This way
<br>
    it is not freed during a restore.  This was occurring when we had a clist
<br>
    device member variable in a pattern followed by a restore.
<br>

<br>
gs/base/gxclist.c
<br>
gs/base/gxclist.h
<br>
gs/base/gxclread.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-20 09:58:48 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=40bdfff14aa2d3190526f44d4ef81d3c8c65be3f">40bdfff14aa2d3190526f44d4ef81d3c8c65be3f</a>
<blockquote>
<p>
    Bug #692520 (partial, pdfwrite portion only) fix return testing
<br>

<br>
    The cos_c_string_value function returns a pointer (to a parameter passed to it!)
<br>
    which is cast to an int and tested for negativity. This is terrible practice.
<br>
    On 64- bit machines the pointer doesn't fit into an int and on 32-bit machines it
<br>
    will erroneously detect an error if a valid pointer exceeeds 2GB.
<br>

<br>
    The only reason for the test is to allow the funciton call to be included
<br>
    in the body of an 'if' test, which is a hideous way of constructing the
<br>
    code.
<br>

<br>
    This commit reformats the code, and does away with the irrelevant return code
<br>
    test.
<br>

<br>
    No differences expected, this path is not tested by the cluster.
<br>

<br>
gs/base/gdevpdfc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-19 17:20:51 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6e2eda3cca4f8e13a9139c77aad5da524fa62d76">6e2eda3cca4f8e13a9139c77aad5da524fa62d76</a>
<blockquote>
<p>
    Avoid mixed double float operations.
<br>

<br>
    On my machine moving over to float to avoid the mixed double/float operation slowed things
<br>
    down even more.  We may want to revisit this later.  Diffs were minor and had about
<br>
    10 percent speed up on interpolation with this change.
<br>

<br>
gs/base/siscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-19 15:39:42 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a44f19c56f98f3d700f617701d581e6932c964a9">a44f19c56f98f3d700f617701d581e6932c964a9</a>
<blockquote>
<p>
    FAPI/UFST revisions.
<br>

<br>
    1) Modify FAPI/UFST to use a chunk allocator for its memory (this reflects a
<br>
    similar change in FAPI/FT).
<br>

<br>
    2) &quot;Side-port&quot; changes from the integration project for customer 532.
<br>

<br>
    3) Address a couple of stability/output error problems that came up testing
<br>
    the above changes.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/Resource/Init/gs_fapi.ps
<br>
gs/psi/fapiufst.c
<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-19 13:52:31 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=13028e7b90dba007183c4b64a5d6b1363e30c993">13028e7b90dba007183c4b64a5d6b1363e30c993</a>
<blockquote>
<p>
    Bug #692515, array index out of bounds (static analysis)
<br>

<br>
    The routine pdf_SepCMYK_ConvertToRGB accessed element 5 of an array
<br>
    passed as a parameter, when it should have accessed element 4 in order to
<br>
    convert a CMYK value into an RGB value.
<br>

<br>
    The code path is only exercised when creating PDF/A or PDF/X, the
<br>
    ProcessColorModel is DeviceRGB, and the input contains a /Separation or
<br>
    /DeviceN colour space with a DeviceCMYK /Alterenate space.
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/gdevpdfc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-16 15:15:45 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=64a7f79fbc184fddc10f635cfeabf8c44db46d90">64a7f79fbc184fddc10f635cfeabf8c44db46d90</a>
<blockquote>
<p>
    Fix MSVC gs Profile builds.
<br>

<br>
    In my recent rework of the makefiles, I broke gs profile builds (in that
<br>
    they were built as release builds). Trivial fix.
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-15 20:36:31 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50d947b5f4801d1042166acbd8b5aed982f57697">50d947b5f4801d1042166acbd8b5aed982f57697</a>
<blockquote>
<p>
    Allow planar device to make use of special getbits handling for 1bit cmyk.
<br>

<br>
    We have a special function gx_get_bits_copy_cmyk_1bit, used to quickly
<br>
    map cmyk (1bpc) to rgb. Our use of this is dependant on the
<br>
    gxdso_is_std_cmyk_1bit call. Unfortunately this was broken for planar
<br>
    devices, so plank was never getting the speed benefits of this routine.
<br>
    Fixed here.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-14 12:40:48 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6aa157b438ac69f9732b9f7b29e8570cceb50e8e">6aa157b438ac69f9732b9f7b29e8570cceb50e8e</a>
<blockquote>
<p>
    Fix for bug 692323.  Performs color management before spatial interpolation with enlargements.
<br>

<br>
    This avoids expensive color management operations when we are doing spatial interpolation.
<br>
    Also a code reduction with this commit.
<br>

<br>
gs/base/gxiscale.c
<br>
gs/base/sidscale.c
<br>
gs/base/siinterp.c
<br>
gs/base/siscale.c
<br>
gs/base/sisparam.h
<br>
gs/psi/zfimscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-14 13:29:09 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d4c7212427ea85c6d8d9c9a46a178af54c9b96d3">d4c7212427ea85c6d8d9c9a46a178af54c9b96d3</a>
<blockquote>
<p>
    Bug 691991: allow extra compile/link flags.
<br>

<br>
    The XCFLAGS and XLDFLAGS should be available to be specified as parameters to
<br>
    &quot;make&quot;, but they were being used by the autoconf tools. This change moves the
<br>
    autconf set flags into their own variables, leaving XCFLAGS and XLDFLAGS for
<br>
    use at the make command line. Similarly, it adds an XTRALIBS variable which
<br>
    can also be set from the make command line.
<br>

<br>
    This is a slight modification of a patch originally from William Bader.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-13 14:03:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83e1c7b77e8a23ed0683b3677a7cccba94ad5fe8">83e1c7b77e8a23ed0683b3677a7cccba94ad5fe8</a>
<blockquote>
<p>
    Bug 692491: change FAPI/Freetype to use chunk allocator
<br>

<br>
    Previously FAPI/FT was using the heap allocator, which caused performance
<br>
    problems due to its linear search of allocated blocks to validate before
<br>
    freeing a block. The linear searching was fixed previously, but on some
<br>
    platforms the C lib's malloc/free are bottlenecks, so using a chunk
<br>
    allocator instance makes sense for allocate/release pattern we see from
<br>
    Freetype.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-10 10:23:50 -0500
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e5d8d4d6514600f49a6aae2811e3b6fd33c2ef54">e5d8d4d6514600f49a6aae2811e3b6fd33c2ef54</a>
<blockquote>
<p>
    Speed up heap freeing (gs_heap_free_object) by avoiding search.
<br>

<br>
    Inspired by Bug #687475. Remove the search through every allocated block
<br>
    when freeing a heap block. Drastically increases the speed. Will hopefully
<br>
    help other things too.
<br>

<br>
    If people really want to test that blocks are valid on free, build with
<br>
    Memento, which captures this in a much more useful way.
<br>

<br>
gs/base/gsmalloc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-10 10:09:23 -0500
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1e3da08d9eb07a9d9650f5deeccf376da6db5722">1e3da08d9eb07a9d9650f5deeccf376da6db5722</a>
<blockquote>
<p>
    Update xcode project to allow profiling.
<br>

<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/ghostscript.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/language_switch.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/pcl.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/svg.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/xps.xcscheme
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-09 13:40:30 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3329928934123e2d3033309aa79c6ca18d975528">3329928934123e2d3033309aa79c6ca18d975528</a>
<blockquote>
<p>
    Update lcms2.1 to lcms2.2  plus fix some bit rot
<br>

<br>
    Checked to see if this fixed Bug 692121 and unfortunately it did not.   Working to create this with
<br>
    tools contained in lcms2 so that I can kick the issue up to Marti.
<br>

<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/lib.mak
<br>
gs/lcms2/AUTHORS
<br>
gs/lcms2/COPYING
<br>
gs/lcms2/ChangeLog
<br>
gs/lcms2/Makefile.in
<br>
gs/lcms2/Projects/BorlandC_5.5/lcms2.rc
<br>
gs/lcms2/Projects/VC2008/lcms2.rc
<br>
gs/lcms2/Projects/VC2010/lcms2.rc
<br>
gs/lcms2/Projects/VC2010/resource.h
<br>
gs/lcms2/aclocal.m4
<br>
gs/lcms2/config.guess
<br>
gs/lcms2/config.sub
<br>
gs/lcms2/configure
<br>
gs/lcms2/configure.ac
<br>
gs/lcms2/include/Makefile.in
<br>
gs/lcms2/include/lcms2.h
<br>
gs/lcms2/install-sh
<br>
gs/lcms2/ltmain.sh
<br>
gs/lcms2/src/Makefile.in
<br>
gs/lcms2/src/cmscnvrt.c
<br>
gs/lcms2/src/cmserr.c
<br>
gs/lcms2/src/cmsgamma.c
<br>
gs/lcms2/src/cmsgmt.c
<br>
gs/lcms2/src/cmsio0.c
<br>
gs/lcms2/src/cmsio1.c
<br>
gs/lcms2/src/cmslut.c
<br>
gs/lcms2/src/cmsnamed.c
<br>
gs/lcms2/src/cmspack.c
<br>
gs/lcms2/src/cmstypes.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/lcms2_internal.h
<br>
gs/lcms2/testbed/Makefile.am
<br>
gs/lcms2/testbed/Makefile.in
<br>
gs/lcms2/testbed/testcms2.c
<br>
gs/lcms2/utils/delphi/lcms2dll.pas
<br>
gs/lcms2/utils/jpgicc/Makefile.in
<br>
gs/lcms2/utils/linkicc/Makefile.in
<br>
gs/lcms2/utils/psicc/Makefile.in
<br>
gs/lcms2/utils/tificc/Makefile.in
<br>
gs/lcms2/utils/transicc/Makefile.in
<br>
gs/lcms2/utils/transicc/transicc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-09 16:27:04 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5f82fe2ef9d4d21950f9cf76c82911b9f977e2b1">5f82fe2ef9d4d21950f9cf76c82911b9f977e2b1</a>
<blockquote>
<p>
    Bug 692492: Accept empty xref sections.
<br>

<br>
    Change xref parser to accept xref sections that have no entries.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-08 21:13:39 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d59aae1041ac22608f7f470f3f3644c1f7523bd">7d59aae1041ac22608f7f470f3f3644c1f7523bd</a>
<blockquote>
<p>
    Fix for patterns with plank device, transparency, and clist.
<br>

<br>
    It turns out that when we right the tile raster for the clist we don't
<br>
    really know what the &quot;true&quot; target of the pattern is only the final
<br>
    target device.  In this particular situation, the target for the pattern
<br>
    is a pdf14 device, the tile has no transparency, and the final target
<br>
    is a planar device.   When ended up assuming the tile was planar which
<br>
    it was not and ended up with a seg fault
<br>

<br>
gs/base/gsptype1.c
<br>
gs/base/gxcolor2.h
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxpcolor.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-08 13:59:03 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=968040d1ef877607fb6b6bed67e7c2d54c0b4dd1">968040d1ef877607fb6b6bed67e7c2d54c0b4dd1</a>
<blockquote>
<p>
    Add massively hacky and horrible clang_wrapper to xcode build.
<br>

<br>
    This is REALLY nasty, but seems to work; at least I get sensible
<br>
    results thrown back into Xcode when I build with analyze.
<br>

<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.xcworkspace/xcuserdata/robin.xcuserdatad/UserInterfaceState.xcuserstate
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.xcworkspace/xcuserdata/robin.xcuserdatad/WorkspaceSettings.xcsettings
<br>
xcode/Makefile
<br>
xcode/clang_wrapper.c
<br>
xcode/resolve.sh
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-07 23:37:29 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=618f03fce59282255e7d251875dd1d9ff5b35bf6">618f03fce59282255e7d251875dd1d9ff5b35bf6</a>
<blockquote>
<p>
    Remove unused variable introduced in last commit.
<br>

<br>
gs/base/gdevplan.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-07 20:27:26 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a505dc016f8d34444f7b431a220320e005df201">6a505dc016f8d34444f7b431a220320e005df201</a>
<blockquote>
<p>
    Put map_color_rgb function back into planar devices to fix pcl
<br>

<br>
    It appears that the rop code requires map_color_rgb to work properly.
<br>
    Reinstate the old functions to get us up and running.
<br>

<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-07 00:28:21 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3ee2cd07fc7bdfbc3014316f0d4f7da54c900ee">b3ee2cd07fc7bdfbc3014316f0d4f7da54c900ee</a>
<blockquote>
<p>
    Bug 692352: excessive memory use by shading
<br>

<br>
    Reduce memory usege in smooth shading by running the shading code
<br>
    in save-restore contest. Although resolved shading is no longer
<br>
    cached by PDF interpreter, reduced memory usage greatly speeds-up
<br>
    processing of the files with many shadings.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-06 20:42:36 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5426550f44025e7ec5c802b27d379f7ffee5ed01">5426550f44025e7ec5c802b27d379f7ffee5ed01</a>
<blockquote>
<p>
    New simple xcode project for GhostPDL/Ghostscript.
<br>

<br>
    Still very experimental, but seems to build. Debugging seems to work.
<br>

<br>
    Analysis doesn't work (usefully) yet due to clang not reporting full
<br>
    pathnames. This can be solved by a wrapper. TODO: Write it.
<br>

<br>
xcode/GhostPDL.xcodeproj/default.pbxuser
<br>
xcode/GhostPDL.xcodeproj/project.pbxproj
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.pbxproj
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.xcworkspace/contents.xcworkspacedata
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.xcworkspace/xcuserdata/robin.xcuserdatad/UserInterfaceState.xcuserstate
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/project.xcworkspace/xcuserdata/robin.xcuserdatad/WorkspaceSettings.xcsettings
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/GhostPDL.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/ghostscript.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/language_switch.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/pcl.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/svg.xcscheme
<br>
xcode/GhostPDL/GhostPDL.xcodeproj/xcshareddata/xcschemes/xps.xcscheme
<br>
xcode/Makefile
<br>
xcode/clang_wrapper.sh
<br>
xcode/xcode.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-06 12:22:46 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=15e70ed9fc7b28a02b9eff6491fe5137cedc7798">15e70ed9fc7b28a02b9eff6491fe5137cedc7798</a>
<blockquote>
<p>
    genarch tweak for cross-compiling; supply ready made arch files.
<br>

<br>
    Previously genarch would unconditionally generate an arch.h file for the
<br>
    current platform every time it was called. This fails for cross-compiling,
<br>
    forcing the makefile to be edited every time. In this commit we add a
<br>
    tweak that solves this problem.
<br>

<br>
    Now, genarch can optionally copy an existing arch.h file; if the make
<br>
    (or nmake) invocation has TARGET_ARCH_FILE=path/to/existing-arch.h added
<br>
    to it, then instead of generating an arch.h for the current (host)
<br>
    platform, it will instead copy the supplied one (assumed to be appropriate
<br>
    for the target platform).
<br>

<br>
    MSVC builds are updated here to automatically pick a TARGET_ARCH_FILE
<br>
    based upon the WIN64 define. This should allow us to build 32bit binaries
<br>
    on a 64bit box from the Visual Studio solution. We still cannot build
<br>
    64bit binaries on a 32bit box using the unedited solution, as we have
<br>
    no way to detect the type of box we are on, and hence cannot select
<br>
    the appropriate AUX compiler to use.
<br>

<br>
    A new directory, 'gs/arch' is added, containing the 2 windows msvc arch.h
<br>
    files. More files can be added in future, ideally keeping to the
<br>
    &lt;os&gt;-&lt;architecture&gt;-&lt;toolset&gt;.h naming convention.
<br>

<br>
gs/arch/windows-x64-msvc.h
<br>
gs/arch/windows-x86-msvc.h
<br>
gs/base/genarch.c
<br>
gs/base/lib.mak
<br>
gs/ghostscript.vcproj
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-05 15:46:01 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb5b14133b516323694dcb99c7594337e84d5e3f">cb5b14133b516323694dcb99c7594337e84d5e3f</a>
<blockquote>
<p>
    Add Memento configuration to Visual Studio projects (and gs makefile)
<br>

<br>
    When swapping between memento and non-memento builds, a complete rebuild
<br>
    is required due to the pervasive nature of the memento defines. As such
<br>
    it makes sense to have it as a separate configuration in the project.
<br>

<br>
    Memento directories are named 'memobj', 'memobj64', 'membin' etc in
<br>
    keeping with 'debugobj', and 'profobj' etc.
<br>

<br>
    Also, take the opportunity to fix a couple of small things in the visual
<br>
    studio files. Firstly, the 64 bit profile build targets were incorrect
<br>
    (weren't setting paths etc).
<br>

<br>
    Secondly, we remove the use of nmake /A for the rebuild step, and instead
<br>
    rely on an explicit clean call, then a rebuild; this means we get
<br>
    consistent results for a rebuild compared to a clean then a build.
<br>

<br>
    As part of this work, we add logic to the (MSVC) makefiles to detect
<br>
    MEMENTO=1 and PROFILE=1. If set, these change the default DEBUG, TDEBUG
<br>
    and DEBUGSYM flags as appropriate, and change the default output
<br>
    directory names. This keeps the invocations from Visual Studio sane
<br>
    (as I found lots of mistakes in them as I looked through).
<br>

<br>
    Also fix some places where we were failing to set and pass on
<br>
    BINDIR/PSOBJDIR resulting in stray directories being created.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
common/msvc_top.mak
<br>
gs/ghostscript.vcproj
<br>
gs/psi/msvc.mak
<br>
language_switch/pspcl6_msvc.mak
<br>
main/pcl6_msvc.mak
<br>
psi/psi.mak
<br>
svg/svg_msvc.mak
<br>
win32/GhostPDL.sln
<br>
win32/ReadMe.txt
<br>
win32/language_switch.vcproj
<br>
win32/pcl.vcproj
<br>
win32/svg.vcproj
<br>
win32/xps.vcproj
<br>
xps/xps_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-05 10:20:14 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2fab16e3cbf8b2a18aa82c6beee76e261e530b9f">2fab16e3cbf8b2a18aa82c6beee76e261e530b9f</a>
<blockquote>
<p>
    Bug 692365: Don't derive metrics for CIDFontType 2.
<br>

<br>
    If the metrics don't exist in a CID font, we attempt to derive &quot;sane&quot;
<br>
    metrics from the bounding box information. This is problematic since a
<br>
    font (even with WMode 1) missing vertical metrics should be treated as a
<br>
    horizontal (i.e. WMode 0).
<br>

<br>
    However, we *do* still want to derive vertical metrics, for a vertical
<br>
    writing font when we're using a Truetype font as a substitute for a
<br>
    &quot;real&quot; CIDFont.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-04 10:26:49 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b7da277a6b7477b0d7114a6203d4112c0ad631f">6b7da277a6b7477b0d7114a6203d4112c0ad631f</a>
<blockquote>
<p>
    Fix glyph cleanup after error
<br>

<br>
    When cleaning up the freetype glyph after a glyph interpretation error
<br>
    use the glyph type field in the glyph structure to differentiate between
<br>
    freeing an outline or a bitmap glyph - rather than the glyph type we
<br>
    requested.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-03 20:38:47 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=42582272f2b4dce1ccd5c600a2d6dc71794b4d3e">42582272f2b4dce1ccd5c600a2d6dc71794b4d3e</a>
<blockquote>
<p>
    Bug 692033: fix LZWEncode filter
<br>

<br>
    Increment code size before writing out EOD when the last code reaches
<br>
    the current limit code. Fix incorrect bytes or decoding errors at
<br>
    the end of some LZW-encoded streams.
<br>

<br>
gs/base/slzwe.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-03 09:19:49 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a2a8987a7c7d0f98dcf640f72e64256c1f84eb2">6a2a8987a7c7d0f98dcf640f72e64256c1f84eb2</a>
<blockquote>
<p>
    Remove the insistence on DeviceGray or DeviceCMYK from pdfa_def.ps and remove
<br>
    the directive not to use DeviceRGB from the documentation.
<br>

<br>
    There is no requirement in the PDF/A-1 specification that prevents the use of
<br>
    DeviceRGB.
<br>

<br>
gs/doc/Ps2pdf.htm
<br>
gs/lib/PDFA_def.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-01 18:32:07 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1a22bfd63734c93fc8d9df65e58f83fbd6a3376">c1a22bfd63734c93fc8d9df65e58f83fbd6a3376</a>
<blockquote>
<p>
    Bug 692481: Fix for remainder of issue; oversize JPEG data causes hang.
<br>

<br>
    If the JPEG lib exits without decoding anything, and the buffer was full,
<br>
    attempt a compaction; if the compaction succeeds (bytes were saved), then
<br>
    continue, otherwise bale with an error to avoid us infinitely looping
<br>
    as we repeatedly try to decode the same data.
<br>

<br>
    The 'buffer is full' condition is the tricky one; we cannot know the
<br>
    exact size of the buffer, but we can know the minimum size we requested,
<br>
    so we use that as a close approximation.
<br>

<br>
    Also tweak the pxl handling of error conditions passed back from the
<br>
    jpeg decoder. Ensure that pxls use of streams set the templates.
<br>

<br>
gs/base/sdctd.c
<br>
pxl/pximage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-01 11:35:52 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f1c4efc10e7aad61f08e979493773a29d973c43c">f1c4efc10e7aad61f08e979493773a29d973c43c</a>
<blockquote>
<p>
    Speed up of lcms 16bit tetrahedral interpolation code.
<br>

<br>
    This color table interpolation is used primarily where we have 16 bit image data or
<br>
    are doing spatial interpolation of image data.  The change introduces
<br>
    some very minor changes across quite a few files that have 16 bit
<br>
    data or for which spatial interpolation is occurring.  No changes occur at the white
<br>
    or black table points.
<br>

<br>
    The code differences involved moving the decision tree outside the loop and performing
<br>
    the normalization divide by an add and shift.
<br>

<br>
    This change can be readily moved to lcms2.
<br>

<br>
gs/lcms/src/cmsintrp.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-02 17:16:22 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8b660e2678b3c6f4592269d14e3767aca3dd51e0">8b660e2678b3c6f4592269d14e3767aca3dd51e0</a>
<blockquote>
<p>
    Bug #692136 Change the FontBBox we use when a type 3 font has a NULL bbox.
<br>

<br>
    PCL creates type 3 fonts where the BBox is 0 0 0 0. This causes Acrobat problems,
<br>
    so we replace it with a 'default'. Previously this was 0 0 1000 1000, but this
<br>
    is incorrect for the type 3 fonts created from PCL, and makes it impossible
<br>
    to search/highlight text in the resulting PDF.
<br>

<br>
    We now check for a type 3 font with an all zero BBox, and instead use 0 0 1 -1
<br>
    which for PCL fonts works well. Regression tests show no differences with this
<br>
    change, and hopefully its no more incorrect than it was before.
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-02 11:43:04 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f2d80d64b5f863ba17f428b96967fe1c1ce0d870">f2d80d64b5f863ba17f428b96967fe1c1ce0d870</a>
<blockquote>
<p>
    Bug 692484 - Fix build failure with gold linker...
<br>
    ....due to freetype underlinking.
<br>

<br>
    Credit to Timo Gurr ( timo.gurr@gmail.com ) for the patch
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/Makefile.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-02 10:09:42 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee226f558f5b73005ba0594cd3861ce431c08a1b">ee226f558f5b73005ba0594cd3861ce431c08a1b</a>
<blockquote>
<p>
    Bug 692483 - Fix the unix install to include {Details,History}9.htm
<br>

<br>
    Credit to Timo Gurr ( timo.gurr@gmail.com ) for the patch.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/unixinst.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-01 09:54:53 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2881a8db54afddc1708febaa1de51e6808a416f9">2881a8db54afddc1708febaa1de51e6808a416f9</a>
<blockquote>
<p>
    Make sure planar pattern buffer size is correctly computed for clist writing.
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-01 17:15:41 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a00c728c4c3ffa2392765294bc21b90b6e38496f">a00c728c4c3ffa2392765294bc21b90b6e38496f</a>
<blockquote>
<p>
    Bug 692481; partial fix - jpeg data with excess 0xFFs.
<br>

<br>
    Ghostscript passes buffers full of data to the jpeg library. The jpeg
<br>
    library decodes one (or more) scanlines of data from this data and
<br>
    returns it to ghostscript.
<br>

<br>
    In the event that the jpeg library can't decode an entire scanline from
<br>
    the buffer supplied, it 'suspends' itself (i.e. restores its internal
<br>
    state to the beginning of the last scanline, and returns having consumed
<br>
    no data).
<br>

<br>
    This means that if we ever have a scanline of jpeg data that is too large
<br>
    to fit in the stream buffer, we will go into an infinite loop.
<br>

<br>
    This commit is a partial fix for the issue; if we return from the jpeg
<br>
    lib having consumed no data and having produced no output, we attempt to
<br>
    compact the data in the jpeg stream. We do this by compacting strings of
<br>
    0xFF bytes to a single 0xFF byte. (Strings of 0xFF bytes are forbidden by
<br>
    the spec, but are treated by the library as a single one).
<br>

<br>
    This is sufficient to solve the problem with the supplied corrupted file,
<br>
    but still leaves us vulnerable to files that have more than 0x800 bytes
<br>
    in any given single scanline.
<br>

<br>
    A proper fix would require us to spot that the buffer was 'full' and that
<br>
    the compaction process saved no bytes. Spotting that the compaction
<br>
    process saved no bytes is easy. Spotting that the buffer is 'full' is not
<br>
    currently possible as stream-&gt;cbsize is not available at the point
<br>
    where the test needs to be done.
<br>

<br>
gs/base/sdctd.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-09-01 08:29:03 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad0cf1990ae540252f68c50fa4627ed3b1752b89">ad0cf1990ae540252f68c50fa4627ed3b1752b89</a>
<blockquote>
<p>
    Bug #692457 If a PCL pattern turns out to be a flat fill, still update the saved colour.
<br>

<br>
    If a PCL pattern turned out to be a simple colour (black or white) we optimise
<br>
    the output and don't emit a pattern. However, we do still need to update the
<br>
    saved colour in our private state, because we will still be changing the colour. If
<br>
    we don't do that then our saved state does not reflect the actual content of
<br>
    the PDF file, and we can emit incorrect colours.
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/gdevpdfg.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-31 18:32:40 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2d547dd3378afdb63681e9262e3bedd2abb3e53">a2d547dd3378afdb63681e9262e3bedd2abb3e53</a>
<blockquote>
<p>
    Memento fixes; Memento code in gsalloc was broken.
<br>

<br>
    The memento code in gsalloc.c intended to allow for memory squeezing
<br>
    was inadvertantly relying on C extensions. Fixed here.
<br>

<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/base/gsalloc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-31 18:06:17 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af34c29e19ce012f71cb3713d4756ee43d6aa1d0">af34c29e19ce012f71cb3713d4756ee43d6aa1d0</a>
<blockquote>
<p>
    Fix mem buffer raster calc in height=1 case.
<br>

<br>
    gs -r72 -sDEVICE=plank -o o.ppm tests_private/pdf/PDFIA1.7_SUBSET/CATX0198.pdf
<br>

<br>
    would SEGV when run, due to a planar pattern buffer of 1x1 being created;
<br>
    this would calculate a bad raster value, which was then copied into the
<br>
    pattern tile, and would cause problems.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-30 18:24:57 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc3adb358eb5c0175fc5e24d7f275ffe2ac39fb9">fc3adb358eb5c0175fc5e24d7f275ffe2ac39fb9</a>
<blockquote>
<p>
    Bug 692409: check file name length
<br>

<br>
    Check the length of a file name argument and throw /limitcheck when
<br>
    it exceed the size of the internal buffer. Avoid undefined behaviour
<br>
    and possible security issues.
<br>

<br>
gs/base/gdevprn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-30 19:22:35 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2b898bdf0ba77853f4af9da4e39141189a1580a1">2b898bdf0ba77853f4af9da4e39141189a1580a1</a>
<blockquote>
<p>
    Change planar devices to use encode/decode_color only.
<br>

<br>
    Simplify the code by removing deprecated color mapping functions. In
<br>
    particular this fixes a problem whereby encode_color for the plank
<br>
    device was returning a color index encoded as rgb, and hence confusing
<br>
    the overprint device.
<br>

<br>
    CLUSTER_UNTESTED as the plan* and plib* devices are not tested at the moment.
<br>

<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-30 19:21:44 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=605557a6e3741abe837445da32f378a7bb751e8f">605557a6e3741abe837445da32f378a7bb751e8f</a>
<blockquote>
<p>
    Minor whitespace adjustment.
<br>

<br>
    Correct indentation to avoid confusing simpletons like me.
<br>
    CLUSTER_UNTESTED.
<br>

<br>
gs/base/gsbitops.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-30 10:22:45 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b08778372c45bdf77e60db7374d1d18b6b340b10">b08778372c45bdf77e60db7374d1d18b6b340b10</a>
<blockquote>
<p>
    Bug 692054: clear currentpoint after stroking empty path
<br>

<br>
    Make gs compatible with Adobe implementation and avoid creation
<br>
    of an uninitialized currentpoint value. Flag currentpoint as not
<br>
    defined after stroking an empty path.
<br>

<br>
gs/base/gspaint.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-29 20:24:17 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=619bfae87817cbb5633853f943dd3c7b101568c9">619bfae87817cbb5633853f943dd3c7b101568c9</a>
<blockquote>
<p>
    Bug 692476: simple non-trans tiling to planar devices - workaround.
<br>

<br>
    Non transparent tiling of 'simple' coloured pattern tiles fails when
<br>
    going to planar devices. In this commit we simply disable the simple
<br>
    path in this case. Testing seems to indicate that everything will work
<br>
    OK now.
<br>

<br>
    Bug 692476 has been opened to remind us to optimise this when possible.
<br>

<br>
gs/base/gxp1fill.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-29 18:39:57 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d0f9685b775092c820e3b4748f0fe09eb7880a55">d0f9685b775092c820e3b4748f0fe09eb7880a55</a>
<blockquote>
<p>
    Disable mono threshold based halftoning for cmyk planar devices
<br>

<br>
    Currently we allow the mono threshold based halftoning routines to be
<br>
    called for CMYK planar devices. Disable this for now as it doesn't work.
<br>
    When we have the rest of the planar device testing out correctly we'll
<br>
    revisit this, debug it, and reenable it.
<br>

<br>
gs/base/gximono.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-29 13:50:25 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=385edc256d11fd9c0d9ae6af1e94ea145b15b393">385edc256d11fd9c0d9ae6af1e94ea145b15b393</a>
<blockquote>
<p>
    Tweak bmpcmp to put the threshold and window settings into the meta files.
<br>

<br>
    Useful for debugging. CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-29 00:39:26 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a8dbb2a904d52a9cce21db397b0918ce2d733214">a8dbb2a904d52a9cce21db397b0918ce2d733214</a>
<blockquote>
<p>
    Bug 692447: Handle unfinished 'W' mode.
<br>

<br>
        When the content stream sets 'W' or 'W*' clip modes but doesn't
<br>
        complete them with a filling operator, Ghostscript leaves a
<br>
        dictionary on the dictionary stack that interferes with PDF graphic
<br>
        state processing. This patch does the following:
<br>
        - drops &quot;W&quot; in the sequence 'W Q&quot;
<br>
        - ignores graphic state changes, e.g. in &quot;W 0 G&quot;
<br>
        - takes into account possible presence of non-graphic-state
<br>
          dictionaries during clean-ups.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
gs/Resource/Init/pdf_main.ps
<br>
gs/Resource/Init/pdf_ops.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-29 01:49:41 +0200
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d4b6f695ca058a36141e4f81313533c819def73">4d4b6f695ca058a36141e4f81313533c819def73</a>
<blockquote>
<p>
    Make plank and pamcmyk4 files easier to compare.
<br>

<br>
    Change pamcmyk4 files so that MAXVALUE is 255 (instead of 1) and add
<br>
    a comment to the plank file header.
<br>

<br>
gs/base/gdevpbm.c
<br>
gs/base/gdevplan.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-26 10:05:17 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7fee00e442130e0aa3118fec975882008e750ebd">7fee00e442130e0aa3118fec975882008e750ebd</a>
<blockquote>
<p>
    Allow planar devices to store patterns as bitmaps not clist only
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-26 18:41:36 +0200
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a9b386efabd5aab3913554641c66306e6bd79b58">a9b386efabd5aab3913554641c66306e6bd79b58</a>
<blockquote>
<p>
    Add the various plan* devices to the default build.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-26 09:20:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e665cacbe15d9cedb09334451cedd223a38a5ac3">e665cacbe15d9cedb09334451cedd223a38a5ac3</a>
<blockquote>
<p>
    Bug 692435: fix PDF pre-rendering spot color search.
<br>

<br>
    Before we start rendering a page, we search the resources for the page
<br>
    (including its descendent objects), so that we can pass the information
<br>
    to the device prior to rendering. What we weren't doing was searching
<br>
    the parents of the page object (we were, however, doing so during the
<br>
    stream interpetation for rendering), thus in rare, but valid files, we
<br>
    could miss setting up the page device for spot colors.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-23 10:31:03 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=aa715abee9f38daba6c9504495dca309e8e3ed64">aa715abee9f38daba6c9504495dca309e8e3ed64</a>
<blockquote>
<p>
    Fix so pattern debug code dumps planar bitmap.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-23 16:26:24 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb54af824c8f0aa343167b1e8b99dd1d53e47955">cb54af824c8f0aa343167b1e8b99dd1d53e47955</a>
<blockquote>
<p>
    non-clist pattern rendering for planar devices.
<br>

<br>
gs/base/gxp1fill.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-25 19:02:57 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c2f005a525f49bf43fb796908e0ab9c4b6ed58a4">c2f005a525f49bf43fb796908e0ab9c4b6ed58a4</a>
<blockquote>
<p>
    Another typo in News.htm and History9.htm
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/History9.htm
<br>
gs/doc/News.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-25 18:28:37 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=409b62a948d75263131e09fd9a9e389d704d2b4c">409b62a948d75263131e09fd9a9e389d704d2b4c</a>
<blockquote>
<p>
    Add copy_plane operation to tile_clip device (gxclip2.c)
<br>

<br>
    Just a copy of copy_color, with an extra plane field.
<br>

<br>
    Not currently ever called, but required as work towards solving the
<br>
    planar pattern issues, we believe.
<br>

<br>
gs/base/gxclip2.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-25 17:35:36 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf495c68e94b061c89eca678bf863775ce1b8a53">cf495c68e94b061c89eca678bf863775ce1b8a53</a>
<blockquote>
<p>
    Bug 692461: Typos in News.htm and History9.htm
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/History9.htm
<br>
gs/doc/News.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 20:49:57 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8005a687146fd19ca5e6a80cfc2f20b9fd675e41">8005a687146fd19ca5e6a80cfc2f20b9fd675e41</a>
<blockquote>
<p>
    Remove unused variable in shading code.
<br>

<br>
    km is never used, so remove it. No cluster differences expected.
<br>

<br>
gs/base/gxshade6.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-24 11:20:11 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8cbd67605010b927192acb590b9a1fd8bf45a2a3">8cbd67605010b927192acb590b9a1fd8bf45a2a3</a>
<blockquote>
<p>
    Bug #692344 Make sure we do not dereference a NULL clip path when freeing
<br>

<br>
    When creating the 'privately allocated' parts of a gstate it is possible to
<br>
    fail to allocate a clip path. In this case we free the clip path, but if its
<br>
    notbeen allocated then it is NULL, and the free routine unconditionally
<br>
    de-references it.
<br>

<br>
    Added a NULL pointer to check to prevent this. I *believe* this fixes the bug
<br>
    but just changing the code made the allocation succeed when I tested it, so I
<br>
    am not absolutely certain. This patch does fix a genuine failure though.
<br>

<br>
gs/base/gxcpath.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-24 01:40:56 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=827b098f50d296dd0c9399ec82f1988c1de7b62d">827b098f50d296dd0c9399ec82f1988c1de7b62d</a>
<blockquote>
<p>
    Bug 692445, tolerate short xref entries
<br>

<br>
    Fix a bug in the code that handles invalid xref entries and try
<br>
    to continue processing by repositioning PDF stream after the actial
<br>
    end of the entry.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-23 16:24:53 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c88a42f2409c30b3d2b955922efd8e00714c1cc">1c88a42f2409c30b3d2b955922efd8e00714c1cc</a>
<blockquote>
<p>
    Forcing of clist only rendering of patterns if target device is planar.
<br>

<br>
    This enables us to achieve proper rendering until we get the procedures straight
<br>
    for the non-clist case.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-23 10:35:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f215836c60865eaa2da4bed711215eae2b906c49">f215836c60865eaa2da4bed711215eae2b906c49</a>
<blockquote>
<p>
    Revert &quot;Fix for Bug 687695.&quot;   Fixes Bug 692454
<br>

<br>
    This reverts commit c7404eceab4d308c67130f43e9a4d4c0b58cd73c.
<br>
    That commit broke all the tiff devices.
<br>

<br>
gs/base/gdevdgbr.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-23 13:15:25 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ec7e68e9054c8b1e91f588a358101c24d281555b">ec7e68e9054c8b1e91f588a358101c24d281555b</a>
<blockquote>
<p>
    Bug #692105. Increase the maximum input/output dimesnions of sampled functions.
<br>

<br>
    The maximum number of inputs and outputs allowed in a sampled function is a
<br>
    compile-time value. This particular PDF file had 20 colorants, and a sampled
<br>
    function with 20 inputs and 4 outputs to convert it into CMYK.
<br>

<br>
    This broke the maximu, even though GS had been compiled with GS_CLIENT_COLOR_MAX_XOMPONENTS
<br>
    increased to allow the PostScript version (which doesn't use a sampled function)
<br>
    to complete.
<br>

<br>
    This patch permits a new compile-time define GS_CLIENT_SAMPLED_FN_MAX_COMPONENTS
<br>
    which can be used to increase this value. If this is not declared then we now use
<br>
    the GS_CLIENT_COLOR_MAX_COMPONENTS as it is likely we will encounter sampled functiosn
<br>
    with that many components
<br>

<br>
    No differences expected
<br>

<br>
gs/base/gsfunc0.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-22 15:42:10 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ebc42b7b7b27977bac17a9f5a9f0626bcfdf8a16">ebc42b7b7b27977bac17a9f5a9f0626bcfdf8a16</a>
<blockquote>
<p>
    Fix pattern matrix problems when the pattern is used in a Form and creating PDF.
<br>

<br>
    Bug #691800 exhibited a problem using a Shading (type 2 pattern) in a form.
<br>
    This is unusual because hte only way to get a Form out of pdfwrite is to involve transparency.
<br>

<br>
    When a pattern is used in a form, we do not apply the current CTM, but the
<br>
    CTM of the enclosing context. In this case we were still applying the outermost
<br>
    context, not the CTM of the page stream (which is the enclosing context of the form).
<br>

<br>
    Fixing this revealed other problems.
<br>

<br>
    I've moved the form counting out of the transparency group and into the form
<br>
    dictionary creation code where it makes much more sense. This allows me to
<br>
    change the 'FormDepth' checks so that we only undo the page content scaling
<br>
    if the formdepth is 0.
<br>

<br>
    In the long run we may need to keep a stack of gstatas (or more accurately the
<br>
    CTM) so that if we get nested forms we can apply the correct CTM to any patterns
<br>
    in the form. For now, this isn't required, we don't have any test files which nest
<br>
    more than 1 form deep.
<br>

<br>
    This fixes Bug #691800. I also see progressions in the following files:
<br>

<br>
    Bug6901014_CityMap-evince-pdftopdf.pdf
<br>
    Bug691783.pdf
<br>
    fts_04_0403.pdf
<br>
    fts_06_0608.pdf
<br>
    fts_09_0919.pdf
<br>
    fts_12_1202.pdf
<br>
    fts_12_1205.pdf
<br>
    fts_14_1416.pdf
<br>
    fts_15_1508.pdf
<br>
    fts_15_1510.pdf
<br>
    fts_15_1512.pdf
<br>
    fts_15_1514.pdf
<br>
    fts_15_1516.pdf
<br>
    fts_15_1518.pdf
<br>
    fts_15_1520.pdf
<br>
    fts_28_2803.pdf
<br>
    fts_28_2804.pdf
<br>
    fts_31_3107.pdf
<br>

<br>
gs/base/gdevpdft.c
<br>
gs/base/gdevpdfv.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-19 08:42:14 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c387412a0267a51fb1b6d3a51c7e70a20533bd50">c387412a0267a51fb1b6d3a51c7e70a20533bd50</a>
<blockquote>
<p>
    Added comments regarding compare_gdev_prn_space_params().
<br>

<br>
    Added a couple of comments to the header files that declare the
<br>
    structures that compare_gdev_prn_space_params() compares warning
<br>
    that changes/additions to the structures will require changes to
<br>
    that function as well.
<br>

<br>
    No expected cluster differences since no code changed.
<br>

<br>
gs/base/gdevprn.h
<br>
gs/base/gxband.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-19 15:14:33 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=493fddf61a96d6dc07c3f376bbb052990ec6a742">493fddf61a96d6dc07c3f376bbb052990ec6a742</a>
<blockquote>
<p>
    Bug 689283: latest pcl3/doc/reports.txt file
<br>

<br>
    Our contrib/pcl3 was already at the latest release, but the reports.txt
<br>
    file had additions post-release.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/contrib/pcl3/doc/reports.txt
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-19 14:00:43 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa67a1d0f4b31841d02f2b6322b53da8a3874cfd">fa67a1d0f4b31841d02f2b6322b53da8a3874cfd</a>
<blockquote>
<p>
    Bug 692426 (tweak): eliminate warning
<br>

<br>
    If unix-aux.mak finds sys/time.h exists, make definition it adds to
<br>
    gconfig_.h conditional on it not being defined already (it can now
<br>
    be defined in the compiler flags as setup by configure).
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/unix-aux.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-19 13:38:04 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0ab8cd1259dc76f6b3465f1ccd08a7509428e021">0ab8cd1259dc76f6b3465f1ccd08a7509428e021</a>
<blockquote>
<p>
    Reinstate Identity-UTF16-H and UniHojo-UCS2-H CMaps
<br>

<br>
    We need these in order to use Truetype fonts to emulate CIDFonts,
<br>
    see gs_ciddc.ps
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/Resource/CMap/Identity-UTF16-H
<br>
gs/Resource/CMap/UniHojo-UCS2-H
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-19 11:48:38 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=714766fb1546616f09dafa8c9d7b4563dd10c65c">714766fb1546616f09dafa8c9d7b4563dd10c65c</a>
<blockquote>
<p>
    Bug 692426: let configure check for sys/time.h
<br>

<br>
    The configure script will now check for whether sys/time.h exists, so we
<br>
    don't rely on hard coded path check in unix-aux.mak - the checks in
<br>
    unix-aux.mak remain for the benefit of those who maintain their own
<br>
    makefiles.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-18 23:10:20 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c7404eceab4d308c67130f43e9a4d4c0b58cd73c">c7404eceab4d308c67130f43e9a4d4c0b58cd73c</a>
<blockquote>
<p>
    Fix for Bug 687695.
<br>

<br>
    Patch supplied by Shailesh Mistry
<br>

<br>
gs/base/gdevdgbr.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-18 23:06:49 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb9c046b29cc449fb8e147a4117b7b81dec934a0">cb9c046b29cc449fb8e147a4117b7b81dec934a0</a>
<blockquote>
<p>
    Fix for compiler warnings
<br>

<br>
    CLUSTER UNTESTED
<br>

<br>
gs/base/gxipixel.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-17 08:35:48 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=942ebdc7700baf85bac4ed76af2fd845f8b7edd3">942ebdc7700baf85bac4ed76af2fd845f8b7edd3</a>
<blockquote>
<p>
    Fix for bug 692083. Improper decode scaling was occurring during creation of the color cache.
<br>

<br>
gs/base/gxipixel.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-18 08:36:40 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22ff0a3aad850d34d203a629735a94a2e253682a">22ff0a3aad850d34d203a629735a94a2e253682a</a>
<blockquote>
<p>
    Bug #689290 Handle image masks with a height of 1.
<br>

<br>
    Adopting the patch supplied by Shailesh Mistry which properly processes
<br>
    soft mask images with a height of 1.
<br>

<br>
    This also allows us to do away with an ugly hack to avoid an endless loop.
<br>
    By not processing single scan line images we would exit gx_image3x_plane_data
<br>
    returning '1' which meant we hadn't processed all the data, which led to
<br>
    gx_image3x_plane_data being called again, indefinitely....
<br>

<br>
    The file for bug 689290 now processes correctly with all devices.
<br>
    In addition fts_26_2604.pdf when converted to PDF shows differences, I'm
<br>
    not sure why, but they are impossible to detect visually so I don't think
<br>
    we should be concerned.
<br>

<br>
gs/base/gximag3x.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-17 10:31:11 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=766df64767959a3c69357cb8698b4c286957af4d">766df64767959a3c69357cb8698b4c286957af4d</a>
<blockquote>
<p>
    Suppress some warnings in gdevcups.c
<br>

<br>
    As cups_set_color_info() now does things that can fail, it has to return
<br>
    an error value (getting rid of the &quot;code set but never used&quot; warning).
<br>

<br>
    Also, add a &quot;default:&quot; case to a switch to get rid of the warning about
<br>
    enum values not handled in a switch - the default case does nothing, so
<br>
    behaviour is unchanged.
<br>

<br>
    Finally, tidy up the initialization of an array of arrays of arrays, getting
<br>
    rid of a warning about missing braces.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 19:49:21 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b75eacf6a9b3a66265a0194ab21e0971f6e0b44c">b75eacf6a9b3a66265a0194ab21e0971f6e0b44c</a>
<blockquote>
<p>
    Missed a couple of files that should have been changed as part of the previous commit.
<br>

<br>
common/msvc_top.mak
<br>
gs/doc/Develop.htm
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 19:19:32 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a49306bd0942aaea1bd035d285977c3f1cec0c2e">a49306bd0942aaea1bd035d285977c3f1cec0c2e</a>
<blockquote>
<p>
    Bug 692400.  Removed imdi and related devices (wtsimdi and wtscmyk).
<br>

<br>
    Devices were example devices that have been obsoleted by ICC color
<br>
    management.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/devs.mak
<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevwts.c
<br>
gs/base/gs.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/macosx.mak
<br>
gs/base/msvclib.mak
<br>
gs/base/openvms.mak
<br>
gs/base/ugcclib.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
gs/base/wtsimdi.c
<br>
gs/ghostscript.vcproj
<br>
gs/imdi/Jamfile
<br>
gs/imdi/LICENSE
<br>
gs/imdi/README
<br>
gs/imdi/arch.h
<br>
gs/imdi/cctiff.c
<br>
gs/imdi/cgen.c
<br>
gs/imdi/config.h
<br>
gs/imdi/copyright.h
<br>
gs/imdi/imdi.c
<br>
gs/imdi/imdi.h
<br>
gs/imdi/imdi_gen.c
<br>
gs/imdi/imdi_gen.h
<br>
gs/imdi/imdi_imp.h
<br>
gs/imdi/imdi_k.c
<br>
gs/imdi/imdi_k.h
<br>
gs/imdi/imdi_tab.c
<br>
gs/imdi/imdi_tab.h
<br>
gs/psi/msvc.mak
<br>
gs/psi/os2.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 23:59:51 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=781b7387334f9c9d98220567f59e5fe1843ad43d">781b7387334f9c9d98220567f59e5fe1843ad43d</a>
<blockquote>
<p>
    Bug 691922: handle color model change in gdevcups.c
<br>

<br>
    Revise the previous method for setting a suitable ICC profile when the cups
<br>
    color model changes, and ensure that the raster memory gets recreated
<br>
    afterwards.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 16:48:01 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c074dc8c611a9d225a50ae690dcc8250542c7e9">9c074dc8c611a9d225a50ae690dcc8250542c7e9</a>
<blockquote>
<p>
    Fixes 691820 by removing the device, the authors in the contrib.mak
<br>
    and source code file (gdevlx50.c) have been sent email the device is
<br>
    broken.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/configure.ac
<br>
gs/contrib/contrib.mak
<br>
gs/contrib/gdevlx50.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 22:45:30 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=58d19521e19252f45ec0d4c212fe938580fbeb54">58d19521e19252f45ec0d4c212fe938580fbeb54</a>
<blockquote>
<p>
    Sort line endings problem.
<br>

<br>
gs/openjpeg/libopenjpeg/opj_malloc.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 08:57:46 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=399c536b8c8fda93071e2895ab88ea11b92e1eb5">399c536b8c8fda93071e2895ab88ea11b92e1eb5</a>
<blockquote>
<p>
    Bug 688651.  Change EPSON ESC/P change color command from ascii to unsigned char.
<br>

<br>
    I don't have an Epson printer to test this with, but it seems
<br>
    reaonable that the command would not use and ascii parameter.
<br>

<br>
gs/base/gdevepsc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 16:30:01 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d9c04fa861359debdf95d698549a08253283d45f">d9c04fa861359debdf95d698549a08253283d45f</a>
<blockquote>
<p>
    Correct a typo checking if we really need to change profiles.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-16 02:30:38 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d8da050fcfcb6bd62024ab007d4ad2c6a7b8920b">d8da050fcfcb6bd62024ab007d4ad2c6a7b8920b</a>
<blockquote>
<p>
    CUPS Raster: Improved recognition of black pixels on CMYK -&gt; RGBW conversion
<br>

<br>
    To improve on bug 691922.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 23:47:55 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1920f21e245e9e1c1ed9e8df1314b4b548088db5">1920f21e245e9e1c1ed9e8df1314b4b548088db5</a>
<blockquote>
<p>
    Set correct default color profiles for all color spaces of the CUPS Raster device
<br>

<br>
    If no output profile is supplied by the user via
<br>
    &quot;-sOutputICCProfile=...&quot;, set a default profile appropriate to the
<br>
    selected color space (RGBish additive, CMYKish subtractive, or
<br>
    grayscale). This should really be the last piece of the fix for bug
<br>
    691922.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 23:10:14 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=05b517bd3d350e08c08604dcf72741188b4d586e">05b517bd3d350e08c08604dcf72741188b4d586e</a>
<blockquote>
<p>
    Eliminated compiler warning in gdevcups.c.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 11:57:26 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=78272d055d4c1ca8fbd301130473d00f611bd64e">78272d055d4c1ca8fbd301130473d00f611bd64e</a>
<blockquote>
<p>
    Fixed compiler warning in base/gdevprn.c.
<br>

<br>
gs/base/gdevprn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 14:04:17 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb6b63157d90bed5df4b5dd134b5581b4a38ae39">eb6b63157d90bed5df4b5dd134b5581b4a38ae39</a>
<blockquote>
<p>
    Let the CUPS Raster output device generate RGBW as defined in the CUPS documentation
<br>

<br>
    The CUPS Raster output device (&quot;cups&quot;) has an RGBW output color
<br>
    space. This was intended to produce standard RGB plus an extra channel
<br>
    which marks true black pixels by being 0 and for all non-black pixels
<br>
    having all bits set to 1. This mode is designed to control the use of
<br>
    black ink or toner for black text in printed documents.
<br>

<br>
    The RGBW output of Ghostscript's CUPS Raster output device was
<br>
    actually inverted CMYK, an RGBW which is known to be used by
<br>
    projectors.
<br>

<br>
    The HPLIP printer drivers worked around this bug being able to
<br>
    understand both modes correctly and so printouts on HP printers were
<br>
    correct before, too, but we need to follow the documentation of CUPS,
<br>
    so that if other printer manufacturers/driver developers make use of
<br>
    the RGBW mode get correct results.
<br>

<br>
    This finally fixes bug 691922.
<br>

<br>
    CUPS documentation:
<br>

<br>
    http://www.cups.org/documentation.php/doc-1.5/spec-raster.html
<br>

<br>
    Section: Pixel Value Coding, CUPS_CSPACE_RGBW
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 01:39:00 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=28f0da42cbffd79ba747a3e14a899dda5e7a4bd7">28f0da42cbffd79ba747a3e14a899dda5e7a4bd7</a>
<blockquote>
<p>
        Fix for Bug 692375.  Comparing two structures with memcmp() is a bad idea.
<br>

<br>
        Code in gdevprn.c relied on memcmp() to compare two structures;
<br>
        this isn't allowed by C since there can be gaps in the structure
<br>
        due to padding.  This issue was exposed when llvm-gcc became the
<br>
        default compiler in Xcode 4.  The fix is to compare the structures
<br>
        element by element.
<br>

<br>
        For more information see: http://c-faq.com/struct/compare.html
<br>

<br>
        No expected cluster difference since none of the cluster nodes use
<br>
        llvm-gcc.
<br>

<br>
gs/base/gdevprn.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-15 07:58:13 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f369ae5a30143cdfc27df96de9b1b5bab1c72c6f">f369ae5a30143cdfc27df96de9b1b5bab1c72c6f</a>
<blockquote>
<p>
    Bug #692422. When creating a UUID for PDF files, an earlier change added
<br>
    'uuid:' to the XML.
<br>

<br>
    This potentially caused a buffer overrun leading to a string not being
<br>
    NULL-terminated and causing a corrupted UUID to be written. Although I
<br>
    am unable to reproduce this, this patch resolves the problem for the customer.
<br>

<br>
gs/base/gdevpdfe.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-13 10:15:17 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3c15d3495e4e47a41938710bf2657d0c674f1e55">3c15d3495e4e47a41938710bf2657d0c674f1e55</a>
<blockquote>
<p>
    Fix for bug 692392.    This makes sure that the transfer function is only applied to the K channel when we are mapping gray to CMYK.
<br>
    Also fix for case in which interpolation of 12bit images does not work when using the ICC rendering operation.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gdevplnx.c
<br>
gs/base/gsciemap.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxcmap.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxiscale.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 18:34:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=97aef7a14df2e7e552592cf4a79c28747948d106">97aef7a14df2e7e552592cf4a79c28747948d106</a>
<blockquote>
<p>
    Add the relevant part of the OpenJPEG code to our repos.
<br>

<br>
    We only need the &quot;library&quot; part, not the example apps and third party
<br>
    libraries (only used by the example apps), and they add up to a lot of space.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/openjpeg/libopenjpeg/CMakeLists.txt
<br>
gs/openjpeg/libopenjpeg/Makefile.am
<br>
gs/openjpeg/libopenjpeg/Makefile.in
<br>
gs/openjpeg/libopenjpeg/bio.c
<br>
gs/openjpeg/libopenjpeg/bio.h
<br>
gs/openjpeg/libopenjpeg/cio.c
<br>
gs/openjpeg/libopenjpeg/cio.h
<br>
gs/openjpeg/libopenjpeg/dwt.c
<br>
gs/openjpeg/libopenjpeg/dwt.h
<br>
gs/openjpeg/libopenjpeg/event.c
<br>
gs/openjpeg/libopenjpeg/event.h
<br>
gs/openjpeg/libopenjpeg/fix.h
<br>
gs/openjpeg/libopenjpeg/image.c
<br>
gs/openjpeg/libopenjpeg/image.h
<br>
gs/openjpeg/libopenjpeg/int.h
<br>
gs/openjpeg/libopenjpeg/j2k.c
<br>
gs/openjpeg/libopenjpeg/j2k.h
<br>
gs/openjpeg/libopenjpeg/j2k_lib.c
<br>
gs/openjpeg/libopenjpeg/j2k_lib.h
<br>
gs/openjpeg/libopenjpeg/jp2.c
<br>
gs/openjpeg/libopenjpeg/jp2.h
<br>
gs/openjpeg/libopenjpeg/jpt.c
<br>
gs/openjpeg/libopenjpeg/jpt.h
<br>
gs/openjpeg/libopenjpeg/mct.c
<br>
gs/openjpeg/libopenjpeg/mct.h
<br>
gs/openjpeg/libopenjpeg/mqc.c
<br>
gs/openjpeg/libopenjpeg/mqc.h
<br>
gs/openjpeg/libopenjpeg/openjpeg.c
<br>
gs/openjpeg/libopenjpeg/openjpeg.h
<br>
gs/openjpeg/libopenjpeg/opj_includes.h
<br>
gs/openjpeg/libopenjpeg/opj_malloc.h
<br>
gs/openjpeg/libopenjpeg/pi.c
<br>
gs/openjpeg/libopenjpeg/pi.h
<br>
gs/openjpeg/libopenjpeg/raw.c
<br>
gs/openjpeg/libopenjpeg/raw.h
<br>
gs/openjpeg/libopenjpeg/t1.c
<br>
gs/openjpeg/libopenjpeg/t1.h
<br>
gs/openjpeg/libopenjpeg/t1_generate_luts.c
<br>
gs/openjpeg/libopenjpeg/t1_luts.h
<br>
gs/openjpeg/libopenjpeg/t2.c
<br>
gs/openjpeg/libopenjpeg/t2.h
<br>
gs/openjpeg/libopenjpeg/tcd.c
<br>
gs/openjpeg/libopenjpeg/tcd.h
<br>
gs/openjpeg/libopenjpeg/tgt.c
<br>
gs/openjpeg/libopenjpeg/tgt.h
<br>
gs/openjpeg/opj_config.h.in.user
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 22:24:32 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=46b4ee6b5ef44838ea5c60aeeab76047a666d561">46b4ee6b5ef44838ea5c60aeeab76047a666d561</a>
<blockquote>
<p>
    Fixed landscape orientation printing of PXL drivers pxlmono/pxlcolor
<br>

<br>
    Bug 692128.
<br>

<br>
    Thanks to Tim Waugh from Red Hat for the patch.
<br>

<br>
gs/base/gdevpxut.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 18:19:59 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5d45b3c3bc664f7e8a81e85c812dd100543d4cd9">5d45b3c3bc664f7e8a81e85c812dd100543d4cd9</a>
<blockquote>
<p>
    Bug 690054: fix a bunch of warnings in base/
<br>

<br>
    A couple were real functional problems (left-overs from old API
<br>
    versions), the rest were the usual benign but irritating noise.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevokii.c
<br>
gs/base/gdevphex.c
<br>
gs/base/gdevsunr.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gdevwts.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 15:33:40 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=78fe552263a621714c8335ec46f4493121856192">78fe552263a621714c8335ec46f4493121856192</a>
<blockquote>
<p>
    Bug 690566: small conformance changes to PPD
<br>

<br>
    Include change so (I think) the PPDs are now conformant, but leave out the
<br>
    ones that change the default media.
<br>

<br>
    Credit to Werner Fink ( werner@suse.de ) for the changes.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/lib/cbjc600.ppd
<br>
gs/lib/cbjc800.ppd
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 15:18:50 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8c523f7a77a4f8f3da47bdb452f8df7cc30812ce">8c523f7a77a4f8f3da47bdb452f8df7cc30812ce</a>
<blockquote>
<p>
    Bug 690565: bring the header include up-to-date.
<br>

<br>
    Pull in the tiny part of the patch in the above bug that is relevant
<br>
    to the current source.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/contrib/lips4/gdevl4v.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 14:05:14 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d9e044eeec3f747be7a0d8270b52cd8a8b4d88c5">d9e044eeec3f747be7a0d8270b52cd8a8b4d88c5</a>
<blockquote>
<p>
    Bug 692188: CMS code doesn't compile using HP cc compiler
<br>

<br>
    Fix for lcms definition of &quot;LCMS_INLINE&quot; on the HP compiler.
<br>

<br>
    Credit to Ian Ashley ( ian.ashley@opentext.com ) for the patch.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/lcms/include/lcms.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 13:52:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=091636d3d688823d3c4062471700085ca8c91fd1">091636d3d688823d3c4062471700085ca8c91fd1</a>
<blockquote>
<p>
    Bug 692417: fix a configure problem on OpenBSD
<br>

<br>
    credit to Henk Jan Priester ( hjpriester@gmail.com ) for the patch.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-12 13:43:53 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cacd7dc3e8c6ab4d601330161cd44e3e66eecefa">cacd7dc3e8c6ab4d601330161cd44e3e66eecefa</a>
<blockquote>
<p>
    Bug 691430: Make OpenJPEG a configure-able option.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/openjpeg.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-09 11:52:06 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8cf0fb4b1e6ee17bdc0fe5e198b593244c89281d">8cf0fb4b1e6ee17bdc0fe5e198b593244c89281d</a>
<blockquote>
<p>
    Fixes for various compiler warnings in the ICC code
<br>

<br>
gs/base/gdevxcf.c
<br>
gs/base/gscdevn.c
<br>
gs/base/gsciemap.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_create.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gxclimag.c
<br>
gs/base/gxcmap.c
<br>
gs/psi/zcie.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-10 21:27:35 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d63a63c74e7d84aeb48024526b6af7ecaf343733">d63a63c74e7d84aeb48024526b6af7ecaf343733</a>
<blockquote>
<p>
    Fix the Mac platform test in the luratech section.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-10 10:27:03 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=edd256d908da6ad77d3e595febffcc3717d5e900">edd256d908da6ad77d3e595febffcc3717d5e900</a>
<blockquote>
<p>
    Bug 692367: add gs_memory_t arg to finalize method
<br>

<br>
    By adding a gs_memory_t argument to the object &quot;finalize&quot; method, we can
<br>
    dispense with the pointer-pun hackery that stores the memory context
<br>
    in an extra struct array element of the IO device table, so it's availabe
<br>
    in the finalize method.
<br>

<br>
    Although primarily addresses one hack, this commit touches a number of files
<br>
    because it affects every object with a &quot;finalize&quot; method.
<br>

<br>
    This also addresses an error condition cleanup of a partially create IO
<br>
    device table.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gsalloc.c
<br>
gs/base/gscspace.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gsfcid.c
<br>
gs/base/gsfont.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsiodev.c
<br>
gs/base/gsmalloc.c
<br>
gs/base/gsmchunk.c
<br>
gs/base/gsstype.h
<br>
gs/base/stream.c
<br>
gs/psi/igc.c
<br>
gs/psi/igc.h
<br>
gs/psi/iname.c
<br>
gs/psi/isave.c
<br>
gs/psi/zdscpars.c
<br>
gs/psi/zfjbig2.c
<br>
xps/xpsfont.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-09 23:57:26 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ac24676ec25007066576852934cdfaacd8aae91">7ac24676ec25007066576852934cdfaacd8aae91</a>
<blockquote>
<p>
    The first OpenJPEG effort.
<br>

<br>
    Add JPEG 2000 implementation based on OpenJPEG library.
<br>
    This revision does yet not support the following features:
<br>
    - CMYK and eYCC color spaces
<br>
    - downsampled color planes
<br>
    - alpha transparency planes.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/gs.mak
<br>
gs/base/lib.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/openjpeg.mak
<br>
gs/base/sjpx_openjpeg.c
<br>
gs/base/sjpx_openjpeg.h
<br>
gs/base/winlib.mak
<br>
gs/psi/int.mak
<br>
gs/psi/msvc.mak
<br>
gs/psi/zfjpx.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-09 20:07:12 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b8671d7d27c3d203a55e3f357c1435d1dfd72a3">9b8671d7d27c3d203a55e3f357c1435d1dfd72a3</a>
<blockquote>
<p>
    Add includes for error handling.  Windows build failed to link for me without these.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/gp_mshdl.c
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/lib.mak
<br>
gs/base/winlib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-09 22:56:26 +0700
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1eb77139f09b98671e8e83b921f1c351df4ecb84">1eb77139f09b98671e8e83b921f1c351df4ecb84</a>
<blockquote>
<p>
    Fix (currently harmless) typo in gxdownscale.c
<br>

<br>
    I was testing adjust_width before accessing adjust_width_proc, when
<br>
    it would have been better to test adjust_width_proc. Currently
<br>
    adjust_width != 0 is true iff adjust_width_proc != NULL, so no
<br>
    harm other than possible warnings.
<br>

<br>
gs/base/gxdownscale.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-09 09:41:07 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8f2ecf42738966678a8826d8de9c60c4f3684600">8f2ecf42738966678a8826d8de9c60c4f3684600</a>
<blockquote>
<p>
    Remove gserror.h, its contents have been moved to gserrors.h so we
<br>
    only need have one include file to use for error reporting.
<br>

<br>
gs/base/gdevdbit.c
<br>
gs/base/gdevhit.c
<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevm1.c
<br>
gs/base/gdevpipe.c
<br>
gs/base/gp_mshdl.c
<br>
gs/base/gp_msprn.c
<br>
gs/base/gp_nsync.c
<br>
gs/base/gp_os2pr.c
<br>
gs/base/gp_psync.c
<br>
gs/base/gp_win32.c
<br>
gs/base/gp_wsync.c
<br>
gs/base/gsbitops.c
<br>
gs/base/gscencs.c
<br>
gs/base/gserror.h
<br>
gs/base/gserrors.h
<br>
gs/base/gsfname.c
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gsiomacres.c
<br>
gs/base/gsmalloc.c
<br>
gs/base/gsmisc.c
<br>
gs/base/gsparamx.c
<br>
gs/base/gstext.c
<br>
gs/base/gsutil.c
<br>
gs/base/gx.h
<br>
gs/base/gxclfile.c
<br>
gs/base/gxdownscale.c
<br>
gs/base/lib.mak
<br>
gs/base/minftrsz.c
<br>
gs/base/saes.c
<br>
gs/base/sarc4.c
<br>
gs/base/scfparam.c
<br>
gs/base/sdcparam.c
<br>
gs/base/sddparam.c
<br>
gs/base/sdeparam.c
<br>
gs/base/sfxcommon.c
<br>
gs/base/sfxstdio.c
<br>
gs/base/shcgen.c
<br>
gs/base/simscale.c
<br>
gs/base/sjbig2.c
<br>
gs/base/sjbig2_luratech.c
<br>
gs/base/sjpegd.c
<br>
gs/base/sjpx.c
<br>
gs/base/sjpx_luratech.c
<br>
gs/base/spsdf.c
<br>
gs/base/szlibc.c
<br>
gs/base/winlib.mak
<br>
gs/ghostscript.vcproj
<br>
gs/psi/fapi_ft.c
<br>
gs/psi/int.mak
<br>
gs/psi/os2.mak
<br>
gs/psi/zicc.c
<br>
pcl/pcl.mak
<br>
pcl/pgfdata.c
<br>
pl/pl.mak
<br>
pl/plchar.c
<br>
pl/pldraw.c
<br>
pl/plfont.c
<br>
pl/pluchar.c
<br>
pl/plufont.c
<br>
pl/plulfont.c
<br>
pxl/pxl.mak
<br>
pxl/pxoper.h
<br>
pxl/pxparse.c
<br>
svg/ghostsvg.h
<br>
svg/svg.mak
<br>
tools/gslite/gslt_font_api.c
<br>
tools/gslite/gslt_font_api_test.c
<br>
tools/gslite/gslt_font_int.h
<br>
tools/gslite/gslt_font_test.c
<br>
tools/gslite/gslt_image.c
<br>
tools/gslite/gslt_image_jpeg.c
<br>
tools/gslite/gslt_image_png.c
<br>
tools/gslite/gslt_image_tiff.c
<br>
xps/ghostxps.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-08 04:36:56 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02ced7b54e8c10bb6ded0efff72990a88ec50027">02ced7b54e8c10bb6ded0efff72990a88ec50027</a>
<blockquote>
<p>
    Add backtrace to memento SEGV handler.
<br>

<br>
    Simple backtrace handling; thanks to Tor for the pointer to the
<br>
    stackoverflow article.
<br>

<br>
    This only works with libc based compilers, and may possibly get the
<br>
    bottom couple of entries on the stack wrong. It also doesn't give
<br>
    file and line references, but it does at least give the function
<br>
    names.
<br>

<br>
    Other suggestions in the article offered other ways of working, but
<br>
    they all rely on other libraries, or non-portable features, so this
<br>
    seems the best possible first step.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-06 16:33:49 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4b069b32b3c09eef440d5770d654208c0930c54a">4b069b32b3c09eef440d5770d654208c0930c54a</a>
<blockquote>
<p>
    Improved squeeze2html.pl script; add -q option.
<br>

<br>
    New -q option to omit 'green' runs from the file. Saves substantially
<br>
    on disc space.
<br>

<br>
    It may now be better to use this as a pipe from a gs process doing
<br>
    memory squeezing to save disc space. e.g:
<br>

<br>
     MEMENTO_SQUEEZEAT=1 gs -sDEVICE=png16m -o /dev/null tiger.eps |
<br>
     squeeze2html.pl -q | gzip -9c &gt; out.html.gz
<br>

<br>
    (the theory being that the omission of 'green' runs saves more space
<br>
    than the html overhead).
<br>

<br>
    The output of the above invocation *without* going through squeeze2html.pl
<br>
    hit 2.7Gig before I killed it, so be warned!
<br>

<br>
gs/toolbin/squeeze2html.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-06 14:05:20 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2168e49ea9aa05ef23110addea20c3f29b66bae6">2168e49ea9aa05ef23110addea20c3f29b66bae6</a>
<blockquote>
<p>
    Fix for Bug 690137
<br>

<br>
    The attempts to get the range properly set up for when we have an ICC profile for CIELAB.
<br>
    The issue is that we may have vector drawings that are encoded across the range of real
<br>
    CIELAB values like [100,0] [-128, 127] [-128, 127].  Image data of course is not encoded
<br>
    in this form.  This fix corrects for this difference.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevpdfi.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/psi/zicc.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-06 14:28:11 -0700
</strong>
<br>Robin Watts &lt;robin@peeves.(none)&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bfa6e6513b95f51fda49666b6a28af6c60c66e1b">bfa6e6513b95f51fda49666b6a28af6c60c66e1b</a>
<blockquote>
<p>
    First version of script to make memento squeezing memory readable.
<br>

<br>
    Build gs with Memento enabled: make debug XCFLAGS=&quot;-DMEMENTO&quot;
<br>

<br>
    Then run a mem squeeze:
<br>

<br>
      MEMENTO_SQUEEZEAT=1 gs -sDEVICE=png16m -o /dev/null tiger.eps 2&gt;&amp;1 &gt; log
<br>

<br>
    Then this script will turn 'log' into something much more readable.
<br>

<br>
      squeeze2html.pl &lt; log &gt; out.html
<br>

<br>
    Though you may want to use:
<br>

<br>
      head -10000 log | squeeze2html.pl &gt; out.html
<br>

<br>
    to control the size.
<br>

<br>
    Red boxes are squeezepoints where we SEGV. Yellow are points where we leak.
<br>
    Green where we complete cleanly.
<br>

<br>
    To reproduce a single point (say number 52) in the debugger use:
<br>

<br>
      MEMENTO_FAILAT=52 gdb --args gs -sDEVICE=png16m -o /dev/null tiger.eps
<br>

<br>
    Then 'run' when gdb starts.
<br>

<br>
gs/toolbin/squeeze2html.pl
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 16:45:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bd0ffdf2bfd324656206b93498b2814ad2d4e36d">bd0ffdf2bfd324656206b93498b2814ad2d4e36d</a>
<blockquote>
<p>
    Pull final doc changes from the gs904 branch to master.
<br>

<br>
    &quot;Bring the changelog up to date since the RC, and revise the date.&quot;
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/gs-vms.hlp
<br>
gs/man/dvipdf.1
<br>
gs/man/font2c.1
<br>
gs/man/gs.1
<br>
gs/man/gslp.1
<br>
gs/man/gsnd.1
<br>
gs/man/pdf2dsc.1
<br>
gs/man/pdf2ps.1
<br>
gs/man/pdfopt.1
<br>
gs/man/pf2afm.1
<br>
gs/man/pfbtopfa.1
<br>
gs/man/printafm.1
<br>
gs/man/ps2ascii.1
<br>
gs/man/ps2epsi.1
<br>
gs/man/ps2pdf.1
<br>
gs/man/ps2pdfwr.1
<br>
gs/man/ps2ps.1
<br>
gs/man/wftopfa.1
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 16:15:02 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4916cc6cd1a8d5eb8ef411b4c00952dfea44b36f">4916cc6cd1a8d5eb8ef411b4c00952dfea44b36f</a>
<blockquote>
<p>
    Merge doc changes from the gs904 branch to master.
<br>

<br>
    &quot;Update the docs, version numbers, and dates for 9.04 rc1&quot;
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/gs-vms.hlp
<br>
gs/man/dvipdf.1
<br>
gs/man/font2c.1
<br>
gs/man/gs.1
<br>
gs/man/gslp.1
<br>
gs/man/gsnd.1
<br>
gs/man/pdf2dsc.1
<br>
gs/man/pdf2ps.1
<br>
gs/man/pdfopt.1
<br>
gs/man/pf2afm.1
<br>
gs/man/pfbtopfa.1
<br>
gs/man/printafm.1
<br>
gs/man/ps2ascii.1
<br>
gs/man/ps2epsi.1
<br>
gs/man/ps2pdf.1
<br>
gs/man/ps2pdfwr.1
<br>
gs/man/ps2ps.1
<br>
gs/man/wftopfa.1
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 09:02:28 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a537abc3001a8a1919672a6d936521eba40615a">6a537abc3001a8a1919672a6d936521eba40615a</a>
<blockquote>
<p>
    9.04 NEWS file.
<br>

<br>
NEWS
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 12:07:10 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=74264d5900bb6e4a5cacadfb67db198dcd5fef4e">74264d5900bb6e4a5cacadfb67db198dcd5fef4e</a>
<blockquote>
<p>
    Ensure Win UNICODE/UTF8 code is disabled for ls build
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
language_switch/pspcl6_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 12:05:23 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5ae769f4f5ac9c72f2e960314d0e44c7655e85a">b5ae769f4f5ac9c72f2e960314d0e44c7655e85a</a>
<blockquote>
<p>
    Remove a now spurious debug message.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 15:14:05 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7e4051fa5cde4102b2d3e1d53b528e0797718a10">7e4051fa5cde4102b2d3e1d53b528e0797718a10</a>
<blockquote>
<p>
    Fix 692369 add erasepage back to device initialization in the language
<br>
    switch build.
<br>

<br>
psi/psitop.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 12:59:49 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b00d53f8060554976be107b5009b96b76fbd46b6">b00d53f8060554976be107b5009b96b76fbd46b6</a>
<blockquote>
<p>
    Added a couple of dependencies to fix parallel make.
<br>

<br>
gs/base/lib.mak
<br>
gs/contrib/contrib.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 14:40:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3e07ccf224b0811b017fd41d1fdb24310240294a">3e07ccf224b0811b017fd41d1fdb24310240294a</a>
<blockquote>
<p>
    Bug 691586: again, ensure that GS knows when cups changes the media size
<br>

<br>
    Move the fix for Bug 692393 to immediately after the call to
<br>
    gdev_prn_put_params() - before the call to gx_device_set_media_size()
<br>
    as that can also change the device's width and height settings.
<br>

<br>
    With this fix, I have also removed the temporary workaround put in place
<br>
    with commits 16c410fc29575abffb60926949433653186915fd and
<br>
    bd33c8f57b1a6e3d365ef0efd8dd7571a14310fa.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 10:05:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f4dd0504e9a51dd1c4ad2da1c5135b9e4c67d26">2f4dd0504e9a51dd1c4ad2da1c5135b9e4c67d26</a>
<blockquote>
<p>
    Revise Luratech section of build docs.......
<br>

<br>
    ... to reflect that we now look for the Luratech code under
<br>
    gs/luratech/ldf_jb2 and gs/luratech/lwf_jp2 instead of gs/lwf_jp2 and
<br>
    gs/ldf_jb2
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Make.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-03 17:44:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b5ef299133e7248ca88819d2fa446828e173ad24">b5ef299133e7248ca88819d2fa446828e173ad24</a>
<blockquote>
<p>
    Bug 692393: ensure GS realises cups changed the page dimensions.
<br>

<br>
    After having done media selection from the cups media list, we need to
<br>
    ensure that GS realises that page dimensions in the device structure
<br>
    may have changed since the raster memory was last created - this ensures
<br>
    that GS will reallocate the memory, and correctly setup the
<br>
    line_ptrs array for the new page size.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-02 18:19:35 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ff6e0443bb89434f5c37790fbbf0a5467c2ce2d3">ff6e0443bb89434f5c37790fbbf0a5467c2ce2d3</a>
<blockquote>
<p>
    Memento_failThisEvent addition and usage in chunk allocator.
<br>

<br>
    Add a new Memento function (Memento_failThisEvent) and calls to it from
<br>
    the chunk allocator. This should allow us to do memory squeezing tests
<br>
    that check chunk allocator allocations too.
<br>

<br>
    Tweaks to Memento to ensure it defines MEMENTO_HAS_FORK on both unix
<br>
    and macosx automatically.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gsalloc.c
<br>
gs/base/memento.c
<br>
gs/base/memento.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-02 18:32:09 +0100
</strong>
<br>Robin Watts &lt;robin.watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49f11634e3ade5a0ffaf3d2de4389d59fcfb4769">49f11634e3ade5a0ffaf3d2de4389d59fcfb4769</a>
<blockquote>
<p>
    Remove unused rectangle arg from shading internals. Add comments.
<br>

<br>
    Tiny changes, done while trying to follow the code in search of
<br>
    a bugfix.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gxshade1.c
<br>
gs/base/gxshade6.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-02 09:38:39 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60dd70326d2294a0927696ad261d4aa92c67d5a4">60dd70326d2294a0927696ad261d4aa92c67d5a4</a>
<blockquote>
<p>
    Typo in opdfread header file 'excp' should have been 'exp'.
<br>

<br>
    Fixes bug #692387
<br>

<br>
gs/base/opdfread.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 15:36:52 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4eee9bcfcc2ab0f6be5e997a3c8d87fafab60c4e">4eee9bcfcc2ab0f6be5e997a3c8d87fafab60c4e</a>
<blockquote>
<p>
    Remove an extra copy of gs_cet.ps from %rom% .
<br>

<br>
gs/psi/psromfs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 16:15:55 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c0040ecf8553bdd9f8028fe5f816af24e5070d29">c0040ecf8553bdd9f8028fe5f816af24e5070d29</a>
<blockquote>
<p>
    Backout accidental commit of bbb8f98; &quot;Alexs patch.&quot;
<br>

<br>
    As part of investigations into 692352 I committed Alex's patch locally.
<br>
    Unfortunately, I then let it escape into the wider world.
<br>

<br>
    Backing it out now with apologies to everyone.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 16:28:52 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f23b5bbfec46882da955409e70a0bfbff6f43827">f23b5bbfec46882da955409e70a0bfbff6f43827</a>
<blockquote>
<p>
    Fixes on the gstoraster CUPS filter
<br>

<br>
    1. gstoraster crashes when run outside CUPS (bug #692384)
<br>

<br>
    2. All error messages issued by gstoraster are without newline (bug #692385)
<br>

<br>
    Thanks to Tim Waugh from Red Hat for the patches.
<br>

<br>
gs/cups/colord.c
<br>
gs/cups/gstoraster.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 12:18:25 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bd33c8f57b1a6e3d365ef0efd8dd7571a14310fa">bd33c8f57b1a6e3d365ef0efd8dd7571a14310fa</a>
<blockquote>
<p>
    Tweak to tkampeters previous commit to workaround bug 691586.
<br>

<br>
    Avoid warnings given on some platforms about &quot;unreachable code&quot; by
<br>
    using an informative #define.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 13:05:09 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16c410fc29575abffb60926949433653186915fd">16c410fc29575abffb60926949433653186915fd</a>
<blockquote>
<p>
    CUPS Raster output device: Ignore RIP_MAX_CACHE environment variable
<br>

<br>
    Ghostscript is (at least currently) not able to work with hard-limited
<br>
    space parameters. It crashes with a segmentation fault on many input
<br>
    files then. Leaving the setting of these parameters fully automatic
<br>
    Ghostscript works just fine. As in most distributions (Currently all
<br>
    except Debian, Ubuntu, and their derivatives) CUPS imposes a hard
<br>
    limit via the RIP_MAX_CACHE environment variable, the only way to
<br>
    assure reliable working of Ghostscript is to ignore the parameter,
<br>
    leaving the space parameters in automatic mode. For CUPS this should
<br>
    be no regression, as print queues with other Ghostscript drivers (like
<br>
    pxlcolor, ljet4, ...) worked without hard limits all the time and no
<br>
    one complained.
<br>

<br>
    To ignore this RIP_MAX_CACHE we simply add a &quot;return&quot; right at the
<br>
    beginning of this function. It will be removed when a real fix gets
<br>
    into place.
<br>

<br>
    See http://bugs.ghostscript.com/show_bug.cgi?id=691586
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 00:37:33 -0700
</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e57a8e14f12ef4a4a62f471be55c13ada2aef159">e57a8e14f12ef4a4a62f471be55c13ada2aef159</a>
<blockquote>
<p>
    Changes to clusterpush.pl documentation.
<br>

<br>
gs/toolbin/localcluster/clusterpush.txt
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-30 17:48:14 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=951dee021a45d501e159a3b08624979604e906f5">951dee021a45d501e159a3b08624979604e906f5</a>
<blockquote>
<p>
    Fix bug 692349: UNICODE build of gs not available with VS2003 or VS6.
<br>

<br>
    Apply a slightly tweaked version of alexchers patch to define wmemset
<br>
    when it's not provided by the headers.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/psi/dwtext.c
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 18:14:34 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bbb8f980f19149b769f602dd4594aa6ec6ceeb29">bbb8f980f19149b769f602dd4594aa6ec6ceeb29</a>
<blockquote>
<p>
    Alexs patch.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-30 11:56:53 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6c5f9661790b886a681b8926126875e6df59cbb1">6c5f9661790b886a681b8926126875e6df59cbb1</a>
<blockquote>
<p>
    Added &quot;-dNOINTERPOLATE&quot; to the Ghostscript command lines of the CUPS filters
<br>

<br>
    This makes rendering significantly faster and the output of normal
<br>
    files comming as print jobs from applications does not show any
<br>
    visible difference.
<br>

<br>
gs/cups/gstoraster.c
<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 14:01:58 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0132422fe0543a9473b1605a79f2dd46018de4e2">0132422fe0543a9473b1605a79f2dd46018de4e2</a>
<blockquote>
<p>
    Another fix for cups RGBW.  This gets the color set up properly for RGB.
<br>

<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 15:27:13 -0400
</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=87045a3280e268a52f0d738d34f2a6a3ea093406">87045a3280e268a52f0d738d34f2a6a3ea093406</a>
<blockquote>
<p>
    Bug 691184: Improve comments in cidfmap file.
<br>

<br>
    Add a comment to cidfmap file that shows how to use getenv operator
<br>
    to construct a path dynamically.
<br>

<br>
gs/Resource/Init/cidfmap
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 12:18:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=84177fe99ebd2fa75abe690e0f2a0ef7d7b762e1">84177fe99ebd2fa75abe690e0f2a0ef7d7b762e1</a>
<blockquote>
<p>
    Fix for cups RGBW color space so that transparency works properly.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 08:14:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c90da1237c8d88547377511e7b9d27348f3d7b31">c90da1237c8d88547377511e7b9d27348f3d7b31</a>
<blockquote>
<p>
    A test for fixing RGBW in gdevcups.c
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 19:40:45 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3d6c383d5e6c9eb23c3b150f4b7e87dc3cb3cf2b">3d6c383d5e6c9eb23c3b150f4b7e87dc3cb3cf2b</a>
<blockquote>
<p>
    Speedup for Mementos checking of freed filled blocks.
<br>

<br>
    Check an (aligned) int at a time rather than a byte at a time.
<br>

<br>
    CLUSTER_UNTESTED as this is not enabled.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 15:42:49 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=802e977e87ba0d96445e06aa83f32dd31a79f677">802e977e87ba0d96445e06aa83f32dd31a79f677</a>
<blockquote>
<p>
    Fix compile_inits=1 ufst builds; don't compact the FCOfontmap-PCLPS2 file.
<br>

<br>
    The FCOfontmap-PCLPS2 file isn't *really* postscript, so don't compact
<br>
    it. Fixes bug 692383 (at least for the non 9.04 case).
<br>

<br>
gs/psi/psromfs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 10:16:39 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=217f9712df606e4dedc8afe1220e6b30df627516">217f9712df606e4dedc8afe1220e6b30df627516</a>
<blockquote>
<p>
    Increment version number for &quot;master&quot;.
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/base/version.mak
<br>
pl/pl.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 09:40:34 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1689828742df05af2f82d3b70f16b8c9457aeed1">1689828742df05af2f82d3b70f16b8c9457aeed1</a>
<blockquote>
<p>
    Change the expected directory for luratech.
<br>

<br>
    For the build system to automatically include the luratech JPX and JBIG2
<br>
    code, we previously checked for the existence of lwf_jp2 and ldf_jb2
<br>
    directories under the Ghostscript source dir. This changes it to check
<br>
    for &lt;gs&gt;/luratech/lwf_jp2 and &lt;gs&gt;/luratech/ldf_jb2 instead.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/configure.ac
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 22:28:37 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c99e0da7b93c065dc22e185e89a48f702c5ab417">c99e0da7b93c065dc22e185e89a48f702c5ab417</a>
<blockquote>
<p>
    Restore X11 device to the default unix device.
<br>

<br>
    In setting up autoconf to detect X11 (9b7298f) the X11 devices were
<br>
    not put back at the beginning of the device list and so were no longer
<br>
    the default device.
<br>

<br>
main/pcl6_gcc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 17:16:35 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4f2d3c7b6c8e08a39de3ef1490562937d0f539ff">4f2d3c7b6c8e08a39de3ef1490562937d0f539ff</a>
<blockquote>
<p>
    Changes to lcms v1 to spot failed allocations.
<br>

<br>
    lcms v1 sometimes forgets to deal with failed allocations. Patch at
<br>
    least some of these problems.
<br>

<br>
    Driven by bug 692352. Sufficient to make it run to completion now.
<br>

<br>
gs/lcms/src/cmsgmt.c
<br>
gs/lcms/src/cmslut.c
<br>
gs/lcms/src/cmsps2.c
<br>
gs/lcms/src/cmssamp.c
<br>
gs/lcms/src/cmsvirt.c
<br>
gs/lcms/src/cmswtpnt.c
<br>
gs/lcms/src/cmsxform.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 17:08:58 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=393685fddae380778e970345dbdca60274a31e69">393685fddae380778e970345dbdca60274a31e69</a>
<blockquote>
<p>
    Check for failure to allocate icclink in shading.
<br>

<br>
    When calling shade_init_fill_state, check for a return code to indicate
<br>
    failure. Trigger this case when an attempt to allocate an icclink
<br>
    fails.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gxshade.c
<br>
gs/base/gxshade.h
<br>
gs/base/gxshade1.c
<br>
gs/base/gxshade4.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 15:07:14 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d91b0da2e3dd20561724d574f21882f703bd861c">d91b0da2e3dd20561724d574f21882f703bd861c</a>
<blockquote>
<p>
    Fix typo in rc_decrement description string.
<br>

<br>
    Simple typo fix. CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 14:03:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e82868f118963df1c86f288ea5b7e50116be75b2">e82868f118963df1c86f288ea5b7e50116be75b2</a>
<blockquote>
<p>
    Work around a bug in gcc 3.4.6 on SPARC.
<br>

<br>
    gcc 3.4.6 SPARC (possibly versions/ports) when compiling:
<br>
    &quot;psc-&gt;feof(psc-&gt;file)&quot; seems to be unable to differentiate between
<br>
    &quot;feof&quot; element in the structure, and &quot;feof()&quot; function from the
<br>
    std library, and as a result gives a syntax error.
<br>

<br>
    So I've renamed the structure entry &quot;peof&quot;, and the other two file
<br>
    handling function pointers similarly.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/mkromfs.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 10:21:31 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ae27b694439c3f7f9d721cbc2c832247e18f4aa">1ae27b694439c3f7f9d721cbc2c832247e18f4aa</a>
<blockquote>
<p>
    Disable the Windows UNICODE/UTF8 code for now.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 22:12:41 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=32b447cba35edb7272eacfef755edec4a174e01e">32b447cba35edb7272eacfef755edec4a174e01e</a>
<blockquote>
<p>
    Update of Use.htm to include new color control options.
<br>

<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 16:25:19 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3dbb094608e2d5699c6d77d42f4919c0299a02a">b3dbb094608e2d5699c6d77d42f4919c0299a02a</a>
<blockquote>
<p>
    Fix Bug 692368; SEGV with clist transparency pattern in clist rendering.
<br>

<br>
    The invocation/file given in the bug uses banded rendering (clist).
<br>
    While drawing a band, it uses a pattern with transparency, that is
<br>
    itself rendered by a clist (using the new pattern clist code).
<br>

<br>
    A fill rectangle is being done that tries to call the pattern clist
<br>
    tiling code without the fill_trans_buffer having been setup, and
<br>
    this causes a SEGV.
<br>

<br>
    The reason for this appears to be that the device used by the
<br>
    banded isn't a pdf14 device - instead it's a clipper device wrapping
<br>
    the pdf14 device. The clipper device does not call gx_forward_fill_path,
<br>
    but instead calls gx_default_fill_path, meaning that the special
<br>
    pdf14 handling done to setup the fill_trans_buffer isn't done.
<br>

<br>
    Making the commit call onwards to gx_forward_fill_path doesn't solve the
<br>
    problem either, as that results in no actual clipping being done.
<br>

<br>
    The fix, therefore appears to be to implement a clipping version of
<br>
    fill_path.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 22:14:10 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bf9dc23000675d406d73d987dcc168f6b875ef75">bf9dc23000675d406d73d987dcc168f6b875ef75</a>
<blockquote>
<p>
    Fixed the problem that PCL-XL output files got huge after introduction of color management
<br>

<br>
    The pxlmono and pxlcolor output devices produce PCL XL (PCL 6). With
<br>
    the introduction of color management, the size of the output files
<br>
    often got 10 times larger as before and so PCL XL jobs often did not
<br>
    print as they exhausted the memory of the printer.
<br>

<br>
    According to the contributor of this patch, Shailesh Mistry, the PDFs
<br>
    leading to that problem have a DeviceRGB image which is translated
<br>
    into an ICC profile and passed up but the pcl/pxl can not handle
<br>
    it. This patch looks for incoming ICC profiles and resolves it into
<br>
    the base colour which can be handled at this level.
<br>

<br>
    The patch returns the size of the PCL XL output files to the old
<br>
    values from Ghostscript 8.x.
<br>

<br>
    Fixes bug 692329.
<br>

<br>
gs/base/gdevpx.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 20:37:20 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6ab36cb4256fbd9aa005b79e317ff0993f4acf3e">6ab36cb4256fbd9aa005b79e317ff0993f4acf3e</a>
<blockquote>
<p>
    Fixes on the &quot;pstopxl&quot; CUPS filter
<br>

<br>
    1. Use POSIX and not Perl regular expressions with sed. This makes the
<br>
    script working on a wider scope of systems (Bug #692328).
<br>

<br>
    2. Switch the Ghostscript output device &quot;pxlmono&quot; if the &quot;pxlcolor&quot; is
<br>
    used but &quot;Gray&quot; chosen as &quot;ColorModel&quot; setting. Monochrome
<br>
    &quot;BitsPerPixel&quot; settings do not work with &quot;pxlcolor&quot;.
<br>

<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 10:41:14 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9dca5a4f0eb97ccd33f2503b5e1106c4e1747c5e">9dca5a4f0eb97ccd33f2503b5e1106c4e1747c5e</a>
<blockquote>
<p>
    Fix for Windows Display Device showing gray only
<br>

<br>
    This returns the use of DeviceGrayToK=true/false to set
<br>
    if the user wants DeviceGray to map to K only for a
<br>
    CMYK device.  Also, this fixes a problem where high
<br>
    level gray scale images were always going to composite
<br>
    an not K only.  Bug 692204.
<br>

<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclrast.c
<br>
gs/psi/zdevice.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 09:14:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=927c37a3adec70858787de954cfc620801bf65e5">927c37a3adec70858787de954cfc620801bf65e5</a>
<blockquote>
<p>
    Replacement of default gray ICC profile with Artifex generated versions
<br>

<br>
    I reviewed the bmpcmp results and the relatively few diffs are minor.
<br>

<br>
gs/iccprofiles/default_gray.icc
<br>
gs/iccprofiles/sgray.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 16:19:42 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=68a0f6217428daf297d73589821b62ba2e862d0f">68a0f6217428daf297d73589821b62ba2e862d0f</a>
<blockquote>
<p>
    Bug 692376, synchronize the cmap file to Ken Lunde's sourceforge
<br>
    release.
<br>

<br>
gs/Resource/CMap/90ms-RKSJ-UCS2
<br>
gs/Resource/CMap/90pv-RKSJ-UCS2
<br>
gs/Resource/CMap/90pv-RKSJ-UCS2C
<br>
gs/Resource/CMap/Adobe-CNS1-B5pc
<br>
gs/Resource/CMap/Adobe-CNS1-ETenms-B5
<br>
gs/Resource/CMap/Adobe-CNS1-H-CID
<br>
gs/Resource/CMap/Adobe-CNS1-H-Host
<br>
gs/Resource/CMap/Adobe-CNS1-H-Mac
<br>
gs/Resource/CMap/Adobe-CNS1-UCS2
<br>
gs/Resource/CMap/Adobe-GB1-GBK-EUC
<br>
gs/Resource/CMap/Adobe-GB1-GBpc-EUC
<br>
gs/Resource/CMap/Adobe-GB1-H-CID
<br>
gs/Resource/CMap/Adobe-GB1-H-Host
<br>
gs/Resource/CMap/Adobe-GB1-H-Mac
<br>
gs/Resource/CMap/Adobe-GB1-UCS2
<br>
gs/Resource/CMap/Adobe-Japan1-90ms-RKSJ
<br>
gs/Resource/CMap/Adobe-Japan1-90pv-RKSJ
<br>
gs/Resource/CMap/Adobe-Japan1-H-CID
<br>
gs/Resource/CMap/Adobe-Japan1-H-Host
<br>
gs/Resource/CMap/Adobe-Japan1-H-Mac
<br>
gs/Resource/CMap/Adobe-Japan1-PS-H
<br>
gs/Resource/CMap/Adobe-Japan1-PS-V
<br>
gs/Resource/CMap/Adobe-Japan1-UCS2
<br>
gs/Resource/CMap/Adobe-Japan2-0
<br>
gs/Resource/CMap/Adobe-Korea1-H-CID
<br>
gs/Resource/CMap/Adobe-Korea1-H-Host
<br>
gs/Resource/CMap/Adobe-Korea1-H-Mac
<br>
gs/Resource/CMap/Adobe-Korea1-KSCms-UHC
<br>
gs/Resource/CMap/Adobe-Korea1-KSCpc-EUC
<br>
gs/Resource/CMap/Adobe-Korea1-UCS2
<br>
gs/Resource/CMap/B5pc-UCS2
<br>
gs/Resource/CMap/B5pc-UCS2C
<br>
gs/Resource/CMap/CNS01-RKSJ-H
<br>
gs/Resource/CMap/CNS02-RKSJ-H
<br>
gs/Resource/CMap/CNS03-RKSJ-H
<br>
gs/Resource/CMap/CNS04-RKSJ-H
<br>
gs/Resource/CMap/CNS05-RKSJ-H
<br>
gs/Resource/CMap/CNS06-RKSJ-H
<br>
gs/Resource/CMap/CNS07-RKSJ-H
<br>
gs/Resource/CMap/CNS15-RKSJ-H
<br>
gs/Resource/CMap/ETen-B5-UCS2
<br>
gs/Resource/CMap/GB-RKSJ-H
<br>
gs/Resource/CMap/GBK-EUC-UCS2
<br>
gs/Resource/CMap/GBT-RKSJ-H
<br>
gs/Resource/CMap/GBpc-EUC-UCS2
<br>
gs/Resource/CMap/GBpc-EUC-UCS2C
<br>
gs/Resource/CMap/HK-RKSJ-H
<br>
gs/Resource/CMap/Hojo-EUC-H
<br>
gs/Resource/CMap/Hojo-EUC-V
<br>
gs/Resource/CMap/Hojo-H
<br>
gs/Resource/CMap/Hojo-RKSJ-H
<br>
gs/Resource/CMap/Hojo-V
<br>
gs/Resource/CMap/Identity-UTF16-H
<br>
gs/Resource/CMap/Identity-UTF16-V
<br>
gs/Resource/CMap/KSC-RKSJ-H
<br>
gs/Resource/CMap/KSC2-RKSJ-H
<br>
gs/Resource/CMap/KSCms-UHC-UCS2
<br>
gs/Resource/CMap/KSCpc-EUC-UCS2
<br>
gs/Resource/CMap/KSCpc-EUC-UCS2C
<br>
gs/Resource/CMap/TCVN-RKSJ-H
<br>
gs/Resource/CMap/UCS2-90ms-RKSJ
<br>
gs/Resource/CMap/UCS2-90pv-RKSJ
<br>
gs/Resource/CMap/UCS2-B5pc
<br>
gs/Resource/CMap/UCS2-ETen-B5
<br>
gs/Resource/CMap/UCS2-GBK-EUC
<br>
gs/Resource/CMap/UCS2-GBpc-EUC
<br>
gs/Resource/CMap/UCS2-KSCms-UHC
<br>
gs/Resource/CMap/UCS2-KSCpc-EUC
<br>
gs/Resource/CMap/UniCNS-UTF16-H
<br>
gs/Resource/CMap/UniCNS-UTF32-H
<br>
gs/Resource/CMap/UniCNS-UTF8-H
<br>
gs/Resource/CMap/UniGB-UTF16-H
<br>
gs/Resource/CMap/UniGB-UTF32-H
<br>
gs/Resource/CMap/UniGB-UTF8-H
<br>
gs/Resource/CMap/UniHojo-UCS2-H
<br>
gs/Resource/CMap/UniHojo-UCS2-V
<br>
gs/Resource/CMap/UniHojo-UTF16-H
<br>
gs/Resource/CMap/UniHojo-UTF16-V
<br>
gs/Resource/CMap/UniHojo-UTF32-H
<br>
gs/Resource/CMap/UniHojo-UTF32-V
<br>
gs/Resource/CMap/UniHojo-UTF8-H
<br>
gs/Resource/CMap/UniHojo-UTF8-V
<br>
gs/Resource/CMap/UniJIS-UTF16-H
<br>
gs/Resource/CMap/UniJIS-UTF32-H
<br>
gs/Resource/CMap/UniJIS-UTF8-H
<br>
gs/Resource/CMap/UniJIS2004-UTF16-H
<br>
gs/Resource/CMap/UniJIS2004-UTF32-H
<br>
gs/Resource/CMap/UniJIS2004-UTF8-H
<br>
gs/Resource/CMap/UniJISX0213-UTF32-H
<br>
gs/Resource/CMap/UniJISX02132004-UTF32-H
<br>
gs/Resource/CMap/UniKS-UTF16-H
<br>
gs/Resource/CMap/UniKS-UTF32-H
<br>
gs/Resource/CMap/UniKS-UTF8-H
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 15:56:48 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9adac36488e3a7dd6ed92b80dfcfb1b2866ef50b">9adac36488e3a7dd6ed92b80dfcfb1b2866ef50b</a>
<blockquote>
<p>
    Fix broken build - make requires tab separators, not spaces.
<br>

<br>
gs/base/devs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 16:29:28 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0eaf43f99eaeadda5118335ec1feb26db1733aed">0eaf43f99eaeadda5118335ec1feb26db1733aed</a>
<blockquote>
<p>
    Further updates to mkromfs ps compaction.
<br>

<br>
    Refactor the postscript compaction routines into a state machine.
<br>
    Add options to compact using binary postscript encodings, currently
<br>
    disabled until we drop language level 1 from the interpreter.
<br>

<br>
    Further refactor it to allow it to work from a generic file-like
<br>
    interface, rather than a file. This enables us to use it on the
<br>
    merged file (which is held in memory, not on disc) too.
<br>

<br>
    With binary encoding enabled we get the rom down to 6.8Meg. Without
<br>
    that we get 7.1Meg. Without any compaction, 7.8Meg.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/mkromfs.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 20:21:29 +0100
</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d2d1f22ddf751fe2d6e3f9c5821fbc30a102a6a">7d2d1f22ddf751fe2d6e3f9c5821fbc30a102a6a</a>
<blockquote>
<p>
    Include only one copy of hte Adbove Glyph List
<br>

<br>
    ps2write and text write both need copies of the Adobe Glyph List, we were
<br>
    holding one copy each, this commit makes them use the same information, saving space.
<br>

<br>
    Also resolves Bug #688709 &quot;Updated Adobe Glyph List&quot;
<br>

<br>
    No differences expected.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevagl.c
<br>
gs/base/gdevagl.h
<br>
gs/base/gdevpdfu.c
<br>
gs/base/gdevtxtw.c
<br>
gs/base/gs_agl.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 09:05:44 -0700
</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cb048fc7c5fdfe82550b8f0a80de2ff5fd64739f">cb048fc7c5fdfe82550b8f0a80de2ff5fd64739f</a>
<blockquote>
<p>
    Fix freeing of monitor and semaphores for ICC cache. Bug 692372, customer 580.
<br>

<br>
    Rather than gs_free_object, monitors and semaphores should be freed with the functions
<br>
    which clean up and OS interface parts, gx_monitor_free and gx_semaphore_free. By not
<br>
    doing this we were leaving handles in use on Windows.
<br>

<br>
gs/base/gsicc_cache.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 12:16:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0644acdc8866c32e16df09fae182efa3cddb23d5">0644acdc8866c32e16df09fae182efa3cddb23d5</a>
<blockquote>
<p>
    Change of Default CMYK profile to one created by us to emulate V2 SWOP with reduced footprint.
<br>

<br>
    Reviewed differences from this commit.  With bmpcmp -16 the diffs amounted to halftone differences
<br>
    with nothing visible.
<br>

<br>
gs/iccprofiles/default_cmyk.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-23 00:46:01 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6039e0750306e2c3442b03c9ed5f7afee33a5540">6039e0750306e2c3442b03c9ed5f7afee33a5540</a>
<blockquote>
<p>
    mkromfs improvements, plus associated makefile changes.
<br>

<br>
    Enable Rays code to flatten the gs startup postscript files into one.
<br>
    The code failed if the line length was too short, and could corrupt
<br>
    data when splitting over 2 blocks. Both fixed.
<br>

<br>
    Also add -C and -B options to allow us to compact other postscript
<br>
    files (without flattening). Very simple operation, but seems effective.
<br>

<br>
    Saves 640k on rom size after compression.
<br>

<br>
    Cluster testing shows 6 changes to the halftoning on cups files.
<br>
    Impossible to tell if they are progressions or regressions, but
<br>
    seems unlikely to be caused by this.
<br>

<br>
gs/base/mkromfs.c
<br>
gs/psi/psromfs.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 14:49:26 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e687126be8f4b7bc870fc58530f9343392670b5">5e687126be8f4b7bc870fc58530f9343392670b5</a>
<blockquote>
<p>
    Bug 691699: user specified cups install paths.
<br>

<br>
    Not quite as the bug describes, but we now implement --with-cups-serverbin,
<br>
    --with-cups-serverroot and --with-cups-datadir to allow the user to
<br>
    override the paths normally read from the cups-config utility.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 13:15:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1094db4129bb70f9f7a0222683bc7f299cf4629a">1094db4129bb70f9f7a0222683bc7f299cf4629a</a>
<blockquote>
<p>
    Bug 691956: make installing the cups tools optional
<br>

<br>
    Introduces a --with-cups-install option to configure. To include the
<br>
    cups tools and associated data files in Ghostscript's &quot;install&quot; target
<br>
    you will have to specify &quot;--with-cups-install&quot; at configure time.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/cups/cups.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 22:42:34 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eaec68d05c8d223cb97d89b6a3a9a96e550feeb2">eaec68d05c8d223cb97d89b6a3a9a96e550feeb2</a>
<blockquote>
<p>
    Change of default_rgb.icc to our own sRGB ICC profile.
<br>

<br>
    This results in very minor color diffs in a few files.   I reviewed the diffs and everything is fine.
<br>

<br>
gs/iccprofiles/default_rgb.icc
<br>
gs/iccprofiles/srgb.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 19:03:42 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ddcbdfbded0bae41818eeed4470686c911f2bc7">7ddcbdfbded0bae41818eeed4470686c911f2bc7</a>
<blockquote>
<p>
    Fixes 692360 - the x11cmyk get bits procedure would only work properly
<br>
    with a client supplied data pointer.
<br>

<br>
gs/base/gdevxalt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 12:34:59 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b9ff4a970e22194ecc894fe2460b88bc01726067">b9ff4a970e22194ecc894fe2460b88bc01726067</a>
<blockquote>
<p>
    Fixes 689502 - remove obsolete scripts.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/lib/bdftops
<br>
gs/lib/bdftops.bat
<br>
gs/lib/bdftops.cmd
<br>
gs/lib/bdftops.ps
<br>
gs/lib/fixmswrd.pl
<br>
gs/lib/pv.sh
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 09:02:28 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91954fa8aadd8f7168a4bfa5e219c5c73a5e7477">91954fa8aadd8f7168a4bfa5e219c5c73a5e7477</a>
<blockquote>
<p>
    9.04 NEWS file.
<br>

<br>
NEWS
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 12:07:10 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=24dd98a5274a3c43bb2b8d09ad3a29faa77e2aa8">24dd98a5274a3c43bb2b8d09ad3a29faa77e2aa8</a>
<blockquote>
<p>
    Ensure Win UNICODE/UTF8 code is disabled for ls build
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
language_switch/pspcl6_msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 12:05:23 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fac99700ffb230eaa4563dafd5af07033e5c608e">fac99700ffb230eaa4563dafd5af07033e5c608e</a>
<blockquote>
<p>
    Remove a now spurious debug message.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-05 09:47:19 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ba7dbfdcaf930889e8f278629d646685ccf69405">ba7dbfdcaf930889e8f278629d646685ccf69405</a>
<blockquote>
<p>
    Prep the 9.04 release.
<br>

<br>
    Remove the &quot;RELEASE CANDIDATE&quot; string, bring the changelog up to date since
<br>
    the RC, and revise the date.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/gscdef.c
<br>
gs/base/version.mak
<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/gs-vms.hlp
<br>
gs/man/dvipdf.1
<br>
gs/man/font2c.1
<br>
gs/man/gs.1
<br>
gs/man/gslp.1
<br>
gs/man/gsnd.1
<br>
gs/man/pdf2dsc.1
<br>
gs/man/pdf2ps.1
<br>
gs/man/pdfopt.1
<br>
gs/man/pf2afm.1
<br>
gs/man/pfbtopfa.1
<br>
gs/man/printafm.1
<br>
gs/man/ps2ascii.1
<br>
gs/man/ps2epsi.1
<br>
gs/man/ps2pdf.1
<br>
gs/man/ps2pdfwr.1
<br>
gs/man/ps2ps.1
<br>
gs/man/wftopfa.1
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 14:40:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e173d22697b5489624783a805311337d053e53fe">e173d22697b5489624783a805311337d053e53fe</a>
<blockquote>
<p>
    Bug 691586: again, ensure that GS knows when cups changes the media size
<br>

<br>
    Move the fix for Bug 692393 to immediately after the call to
<br>
    gdev_prn_put_params() - before the call to gx_device_set_media_size()
<br>
    as that can also change the device's width and height settings.
<br>

<br>
    With this fix, I have also removed the temporary workaround put in place
<br>
    with commits 16c410fc29575abffb60926949433653186915fd and
<br>
    bd33c8f57b1a6e3d365ef0efd8dd7571a14310fa.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-04 10:05:13 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6fc00870dd9d1e17709b532f425578b229a61544">6fc00870dd9d1e17709b532f425578b229a61544</a>
<blockquote>
<p>
    Revise Luratech section of build docs.......
<br>

<br>
    ... to reflect that we now look for the Luratech code under
<br>
    gs/luratech/ldf_jb2 and gs/luratech/lwf_jp2 instead of gs/lwf_jp2 and
<br>
    gs/ldf_jb2
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Make.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-03 17:44:55 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a26ed9754118ab5a6027346f2e4d0c41077dfc1c">a26ed9754118ab5a6027346f2e4d0c41077dfc1c</a>
<blockquote>
<p>
    Bug 692393: ensure GS realises cups changed the page dimensions.
<br>

<br>
    After having done media selection from the cups media list, we need to
<br>
    ensure that GS realises that page dimensions in the device structure
<br>
    may have changed since the raster memory was last created - this ensures
<br>
    that GS will reallocate the memory, and correctly setup the
<br>
    line_ptrs array for the new page size.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 16:28:52 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e6f2128efc15316a586813ff314bc037b1d36856">e6f2128efc15316a586813ff314bc037b1d36856</a>
<blockquote>
<p>
    Fixes on the gstoraster CUPS filter
<br>

<br>
    1. gstoraster crashes when run outside CUPS (bug #692384)
<br>

<br>
    2. All error messages issued by gstoraster are without newline (bug #692385)
<br>

<br>
    Thanks to Tim Waugh from Red Hat for the patches.
<br>

<br>
gs/cups/colord.c
<br>
gs/cups/gstoraster.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-30 17:48:14 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9fcefea7e6e770efed7a237c3fc0e8649fba342a">9fcefea7e6e770efed7a237c3fc0e8649fba342a</a>
<blockquote>
<p>
    Fix bug 692349: UNICODE build of gs not available with VS2003 or VS6.
<br>

<br>
    Apply a slightly tweaked version of alexchers patch to define wmemset
<br>
    when it's not provided by the headers.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/psi/dwtext.c
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 12:18:25 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=690a9464f7a7ff524519587b95ba8505b0f823d9">690a9464f7a7ff524519587b95ba8505b0f823d9</a>
<blockquote>
<p>
    Tweak to tkampeters previous commit to workaround bug 691586.
<br>

<br>
    Avoid warnings given on some platforms about &quot;unreachable code&quot; by
<br>
    using an informative #define.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-08-01 13:05:09 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b4c67383d9e71b468b5384b7a63095864d3a9ae7">b4c67383d9e71b468b5384b7a63095864d3a9ae7</a>
<blockquote>
<p>
    CUPS Raster output device: Ignore RIP_MAX_CACHE environment variable
<br>

<br>
    Ghostscript is (at least currently) not able to work with hard-limited
<br>
    space parameters. It crashes with a segmentation fault on many input
<br>
    files then. Leaving the setting of these parameters fully automatic
<br>
    Ghostscript works just fine. As in most distributions (Currently all
<br>
    except Debian, Ubuntu, and their derivatives) CUPS imposes a hard
<br>
    limit via the RIP_MAX_CACHE environment variable, the only way to
<br>
    assure reliable working of Ghostscript is to ignore the parameter,
<br>
    leaving the space parameters in automatic mode. For CUPS this should
<br>
    be no regression, as print queues with other Ghostscript drivers (like
<br>
    pxlcolor, ljet4, ...) worked without hard limits all the time and no
<br>
    one complained.
<br>

<br>
    To ignore this RIP_MAX_CACHE we simply add a &quot;return&quot; right at the
<br>
    beginning of this function. It will be removed when a real fix gets
<br>
    into place.
<br>

<br>
    See http://bugs.ghostscript.com/show_bug.cgi?id=691586
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-30 11:56:53 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83abb6ca67829a1273ed4fdfc894a6af44c5c5ad">83abb6ca67829a1273ed4fdfc894a6af44c5c5ad</a>
<blockquote>
<p>
    Added &quot;-dNOINTERPOLATE&quot; to the Ghostscript command lines of the CUPS filters
<br>

<br>
    This makes rendering significantly faster and the output of normal
<br>
    files comming as print jobs from applications does not show any
<br>
    visible difference.
<br>

<br>
gs/cups/gstoraster.c
<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 14:01:58 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83c7aba31ab324d015a39ec23ab9eb861c23d787">83c7aba31ab324d015a39ec23ab9eb861c23d787</a>
<blockquote>
<p>
    Another fix for cups RGBW.  This gets the color set up properly for RGB.
<br>

<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 12:18:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db4b6b6d07c2b4a97bd0add6e3169874ec2d1af7">db4b6b6d07c2b4a97bd0add6e3169874ec2d1af7</a>
<blockquote>
<p>
    Fix for cups RGBW color space so that transparency works properly.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 08:14:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1d700d4d052e3a9a061e5d6c61e3a4a30e5135d">d1d700d4d052e3a9a061e5d6c61e3a4a30e5135d</a>
<blockquote>
<p>
    A test for fixing RGBW in gdevcups.c
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 10:12:26 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43f6fff7185f868104f6ba4afc102af4f9fe8f3f">43f6fff7185f868104f6ba4afc102af4f9fe8f3f</a>
<blockquote>
<p>
    Update the docs, version numbers, and dates for 9.04 rc1
<br>

<br>
gs/base/gscdef.c
<br>
gs/base/version.mak
<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/gs-vms.hlp
<br>
gs/man/dvipdf.1
<br>
gs/man/font2c.1
<br>
gs/man/gs.1
<br>
gs/man/gslp.1
<br>
gs/man/gsnd.1
<br>
gs/man/pdf2dsc.1
<br>
gs/man/pdf2ps.1
<br>
gs/man/pdfopt.1
<br>
gs/man/pf2afm.1
<br>
gs/man/pfbtopfa.1
<br>
gs/man/printafm.1
<br>
gs/man/ps2ascii.1
<br>
gs/man/ps2epsi.1
<br>
gs/man/ps2pdf.1
<br>
gs/man/ps2pdfwr.1
<br>
gs/man/ps2ps.1
<br>
gs/man/wftopfa.1
<br>
pl/pl.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-29 09:40:34 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d248b98753421668ca683d074709a9422267b9ba">d248b98753421668ca683d074709a9422267b9ba</a>
<blockquote>
<p>
    Change the expected directory for luratech.
<br>

<br>
    For the build system to automatically include the luratech JPX and JBIG2
<br>
    code, we previously checked for the existence of lwf_jp2 and ldf_jb2
<br>
    directories under the Ghostscript source dir. This changes it to check
<br>
    for &lt;gs&gt;/luratech/lwf_jp2 and &lt;gs&gt;/luratech/ldf_jb2 instead.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/base/configure.ac
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 22:28:37 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea57ffb4eb8e3c2bd9ae80547cd7ad011631e212">ea57ffb4eb8e3c2bd9ae80547cd7ad011631e212</a>
<blockquote>
<p>
    Restore X11 device to the default unix device.
<br>

<br>
    In setting up autoconf to detect X11 (9b7298f) the X11 devices were
<br>
    not put back at the beginning of the device list and so were no longer
<br>
    the default device.
<br>

<br>
main/pcl6_gcc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 17:16:35 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1cfbc2655dce2a1c3cc73caf0af54a51db61bfe">c1cfbc2655dce2a1c3cc73caf0af54a51db61bfe</a>
<blockquote>
<p>
    Changes to lcms v1 to spot failed allocations.
<br>

<br>
    lcms v1 sometimes forgets to deal with failed allocations. Patch at
<br>
    least some of these problems.
<br>

<br>
    Driven by bug 692352. Sufficient to make it run to completion now.
<br>

<br>
gs/lcms/src/cmsgmt.c
<br>
gs/lcms/src/cmslut.c
<br>
gs/lcms/src/cmsps2.c
<br>
gs/lcms/src/cmssamp.c
<br>
gs/lcms/src/cmsvirt.c
<br>
gs/lcms/src/cmswtpnt.c
<br>
gs/lcms/src/cmsxform.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 17:08:58 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f6629c581fb56ca33fb7ec57d757ea96f236887">0f6629c581fb56ca33fb7ec57d757ea96f236887</a>
<blockquote>
<p>
    Check for failure to allocate icclink in shading.
<br>

<br>
    When calling shade_init_fill_state, check for a return code to indicate
<br>
    failure. Trigger this case when an attempt to allocate an icclink
<br>
    fails.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gxshade.c
<br>
gs/base/gxshade.h
<br>
gs/base/gxshade1.c
<br>
gs/base/gxshade4.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 15:07:14 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f31edd69e23236fbae4b986883df8e0f43f15af6">f31edd69e23236fbae4b986883df8e0f43f15af6</a>
<blockquote>
<p>
    Fix typo in rc_decrement description string.
<br>

<br>
    Simple typo fix. CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-28 10:21:31 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2364173a3ea2ac1e58b53a68e775d98157035b03">2364173a3ea2ac1e58b53a68e775d98157035b03</a>
<blockquote>
<p>
    Disable the Windows UNICODE/UTF8 code for now.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 22:12:41 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf056ad9ccf42b8c31e6c84ed0ee6d30e0fb7455">cf056ad9ccf42b8c31e6c84ed0ee6d30e0fb7455</a>
<blockquote>
<p>
    Update of Use.htm to include new color control options.
<br>

<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 16:25:19 +0100
</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=12faa934ff19d95f08fc9db33d7a6b288ba67ee2">12faa934ff19d95f08fc9db33d7a6b288ba67ee2</a>
<blockquote>
<p>
    Fix Bug 692368; SEGV with clist transparency pattern in clist rendering.
<br>

<br>
    The invocation/file given in the bug uses banded rendering (clist).
<br>
    While drawing a band, it uses a pattern with transparency, that is
<br>
    itself rendered by a clist (using the new pattern clist code).
<br>

<br>
    A fill rectangle is being done that tries to call the pattern clist
<br>
    tiling code without the fill_trans_buffer having been setup, and
<br>
    this causes a SEGV.
<br>

<br>
    The reason for this appears to be that the device used by the
<br>
    banded isn't a pdf14 device - instead it's a clipper device wrapping
<br>
    the pdf14 device. The clipper device does not call gx_forward_fill_path,
<br>
    but instead calls gx_default_fill_path, meaning that the special
<br>
    pdf14 handling done to setup the fill_trans_buffer isn't done.
<br>

<br>
    Making the commit call onwards to gx_forward_fill_path doesn't solve the
<br>
    problem either, as that results in no actual clipping being done.
<br>

<br>
    The fix, therefore appears to be to implement a clipping version of
<br>
    fill_path.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 22:14:10 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3639f0da216f0472658b37ee96726b80abdc7d56">3639f0da216f0472658b37ee96726b80abdc7d56</a>
<blockquote>
<p>
    Fixed the problem that PCL-XL output files got huge after introduction of color management
<br>

<br>
    The pxlmono and pxlcolor output devices produce PCL XL (PCL 6). With
<br>
    the introduction of color management, the size of the output files
<br>
    often got 10 times larger as before and so PCL XL jobs often did not
<br>
    print as they exhausted the memory of the printer.
<br>

<br>
    According to the contributor of this patch, Shailesh Mistry, the PDFs
<br>
    leading to that problem have a DeviceRGB image which is translated
<br>
    into an ICC profile and passed up but the pcl/pxl can not handle
<br>
    it. This patch looks for incoming ICC profiles and resolves it into
<br>
    the base colour which can be handled at this level.
<br>

<br>
    The patch returns the size of the PCL XL output files to the old
<br>
    values from Ghostscript 8.x.
<br>

<br>
    Fixes bug 692329.
<br>

<br>
gs/base/gdevpx.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 20:37:20 +0200
</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d6e940a92e47f0110438cf2f9bd6ebffa2f9e211">d6e940a92e47f0110438cf2f9bd6ebffa2f9e211</a>
<blockquote>
<p>
    Fixes on the &quot;pstopxl&quot; CUPS filter
<br>

<br>
    1. Use POSIX and not Perl regular expressions with sed. This makes the
<br>
    script working on a wider scope of systems (Bug #692328).
<br>

<br>
    2. Switch the Ghostscript output device &quot;pxlmono&quot; if the &quot;pxlcolor&quot; is
<br>
    used but &quot;Gray&quot; chosen as &quot;ColorModel&quot; setting. Monochrome
<br>
    &quot;BitsPerPixel&quot; settings do not work with &quot;pxlcolor&quot;.
<br>

<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 10:41:14 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fead331855bddda90406d220e84fe5a284b2daa9">fead331855bddda90406d220e84fe5a284b2daa9</a>
<blockquote>
<p>
    Fix for Windows Display Device showing gray only
<br>

<br>
    This returns the use of DeviceGrayToK=true/false to set
<br>
    if the user wants DeviceGray to map to K only for a
<br>
    CMYK device.  Also, this fixes a problem where high
<br>
    level gray scale images were always going to composite
<br>
    an not K only.  Bug 692204.
<br>

<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclrast.c
<br>
gs/psi/zdevice.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-27 09:14:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc18980047abde427405973a6c9452959fb8e93c">dc18980047abde427405973a6c9452959fb8e93c</a>
<blockquote>
<p>
    Replacement of default gray ICC profile with Artifex generated versions
<br>

<br>
    I reviewed the bmpcmp results and the relatively few diffs are minor.
<br>

<br>
gs/iccprofiles/default_gray.icc
<br>
gs/iccprofiles/sgray.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 12:16:04 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cdbc852a9220c324b9094c448e29ce3548a5b8c3">cdbc852a9220c324b9094c448e29ce3548a5b8c3</a>
<blockquote>
<p>
    Change of Default CMYK profile to one created by us to emulate V2 SWOP with reduced footprint.
<br>

<br>
    Reviewed differences from this commit.  With bmpcmp -16 the diffs amounted to halftone differences
<br>
    with nothing visible.
<br>

<br>
gs/iccprofiles/default_cmyk.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 22:42:34 -0700
</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dca23749d5222c591927e78fd4f79a8d649ecd7c">dca23749d5222c591927e78fd4f79a8d649ecd7c</a>
<blockquote>
<p>
    Change of default_rgb.icc to our own sRGB ICC profile.
<br>

<br>
    This results in very minor color diffs in a few files.   I reviewed the diffs and everything is fine.
<br>

<br>
gs/iccprofiles/default_rgb.icc
<br>
gs/iccprofiles/srgb.icc
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 19:03:42 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ba7054ed86bdb26c1c19aad0d5a4313e8b96c4df">ba7054ed86bdb26c1c19aad0d5a4313e8b96c4df</a>
<blockquote>
<p>
    Fixes 692360 - the x11cmyk get bits procedure would only work properly
<br>
    with a client supplied data pointer.
<br>

<br>
gs/base/gdevxalt.c
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-25 12:34:59 -0600
</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ed6a01d99cc63f9953be1e29b9d05643e9ada73">2ed6a01d99cc63f9953be1e29b9d05643e9ada73</a>
<blockquote>
<p>
    Fixes 689502 - remove obsolete scripts.
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/lib/bdftops
<br>
gs/lib/bdftops.bat
<br>
gs/lib/bdftops.cmd
<br>
gs/lib/bdftops.ps
<br>
gs/lib/fixmswrd.pl
<br>
gs/lib/pv.sh
<br>
<p>
</blockquote>
<hr>
<p><strong>2011-07-26 13:15:44 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ec7b1463507ba578e123dc15f4219472a09930f">7ec7b1463507ba578e123dc15f4219472a09930f</a>
<blockquote>
<p>
    Bug 691956: make installing the cups tools optional
<br>

<br>
    Introduces a --with-cups-install option to configure. To include the
<br>
    cups tools and associated data files in Ghostscript's &quot;install&quot; target
<br>
    you will have to specify &quot;--with-cups-install&quot; at configure time.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/cups/cups.mak
<br>
<p>
</blockquote>
<hr>
<hr size=20>

<h2><a name="Version9.04"></a>Version 9.04 (2011-08-05)</h2>

<p>This is the fourth full release in the stable 9.x series.

<p>This release includes fixes and solutions for a number of serious problems
from the earlier 9.x releases and so we <b>strongly</b> encourage those using
earlier 9.x releases to upgrade to this new version, to reap the benefits of
those fixes.

<p>In addition, those still using Ghostscript 8.71 and earlier should begin
migration to 9.x soon since many improvements, features and fixes from the 9.x
versions are impractical to back-port to these legacy versions.

<p> Highlights in this release include:
<ul>
<li>
Transition source base to git source control - not a big deal for most users,
but an important change for those who develop Ghostscript and GhostPDL.
<br>
</li>
<li>
This release introduces flexibility for controlling color based upon the
graphic object type.  In particular, it is now possible to specify unique
output ICC profiles and rendering intents for vector graphic, image and text
portions of a document.  It is also possible to override source color
specifications and use specified ICC profiles and rendering intents for
RGB and CMYK vector graphics, images and text portions of a document.  Finally,
DeviceGray source colors can now easily be specified to map either to K only
or composite CMYK when the output device supports CMYK colorants.
<br>
</li>
<li>
New tiffscaled8 and tiffscaled24 devices. Add new tiffscaled8 and tiffscaled24
devices, copied and modified from tiffscaled. These output grayscale and 24bit rgb
instead of tiffscaleds mono output. MinFeatureSize is ignored for these devices as
it's meaningless for contone output. Downscaling is also now supported for png16m
and pnggray, and a new pngmonod device has been implemented which uses grayscale
rendering internally and then downscales/min_feature_sizes/error diffuses to monochrome.
<br>
</li>
<li>
The PDF interpreter will now try to continue interpreting a PDF after encountering
an error in a stream. The previous bevahior can be reinstated by passing
-dPDFSTOPONERROR to Ghostscript.
<br>
</li>
<li>
Re-enable x11alpha as the default device on Unix systems, now that compatibility
problems between anti-aliased output and transparency are resolved.
<br>
</li>
<li>
Update libjpeg to version 8c.
<br>
</li>
<li>
<u><b> Experimental Text output/extraction device</b></u>
<p> The txtwrite device has undergone some development, and now has genuine
functionality. It accepts any input format which GhostPDL supports, and uses a
combination of methods to try and determine the Unicode values for any text
contained in the document.

<p>The code descends a hierarchy of methods in this process, starting with the
most reliable and only falling back to less reliable methods when better methods
fail. The current hierarchy is as follows:

<ol>
<li> ToUnicode CMaps (PostScript or PDF) or GlyphNamesToUnicode tables (PostScript).</li>
<li> Glyph names of the form 'unixxxx'.</li>
<li> Glyph names defined in the Adobe Glyph List document.</li>
<li> Input character code.</li>
</ol>

<p>Method 1 is highly reliable, method 4 is a best guess and not terribly
reliable, though it will work for many files. It is probably most reliable
for PostScript and PCL files.

<p> The device currently has one parameter 'TextFormat' which controls whether
the output is Unicode text reflecting the layout of the original document
(-dTextFormat=0) or a format intended for use by developers which includes the
Unicode text and some formatting information, such as the size and position of
the text, and the font in use (-dTextFormat=1).

<p> Note that his device does not do OCR (Optical Character Recognition) it is
not capable of finding 'text' which is part of an image. However it will recover
the 'invisible' text from PDF documents which have been scanned and OCR'ed
by Acrobat for searching. Such text has a render mode of 3.

<p> This is the first release of this code and is very much an alpha release, we
expect problems.

<p> In particular the TextFormat=0 output is likely to be incorrect, and will
only work with top-to-bottom left-to-right text. It will probably also be
confused by landscape documents printed on portrait media.

<p> TextFormat=1 should be more reliable, but there may be cases where text is
dropped from the output. Text in PostScript documents using charpath is not yet
supported for example.

<p> We do encourage feedback on the state of this device, and would be
interested in hearing what kind of output would be useful for developers
using TextFormat=1. For now, however, please do not raise bugs through Bugzilla,
instead please send feedback to the gs-devel mailing list.
<br>
</li>
<li>
<u><b>  Experimental Unicode/UTF8 Support on Windows</b></u>
<p>This release introduces some experimental build-time optional support
for UNICODE pathnames on Windows. Essentially this works by following
the model that Linux (and MacOS) have followed for years.

<p>If this code is enabled, then the way ghostscript handles command lines,
registry settings, file accesses and other api calls with top bit set
characters in (i.e. codes >= 128) will change. The net benefit of this
change is that ghostscript will now be able to cope with accessing
files with unicode characters (i.e. codes >= 256) in their pathnames.

<p>This behavior is all completely transparent to users, with the exception
of those calling the gsapi functions with strings including 'extended
ascii' (i.e. characters with codes >= 128 and <= 255). These characters
include accented latin characters, such as u + umlaut, a + grave etc.
The changes required for code that is affected by this are relatively
minor, but as this is a change to the current API, we are announcing
it in advance, and inviting comments.

<p>As of the 9.04 release, the code is disabled. For those who wish to
experiment you will need to build Ghostscript from source, and either
pass USEUNICODE=1 when you invoke nmake or edit psi/msvc.mak to remove
the /DWINDOWS_NO_UNICODE option from CFLAGS.

<p>WARNING: Our intention, subject to feedback, is to enable this by
default in near-future releases (hopefully, the next major release).
If you make use of the affected APIs you should be prepared for the
change to occur - be aware, however, that the current code is
experimental and, depending on the feedback we get, maybe subject
to change.

<p>NOTE: this whole change refers to file paths, command line parameters
and so on - it does not imply that we have unilaterally extended
Postscript to understand UNICODE.

<p>More details:

<p>To give an example, suppose we have a file 'EXAMPLE' we'd like to
invoke ghostscript on, where 'EXAMPLE' is actually a string that
contains some characters with codes >= 128.

<p>On Linux (or MacOS X), when ghostscript is called from a shell, e.g.

<p> gs EXAMPLE

<p>the command is UTF8 encoded; this means that characters with codes < 128
are left unchanged, and characters >= 128 are encoded into multiple bytes.
This encoded string is then passed to the standard 'main' entrypoint in
the gs executable.

<p>Ghostscript proceeds internally without any special handling of these
multibyte characters at all. When it comes to access files it therefore
passes out the UTF8 encoded strings to the standard OS file handling
routines. These routines are designed to take pathnames in UTF8 format,
and thus the files are accessed as normal.

<p>If the Ghostscript executable outputs these (or other) strings to its
stdout, the shell again converts the output from UTF8 back to unicode in
order to display it.

<p>The net effect is that the caller can seamlessly pass in unicode filenames,
has his fileaccesses work out and gets unicode output without the core
of ghostscript ever having to worry about it.

<p>The code change discussed here endeavours to make Windows follow the same
pattern as closely as possible.

<p>When Windows executables are invoked, they can either be called through
an 'ascii' entrypoint (main), or through a unicode ('wide') entrypoint
(wmain). The difference is invisible to the caller, except that unicode
executables can accept characters >= 256 in their invocations.

<p>The new code changes ghostscript from being an ascii executable to being
a unicode one. The Windows specific outer layer takes the unicode
command string and UTF8 encodes it before passing it to the ghostscript
core.

<p>Similarly, the Windows specific filing system calls are updated to
accept utf8 encoded strings from the core, and to convert them to
unicode before operating on them.

<p>The Windows gui app (gswin32.exe, NOT gswin32c.exe) is also updated to
convert stdin/stdout between unicode and utf8 as appropriate, allowing
unicode strings to be copied/pasted to/from other apps.

<p>All of this should be completely transparent to the user, and no code
changes should be required. The one area where changes may be required
are where ghostscript is invoked through the gsapi functions.

<p>Currently, on Linux (and MacOS X) any strings sent over the gsapi are
assumed to be utf8 encoded (and thus can represent any Unicode
character). On Windows, they are assumed simply to be in extended ASCII
(and can therefore represent any character < 256 in the current codepage).
With the proposed change, Windows will move to be in step with Linux.
No differences will be caused to anyone who only uses chars <= 128,
but those people using character codes between 128 and 256 (or indeed
wanting to use higher codes) will need to utf8 encode the strings before
calling gsapi functions.

<p>Such encoding/decoding is a very simple process, and code for both
directions can be found in psi/dwmain.c, psi/dwmainc.c and psi/dwtext.c.

<p> Again, we welcome feedback on this feature, in this case problems
or suggestions about the implementation can be submitted via Bugzilla
but for detailed discussion about the approach for which we opted, it
would be more beneficial discuss it (preferably) on our IRC channel
#ghostscript on freenode.net, or on the gs-devel mailing list.
<br>
</li>
</ul>
<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.04_Incompatible_changes"></a>Incompatible changes</h3>

<p> Deprecated file "gs/base/errors.h" removed, psi/ierrors.h should be used
instead.

<p> The eXternal Fonts (XFonts) functionality, marked as deprecated in 9.02
has now been fully removed.

<p>
No other recorded incompatible changes.

<h3><a name="9.04_Changelog"></a>Changelog</h3>
<p><strong>2011-08-04 14:40:12 +0100
</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e173d22697b5489624783a805311337d053e53fe">e173d22697b5489624783a805311337d053e53fe</a>
<blockquote>

<br>
    Bug 691586: again, ensure that GS knows when cups changes the media size
<br>

<br>
    Move the fix for Bug 692393 to immediately after the call to
<br>
    gdev_prn_put_params() - before the call to gx_device_set_media_size()
<br>
    as that can also change the device's width and height settings.
<br>

<br>
    With this fix, I have also removed the temporary workaround put in place
<br>
    with commits 16c410fc29575abffb60926949433653186915fd and
<br>
    bd33c8f57b1a6e3d365ef0efd8dd7571a14310fa.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-08-04 10:05:13 +0100></a>
2011-08-04 10:05:13 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6fc00870dd9d1e17709b532f425578b229a61544">6fc00870dd9d1e17709b532f425578b229a61544</a>
<blockquote>

<br>
    Revise Luratech section of build docs.......
<br>

<br>
    ... to reflect that we now look for the Luratech code under
<br>
    gs/luratech/ldf_jb2 and gs/luratech/lwf_jp2 instead of gs/lwf_jp2 and
<br>
    gs/ldf_jb2
<br>

<br>
    CLUSTER_UNTESTED
<br>

<br>
gs/doc/Make.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-08-03 17:44:55 +0100></a>
2011-08-03 17:44:55 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a26ed9754118ab5a6027346f2e4d0c41077dfc1c">a26ed9754118ab5a6027346f2e4d0c41077dfc1c</a>
<blockquote>

<br>
    Bug 692393: ensure GS realises cups changed the page dimensions.
<br>

<br>
    After having done media selection from the cups media list, we need to
<br>
    ensure that GS realises that page dimensions in the device structure
<br>
    may have changed since the raster memory was last created - this ensures
<br>
    that GS will reallocate the memory, and correctly setup the
<br>
    line_ptrs array for the new page size.
<br>

<br>
    No cluster differences.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-08-01 16:28:52 +0200></a>
2011-08-01 16:28:52 +0200</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e6f2128efc15316a586813ff314bc037b1d36856">e6f2128efc15316a586813ff314bc037b1d36856</a>
<blockquote>

<br>
    Fixes on the gstoraster CUPS filter
<br>

<br>
    1. gstoraster crashes when run outside CUPS (bug #692384)
<br>

<br>
    2. All error messages issued by gstoraster are without newline (bug #692385)
<br>

<br>
    Thanks to Tim Waugh from Red Hat for the patches.
<br>

<br>
gs/cups/colord.c
<br>
gs/cups/gstoraster.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-30 17:48:14 +0100></a>
2011-07-30 17:48:14 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9fcefea7e6e770efed7a237c3fc0e8649fba342a">9fcefea7e6e770efed7a237c3fc0e8649fba342a</a>
<blockquote>

<br>
    Fix bug 692349: UNICODE build of gs not available with VS2003 or VS6.
<br>

<br>
    Apply a slightly tweaked version of alexchers patch to define wmemset
<br>
    when it's not provided by the headers.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/psi/dwtext.c
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-08-01 12:18:25 +0100></a>
2011-08-01 12:18:25 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=690a9464f7a7ff524519587b95ba8505b0f823d9">690a9464f7a7ff524519587b95ba8505b0f823d9</a>
<blockquote>

<br>
    Tweak to tkampeters previous commit to workaround bug 691586.
<br>

<br>
    Avoid warnings given on some platforms about &quot;unreachable code&quot; by
<br>
    using an informative #define.
<br>

<br>
    No cluster differences expected.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-08-01 13:05:09 +0200></a>
2011-08-01 13:05:09 +0200</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b4c67383d9e71b468b5384b7a63095864d3a9ae7">b4c67383d9e71b468b5384b7a63095864d3a9ae7</a>
<blockquote>

<br>
    CUPS Raster output device: Ignore RIP_MAX_CACHE environment variable
<br>

<br>
    Ghostscript is (at least currently) not able to work with hard-limited
<br>
    space parameters. It crashes with a segmentation fault on many input
<br>
    files then. Leaving the setting of these parameters fully automatic
<br>
    Ghostscript works just fine. As in most distributions (Currently all
<br>
    except Debian, Ubuntu, and their derivatives) CUPS imposes a hard
<br>
    limit via the RIP_MAX_CACHE environment variable, the only way to
<br>
    assure reliable working of Ghostscript is to ignore the parameter,
<br>
    leaving the space parameters in automatic mode. For CUPS this should
<br>
    be no regression, as print queues with other Ghostscript drivers (like
<br>
    pxlcolor, ljet4, ...) worked without hard limits all the time and no
<br>
    one complained.
<br>

<br>
    To ignore this RIP_MAX_CACHE we simply add a &quot;return&quot; right at the
<br>
    beginning of this function. It will be removed when a real fix gets
<br>
    into place.
<br>

<br>
    See http://bugs.ghostscript.com/show_bug.cgi?id=691586
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-30 11:56:53 +0200></a>
2011-07-30 11:56:53 +0200</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83abb6ca67829a1273ed4fdfc894a6af44c5c5ad">83abb6ca67829a1273ed4fdfc894a6af44c5c5ad</a>
<blockquote>
<p>
    Added &quot;-dNOINTERPOLATE&quot; to the Ghostscript command lines of the CUPS filters
<br>

<br>
    This makes rendering significantly faster and the output of normal
<br>
    files comming as print jobs from applications does not show any
<br>
    visible difference.
<br>

<br>
gs/cups/gstoraster.c
<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-29 14:01:58 -0700></a>
2011-07-29 14:01:58 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83c7aba31ab324d015a39ec23ab9eb861c23d787">83c7aba31ab324d015a39ec23ab9eb861c23d787</a>
<blockquote>

<br>
    Another fix for cups RGBW.  This gets the color set up properly for RGB.
<br>

<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-29 12:18:04 -0700></a>
2011-07-29 12:18:04 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db4b6b6d07c2b4a97bd0add6e3169874ec2d1af7">db4b6b6d07c2b4a97bd0add6e3169874ec2d1af7</a>
<blockquote>

<br>
    Fix for cups RGBW color space so that transparency works properly.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-29 08:14:04 -0700></a>
2011-07-29 08:14:04 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1d700d4d052e3a9a061e5d6c61e3a4a30e5135d">d1d700d4d052e3a9a061e5d6c61e3a4a30e5135d</a>
<blockquote>

<br>
    A test for fixing RGBW in gdevcups.c
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-29 10:12:26 +0100></a>
2011-07-29 10:12:26 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=43f6fff7185f868104f6ba4afc102af4f9fe8f3f">43f6fff7185f868104f6ba4afc102af4f9fe8f3f</a>
<blockquote>

<br>
    Update the docs, version numbers, and dates for 9.04 rc1
<br>

<br>
gs/base/gscdef.c
<br>
gs/base/version.mak
<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/gs-vms.hlp
<br>
gs/man/dvipdf.1
<br>
gs/man/font2c.1
<br>
gs/man/gs.1
<br>
gs/man/gslp.1
<br>
gs/man/gsnd.1
<br>
gs/man/pdf2dsc.1
<br>
gs/man/pdf2ps.1
<br>
gs/man/pdfopt.1
<br>
gs/man/pf2afm.1
<br>
gs/man/pfbtopfa.1
<br>
gs/man/printafm.1
<br>
gs/man/ps2ascii.1
<br>
gs/man/ps2epsi.1
<br>
gs/man/ps2pdf.1
<br>
gs/man/ps2pdfwr.1
<br>
gs/man/ps2ps.1
<br>
gs/man/wftopfa.1
<br>
pl/pl.mak
<br>
<p>
</blockquote>


<p><strong><a name=2011-07-29 09:40:34 +0100></a>
2011-07-29 09:40:34 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d248b98753421668ca683d074709a9422267b9ba">d248b98753421668ca683d074709a9422267b9ba</a>
<blockquote>

<br>
Change the expected directory for luratech.
<br>

<br>
For the build system to automatically include the luratech JPX and JBIG2
<br>
code, we previously checked for the existence of lwf_jp2 and ldf_jb2
<br>
directories under the Ghostscript source dir. This changes it to check
<br>
for &lt;gs&gt;/luratech/lwf_jp2 and &lt;gs&gt;/luratech/ldf_jb2 instead.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/configure.ac
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-28 22:28:37 -0600></a>
2011-07-28 22:28:37 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ea57ffb4eb8e3c2bd9ae80547cd7ad011631e212">ea57ffb4eb8e3c2bd9ae80547cd7ad011631e212</a>
<blockquote>

<br>
Restore X11 device to the default unix device.
<br>

<br>
In setting up autoconf to detect X11 (9b7298f) the X11 devices were
<br>
not put back at the beginning of the device list and so were no longer
<br>
the default device.
<br>

<br>
main/pcl6_gcc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-28 17:16:35 +0100></a>
2011-07-28 17:16:35 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c1cfbc2655dce2a1c3cc73caf0af54a51db61bfe">c1cfbc2655dce2a1c3cc73caf0af54a51db61bfe</a>
<blockquote>

<br>
Changes to lcms v1 to spot failed allocations.
<br>

<br>
lcms v1 sometimes forgets to deal with failed allocations. Patch at
<br>
least some of these problems.
<br>

<br>
Driven by bug 692352. Sufficient to make it run to completion now.
<br>

<br>
gs/lcms/src/cmsgmt.c
<br>
gs/lcms/src/cmslut.c
<br>
gs/lcms/src/cmsps2.c
<br>
gs/lcms/src/cmssamp.c
<br>
gs/lcms/src/cmsvirt.c
<br>
gs/lcms/src/cmswtpnt.c
<br>
gs/lcms/src/cmsxform.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-28 17:08:58 +0100></a>
2011-07-28 17:08:58 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f6629c581fb56ca33fb7ec57d757ea96f236887">0f6629c581fb56ca33fb7ec57d757ea96f236887</a>
<blockquote>

<br>
Check for failure to allocate icclink in shading.
<br>

<br>
When calling shade_init_fill_state, check for a return code to indicate
<br>
failure. Trigger this case when an attempt to allocate an icclink
<br>
fails.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gxshade.c
<br>
gs/base/gxshade.h
<br>
gs/base/gxshade1.c
<br>
gs/base/gxshade4.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-28 15:07:14 +0100></a>
2011-07-28 15:07:14 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f31edd69e23236fbae4b986883df8e0f43f15af6">f31edd69e23236fbae4b986883df8e0f43f15af6</a>
<blockquote>

<br>
Fix typo in rc_decrement description string.
<br>

<br>
Simple typo fix. CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<h3><a name="9.04_changelog"></a>Changelog</h3>
<p><strong><a name=2011-07-28 10:21:31 +0100></a>
2011-07-28 10:21:31 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2364173a3ea2ac1e58b53a68e775d98157035b03">2364173a3ea2ac1e58b53a68e775d98157035b03</a>
<blockquote>

<br>
Disable the Windows UNICODE/UTF8 code for now.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 22:12:41 -0700></a>
2011-07-27 22:12:41 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cf056ad9ccf42b8c31e6c84ed0ee6d30e0fb7455">cf056ad9ccf42b8c31e6c84ed0ee6d30e0fb7455</a>
<blockquote>

<br>
Update of Use.htm to include new color control options.
<br>

<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 16:25:19 +0100></a>
2011-07-27 16:25:19 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=12faa934ff19d95f08fc9db33d7a6b288ba67ee2">12faa934ff19d95f08fc9db33d7a6b288ba67ee2</a>
<blockquote>

<br>
Fix Bug 692368; SEGV with clist transparency pattern in clist rendering.
<br>

<br>
The invocation/file given in the bug uses banded rendering (clist).
<br>
While drawing a band, it uses a pattern with transparency, that is
<br>
itself rendered by a clist (using the new pattern clist code).
<br>

<br>
A fill rectangle is being done that tries to call the pattern clist
<br>
tiling code without the fill_trans_buffer having been setup, and
<br>
this causes a SEGV.
<br>

<br>
The reason for this appears to be that the device used by the
<br>
banded isn't a pdf14 device - instead it's a clipper device wrapping
<br>
the pdf14 device. The clipper device does not call gx_forward_fill_path,
<br>
but instead calls gx_default_fill_path, meaning that the special
<br>
pdf14 handling done to setup the fill_trans_buffer isn't done.
<br>

<br>
Making the commit call onwards to gx_forward_fill_path doesn't solve the
<br>
problem either, as that results in no actual clipping being done.
<br>

<br>
The fix, therefore appears to be to implement a clipping version of
<br>
fill_path.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 22:14:10 +0200></a>
2011-07-27 22:14:10 +0200</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3639f0da216f0472658b37ee96726b80abdc7d56">3639f0da216f0472658b37ee96726b80abdc7d56</a>
<blockquote>

<br>
Fixed the problem that PCL-XL output files got huge after introduction of color management
<br>

<br>
The pxlmono and pxlcolor output devices produce PCL XL (PCL 6). With
<br>
the introduction of color management, the size of the output files
<br>
often got 10 times larger as before and so PCL XL jobs often did not
<br>
print as they exhausted the memory of the printer.
<br>

<br>
According to the contributor of this patch, Shailesh Mistry, the PDFs
<br>
leading to that problem have a DeviceRGB image which is translated
<br>
into an ICC profile and passed up but the pcl/pxl can not handle
<br>
it. This patch looks for incoming ICC profiles and resolves it into
<br>
the base colour which can be handled at this level.
<br>

<br>
The patch returns the size of the PCL XL output files to the old
<br>
values from Ghostscript 8.x.
<br>

<br>
Fixes bug 692329.
<br>

<br>
gs/base/gdevpx.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 20:37:20 +0200></a>
2011-07-27 20:37:20 +0200</strong>
<br>Till Kamppeter &lt;till.kamppeter@gmail.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d6e940a92e47f0110438cf2f9bd6ebffa2f9e211">d6e940a92e47f0110438cf2f9bd6ebffa2f9e211</a>
<blockquote>
<p>
    Fixes on the &quot;pstopxl&quot; CUPS filter
<br>

<br>
1. Use POSIX and not Perl regular expressions with sed. This makes the
<br>
script working on a wider scope of systems (Bug #692328).
<br>

<br>
    2. Switch the Ghostscript output device &quot;pxlmono&quot; if the &quot;pxlcolor&quot; is
<br>
    used but &quot;Gray&quot; chosen as &quot;ColorModel&quot; setting. Monochrome
<br>
    &quot;BitsPerPixel&quot; settings do not work with &quot;pxlcolor&quot;.
<br>

<br>
gs/cups/pstopxl.in
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 10:41:14 -0700></a>
2011-07-27 10:41:14 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fead331855bddda90406d220e84fe5a284b2daa9">fead331855bddda90406d220e84fe5a284b2daa9</a>
<blockquote>

<br>
Fix for Windows Display Device showing gray only
<br>

<br>
This returns the use of DeviceGrayToK=true/false to set
<br>
if the user wants DeviceGray to map to K only for a
<br>
CMYK device.  Also, this fixes a problem where high
<br>
level gray scale images were always going to composite
<br>
an not K only.  Bug 692204.
<br>

<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclrast.c
<br>
gs/psi/zdevice.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-27 09:14:04 -0700></a>
2011-07-27 09:14:04 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dc18980047abde427405973a6c9452959fb8e93c">dc18980047abde427405973a6c9452959fb8e93c</a>
<blockquote>

<br>
Replacement of default gray ICC profile with Artifex generated versions
<br>

<br>
I reviewed the bmpcmp results and the relatively few diffs are minor.
<br>

<br>
gs/iccprofiles/default_gray.icc
<br>
gs/iccprofiles/sgray.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-26 12:16:04 -0700></a>
2011-07-26 12:16:04 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cdbc852a9220c324b9094c448e29ce3548a5b8c3">cdbc852a9220c324b9094c448e29ce3548a5b8c3</a>
<blockquote>

<br>
Change of Default CMYK profile to one created by us to emulate V2 SWOP with reduced footprint.
<br>

<br>
Reviewed differences from this commit.  With bmpcmp -16 the diffs amounted to halftone differences
<br>
with nothing visible.
<br>

<br>
gs/iccprofiles/default_cmyk.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 22:42:34 -0700></a>
2011-07-25 22:42:34 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dca23749d5222c591927e78fd4f79a8d649ecd7c">dca23749d5222c591927e78fd4f79a8d649ecd7c</a>
<blockquote>

<br>
Change of default_rgb.icc to our own sRGB ICC profile.
<br>

<br>
This results in very minor color diffs in a few files.   I reviewed the diffs and everything is fine.
<br>

<br>
gs/iccprofiles/default_rgb.icc
<br>
gs/iccprofiles/srgb.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 19:03:42 -0600></a>
2011-07-25 19:03:42 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ba7054ed86bdb26c1c19aad0d5a4313e8b96c4df">ba7054ed86bdb26c1c19aad0d5a4313e8b96c4df</a>
<blockquote>

<br>
Fixes 692360 - the x11cmyk get bits procedure would only work properly
<br>
with a client supplied data pointer.
<br>

<br>
gs/base/gdevxalt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 12:34:59 -0600></a>
2011-07-25 12:34:59 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2ed6a01d99cc63f9953be1e29b9d05643e9ada73">2ed6a01d99cc63f9953be1e29b9d05643e9ada73</a>
<blockquote>

<br>
Fixes 689502 - remove obsolete scripts.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/lib/bdftops
<br>
gs/lib/bdftops.bat
<br>
gs/lib/bdftops.cmd
<br>
gs/lib/bdftops.ps
<br>
gs/lib/fixmswrd.pl
<br>
gs/lib/pv.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-26 13:15:44 +0100></a>
2011-07-26 13:15:44 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7ec7b1463507ba578e123dc15f4219472a09930f">7ec7b1463507ba578e123dc15f4219472a09930f</a>
<blockquote>

<br>
Bug 691956: make installing the cups tools optional
<br>

<br>
Introduces a --with-cups-install option to configure. To include the
<br>
    cups tools and associated data files in Ghostscript's &quot;install&quot; target
<br>
    you will have to specify &quot;--with-cups-install&quot; at configure time.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/cups/cups.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 16:25:20 +0100></a>
2011-07-25 16:25:20 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f62ce181e3a68d7f652d9e903c70bd1a67423782">f62ce181e3a68d7f652d9e903c70bd1a67423782</a>
<blockquote>

<br>
Bug 692367: NULL out pointers for three tables in the context
<br>

<br>
    Add &quot;finalize&quot; methods for gs_name_table, io_device_table and
<br>
font_dir tables which ensure that the pointers in the lib
<br>
context are set to NULL when the memory is released.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/gsfont.c
<br>
gs/base/gsiodev.c
<br>
gs/base/gsstruct.h
<br>
gs/base/gxfcache.h
<br>
gs/psi/iname.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 16:19:19 +0100></a>
2011-07-25 16:19:19 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7dee8c1639a55e5b6ae4051afcfed9caa82e48b5">7dee8c1639a55e5b6ae4051afcfed9caa82e48b5</a>
<blockquote>

<br>
Remove the last traces of OPDFReadProcsetPath
<br>

<br>
The old Procsets had to be moved from PostScript resources to C files, in order that
<br>
ps2write work with non-PostScript interpreters (XPS, PCL). As a result the
<br>
old OPDFReadProcsetPath is no longer used and has been removed.
<br>

<br>
gs/Resource/Init/gs_pdfwr.ps
<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfp.c
<br>
gs/base/gdevpdfu.c
<br>
gs/base/gdevpdfx.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 09:05:05 +0100></a>
2011-07-25 09:05:05 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1562de0f7dc0615ed1397f42a7ad0eb23f4dcf22">1562de0f7dc0615ed1397f42a7ad0eb23f4dcf22</a>
<blockquote>

<br>
Add some minimal documentation regarding the txtwrite device to devices.htm.
<br>

<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-25 08:44:42 +0100></a>
2011-07-25 08:44:42 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4e6a7b5c6fc0c202ba0d962cd19578162e1ce726">4e6a7b5c6fc0c202ba0d962cd19578162e1ce726</a>
<blockquote>

<br>
Add functionality to the textwrite device.
<br>

<br>
The existing textwrite device was a null device which emitted nothing. This
<br>
version actually extracts text from input documents. It uses ToUnicode CMaps,
<br>
GlyphNames2Unicode tables and glyph names in an attempt to map incoming text into
<br>
Unicode (UTF-16) values.
<br>

<br>
It currently has one switch 'TextFormat' which has two possible values, 0 or 1.
<br>
-dTextFormat=0 outputs a 'layout' representation of the original text. This
<br>
will attempt to produce text output which is similar in appearance to the original.
<br>

<br>
-dTextFormat=1 simply emits all the text as it is encountered, along with information
<br>
about the text state. It outputs the Font name, point size, rendering mode and
<br>
writing mode (WMode) as well as the start and ending co-ordinates of the text on the page
<br>
and the Unicode string representing the text. This is intended for those who
<br>
would like to manipulate the text into other formats.
<br>

<br>
The Adobe Glyph Names list is now embedded in the executable twice, in two
<br>
incompatible forms. A future enhanvement will be to only embed the list once.
<br>

<br>
gs/base/gdevagl.h
<br>
gs/base/gdevtxtw.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-24 16:03:31 -0400></a>
2011-07-24 16:03:31 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=128b9fce26e82ef38cedded8fc35a4c99ef55bee">128b9fce26e82ef38cedded8fc35a4c99ef55bee</a>
<blockquote>

<br>
Fix a trivial Valgrind warning.
<br>

<br>
Reorder a logical expression to prevent the access to an unitialized
<br>
value. The only effect of the patch is some noise reduction in the
<br>
Valgrind log.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-24 16:38:35 +0000></a>
2011-07-24 16:38:35 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=961a9a98ecff7a30503ee0bd5d2973263114def7">961a9a98ecff7a30503ee0bd5d2973263114def7</a>
<blockquote>

<br>
Backout commit 7f5d3d7; 8 bit display device palette change.
<br>

<br>
Reverting earlier commit made to attempt to fix bug 692235. While
<br>
this change does give the display device a much nicer palette
<br>
to work with in 8 bits, it will break with all code that currently
<br>
exists to interface to the display device, such as gsview, as the
<br>
palette is not exported with the data.
<br>

<br>
Due to the looming release and the questions remaining to be answered
<br>
on the bug, we pull the change for now.
<br>

<br>
gs/base/gdevdsp.c
<br>
gs/psi/dpmain.c
<br>
gs/psi/dwimg.c
<br>
gs/psi/dxmain.c
<br>
pl/dwimg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 23:28:19 -0700></a>
2011-07-20 23:28:19 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=68bf978d614ec610333abd6a51b88fc3e05689f7">68bf978d614ec610333abd6a51b88fc3e05689f7</a>
<blockquote>

<br>
Fix compiler warnings.
<br>

<br>
    Check return code from &quot;get_profile&quot; dev_proc in gs_nulldevice.c and get rid of the
<br>
implicit declaration for gdev_mem_set_planar.
<br>

<br>
gs/base/gsdevice.c
<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-22 10:36:36 -0700></a>
2011-07-22 10:36:36 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d3302b1176683dc9e4cb5cb8ed9f42bffa0888ee">d3302b1176683dc9e4cb5cb8ed9f42bffa0888ee</a>
<blockquote>

<br>
Fix for bug 692204.  This forces DeviceGray to K only for CMYK devices.
<br>

<br>
This is performed by default now.  To return to a composite type mapping
<br>
that makes use of the true DeviceProfile, use the option -dDeviceGrayToK=false.
<br>
This commit includes a fix to rename the device member variable
<br>
icc_array to icc_struct to reduce confusion in reading the code.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevpdfk.c
<br>
gs/base/gdevtfnx.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gdevvec.c
<br>
gs/base/gdevxini.c
<br>
gs/base/gscms.h
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gslib.c
<br>
gs/base/gxclthrd.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxdevcli.h
<br>
gs/base/gximag3x.c
<br>
gs/iccprofiles/gray_to_k.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-21 20:42:33 +0100></a>
2011-07-21 20:42:33 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7f5d3d7b298bbabc13a484e38e749d572d817bc8">7f5d3d7b298bbabc13a484e38e749d572d817bc8</a>
<blockquote>

<br>
Fix bug 692235: Rendering to 8bit colors shows bad colors.
<br>

<br>
The display device uses an RGBK space for 8 bit rendering. Currently
<br>
this corresponds to a palette of 96 colors; 2 bits each for R,G,B,
<br>
supplemented by 16 greys.
<br>

<br>
This review alters it to use a 6x6x6 RGB cube, supplemented by 40 grey
<br>
levels.
<br>

<br>
In fact, this is slightly wasteful as we repeat the black and white
<br>
representations as color and as greyscale, but it's a huge improvement
<br>
on what we had before.
<br>

<br>
No cluster differences expected as we don't test the display device.
<br>

<br>
gs/base/gdevdsp.c
<br>
gs/psi/dpmain.c
<br>
gs/psi/dwimg.c
<br>
gs/psi/dxmain.c
<br>
pl/dwimg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-22 23:27:18 -0400></a>
2011-07-22 23:27:18 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c2a089d0378402f374cb9004ac0faa3ff82d3c3">4c2a089d0378402f374cb9004ac0faa3ff82d3c3</a>
<blockquote>

<br>
Bug 692361, trap errors produced by --token--
<br>

<br>
Thap errors thrown by --token--, adjust the stack, and rethrow.
<br>
Rev. 4c6809dfa1c539d757c30f572922e05cd1436698 made the errors
<br>
that occur during reading of the contents steam recoverable,
<br>
but missed the case, when the error happens in the --token--.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-21 21:50:59 -0700></a>
2011-07-21 21:50:59 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d37cdcdbcb3b3bb23d0eab06d1683735303d5e1">9d37cdcdbcb3b3bb23d0eab06d1683735303d5e1</a>
<blockquote>

<br>
Fix for bug 692364  in which we were were not handing the initial DeviceGray profiles correctly
<br>

<br>
When the graphic state is started, the color spaces are first set to DeviceGray.  In certain documents
<br>
this is then the color space that is used for drawing and in fact the erase page will initially
<br>
occur with this color space.  If I have a destination ICC profile like CIELAB, then this is
<br>
a problem since we will end up mapping DeviceGray to RGB with the old procedures giving us a
<br>
CIELAB value of [255 255 255] which is a very bright red.  With this fix we in the
<br>
DeviceGray mapping we fix the colorspace to be ICC based and pass then handle the procedure with
<br>
the ICC mapping.    A minor fix was also needed in the pdf14device put_image where we use a
<br>
DeviceGray color space, which happens to have an ICC profile.  We now correctly create the
<br>
ICC profile.  Note that this will cause significant diffs in the cluster push as DeviceGray
<br>
colors that were mapped to pure K before for a CMYK device (due to the fact that we were not
<br>
installing the proper color space) will now map to composite black.  This
<br>
issue will be addressed shortly by another commit where we by default map all DeviceGray
<br>
colors to K only in the CMYK devices.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gxcmap.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-21 16:40:21 +0100></a>
2011-07-21 16:40:21 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=554ce829a9eb59da437541e2efbc646d9edc2805">554ce829a9eb59da437541e2efbc646d9edc2805</a>
<blockquote>

<br>
Fix Bug 692355; gswin32 has garbage chars in window title bars.
<br>

<br>
Existing ghostscript includes windows.h without defining UNICODE, but
<br>
calls the unicode versions of functions where appropriate. Here we
<br>
move to defining UNICODE before including windows.h, but we keep to
<br>
the practise of calling A or W specific variants as much as possible.
<br>

<br>
Partly this is because of time before the release, but mostly a fear
<br>
that this might lead to a Pandoras box of changes.
<br>

<br>
gs/psi/dwtext.c
<br>
gs/psi/dwtext.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-19 20:02:50 +0100></a>
2011-07-19 20:02:50 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c9a8f8b3b0327bb62fc79cfe93d6bd79f997a2b6">c9a8f8b3b0327bb62fc79cfe93d6bd79f997a2b6</a>
<blockquote>

<br>
pdf14 'dirty' rect optimisations.
<br>

<br>
Rename 'bbox' to 'dirty' - makes the purpose of the field much clearer.
<br>

<br>
Export dirty rectangle pointer in gx_pattern_trans_t structure.
<br>

<br>
Remove automatic expansion of 'dirty' rects to full rect boundary.
<br>

<br>
Ensure tiling code sets dirty rectangle as expected.
<br>

<br>
Remove debugging printfs.
<br>

<br>
Testing shows 491 differences. 16 or so real changes (all neutral or
<br>
progressions), but most of them in the cups device. Manual testing
<br>
shows no changes at all - no idea what's going on there.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gdevp14.h
<br>
gs/base/gxblend1.c
<br>
gs/base/gxp1fill.c
<br>
gs/base/gxpcolor.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 15:24:58 -0400></a>
2011-07-20 15:24:58 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4a1159926a8094f19bcacddf0503b5a06edd9184">4a1159926a8094f19bcacddf0503b5a06edd9184</a>
<blockquote>

<br>
Bug 692362, tolerate stream object without stream.
<br>

<br>
Check for the case, where the modified stream dictionary is missing
<br>
/File attribute (probably, because the original stream object was
<br>
missing the stream body) and substitute an empty stream.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 20:03:02 +0000></a>
2011-07-20 20:03:02 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=145a853a0f9ed9d58b76413a5c77aa026500af93">145a853a0f9ed9d58b76413a5c77aa026500af93</a>
<blockquote>

<br>
Add finalize function to pattern clist device.
<br>

<br>
This may need to do more than it does, but the immediate drive for
<br>
this is to correctly drop the reference count on the target device
<br>
on closedown. This is sufficient to stop the SEGV seen on the final
<br>
garbage collection done on stars.pdf.
<br>

<br>
The garbage collector was finding an unfreed pdf14 device, and stepping
<br>
into the target onto to find that the target had been destroyed already.
<br>

<br>
No cluster differences shown in testing.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 10:29:47 -0700></a>
2011-07-20 10:29:47 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=10cd4a92cd64252635c3c7f9a189f857bc59bf97">10cd4a92cd64252635c3c7f9a189f857bc59bf97</a>
<blockquote>

<br>
Fix for missing ICCProfilesDir during some device init. Move profiledir to gs_lib_ctx.
<br>

<br>
The business of trying to keep the profile directory in the device and keeping it in
<br>
sync with the value used in the icc_manager led to problems when some devices were
<br>
initialized. This change moves the profiledir (and its len) into the gs_lib_ctx_t
<br>
(pseudo- global) which is accessible by the icc_manager and devices via the
<br>
gs_memory_t pointer.
<br>

<br>
Remove the no longer needed functions to set and sync the profile in the device and
<br>
replace gsicc_set_icc_directory with gs_lib_ctx_set_icc_directory.
<br>

<br>
Thanks to Michael Vrhel for adding to this patch to make it build on linux and
<br>
build the other parsers.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gslibctx.c
<br>
gs/base/gslibctx.h
<br>
gs/base/lib.mak
<br>
gs/base/msvclib.mak
<br>
gs/psi/int.mak
<br>
gs/psi/zdevice.c
<br>
gs/psi/zusparam.c
<br>
pcl/pctop.c
<br>
psi/psitop.c
<br>
pxl/pxpthr.c
<br>
pxl/pxtop.c
<br>
svg/svgtop.c
<br>
xps/xpstop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 11:43:40 -0700></a>
2011-07-20 11:43:40 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b07cfe2e168d004ed1a4365e985d90c88fa61725">b07cfe2e168d004ed1a4365e985d90c88fa61725</a>
<blockquote>

<br>
Fix for Bug 692074.   Make sure the ht thresholding code writes out device white and device black.
<br>

<br>
This should also fix a polarity issue that we had with the plank device.
<br>

<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 18:24:31 +0000></a>
2011-07-20 18:24:31 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9a91acb5411b457383e59ed4bbefeb0247862228">9a91acb5411b457383e59ed4bbefeb0247862228</a>
<blockquote>

<br>
Reverse the polarity of cups 'gray' colorspaces.
<br>

<br>
Cups colspace 0 is the inverse of colspace 3.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 14:48:55 +0100></a>
2011-07-20 14:48:55 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=467b64692f0b74244fd0bc0748309d05b2f09294">467b64692f0b74244fd0bc0748309d05b2f09294</a>
<blockquote>

<br>
Remove the eXternal Fonts functionality.
<br>

<br>
The XFonts feature was of very limited utility these days, and
<br>
was deprecated a couple of releases ago. This commit removes
<br>
the unloved and rather bit-rotten feature completely.
<br>

<br>
    This does not really &quot;fix&quot; Bug 692357, but renders it pointless.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevmac.c
<br>
gs/base/gdevmac.h
<br>
gs/base/gdevmacxf.c
<br>
gs/base/gdevx.c
<br>
gs/base/gdevx.h
<br>
gs/base/gdevxini.c
<br>
gs/base/gdevxres.c
<br>
gs/base/gdevxxf.c
<br>
gs/base/gxccache.c
<br>
gs/base/gxccman.c
<br>
gs/base/gxchar.c
<br>
gs/base/gxchar.h
<br>
gs/base/gxfcache.h
<br>
gs/base/macos-mcp.mak
<br>
gs/doc/Xfonts.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-20 14:36:10 +0100></a>
2011-07-20 14:36:10 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ca50b1770ae583490954f1546b17bad421fbc9f">5ca50b1770ae583490954f1546b17bad421fbc9f</a>
<blockquote>

<br>
Bug 692359: Retain WMode from CMaps embedded in PDFs
<br>

<br>
The read_CMap procedure skips everything in the embedded
<br>
CMap file stream except the actual character ranges (as does
<br>
Acrobat), thus we lose the WMode setting (if present) from
<br>
the stream. Nor were we propagating the value from the PDF
<br>
CMap stream dict.
<br>

<br>
This revision ensures we propagate the WMode value the PDF
<br>
CMap stream dictionary (if present), which matches Acrobat's
<br>
behaviour.
<br>

<br>
No cluster differences.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-19 21:57:35 -0600></a>
2011-07-19 21:57:35 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a46123967e919fdd557411d2b0d177e6be2722e3">a46123967e919fdd557411d2b0d177e6be2722e3</a>
<blockquote>

<br>
Fixes 692234 premature erasepage.
<br>

<br>
The page was being erased before the postscript interpreter was
<br>
properly initialized.  In particular for the crash in this bug a
<br>
default halftone has to be installed before erasepage.
<br>

<br>
psi/psitop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-19 17:12:23 +0100></a>
2011-07-19 17:12:23 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a6ec8697315e39dabd565a1ca114d3b42f006324">a6ec8697315e39dabd565a1ca114d3b42f006324</a>
<blockquote>

<br>
Small Memento tweaks.
<br>

<br>
When moving a block to the tail of the freelist, ensure that its next pointer
<br>
is set to NULL.
<br>

<br>
When doing 'setParanoia' ensure that any existing countdown is reset.
<br>

<br>
No cluster changes.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-19 10:05:14 +0100></a>
2011-07-19 10:05:14 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=923d5ca0673442a9e8d4921812ac4fbd75433140">923d5ca0673442a9e8d4921812ac4fbd75433140</a>
<blockquote>

<br>
Fix a warning I introduced, and a couple of others
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-18 10:46:05 -0700></a>
2011-07-18 10:46:05 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9ed6be44e85f03f4a22064b698b3c0ea8c818b53">9ed6be44e85f03f4a22064b698b3c0ea8c818b53</a>
<blockquote>

<br>
Fix so that rendering intent makes it properly through clist along with expanded RI capabilities
<br>

<br>
This fixes bug 692139, also adds support for the ability to override the
<br>
internal rendering intent(s) with an externally set rendering intent.  Also,
<br>
it is possible to specify specific rendering intents for RGB graphics, images
<br>
and text as well as CMYK graphic images and text.  Progressions occur in the
<br>
regression test suite.  In particular the file icc_rendering_intent.pdf at 300dpi
<br>
now renders correctly.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclimag.c
<br>
gs/base/gxclpath.c
<br>
gs/base/gxclrast.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-18 17:07:08 +0100></a>
2011-07-18 17:07:08 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=385f519d34703ba88d107649fb59452617590194">385f519d34703ba88d107649fb59452617590194</a>
<blockquote>

<br>
Remove the PNG_INTERNAL define from the PNG device.
<br>

<br>
PNG_INTERNAL being defined exposes libpng's internal APIs which we should
<br>
certainly not be using, and do not appear to. I'm guess that this was
<br>
done to work around an issue in an earlier libpng version, and is no
<br>
longer relevant.
<br>

<br>
No cluster differences
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-17 09:45:35 -0700></a>
2011-07-17 09:45:35 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44a2fd0bb1e2dd12e9ba475da0bdbb93081325d5">44a2fd0bb1e2dd12e9ba475da0bdbb93081325d5</a>
<blockquote>

<br>
Fix crashes and assertion on 32-bit Windows builds. Bugs 692347, 692348.
<br>

<br>
Thanks to SaGS for these fixes. Assertion and crash were found during final checkout of
<br>
the 9.03 release, as well as on the master branch. Partly these problems came from the
<br>
UTF-8 changes.
<br>

<br>
    VS treats the &quot;char&quot; type as signed by default. When extended characters are promoted
<br>
to ints, the values are negative in the range -128 to -1. These values (except -1
<br>
    which conflicts with EOF) are not valid for the &quot;is*()&quot; family of functions.
<br>

<br>
For GS_ registry entries that are not set, the utf8 version of 'gp_getenv_registry()'
<br>
incorrectly returned an 'insufficient buffer space' verdict and let the 'needed
<br>
buffer size' to 0 (cbData = 0 after 'RegQueryValueExW()'). The call to fetch the
<br>
value was then made also with a 0-sized buffer, did the same thing, and left the
<br>
buffer for the value undefined. There were also other problems, for example
<br>
non-REG_SZ entries were ignored only when the value was actually requested (not
<br>
during the request for the buffer size) and the function was doing 'free(wp)' with
<br>
wp == NULL in a few cases.
<br>

<br>
No cluster differences.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gp_wgetv.c
<br>
gs/base/gsargs.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-18 12:52:55 +0100></a>
2011-07-18 12:52:55 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=80f11f7c17fd2d58eded8e8721a6932a0384f5f5">80f11f7c17fd2d58eded8e8721a6932a0384f5f5</a>
<blockquote>

<br>
Fix plane calculations in planar pattern management.
<br>

<br>
The calculation of the depth/shift to use depth in planar pattern management
<br>
was wrong due to a silly typo.
<br>

<br>
This doesn't make it work, just solves an obvious problem.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-16 15:22:03 +0000></a>
2011-07-16 15:22:03 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed9ba4062880109265bf286cb2e3fdc7527fe841">ed9ba4062880109265bf286cb2e3fdc7527fe841</a>
<blockquote>

<br>
Pattern accumulator changes to support planar output devices.
<br>

<br>
When creating the memory buffer for a painttype 1 pattern tile, check
<br>
to see if the underlying device is planar - if it is, then create the
<br>
memory buffer as planar too.
<br>

<br>
The code to tile out the planar pattern buffers still needs fixing, but
<br>
this allows halftoning jobs to run to completion at least.
<br>

<br>
No cluster differences shown.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-16 12:58:35 +0000></a>
2011-07-16 12:58:35 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a438a9f7d363f76013e1c614fc0818fe081875ad">a438a9f7d363f76013e1c614fc0818fe081875ad</a>
<blockquote>

<br>
Fix pattern cache tile accounting.
<br>

<br>
When putting tiles into the pattern cache, we estimate the size we need
<br>
up front (or in the clist case, calculate it exactly). We then clear
<br>
that many bytes in the pattern cache, and add the new tile using that
<br>
estimated size. When we come to evict we recalculate the exact size and
<br>
evict based on that.
<br>

<br>
This causes a mismatch whereby the pattern cache thinks it has the wrong
<br>
number of bits cached. When this is an underestimation, we just end up
<br>
using more memory than we'd like. When it overestimates however, we can
<br>
get into an infinite loop trying to evict things.
<br>

<br>
The fix is to record the number of bits we've accounted for in every
<br>
tile and thus always count the same coming out as we did coming in.
<br>

<br>
If we really want to account for the correct values rather than the
<br>
estimate we can do that, but we must adjust pcache->bits_cache and
<br>
ctile->used appropriately.
<br>

<br>
No bug associated with this, but it was triggered by a forthcoming
<br>
commit to make the pattern accumulator use planar buffers for planar
<br>
devices.
<br>

<br>
No differences in cluster testing.
<br>

<br>
gs/base/gsptype1.c
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxpcolor.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 20:03:50 -0600></a>
2011-07-15 20:03:50 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b7298f794a4d9bdf5f2bc9dd8401cbfa458a018">9b7298f794a4d9bdf5f2bc9dd8401cbfa458a018</a>
<blockquote>

<br>
Autoconf changes for X11 and threads.
<br>

<br>
config.mak.in
<br>
configure.ac
<br>
main/pcl6_gcc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 18:46:37 +0100></a>
2011-07-15 18:46:37 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=10fa3cdcae73e526d6279e5a70522d821d08469d">10fa3cdcae73e526d6279e5a70522d821d08469d</a>
<blockquote>

<br>
Set the defines needed to build luratech on WIN64
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 10:42:30 -0700></a>
2011-07-15 10:42:30 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bfc0768f53bf96acfbbcf184fe83a09d85b4f5b4">bfc0768f53bf96acfbbcf184fe83a09d85b4f5b4</a>
<blockquote>

<br>
Addition of an destination ICC profile for demonstrating the setting of rendering intent
<br>

<br>
gs/toolbin/color/src_color/cmyk_des_renderintent.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 15:12:02 +0100></a>
2011-07-15 15:12:02 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2472633cba1418733d079dea15f624c3649bf6dc">2472633cba1418733d079dea15f624c3649bf6dc</a>
<blockquote>

<br>
Fix the shared library builds.
<br>

<br>
The corrected dependencies in lib.mak broke the shared lib bulids,
<br>
so the rules needed split up to cover the shared and non-shared
<br>
cases.
<br>

<br>
gs/base/configure.ac
<br>
gs/base/gs.mak
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 14:35:04 +0100></a>
2011-07-15 14:35:04 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b0277439b2de03cfcae9282f02021bec72aaa91a">b0277439b2de03cfcae9282f02021bec72aaa91a</a>
<blockquote>

<br>
Resolve a build issue with 64 Windows.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/msvctail.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 12:51:00 +0100></a>
2011-07-15 12:51:00 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9be999c3d781ff92b5498d8cc89b0d2c1fcdc69e">9be999c3d781ff92b5498d8cc89b0d2c1fcdc69e</a>
<blockquote>

<br>
Fix crashes due to uninitialised reschedule and time_slice procs.
<br>

<br>
Freek Kempe reports problems when ghostscript is built with just
<br>
psl3 and pdf FEATURE_DEVS, due to the context entries for
<br>
time_slice_proc and reschedule_proc being uninitialised.
<br>

<br>
We take on a (very slightly modified) version of his suggested fix;
<br>
they are now initialised to a dummy procedure, and can be overridden
<br>
by zcontext_init later if required.
<br>

<br>
No cluster differences seen.
<br>

<br>
gs/psi/icontext.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 08:57:45 +0100></a>
2011-07-15 08:57:45 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d56fdb732eda354c1c0ccd53e62306caf4f600f">7d56fdb732eda354c1c0ccd53e62306caf4f600f</a>
<blockquote>

<br>
Small formatting change for the html changelog
<br>

<br>
gs/toolbin/gitlog2changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 08:51:36 +0100></a>
2011-07-15 08:51:36 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fc670d3f5dd1e066a838165acec54b2859b1ed78">fc670d3f5dd1e066a838165acec54b2859b1ed78</a>
<blockquote>

<br>
Increment the Ghostscript version number to 9.04.
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/base/version.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-15 07:01:39 +0100></a>
2011-07-15 07:01:39 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7e299cc60681c53113f513f95a940ef0349219f9">7e299cc60681c53113f513f95a940ef0349219f9</a>
<blockquote>

<br>
Fix an error in the Win64 building of genarch.exe
<br>

<br>
It was using AUXDIR instead of AUX for the path.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/msvctail.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-14 14:19:37 -0700></a>
2011-07-14 14:19:37 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f98534e2952fb2c2bfa5a3604233d69c76713a41">f98534e2952fb2c2bfa5a3604233d69c76713a41</a>
<blockquote>

<br>
Addition of support to override the document specified rendering intent(s)
<br>

<br>
Also this includes fixes so that if the source color profiles are specified
<br>
the rendering intents associated with those will be used.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/base/gscms.h
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/psi/zusparam.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-14 16:07:03 +0100></a>
2011-07-14 16:07:03 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fb5f2b5f317f9df6a1258ba53c17da84292cafee">fb5f2b5f317f9df6a1258ba53c17da84292cafee</a>
<blockquote>

<br>
Small fix to changes for Bug 688528.
<br>

<br>
The fix for Bug 688528 contained a conditional error checking for
<br>
a return value of greater than zero when in fact it should be
<br>
greater than or equal to zero.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/gdevvec.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-14 10:08:02 +0100></a>
2011-07-14 10:08:02 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7694aad7c0d84ea8c95acff6ca9b189016c280d1">7694aad7c0d84ea8c95acff6ca9b189016c280d1</a>
<blockquote>

<br>
Revise error/warning on PDF missing CIDFont.
<br>

<br>
Now that GS will attempt to continue interpreting a PDF after an error
<br>
in a given content stream, revise the message we emit when he hit a
<br>
missing CIDFont in a PDF condition to reflect that. If PDFSTOPONERROR
<br>
keep the previous message.
<br>

<br>
    Also, add a &quot;flush&quot; at the end of each message to ensure they don't get
<br>
mangled by later, high priority messages.
<br>

<br>
No cluster differences.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-14 10:03:35 +0100></a>
2011-07-14 10:03:35 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=62ce501c977ae1a6cb5c38dac545616111c51ed2">62ce501c977ae1a6cb5c38dac545616111c51ed2</a>
<blockquote>

<br>
Compile out the Unicode path/parameter code with VC7 and before
<br>

<br>
    Visual C 7 (Visual Studio 2003) and earlier do not have all the &quot;wide char&quot;
<br>
related library functions needed for the Windows Unicode path and
<br>
parameter handling, causing a link error.
<br>

<br>
So when building with VC7 and earlier, leave out the Unicode stuff.
<br>

<br>
No cluster differences.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-13 14:34:32 -0700></a>
2011-07-13 14:34:32 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed92ea1c85f7ee188d0ab242e72ca2f220367ed8">ed92ea1c85f7ee188d0ab242e72ca2f220367ed8</a>
<blockquote>

<br>
Addition of ICC profile for demonstrating use of rendering intent on source color
<br>

<br>
gs/toolbin/color/src_color/cmyk_src_renderintent.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-13 10:08:29 -0700></a>
2011-07-13 10:08:29 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=880f2b2b80ce8f1506b2ec9d81ba73737dfaa4af">880f2b2b80ce8f1506b2ec9d81ba73737dfaa4af</a>
<blockquote>

<br>
Add flush after -sGenericResourceDir warning message.
<br>

<br>
    I often have seen this message get garbled by having other messages on stderr &quot;jump in&quot;
<br>
    so that the message on stdout gets split up. The &quot;flush&quot; prevents that.
<br>

<br>
gs/Resource/Init/gs_res.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 19:26:21 -0700></a>
2011-07-12 19:26:21 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=46db3bca63834ae3b3881022fbc9300de8690d10">46db3bca63834ae3b3881022fbc9300de8690d10</a>
<blockquote>

<br>
Fix so that when the null device is installed it is initialized with the proper icc directory
<br>

<br>
This fixes issues on windows when going to the bbox device but there are still issues on linux.
<br>

<br>
gs/base/gsdevice.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 14:07:22 -0700></a>
2011-07-12 14:07:22 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b237cb27450a0d09ad982bd45e2e15829ae974f">6b237cb27450a0d09ad982bd45e2e15829ae974f</a>
<blockquote>

<br>
Addition of code to support source color management dependent upon the graphic type
<br>

<br>
Also fix of the example file that demonstrates this feature.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gxclimag.c
<br>
gs/examples/text_graph_image_cmyk_rgb.pdf
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 20:11:46 +0100></a>
2011-07-12 20:11:46 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a06634a969ea9b0db2d0840d8641847247056145">a06634a969ea9b0db2d0840d8641847247056145</a>
<blockquote>

<br>
Update autoconf build and the Windows build to use Luratech
<br>
if the directories are found where we expect.
<br>

<br>
Include options on each build to disable using Luratech explicitly.
<br>

<br>
Document the change in Make.htm
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/doc/Make.htm
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 19:15:33 +0100></a>
2011-07-12 19:15:33 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=15d3904a43b2dddda12ed842000d9668c2aff8d7">15d3904a43b2dddda12ed842000d9668c2aff8d7</a>
<blockquote>

<br>
Add a simple git log to html changelog script.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/gitlog2changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 17:28:45 +0100></a>
2011-07-12 17:28:45 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=89de03454ba02713403571cb1cdd1312ae818f81">89de03454ba02713403571cb1cdd1312ae818f81</a>
<blockquote>

<br>
Bug 692338: address performance regression in FAPI
<br>

<br>
Previously I changed FAPI to only dispose of the outline or
<br>
bitmap part of the Freetype glyph, intead of the entire
<br>
internal glyph object, so as avoid freeing, re-allocating
<br>
and initialising a glyph object for every glyph. That seemed
<br>
to cause a memory leak, so I reverted it.
<br>

<br>
This commit does it properly, addresing the memory leak by
<br>
correctly freeing the memory that Freetype returns to us
<br>
*containing* the pointer to the bitmap or outline, as well
<br>
as the bitmap/outline data.
<br>

<br>
This is measurably quicker than the previous method.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-12 06:50:46 -0700></a>
2011-07-12 06:50:46 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b6a234634d7987890851cb4375e0520ba8dd0750">b6a234634d7987890851cb4375e0520ba8dd0750</a>
<blockquote>

<br>
Addition of code to support override of internal ICC profiles
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/psi/zicc.c
<br>
gs/psi/zusparam.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-11 09:22:20 +0100></a>
2011-07-11 09:22:20 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=99cbbdaad585b78dfd32db6dc59c08f9743d8d6a">99cbbdaad585b78dfd32db6dc59c08f9743d8d6a</a>
<blockquote>

<br>
Add debugbin to the list of directories to ignore.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-11 09:14:34 +0100></a>
2011-07-11 09:14:34 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee688b964bee8f9562ce92835b2478f88b0dbe31">ee688b964bee8f9562ce92835b2478f88b0dbe31</a>
<blockquote>

<br>
Bug 692327: Support libpng 1.5.x API
<br>

<br>
Revise to support the latest libpng API, conditionally compiled based on
<br>
the PNG_LIBPNG_VER_MINOR.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-10 13:14:04 -0700></a>
2011-07-10 13:14:04 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d1a349055450612218848e8d15fb6c1a4cc22f5b">d1a349055450612218848e8d15fb6c1a4cc22f5b</a>
<blockquote>

<br>
Addition of pdf example file to demonstrate source color graphic object control
<br>

<br>
gs/examples/text_graph_image_cmyk_rgb.pdf
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-10 12:54:02 -0700></a>
2011-07-10 12:54:02 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2065f62ecb27abd974803207a0be160264944401">2065f62ecb27abd974803207a0be160264944401</a>
<blockquote>

<br>
reorganization of files for demonstrating source color control based upon graphic type.
<br>

<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_cyan.icc
<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_magenta.icc
<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_yellow.icc
<br>
gs/toolbin/color/icc_creator/effects/rgb_source_blue.icc
<br>
gs/toolbin/color/icc_creator/effects/rgb_source_green.icc
<br>
gs/toolbin/color/icc_creator/effects/rgb_source_red.icc
<br>
gs/toolbin/color/src_color/cmyk_src_cyan.icc
<br>
gs/toolbin/color/src_color/cmyk_src_magenta.icc
<br>
gs/toolbin/color/src_color/cmyk_src_yellow.icc
<br>
gs/toolbin/color/src_color/objsrc_profiles_example.txt
<br>
gs/toolbin/color/src_color/rgb_source_blue.icc
<br>
gs/toolbin/color/src_color/rgb_source_green.icc
<br>
gs/toolbin/color/src_color/rgb_source_red.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-10 12:19:33 -0700></a>
2011-07-10 12:19:33 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=213fd2eb89c8a818c546cb888fde6bb67d481c07">213fd2eb89c8a818c546cb888fde6bb67d481c07</a>
<blockquote>

<br>
Addition of special effect ICC CMYK source profiles
<br>

<br>
A set of CMYK based profiles for demonstrating the usage of source
<br>
color graphic object type dependent color management
<br>

<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_cyan.icc
<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_magenta.icc
<br>
gs/toolbin/color/icc_creator/effects/cmyk_src_yellow.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-10 09:39:21 -0700></a>
2011-07-10 09:39:21 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f24c2cb3f3e030068e48b9c608ebf87e70679547">f24c2cb3f3e030068e48b9c608ebf87e70679547</a>
<blockquote>

<br>
Addition of special effect RGB ICC profiles
<br>

<br>
These profiles are for use in demonstrating the use of graphic object
<br>
specific color management on source RGB objects.
<br>

<br>
gs/toolbin/color/icc_creator/effects/rgb_source_blue.icc
<br>
gs/toolbin/color/icc_creator/effects/rgb_source_green.icc
<br>
gs/toolbin/color/icc_creator/effects/rgb_source_red.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-09 22:47:53 -0700></a>
2011-07-09 22:47:53 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=048a939c8c5880d1f89f3f61df78e147910cb1d0">048a939c8c5880d1f89f3f61df78e147910cb1d0</a>
<blockquote>

<br>
Fix for bug 692333.
<br>

<br>
Caused by insufficient testing for change in color run when spot colors
<br>
are present during the DeviceN color rendering.  Cluster push shows a
<br>
diff in Bug691425.pdf   bmpcmp seemed OK.
<br>

<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 14:11:52 -0700></a>
2011-07-08 14:11:52 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ec7d65ce2cccbc97a2b696ceecb2ba7d329eff79">ec7d65ce2cccbc97a2b696ceecb2ba7d329eff79</a>
<blockquote>

<br>
Fix initialization in gs_nulldevice (PS nulldevice operator) Bug 692334.
<br>

<br>
The gs_nulldevice was setting the get_profile proc to gx_forward_get_profile so the
<br>
icc_array was coming from the current device in the graphics state but that did not
<br>
match the color_info num_components and polarity leading to incorrect values returned
<br>
if gscms_transform_color_buffer set the OutputFormat to 1 (for the nulldevice) of a
<br>
link handle, but a subsequent call to gscms_transform_color with the same link handle
<br>
expected more than one component.
<br>

<br>
The initialization of the default profile can only be done if the io_device_table has
<br>
been initialized since this function is called during gs_lib_init1 with the table NULL.
<br>

<br>
This change fixes 12-07D.ps differences introduced in the 'tagfix' patch, but does NOT
<br>
introduce any changes to gscms_transform_color_buffer to avoid changing the number
<br>
of components or issue a warning as mentioned in the bug.
<br>

<br>
EXPECTED_DIFFERENCES:
<br>

<br>
12-07D should revert to the output prior to the tagfix change (06df93f)
<br>

<br>
gs/base/gsdevice.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 16:41:47 -0700></a>
2011-07-08 16:41:47 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c48d47e85a27149ecbd84512c8ed80e3d3ab498c">c48d47e85a27149ecbd84512c8ed80e3d3ab498c</a>
<blockquote>

<br>
Fix for graphic tag setting during forward procedure.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gdevnfwd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 12:52:25 -0700></a>
2011-07-08 12:52:25 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c72586e85c6c8953cf3a1cbc32b48949c7622bb4">c72586e85c6c8953cf3a1cbc32b48949c7622bb4</a>
<blockquote>

<br>
Rename variables and objects to be denoted as source graphic tags
<br>

<br>
With recent commit of changes to object tags as being a graphic type tag
<br>
it made sense to rename the source color object types similarly.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/psi/zusparam.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 11:42:37 -0700></a>
2011-07-08 11:42:37 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4df7c79bc1c4df59818ddbc53b20eb1315e7cb48">4df7c79bc1c4df59818ddbc53b20eb1315e7cb48</a>
<blockquote>

<br>
Rename of misnamed file.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/color/icc_creator/effects/k_only..txt
<br>
gs/toolbin/color/icc_creator/effects/k_only.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-23 11:55:14 -0700></a>
2011-06-23 11:55:14 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=06df93f6babc540b8e29ae7cc1fcaed888142d52">06df93f6babc540b8e29ae7cc1fcaed888142d52</a>
<blockquote>

<br>
Rename object_tag to graphics_type_tag and move to the device for MT rendering.
<br>

<br>
The memory->gs_lib_ctx->BITTAG hack was inherently NOT safe for use by multiple
<br>
rendering threads. Devices that want to encode the tag info in the gx_color_index
<br>
need the tag, so we have moved this to the device structure. Multiple rendering
<br>
threads each have unique buffer devices, so this allows clist playback to set
<br>
and use the appropriate tag as the bands are played back without thread
<br>
interference.
<br>

<br>
Rename the gs_object_tag_type_t to gs_graphics_type_t to make it more unique for
<br>
grep based searching and prevent confusion with other uses of the term 'object'.
<br>
Move the enum to gscms.h with the 'set' functions prototyped in gxdevcli.h.
<br>

<br>
Just as for the device's cmm_dev_profile_t information, the tag needs to be
<br>
forwarded by devices in the chain (clipper, compositor) so that these 'helper'
<br>
filtering devices don't interfere with the setting of the tag. The tag value is
<br>
maintained in all devices in the chain so a 'get_graphics_type_tag' dev_proc
<br>
is not needed -- the dev->graphics_type_tag can be access directly.
<br>

<br>
Previously, tags were not recorded except for devices that enabled tags.
<br>
Now tags are tracked for all devices for use in selecting an ICC profile
<br>
and a device can signal that it maintains tags by setting GS_DEVICE_ENCODES_TAGS
<br>
for use by compositors that want to know whether or not to maintain a tag
<br>
plane, such as the pdf14 device.
<br>

<br>
Also replace the old 'get_object_type' that the anti-aliasing used with the
<br>
single approach for consistency and to cure problems (not identifed) with using
<br>
AA when other devices are interposed in the chain (clipper, compositor).
<br>

<br>
EXPECTED_DIFFERENCES:
<br>

<br>
Various 12-07D.PS PS LL3 CET files will show color differences on page 3 (GLOBINT)
<br>
as described in Bug692334.
<br>

<br>
gs/base/gdevabuf.c
<br>
gs/base/gdevbit.c
<br>
gs/base/gdevddrw.c
<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevprn.h
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevrops.c
<br>
gs/base/gdevwts.c
<br>
gs/base/gdevxcf.c
<br>
gs/base/gscms.h
<br>
gs/base/gscsepr.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdps1.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gsimage.c
<br>
gs/base/gslibctx.c
<br>
gs/base/gslibctx.h
<br>
gs/base/gsnamecl.c
<br>
gs/base/gsncdummy.c
<br>
gs/base/gspaint.c
<br>
gs/base/gstext.c
<br>
gs/base/gstrans.c
<br>
gs/base/gsutil.c
<br>
gs/base/gsutil.h
<br>
gs/base/gxacpath.c
<br>
gs/base/gxblend1.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclipm.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxclrast.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevice.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxistate.h
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxshade.c
<br>
xps/xpsgradient.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 14:12:51 +0100></a>
2011-07-08 14:12:51 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=73c09fa015d1e5a19083001bc343abbb67992c9d">73c09fa015d1e5a19083001bc343abbb67992c9d</a>
<blockquote>

<br>
Fix Bug 692331: SEGV in image interpolation.
<br>

<br>
In fixing bug 692225, it seems I broke this.
<br>

<br>
In the setup code that decides whether decoding is required or not, I
<br>
was incorrectly choosing to use the 'decode' case, when in fact the
<br>
'decoding' is done later for CIE colorspaces. As such I should have used
<br>
the no-decode case.
<br>

<br>
Fixing this appears to cure the problem.
<br>

<br>
gs/base/gxiscale.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-08 11:14:08 +0100></a>
2011-07-08 11:14:08 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02a53b643780f40f5d8947272eabb947002c40b3">02a53b643780f40f5d8947272eabb947002c40b3</a>
<blockquote>

<br>
Bug 692322: Clarify in ps2pdf manpage that output goes to cwd by default.
<br>

<br>
Credit to Jonathan Nieder &lt;jrnieder@gmail.com&gt;.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/man/ps2pdf.1
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-07 20:50:35 +0000></a>
2011-07-07 20:50:35 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0e0db1ca146d82f6a1b0ae90f7146e7d65ffbba9">0e0db1ca146d82f6a1b0ae90f7146e7d65ffbba9</a>
<blockquote>

<br>
Fix bug 692330: SEGV in clist memfile fseek.
<br>

<br>
The icc unserialise profile code ftells, then reads, then fseeks to
<br>
maintain the position of the stream. The fseek was leaving the stream
<br>
in an illegal state (the pointer was exactly at the end of the last
<br>
block at the end of the file). Internally we are supposed to always
<br>
have memory allocated for us to write into, and in this circumstance
<br>
we didn't.
<br>

<br>
The fseek code was actually correct, as was the ftell code. The problem
<br>
lay in the fwrite code that left the stream in an illegal state.
<br>

<br>
The fix is simply to change the fwrite logic slightly; we are guaranteed
<br>
to have space on entry to the loop, so we just need to ensure we have
<br>
space on exit.
<br>

<br>
Cluster testing shows no differences (or none due to this change at least).
<br>

<br>
gs/base/gxclmem.c
<br>
gs/base/gxclread.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-06 23:12:51 -0600></a>
2011-07-06 23:12:51 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91c925158fd8bb84c0d44dff2ec4888dc4d6168e">91c925158fd8bb84c0d44dff2ec4888dc4d6168e</a>
<blockquote>

<br>
Updates PDL README.txt
<br>

<br>
README.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-07 13:47:03 +0100></a>
2011-07-07 13:47:03 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8191a2e349d1f8787b2f4805d770fa8b11f82d18">8191a2e349d1f8787b2f4805d770fa8b11f82d18</a>
<blockquote>

<br>
Bug 688528-addendum: quell warnings and handle errors.
<br>

<br>
gs/base/gdevvec.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gximag3x.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-07 10:41:27 +0100></a>
2011-07-07 10:41:27 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dadc4955945d8004785ed13095ea9ea79c0f13a6">dadc4955945d8004785ed13095ea9ea79c0f13a6</a>
<blockquote>

<br>
Bug 688528: set ICC profiles for interal uses of bbox device.
<br>

<br>
If we create a bbox device internally (i.e. not as an output device)
<br>
we must still ensure that the device has ICC profiles set in it. In
<br>
this case, it simply inherits the profile array from the parent
<br>
device.
<br>

<br>
This also meant moving the ICC manager initialization to before the
<br>
    device &quot;open&quot; call in gs_setdevice_no_erase() because the device set
<br>
    can also open another device (in this case, pswrite's &quot;open&quot; has the
<br>
effect, via the vector device, of setting a bbox device instance, so
<br>
there must be an array of ICC profiles at that stage for bbox to
<br>
inherit.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevvec.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gslib.c
<br>
gs/base/gximag3x.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-06 22:05:43 -0400></a>
2011-07-06 22:05:43 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=73bfbe4b5f6e7090c2b6aad0183ddc8a186d5788">73bfbe4b5f6e7090c2b6aad0183ddc8a186d5788</a>
<blockquote>

<br>
Fix Cygwin build.
<br>

<br>
Some Cygwin tools use \r\n line endings. Add transliteration of \r
<br>
to the space character to compensate for this lossage.
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-06 17:29:24 -0600></a>
2011-07-06 17:29:24 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7531d50c7b6dec596e142ff555f3cbfc28613abe">7531d50c7b6dec596e142ff555f3cbfc28613abe</a>
<blockquote>

<br>
Shailesh Mistry's fix for 692311 - corrupt character rendering.
<br>

<br>
In adaptive compression mode the seed row for delta row compression
<br>
was not properly cleared.  With this change the code is now compatible
<br>
with HP monochrome printers, previously the Artifex code was
<br>
compatible with HP Color Laserjets.  We do not implement a device
<br>
specific switch - for example the new code could be enabled if the
<br>
current mode of emulation was PCL5E (mono PCL) and not PCL5C (color
<br>
PCL) allowing emulation of both product types.  However the corrupt
<br>
character output of HP color printers is probably never an intended
<br>
result.
<br>

<br>
pcl/rtraster.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-05 11:04:27 -0600></a>
2011-07-05 11:04:27 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6e1c268d0ceb3d39e33d242132a917ac27cc2491">6e1c268d0ceb3d39e33d242132a917ac27cc2491</a>
<blockquote>

<br>
Fix allocator and cleanup.
<br>

<br>
Use global allocator in the font directory not the local allocator in
<br>
the graphics state.  Move the cache size assignment to the end of the
<br>
procedure after any error can occur and trivial style changes.
<br>

<br>
gs/base/gsfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 23:29:44 -0600></a>
2011-06-29 23:29:44 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=00dbc00bbbbc5dd7d3ec4fce2ac5ed72a4e13bde">00dbc00bbbbc5dd7d3ec4fce2ac5ed72a4e13bde</a>
<blockquote>

<br>
Implement gs_setcachesize properly.
<br>

<br>
The previous implementation simply set the cache size state value but
<br>
didn't attempt to rebuild the cache.  The new font cache size is
<br>
provided by size operand of setcacheparams.
<br>

<br>
We also limit the size operand to the values discovered used by CPSI, the
<br>
range is device dependent and the CPSI range appears reasonable.
<br>

<br>
gs/base/gsfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-23 12:58:53 -0600></a>
2011-06-23 12:58:53 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee351ae182d5f5fabe36f0ce9216a4da39c1c831">ee351ae182d5f5fabe36f0ce9216a4da39c1c831</a>
<blockquote>

<br>
Removes obsolete code.
<br>

<br>
The is callback used to be used to delete all characters from the
<br>
cache, we don't do that anymore.
<br>

<br>
pcl/pcfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-18 18:03:44 -0600></a>
2011-06-18 18:03:44 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f91aa55a593789c3e342f649e1ebd7f575008e2c">f91aa55a593789c3e342f649e1ebd7f575008e2c</a>
<blockquote>

<br>
Fix bug #692246 infinite loop searching the character table.
<br>

<br>
Set up the number of characters in the table and the maximum amount of
<br>
memory used by the font cache such that we maintain the invariant that
<br>
we will run out of memory before running out of table entries.  Thanks
<br>
to Shailesh Mistry for assistance in analyzing this problem.
<br>

<br>
gs/base/gxccman.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-06 13:30:23 +0100></a>
2011-07-06 13:30:23 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e5a37634a8e15a945e7f5ea4aca68ab8e1e34d3a">e5a37634a8e15a945e7f5ea4aca68ab8e1e34d3a</a>
<blockquote>
<p>
    Bug 692318: Ensure that compiler flags are used for the &quot;aux&quot; files.
<br>

<br>
For a normal host build, the build tools (genarch, genconf etc) should be
<br>
built with the same compiler flags as Ghostscript/Ghost*. In this case
<br>
the integer type used for encoded color values was not getting used
<br>
when compiling genarch.
<br>

<br>
Also, add a warning when tiffsep does have to skip one or more plates, with
<br>
a pointer to the relevant documentation. Lastly, update the doc to reflect
<br>
that the contone preview output may not be as expected if the job uses
<br>
overprint.
<br>

<br>
No cluster differences expected.
<br>

<br>
common/ugcc_top.mak
<br>
gs/base/gdevtsep.c
<br>
gs/base/msvccmd.mak
<br>
gs/base/msvctail.mak
<br>
gs/base/unix-aux.mak
<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-04 23:55:57 -0400></a>
2011-07-04 23:55:57 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=836ac602259ed7e6dfa2845ce78c5fcb516c72e1">836ac602259ed7e6dfa2845ce78c5fcb516c72e1</a>
<blockquote>

<br>
Bug 692026: Replace vsprintf() with vsnprintf()
<br>

<br>
vsnprintf() is a safer function. No new compatibility problams are
<br>
expected because vsnprintf() is already used it in Ghostscript.
<br>

<br>
gs/base/gxttfb.c
<br>
gs/base/rinkj/rinkj-byte-stream.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-02 13:50:28 -0700></a>
2011-07-02 13:50:28 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=02ef306436f521a059356bbe41805499204051fc">02ef306436f521a059356bbe41805499204051fc</a>
<blockquote>

<br>
Change to using encode_color instead of map_rgb_color since map_rgb_color are obsolete.
<br>

<br>
The encode_color proc replaced this and devices may not have it set to a valid proc.
<br>
Detected under certain circumstances with the tiffsep device using compressed color
<br>
encoding.
<br>

<br>
gs/base/gdevmem.c
<br>
gs/base/gdevmr1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-01 16:46:32 -0400></a>
2011-07-01 16:46:32 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c841237f86505fad348295dfb17aea45beed4c89">c841237f86505fad348295dfb17aea45beed4c89</a>
<blockquote>

<br>
Bug 692320: check page count type.
<br>

<br>
Check the type of /Count attrubute before using it. Reject invalid
<br>
values and types and scan the page tree instead.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-01 18:03:19 +0100></a>
2011-07-01 18:03:19 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=52d2decab7955e61a605ab44acb88a08eb79b9cb">52d2decab7955e61a605ab44acb88a08eb79b9cb</a>
<blockquote>

<br>
Clist change for plane rop operations.
<br>

<br>
If strip_copy_rop is called with the 'lop_planar' indicator bit set in
<br>
the rop, it should encode just a planes worth of data.
<br>

<br>
The reading side of clists works without change, I believe.
<br>

<br>
gs/base/gxclrect.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-07-01 12:31:54 +0100></a>
2011-07-01 12:31:54 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e14ea75d716da7ecdef2211a5d60e46deec55b9f">e14ea75d716da7ecdef2211a5d60e46deec55b9f</a>
<blockquote>

<br>
Fix clist planar device detection.
<br>

<br>
When the clist interrogates a device to see if it is a planar one, it was
<br>
getting the wrong answer due to only the planar memory buffer device
<br>
responding to the question. We fix the main planar device to respond too
<br>
here.
<br>

<br>
Also, any device that doesn't understand the is_native_planar question
<br>
would respond -1; the existing code would take this to mean that it is
<br>
planar. The code now only triggers on positive responses.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevppla.c
<br>
gs/base/gxclist.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 12:17:08 -0700></a>
2011-06-30 12:17:08 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=93b4821ada53277b61efb87cbb12eb6a6f71ced0">93b4821ada53277b61efb87cbb12eb6a6f71ced0</a>
<blockquote>

<br>
FIx segfaults caused by missing prototype causing pointer truncation.
<br>

<br>
The gs_state_memory() function prototype is in gxstate.h but this was not being included
<br>
by this file, so on 64-bit builds it truncatad the memory pointer to 32-bits. Tripped over
<br>
on the macpro when doing ps2write. Problematic call was line 1086.
<br>

<br>
gs/base/gdevpdfd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 20:02:09 +0100></a>
2011-06-30 20:02:09 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0038b2fadb34d57f5d43d51d313eb8bc121e929b">0038b2fadb34d57f5d43d51d313eb8bc121e929b</a>
<blockquote>

<br>
Fix error in plib and plan devices not properly closing down.
<br>

<br>
plib_close and plan_close were failing to call the underlying device
<br>
close method, hence leaking.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 18:19:30 +0100></a>
2011-06-30 18:19:30 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b62b3a9ce165ebca357ebf6b4e2ff4cae8d630d3">b62b3a9ce165ebca357ebf6b4e2ff4cae8d630d3</a>
<blockquote>

<br>
Fix leak of icc_profile in clist playback.
<br>

<br>
When reading an icc_profile profile from the clist we were forgetting to
<br>
decrement it's reference count, and so it was being leaked.
<br>

<br>
Also fix a whitespace issue.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gscspace.h
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 17:05:19 +0100></a>
2011-06-30 17:05:19 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5baa14a107150a5ba4189ff830f21bfdd7da528c">5baa14a107150a5ba4189ff830f21bfdd7da528c</a>
<blockquote>

<br>
More Makefile dependency tweaks.
<br>

<br>
Limit our insistence on gnu make (for order only dependencies) to
<br>
the autoconf generated makefiles.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/gs.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixhead.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 16:42:24 +0100></a>
2011-06-30 16:42:24 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=396fa30df058ccd35375a08e5385fa4251d4b714">396fa30df058ccd35375a08e5385fa4251d4b714</a>
<blockquote>

<br>
Various Memento changes.
<br>

<br>
Add MEMENTO_LEAKONLY option to speed Memento (avoids filling memory and
<br>
checking the filled values for consistency).
<br>

<br>
Also, rewrite freelist management to avoid delays when making room.
<br>

<br>
Memento in MEMENTO_LEAKONLY now runs almost as fast as normal code.
<br>

<br>
Also change gsalloc.c and gsmchunk.c to fall through to the normal malloc
<br>
(and hence Memento) for all blocks (when MEMENTO is defined). No changes
<br>
to normal operation.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/gsalloc.c
<br>
gs/base/gsmchunk.c
<br>
gs/base/malloc_.h
<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 14:24:17 +0100></a>
2011-06-30 14:24:17 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44a609ed782883815571bcbc1ed7a602db03c786">44a609ed782883815571bcbc1ed7a602db03c786</a>
<blockquote>

<br>
Another attempt at proper directory dependencies.
<br>

<br>
The previous attempt failed due to directories getting their timestamp
<br>
updated whenever the contents changed - hence causing stuff to be
<br>
always out of date.
<br>

<br>
The 'correct' fix appears to be to use order only dependencies. We do
<br>
this in a portable way by defining a MAKEDIRS variable, that should
<br>
always be the last dependency listed. Unix builds define this to
<br>
    &quot;| directories&quot;, windows builds leave it blank.
<br>

<br>
Testing this work in turn showed up more problems with device
<br>
dependencies - also fixed here.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gs.mak
<br>
gs/base/ijs.mak
<br>
gs/base/jpeg.mak
<br>
gs/base/lib.mak
<br>
gs/base/msvclib.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-aux.mak
<br>
gs/base/unix-dll.mak
<br>
gs/base/unix-end.mak
<br>
gs/base/unixhead.mak
<br>
gs/base/unixinst.mak
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-30 13:55:54 +0100></a>
2011-06-30 13:55:54 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=93df8de63350ec70d38cc79494a47cf0a6e172b9">93df8de63350ec70d38cc79494a47cf0a6e172b9</a>
<blockquote>

<br>
More changes for CIDSet.
<br>

<br>
Make sure that if the CID (LastChar) is greater than num_glyphs, then use LastChar
<br>
for the length of CIDSet and CIDToGIDMap.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 21:39:01 +0100></a>
2011-06-29 21:39:01 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4a65a114f83a6826679625ef8686c1f43c648b43">4a65a114f83a6826679625ef8686c1f43c648b43</a>
<blockquote>

<br>
Fix leaks in icc code seen during performance testing.
<br>

<br>
Whilst performance testing the new thresholding code against the plank
<br>
device as follows:
<br>

<br>
pcl6.exe -sDEVICE=plank -o nul: -r600 lj4700_pcl5_color_AC8Z51CC.prn
<br>

<br>
various leaks were seen (I used Memento to see them).
<br>

<br>
This fixes at least some of them, namely those due to us forgetting to free
<br>
a buffer used to read an icc profile into from the clist.
<br>

<br>
Various small bits of error case code is also fixed here.
<br>

<br>
gs/base/gxclrast.c
<br>
gs/base/gxclread.c
<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 21:39:58 +0100></a>
2011-06-29 21:39:58 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3992ee84c892ed2fcc16b3bd0e89d7e9d878bbaa">3992ee84c892ed2fcc16b3bd0e89d7e9d878bbaa</a>
<blockquote>

<br>
Add STDDIRS dependencies to unix-aux too.
<br>

<br>
This prevented configured debug gs builds from working (and possibly others).
<br>

<br>
gs/base/unix-aux.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 20:55:42 +0100></a>
2011-06-29 20:55:42 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22f63a9438d563c3f36a2e652784d53be028bd7d">22f63a9438d563c3f36a2e652784d53be028bd7d</a>
<blockquote>

<br>
Tweak to gsicc_manage.c to avoid potential leak.
<br>

<br>
Examining the code, if gsicc_set_icc_directory is called with namelen=0
<br>
then the existing code will allocate a 1 byte buffer and store it in
<br>
the icc_manager.
<br>

<br>
If the same function is called again, in the same way, this buffer
<br>
will not be freed before it is overwritten.
<br>

<br>
The fix is simply to test for icc_manager->profiledir being non NULL
<br>
rather than the namelen > 0.
<br>

<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 15:10:03 +0100></a>
2011-06-29 15:10:03 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3a26f3c1aa08e6bd4b4550e066da449fb61ee2cf">3a26f3c1aa08e6bd4b4550e066da449fb61ee2cf</a>
<blockquote>

<br>
Makefile dependency fixes.
<br>

<br>
Ray pointed out yesterday that the gs makefile has a malformed dependency
<br>
rule ensuring that the object dirs are created before any compilation
<br>
is done. This doesn't show itself when make is invoked to use a single
<br>
build task at once, but parallel invocations (e.g. make -f 5) can fall
<br>
foul fof it.
<br>

<br>
The fix is to properly make every .$(OBJ) file depend on STDDIRS.
<br>

<br>
gs/base/lib.mak
<br>
gs/base/msvclib.mak
<br>
gs/base/msvctail.mak
<br>
gs/base/unix-end.mak
<br>
gs/base/unixhead.mak
<br>
gs/psi/msvc.mak
<br>
gs/toolbin/checkdeps.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-29 08:17:46 +0100></a>
2011-06-29 08:17:46 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=865dca5781dcb4fea12d1349d4f7392d7d809c42">865dca5781dcb4fea12d1349d4f7392d7d809c42</a>
<blockquote>

<br>
Change the documented default settings for ps2write to match reality.
<br>

<br>
gs/doc/Ps2ps2.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-28 21:55:44 -0400></a>
2011-06-28 21:55:44 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6a8de32823db74a0da27187b7fb049b337c2573">c6a8de32823db74a0da27187b7fb049b337c2573</a>
<blockquote>

<br>
Bug 692305: Remove -dSAFER from pfbtopfa
<br>

<br>
Remove -dSAFER flag from pfbtopfa and wftopfa scripts because it
<br>
interferes with the the normal operation of Ghostscript and serves
<br>
no purpose. No client code is executed by these utilities.
<br>

<br>
gs/lib/pfbtopfa
<br>
gs/lib/pfbtopfa.bat
<br>
gs/lib/wftopfa
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-28 21:54:31 +0100></a>
2011-06-28 21:54:31 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=31cb1ff75d4a77ac32854a68f56d973d06b5da10">31cb1ff75d4a77ac32854a68f56d973d06b5da10</a>
<blockquote>

<br>
Bug 692310 Add another fallback case for an FT error.
<br>

<br>
Add a fallback for the FT_Err_Invalid_Reference error from Freetype.
<br>
As this is a hinting error, we'll fall back to rendering the glyph
<br>
unhinted.
<br>

<br>
No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-28 20:09:11 +0100></a>
2011-06-28 20:09:11 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a1ee78a6de94b8b4292b9ce3b71b54ed3ae7502b">a1ee78a6de94b8b4292b9ce3b71b54ed3ae7502b</a>
<blockquote>

<br>
Fix for Bug 692303, antialiasing problems.
<br>

<br>
In trying to fix Bug 692081, I'd inadvertantly broken antialiased
<br>
operation on shapes with multiple 'alpha=0'/'alpha-non-zero'
<br>
transitions.
<br>

<br>
My understanding of Peters line accumulator macros was incomplete.
<br>
This new version seems to fix both cases.
<br>

<br>
gs/base/gsbitops.h
<br>
gs/base/gxcindex.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-28 20:08:40 +0100></a>
2011-06-28 20:08:40 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d44e8a15bfa263b54b369940db9d8ec97d4fc48">4d44e8a15bfa263b54b369940db9d8ec97d4fc48</a>
<blockquote>

<br>
Fix typo in comment.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gxfill.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-28 13:12:34 +0100></a>
2011-06-28 13:12:34 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=11fa4e84f504bdbd9e78495cf5214e49554383b0">11fa4e84f504bdbd9e78495cf5214e49554383b0</a>
<blockquote>

<br>
More 'aux' makefile changes.
<br>

<br>
Configured gs builds were still not putting the aux directory in the
<br>
right place. Reworked here.
<br>

<br>
This has meant changing the horrible 'RELDIR' hack for a slightly
<br>
less horrible hack using 'BUILDDIRPREFIX'. In turn this has meant
<br>
that the shared object targets have one mroe layer of recursion in
<br>
the make, but it's still at the top level, and (arguably) clearer
<br>
now than it was before.
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/gs.mak
<br>
gs/base/macos-fw.mak
<br>
gs/base/macosx.mak
<br>
gs/base/ugcclib.mak
<br>
gs/base/unix-dll.mak
<br>
gs/base/unix-end.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-27 20:09:20 -0400></a>
2011-06-27 20:09:20 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=680d0f9b0a30de60c3289b827714be3f5adc65b1">680d0f9b0a30de60c3289b827714be3f5adc65b1</a>
<blockquote>

<br>
Rename -dPDFNOSTOPPED to -dPDFSTOPONERROR
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-27 19:34:37 -0400></a>
2011-06-27 19:34:37 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=66700ec35f74a6e049ed6654283418a6d23bfb3e">66700ec35f74a6e049ed6654283418a6d23bfb3e</a>
<blockquote>

<br>
Bug 692301: Support /Filter array with /JPXDecode
<br>

<br>
Fix a bug in /JPXDecode filter handler that generated bad
<br>
/DecodeParms when /JPXDecode filter was used in a /Filter
<br>
array. Remove some obsolete code related to /JPXDecode.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-27 14:06:27 -0400></a>
2011-06-27 14:06:27 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f08f6f0c1b9bae95387534617005df0b4b7e46f">2f08f6f0c1b9bae95387534617005df0b4b7e46f</a>
<blockquote>

<br>
Add -dPDFNOSTOPPED option.
<br>

<br>
Norrmally, PDF interpreter tries to repair all problems in PDF files.
<br>
-dPDFNOSTOPPED option skips some of the stopped contexts. On error,
<br>
instead of printing a warning and continue, PDF interpreter drops into
<br>
a PostScript error handler that prints detailed information about the
<br>
problem and kills the job.
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-27 09:22:30 -0600></a>
2011-06-27 09:22:30 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9b9d97a5a2c299595048c72fa10e1a2b2845ff58">9b9d97a5a2c299595048c72fa10e1a2b2845ff58</a>
<blockquote>

<br>
Add planar device to the Windows build.
<br>

<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-27 14:35:52 +0100></a>
2011-06-27 14:35:52 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5e292c6c611659105f9bbc50ad33518c97a1923d">5e292c6c611659105f9bbc50ad33518c97a1923d</a>
<blockquote>

<br>
bug #692304 Don't emit '0 g' for 'erasepage'
<br>

<br>
showpage causes a fill of an empty path, apparently as part of the erasepage mechanism.
<br>
When used with pdfwrite, with -dUseCIEColor -dPDFA and no Output Intent specified
<br>
this can lead to us emitting a '0 g' in a PDF/A file, whic his only valid if an OutputIntent is specified.
<br>

<br>
Fixed by ignoring empty paths. Despite the comment in gdev_pdf_fill_path we
<br>
do not seem to need to do this for text or clips. Probably since I moved the
<br>
'pdf_set_drawing_color' code out of pdf_reset_color so that we could write colours in a text context.
<br>

<br>
This exhibits one progression, with ps2write 'Bug6901014_CImg_flyer.pdf' now
<br>
draws all the output instead of dropping portions of it due to a 'nocurrentpoint' error.
<br>

<br>
gs/base/gdevpdfd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-26 11:20:33 +0100></a>
2011-06-26 11:20:33 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f3b1a56bb0c5d716868b7914bee6c3740f3f035a">f3b1a56bb0c5d716868b7914bee6c3740f3f035a</a>
<blockquote>

<br>
Update to libjpeg 8c.
<br>

<br>
Combines (from libs-update branch) the commits:
<br>

<br>
Commit a vanilla copy of libjpeg-8c.
<br>

<br>
And the makefile changes to let it build.
<br>

<br>
Commit our patch to the libjpeg source.
<br>

<br>
Add our patches to the jpeg-8c src.
<br>

<br>
This changes every cluster test which contains DCT/JPEG data, but
<br>
they are all very small colour shifts that are invisible
<br>
to the naked eye - as expected by this type of update.
<br>

<br>
gs/base/jpeg.mak
<br>
gs/jpeg/Makefile.am
<br>
gs/jpeg/Makefile.in
<br>
gs/jpeg/README
<br>
gs/jpeg/aclocal.m4
<br>
gs/jpeg/ansi2knr.c
<br>
gs/jpeg/cderror.h
<br>
gs/jpeg/cdjpeg.h
<br>
gs/jpeg/change.log
<br>
gs/jpeg/cjpeg.1
<br>
gs/jpeg/cjpeg.c
<br>
gs/jpeg/ckconfig.c
<br>
gs/jpeg/coderules.doc
<br>
gs/jpeg/coderules.txt
<br>
gs/jpeg/config.guess
<br>
gs/jpeg/config.sub
<br>
gs/jpeg/configure
<br>
gs/jpeg/configure.ac
<br>
gs/jpeg/depcomp
<br>
gs/jpeg/djpeg.1
<br>
gs/jpeg/djpeg.c
<br>
gs/jpeg/example.c
<br>
gs/jpeg/filelist.doc
<br>
gs/jpeg/filelist.txt
<br>
gs/jpeg/install-sh
<br>
gs/jpeg/install.doc
<br>
gs/jpeg/install.txt
<br>
gs/jpeg/jaricom.c
<br>
gs/jpeg/jcapimin.c
<br>
gs/jpeg/jcarith.c
<br>
gs/jpeg/jccoefct.c
<br>
gs/jpeg/jcdctmgr.c
<br>
gs/jpeg/jchuff.c
<br>
gs/jpeg/jchuff.h
<br>
gs/jpeg/jcinit.c
<br>
gs/jpeg/jcmainct.c
<br>
gs/jpeg/jcmarker.c
<br>
gs/jpeg/jcmaster.c
<br>
gs/jpeg/jconfig.bcc
<br>
gs/jpeg/jconfig.cfg
<br>
gs/jpeg/jconfig.dj
<br>
gs/jpeg/jconfig.doc
<br>
gs/jpeg/jconfig.mac
<br>
gs/jpeg/jconfig.manx
<br>
gs/jpeg/jconfig.mc6
<br>
gs/jpeg/jconfig.sas
<br>
gs/jpeg/jconfig.st
<br>
gs/jpeg/jconfig.txt
<br>
gs/jpeg/jconfig.vc
<br>
gs/jpeg/jconfig.vms
<br>
gs/jpeg/jconfig.wat
<br>
gs/jpeg/jcparam.c
<br>
gs/jpeg/jcphuff.c
<br>
gs/jpeg/jcprepct.c
<br>
gs/jpeg/jcsample.c
<br>
gs/jpeg/jctrans.c
<br>
gs/jpeg/jdapimin.c
<br>
gs/jpeg/jdapistd.c
<br>
gs/jpeg/jdarith.c
<br>
gs/jpeg/jdatadst.c
<br>
gs/jpeg/jdatasrc.c
<br>
gs/jpeg/jdcoefct.c
<br>
gs/jpeg/jdct.h
<br>
gs/jpeg/jddctmgr.c
<br>
gs/jpeg/jdhuff.c
<br>
gs/jpeg/jdhuff.h
<br>
gs/jpeg/jdinput.c
<br>
gs/jpeg/jdmainct.c
<br>
gs/jpeg/jdmarker.c
<br>
gs/jpeg/jdmaster.c
<br>
gs/jpeg/jdphuff.c
<br>
gs/jpeg/jdsample.c
<br>
gs/jpeg/jdtrans.c
<br>
gs/jpeg/jerror.h
<br>
gs/jpeg/jfdctflt.c
<br>
gs/jpeg/jfdctfst.c
<br>
gs/jpeg/jfdctint.c
<br>
gs/jpeg/jidctflt.c
<br>
gs/jpeg/jidctint.c
<br>
gs/jpeg/jidctred.c
<br>
gs/jpeg/jmorecfg.h
<br>
gs/jpeg/jpegint.h
<br>
gs/jpeg/jpeglib.h
<br>
gs/jpeg/jpegtran.1
<br>
gs/jpeg/jpegtran.c
<br>
gs/jpeg/jutils.c
<br>
gs/jpeg/jversion.h
<br>
gs/jpeg/libjpeg.doc
<br>
gs/jpeg/libjpeg.map
<br>
gs/jpeg/libjpeg.txt
<br>
gs/jpeg/ltconfig
<br>
gs/jpeg/ltmain.sh
<br>
gs/jpeg/makcjpeg.st
<br>
gs/jpeg/makdjpeg.st
<br>
gs/jpeg/makeadsw.vc6
<br>
gs/jpeg/makeapps.ds
<br>
gs/jpeg/makeasln.v10
<br>
gs/jpeg/makecdep.vc6
<br>
gs/jpeg/makecdsp.vc6
<br>
gs/jpeg/makecfil.v10
<br>
gs/jpeg/makecmak.vc6
<br>
gs/jpeg/makecvcx.v10
<br>
gs/jpeg/makeddep.vc6
<br>
gs/jpeg/makeddsp.vc6
<br>
gs/jpeg/makedfil.v10
<br>
gs/jpeg/makedmak.vc6
<br>
gs/jpeg/makedvcx.v10
<br>
gs/jpeg/makefile.ansi
<br>
gs/jpeg/makefile.bcc
<br>
gs/jpeg/makefile.cfg
<br>
gs/jpeg/makefile.dj
<br>
gs/jpeg/makefile.manx
<br>
gs/jpeg/makefile.mc6
<br>
gs/jpeg/makefile.mms
<br>
gs/jpeg/makefile.sas
<br>
gs/jpeg/makefile.unix
<br>
gs/jpeg/makefile.vc
<br>
gs/jpeg/makefile.vms
<br>
gs/jpeg/makefile.wat
<br>
gs/jpeg/makejdep.vc6
<br>
gs/jpeg/makejdsp.vc6
<br>
gs/jpeg/makejdsw.vc6
<br>
gs/jpeg/makejfil.v10
<br>
gs/jpeg/makejmak.vc6
<br>
gs/jpeg/makejsln.v10
<br>
gs/jpeg/makejvcx.v10
<br>
gs/jpeg/makelib.ds
<br>
gs/jpeg/makeproj.mac
<br>
gs/jpeg/makerdep.vc6
<br>
gs/jpeg/makerdsp.vc6
<br>
gs/jpeg/makerfil.v10
<br>
gs/jpeg/makermak.vc6
<br>
gs/jpeg/makervcx.v10
<br>
gs/jpeg/maketdep.vc6
<br>
gs/jpeg/maketdsp.vc6
<br>
gs/jpeg/maketfil.v10
<br>
gs/jpeg/maketmak.vc6
<br>
gs/jpeg/maketvcx.v10
<br>
gs/jpeg/makewdep.vc6
<br>
gs/jpeg/makewdsp.vc6
<br>
gs/jpeg/makewfil.v10
<br>
gs/jpeg/makewmak.vc6
<br>
gs/jpeg/makewvcx.v10
<br>
gs/jpeg/makljpeg.st
<br>
gs/jpeg/maktjpeg.st
<br>
gs/jpeg/missing
<br>
gs/jpeg/rdbmp.c
<br>
gs/jpeg/rdjpgcom.1
<br>
gs/jpeg/rdjpgcom.c
<br>
gs/jpeg/rdppm.c
<br>
gs/jpeg/rdswitch.c
<br>
gs/jpeg/structure.doc
<br>
gs/jpeg/structure.txt
<br>
gs/jpeg/testimg.bmp
<br>
gs/jpeg/testimg.jpg
<br>
gs/jpeg/testimg.ppm
<br>
gs/jpeg/testimgp.jpg
<br>
gs/jpeg/transupp.c
<br>
gs/jpeg/transupp.h
<br>
gs/jpeg/usage.doc
<br>
gs/jpeg/usage.txt
<br>
gs/jpeg/wizard.doc
<br>
gs/jpeg/wizard.txt
<br>
gs/jpeg/wrppm.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-26 23:12:38 -0700></a>
2011-06-26 23:12:38 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5b7a917fa6d092f76a0400e1bce70d02b8b724f1">5b7a917fa6d092f76a0400e1bce70d02b8b724f1</a>
<blockquote>

<br>
Fix for compiler complaint.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-25 11:07:25 -0700></a>
2011-06-25 11:07:25 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f4e1d4b280f6e6ff73d630e2b103a1a6b50c03d9">f4e1d4b280f6e6ff73d630e2b103a1a6b50c03d9</a>
<blockquote>

<br>
Fix for icc directory and icc device profile initialization.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/lib.mak
<br>
gs/psi/zdevice.c
<br>
pcl/pctop.c
<br>
psi/psitop.c
<br>
pxl/pxpthr.c
<br>
pxl/pxtop.c
<br>
svg/svgtop.c
<br>
xps/xpstop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-24 18:46:51 +0100></a>
2011-06-24 18:46:51 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7af1ebacdb9947ea5197523bcda7764431769e8f">7af1ebacdb9947ea5197523bcda7764431769e8f</a>
<blockquote>

<br>
Add copy_plane to rop source device.
<br>

<br>
This uses 'creative engineering' (aka a blatant hack) to allow copy_color
<br>
    to be implemented in the &quot;rop source&quot; device.
<br>

<br>
We implement a copy_plane entrypoint for the rop source device, that
<br>
does exactly the same as copy_color, except that it abuses the lop
<br>
value passed to the gx_device_color_fill_rectangle by setting a new
<br>
bit (lop_planar) and pickling the plane number into the high bits.
<br>

<br>
This is detected in mem_planar_strip_copy_rop and unpicked to a call
<br>
to the appropriate plane.
<br>

<br>
Care must be taken when doing rops on the planar device, as
<br>
processing any rop on the device that involves 'D' calls get_bit_rectangle
<br>
which can cause a call to convert from planar to chunky if mishandled.
<br>
The solution is to ensure that we always remove our get_bits_rectangle
<br>
implementation when passing on a ropping call.
<br>

<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevrops.c
<br>
gs/base/gsropt.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-24 17:38:55 +0100></a>
2011-06-24 17:38:55 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0c927bb3e177b5b34ebb1b1f7fa2d9669614fbaf">0c927bb3e177b5b34ebb1b1f7fa2d9669614fbaf</a>
<blockquote>

<br>
Bug 692274: handle vastly different magnitudes in x/y scale
<br>

<br>
If the difference in the scale on the x and y axes is large
<br>
(in this case, a factor of 1000), the value scaling we do
<br>
to pass into Freetype can run over/under flow when applied
<br>
to both. The solution is to apply the value scaling
<br>
separately for x and y axes. But the quality is very
<br>
marginally better when the two are scaled together, so we
<br>
do that normally, and only fall back to the separate handling
<br>
when the x and y scales differ by more than 512.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-24 12:11:48 +0100></a>
2011-06-24 12:11:48 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=90324e2c6466978f3c01e4a5a3c27d916b9ba9fa">90324e2c6466978f3c01e4a5a3c27d916b9ba9fa</a>
<blockquote>

<br>
Fix 'aux' cluster breakages. Move aux into obj.
<br>

<br>
Move aux directories into the appropriate obj directories.
<br>
Makes cleaning easier, and is neater overall.
<br>

<br>
Also fix some unrelated problems with cleaning in the msvc builds.
<br>

<br>
common/msvc_top.mak
<br>
common/pcdefs.mak
<br>
gs/base/all-arch.mak
<br>
gs/psi/msvc.mak
<br>
gs/psi/os2.mak
<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-23 12:53:01 -0600></a>
2011-06-23 12:53:01 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7f2d55272963b039a472adbd26bb9a111e5d31ac">7f2d55272963b039a472adbd26bb9a111e5d31ac</a>
<blockquote>

<br>
Use filenames instead of stdin and stdout.
<br>

<br>
The original example c programs used stdin and stdout instead of
<br>
reading directly from files.  The C programs were changed to use files
<br>
but the associated shell script wasn't updated.
<br>

<br>
tools/GOT/dotags.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 21:39:01 +0100></a>
2011-06-22 21:39:01 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ca0f4ff4a0df386dd4d494a418f09336d06c2451">ca0f4ff4a0df386dd4d494a418f09336d06c2451</a>
<blockquote>

<br>
Cross compilation (AUX) changes to ghostscript and ghostpdl.
<br>

<br>
Introduce a new 'aux' directory and appropriate defines to allow
<br>
easier cross-compilation of gs/ghostpdl.
<br>

<br>
common/gccdefs.mak
<br>
common/generic.mak
<br>
common/msvc_top.mak
<br>
common/ugcc_top.mak
<br>
gs/base/Makefile.in
<br>
gs/base/all-arch.mak
<br>
gs/base/gs.mak
<br>
gs/base/lib.mak
<br>
gs/base/msvccmd.mak
<br>
gs/base/msvctail.mak
<br>
gs/base/unix-aux.mak
<br>
gs/base/unix-end.mak
<br>
gs/base/zlib.mak
<br>
gs/psi/msvc.mak
<br>
gs/psi/os2.mak
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
pl/pl.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 20:05:15 +0100></a>
2011-06-22 20:05:15 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3b3261eca08cd73ca355b28fe5125c98d411820d">3b3261eca08cd73ca355b28fe5125c98d411820d</a>
<blockquote>

<br>
Bug 692297: reinstate the proper way to release FT glyphs.
<br>

<br>
FT_Glyph_Done is the correct method for freeing both bitmap and
<br>
outline glyphs from Freetype.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 10:46:18 -0700></a>
2011-06-22 10:46:18 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f8c4663d5108ca0b7416bf35ba37a8bb63f0b8ed">f8c4663d5108ca0b7416bf35ba37a8bb63f0b8ed</a>
<blockquote>

<br>
Improve documentation about gsapi_set_poll
<br>

<br>
gs/doc/API.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 10:17:32 -0700></a>
2011-06-22 10:17:32 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b28982145ccdea3a39f7ad13d7f5c8a00f14f83d">b28982145ccdea3a39f7ad13d7f5c8a00f14f83d</a>
<blockquote>

<br>
Replace previous commit file with smaller file.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/examples/text_graphic_image.pdf
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 10:12:33 -0700></a>
2011-06-22 10:12:33 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=314d8b86434396afe96ce915dbb1cb0ff01b2047">314d8b86434396afe96ce915dbb1cb0ff01b2047</a>
<blockquote>

<br>
Addition of simple example file with text graphic and image objects.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/examples/text_graphic_image.pdf
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-22 09:05:28 -0700></a>
2011-06-22 09:05:28 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e3def0b758231cd1c5c0510945cef0dd3d938393">e3def0b758231cd1c5c0510945cef0dd3d938393</a>
<blockquote>

<br>
Support for fast thresholding to CMYK planar devices
<br>

<br>
Code works for various orientations for color as well as indexed (mono) images.
<br>
There is an inversion (polarity) issue remaining to track down as well as one potential
<br>
rendering issue during the buffer clean up with landscape images.  These
<br>
will be resolved shortly.  For now, code is sufficiently complete to begin
<br>
timing testing and optimizations.  To use specify
<br>

<br>
-dCOLORSCREEN -sDEVICE=plank
<br>

<br>
and enable processing of color images by setting use_fast_thresh = true
<br>
on line 67 in gxicolor.c
<br>

<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/gxicolor.c
<br>
gs/base/gxidata.c
<br>
gs/base/gximono.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-21 18:52:03 +0100></a>
2011-06-21 18:52:03 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fef629cab877b0bbf4f86777f37038d1f37de838">fef629cab877b0bbf4f86777f37038d1f37de838</a>
<blockquote>

<br>
Fix cut/paste tiffscaled typo in docs.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-21 16:45:52 +0100></a>
2011-06-21 16:45:52 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=368e14c73337b42a24299445a660f029d2c26861">368e14c73337b42a24299445a660f029d2c26861</a>
<blockquote>

<br>
Reinstate the configure check for cups/raster.h.
<br>

<br>
Several Linux distributions seem to have neglected to make
<br>
the cups development package depend on the cupsimage
<br>
development package, but we need both for the cups device.
<br>

<br>
No cluster differences expected.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-21 12:31:45 +0100></a>
2011-06-21 12:31:45 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dfc53c791d8a121273bd22bbc0c04fd3ed375cdf">dfc53c791d8a121273bd22bbc0c04fd3ed375cdf</a>
<blockquote>

<br>
Bug #692218 Create comatible CIDSet
<br>

<br>
The fix in Bug 692218 did not (apparently) work for the SolidWorks
<br>
PDF/A validator. This patch sets the number of entries in a CIDSet to
<br>
be the number of glyphs in the font program, and makes the number of entries
<br>
in a CIDToGIDMap the same.
<br>

<br>
Together with the commit 27b740 here:
<br>

<br>
http://ghostscript.com/pipermail/gs-cvs/2011-June/013024.html
<br>

<br>
this now seems to work correctly.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-21 12:08:58 +0100></a>
2011-06-21 12:08:58 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=136934cf60977e5ca6c1a77f8fd4d30a8512b206">136934cf60977e5ca6c1a77f8fd4d30a8512b206</a>
<blockquote>

<br>
Allow pdfwrite and ps2write to use 64-bit file pointers raising the 4Gb file limit.
<br>

<br>
Bug #692290 ps2write and pdfwrite have been using gp_open_scratch_file,
<br>
fseek and ftell, which limit the size of a temporary file to 4GB. This
<br>
commit uses gp_open_scratch_file_64, gp_ftell_64 and gp_fseek_64 whcih
<br>
should allow 64-bit file access on systems which support it.
<br>

<br>
Unfortunately I haven't been able to concoct a test for this, so the
<br>
64-bit code is not tested. However it continues to work normally with the
<br>
clustre regression tests.
<br>

<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevpdfo.c
<br>
gs/base/gdevpdfp.c
<br>
gs/base/gdevpdfu.c
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpsu.c
<br>
gs/base/gdevpsu.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-20 17:57:46 +0100></a>
2011-06-20 17:57:46 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=da1152191fb97516b82303ab187b08c971bfd360">da1152191fb97516b82303ab187b08c971bfd360</a>
<blockquote>

<br>
Fix Bug 692057, 'hang' while converting mask->rectangle list.
<br>

<br>
Previously the clip accumulator code would attempt to add a new
<br>
rectangle would always search backwards from the tail of the
<br>
list when looking for a new place to insert a rectangle.
<br>

<br>
This works well when rectangles are coming in at (or near) the
<br>
end of the list. For cases where this doesn't happen we quickly
<br>
break down to O(n^2) operation.
<br>

<br>
The example file on the bug shows one such circumstance, where
<br>
we process a landscape image; this results in the masks coming
<br>
in as '8 bit columns'. The first column accumulates nicely,
<br>
subsequent ones do not.
<br>

<br>
The fix here, as suggested by Chris Liddell, is to store the
<br>
'last insert point', and to search from that. Locality of
<br>
reference should pay off here and lead to much improved
<br>
performance. Certainly tests with the example file show that we
<br>
complete within 2.5 minutes on my machine, compared to 1.5 minutes
<br>
with -dMaxPatternBitmap=32000000, and an unknown time over 5 minutes
<br>
with the old code.
<br>

<br>
gs/base/gxacpath.c
<br>
gs/base/gxcpath.c
<br>
gs/base/gxcpath.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-20 09:56:37 -0600></a>
2011-06-20 09:56:37 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=19f10a95bae408363a77f5a2fd05f69350269cb7">19f10a95bae408363a77f5a2fd05f69350269cb7</a>
<blockquote>

<br>
Merge branch 'deprecate_crd_and_cleanup'
<br>

<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 00:15:50 -0600></a>
2011-06-03 00:15:50 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=476256194a8886951885a4e9ce71972504161192">476256194a8886951885a4e9ce71972504161192</a>
<blockquote>

<br>
Deprecate CRDs in PCL
<br>

<br>
pcl/pccrd.c
<br>
pcl/pccrd.h
<br>
pcl/pcdraw.c
<br>
pcl/pcfrgrnd.c
<br>
pcl/pcfrgrnd.h
<br>
pcl/pcl.mak
<br>
pcl/pcommand.c
<br>
pcl/pcpalet.c
<br>
pcl/pcpalet.h
<br>
pcl/pcpatrn.c
<br>
pcl/pcpattyp.h
<br>
pcl/pcstate.h
<br>
pcl/pctop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-02 16:55:55 -0600></a>
2011-06-02 16:55:55 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1c1c457a4262f1ef539ec75792c57494c8a746b2">1c1c457a4262f1ef539ec75792c57494c8a746b2</a>
<blockquote>

<br>
Trivial warning fixes
<br>

<br>
pcl/pcindxed.c
<br>
pcl/pcpage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-02 14:18:35 -0600></a>
2011-06-02 14:18:35 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=854a16b3eefc0d3b434f446db84e3a9317eda49e">854a16b3eefc0d3b434f446db84e3a9317eda49e</a>
<blockquote>

<br>
Make page size procedure robust against paper size table changes.
<br>

<br>
pcl/pcpage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-01 11:52:40 -0600></a>
2011-06-01 11:52:40 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b89ab3397895d41818170a7f4ea893bbb1580e79">b89ab3397895d41818170a7f4ea893bbb1580e79</a>
<blockquote>

<br>
Clean up warnings and problems identified with static analysis.
<br>

<br>
pcl/pcstatus.c
<br>
pcl/pctext.c
<br>
pcl/pctop.c
<br>
pcl/pcuptrn.c
<br>
pcl/pgdraw.c
<br>
pcl/pglabel.c
<br>
pcl/pgvector.c
<br>
pl/pjparse.c
<br>
pl/plchar.c
<br>
pxl/pxfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 14:30:10 -0600></a>
2011-05-27 14:30:10 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=22b24ea5e3006b4cdc0394c9360423f02b6d3bf9">22b24ea5e3006b4cdc0394c9360423f02b6d3bf9</a>
<blockquote>

<br>
Code cleanup directed by static analysis tools.
<br>

<br>
Changes function not properly made static, removes unread and unused
<br>
variables.
<br>

<br>
pxl/pxpthr.c
<br>
pxl/pxsessio.c
<br>
pxl/pxtop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 13:48:38 -0600></a>
2011-05-27 13:48:38 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=00d4d232283b2eb6c9820618d04b5d4c9eb8a7b3">00d4d232283b2eb6c9820618d04b5d4c9eb8a7b3</a>
<blockquote>

<br>
Makes procedure static.
<br>

<br>
pcl/pctop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 13:45:03 -0600></a>
2011-05-27 13:45:03 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d98ceb81d6d45f4a2bc49b2f28dd16fe94fea601">d98ceb81d6d45f4a2bc49b2f28dd16fe94fea601</a>
<blockquote>

<br>
Fixes static analyzer discovered logic error.
<br>

<br>
With an array size of 0, the line dash pattern should not be accessed.
<br>

<br>
pxl/pxgstate.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-20 15:43:34 +0100></a>
2011-06-20 15:43:34 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d0ded9edc84704afd3724b3c7810c035dc4e699">9d0ded9edc84704afd3724b3c7810c035dc4e699</a>
<blockquote>

<br>
Permit the calculation of CIDSet and CIDToGIDMap size, for PDF/A validation
<br>

<br>
The SolidWorks PDF/A validator complains about the CIDSet we produce for
<br>
embedded TrueType fonts, converted to CIDFonts, when creating PDF/A files.
<br>

<br>
I'm still not exactly sure what its complaining about but I'm working with
<br>
our customer to resolve this. In the meantime, this code makes it easier
<br>
to play with teh emission of CIDSet and CIDToGIDMap.
<br>

<br>
gs/base/gdevpdtb.c
<br>
gs/base/gdevpdtd.c
<br>
gs/base/gdevpdtf.c
<br>
gs/base/gdevpdtf.h
<br>
gs/base/gdevpdtw.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-20 11:17:26 +0100></a>
2011-06-20 11:17:26 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=27b7404218093f3d1cf414b52721c8a24dbc2746">27b7404218093f3d1cf414b52721c8a24dbc2746</a>
<blockquote>

<br>
ps2write output crashes with limitcheck error after converting large documents
<br>

<br>
Adopting patch from 'Steve166' (bug # 692172) with a little gratuitous
<br>
reformatting. (note that opdfread.ps is now compiled in as opdfread.h)
<br>

<br>
This converts the directory of objects from an array to a dictionary of dictionaries
<br>
which allows for a more or less unlimited (64k*64k) number of objects.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-20 03:12:22 -0700></a>
2011-06-20 03:12:22 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0700f67de273e92f06a1e4a0e67e3d023fc29442">0700f67de273e92f06a1e4a0e67e3d023fc29442</a>
<blockquote>

<br>
Added dependencies to various makefiles to fix parallel make.
<br>

<br>
gs/base/lib.mak
<br>
gs/contrib/contrib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 23:20:30 +0000></a>
2011-06-17 23:20:30 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=29c7111f3fc5eb4878e875674750c79b1bd85bcc">29c7111f3fc5eb4878e875674750c79b1bd85bcc</a>
<blockquote>

<br>
Add gdevplan.c to ghostscript visual studio project.
<br>

<br>
Should have done this earlier, but forgot. CLUSTER UNTESTED as windows
<br>
only.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 21:08:49 +0100></a>
2011-06-17 21:08:49 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=75e1e089f68480b68bb9548ba1e6cf0b9d0f73e0">75e1e089f68480b68bb9548ba1e6cf0b9d0f73e0</a>
<blockquote>

<br>
Fix windows compile breakage; missing definition of int64_t.
<br>

<br>
    Simply add a #include &quot;stdint_.h&quot; to the top of a file; breakage
<br>
presumably caused by the dependency changes done earlier.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/gstparam.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 12:34:26 -0700></a>
2011-06-17 12:34:26 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b058182285c21ff142e46997fd3b8510b6993d66">b058182285c21ff142e46997fd3b8510b6993d66</a>
<blockquote>

<br>
Fix for improper offset in contone data.  Halftone project only.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 12:32:11 -0700></a>
2011-06-17 12:32:11 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=096e21027a7ff99cf0e3d0d1e24dac29b2d69f12">096e21027a7ff99cf0e3d0d1e24dac29b2d69f12</a>
<blockquote>

<br>
Fix for Bug 692286 - Image too light -- not fully opaque
<br>

<br>
when I did some of the work on the compositor queue I had set things up so that the
<br>
update of the blend parameters would be written only into the same bands as the group
<br>
push. The approach of writing only in the bands of the group bounding box will not
<br>
work in general, for example if we have nested groups that only partially overlap. The
<br>
solution is that we have to write the blend parameters in all bands.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 10:37:44 -0700></a>
2011-06-17 10:37:44 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ee45ee90570975275ad6b826b377d6852b651b6a">ee45ee90570975275ad6b826b377d6852b651b6a</a>
<blockquote>

<br>
Fix bug 692254 performance problem with pattern that bbox overflowed fixed.
<br>

<br>
The compute_inst_matrix relied on the gx_translate_to_fixed but when the
<br>
tx, ty was outside the valid area (txy_fixed_valid false) the float2fixed
<br>
would overflow and change the sign. This killed the performance when the
<br>
j0, i0 loop in tile by steps calculated a VERY large loop range from large
<br>
negative to large positive value.
<br>

<br>
The gx_path_translate may not be needed for in this path, but it is included
<br>
since that was in the gx_path_translate_to_fixed. Quick check showed that the
<br>
path is empty as expected, but the call is harmless.
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 19:43:09 +0100></a>
2011-06-17 19:43:09 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9dd7c86d0619a9293f6476092765b86abab3baf1">9dd7c86d0619a9293f6476092765b86abab3baf1</a>
<blockquote>

<br>
Move planar dev_spec_op into core planar device.
<br>

<br>
Rather than having plib and plan devices provide a dev_spec_op that
<br>
responds to gxdso_is_native_planar, put the responsibility for this
<br>
into the core planar memory device.
<br>

<br>
This not only simplifies the code, it actually fixes a problem whereby
<br>
the memory device was overwriting it with the default.
<br>

<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 09:55:57 -0700></a>
2011-06-03 09:55:57 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a2a0b404be0365a2f789e154733ab51db3b3aa99">a2a0b404be0365a2f789e154733ab51db3b3aa99</a>
<blockquote>

<br>
Add an example that uses PostScript to do simple transparency.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/examples/transparency_example.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 17:53:53 +0000></a>
2011-06-17 17:53:53 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f80bc7001e2e250348a6db82aa50d25d18848b66">f80bc7001e2e250348a6db82aa50d25d18848b66</a>
<blockquote>

<br>
Enable plan devices in non-windows builds.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/unix-gcc.mak
<br>
main/pcl6_gcc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 17:11:27 +0000></a>
2011-06-17 17:11:27 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4ed123916f3f3373d5648011ea03c3cd969e00c1">4ed123916f3f3373d5648011ea03c3cd969e00c1</a>
<blockquote>

<br>
Fix for Bug 692285: phase shift in patterns in long image.
<br>

<br>
The phase for a pattern mask was being held in a short, rather
<br>
than in an int. Unsurprisingly this caused problems when the
<br>
phase overflowed. Simple fix is to use an int instead.
<br>

<br>
Cluster testing shows no changes.
<br>

<br>
gs/base/gsdcolor.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 13:21:05 +0100></a>
2011-06-17 13:21:05 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b8326c843f0d14b55b7b5cc3694977df73d4a0e4">b8326c843f0d14b55b7b5cc3694977df73d4a0e4</a>
<blockquote>

<br>
Remove circular dependency involving gscms.h.
<br>

<br>
Robin Watts identified that gscms.h relies on gsutil.h
<br>
which relies on gxstate.h, which relies on gscspace.h which
<br>
relies on gscms.h
<br>

<br>
Adding a couple of opaque declarations to gscspace.h (along with
<br>
relevant declaration guards) removes this circular dependency.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gscspace.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 09:43:21 +0100></a>
2011-06-17 09:43:21 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af98a55ac576545d9495cef0884462b7b2fb8205">af98a55ac576545d9495cef0884462b7b2fb8205</a>
<blockquote>

<br>
Tidy up some of the GS<->FT number conversions.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 09:49:14 +0000></a>
2011-06-17 09:49:14 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7a8971739d33a18dd7d433adcabf2e2dea5b6ba8">7a8971739d33a18dd7d433adcabf2e2dea5b6ba8</a>
<blockquote>

<br>
New lib.mak dependency checker, and update lib.mak using it.
<br>

<br>
Invoke gs/toolbin/checkdeps.pl and it performs rudimentary
<br>
and easily confused checks on the dependencies in lib.mak.
<br>
It may be simple, but it spots MANY problems, the important
<br>
of which are fixed here.
<br>

<br>
It gets easily confused by files not being in the expected
<br>
paths (but these are easy for an operator to spot and ignore).
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gxstroke.c
<br>
gs/base/lib.mak
<br>
gs/toolbin/checkdeps.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-17 09:30:32 +0100></a>
2011-06-17 09:30:32 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2cd56d061e655569ec473d605caae9552355a59f">2cd56d061e655569ec473d605caae9552355a59f</a>
<blockquote>

<br>
Bug 689546: Add clist.dev to the core lib dependencies.
<br>

<br>
I previously noted that the clist device is essentially always required
<br>
now, but I used a less than ideal method to address it: having it as
<br>
a dependency of the gdevprn.o object.
<br>

<br>
The correct solution, done here, is to include the clist device in the
<br>
libs.dev file, thus making it a direct requirement of the core lib.
<br>

<br>
No cluster differences.
<br>

<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-16 12:11:41 -0700></a>
2011-06-16 12:11:41 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=449e9c8909e5e0cbf92497f1d95bfe60e8e89f6e">449e9c8909e5e0cbf92497f1d95bfe60e8e89f6e</a>
<blockquote>

<br>
Addition of copy_plane command for clist
<br>

<br>
The command closely mimics the copy_mono command and as such shares its
<br>
command operator.  With a bit of work it would be possible to get some minor
<br>
code reduction but the recursive nature of the functions makes it a bit
<br>
tricky.
<br>

<br>
gs/base/gxcldev.h
<br>
gs/base/gxclimag.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxclist.h
<br>
gs/base/gxclrast.c
<br>
gs/base/gxclrect.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-16 14:55:07 +0100></a>
2011-06-16 14:55:07 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e34770c45cefbe6c4cf2d564269ff849282dd10f">e34770c45cefbe6c4cf2d564269ff849282dd10f</a>
<blockquote>

<br>
Second attempt to add plan devices.
<br>

<br>
Add new 'plan' family of planar devices.
<br>

<br>
Equivalent to the plib devices, but without the necessity to always band,
<br>
and not using the band donor.
<br>

<br>
From the end users point of view, these output ppm etc and are probably
<br>
therefore not that useful as is. They serve the twin purposes of allowing
<br>
us to test planar output, and to act as a basis for devices that need
<br>
planar non-interlaced output.
<br>

<br>
The development of these devices showed a problem with
<br>
gx_get_bits_return_pointer in the planar case. When called, it would
<br>
assume that the start of the first line of the first plane was at
<br>
'base', and that subsequent planes could be reached by adding
<br>
raster * height to it. Unfortunately, clist_rasterize_lines resets the
<br>
buffer device at the end, so that height is unrelated (often 1).
<br>

<br>
The fix implemented here is to change gx_get_bits_return_pointer to take
<br>
a pointer to the line pointers, rather than a direct base value. This
<br>
means we can always find the subsequent planes correctly.
<br>

<br>
In my initial attempt at this, I broke the code by failing to notice that
<br>
gdevmem.c passes the same base pointer to gx_get_bits_copy. Fixed here.
<br>
Cluster testing shows it be OK this time around.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevdgbr.c
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gxgetbit.h
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-16 11:49:18 +0000></a>
2011-06-16 11:49:18 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=11e242eae4d9c78a556b030ef5e69cb0c94e0d48">11e242eae4d9c78a556b030ef5e69cb0c94e0d48</a>
<blockquote>

<br>
Backout previous commit of 'plan' devices.
<br>

<br>
The previous commit caused large numbers of changes. Back it out while
<br>
I investigate why.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevdgbr.c
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gxgetbit.h
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-16 10:00:33 +0100></a>
2011-06-16 10:00:33 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=583e964a55bf50dc28d1467fd9e9bad7bc03849a">583e964a55bf50dc28d1467fd9e9bad7bc03849a</a>
<blockquote>

<br>
Add new 'plan' family of planar devices.
<br>

<br>
Equivalent to the plib devices, but without the necessity to always band,
<br>
and not using the band donor.
<br>

<br>
From the end users point of view, these output ppm etc and are probably
<br>
therefore not that useful as is. They serve the twin purposes of allowing
<br>
us to test planar output, and to act as a basis for devices that need
<br>
planar non-interlaced output.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevdgbr.c
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gdevplan.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gxgetbit.h
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-14 18:56:03 +0100></a>
2011-06-14 18:56:03 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a36cd9f5c60607dfbc12caadb0987b89ecfa27e7">a36cd9f5c60607dfbc12caadb0987b89ecfa27e7</a>
<blockquote>

<br>
Update gx_path_print (and gx_path_dump) to output postscript.
<br>

<br>
Same information as before is output, just in a a slightly different
<br>
order. This means we can paste it back into a postscript file with
<br>
less editing.
<br>

<br>
CLUSTER_UNTESTED as this is never called in production code.
<br>

<br>
gs/base/gxpath.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-14 19:15:29 +0100></a>
2011-06-14 19:15:29 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c442d7d0d5b11addc39519b155b93b3677c11c4d">c442d7d0d5b11addc39519b155b93b3677c11c4d</a>
<blockquote>

<br>
Add memento.c/memento.h to VS project
<br>

<br>
Forgot to add these when they were created.
<br>

<br>
CLUSTER_UNTESTED as windows only.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-16 09:56:47 +0100></a>
2011-06-16 09:56:47 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7de54e55e57f4046196c0909da247f98ef26b46d">7de54e55e57f4046196c0909da247f98ef26b46d</a>
<blockquote>

<br>
Extend the uuid change in commit g0b7cd7c to cover Instance UIDs as well as Document UIDs.
<br>

<br>
No differences expetced.
<br>

<br>
gs/base/gdevpdfe.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-15 19:36:31 +0100></a>
2011-06-15 19:36:31 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=45663bbeb798d7a851546a4d6ccf8954e16696ae">45663bbeb798d7a851546a4d6ccf8954e16696ae</a>
<blockquote>
<p>
    (pdfwrite) Bug #692280 &quot;Incorrect ToUnicode CMap when the input is a PDF with a 2-byte ToUnicode&quot;
<br>

<br>
The code was handling Type 0 fonts as if they were type 1, which meant a maximum
<br>
of 256 entries. Fixed by treating them as TrueType CIDFonts (2 byte codes, maximum
<br>
64K entries)
<br>

<br>
This may need later testing with more extensive collections of conts, we possibly should treat them as regular CIDFotns.
<br>

<br>
gs/base/gdevpdte.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-15 12:18:16 -0400></a>
2011-06-15 12:18:16 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=10fad95042303b1996d8565a40d8ca4d5c4eed06">10fad95042303b1996d8565a40d8ca4d5c4eed06</a>
<blockquote>

<br>
Dump unchanged MediaBox and CropBox values.
<br>

<br>
Output unmodified values of /MediaBox and /CropBox attributes.
<br>
This is done on request from a customer, but should also benefit
<br>
every pdf_info.ps user. This change is not backward compatible.
<br>

<br>
gs/toolbin/pdf_info.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-15 01:53:26 -0400></a>
2011-06-15 01:53:26 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=28ab2c1fafd763c7ab1074c91bf217bbbc871fe7">28ab2c1fafd763c7ab1074c91bf217bbbc871fe7</a>
<blockquote>

<br>
Bug 691335: Fix Photoshop EPS separations.
<br>

<br>
Use DSC comments to get separation names. If the output device supports
<br>
separations (i.e. has big /MaxSeparations attribute), set /SeparationColorNames
<br>
accordingly. Fix DSC handler; make it ignore the comments after %%EndComments
<br>
to avoid handling of DSC comments in nested EPS documents. Drop strange
<br>
code that runs tint transform function when any of the colorant names is
<br>
is a standard name (Gray, Red, Cyan, ...).
<br>

<br>
gs/Resource/Init/gs_epsf.ps
<br>
gs/psi/zcolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-14 16:52:57 +0100></a>
2011-06-14 16:52:57 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0b7cd7ca121ac440d5607cc6795ba8bcd7c20c85">0b7cd7ca121ac440d5607cc6795ba8bcd7c20c85</a>
<blockquote>
<p>
    (pdfwrite) Bug #692268 &quot;pdfwrite sets xapMM:DocumentID incorrectly&quot;
<br>

<br>
The XML emission in pdfwrite was simply pasting the UUID as a hex string,
<br>
whereas the spec says it must be a URI.
<br>

<br>
This change adds the 'uri:' which is required for compliance.
<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevpdfe.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-26 10:58:31 +0100></a>
2011-05-26 10:58:31 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cba939306ceacde74aac1d9b69ca6cf08ce1ebce">cba939306ceacde74aac1d9b69ca6cf08ce1ebce</a>
<blockquote>

<br>
Use correct enumerator for PCL type 3 fonts in pdfwrite
<br>

<br>
Part of the change for type 3 fonts from PCL used the wrong enumerator.
<br>
The code relies on a text enumerator actually being a show enumerator,
<br>
which is guaranteed true if we use the right one, but may not be if we
<br>
use the wrong one.
<br>

<br>
This didn't seem to be causing any problems, but fixed anyway.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-11 20:52:20 -0400></a>
2011-06-11 20:52:20 -0400</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49ae789184ebb094c29b14a6778e8fa823f6637a">49ae789184ebb094c29b14a6778e8fa823f6637a</a>
<blockquote>

<br>
Bug 691706: Keep page number with /View
<br>

<br>
If we have a View and a Page, but no matrix (not required if we have
<br>
a /View [/Fit]) then do not discard the page number but use it as a
<br>
/Page argument (adding one because pdfmark starts from page 1, not 0).
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-11 16:26:11 -0700></a>
2011-06-11 16:26:11 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=03bce08fdcb15702abf4cafbe8723dc8b9b7bd6f">03bce08fdcb15702abf4cafbe8723dc8b9b7bd6f</a>
<blockquote>

<br>
Fix for aliasing of icc link hash code
<br>

<br>
This fixes a problem that existed in the computation of the ICC
<br>
hash code.  This was the source of the problem in Bug 692265 (bug fixed with
<br>
this commit in file gsicc_cache.c).  Also  some error checking code and
<br>
addition of code to handle the transfer function when doing the fast
<br>
thresholding of color images.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxcmap.h
<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-11 10:27:53 -0400></a>
2011-06-11 10:27:53 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c6809dfa1c539d757c30f572922e05cd1436698">4c6809dfa1c539d757c30f572922e05cd1436698</a>
<blockquote>

<br>
Bug 692252: Trap contents stream errors
<br>

<br>
Run PDF operator streams in a stopped context. Stop processing of the
<br>
stream on error, but continue to process rest of the file. Remove a
<br>
hack that defined 'inf' as 0.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-10 00:10:39 -0400></a>
2011-06-10 00:10:39 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f256d925aba7bd2c552e3598b5782bc3ab09cf4f">f256d925aba7bd2c552e3598b5782bc3ab09cf4f</a>
<blockquote>

<br>
Bug 692258: Search annots, forms, patterns for fonts.
<br>

<br>
Besides the contents, look into annotations to identify fonts used by
<br>
the PDF file. Add recursive enumeration of Form and Pattern resources.
<br>

<br>
gs/toolbin/pdf_info.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-09 16:07:15 +0100></a>
2011-06-09 16:07:15 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce51b64c335d6c995c003497988d0327c64985cb">ce51b64c335d6c995c003497988d0327c64985cb</a>
<blockquote>

<br>
Add Sags unicode patch for gswin32c stdin/out.
<br>

<br>
Patch from Sags to read/write stdin/stdout as unicode and convert
<br>
to/from utf8 when passing to/reading from the core.
<br>

<br>
Once again, build with WINDOWS_NO_UNICODE to preserve old behaviour.
<br>

<br>
See bug 692770.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/psi/dwmainc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-09 16:11:00 +0100></a>
2011-06-09 16:11:00 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c39c030b850848540a5df1fc25c4dc76ee90040b">c39c030b850848540a5df1fc25c4dc76ee90040b</a>
<blockquote>

<br>
More unicode changes for gswin32
<br>

<br>
Taken on (most of) a patch from Russell Lang to dwtext.c, with bugfixes
<br>
to the changes I made yesterday. The bits of the patch I didn't take
<br>
on, were to do with running gswin32 as a true Unicode application.
<br>

<br>
Currently we are an ANSI application with a Unicode window. Moving to
<br>
be a true Unicode application may have knock on effects I am unsure of
<br>
(and would certainly leave us different to gswin32c.exe). I don't think
<br>
we lose anything by staying as we are.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/psi/dwtext.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-09 12:09:38 +0100></a>
2011-06-09 12:09:38 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=752397ab6f16aad4147d6e7101373edd7c9d14d5">752397ab6f16aad4147d6e7101373edd7c9d14d5</a>
<blockquote>

<br>
Bug 692263 spot and elide glyphs with zero dimensions.
<br>

<br>
A glyph with a zero scale in either dimension could cause divide by
<br>
zero errors in a number of places in the FAPI *interface* code
<br>
(that is: fapi_ft.c, fapiufst.c and fapibstm.c). So catch and handle
<br>
the case early by skipping such case. The wrinkle is charpath operations
<br>
which *must* create a path, even of zero dimensions.
<br>

<br>
No cluster differences.
<br>

<br>
gs/psi/fapi_ft.c
<br>
gs/psi/fapibstm.c
<br>
gs/psi/fapiufst.c
<br>
gs/psi/ifapi.h
<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-08 18:36:35 +0100></a>
2011-06-08 18:36:35 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=199498069233c98424567d22964dd1934c9f766e">199498069233c98424567d22964dd1934c9f766e</a>
<blockquote>

<br>
Windows gs console window unicode changes.
<br>

<br>
Changes to dwtext.c to allow unicode operation.
<br>

<br>
The window is created as a Unicode one, so we get unicode character codes
<br>
delivered to us as they are typed. We convert these incoming key codes
<br>
into utf8, as the gs core expects. Any output from the core is converted
<br>
from utf8 to unicode, and the window now displays unicode.
<br>

<br>
The net effect is that the window looks like it's behaving exactly like
<br>
a unix window does.
<br>

<br>
The copy and paste functions are updated to cut and paste unicode too.
<br>

<br>
As usual, building with WINDOWS_NO_UNICODE preserves existing behaviour
<br>
(useful for windows 95/98/me builds).
<br>

<br>
The sole difference in behaviour is that the copy function now removes
<br>
trailing blank lines from the output, as this is never what you want.
<br>

<br>
CLUSTER_UNTESTED as windows only changes.
<br>

<br>
gs/psi/dwtext.c
<br>
gs/psi/dwtext.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-08 14:55:28 +0100></a>
2011-06-08 14:55:28 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=afda147d56efff03ff6967a91a0436732d7b38fc">afda147d56efff03ff6967a91a0436732d7b38fc</a>
<blockquote>

<br>
Tweaks to windows makefiles.
<br>

<br>
Eliminate some noise during windows builds. Thanks to Norbert Janssen for
<br>
this.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/msvctail.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-08 10:05:21 +0100></a>
2011-06-08 10:05:21 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3367282be8da9713c0cd7a95a56c59a6b4e69a6e">3367282be8da9713c0cd7a95a56c59a6b4e69a6e</a>
<blockquote>

<br>
Add file missed from last nights commit, 232b1d3.
<br>

<br>
Forgot to add the new file :(
<br>

<br>
gs/base/gp_wutf8.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-07 15:25:57 -0700></a>
2011-06-07 15:25:57 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a436e0f9992ab5734b21b796a02ed0976ba1d5b">6a436e0f9992ab5734b21b796a02ed0976ba1d5b</a>
<blockquote>

<br>
Work toward getting fast thresholding for color output devices and color input images
<br>

<br>
To make my life easier, this updates msvc.mak to include the planar devices.
<br>
Changes in image_render_mono_ht to work towards the case where the output device is not mono.
<br>
Minor fixes in gxicolor.c in the portion of code that steps through the planes.
<br>
Addition of copy_plan operations in gxht_thresh.c for CMYK planar devices.
<br>
Addition of clip_copy_plane for the clip device (thanks Robin Watts).
<br>

<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/lib.mak
<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-08 00:02:44 +0100></a>
2011-06-08 00:02:44 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=232b1d36ad90b8d8be357033a80162fdd9de7aa8">232b1d36ad90b8d8be357033a80162fdd9de7aa8</a>
<blockquote>

<br>
More work on unicode handling under windows.
<br>

<br>
Continuing from commit 0ea739147, fix other issues, including:
<br>

<br>
* OpenPrinter calls changed to use OpenPrinterW.
<br>
* FindFirstFile/FindNextFile changed to use FindFirstFileW/FindNextFileW.
<br>
* gp_getenv windows specific registry lookups changed to use unicode
<br>
versions.
<br>
* GetProfileString changed to use GetProfileStringW.
<br>
* Add unicode changes to gswin32 as well as gswin32c.exe.
<br>

<br>
This hopefully concludes the bulk of the work on unicode support. Possible
<br>
areas to consider in future include:
<br>

<br>
* changing gswin32 so that cut and pasting operates in unicode
<br>
* make gswin32 display text in unicode
<br>
* modify stdin to go from unicode to utf8, and stdout to go from utf8
<br>
back to unicode.
<br>

<br>
I hope no idea if any of those are possible or not.
<br>

<br>
Testing seems to indicate that this all works OK, but I am not ideally
<br>
set up here.
<br>

<br>
For safety, I have introduced a WINDOWS_NO_UNICODE define. If this is
<br>
predefined during a build then this will cause the code to drop back to
<br>
the old mode of operation.
<br>

<br>
gs/base/gdevwpr2.c
<br>
gs/base/gp_msprn.c
<br>
gs/base/gp_mswin.c
<br>
gs/base/gp_mswin.h
<br>
gs/base/gp_ntfs.c
<br>
gs/base/gp_wgetv.c
<br>
gs/base/msvctail.mak
<br>
gs/base/windows_.h
<br>
gs/base/winlib.mak
<br>
gs/ghostscript.vcproj
<br>
gs/psi/dwmain.c
<br>
gs/psi/dwmainc.c
<br>
gs/psi/msvc.mak
<br>
pl/dwmainc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-06 22:13:07 -0400></a>
2011-06-06 22:13:07 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8b90a80fe86364c0b6c1cad12cfb241c66943c24">8b90a80fe86364c0b6c1cad12cfb241c66943c24</a>
<blockquote>

<br>
Bug 688064: Add AdjustWidth=WIDTH
<br>

<br>
Extend AdjustWidth option to support adjustment to any width. This option
<br>
now accepts the following values;
<br>
0 - no adjustment, the same as before
<br>
1 - low res fax adjustments, the same as before
<br>
>1 - adjust to the given width, regardless of the document width.
<br>

<br>
gs/base/gdevfax.c
<br>
gs/base/gdevpng.c
<br>
gs/base/gdevtifs.c
<br>
gs/base/gdevtifs.h
<br>
gs/base/gxdownscale.c
<br>
gs/base/gxdownscale.h
<br>
gs/base/minftrsz.c
<br>
gs/base/minftrsz.h
<br>
gs/doc/Devices.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-06 21:00:41 +0100></a>
2011-06-06 21:00:41 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f92a542b0475a12f4724d3e57f232cafbe17ce50">f92a542b0475a12f4724d3e57f232cafbe17ce50</a>
<blockquote>

<br>
Bug 691118: Fix radial shading bug
<br>

<br>
Bug 691118 describes a bug with radial shadings in a PDF file.
<br>

<br>
Back in r7982 (git 69a43b0) (16 May 2007) Igor introduced some cunning
<br>
code to speed radial shadings. It would spot that the shading was large
<br>
in comparison with the area being filled, and produce a smaller,
<br>
equivalent shading.
<br>

<br>
Essentially, it would take the destination rectangle, and figure out
<br>
where in the shading the 'extremes' of that rectangle would come from
<br>
(allowing for distortion in shape generation) and ensure that the newly
<br>
generated shading covered the same area.
<br>

<br>
Either the corners of the rectangle could be extremes, or points on the
<br>
side. The code for the points on the sides was broken due to a typo
<br>
causing the X and Y cases to be switched.
<br>

<br>
All that is required to solve the bug is to change the == to !=.
<br>

<br>
In researching the problem however, I recommented lots of the code to
<br>
make it more comprehensible (to me at least!) along with introducing
<br>
some temporary variables to make it clearer and avoid needless
<br>
recomputation of values. I am committing this as I believe it's a step
<br>
forward for the code, even though it doesn't actually make a
<br>
difference.
<br>

<br>
48 differences in non-pdfwrite/ps2write tests. 11 in pdfwrite, 17 in
<br>
ps2write. Checked with bmpcmp, all unnoticable to the naked eye, so
<br>
presumably progressions.
<br>

<br>
gs/base/gxshade1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-06 14:59:09 +0100></a>
2011-06-06 14:59:09 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82dc5982726c8ea05c3be6faa2f370a62f11a94a">82dc5982726c8ea05c3be6faa2f370a62f11a94a</a>
<blockquote>

<br>
Fix Bug 689737: antialiasing issues with patterns.
<br>

<br>
Bug 689737 shows mismatches between rendering with and without
<br>
antialiasing when PaintType 2 patterns are used.
<br>

<br>
Following Michaels analysis of the bug, the fix seems to be very simple;
<br>
when opening a pattern accumulator device, if the PaintType is 2, then
<br>
set color_info.anti_alias.graphics_bits to 1. We also set
<br>
color_info.anti_alias.text_bits to 1, even though this is unlikely to
<br>
make a difference if freetype is used.
<br>

<br>
No expected cluster differences as antialiasing isn't used in any
<br>
cluster tests.
<br>

<br>
This commit also removes a FIXME (as I've checked with Michael), and
<br>
improves the commenting on the device proc structure (which I'd done
<br>
when trying a different device proc based fix, but is an improvement
<br>
anyway).
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-05 23:42:14 -0400></a>
2011-06-05 23:42:14 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a0720527bcabb2732c3c06dfe3cae1f9c9ea9318">a0720527bcabb2732c3c06dfe3cae1f9c9ea9318</a>
<blockquote>

<br>
Bug 692252: define 'inf' as 0
<br>

<br>
Work around a bug in PDF file that has 'inf' instead of a number
<br>
in the content stream. Define a PDF operator 'inf' that returns 0
<br>
and issues a warning.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-04 22:04:12 +0100></a>
2011-06-04 22:04:12 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0ea739147fd02ee0e63e58c036bb63fa841ddd3c">0ea739147fd02ee0e63e58c036bb63fa841ddd3c</a>
<blockquote>

<br>
Bug 691222: Make windows build use UTF-8 encoding.
<br>

<br>
We change the windows builds to use the 'wmain' rather than 'main'
<br>
entrypoints. This means we get the command line supplied in 'wchar_t's
<br>
rather than chars. We convert back to chars using UTF-8 encoding, and
<br>
call (what was) the main entrypoint.
<br>

<br>
This means that we can cope with unicode filenames/paths etc.
<br>

<br>
To match the encoding, we therefore need to wrap every use of the
<br>
filenames with the associated utf-8 -> wchar_t conversion and use
<br>
the unicode file access functions (_wfopen instead of fopen etc)
<br>
instead.
<br>

<br>
Simple testing seems to indicate that this works. I think I've got
<br>
every occurence of file access, but it's possible I've missed some. If so
<br>
I'll fix them piecemeal as they are reported.
<br>

<br>
This should solve bug 691222, and hopefully 691117.
<br>

<br>
gs/base/gp_mswin.c
<br>
gs/psi/dwmainc.c
<br>
pl/dwmainc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-04 22:09:58 +0100></a>
2011-06-04 22:09:58 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4aff3e0d813cb00eb62db9720cf99b2d419f999a">4aff3e0d813cb00eb62db9720cf99b2d419f999a</a>
<blockquote>

<br>
Move various uses of fopen to use gp_fopen.
<br>

<br>
For portability we should be using gp_fopen, not fopen.
<br>

<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevtxtw.c
<br>
gs/base/gdevwts.c
<br>
gs/psi/imainarg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-04 00:35:37 -0700></a>
2011-06-04 00:35:37 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=77b456f298aeabaa4b27b63a9ead0aa0470ac5b8">77b456f298aeabaa4b27b63a9ead0aa0470ac5b8</a>
<blockquote>

<br>
Removed HAVE_HYPOT from configure scripts.
<br>

<br>
This revision disables checking for a system hypot() function and is
<br>
a followup to 7dcc68ce753175a9c686021d53a061253e2787c3 which modified
<br>
math_.h to always use our internal hypot() function.
<br>

<br>
No expected cluster differences.
<br>

<br>
config.mak.in
<br>
configure.ac
<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/macosx.mak
<br>
gs/base/unix-gcc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 17:33:51 +0100></a>
2011-06-03 17:33:51 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=31174084f95474f9c0edfd4c534c3b1654c02255">31174084f95474f9c0edfd4c534c3b1654c02255</a>
<blockquote>

<br>
Fix bug 692226; stray pixels in skewed masked image
<br>

<br>
When painting a masked image, we first plot a scanlines worth of
<br>
mask pixels to a mask plane. This is then used in a clipping device to
<br>
clip the image pixels that follow thereafter.
<br>

<br>
In the code that plots the masked pixels it currently gathers up 'runs'
<br>
of identical pixels and plots them all at once. This works fine for
<br>
portrait and landscape images, but for skewed ones has problems due to
<br>
rounding errors. By plotting large runs of pixels at once, we can a) get
<br>
gaps between subsequent rows of masked pixels, and b) get a mismatch
<br>
between the pixels covered by the mask and the image. These manifest
<br>
as holes in the image.
<br>

<br>
The image code already has a comment in it to the effect that we cannot
<br>
amalgamate large blocks due to rounding errors.
<br>

<br>
This fix therefore extends this policy (of not amalgamating) to skewed
<br>
masked images too.
<br>

<br>
426 non-pdfwrite/pswrite differences expected. 79 pdfwrite. 31 ps2write.
<br>
Checked with bmpcmp and all seem either progressions or neutral.
<br>

<br>
gs/base/gximono.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 19:07:47 +0100></a>
2011-06-03 19:07:47 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9c5325b7778074c3add1f682058260d7f8154386">9c5325b7778074c3add1f682058260d7f8154386</a>
<blockquote>

<br>
Add clip_copy_plane device procedure.
<br>

<br>
Cut and pasted with obvious changes from clip_copy_mono. Nothing remarkable
<br>
worth mentioning.
<br>

<br>
Not used in current code, so CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 17:32:09 +0100></a>
2011-06-03 17:32:09 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7c8855aed043415063ad7472eb2af4320d4544eb">7c8855aed043415063ad7472eb2af4320d4544eb</a>
<blockquote>

<br>
Add rasterop to FEATURE_DEVS in msvc makefile.
<br>

<br>
The rasterop module is already added by default under unix, so this moves
<br>
windows into line.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-03 12:29:50 -0400></a>
2011-06-03 12:29:50 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=636788a8e6d2133a7e3294ee4e1b573c64e1254a">636788a8e6d2133a7e3294ee4e1b573c64e1254a</a>
<blockquote>

<br>
Bug 691906, Drop symbolic flag with named encodings.
<br>

<br>
PDF font descriptor has 3 attributes that affect whether the TT font
<br>
is processed as symbolic one. The spec is not clear what to do when
<br>
the attributes conflict. This revision consigers fonts that have
<br>
/WinAnsiEncoding or /MacRomanEncoding as non-symbolic regardless of
<br>
the flags.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-02 20:49:27 -0700></a>
2011-06-02 20:49:27 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6558511800f1f467b66e8e220b80ac99d6ee6f69">6558511800f1f467b66e8e220b80ac99d6ee6f69</a>
<blockquote>

<br>
Addition of code to parse the file for the source object color description
<br>

<br>
The file toolbin/color/src_color/objsrc_profiles_example.txt provides example
<br>
content where we have the key word for the profile, the profile and the rendering
<br>
intent.  Next step is to implement the usage of these profiles in the link
<br>
construction.
<br>

<br>
gs/base/gscms.h
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/toolbin/color/src_color/objsrc_profiles_example.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-02 12:38:40 +0100></a>
2011-06-02 12:38:40 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=585cac9d3aa6bca9e877c3e12ef3e28fd4f7f571">585cac9d3aa6bca9e877c3e12ef3e28fd4f7f571</a>
<blockquote>

<br>
Fix bug 691152; gradients appear 'stepped'.
<br>

<br>
The original bug report was that tiffsep and tiff24nc give noticably
<br>
different results. This turns out to be because tiffsep is set to use
<br>
non 'linear-and-separable' colours.
<br>

<br>
When shadings are rendered, they are 'decomposed' down into smaller
<br>
and smaller regions, until they are smaller than a given threshold.
<br>
These regions are then filled either with linear filled traps (in the
<br>
linear and separable case) or with constant colour (in the non linear
<br>
and separable case). This means that we can get away with a larger
<br>
threshold in the linear and separable case (tiff24nc) and still see
<br>
smooth results.
<br>

<br>
The original version of the code (pre SVN rev 7936) used to decompose
<br>
until the regions were smaller than a pixel. At rev 7936 this was
<br>
upped to be 1 point (1/72 of an inch) (or 1 pixel, whatever was
<br>
larger). Reverting to this original code solves the problem by making
<br>
the constant color regions small enough so that they still look
<br>
smooth.
<br>

<br>
There would therefore appear to be several possible approaches to
<br>
solve the problem:
<br>

<br>
1) We could back out the change in 7936. This trades time (27% in the
<br>
worst measured test case) for correctness.
<br>

<br>
2) We could change tiffsep to use linear and separable colours.
<br>

<br>
I've opted for an approach based on 1) here, because a bmpcmp clearly
<br>
shows easily visible differences in some files in other devices, for
<br>
example:
<br>

<br>
tests_private/comparefiles/470-01.ps.pgmraw.300.0
<br>

<br>
By default, the code now operates as pre revision 7936. Should the
<br>
change in speed be considered unacceptable, gs can be build with the
<br>
symbol  MAX_SHADING_RESOLUTION defined to maximum dpi to which shadings
<br>
should be decomposed; building with -DMAX_SHADING_RESOLUTION=72 will
<br>
give the same results as the existing code.
<br>

<br>
gs/base/gxshade6.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-01 11:12:31 -0600></a>
2011-06-01 11:12:31 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4132ef5d36ff63b2b84f9864b7240609ac84ac38">4132ef5d36ff63b2b84f9864b7240609ac84ac38</a>
<blockquote>

<br>
Enhance autoconf tests for SSE2 and byte swapping support.
<br>

<br>
Previously we only checked if the test programs compile, now we check
<br>
if they compile and link.
<br>

<br>
configure.ac
<br>
gs/base/configure.ac
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-01 16:22:40 +0100></a>
2011-06-01 16:22:40 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f83e6d48c33ff1edd2aecbe4482b8a1374808951">f83e6d48c33ff1edd2aecbe4482b8a1374808951</a>
<blockquote>

<br>
Tweak jbig2dec os_types.h for android mupdf build.
<br>

<br>
If HAVE_STDINT_H is defined we are supposed to be getting our definitions
<br>
from stdint.h. Instead the header defines them anyway. Fix this. This showed
<br>
up when building MuPDF for Android.
<br>

<br>
gs/jbig2dec/os_types.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-06-01 09:47:56 -0400></a>
2011-06-01 09:47:56 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e895d3aae94fa6ca1c53c4e7a47f5894ee3c5943">e895d3aae94fa6ca1c53c4e7a47f5894ee3c5943</a>
<blockquote>

<br>
Bug 591335: Get ink names from images.
<br>

<br>
Fixes a bug in indexed color space handler that prevented proper
<br>
recursion into the base color space, and add /Image /XObject
<br>
to the list of resources that are searched for separation color names.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-31 23:39:45 -0400></a>
2011-05-31 23:39:45 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=db4af9eaf902dbac931ca8c88c586df9d160fb72">db4af9eaf902dbac931ca8c88c586df9d160fb72</a>
<blockquote>

<br>
Bug 692245: Make pattern handler more robust.
<br>

<br>
Make pattern handling code tolerant to pattern streams that leave
<br>
some junk on the operand stack.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-31 09:23:10 -0700></a>
2011-05-31 09:23:10 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=000e8614d2229335ed269f9ebc9a42e33b035f83">000e8614d2229335ed269f9ebc9a42e33b035f83</a>
<blockquote>

<br>
Fix for issues in the setting of the newer ICC device parameters
<br>

<br>
This fixes issues that were introduced when I added the new device
<br>
parameters for rendering intent.  Also, this adds in a new structure
<br>
for defining different ICC profiles for the SOURCE colors
<br>
of objects (e.g. text image graphic).  This will be set as a user
<br>
parameter and stored in the icc manager.   Next step in this is
<br>
to get things initialized and then use the associated profiles.
<br>

<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/base/gscms.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/psi/zusparam.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-31 01:14:21 -0700></a>
2011-05-31 01:14:21 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d0055ac144c1f1a51e906976b85e8e2119b5a2db">d0055ac144c1f1a51e906976b85e8e2119b5a2db</a>
<blockquote>

<br>
Change rsync max-size in clusterpush.pl to 10 megs.
<br>

<br>
To prevent accidently transferring large log files to the casper during
<br>
a clusterpush the rsync in that script was limited to 2.5 megs via the
<br>
the --max-size option.  However a recently added source file, imdi_k.c,
<br>
is 2.6 megs, so the max-size limit has been increased to 10 megs.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-31 00:19:38 -0400></a>
2011-05-31 00:19:38 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16e928c697f4282c830ab57b7e16347b0b5b086f">16e928c697f4282c830ab57b7e16347b0b5b086f</a>
<blockquote>

<br>
Bug 692242, drop outlines without /Title.
<br>

<br>
Ignore outlines without a required /Title attribute and
<br>
issue a warning.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-30 20:26:53 +0100></a>
2011-05-30 20:26:53 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91b9580bf09b81126d6a99c6fe3e0048972fe3d0">91b9580bf09b81126d6a99c6fe3e0048972fe3d0</a>
<blockquote>

<br>
Fix Bug 692225. Interpolate and Decode don't play nice.
<br>

<br>
Bug 692225 gives an example where an Image with both a Decode array
<br>
and interpolation set to true gives bad results.
<br>

<br>
The problem was with a branch of the if in image_render_interpolate_icc
<br>
that was assuming that any decode array given was [0 1]. The fix here is
<br>
simply to test for whether need_decode is set.
<br>

<br>
No changes seen on clusterpushing.
<br>

<br>
Check this with Michael quand il sont retourne.
<br>

<br>
gs/base/gxiscale.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-30 14:21:02 +0100></a>
2011-05-30 14:21:02 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9fd0b414427b58fc79dae23cb11607ea5fcd0890">9fd0b414427b58fc79dae23cb11607ea5fcd0890</a>
<blockquote>

<br>
Updated gitpush.sh script.
<br>

<br>
Fixed script in light of kens experiences. Better error messages, more
<br>
thorough (i.e. any!) checking. Some documentation in the script.
<br>

<br>
gs/toolbin/localcluster/gitpush.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-28 18:04:24 +0100></a>
2011-05-28 18:04:24 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=543fd70fd3b6afc75a767ba1a41663ec3a982866">543fd70fd3b6afc75a767ba1a41663ec3a982866</a>
<blockquote>

<br>
Excellently crufty gitpush script to interface with cluster.
<br>

<br>
In your local git repo, do the following:
<br>

<br>
git remote add regression@ghostscript.com:/home/regression/cluster/gitbridge/ghostpdl
<br>

<br>
Ensure that you are setup to be able to ssh into ghostscript.com as the
<br>
regression user.
<br>

<br>
Then:
<br>

<br>
git config alias.cluster '!gs/toolbin/localcluster/gitpush.sh'
<br>

<br>
Then you can:
<br>

<br>
git cluster <blah>
<br>

<br>
in exactly the same way as we used to be able to be able to:
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl <blah>
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/localcluster/gitpush.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-28 08:49:10 +0100></a>
2011-05-28 08:49:10 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=94f1a552f75647f142b85e5f30c075c19dde0084">94f1a552f75647f142b85e5f30c075c19dde0084</a>
<blockquote>

<br>
Bug 692240: Gracefully handle incomplete FontBBox arrays.
<br>

<br>
The FAPI code would throw an error if the FontBBox array had fewer
<br>
than four values. We'll now replace the broken array with a valid
<br>
one.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 10:15:08 -0700></a>
2011-05-27 10:15:08 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20520230859eaa315a52731c1361be650c7e4999">20520230859eaa315a52731c1361be650c7e4999</a>
<blockquote>

<br>
Bug 692237. Fix memfile_unlink to use %p instead of 0x%0x
<br>

<br>
When the change was made (8e0f0dfb Ralph Giles 2008-09-10 21:35:24) the unlink
<br>
was missed. The %p is more portable in that it handles 32 or 64 bit addresses
<br>
as strings. Thanks to Norbert Janssen for finding this.
<br>

<br>
gs/base/gxclmem.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 18:07:10 +0100></a>
2011-05-27 18:07:10 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5974e9171854673d86e0c47a1d1cfef1ff9a5cb1">5974e9171854673d86e0c47a1d1cfef1ff9a5cb1</a>
<blockquote>

<br>
Address a compiler warning.
<br>

<br>
No cluster differences.
<br>

<br>
gs/psi/imain.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 17:32:36 +0100></a>
2011-05-27 17:32:36 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a743893666fa2c00244f291b83208e5cb961a27">6a743893666fa2c00244f291b83208e5cb961a27</a>
<blockquote>

<br>
Bug 692238: fix a couple of typos in News.htm.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/doc/News.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 15:58:28 +0100></a>
2011-05-27 15:58:28 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9a83627c1c0015a446fbf087848e98234a2bdddb">9a83627c1c0015a446fbf087848e98234a2bdddb</a>
<blockquote>

<br>
Bug 692220: have the lib file arrays extend as required.
<br>

<br>
Previously we had a hard limit of GS_MAX_LIB_DIRS on the number of entries
<br>
allowed in the lib search path. This change makes GS_MAX_LIB_DIRS the
<br>
default space available, but allows the arrays to extend as required.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/imain.c
<br>
gs/psi/imainarg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-27 10:15:37 +0100></a>
2011-05-27 10:15:37 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96da6c46750074869c5bcaeeba7e204d8df83a16">96da6c46750074869c5bcaeeba7e204d8df83a16</a>
<blockquote>

<br>
Have clusterpush.pl check for/use CLUSTER_USER env var.
<br>

<br>
For anyone that uses a different local login than their user name
<br>
for the cluster, rather than have to specify the user name on the
<br>
command line every time, you can now set CLUSTER_USER in your
<br>
shell, and clusterpush.pl will use that, before going to check
<br>
USER and USERNAME as before.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
gs/toolbin/localcluster/clusterpush.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-26 11:20:10 -0700></a>
2011-05-26 11:20:10 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=998fc31cc9bd717190b0313eb246c14fe6303602">998fc31cc9bd717190b0313eb246c14fe6303602</a>
<blockquote>

<br>
Restore Makefile to clusterpush.pl file list.
<br>

<br>
Removed Makefile from the list of files excluded from the rsync
<br>
operation in clusterpush.pl since the ghostpdl Makefile is not
<br>
built by a configure/autogen.sh operation.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-26 01:09:55 -0700></a>
2011-05-26 01:09:55 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eb0b920bd993d1b03478c9ba4dfc54e995ec7bac">eb0b920bd993d1b03478c9ba4dfc54e995ec7bac</a>
<blockquote>

<br>
Fix minor typo.
<br>

<br>
gs/base/gsmchunk.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-25 23:47:04 -0600></a>
2011-05-25 23:47:04 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ec6afb99389c13414a43820908e090841b6bcd75">ec6afb99389c13414a43820908e090841b6bcd75</a>
<blockquote>

<br>
Fixes Bug 692232 - landscape printed on portrait media.
<br>

<br>
Add the ability to pass postscript names on the command line - so now
<br>
AutoRotatePages can be set.  The other way of fixing this - specifying
<br>
a different MediaBox would be awkward in the current PCL design.
<br>

<br>
pl/plmain.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-24 08:08:35 -0700></a>
2011-05-24 08:08:35 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=25de59220e9472e6de1acc046c317141a1751770">25de59220e9472e6de1acc046c317141a1751770</a>
<blockquote>

<br>
Fix for Bug 692217 nested trans_pattern_clist SEGV
<br>

<br>
This was caused by a clip device created for tiling a mask with a transparent
<br>
pattern rendered with a clist. The clip device used for rendering did not
<br>
get its color_info updated when its target (pdf14) changed the color_info,
<br>
specifically the depth.
<br>

<br>
Fixed by grabbing the target color_info after calling the target's compositor.
<br>

<br>
gs/base/gdevnfwd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-25 20:55:29 -0400></a>
2011-05-25 20:55:29 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b8a35e6cf6f0394487c9e46d989ea57dd0e4203d">b8a35e6cf6f0394487c9e46d989ea57dd0e4203d</a>
<blockquote>

<br>
Bug 692229, rename variables in Luratech license blocks.
<br>

<br>
Change variable names in rarely compiled blocks related to Luratech
<br>
license key to match the declarations.
<br>

<br>
gs/base/sjpx_luratech.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-25 19:55:04 +0000></a>
2011-05-25 19:55:04 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1de7e6dcb4a89cfdbc93ef176cee17f2e1b430f3">1de7e6dcb4a89cfdbc93ef176cee17f2e1b430f3</a>
<blockquote>

<br>
Revised clusterpush.pl; msys git operation
<br>

<br>
Changes to accomodate clusterpushing from windows msys git shells.
<br>
This relies on various other tools being added to the path. See
<br>
forthcoming email.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-25 11:11:25 +0000></a>
2011-05-25 11:11:25 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=177d0f5ef5d3d2f992b10750e072dc91696c92cc">177d0f5ef5d3d2f992b10750e072dc91696c92cc</a>
<blockquote>

<br>
Update gitsetup.h; remove --local.
<br>

<br>
Remove a --local from a command that upsets old versions of git, while
<br>
not making a difference to later versions. Thanks to Ray for pointing this
<br>
out.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/gitsetup.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-25 06:54:07 +0000></a>
2011-05-25 06:54:07 +0000</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ebefadf4428a0fd4ca4607221bb59e2e0343b35b">ebefadf4428a0fd4ca4607221bb59e2e0343b35b</a>
<blockquote>

<br>
Fix executable property to +x.
<br>

<br>
gs/toolbin/gitsetup.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-24 16:23:32 +0100></a>
2011-05-24 16:23:32 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8151aa54b8a71e5c9929bb43390a9be1b4b8d042">8151aa54b8a71e5c9929bb43390a9be1b4b8d042</a>
<blockquote>

<br>
Add gitsetup.sh to gs/toolbin.
<br>

<br>
Simple script for doing the 'obvious' configuration to a freshly checked
<br>
out git clone of ghostscript.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/gitsetup.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-24 07:53:59 -0700></a>
2011-05-24 07:53:59 -0700</strong>
<br>Robin Watts <robin@peeves.(none)><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4dc31e78ea0b58973f5a97319eafcbc10e5b9f2b">4dc31e78ea0b58973f5a97319eafcbc10e5b9f2b</a>
<blockquote>

<br>
Add autoconf check for bswap32/byteswap.h availability.
<br>

<br>
As per bug 692211, add some autoconf magic to detect the presence of
<br>
__builtin_bswap32 and/or byteswap.h.
<br>

<br>
No expected cluster changes.
<br>

<br>
config.mak.in
<br>
configure.ac
<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/gsropt.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-24 12:38:27 +0100></a>
2011-05-24 12:38:27 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=38720da47205c029d9bee6c3b792791b6f39277d">38720da47205c029d9bee6c3b792791b6f39277d</a>
<blockquote>

<br>
mem_mono_copy_mono optimisations.
<br>

<br>
Working on Norberts latest test files, I have changed mem_mono_copy_mono
<br>
to only use copy_rop if the runs are large enough for it to get a
<br>
benefit. Currently this threshold is set to 32 pixels (1 word).
<br>

<br>
This is sufficiently high that we get 9.01 or better performance on all the
<br>
test files, but might benefit from further tuning later.
<br>

<br>
gs/base/gdevm1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-24 08:35:18 +0100></a>
2011-05-24 08:35:18 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b246d9d85c119f101956ba07cf9e1c8b9f510b49">b246d9d85c119f101956ba07cf9e1c8b9f510b49</a>
<blockquote>

<br>
pdfwrite : set bit 0 of CIDSet.
<br>

<br>
Set the CID 0 bit of the CIDSet array, so that this glyph is marked as
<br>
being present, when converting TrueType fonts to CIDFonts for PDF/A
<br>
output.
<br>

<br>
CID 0 is required to be present for all CIDFonts, it is the /.notdef
<br>
equivalent.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 20:45:41 +0100></a>
2011-05-20 20:45:41 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=99b6056dda5ccf74a270d5ca3dbbe2319dc2c219">99b6056dda5ccf74a270d5ca3dbbe2319dc2c219</a>
<blockquote>

<br>
Fix for pdfwritten fts_42xx.xps crashing in transparency stuff.
<br>

<br>
See Bug 692219. This may well be patching symptoms rather than correctly
<br>
addressing the problem, but it's low impact, and shouldn't create any new
<br>
problems. We can always back it out after michael has had time to look.
<br>

<br>
gs/base/gxblend1.c
<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-23 15:42:46 +0100></a>
2011-05-23 15:42:46 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86e887eab1634dc9bceec1e1479c11fe03835e96">86e887eab1634dc9bceec1e1479c11fe03835e96</a>
<blockquote>

<br>
mem_mono_strip_copy_rop_dev opts; non-texture 'short' case.
<br>

<br>
Attempt to optimise for latest test cases from Norbert.
<br>

<br>
Use reverted, and optimised old code for the width < 32 no texture case.
<br>

<br>
gs/base/gdevm1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-23 16:41:17 +0100></a>
2011-05-23 16:41:17 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=54796e82370348412811db945b95c42953ce0957">54796e82370348412811db945b95c42953ce0957</a>
<blockquote>

<br>
Bug #692202 Bug in display_raster function
<br>

<br>
The calculation of bytewidth, the number of bytes required for a row of
<br>
pixels, only worked correctly when the colour depth was a multiple of 8.
<br>

<br>
Since the device is a display device, and has since become used as a
<br>
general method for getting data out of GS, this is not reasonable
<br>
(monochrome and greyscale devices are less than 8 bits)
<br>

<br>
Modified as suggested by Martin Osieka to round up the calculation.
<br>

<br>
gs/base/gdevdsp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-23 08:08:23 +0100></a>
2011-05-23 08:08:23 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7fcb89d46d42eb8806d226d3eb39a64f2ad0fe08">7fcb89d46d42eb8806d226d3eb39a64f2ad0fe08</a>
<blockquote>

<br>
Squash a very minor compiler warning
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-22 22:23:49 +0100></a>
2011-05-22 22:23:49 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b7d52f725a7c4ef939469f757687a86252fade9c">b7d52f725a7c4ef939469f757687a86252fade9c</a>
<blockquote>

<br>
Add Memory squeezing functionality to Memento.
<br>

<br>
If you build with MEMENTO_HAS_FORK predefined, then in-app memory
<br>
squeezing is enabled.
<br>

<br>
export MEMENTO_SQUEEZEAT=1 then run the app, and it will do some magic
<br>
    with repeated forks to test the &quot;failure to allocate&quot; paths through the code.
<br>

<br>
All the allocation events before the MEMENTO_SQUEEZEATth one will proceed
<br>
as normal. After that, on every allocation, the code will fork. The child
<br>
will proceed with every allocation failing until the program exits
<br>
(hopefully cleanly, but sometimes leaking memory, sometimes dying with a
<br>
SEGV due to failure to cleanup properly). When the child exits, the
<br>
parent carries on execution (until the next allocation, when the same fork
<br>
process happens again).
<br>

<br>
CLUSTER_UNTESTED as disabled by default.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-22 08:36:29 -0700></a>
2011-05-22 08:36:29 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1be218b08069f483ba53eacddc6f7cfbe96957ea">1be218b08069f483ba53eacddc6f7cfbe96957ea</a>
<blockquote>

<br>
Fixes in ICC profile handling and device parameters
<br>

<br>
This fixes some issues that were encountered when setting ICC
<br>
profiles on the command line.  One issue is that the put_profile
<br>
procedure needs to be initialized a bit earlier which required
<br>
a change in gdevprn.h  In addition, when the output profile is
<br>
specified to be the CIELAB profile and there is transparency in
<br>
the file there was a rc issue with the profile when going through
<br>
the clist.  This also includes code to handle the rendering intent device
<br>
parameters for object types.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gdevprn.h
<br>
gs/base/gscdevn.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gxclthrd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-22 08:32:34 -0700></a>
2011-05-22 08:32:34 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=185b6f5db3771f6501d55b7b0b6c6ca8663b24c5">185b6f5db3771f6501d55b7b0b6c6ca8663b24c5</a>
<blockquote>

<br>
Update of ICC Creator
<br>

<br>
Update to ICC creator project to enable the creation of special effect profiles.
<br>
Also addition of profiles to demonstrate object dependent color management.
<br>

<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.cpp
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/resource.h
<br>
gs/toolbin/color/icc_creator/effects/black_output.icc
<br>
gs/toolbin/color/icc_creator/effects/c_only.txt
<br>
gs/toolbin/color/icc_creator/effects/cyan_output.icc
<br>
gs/toolbin/color/icc_creator/effects/k_only..txt
<br>
gs/toolbin/color/icc_creator/effects/m_only.txt
<br>
gs/toolbin/color/icc_creator/effects/magenta_output.icc
<br>
gs/toolbin/color/icc_creator/effects/y_only.txt
<br>
gs/toolbin/color/icc_creator/effects/yellow_output.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-22 00:03:57 -0400></a>
2011-05-22 00:03:57 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=70912a68940b1361e8d33a239a57280eead00bfc">70912a68940b1361e8d33a239a57280eead00bfc</a>
<blockquote>

<br>
Fix optional inline image skipping.
<br>

<br>
Use newly created function that calculates the number of components
<br>
of a given image and fix calculation of the inline image size that
<br>
is used to skip optional inline images.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-21 01:15:49 -0400></a>
2011-05-21 01:15:49 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3ac9479be8db8eb44f3787d54a171747b61c2b44">3ac9479be8db8eb44f3787d54a171747b61c2b44</a>
<blockquote>

<br>
Bug 692213: verify /Default* colorspaces.
<br>

<br>
Check that the number of components of /DefaultGray, /DefaultRGB, and
<br>
/DefaultCMYK is correct, and reject inappropriate color spaces.
<br>

<br>
Also fix the code that forces update of the color space at the
<br>
beginning of the page when the page defines any of /Defailt* color
<br>
spaces. This hack has been written long ago but it was unreachable.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 19:59:16 +0100></a>
2011-05-20 19:59:16 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4c64b898e1dc2b3532e0fe6c18a292fa58843207">4c64b898e1dc2b3532e0fe6c18a292fa58843207</a>
<blockquote>

<br>
Merge branch 'Type3_PCL'
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 19:43:55 +0100></a>
2011-05-20 19:43:55 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=83318bd849910c6c79f0ea5cb11912557ac01307">83318bd849910c6c79f0ea5cb11912557ac01307</a>
<blockquote>

<br>
Final type 3 font modifications for PCL
<br>

<br>
We need to probe the glyph cache in process_text_modify_width as well
<br>
process_text_return_width, this is a possible path through the code,
<br>
depending on the exact combination of text operations.
<br>

<br>
Remove debugging code
<br>

<br>
Tidy up some declarations and casting of poitners to make compilers
<br>
happy.
<br>

<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gxccache.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 12:03:14 +0100></a>
2011-05-20 12:03:14 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96b967aac2176d9cd96167cc1430bb76074d6384">96b967aac2176d9cd96167cc1430bb76074d6384</a>
<blockquote>

<br>
Add some prints to caching
<br>

<br>
Set the FtonMatrix to the identity when making the CTM the identity, so that these don't get applied twice.
<br>

<br>
gs/base/gdevpdtt.c
<br>
gs/base/gxccache.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 13:51:24 +0100></a>
2011-05-19 13:51:24 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0b8df1bfb7f5496ba5b644b21c7586fda6dcdc46">0b8df1bfb7f5496ba5b644b21c7586fda6dcdc46</a>
<blockquote>

<br>
Add some extra debugging printouts
<br>

<br>
Fix log2_scale and depth when creating and testing cache entries in order
<br>
to make sure they are coherent (we don't actually use the entries so the
<br>
values aren't important, as long as they are the same)
<br>

<br>
When using PCL bitmap fonts we do want to note glyphs set with setcharwidth
<br>
as cached, as well as those with setcachedevice. (the same is not true
<br>
for PostScript)
<br>

<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:53:56 +0100></a>
2011-05-17 15:53:56 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=49921ad78b31af5ab8803d6de886d93106c0db0c">49921ad78b31af5ab8803d6de886d93106c0db0c</a>
<blockquote>

<br>
Add another new font type 'ft_PCL_user_defined' for the PCL bitmap
<br>
font.
<br>

<br>
Update various parts of the code to treat the new font the same as a
<br>
PostScript type 3 font.
<br>

<br>
In pdfwrite, if we capture a CharpProcs, and its for a PCL bitmap font
<br>
then add a cache entry. We do NOT do this for most other fonts, only
<br>
when rendering a glyph. When assembling text, if the font is a PCL
<br>
bitmap font, tehn after checking to see if we've already used it, check
<br>
to see if there is a cache entry. If the PCL job has reused this character
<br>
code with a different bitmap it will haev flushed the cache entry. If we
<br>
font this has happened then capture the new glyph. NB if we are capturing
<br>
a new definition (font->used[[] is valid) then we know this is a redefinition
<br>
so capture into a different font using the old style 'default' implementation.
<br>

<br>
gs/base/gdevpdtd.c
<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdtf.c
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdts.c
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gdevpdtw.c
<br>
gs/base/gstext.c
<br>
gs/base/gxchar.c
<br>
gs/base/gxftype.h
<br>
gs/base/gxpaint.c
<br>
pcl/pgfont.c
<br>
pl/plfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-13 19:57:44 +0100></a>
2011-05-13 19:57:44 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=97fbf9fd981cdda1d6db80c2a808e3935b1809f3">97fbf9fd981cdda1d6db80c2a808e3935b1809f3</a>
<blockquote>

<br>
Apparently missed in previous commit. Update so that stick fonts are
<br>
identified as such to pdfwrite.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-13 19:53:56 +0100></a>
2011-05-13 19:53:56 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa801aa476fc200d397f0c72c383462eaad88267">fa801aa476fc200d397f0c72c383462eaad88267</a>
<blockquote>

<br>
Add a new font type 'ft_GL2_stick_user_defined' and use it as the FontType
<br>
of the HP/GL2 stick font. Modify code throughout to treat it the same as
<br>
'ft_user_defined', ie a type 3 font.
<br>

<br>
Allow pdfwrite to attach a type 3 'PDF font' to a stick font (normally the
<br>
types are required to be the same).
<br>

<br>
Alter the way we calculate the 'default' device matrix during stick font
<br>
accumulation so that we get better stroke widhts.
<br>

<br>
Now that we cna identify a stick font, check for anamorphic scaling before
<br>
accumulating the glyphs. If anamorphic scaling, then *don't* treat this as
<br>
a font. THis is because the stroke width will be inconsistent.
<br>

<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdtf.c
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdts.c
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gdevpdtw.c
<br>
gs/base/gstext.c
<br>
gs/base/gxchar.c
<br>
gs/base/gxftype.h
<br>
gs/base/gxpaint.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 16:04:17 +0100></a>
2011-05-12 16:04:17 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6a1c8f107029e92509dfbcaf4aaf1d691d27abe5">6a1c8f107029e92509dfbcaf4aaf1d691d27abe5</a>
<blockquote>

<br>
Alter the way we handle missing glyph names, use the saem code as for
<br>
composite fonts.
<br>

<br>
Don't assume the CharProc matrix will be upright when creating the dummy
<br>
'initial' matrix, copy and scale all the values.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-11 15:46:23 +0100></a>
2011-05-11 15:46:23 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d2ce995693b6c279ea207081728f6906a02e718a">d2ce995693b6c279ea207081728f6906a02e718a</a>
<blockquote>

<br>
More type 3 font madness
<br>

<br>
Use the device level 'PS_accumulator' flag in various places instead of
<br>
the more kludgy test against penuym->pte_default being NULL.
<br>

<br>
If we don't get a glyph name back from the interpreter (PCL) then invent
<br>
one instead of giving up with an error.
<br>

<br>
If we are not a type 3 accumulator, then don't undo the factor of 100
<br>
scaling applied to the device width and height, we only do that for PS.
<br>

<br>
Add a routine to return a special 'initial' matrix during the course of
<br>
type 3 accumulation. The PCL stick font uses this to set the line width
<br>
and we need to account for various PS/PDF scaling which will otherwise
<br>
be ignored.
<br>

<br>
Make sure we don't try and accumulate a charproc when its being run for a
<br>
charpath operation.
<br>

<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 15:35:13 +0100></a>
2011-05-06 15:35:13 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bc6a5bdd6329a0027d0c162e29eda277f85c2a8a">bc6a5bdd6329a0027d0c162e29eda277f85c2a8a</a>
<blockquote>

<br>
Type  PCL fonts again.
<br>

<br>
Put back the matrix scaling in pdf_text_set_cache, even though the matrix
<br>
shoudl always be the identity here when running PCL. Best to be safe.
<br>

<br>
set_charproc_attrs emitted a 'd1' setcachedevice, but didn't check if
<br>
the glyph was flipped. For PCL this led to ury being less than lly, and
<br>
so the glyph was elided. Added check to make sure these are correct. This
<br>
required removal of 'const' from an arry as well.
<br>

<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 15:06:22 +0100></a>
2011-05-06 15:06:22 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8730b9f1c3c1977805a9f0ad830b0268170343c4">8730b9f1c3c1977805a9f0ad830b0268170343c4</a>
<blockquote>

<br>
More type 3 changes
<br>

<br>
Don't scale the CTM by 100 (done for FreeType) when handling PCL fonts
<br>
in install_charproc_accum, set the boolean to complete_charproc_accum so
<br>
that we don't 'undo' the factor of 100 scaling when the font is PCL.
<br>

<br>
Add code to set_charproc_attrs to determine whether this is a 'scale 100'
<br>
(ie PostScript) type 3 font or not, if its not then don't undo the scaling
<br>
by 100 of the CTM.
<br>

<br>
When accumulating a chraproc, before setting the CTM to identity matrix
<br>
also set the current point to 0,0, which ensures that that the current point
<br>
doesn't get baked into the character description. Also invalidate the
<br>
'char_tm' txy_fixed_valid member of the graphics state, this will force
<br>
a recalculation of char_tm using the new identity matrix.
<br>

<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 12:29:38 +0100></a>
2011-05-06 12:29:38 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b7695b7f2fe4dac0e228294b944b667e617e822">1b7695b7f2fe4dac0e228294b944b667e617e822</a>
<blockquote>

<br>
More PCL type 3 improvements
<br>

<br>
Add code to initialise the returned character code, so that the charproc
<br>
is assigned the correct character code. Further test for PCL fonts in
<br>
pdf_text_set_cache and don't try to use a show enumerator to get the
<br>
'output_char_code' when we are doing PCL, instead use the one from the
<br>
text enumerator 'returned' structure. Normally this would not be valid
<br>
yet as this is filled in after we've completed the 'show', but we
<br>
set this before startig the show, from the text string, so that it will be
<br>
valid.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 11:49:19 +0100></a>
2011-05-06 11:49:19 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3791899545ad61db983158e468d29de85153f94a">3791899545ad61db983158e468d29de85153f94a</a>
<blockquote>

<br>
More type 3 PCL fonts
<br>

<br>
Attempt to get gsave/grestore counting correct by addig requied gs_gsave.
<br>
Add code to invalidate the char_ctm as we have altered the CTM to identity
<br>
for capture, and don't want to use the char_ctm (values are restored later).
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-05 15:26:17 +0100></a>
2011-05-05 15:26:17 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ccea133c3b21570c6400337dbe260791da8807d">1ccea133c3b21570c6400337dbe260791da8807d</a>
<blockquote>

<br>
Add in basic handling for PCL type 3 fonts. Now setss up the accumulator
<br>
patches the enumerator procs so that the pdfwrite set_cache is used when
<br>
setcachedevice is issued.
<br>

<br>
Text matrices are wrong in many places leading to empty output.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-05 14:50:33 +0100></a>
2011-05-05 14:50:33 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fa5cce2824ade8c280adf370686e20e661d0c3e3">fa5cce2824ade8c280adf370686e20e661d0c3e3</a>
<blockquote>

<br>
Add handler for PCL type 3 fonts. For now this throws an error, just while
<br>
I make sure it doesn't break any PS/PDF files.
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-05 13:15:19 +0100></a>
2011-05-05 13:15:19 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5cc30c83a05acacfd9c2e18b72e7e716c38d024">f5cc30c83a05acacfd9c2e18b72e7e716c38d024</a>
<blockquote>

<br>
File missed in previous commit
<br>

<br>
gs/base/gdevpdtt.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-05 13:13:27 +0100></a>
2011-05-05 13:13:27 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7838510e494245cc5e5349f2ea0d5ff9028c96d0">7838510e494245cc5e5349f2ea0d5ff9028c96d0</a>
<blockquote>

<br>
Add better PCL type 3 font handling, step 1
<br>

<br>
First, break all the code for starting and stopping accumulators
<br>
into procedures, because the existing code is too hard to read.
<br>

<br>
gs/base/gdevpdfb.c
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdtt.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-29 16:42:30 +0100></a>
2011-04-29 16:42:30 +0100</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=947e90ad0229b6333d6eb61e7f54ac33b200ab28">947e90ad0229b6333d6eb61e7f54ac33b200ab28</a>
<blockquote>

<br>
initial changes for capturing PCL type 3 fonts in pdfwrite
<br>

<br>
Seems to be OK now with PS/PCL, does not crash any longer with PCL, but capture is incorrect.
<br>

<br>
gs/base/gdevpdfb.c
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gdevpdtt.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 18:22:37 +0100></a>
2011-05-20 18:22:37 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1ab5da13a846b9fde15c2863b6b75ae5b28d22d8">1ab5da13a846b9fde15c2863b6b75ae5b28d22d8</a>
<blockquote>

<br>
Bug 692218: Incorrect CIDtoGIDMap length causing crash.
<br>

<br>
In pdfwrite's pdf_convert_truetype_font_descriptor() function,
<br>
the lengths of both the CIDtoGIDMap and the CIDSet were being set
<br>
to the number of in use CID's in the font, whereas they need to
<br>
be, and were being filled, as being LastChar + 1 entries long.
<br>

<br>
As well as memory corruption, the contents would have been wrong,
<br>
too.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevpdtd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 12:46:09 +0000></a>
2011-05-20 12:46:09 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0805588e9bcaec02b4eef4582db6ab23ae8ea1b1">0805588e9bcaec02b4eef4582db6ab23ae8ea1b1</a>
<blockquote>

<br>
Fix Bug 692216. Remove zero height traps from shadings.
<br>

<br>
The simplified file in Bug 692216 shows a division by zero error when
<br>
filling a trapezoid with zero height. The fix is simply to update
<br>
the code not to draw zero height traps.
<br>

<br>
This should be safe as any fill adjustment is done well before this point.
<br>

<br>
The cluster shows just one difference. Looking at it in a bmpcmp it does
<br>
look suspicious, but it's not clear whether it's a progression or a
<br>
regression. Ken informs me he's seen the same differences before with
<br>
unrelated changes, so perhaps it's an indeterminism.
<br>

<br>
The code seems more sensible this way round anyway.
<br>

<br>
gs/base/gxshade6.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-20 07:58:28 +0100></a>
2011-05-20 07:58:28 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c6341648ed83b1a3dde948bdf8bcf54a2f275fe5">c6341648ed83b1a3dde948bdf8bcf54a2f275fe5</a>
<blockquote>

<br>
Reinstate x11alpha as the default device on Unix.
<br>

<br>
With the recent revisions to make transparency play nicely
<br>
with anti-aliased output, should now be safe to use as the
<br>
default device.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/Makefile.in
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 14:55:52 -0600></a>
2011-05-19 14:55:52 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9de72911de76b582f028c70564b1539f913b517c">9de72911de76b582f028c70564b1539f913b517c</a>
<blockquote>

<br>
Make directories silently.
<br>

<br>
The previous mkdir incantantation had unwanted warning messages if the
<br>
directory already existed.  Thanks to Norbert Janssen for the patch.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
common/msvc_top.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 19:04:26 -0600></a>
2011-05-18 19:04:26 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=413e6e5a1c7ccc3d86678a54e93130ca182f9e98">413e6e5a1c7ccc3d86678a54e93130ca182f9e98</a>
<blockquote>

<br>
Simplify the svg device state.
<br>

<br>
Represent colors directly with color indices not strings.
<br>
This will address bug 691886 indirectly but wasn't the motivation
<br>
for changing the state value types.
<br>

<br>
gs/base/gdevsvg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-16 13:28:46 -0600></a>
2011-05-16 13:28:46 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=86da13321eaa87a01b804af3619d30f8a7263f5e">86da13321eaa87a01b804af3619d30f8a7263f5e</a>
<blockquote>

<br>
Decrease debugging verbosity.
<br>

<br>
Change default printing to be conditonal on high level device
<br>
debug flag '_'.
<br>

<br>
gs/base/gdevsvg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 18:32:07 +0100></a>
2011-05-19 18:32:07 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4812b7189345fa94075445d8e8d5eef7eb04cdab">4812b7189345fa94075445d8e8d5eef7eb04cdab</a>
<blockquote>

<br>
Explicitly disable libtiff's jbig code.
<br>

<br>
Add the --disable-jbig option to both Ghostscript and GhostPDL's
<br>
calls to the libtiff configure script, otherwise, if the build
<br>
system has libjbig installed, libtiff's jbig code is enabled,
<br>
and we don't want/need it.
<br>

<br>
Bug 692214.
<br>

<br>
Makefile
<br>
gs/base/configure.ac
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 16:58:33 +0000></a>
2011-05-19 16:58:33 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8f4b7b96b14df2bef1564e00c72f087f72bb8f56">8f4b7b96b14df2bef1564e00c72f087f72bb8f56</a>
<blockquote>

<br>
More Memento tweaks. Thanks to Dave Thomas.
<br>

<br>
Remove unused variables/unneeded inits.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 15:26:05 +0000></a>
2011-05-19 15:26:05 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b35b5d610738a521cfe6374965a8f6c4d6b5d477">b35b5d610738a521cfe6374965a8f6c4d6b5d477</a>
<blockquote>

<br>
Correct memset prototype in memento.c. D'Oh.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 15:34:31 +0100></a>
2011-05-19 15:34:31 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=44e59fd123729ba05f8728f01d13406d3e283855">44e59fd123729ba05f8728f01d13406d3e283855</a>
<blockquote>

<br>
Merge branch 'patt_trans_clist'
<br>

<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 15:01:14 +0100></a>
2011-05-19 15:01:14 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3bf453e7987830459ca677c8fa1b93fbd6c4a7e3">3bf453e7987830459ca677c8fa1b93fbd6c4a7e3</a>
<blockquote>

<br>
Fix for icc profile refcounting.
<br>

<br>
Take new reference before discarding old one, lest we throw away the
<br>
last reference and then can't pick it up again.
<br>

<br>
This solves the SEGV with:
<br>

<br>
gs\debugbin\gswin32c.exe -sDEVICE=ppmraw -o out.ppm
<br>
-r300 ..\ghostpcl\tests_private\comparefiles\Bug689690.pdf
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 13:35:37 +0100></a>
2011-05-19 13:35:37 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bc9e69257a1605d67aca0cd121e167d7e0ae22be">bc9e69257a1605d67aca0cd121e167d7e0ae22be</a>
<blockquote>

<br>
Merge branch 'master' into patt_trans_clist
<br>

<br>
I expect this to leave me with all files working except for Bug689690.pdf
<br>
which has profile reference counting problems introduced from the trunk.
<br>

<br>
For example:
<br>
gs\debugbin\gswin32c.exe -sDEVICE=ppmraw -o out.ppm
<br>
-r300 ..\ghostpcl\tests_private\comparefiles\Bug689690.pdf
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 15:57:45 +0000></a>
2011-05-18 15:57:45 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5cff633dff1b8b91afb97925f8a4f7781db5a9b2">5cff633dff1b8b91afb97925f8a4f7781db5a9b2</a>
<blockquote>

<br>
Fix SEGV in tile_rect_trans_simple.
<br>

<br>
If the left hand copy region started to the right of the subtile that was
<br>
actually populated, we would attempt a copy with a negative length. Simple
<br>
fix is to check for this case.
<br>

<br>
This should resolve the 5 xps SEGVs.
<br>

<br>
gs/base/gxp1fill.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 23:37:56 +0000></a>
2011-05-17 23:37:56 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=128650aac51fcf723428b8a902c4e3af7d1d058f">128650aac51fcf723428b8a902c4e3af7d1d058f</a>
<blockquote>

<br>
Fix SEGV in Bug691538.pdf.
<br>

<br>
Local testing with:
<br>
gs -dNOGC -Z@? -r300 -sDEVICE=pbmraw -dMaxBitmap=30000000 -o nul: ..\ghostpcl\tests_private\comparefiles\Bug691538.pdf
<br>

<br>
shows a SEGV on windows with a debug build. Removing the reference
<br>
decrement solves it and doesn't show any leaks.
<br>

<br>
Oddly the cluster doesn't show the SEGV any more, but it did previously.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 18:13:17 +0100></a>
2011-05-17 18:13:17 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6780bf7996f1d5a0be5b0dc55e89ea48bf89980e">6780bf7996f1d5a0be5b0dc55e89ea48bf89980e</a>
<blockquote>

<br>
Memento realloc fix.
<br>

<br>
Memento was filling the 'new' section of realloced blocks incorrectly,
<br>
resulting in memory overwrites.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:53:01 +0100></a>
2011-05-17 15:53:01 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce8bddd7cef1f9e0d2c2ae28b82d513a6cfa9dce">ce8bddd7cef1f9e0d2c2ae28b82d513a6cfa9dce</a>
<blockquote>

<br>
Merge branch 'master' into patt_trans_clist
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gstrans.c
<br>
gs/base/gxclrast.c
<br>
gs/base/gxdevice.h
<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:42:11 +0100></a>
2011-05-17 15:42:11 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b7bf4222988019f17a454ce7a6b841d586c3d4d">1b7bf4222988019f17a454ce7a6b841d586c3d4d</a>
<blockquote>

<br>
Comment and error code handling tweaks to gdevp14.c
<br>

<br>
Correct a typo, update a comment, and avoid a SEGV in the case where
<br>
an allocation of an iccsmask fails.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:38:38 +0100></a>
2011-05-17 15:38:38 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6283d613595f2c42a461d2cb8cfddb2e0a6fc168">6283d613595f2c42a461d2cb8cfddb2e0a6fc168</a>
<blockquote>

<br>
Tiny tweak to leaks.tcl
<br>

<br>
Tweak leaks.tcl so it doesn't think the file is empty if 'memory allocated'
<br>
is on the first line of the log.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/leaks.tcl
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:23:24 +0100></a>
2011-05-17 15:23:24 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4ec504eeddfd5e17ca5f1b4e58090fb0c1b15201">4ec504eeddfd5e17ca5f1b4e58090fb0c1b15201</a>
<blockquote>

<br>
Rework colorspace ref counting of cmm_icc_profile_data.
<br>

<br>
Previously the code seemed to be trying to take one reference to
<br>
cmm_icc_profile_data for every reference taken to the colorspace. We rework
<br>
this here to only take a single reference to cmm_icc_profile_data for each
<br>
colorspace. This solves at least one SEGV.
<br>

<br>
gs/base/gscdevn.c
<br>
gs/base/gscscie.c
<br>
gs/base/gscspace.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxipixel.c
<br>
gs/base/gxshade.c
<br>
gs/psi/zicc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 17:49:46 +0100></a>
2011-05-12 17:49:46 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a0ac4ac2082132905463703ddd8b6db6fd95e4fb">a0ac4ac2082132905463703ddd8b6db6fd95e4fb</a>
<blockquote>

<br>
Squash another warning; gdevp14.c.
<br>

<br>
Remove an unused variable definition (that is shadowed later on).
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 17:41:17 +0100></a>
2011-05-12 17:41:17 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d40646d2f1c48c174fad480c03309707b16659c7">d40646d2f1c48c174fad480c03309707b16659c7</a>
<blockquote>

<br>
Squash warning.
<br>

<br>
Remove unused variable, left over from merge.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/gdevnfwd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 17:01:59 +0100></a>
2011-05-12 17:01:59 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6d910ef6207e3704f1050cd46c481ac81b681261">6d910ef6207e3704f1050cd46c481ac81b681261</a>
<blockquote>

<br>
Fix SEGVs seen due to icc profile data being freed.
<br>

<br>
If we swap the ICC profile data for a colorspace due to starting/stopping
<br>
use of an smask, we must also adjust the reference counts. Hopefully this
<br>
will solve all the SEGVs we see. It does solve at least one.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 15:26:56 +0100></a>
2011-05-12 15:26:56 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4d9eb7298700e0b4c484f164805d556c03c22b24">4d9eb7298700e0b4c484f164805d556c03c22b24</a>
<blockquote>

<br>
Merge branch 'master' into patt_trans_clist
<br>

<br>
Conflicts:
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gxdevice.h
<br>
gs/toolbin/bmpcmp.c
<br>

<br>
All trivially resolved except for gdevnfwd.c where I backed out one of the
<br>
fixes from 8ae4342 on instruction from Michael.
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc.c
<br>
gs/base/gstrans.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxdevice.h
<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-04 20:00:50 +0100></a>
2011-05-04 20:00:50 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9d8dc0278374c7c5bb4868a1ed356b8b5f8ece8a">9d8dc0278374c7c5bb4868a1ed356b8b5f8ece8a</a>
<blockquote>

<br>
Whitespace fixes + Return from gx_forward_create_compositor.
<br>

<br>
Fix up some stray trailing whitespace.
<br>

<br>
Also, gx_forward_create_compositor was neglecting to return a value.
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-03 20:36:49 -0700></a>
2011-05-03 20:36:49 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8ae4342084cbfc46782ca3fc23b4965f910f3c51">8ae4342084cbfc46782ca3fc23b4965f910f3c51</a>
<blockquote>

<br>
Fixes for 2 issues.  If a clip device is inserted in front of a pdf14 compositor, the ICC profile of the clip device needs to be updated if the compositor action results in a device profile change.  Also fix so that when the soft mask ICC profiles are swapped in or out the graphic state ICC profiles are also updated.
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-03 17:30:58 +0100></a>
2011-05-03 17:30:58 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e0e5e5c874d7546805558a00bec9c54ebd0770e5">e0e5e5c874d7546805558a00bec9c54ebd0770e5</a>
<blockquote>

<br>
Backout strokeafterfill stuff, as it proved unnecessary.
<br>

<br>
Remove commit eaae298 as it turns out not to be required.
<br>

<br>
gs/base/gspaint.c
<br>
gs/base/gspath.h
<br>
gs/base/gxistate.h
<br>
gs/psi/zpaint.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 19:39:22 +0000></a>
2011-05-02 19:39:22 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=04eef3817a5a6d3fee054338629b1e50eaa4ee0f">04eef3817a5a6d3fee054338629b1e50eaa4ee0f</a>
<blockquote>

<br>
Merge branch 'master' into patt_trans_clist
<br>

<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 19:28:39 +0000></a>
2011-05-02 19:28:39 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df2175e571369df32fc66e375357bc69976c5fed">df2175e571369df32fc66e375357bc69976c5fed</a>
<blockquote>

<br>
Put back default map_rgb_color forwarding.
<br>

<br>
At some point around the creation of this branch (which corresponded to our
<br>
move from SVN to git) we lost a line in gdevnfwd.c that sets up a default
<br>
forwarding for map_rgb_color. We don't know why it went, so we're putting it
<br>
back in. This probably hasn't caused any problems as it's a deprecated
<br>
function now.
<br>

<br>
gs/base/gdevnfwd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 20:02:59 +0100></a>
2011-05-02 20:02:59 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8eed15b976995b889a2498b064b53397a7d164a1">8eed15b976995b889a2498b064b53397a7d164a1</a>
<blockquote>

<br>
Add gxdevsop.h to VS solution.
<br>

<br>
Don't know why this wasn't in before...
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 19:50:04 +0100></a>
2011-05-02 19:50:04 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8d52d58da97faadd2dcd009f9a5381e87182789d">8d52d58da97faadd2dcd009f9a5381e87182789d</a>
<blockquote>

<br>
Pacify valgrind (and improve performance?) with tiny change.
<br>

<br>
A tiny change to gxclrast.c where we initialise state_tile.size.{x,y}.
<br>
This stops valgrind giving warnings. While the code works OK without
<br>
this (I believe), it can cause various %, /, gcd operations. These are
<br>
all expensive operations and are neatly sidestepped by the simple
<br>
expedient of setting the variable to 0 to start with.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 18:32:06 +0000></a>
2011-05-02 18:32:06 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4cd416d1e5f46c01ce9827b803035a939872e7f7">4cd416d1e5f46c01ce9827b803035a939872e7f7</a>
<blockquote>

<br>
Fix clipping problems with composited pattern clists.
<br>

<br>
When using a clist to fill a clipped area with a pattern, the current
<br>
code can drop the clipping device out of the chain. This change solves that
<br>
problem.
<br>

<br>
When we create a new compositor, we generally want that compositor to become
<br>
the top device in the chain, so all new drawing commands go to it. In the
<br>
pattern clist case however, we don't create a new compositor - we reuse an
<br>
existing one. It's important in this case *not* to take this as our new
<br>
target, otherwise the higher devices in the chain (such as the clipper
<br>
device) are lost.
<br>

<br>
This was shown when rendering pattrans_big.pdf at 300dpi banded to the pkm
<br>
device.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 11:21:50 -0700></a>
2011-05-02 11:21:50 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1d33714d197a3335ad34d21e70fc767cf42b369d">1d33714d197a3335ad34d21e70fc767cf42b369d</a>
<blockquote>

<br>
Fix for typo in pointer name during initialization of shape buffer during transparency pattern filling.
<br>

<br>
gs/base/gxp1fill.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 18:53:00 +0100></a>
2011-05-02 18:53:00 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=600aa9cc10d4439823de265d2805617154294ee7">600aa9cc10d4439823de265d2805617154294ee7</a>
<blockquote>

<br>
Quiet valgrind warning, and remove misleading init.
<br>

<br>
When run with valgrind on:
<br>

<br>
gs -sDEVICE=pbmraw -r300 -dMaxBitmap=100000000 -o out.pbm Bug690189c.pdf
<br>

<br>
Valgrind complains that params.GrayBackground is used without being
<br>
initialised. We fix this here by amending gs_trans_mask_params_init.
<br>

<br>
In so doing, we note that in zbegintransparencymaskgroup we were setting
<br>
params.ColorSpace, only to call gs_trans_mask_params_init and have it
<br>
overwrite it. To avoid confusion we therefore remove this needless init.
<br>

<br>
No cluster differences seen in testing.
<br>

<br>
gs/base/gstrans.c
<br>
gs/psi/ztrans.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 14:51:26 +0100></a>
2011-05-02 14:51:26 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1dbe20d53a4443a70692e9b7807cfb8a158229d0">1dbe20d53a4443a70692e9b7807cfb8a158229d0</a>
<blockquote>

<br>
Add support for cups (1bpp) files to bmpcmp.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-30 17:55:42 +0100></a>
2011-04-30 17:55:42 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eaae298fcfe31efda0166786c5624ef8fefd0e12">eaae298fcfe31efda0166786c5624ef8fefd0e12</a>
<blockquote>

<br>
Add new .strokeafterfill ps operator/graphics state bit.
<br>

<br>
We add a new .strokeafterfill ps operator that takes a bool, and sets it in
<br>
the graphics state. The intention is that this will allow us to spot the
<br>
case where we are executing the stroke part of a combined 'fill and stroke'
<br>
operation (as required by pdf). This should allow us to solve the
<br>
remaining problems with the pdf14/knockout group.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gspaint.c
<br>
gs/base/gspath.h
<br>
gs/base/gxistate.h
<br>
gs/psi/zpaint.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-29 19:41:50 +0100></a>
2011-04-29 19:41:50 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=96339fd0f400d7c0534a8ff73c355787d7773297">96339fd0f400d7c0534a8ff73c355787d7773297</a>
<blockquote>

<br>
Correct typo in comment. CLUSTER_UNTESTED.
<br>

<br>
gs/base/gxfillsl.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-29 19:39:27 +0100></a>
2011-04-29 19:39:27 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6ac5520977be5b3ee198c155ef395c6406962db4">6ac5520977be5b3ee198c155ef395c6406962db4</a>
<blockquote>

<br>
Whitespace fixes.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gsicc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 22:41:28 -0700></a>
2011-04-27 22:41:28 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c9de3e70e4027fb86dde6079a48b29cfd6825c72">c9de3e70e4027fb86dde6079a48b29cfd6825c72</a>
<blockquote>
<p>
    Revert &quot;MSVC changes plus gitignore for patt_trans_clist&quot;
<br>

<br>
This reverts commit 01c9c2bd3dbd8be851b2e8dde68885413807e704.
<br>

<br>
.gitignore
<br>
gs/ghostscript.vcproj
<br>
win32/GhostPDL.sln
<br>
win32/GhostPDL.suo
<br>
win32/language_switch.vcproj
<br>
win32/language_switch.vcproj.michaelv-PC.michaelv.user
<br>
win32/pcl.vcproj
<br>
win32/pcl.vcproj.michaelv-PC.michaelv.user
<br>
win32/svg.vcproj
<br>
win32/svg.vcproj.michaelv-PC.michaelv.user
<br>
win32/xps.vcproj
<br>
win32/xps.vcproj.michaelv-PC.michaelv.user
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 22:27:39 -0700></a>
2011-04-27 22:27:39 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4b191e99538574a67178a8a4df0e19f380d47403">4b191e99538574a67178a8a4df0e19f380d47403</a>
<blockquote>

<br>
Fix for reference counting issue of the compositor device at
<br>
the end of the clist playback. In most cases, the compositor rc
<br>
should be 1 at this point and so the device is closed and then
<br>
freed.  The case, when it is not 1 is when we have a pattern
<br>
that has a transparency and is stored in a clist.  In this case
<br>
the target for the pattern clist device is the main pdf14 device and
<br>
we increment the rc during this assignment.  So, when the
<br>
playback completes, the rc of the compositor is 2.  We do not
<br>
want to close and free the compositor, since it is part of the
<br>
main clist that we have going on.  Instead we only want to
<br>
decrement the rc.  The test file pattrans_big.pdf is now
<br>
handled correctly but has a rendering/tiling issue it appears.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 22:20:56 -0700></a>
2011-04-27 22:20:56 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=01c9c2bd3dbd8be851b2e8dde68885413807e704">01c9c2bd3dbd8be851b2e8dde68885413807e704</a>
<blockquote>

<br>
MSVC changes plus gitignore for patt_trans_clist
<br>

<br>
.gitignore
<br>
gs/ghostscript.vcproj
<br>
win32/GhostPDL.sln
<br>
win32/GhostPDL.suo
<br>
win32/language_switch.vcproj
<br>
win32/language_switch.vcproj.michaelv-PC.michaelv.user
<br>
win32/pcl.vcproj
<br>
win32/pcl.vcproj.michaelv-PC.michaelv.user
<br>
win32/svg.vcproj
<br>
win32/svg.vcproj.michaelv-PC.michaelv.user
<br>
win32/xps.vcproj
<br>
win32/xps.vcproj.michaelv-PC.michaelv.user
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 18:43:52 +0000></a>
2011-04-27 18:43:52 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=82437e248e95c3e9830720feaf5030d37950b091">82437e248e95c3e9830720feaf5030d37950b091</a>
<blockquote>

<br>
Whitespace fixups.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 18:42:10 +0000></a>
2011-04-27 18:42:10 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bdbb2b5da2ad758d07dfefc84b2a53c00ba091d4">bdbb2b5da2ad758d07dfefc84b2a53c00ba091d4</a>
<blockquote>

<br>
Revert SVN commit 12934, ref count checking before free in gxclrast.c
<br>

<br>
A couple of weeks ago, I applied a wild stab in the dark to solve a problem
<br>
that I cannot now locate. Having discussed it with Michael it seems that this
<br>
was (at best) just masking another problem (the incorrect ref count
<br>
initialisation of compositors). This has been fixed, so my faulty attempt
<br>
can be backed out.
<br>

<br>
We leave a debug only check in there to catch this situation. This should be
<br>
replaced by an assert when we have such things.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 15:25:22 +0100></a>
2011-04-27 15:25:22 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bdfb4cf85e6c7d78dbeecfb8c6dd06c1eed14714">bdfb4cf85e6c7d78dbeecfb8c6dd06c1eed14714</a>
<blockquote>

<br>
Fix overflow in pattern tile size estimation code.
<br>

<br>
gs/base/gxpcmap.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 10:46:22 +0000></a>
2011-04-27 10:46:22 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1540df197675f2935c6d743927ad25df0396dfff">1540df197675f2935c6d743927ad25df0396dfff</a>
<blockquote>

<br>
Merge branch 'master' into patt_trans_clist
<br>

<br>
gs/base/gstrans.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 13:23:00 -0700></a>
2011-04-26 13:23:00 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=212d2dba16a53088ba6de69266603db847069ec7">212d2dba16a53088ba6de69266603db847069ec7</a>
<blockquote>

<br>
Check to make sure an empty deviceN params member does not lead to an improper path during the device creation.
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 19:40:25 +0100></a>
2011-04-26 19:40:25 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=696ee8153b72d20484e66f5da43b6ee6027fddc4">696ee8153b72d20484e66f5da43b6ee6027fddc4</a>
<blockquote>

<br>
Remove partial merge left over from svn conversion.
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-02-09 21:38:24 +0000></a>
2011-02-09 21:38:24 +0000</strong>
<br>mvrhel <mvrhel@a1074d23-0009-0410-80fe-cf8c14f379e6><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ebf1da59669bb51701c3df9747ebe3f4fe9f6b26">ebf1da59669bb51701c3df9747ebe3f4fe9f6b26</a>
<blockquote>

<br>
Work on the pattern transparency clist code.
<br>

<br>
A squashed and rebased patch based on the following svn commits.
<br>

<br>
Author: robin <robin@a1074d23-0009-0410-80fe-cf8c14f379e6>
<br>
Date:   Tue Apr 19 12:40:00 2011 +0000
<br>

<br>
Various fixes to the transparency clist branch to correctly use
<br>
just the subrectangle of transparency tiles that is actually present.
<br>

<br>
Getting this in before the Great Git Change this afternoon.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/branches/patt_trans_clist_gs@12407 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
Author: ray <ray@a1074d23-0009-0410-80fe-cf8c14f379e6>
<br>
Date:   Fri Apr 8 16:56:48 2011 +0000
<br>

<br>
A couple of minor fixes that help things along, get past compile errors.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/branches/patt_trans_clist_gs@12379 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
Author: mvrhel <mvrhel@a1074d23-0009-0410-80fe-cf8c14f379e6>
<br>
Date:   Wed Feb 9 21:38:24 2011 +0000
<br>

<br>
Initial commit of work so far on getting the pattern transparency
<br>
clist code working. Much of this comes from work that Ray and I did
<br>
for customer 532. The remaining portion of the work is primarily
<br>
in pdf14_tile_pattern_fill in gdevp14.c, where we need to make
<br>
sure that the group that we are going to push is the intersection
<br>
with the rect from trans pattern since we only use the part that we
<br>
drew into in the pattern creation and not the whole group buffer. I
<br>
had not worked on this in a few weeks so I don't have more details
<br>
right now. I will spend a day on it this week to see exactly what
<br>
remains to be done.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/branches/patt_trans_clist_gs@12137 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevp14.h
<br>
gs/base/gsptype1.c
<br>
gs/base/gsptype1.h
<br>
gs/base/gstrans.c
<br>
gs/base/gstrans.h
<br>
gs/base/gxclip.c
<br>
gs/base/gxdevice.h
<br>
gs/base/gxp1fill.c
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxpcolor.h
<br>
gs/psi/zpcolor.c
<br>
gs/psi/ztrans.c
<br>
svg/svgdoc.c
<br>
xps/xpspage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 15:27:07 +0100></a>
2011-05-19 15:27:07 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e60ed1f615f7347dc9318b2c8e17851fb3a6199a">e60ed1f615f7347dc9318b2c8e17851fb3a6199a</a>
<blockquote>

<br>
Address bug 692211; byteswap.h not present on FreeBSD.
<br>

<br>
After googling it seems like the correct thing to do is to use gcc builtin
<br>
intrinsics for byteswapping from 4.3 upwards, and to use byteswap.h
<br>
for all other versions of gcc >= 2.0. This should address the problem.
<br>

<br>
gs/base/gsropt.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-19 12:28:06 +0000></a>
2011-05-19 12:28:06 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f66aa4e491ecff0a5787c4f4a8c8ace1cb7d3432">f66aa4e491ecff0a5787c4f4a8c8ace1cb7d3432</a>
<blockquote>

<br>
Minor tweaks to memento.
<br>

<br>
Improve debugging output, documentation. Fix the time at which the sequence
<br>
counter is incremented to give less confusing messages. Add Memento_inited
<br>
function to breakpoint on.
<br>

<br>
Not enabled in cluster so, CLUSTER_UNTESTED.
<br>

<br>
gs/base/lib.mak
<br>
gs/base/memento.c
<br>
gs/base/memento.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 12:28:05 -0600></a>
2011-05-18 12:28:05 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ef883a068ea54fca1569e5389f7ccfa6aa01e6a8">ef883a068ea54fca1569e5389f7ccfa6aa01e6a8</a>
<blockquote>

<br>
Merge branch 'pcl_documentation'
<br>

<br>
<p>
</blockquote>

<p><strong><a name=2011-05-14 15:15:32 -0600></a>
2011-05-14 15:15:32 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=21503ee8197c9707f8ced1c92593c4e279687ee2">21503ee8197c9707f8ced1c92593c4e279687ee2</a>
<blockquote>

<br>
Long overdue update of the PCL documentation.
<br>

<br>
doc/ghostpdl.pdf
<br>
doc/ghostpdl.tex
<br>
doc/ghostpdl.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 17:48:10 +0100></a>
2011-05-18 17:48:10 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=62b57818e9117c1ebfe32894464ab12956826f7d">62b57818e9117c1ebfe32894464ab12956826f7d</a>
<blockquote>

<br>
Workaround SEGV in clist with fillpage (Bug 692076).
<br>

<br>
This is a simple patch for the symptoms, not a proper cure, but it suffices
<br>
to get it out of regression test error lists.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 15:05:28 +0100></a>
2011-05-18 15:05:28 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1a7d4d447c2fc05240ab258f4eb232080fd1fb5f">1a7d4d447c2fc05240ab258f4eb232080fd1fb5f</a>
<blockquote>

<br>
Revise 64 bit build options for VS2010.
<br>

<br>
Mainly, there was come confusion between the WIN64 setting
<br>
for the type of build, and the BUILD_SYSTEM setting for
<br>
whether the system is 32 or 64 bit.
<br>

<br>
NOTE: 64 bit builds on 32 bit systems do not work, and
<br>
I do not intend to attempt to make them work.
<br>

<br>
Bug 692126
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/psi/msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-18 08:21:21 +0100></a>
2011-05-18 08:21:21 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f9cf64f56577b593f424c7d661b5fb8ea7a53216">f9cf64f56577b593f424c7d661b5fb8ea7a53216</a>
<blockquote>

<br>
Reinstate the Mememto build rules.....
<br>

<br>
....that went AWOL with commit 447c1a791d28fb72b196f75356bc411ef45afbdd
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 23:43:14 -0700></a>
2011-05-17 23:43:14 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=447c1a791d28fb72b196f75356bc411ef45afbdd">447c1a791d28fb72b196f75356bc411ef45afbdd</a>
<blockquote>

<br>
Fix for MT crashes in lcms
<br>

<br>
It turns out that lcms is can not safely share
<br>
profiles between threads when creating links.  This
<br>
was fixed by placing a mutex lock around the profile
<br>
creation.  It also turns out that lcms can not
<br>
use the same link to do transformations between threads.
<br>
This was solved by disabling the shared cache between
<br>
the threads.  Finally there was a race condition in
<br>
reference counting the device ICC profile in the pdf14
<br>
device.  Also, this commit includes a fix for a memory
<br>
leak in the pdf_mask object in gdevp14.
<br>

<br>
gs/base/gdevp14.c
<br>
gs/base/gscms.h
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gxcldev.h
<br>
gs/base/gxclthrd.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 22:33:15 +0100></a>
2011-05-17 22:33:15 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8d9bc767c0c59a7effa7652cbcbde14ab82de249">8d9bc767c0c59a7effa7652cbcbde14ab82de249</a>
<blockquote>

<br>
Make Memento work with valgrind, plus fix unix build issues.
<br>

<br>
Various fixes for Memento, most especially to ensure it works with
<br>
Valgrind (lots of valgrind calls to make memory readable/hide it again).
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/lib.mak
<br>
gs/base/memento.c
<br>
gs/base/memento.h
<br>
gs/base/unix-aux.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 15:29:53 -0400></a>
2011-05-17 15:29:53 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cbe9dcfc93812aae26ffd5c2bebbe5b2dc1a4623">cbe9dcfc93812aae26ffd5c2bebbe5b2dc1a4623</a>
<blockquote>

<br>
Bug 692209: tolerate missing /Length in PDF stream.
<br>

<br>
Add branches that deal with a missing /Length attribute in the
<br>
PDF string directory. The sample file misspells /Length as /Lenght
<br>
but the patch addresses a more general problem.
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 11:28:50 -0700></a>
2011-05-17 11:28:50 -0700</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=784c8aa262a2a71659ce2d882c424e0254368a10">784c8aa262a2a71659ce2d882c424e0254368a10</a>
<blockquote>

<br>
Fix ref counting for icc_array
<br>

<br>
Copy the icc_array BEFORE putdeviceparams so we don't end up creating extra ones, and bump the shared icc_array.
<br>

<br>
The finalize when the device is freed will decrement the ref count.
<br>

<br>
gs/base/gxclthrd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 18:13:17 +0100></a>
2011-05-17 18:13:17 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bc9c681b53babcab8d5e6bd102bfb0c51b8b7ed1">bc9c681b53babcab8d5e6bd102bfb0c51b8b7ed1</a>
<blockquote>

<br>
Memento realloc fix.
<br>

<br>
Memento was filling the 'new' section of realloced blocks incorrectly,
<br>
resulting in memory overwrites.
<br>

<br>
CLUSTER_UNTESTED as Memento is not enabled by default.
<br>

<br>
gs/base/memento.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-17 12:03:33 +0000></a>
2011-05-17 12:03:33 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2b7e6a4174a58cf0c395e4950a428a722607f860">2b7e6a4174a58cf0c395e4950a428a722607f860</a>
<blockquote>

<br>
Initial commit of new Memento module (attempt #2)
<br>

<br>
Memento is a simple memory checking module; it helps to track memory
<br>
corruption and leaks. To use it, build with -DMEMENTO.
<br>

<br>
Still to do: Valgrind integration.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/lib.mak
<br>
gs/base/malloc_.h
<br>
gs/base/memento.c
<br>
gs/base/memento.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-15 15:50:40 -0700></a>
2011-05-15 15:50:40 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1787ce3393956701e6241b8efc6f575887c3f5c1">1787ce3393956701e6241b8efc6f575887c3f5c1</a>
<blockquote>

<br>
Change in device ICC profile handling
<br>

<br>
This is the major portion of the code needed to achieve object dependent
<br>
color management.  This fixes the problems that existed in the
<br>
previous code with the device parameters and introduces an array of
<br>
ICC profiles in the device structure.  The code was cluster pushed and
<br>
showed some very minor differences in a couple files but they appear to be
<br>
OK with bmpcmp.  I still need to do further testing to verify that all the
<br>
functionality is correct (e.g. make sure setting the text profile properly
<br>
affects the text only).  In addition, the rendering intent options need to be
<br>
implemented.
<br>

<br>
I also need to check that nothing was broken with respect to MT
<br>
rendering and some of the devices that are not tested with cluster
<br>
pushing (e.g. the display device and the x11alpha device).
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevbit.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevpdfk.c
<br>
gs/base/gdevpng.c
<br>
gs/base/gdevpsdi.c
<br>
gs/base/gdevtfnx.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gdevxini.c
<br>
gs/base/gscms.h
<br>
gs/base/gscsepr.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdparam.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gstrans.c
<br>
gs/base/gxclrast.c
<br>
gs/base/gxclthrd.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevice.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximag3x.c
<br>
gs/base/gximono.c
<br>
gs/base/gxiscale.c
<br>
gs/base/lib.mak
<br>
gs/psi/zdevice.c
<br>
gs/psi/zusparam.c
<br>
pcl/pctop.c
<br>
psi/psi.mak
<br>
psi/psitop.c
<br>
pxl/pxpthr.c
<br>
pxl/pxtop.c
<br>
svg/svgtop.c
<br>
xps/xpstop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-13 10:52:18 -0700></a>
2011-05-13 10:52:18 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c622f66846aa6b8124b1dffed7dbdaedabedd93f">c622f66846aa6b8124b1dffed7dbdaedabedd93f</a>
<blockquote>

<br>
Modified clusterpush.pl to not rsync Makefiles
<br>

<br>
Modified clusterpush.pl to not rsync Makefiles and config.log files.
<br>
Also removed the various files that have been moved to the cluster.git
<br>
repository.
<br>

<br>
No expected cluster differences.
<br>

<br>
gs/toolbin/localcluster/bmps2html.pl
<br>
gs/toolbin/localcluster/build.pl
<br>
gs/toolbin/localcluster/cachearchive.pl
<br>
gs/toolbin/localcluster/checkSize.pl
<br>
gs/toolbin/localcluster/clustermaster.pl
<br>
gs/toolbin/localcluster/clustermonitor.cgi
<br>
gs/toolbin/localcluster/clustermonitor.pl
<br>
gs/toolbin/localcluster/clusterpull.sh
<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
gs/toolbin/localcluster/compare.pl
<br>
gs/toolbin/localcluster/comparerevs.pl
<br>
gs/toolbin/localcluster/dashboard.html
<br>
gs/toolbin/localcluster/nightly.pl
<br>
gs/toolbin/localcluster/pngs2html.pl
<br>
gs/toolbin/localcluster/readlog.pl
<br>
gs/toolbin/localcluster/readme
<br>
gs/toolbin/localcluster/run.pl
<br>
gs/toolbin/localcluster/setupcluster
<br>
gs/toolbin/localcluster/weekly.sh
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-13 09:42:41 -0700></a>
2011-05-13 09:42:41 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7dcc68ce753175a9c686021d53a061253e2787c3">7dcc68ce753175a9c686021d53a061253e2787c3</a>
<blockquote>

<br>
Modified math_.h to use our hypot().
<br>

<br>
The system hypot() function gives slightly different results on Linux vs
<br>
Mac OS X systems for same input values.  This minor difference results
<br>
in rendering variations in some files, confounding the regression
<br>
test system.
<br>

<br>
This revision changes math_.h to use our hypot() in all cases instead
<br>
of the system one (previously our function was used on those platforms
<br>
where there was no system hypot() function).
<br>

<br>
Testing by Robin shows that our function is faster than the system one,
<br>
so another reason to make this change.
<br>

<br>
Fixes Bug 692197.
<br>

<br>
Cluster differences on some nodes expected in:
<br>

<br>
tests_private__pcl__pcl5ccet__28-10.BIN    ppmraw
<br>
tests_private__pcl__pcl5ccet__32-01.BIN    pbmraw
<br>
tests_private__pcl__pcl5cfts__fts.2210a    pbmraw
<br>
tests_private__pcl__pcl5efts__fts.1810    ppmraw
<br>
tests_private__pcl__pcl5efts__fts.2132    pbmraw
<br>
tests_private__pcl__pcl5efts__fts.2291    pbmraw
<br>
tests_private__pcl__pcl5efts__fts.2350    pbmraw
<br>

<br>
gs/base/math_.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-13 09:33:29 +0000></a>
2011-05-13 09:33:29 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4bd5322f27e9b95716323bdd000e312418a59676">4bd5322f27e9b95716323bdd000e312418a59676</a>
<blockquote>

<br>
Further tweak to lcms cached transforms.
<br>

<br>
Use int comparisons rather than memcmp. No differences shown in cluster
<br>
testing.
<br>

<br>
gs/lcms/src/cmsxform.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 23:14:47 +0000></a>
2011-05-12 23:14:47 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3767ee67758778d00c9c5c879ade41fc9f41c83b">3767ee67758778d00c9c5c879ade41fc9f41c83b</a>
<blockquote>

<br>
Simplify LCMS cached transform template.
<br>

<br>
I'd overengineered the cached transform template code; the cache is
<br>
reset on every format change, so there is no need to check for that
<br>
in the transform function.
<br>

<br>
No expected performance increase, but the code is less complex. No
<br>
differences seen in cluster testing. CLUSTER_UNTESTED.
<br>

<br>
gs/lcms/src/cmsxform.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 17:57:55 +0100></a>
2011-05-12 17:57:55 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8bcf5d9dd0c4088a811f85121addb238c9240478">8bcf5d9dd0c4088a811f85121addb238c9240478</a>
<blockquote>

<br>
Add new lcms source/header file to ghostscript.vcproj.
<br>

<br>
No cluster differences as this isn't tested. CLUSTER_UNTESTED.
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 16:06:08 +0000></a>
2011-05-12 16:06:08 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d324305b11fd0bb399c868fe87b26cb768dc06c5">d324305b11fd0bb399c868fe87b26cb768dc06c5</a>
<blockquote>

<br>
LCMS (v1) Optimisations for CachedXFORM etc.
<br>

<br>
Optimise CachedXFORM (and related functions) by using a 'template' header
<br>
file and repeatedly including it with different options to generate
<br>
different specific versions of the code.
<br>

<br>
This gives a 10% improvement on 568.40345_VO_nr_3_vpeSR18.xl (a file where
<br>
most of the time is spent in clipping).
<br>

<br>
No expected cluster differences. I've just done a full test with a bmpcmp
<br>
and it showed no differences, but in light of what happened last time I
<br>
committed this, I am not going to use the magic rune to stop the cluster
<br>
rechecking it on commit.
<br>

<br>
gs/base/lcms.mak
<br>
gs/lcms/include/lcms.h
<br>
gs/lcms/src/cmspack.c
<br>
gs/lcms/src/cmsxform.c
<br>
gs/lcms/src/cmsxform.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-12 15:08:01 +0100></a>
2011-05-12 15:08:01 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e79fff7a2b215103c795b74d4abe162bf8ca3486">e79fff7a2b215103c795b74d4abe162bf8ca3486</a>
<blockquote>

<br>
Change PSI so -Z! works by default in debug builds.
<br>

<br>
Previously, the -Z! option (to show the name of each PS operator as it is
<br>
executed) has only been available in DEBUG builds that specifically use
<br>
the DEBUG_TRACE_PS_OPERATORS option. This change ensures that it is available
<br>
in ALL debug builds, and in any release build where the
<br>
DEBUG_TRACE_PS_OPERATORS symbol is predefined.
<br>

<br>
The reason for historically having it as a separate option was because
<br>
checking for whether the ! debug flag was set on every operator was felt
<br>
to be too large an overhead. I have arranged the code so that this overhead
<br>
is minimised now - in debug builds we only get the extra overhead when
<br>
the -Z! is specified on the command line.
<br>

<br>
In normal release builds there is no change to the overhead. In release
<br>
builds with DEBUG_TRACE_PS_OPERATORS, the same overheads apply as in
<br>
DEBUG builds (that is a small additional overhead when -Z! is not used
<br>
and a larger one when it is).
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/iinit.c
<br>
gs/psi/iinit.h
<br>
gs/psi/interp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-11 15:39:06 -0600></a>
2011-05-11 15:39:06 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7d77dabf5a1e24118455a5c0417ae75c5d5dcf60">7d77dabf5a1e24118455a5c0417ae75c5d5dcf60</a>
<blockquote>

<br>
Fixes bug #689870 - add proper big endian number accessors.
<br>

<br>
Previously only an unsigned accessor was provided and it was being
<br>
used to read both signed and unsigned quantities.
<br>

<br>
gs/jbig2dec/jbig2.c
<br>
gs/jbig2dec/jbig2_halftone.c
<br>
gs/jbig2dec/jbig2_page.c
<br>
gs/jbig2dec/jbig2_priv.h
<br>
gs/jbig2dec/jbig2_segment.c
<br>
gs/jbig2dec/jbig2_symbol_dict.c
<br>
gs/jbig2dec/jbig2_text.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-11 15:18:11 -0600></a>
2011-05-11 15:18:11 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7c309e8a33333da3c124732bb6b00b0701e85579">7c309e8a33333da3c124732bb6b00b0701e85579</a>
<blockquote>

<br>
Fixes 690889, potential null dereference.
<br>

<br>
Prevent a theoretical (no test file) null dereference.  There are
<br>
several of these cases identified by by static analysis.  We believe
<br>
the authors intent was to pass the word stream if the arithmetic state
<br>
was not set, as in the other call of the same function.
<br>

<br>
gs/jbig2dec/jbig2_symbol_dict.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-11 17:12:59 +0000></a>
2011-05-11 17:12:59 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2bde8dc655c36ef729964980aa373c26dbe873e5">2bde8dc655c36ef729964980aa373c26dbe873e5</a>
<blockquote>

<br>
Backout 6469f73 pending investigation of unexpected differences.
<br>

<br>
gs/base/lcms.mak
<br>
gs/lcms/include/lcms.h
<br>
gs/lcms/src/cmspack.c
<br>
gs/lcms/src/cmsxform.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-11 16:17:05 +0000></a>
2011-05-11 16:17:05 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6469f738123e0c212473f11d38e88bb3650a9087">6469f738123e0c212473f11d38e88bb3650a9087</a>
<blockquote>

<br>
LCMS (v1) optimisations for CachedXFORM etc.
<br>

<br>
Optimise CachedXFORM (and related functions) by using a 'template' header
<br>
file and repeatedly including it with different options to generate
<br>
different specific versions of the code.
<br>

<br>
This gives a 10% improvement on 568.40345_VO_nr_3_vpeSR18.xl (a file where
<br>
most of the time is spent in clipping).
<br>

<br>
No expected cluster differences.
<br>

<br>
gs/base/lcms.mak
<br>
gs/lcms/include/lcms.h
<br>
gs/lcms/src/cmspack.c
<br>
gs/lcms/src/cmsxform.c
<br>
gs/lcms/src/cmsxform.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 19:50:04 +0100></a>
2011-05-02 19:50:04 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1d07f53add51362ce5887b599f2dcb360f9cf348">1d07f53add51362ce5887b599f2dcb360f9cf348</a>
<blockquote>

<br>
Pacify valgrind (and improve performance?) with tiny change.
<br>

<br>
A tiny change to gxclrast.c where we initialise state_tile.size.{x,y}.
<br>
This stops valgrind giving warnings. While the code works OK without
<br>
this (I believe), it can cause various %, /, gcd operations. These are
<br>
all expensive operations and are neatly sidestepped by the simple
<br>
expedient of setting the variable to 0 to start with.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-10 19:29:49 +0100></a>
2011-05-10 19:29:49 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f6f6de913f2f20914ed641a0331e405011d6565b">f6f6de913f2f20914ed641a0331e405011d6565b</a>
<blockquote>

<br>
Add LAND_BITS define to landscape mono halftoning code.
<br>

<br>
The monochrome halftone thresholding code relies on collating incoming
<br>
scanline data into 'scancolumn' buffers. When we have 16 bytes in these
<br>
buffers, they halftoned and flushed through copy_mono.
<br>

<br>
copy_mono would prefer to work with longer than 16 byte runs, so we
<br>
remove the hardcoded 16s from throughout the code and replace it with
<br>
a #defined value. A side effect of this is that the code becomes
<br>
slightly clearer.
<br>

<br>
Sadly, it seems this doesn't give the expected speedups; testing here
<br>
indicates that both 32 and 128 run slower, possibly due to cache effects.
<br>

<br>
Nonetheless we commit the code in case inspiration strikes us later on.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gsiparam.h
<br>
gs/base/gxht_thresh.c
<br>
gs/base/gximono.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-10 19:24:55 +0100></a>
2011-05-10 19:24:55 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=21cfb2e3b6c0d15c84b748586c51969daae58345">21cfb2e3b6c0d15c84b748586c51969daae58345</a>
<blockquote>

<br>
LCMS performance tweak; ToFixedDomain/FromFixedDomain.
<br>

<br>
Make ToFixedDomain/FromFixedDomains #defines rather than inline functions.
<br>
MSVC doesn't inline them, and they are used in speed critical areas.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/lcms/include/lcms.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 18:53:00 +0100></a>
2011-05-02 18:53:00 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=eef6a4d712a79a5f8d5f48f43c2572d5f002fc38">eef6a4d712a79a5f8d5f48f43c2572d5f002fc38</a>
<blockquote>

<br>
Quiet valgrind warning, and remove misleading init.
<br>

<br>
Cherry picked from patt_trans_clist branch to fix bug 692138.
<br>

<br>
When run with valgrind on:
<br>

<br>
gs -sDEVICE=pbmraw -r300 -dMaxBitmap=100000000 -o out.pbm Bug690189c.pdf
<br>

<br>
Valgrind complains that params.GrayBackground is used without being
<br>
initialised. We fix this here by amending gs_trans_mask_params_init.
<br>

<br>
In so doing, we note that in zbegintransparencymaskgroup we were setting
<br>
params.ColorSpace, only to call gs_trans_mask_params_init and have it
<br>
overwrite it. To avoid confusion we therefore remove this needless init.
<br>

<br>
No cluster differences seen in testing.
<br>

<br>
gs/base/gstrans.c
<br>
gs/psi/ztrans.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-10 09:16:17 +0000></a>
2011-05-10 09:16:17 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1cf87e28636a4922505e9c486b59e64c857717f">b1cf87e28636a4922505e9c486b59e64c857717f</a>
<blockquote>

<br>
Optimisations for mem_mono_strip_copy_rop_dev.
<br>

<br>
Now that mem_mono_strip_copy_rop_dev is working reliably, cut out the
<br>
excess debugging code so we can see the wood for the trees.
<br>

<br>
To cope with situations where we get narrow texture tiles, reinstate the
<br>
old code (as rop_run relies on longer runs to get traction). Add new cases
<br>
for no-textures to avoid nested loops etc.
<br>

<br>
This all seems to help with the performance of cicero_call.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevm1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-10 08:39:19 +0000></a>
2011-05-10 08:39:19 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2429ef51f12477d083bfcd3f15f97f90bb653b52">2429ef51f12477d083bfcd3f15f97f90bb653b52</a>
<blockquote>

<br>
Optimisations to gximono.c; special case the spp_out == 1 case.
<br>

<br>
Simple optimisations to the hotspots in image_render_mono_ht.
<br>

<br>
No real differences seen in cluster testing.
<br>

<br>
gs/base/gximono.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-09 23:46:09 +0000></a>
2011-05-09 23:46:09 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bf8d753f7346c0c97bd4109f0684993ab0a46041">bf8d753f7346c0c97bd4109f0684993ab0a46041</a>
<blockquote>

<br>
New gxdda.h formulation.
<br>

<br>
Rejig the gxdda macros slightly. We store more 'natural' values internally
<br>
and get code that optimises slightly better.
<br>

<br>
No differences expected in cluster testing (1 SEGV shown in my testing, but
<br>
I think that's random).
<br>

<br>
gs/base/gxdda.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/sidscale.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-10 00:21:21 -0400></a>
2011-05-10 00:21:21 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f5928344123e31229d31eb81e3f09b528170e38">0f5928344123e31229d31eb81e3f09b528170e38</a>
<blockquote>

<br>
Execute linkdest procedure in a stopped context to trap errors caused
<br>
by out-of-range link destinations that can occur in an invalid files or
<br>
during processing of a page range. Bug 692200.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-09 14:47:48 -0600></a>
2011-05-09 14:47:48 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=df4e669177f7757a5c054084f4990599bef5c355">df4e669177f7757a5c054084f4990599bef5c355</a>
<blockquote>

<br>
Remove unused file should have been committed with e55d362f.
<br>

<br>
gs/base/gsnorop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-09 13:16:31 -0600></a>
2011-05-09 13:16:31 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e55d362f3370b4bff0d72dc58c4b7a08b0dba71a">e55d362f3370b4bff0d72dc58c4b7a08b0dba71a</a>
<blockquote>

<br>
Incorporate raster operation library into the core graphics library.
<br>

<br>
We were going to fold the roblib in for simplicity, more recently
<br>
the graphics library code has been refactored such that the raster op
<br>
library is always required.  For example operations previously done in
<br>
the copy_mono code are now done with the raster op code.
<br>

<br>
CLUSTER_UNTESTED
<br>

<br>
gs/base/Makefile.in
<br>
gs/base/lib.mak
<br>
gs/base/msvclib.mak
<br>
gs/base/ugcclib.mak
<br>
language_switch/pspcl6_gcc.mak
<br>
language_switch/pspcl6_msvc.mak
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-05 16:16:22 +0100></a>
2011-05-05 16:16:22 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=60d4b088c6d314079643a92a3c4e983b116600a9">60d4b088c6d314079643a92a3c4e983b116600a9</a>
<blockquote>

<br>
Use defined default page size for nullpage device.
<br>

<br>
    The nullpage device previously used a 1&quot;x1&quot; default page size, this changes it
<br>
to use the same default setting as other page devices (this can be Letter or
<br>
A4, set in a makefile).
<br>

<br>
Also, add some lower bounds checking to gslp.ps so that it will error out if
<br>
the page size is too small to hold at least one line of text.
<br>

<br>
No cluster difference expected.
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/lib/gslp.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-08 11:26:15 -0700></a>
2011-05-08 11:26:15 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c677c48f278aba56d45bf2601ed5d152287540f1">c677c48f278aba56d45bf2601ed5d152287540f1</a>
<blockquote>

<br>
Fix for compiler warning
<br>

<br>
gs/base/gsdevice.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-07 23:21:38 -0700></a>
2011-05-07 23:21:38 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b1d311f06250a07d4c360e67369980d199722694">b1d311f06250a07d4c360e67369980d199722694</a>
<blockquote>

<br>
Significant change in how the device profile is handled in ghostscript.  This
<br>
change adds in a new device procedure called get_profile, which is going to
<br>
typically be set to gx_forward_get_profile or gx_default_get_profile.  Most
<br>
internal devices like the pattern accumulator, the clip device, memory devices,
<br>
will use the gx_forward_get_profile procedure.  In this way, the profile is
<br>
typically only maintained by the the target device.  The gdevp14 device is the significant internal device that takes special handling due to the way that it
<br>
can change its ICC profile based upon the current transparency group color space.  The get_profile procedure also passes along information about the object
<br>
type so that we will be able to easily add in the device dependent color
<br>
management.  The rendering intent, which can also be object dependent is also returned by the call.  This change has been cluster tested and showed no differences.
<br>

<br>
gs/base/gdevbit.c
<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevprn.c
<br>
gs/base/gdevrops.c
<br>
gs/base/gscms.h
<br>
gs/base/gscsepr.c
<br>
gs/base/gsdevice.c
<br>
gs/base/gsequivc.c
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gstrans.c
<br>
gs/base/gxccman.c
<br>
gs/base/gxclip.c
<br>
gs/base/gxclipm.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxcmap.h
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevice.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximag3x.c
<br>
gs/base/gximono.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxpcmap.c
<br>
gs/contrib/opvp/gdevopvp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 08:57:07 -0400></a>
2011-05-06 08:57:07 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a065765cd3529d17ba687954d8f4deacd8319247">a065765cd3529d17ba687954d8f4deacd8319247</a>
<blockquote>

<br>
Add a missing check of the return value from runarg(). Bug 692189.
<br>

<br>
gs/psi/imainarg.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-06 01:13:51 -0400></a>
2011-05-06 01:13:51 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2822d8a9f4186aa14f3913258841b74ff87309cf">2822d8a9f4186aa14f3913258841b74ff87309cf</a>
<blockquote>

<br>
Check the type of /File and /Length attributes during XForm identification
<br>
to avoud confusion with appearance subdictionary, which can include any
<br>
attributes (including /File or /Length) pointing to a dictionary. Bug 692192.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-04 15:38:22 +0000></a>
2011-05-04 15:38:22 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2756e4d6160f73af7bf5ed913af207914aeee588">2756e4d6160f73af7bf5ed913af207914aeee588</a>
<blockquote>

<br>
Invert bmpcmps reading of cups files.
<br>

<br>
I had black <-> white. Easy fix.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-04 15:08:36 +0100></a>
2011-05-04 15:08:36 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e97bf09450c5a08b591e0fca4ef59a21fb78b6ef">e97bf09450c5a08b591e0fca4ef59a21fb78b6ef</a>
<blockquote>

<br>
Fix bmpcmp to read cups colorspace=0 files too.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-04 00:45:28 -0400></a>
2011-05-04 00:45:28 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2f0b609805f1abf42b4b10dd721d9fef3001a847">2f0b609805f1abf42b4b10dd721d9fef3001a847</a>
<blockquote>

<br>
Accept and skip any number of whitespace characters (including
<br>
just spaces) after the entry count in the xref table. Remove /lineeq
<br>
and /linene procedures that are no longer used. Bug 692177.
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-03 08:58:18 -0600></a>
2011-05-03 08:58:18 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=af70515f6dcd1ffae90250697325fee224182e17">af70515f6dcd1ffae90250697325fee224182e17</a>
<blockquote>

<br>
Retain or bias the reference count of the rop texture device.
<br>

<br>
The image code was using the rop texture device without any reference
<br>
counting, explicitly freeing the device when it was done.  That was
<br>
fine if the device was the only device in the chain, however, linking
<br>
in other devices could lead indirectly to unintended freeing of the
<br>
rop device.  A crash was seen in the the XL test file C705.BIN but
<br>
only with halftoning at particular resolutions like 72 dpi.  We did
<br>
not study why the crash was limited to particular resolutions and
<br>
devices.
<br>

<br>
gs/base/gxipixel.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-03 17:45:45 +0100></a>
2011-05-03 17:45:45 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=afcbace446526e29bae11ce53bac5769a409e56f">afcbace446526e29bae11ce53bac5769a409e56f</a>
<blockquote>

<br>
Add gx_device_dump debugging function.
<br>

<br>
In DEBUG builds gx_device_dump(gx_device *dev, char *text); prints a
<br>
recursive listing of devices, their refcounts and names, and targets.
<br>

<br>
If anyone spots a forwarding device this doesn't work with, please let me
<br>
know.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevsop.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-03 16:39:13 +0000></a>
2011-05-03 16:39:13 +0000</strong>
<br>Robin Watts &lt;robin@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6d5e2bde4fe7a42bdd631fb0756f4fafc460ec41">6d5e2bde4fe7a42bdd631fb0756f4fafc460ec41</a>
<blockquote>

<br>
Fix copy_plane; was always copying into plane 0.
<br>

<br>
When writing copy_plane, I had neglected to offset into the data
<br>
according to the plane required.
<br>

<br>
CLUSTER_UNTESTED.
<br>

<br>
gs/base/gdevmpla.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 14:51:26 +0100></a>
2011-05-02 14:51:26 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a78476dd0be85f69885f2614be5ab614b03c9168">a78476dd0be85f69885f2614be5ab614b03c9168</a>
<blockquote>

<br>
Add support for cups (1bpp) files to bmpcmp.
<br>

<br>
gs/toolbin/bmpcmp.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 20:41:12 +0100></a>
2011-05-02 20:41:12 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cc3562ce331bc45a89cebd49c91e10149b5a90b2">cc3562ce331bc45a89cebd49c91e10149b5a90b2</a>
<blockquote>

<br>
Solve windows debug build crash on exit with cups device.
<br>

<br>
It seems that the cups device takes it upon itself to close the output file
<br>
rather than leaving it for the ghostscript core to close as every other
<br>
device does. This upsets the windows DLL file handling.
<br>

<br>
The solution is simply to remove the lines that close the file. I've
<br>
checked both with Till and Ken, and they concur. Thanks.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/cups/gdevcups.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-05-02 14:32:18 +0100></a>
2011-05-02 14:32:18 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e784a5443d0bee380d1ad32055ad3075e3aa0995">e784a5443d0bee380d1ad32055ad3075e3aa0995</a>
<blockquote>

<br>
Change error return to remove confusion over meaning.
<br>

<br>
When we encounter a font whose charstring has been replaced with a PS
<br>
procedure, we were returning FT_Err_Invalid_File_Format, and using that
<br>
as a hint we should try to execute it as a PS procedure. This
<br>
turns out to be problematic as it is also the error return generated by
<br>
Freetype for an invalid charstring. In the case of an invalid charstring
<br>
we should fall back to the notdef, not attempt to execute the object as
<br>
Postscript.
<br>

<br>
So, change the error return value that *we* generate, and subsequently
<br>
check for, to FT_Err_Unknown_File_Format, which FT should never,
<br>
normally, generate during glyph interpretation. This means, in this
<br>
case, we correctly identify a failed attempt to interpret a charstring,
<br>
and use the notdef fallback - instead of, eventually, throwing an
<br>
error.
<br>

<br>
Bug 692176.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/psi/fapi_ft.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-30 19:01:53 +0100></a>
2011-04-30 19:01:53 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5091054103f3b07bbae8ab2fc75e6c6cc3fd7a86">5091054103f3b07bbae8ab2fc75e6c6cc3fd7a86</a>
<blockquote>

<br>
Remove unused variable.
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-30 18:11:47 +0100></a>
2011-04-30 18:11:47 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dcae57315a683272c799545783694c43545b6fe0">dcae57315a683272c799545783694c43545b6fe0</a>
<blockquote>

<br>
Fix PNG device error when no downscale specified.
<br>

<br>
When I introduced the downscaling to selected png devices, I neglected to
<br>
set a sensible default value for downscale factor. This means that if you
<br>
attempt to set any device parameters, without specifying -dDownScaleFactor
<br>
then you get a rangecheck error. This commit fixes that.
<br>

<br>
No cluster changes expected.
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-30 08:38:31 -0400></a>
2011-04-30 08:38:31 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c98ade33d2b8fbc0ca6579c6d9e0ceb425374b0c">c98ade33d2b8fbc0ca6579c6d9e0ceb425374b0c</a>
<blockquote>

<br>
Normalize pattern /BBox in PDF interpreter before passing it to PS
<br>
to avoid a /rangecheck error. Bug 692174.
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-27 22:27:39 -0700></a>
2011-04-27 22:27:39 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b128a1424550b3462348bd40ecd768356cdb08ae">b128a1424550b3462348bd40ecd768356cdb08ae</a>
<blockquote>

<br>
Fix for reference counting issue of the compositor device at
<br>
the end of the clist playback. In most cases, the compositor rc
<br>
should be 1 at this point and so the device is closed and then
<br>
freed.  The case, when it is not 1 is when we have a pattern
<br>
that has a transparency and is stored in a clist.  In this case
<br>
the target for the pattern clist device is the main pdf14 device and
<br>
we increment the rc during this assignment.  So, when the
<br>
playback completes, the rc of the compositor is 2.  We do not
<br>
want to close and free the compositor, since it is part of the
<br>
main clist that we have going on.  Instead we only want to
<br>
decrement the rc.  The test file pattrans_big.pdf is now
<br>
handled correctly but has a rendering/tiling issue it appears.
<br>

<br>
This commit (from the patt_trans_clist_branch) has been cherry-picked
<br>
to the trunk to solve the SEGV in bug #692160. This leaves pdf14
<br>
compositors leaking though.
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-28 20:23:29 +0100></a>
2011-04-28 20:23:29 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1553ea878b414b4ac389f7cec4c2076bc52be966">1553ea878b414b4ac389f7cec4c2076bc52be966</a>
<blockquote>

<br>
Stop compiler turning for loop into memset in halftoning code.
<br>

<br>
The msvc compiler cleverly spots that a for loop can be turned
<br>
into a memset. Unfortunately it can't know that the values for
<br>
which the loop is called are normally so small that the calling
<br>
of the function costs more than simply doing the stores.
<br>

<br>
The fix is to cast the pointer to which we are storing to be
<br>
volatile. This saves a significant chunk of runtime for:
<br>

<br>
pcl6.exe -sDEVICE=bit -r600 -o null: -dLeadingEdge=3
<br>
cicero_call_CRF03-all-in_adobe-8_358p_xNuv288.xl
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/gxht_thresh.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-28 17:19:14 +0100></a>
2011-04-28 17:19:14 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=dd0ead1acfd2cf2fea4e417afdd4b52b06d8c3ad">dd0ead1acfd2cf2fea4e417afdd4b52b06d8c3ad</a>
<blockquote>

<br>
Ensure optimization flags get propogated for lcms
<br>

<br>
An inconcistency between definitions in the Unix and Windows builds meant
<br>
that on Windows several compiler flags (including that for optimization)
<br>
was not being used when buliding the lcms source files. The confusion
<br>
stems from Ghostscript requiring /Za to compile, and lcms failing to
<br>
compile with /Za.
<br>

<br>
Bug 692173.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/msvccmd.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-28 16:20:38 +0100></a>
2011-04-28 16:20:38 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=98a891175a74e4fdbdd2b5dc10a7fa60b9f75e16">98a891175a74e4fdbdd2b5dc10a7fa60b9f75e16</a>
<blockquote>

<br>
Add special case runrops for rops 0xF0 and CC (copy S and copy T).
<br>

<br>
This is in response to Norberts complaints about the speed of 9.02 with
<br>
cicero_call_CRF03-all-in_adobe-8_358p_xNuv288.xl and others.
<br>

<br>
gs/base/gsroprun.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-28 09:01:05 +0100></a>
2011-04-28 09:01:05 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=26e55117205eaf76dfa6011c29e287f84ec99799">26e55117205eaf76dfa6011c29e287f84ec99799</a>
<blockquote>

<br>
Change to include psi/ierrors.h.
<br>

<br>
psitop.c previously included the deprecated header file base/errors.h
<br>
which has now been removed. psi/ierrors.h is the correct header to
<br>
include.
<br>

<br>
No cluster differences expected.
<br>

<br>
psi/psitop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-28 08:10:39 +0100></a>
2011-04-28 08:10:39 +0100</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7132af8bb76824feb241374cf152349995b6cc10">7132af8bb76824feb241374cf152349995b6cc10</a>
<blockquote>

<br>
Remove the deprecated errors.h file.
<br>

<br>
Related to Bug 692151 in that it rendered the bug invalid.
<br>

<br>
No cluster differences expected.
<br>

<br>
gs/base/errors.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-25 18:58:52 -0600></a>
2011-04-25 18:58:52 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0361e41b57f8f4d798eb42e6320e6e96c355169d">0361e41b57f8f4d798eb42e6320e6e96c355169d</a>
<blockquote>

<br>
PJL filesystem commands can be made static.
<br>

<br>
Warning cleanup - make local functions static.
<br>

<br>
    Use %s if the argument is not literal to address the warning &quot;format
<br>
    not a string literal and no format arguments&quot;.
<br>

<br>
Presumably a format specifier could appear in the character array
<br>
resulting in an argument mismatch.
<br>

<br>
pl/pjparse.c
<br>
pl/pjparsei.c
<br>
pl/plmain.c
<br>
pxl/pxtop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-25 17:53:50 -0600></a>
2011-04-25 17:53:50 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=732dc98f92f2132f21811cf8b2612c1091e65050">732dc98f92f2132f21811cf8b2612c1091e65050</a>
<blockquote>

<br>
Partially refactor image api so it can be shared between pcl and pxl,
<br>
also to move away from using the obsolete image api.
<br>

<br>
pl/pldraw.c
<br>
pl/pldraw.h
<br>
pxl/pximage.c
<br>
pxl/pxink.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 19:20:25 +0100></a>
2011-04-26 19:20:25 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=262c866a71d08c1709484d95ffb3639f53156078">262c866a71d08c1709484d95ffb3639f53156078</a>
<blockquote>

<br>
Fix for bug 692081. Antialiasing patterns results in white holes.
<br>

<br>
gx_default_copy_alpha simulates alpha by weighted average of RGB values.
<br>
When the alpha value is zero, the current implementation reads the current
<br>
background value, and just writes it back. This has the effect of making
<br>
any device that watches what devices get written to think that that pixel
<br>
is solid. (One such device is the pattern tile device where it collects what
<br>
pixels have been marked, and what haven't).
<br>

<br>
The CORRECT way to do this is to stop the line accumulation at that point,
<br>
flush everything to there, then start again a pixel later.
<br>

<br>
Doing this solves the bug, and causes no cluster changes.
<br>

<br>
gs/base/gdevdbit.c
<br>
gs/base/gxcindex.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 12:37:14 +0100></a>
2011-04-26 12:37:14 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=11b5fb512393a6e9d9bdf6c076dc388ebd8c7c3f">11b5fb512393a6e9d9bdf6c076dc388ebd8c7c3f</a>
<blockquote>

<br>
Fix warnings (unused variables and missing cases in switches).
<br>

<br>
gs/base/gdevddrw.c
<br>
gs/base/gstrans.c
<br>
gs/base/gxblend1.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxstroke.c
<br>
gs/psi/zicc.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 10:34:46 +0100></a>
2011-04-26 10:34:46 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a349c53ca01df5e425f25d1fa14d38c43d95b60c">a349c53ca01df5e425f25d1fa14d38c43d95b60c</a>
<blockquote>

<br>
Removed unused variables to quiet warnings.
<br>

<br>
gs/base/gdevtifs.c
<br>
gs/base/gxdownscale.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-25 22:56:41 -0700></a>
2011-04-25 22:56:41 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=79e14a10307ba37bcf00af1b05c1c52875d9774a">79e14a10307ba37bcf00af1b05c1c52875d9774a</a>
<blockquote>

<br>
Fix for multithreaded rendering crash that can occur due to race conditions between threads with the increment and decrement of the icc link cache object during the rendering of the bands.  Fix involved place a lock around the operations.  Thanks to Ray for helping with this.
<br>

<br>
gs/base/gxclrast.c
<br>
gs/base/gxclthrd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-25 17:37:09 -0700></a>
2011-04-25 17:37:09 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=03cb94a9da2cddd2b7055e8565dd797c67bf56f4">03cb94a9da2cddd2b7055e8565dd797c67bf56f4</a>
<blockquote>

<br>
Fix for memory leak in gdevp14 device.  This involved making sure the overprint compositor was initialized retained with a ref count of 1 like the pdf14 device.
<br>

<br>
gs/base/gsovrc.c
<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-26 00:53:07 +0100></a>
2011-04-26 00:53:07 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=16789dc892db636719383c2542aa9cec04092e4d">16789dc892db636719383c2542aa9cec04092e4d</a>
<blockquote>

<br>
Fix memory overwrite in png devices.
<br>

<br>
In my fiddling with the png devices the other day to add downscaling, I
<br>
omitted to extend the size of two of them (png16m and png48). This meant
<br>
that png16m was overwriting 8 bytes of memory after its device structure.
<br>

<br>
Fix this to solve a SEGV when DownScaleFactor is used.
<br>

<br>
gs/base/gdevpng.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-24 20:35:45 -0400></a>
2011-04-24 20:35:45 -0400</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f5a6de969ae67a2318115c5e8e6e2b3b06fc58f3">f5a6de969ae67a2318115c5e8e6e2b3b06fc58f3</a>
<blockquote>

<br>
Split large beginbfrange..endbfrange blocks in ToUnicode CMaps into
<br>
    speed up operand stack manipulation, esp. &quot;counttomark -3 roll&quot;. Bug 691908.
<br>

<br>
gs/Resource/Init/pdf_font.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-25 09:31:32 -0600></a>
2011-04-25 09:31:32 -0600</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3b66709cafd05910f2442250e12d1918f239c34b">3b66709cafd05910f2442250e12d1918f239c34b</a>
<blockquote>

<br>
The new custom paper size implementation introduced a bug in
<br>
passthrough mode requiring additional state setup when we switch from
<br>
PXL to PCL state.
<br>

<br>
pcl/pcpage.c
<br>
pxl/pxpthr.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-22 15:40:50 -0600></a>
2011-04-22 15:40:50 -0600</strong>
<br>henrys &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=460ff495a31f8a87d0ed677eed2660fca79369fc">460ff495a31f8a87d0ed677eed2660fca79369fc</a>
<blockquote>

<br>
Revision 43a5362 modified a global variable.  We address that by
<br>
making the page table a dynamic member of the pcl state.
<br>

<br>
pcl/pcommand.c
<br>
pcl/pcpage.c
<br>
pcl/pcstate.h
<br>
pcl/pcxfmst.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 23:25:50 -0600></a>
2011-04-20 23:25:50 -0600</strong>
<br>henrys &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=e5a9f968265abc47a85811e620c79bedf87b1da0">e5a9f968265abc47a85811e620c79bedf87b1da0</a>
<blockquote>

<br>
Josef Hinteregger's patch to implement custom paper sizes in PJL and PCL,
<br>
bug #691587.
<br>

<br>
pcl/pcpage.c
<br>
pl/pjparse.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 23:20:34 -0700></a>
2011-04-20 23:20:34 -0700</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4ddefa258ee17e359429c901ef8a0a8f3b234083">4ddefa258ee17e359429c901ef8a0a8f3b234083</a>
<blockquote>

<br>
Fix to stop reset of ICC profile directory to the default directory (which is the romfs) when there is a VMreclaim.  Previously if the VMreclaim happens while we are still in the process of initializing the icc manager this can cause a crash.  This was the source of the crash with the tiffsep device when COMPILE_INITS=0.
<br>

<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-22 18:08:10 +0100></a>
2011-04-22 18:08:10 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b3908faa01c7ef6197374a27b1a5861f0a383fe">1b3908faa01c7ef6197374a27b1a5861f0a383fe</a>
<blockquote>

<br>
Extend downscaling to png devices too (from tiffscaled).
<br>

<br>
Extract the code to do downscaling/min feature size from tiffscaled{,8,24}
<br>
into a new gx_downscaler class. Make tiffscaled{,8,24} call this new class
<br>
with no change in functionality.
<br>

<br>
Make png devices call this new code. Only png16m and pnggray are actually
<br>
affected by downscaling though. Add a new pngmonod device to do grayscale
<br>
rendering internally and to downscale/min_feature_size/error diffuse to
<br>
monochrome.
<br>

<br>
gs/base/devs.mak
<br>
gs/base/gdevpng.c
<br>
gs/base/gdevprn.c
<br>
gs/base/gdevtifs.c
<br>
gs/base/gxdownscale.c
<br>
gs/base/gxdownscale.h
<br>
gs/base/lib.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/macosx.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
gs/doc/Devices.htm
<br>
gs/ghostscript.vcproj
<br>
gs/psi/msvc.mak
<br>
gs/psi/os2.mak
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 10:40:58 -0700></a>
2011-04-20 10:40:58 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8a203b909d59f8aa649492c23fa570afe3a61565">8a203b909d59f8aa649492c23fa570afe3a61565</a>
<blockquote>

<br>
Revert of a4c4877b35b6782ef64b382713eaa6bcd4eca8d6 since we decided to rename the directories back to their before svn => git transition names.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 09:17:25 -0700></a>
2011-04-20 09:17:25 -0700</strong>
<br>mvrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=20b6c78ff6fb123bc11a068ca329a96d2452b529">20b6c78ff6fb123bc11a068ca329a96d2452b529</a>
<blockquote>

<br>
Fix for issue when creating ICC profiles from DEF/G structures.  As a few progressions and fixes bug 692156 and likely bug 691977
<br>

<br>
gs/base/gsicc_create.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 21:23:01 -0700></a>
2011-04-19 21:23:01 -0700</strong>
<br>Marcos H. Woehrmann &lt;marcos.woehrmann@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a4c4877b35b6782ef64b382713eaa6bcd4eca8d6">a4c4877b35b6782ef64b382713eaa6bcd4eca8d6</a>
<blockquote>

<br>
Modified clusterpush.pl to account for the new directory structure introduced with the svn => git transition.
<br>

<br>
gs/toolbin/localcluster/clusterpush.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 14:56:12 +0100></a>
2011-04-20 14:56:12 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0f57eacebce435c7da518b2d17638036a3ae5a40">0f57eacebce435c7da518b2d17638036a3ae5a40</a>
<blockquote>

<br>
Add bin directories to .gitignore file.
<br>

<br>
Also add some comments with useful lines that people might want to copy
<br>
to their local .git/info/exclude file.
<br>

<br>
.gitignore
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 14:46:26 +0100></a>
2011-04-20 14:46:26 +0100</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c10532c1b2e63dd6d6d95f1a0b578eb865ff4d9a">c10532c1b2e63dd6d6d95f1a0b578eb865ff4d9a</a>
<blockquote>

<br>
New tiffscaled8 and tiffscaled24 devices.
<br>

<br>
Add new tiffscaled8 and tiffscaled24 devices, copied and modified from
<br>
tiffscaled. These output greyscale and 24bit rgb instead of tiffscaleds
<br>
mono output. MinFeatureSize is ignored for these devices as it's meaningless
<br>
for contone output.
<br>

<br>
Error Diffusion is still done, but is almost certainly a waste of time - it
<br>
was just simpler to make the code work this way. If performance is an issue,
<br>
we can remove that later.
<br>

<br>
gs/base/configure.ac
<br>
gs/base/devs.mak
<br>
gs/base/gdevtifs.c
<br>
gs/base/gdevtifs.h
<br>
gs/base/gdevtsep.c
<br>
gs/base/macos-mcp.mak
<br>
gs/base/openvms.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
gs/doc/Devices.htm
<br>
gs/psi/msvc.mak
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-20 00:00:45 +0200></a>
2011-04-20 00:00:45 +0200</strong>
<br>Tor Andersson <tor.andersson@artifex.com><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f6e8c8d24c4a2f66b45ce04ab544aaf8b305a0d1">f6e8c8d24c4a2f66b45ce04ab544aaf8b305a0d1</a>
<blockquote>

<br>
Change GS_PRODUCTFAMILY to say GIT instead of SVN PRERELEASE.
<br>

<br>
gs/base/gscdef.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 23:58:23 +0200></a>
2011-04-19 23:58:23 +0200</strong>
<br>Tor Andersson <tor.andersson@artifex.com><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c91007a224a533fb7582646d98b6bf1721f4f297">c91007a224a533fb7582646d98b6bf1721f4f297</a>
<blockquote>

<br>
Clean up file permissions.
<br>

<br>
COPYING.AFPL
<br>
gs/examples/golfer.eps
<br>
gs/examples/tiger.eps
<br>
gs/ghostscript-ufst.vcproj
<br>
gs/ghostscript.vcproj
<br>
gs/psi/winint.mak
<br>
tools/Acrobat2Tiff/Acrobat2Tiff.sln
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff.vbproj
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Application.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Application.myapp
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/AssemblyInfo.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Resources.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Resources.resx
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Settings.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Settings.settings
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/bin/Release/Acrobat2Tiff.xml
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/bin/Release/Interop.Acrobat.dll
<br>
tools/cmpi/cmpi.bkl
<br>
tools/cmpi/cmpi.cpp
<br>
tools/cmpi/cmpi.dsp
<br>
tools/cmpi/cmpi.dsw
<br>
tools/cmpi/cmpi.pro
<br>
tools/cmpi/cmpi.rc
<br>
tools/cmpi/cmpi.sln
<br>
tools/cmpi/cmpi.suo
<br>
tools/cmpi/cmpi.vcp
<br>
tools/cmpi/cmpi.vcproj
<br>
tools/cmpi/cmpi.vcw
<br>
tools/cmpi/descrip.mms
<br>
tools/cmpi/makefile.bcc
<br>
tools/cmpi/makefile.dmc
<br>
tools/cmpi/makefile.dms
<br>
tools/cmpi/makefile.dos
<br>
tools/cmpi/makefile.gcc
<br>
tools/cmpi/makefile.sc
<br>
tools/cmpi/makefile.unx
<br>
tools/cmpi/makefile.va
<br>
tools/cmpi/makefile.vc
<br>
tools/cmpi/makefile.wat
<br>
tools/tiger.svg
<br>
tools/xps2tiff/README
<br>
tools/xps2tiff/xps2tiff.sln
<br>
tools/xps2tiff/xps2tiff/AssemblyInfo.cpp
<br>
tools/xps2tiff/xps2tiff/stdafx.cpp
<br>
tools/xps2tiff/xps2tiff/xps2tiff.cpp
<br>
tools/xps2tiff/xps2tiff/xps2tiff.vcproj
<br>
win32/GhostPDL.sln
<br>
win32/ReadMe.txt
<br>
win32/language_switch.vcproj
<br>
win32/pcl.vcproj
<br>
win32/svg.vcproj
<br>
win32/xps.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 23:49:56 +0200></a>
2011-04-19 23:49:56 +0200</strong>
<br>Tor Andersson <tor.andersson@artifex.com><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=781969994b5381ba4bed03beef217f9bde6e7c58">781969994b5381ba4bed03beef217f9bde6e7c58</a>
<blockquote>

<br>
Indent with spaces and strip trailing whitespace.
<br>

<br>
gs/Resource/Init/gs_agl.ps
<br>
gs/Resource/Init/gs_btokn.ps
<br>
gs/Resource/Init/gs_cet.ps
<br>
gs/Resource/Init/gs_cff.ps
<br>
gs/Resource/Init/gs_cidcm.ps
<br>
gs/Resource/Init/gs_ciddc.ps
<br>
gs/Resource/Init/gs_cidfm.ps
<br>
gs/Resource/Init/gs_cidfn.ps
<br>
gs/Resource/Init/gs_cidtt.ps
<br>
gs/Resource/Init/gs_cmap.ps
<br>
gs/Resource/Init/gs_cspace.ps
<br>
gs/Resource/Init/gs_css_e.ps
<br>
gs/Resource/Init/gs_dbt_e.ps
<br>
gs/Resource/Init/gs_diskf.ps
<br>
gs/Resource/Init/gs_diskn.ps
<br>
gs/Resource/Init/gs_dpnxt.ps
<br>
gs/Resource/Init/gs_dps.ps
<br>
gs/Resource/Init/gs_dps1.ps
<br>
gs/Resource/Init/gs_dps2.ps
<br>
gs/Resource/Init/gs_dscp.ps
<br>
gs/Resource/Init/gs_epsf.ps
<br>
gs/Resource/Init/gs_fapi.ps
<br>
gs/Resource/Init/gs_fntem.ps
<br>
gs/Resource/Init/gs_fonts.ps
<br>
gs/Resource/Init/gs_frsd.ps
<br>
gs/Resource/Init/gs_icc.ps
<br>
gs/Resource/Init/gs_il1_e.ps
<br>
gs/Resource/Init/gs_img.ps
<br>
gs/Resource/Init/gs_init.ps
<br>
gs/Resource/Init/gs_l2img.ps
<br>
gs/Resource/Init/gs_lev2.ps
<br>
gs/Resource/Init/gs_ll3.ps
<br>
gs/Resource/Init/gs_mex_e.ps
<br>
gs/Resource/Init/gs_mgl_e.ps
<br>
gs/Resource/Init/gs_mro_e.ps
<br>
gs/Resource/Init/gs_pdf_e.ps
<br>
gs/Resource/Init/gs_pdfwr.ps
<br>
gs/Resource/Init/gs_res.ps
<br>
gs/Resource/Init/gs_resmp.ps
<br>
gs/Resource/Init/gs_setpd.ps
<br>
gs/Resource/Init/gs_statd.ps
<br>
gs/Resource/Init/gs_std_e.ps
<br>
gs/Resource/Init/gs_sym_e.ps
<br>
gs/Resource/Init/gs_trap.ps
<br>
gs/Resource/Init/gs_ttf.ps
<br>
gs/Resource/Init/gs_typ32.ps
<br>
gs/Resource/Init/gs_typ42.ps
<br>
gs/Resource/Init/gs_type1.ps
<br>
gs/Resource/Init/gs_wan_e.ps
<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/Resource/Init/pdf_cslayer.ps
<br>
gs/Resource/Init/pdf_draw.ps
<br>
gs/Resource/Init/pdf_font.ps
<br>
gs/Resource/Init/pdf_main.ps
<br>
gs/Resource/Init/pdf_ops.ps
<br>
gs/Resource/Init/pdf_rbld.ps
<br>
gs/Resource/Init/pdf_sec.ps
<br>
gs/base/ConvertUTF.c
<br>
gs/base/ConvertUTF.h
<br>
gs/base/aes.c
<br>
gs/base/aes.h
<br>
gs/base/assert_.h
<br>
gs/base/ctype_.h
<br>
gs/base/dirent_.h
<br>
gs/base/dos_.h
<br>
gs/base/echogs.c
<br>
gs/base/errno_.h
<br>
gs/base/errors.h
<br>
gs/base/fcntl_.h
<br>
gs/base/gconf.c
<br>
gs/base/gconf.h
<br>
gs/base/gdebug.h
<br>
gs/base/gdev3852.c
<br>
gs/base/gdev3b1.c
<br>
gs/base/gdev4081.c
<br>
gs/base/gdev4693.c
<br>
gs/base/gdev8510.c
<br>
gs/base/gdev8bcm.c
<br>
gs/base/gdev8bcm.h
<br>
gs/base/gdevabuf.c
<br>
gs/base/gdevadmp.c
<br>
gs/base/gdevatx.c
<br>
gs/base/gdevbbox.c
<br>
gs/base/gdevbbox.h
<br>
gs/base/gdevbit.c
<br>
gs/base/gdevbj10.c
<br>
gs/base/gdevbjc.h
<br>
gs/base/gdevbjcl.c
<br>
gs/base/gdevbjcl.h
<br>
gs/base/gdevbmp.c
<br>
gs/base/gdevbmp.h
<br>
gs/base/gdevbmpa.c
<br>
gs/base/gdevbmpc.c
<br>
gs/base/gdevccr.c
<br>
gs/base/gdevcdj.c
<br>
gs/base/gdevcfax.c
<br>
gs/base/gdevcgm.c
<br>
gs/base/gdevcgml.c
<br>
gs/base/gdevcgml.h
<br>
gs/base/gdevcgmx.h
<br>
gs/base/gdevcif.c
<br>
gs/base/gdevclj.c
<br>
gs/base/gdevcljc.c
<br>
gs/base/gdevcp50.c
<br>
gs/base/gdevcslw.c
<br>
gs/base/gdevdbit.c
<br>
gs/base/gdevdcrd.c
<br>
gs/base/gdevdcrd.h
<br>
gs/base/gdevddrw.c
<br>
gs/base/gdevddrw.h
<br>
gs/base/gdevdevn.c
<br>
gs/base/gdevdevn.h
<br>
gs/base/gdevdfax.c
<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevdgbr.c
<br>
gs/base/gdevdjet.c
<br>
gs/base/gdevdjtc.c
<br>
gs/base/gdevdljm.c
<br>
gs/base/gdevdljm.h
<br>
gs/base/gdevdm24.c
<br>
gs/base/gdevdsha.c
<br>
gs/base/gdevdsp.c
<br>
gs/base/gdevdsp.h
<br>
gs/base/gdevdsp2.h
<br>
gs/base/gdevemap.c
<br>
gs/base/gdevepsc.c
<br>
gs/base/gdevepsn.c
<br>
gs/base/gdevescp.c
<br>
gs/base/gdevevga.c
<br>
gs/base/gdevfax.c
<br>
gs/base/gdevfax.h
<br>
gs/base/gdevherc.c
<br>
gs/base/gdevhit.c
<br>
gs/base/gdevhl7x.c
<br>
gs/base/gdevifno.c
<br>
gs/base/gdevijs.c
<br>
gs/base/gdevimdi.c
<br>
gs/base/gdevimgn.c
<br>
gs/base/gdevjbig2.c
<br>
gs/base/gdevjpeg.c
<br>
gs/base/gdevjpx.c
<br>
gs/base/gdevl256.c
<br>
gs/base/gdevl31s.c
<br>
gs/base/gdevlbp8.c
<br>
gs/base/gdevlj56.c
<br>
gs/base/gdevlp8k.c
<br>
gs/base/gdevlxm.c
<br>
gs/base/gdevm1.c
<br>
gs/base/gdevm16.c
<br>
gs/base/gdevm2.c
<br>
gs/base/gdevm24.c
<br>
gs/base/gdevm32.c
<br>
gs/base/gdevm4.c
<br>
gs/base/gdevm40.c
<br>
gs/base/gdevm48.c
<br>
gs/base/gdevm56.c
<br>
gs/base/gdevm64.c
<br>
gs/base/gdevmac.c
<br>
gs/base/gdevmac.h
<br>
gs/base/gdevmacpictop.h
<br>
gs/base/gdevmacttf.h
<br>
gs/base/gdevmacxf.c
<br>
gs/base/gdevmeds.c
<br>
gs/base/gdevmeds.h
<br>
gs/base/gdevmem.c
<br>
gs/base/gdevmem.h
<br>
gs/base/gdevmgr.c
<br>
gs/base/gdevmgr.h
<br>
gs/base/gdevmiff.c
<br>
gs/base/gdevmpla.h
<br>
gs/base/gdevmr1.c
<br>
gs/base/gdevmr2n.c
<br>
gs/base/gdevmrop.h
<br>
gs/base/gdevmrun.c
<br>
gs/base/gdevmrun.h
<br>
gs/base/gdevmswn.c
<br>
gs/base/gdevmswn.h
<br>
gs/base/gdevmsxf.c
<br>
gs/base/gdevn533.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevo182.c
<br>
gs/base/gdevokii.c
<br>
gs/base/gdevos2p.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevp14.h
<br>
gs/base/gdevp2up.c
<br>
gs/base/gdevpbm.c
<br>
gs/base/gdevpccm.c
<br>
gs/base/gdevpccm.h
<br>
gs/base/gdevpcfb.c
<br>
gs/base/gdevpcfb.h
<br>
gs/base/gdevpcl.c
<br>
gs/base/gdevpcl.h
<br>
gs/base/gdevpcx.c
<br>
gs/base/gdevpdf.c
<br>
gs/base/gdevpdfb.c
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfc.c
<br>
gs/base/gdevpdfc.h
<br>
gs/base/gdevpdfd.c
<br>
gs/base/gdevpdfe.c
<br>
gs/base/gdevpdfg.c
<br>
gs/base/gdevpdfg.h
<br>
gs/base/gdevpdfi.c
<br>
gs/base/gdevpdfj.c
<br>
gs/base/gdevpdfk.c
<br>
gs/base/gdevpdfm.c
<br>
gs/base/gdevpdfo.c
<br>
gs/base/gdevpdfo.h
<br>
gs/base/gdevpdfp.c
<br>
gs/base/gdevpdfr.c
<br>
gs/base/gdevpdft.c
<br>
gs/base/gdevpdfu.c
<br>
gs/base/gdevpdfv.c
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevpdt.c
<br>
gs/base/gdevpdt.h
<br>
gs/base/gdevpdtb.c
<br>
gs/base/gdevpdtb.h
<br>
gs/base/gdevpdtc.c
<br>
gs/base/gdevpdtd.c
<br>
gs/base/gdevpdtd.h
<br>
gs/base/gdevpdte.c
<br>
gs/base/gdevpdtf.c
<br>
gs/base/gdevpdtf.h
<br>
gs/base/gdevpdti.c
<br>
gs/base/gdevpdti.h
<br>
gs/base/gdevpdts.c
<br>
gs/base/gdevpdts.h
<br>
gs/base/gdevpdtt.c
<br>
gs/base/gdevpdtt.h
<br>
gs/base/gdevpdtv.c
<br>
gs/base/gdevpdtv.h
<br>
gs/base/gdevpdtw.c
<br>
gs/base/gdevpdtw.h
<br>
gs/base/gdevpdtx.h
<br>
gs/base/gdevpe.c
<br>
gs/base/gdevperm.c
<br>
gs/base/gdevphex.c
<br>
gs/base/gdevpipe.c
<br>
gs/base/gdevpjet.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gdevplnx.c
<br>
gs/base/gdevplnx.h
<br>
gs/base/gdevpm.h
<br>
gs/base/gdevpng.c
<br>
gs/base/gdevppla.c
<br>
gs/base/gdevppla.h
<br>
gs/base/gdevprn.c
<br>
gs/base/gdevprn.h
<br>
gs/base/gdevprna.c
<br>
gs/base/gdevprna.h
<br>
gs/base/gdevps.c
<br>
gs/base/gdevpsd.c
<br>
gs/base/gdevpsdf.h
<br>
gs/base/gdevpsdi.c
<br>
gs/base/gdevpsdp.c
<br>
gs/base/gdevpsds.c
<br>
gs/base/gdevpsds.h
<br>
gs/base/gdevpsdu.c
<br>
gs/base/gdevpsf.h
<br>
gs/base/gdevpsf1.c
<br>
gs/base/gdevpsf2.c
<br>
gs/base/gdevpsfm.c
<br>
gs/base/gdevpsft.c
<br>
gs/base/gdevpsfu.c
<br>
gs/base/gdevpsfx.c
<br>
gs/base/gdevpsim.c
<br>
gs/base/gdevpsu.c
<br>
gs/base/gdevpsu.h
<br>
gs/base/gdevpx.c
<br>
gs/base/gdevpxen.h
<br>
gs/base/gdevpxop.h
<br>
gs/base/gdevpxut.c
<br>
gs/base/gdevpxut.h
<br>
gs/base/gdevrinkj.c
<br>
gs/base/gdevrops.c
<br>
gs/base/gdevs3ga.c
<br>
gs/base/gdevsco.c
<br>
gs/base/gdevsgi.c
<br>
gs/base/gdevsgi.h
<br>
gs/base/gdevsj48.c
<br>
gs/base/gdevsnfb.c
<br>
gs/base/gdevsppr.c
<br>
gs/base/gdevstc.c
<br>
gs/base/gdevstc.h
<br>
gs/base/gdevstc1.c
<br>
gs/base/gdevstc2.c
<br>
gs/base/gdevstc3.c
<br>
gs/base/gdevstc4.c
<br>
gs/base/gdevsun.c
<br>
gs/base/gdevsunr.c
<br>
gs/base/gdevsvg.c
<br>
gs/base/gdevsvga.c
<br>
gs/base/gdevsvga.h
<br>
gs/base/gdevtfax.c
<br>
gs/base/gdevtfax.h
<br>
gs/base/gdevtfnx.c
<br>
gs/base/gdevtifs.c
<br>
gs/base/gdevtifs.h
<br>
gs/base/gdevtknk.c
<br>
gs/base/gdevtrac.c
<br>
gs/base/gdevtsep.c
<br>
gs/base/gdevtxtw.c
<br>
gs/base/gdevupd.c
<br>
gs/base/gdevvec.c
<br>
gs/base/gdevvec.h
<br>
gs/base/gdevvglb.c
<br>
gs/base/gdevwddb.c
<br>
gs/base/gdevwdib.c
<br>
gs/base/gdevwpr2.c
<br>
gs/base/gdevwprn.c
<br>
gs/base/gdevwts.c
<br>
gs/base/gdevx.c
<br>
gs/base/gdevx.h
<br>
gs/base/gdevxalt.c
<br>
gs/base/gdevxcf.c
<br>
gs/base/gdevxcmp.c
<br>
gs/base/gdevxcmp.h
<br>
gs/base/gdevxini.c
<br>
gs/base/gdevxres.c
<br>
gs/base/gdevxxf.c
<br>
gs/base/genarch.c
<br>
gs/base/genconf.c
<br>
gs/base/gendev.c
<br>
gs/base/genht.c
<br>
gs/base/gp.h
<br>
gs/base/gp_dosfe.c
<br>
gs/base/gp_dosfs.c
<br>
gs/base/gp_dvx.c
<br>
gs/base/gp_getnv.c
<br>
gs/base/gp_mac.c
<br>
gs/base/gp_mac.h
<br>
gs/base/gp_macio.c
<br>
gs/base/gp_macpoll.c
<br>
gs/base/gp_mktmp.c
<br>
gs/base/gp_msdll.c
<br>
gs/base/gp_msdos.c
<br>
gs/base/gp_mshdl.c
<br>
gs/base/gp_mslib.c
<br>
gs/base/gp_mspol.c
<br>
gs/base/gp_msprn.c
<br>
gs/base/gp_mswin.c
<br>
gs/base/gp_mswin.h
<br>
gs/base/gp_nsync.c
<br>
gs/base/gp_ntfs.c
<br>
gs/base/gp_os2.c
<br>
gs/base/gp_os2.h
<br>
gs/base/gp_os2fs.c
<br>
gs/base/gp_os2pr.c
<br>
gs/base/gp_os9.c
<br>
gs/base/gp_paper.c
<br>
gs/base/gp_psync.c
<br>
gs/base/gp_stdia.c
<br>
gs/base/gp_stdin.c
<br>
gs/base/gp_strdl.c
<br>
gs/base/gp_sysv.c
<br>
gs/base/gp_unix.c
<br>
gs/base/gp_unix_cache.c
<br>
gs/base/gp_upapr.c
<br>
gs/base/gp_vms.c
<br>
gs/base/gp_wgetv.c
<br>
gs/base/gp_win32.c
<br>
gs/base/gp_wpapr.c
<br>
gs/base/gp_wsync.c
<br>
gs/base/gpcheck.h
<br>
gs/base/gpgetenv.h
<br>
gs/base/gpmisc.c
<br>
gs/base/gpmisc.h
<br>
gs/base/gs_agl.h
<br>
gs/base/gs_dll_call.h
<br>
gs/base/gs_mgl_e.h
<br>
gs/base/gs_mro_e.h
<br>
gs/base/gsalloc.c
<br>
gs/base/gsalloc.h
<br>
gs/base/gsalpha.c
<br>
gs/base/gsalpha.h
<br>
gs/base/gsalphac.c
<br>
gs/base/gsalphac.h
<br>
gs/base/gsargs.c
<br>
gs/base/gsargs.h
<br>
gs/base/gsbitcom.c
<br>
gs/base/gsbitmap.h
<br>
gs/base/gsbitops.c
<br>
gs/base/gsbittab.c
<br>
gs/base/gsbittab.h
<br>
gs/base/gsccode.h
<br>
gs/base/gsccolor.h
<br>
gs/base/gscdef.c
<br>
gs/base/gscdefs.h
<br>
gs/base/gscdevn.c
<br>
gs/base/gscdevn.h
<br>
gs/base/gscedata.c
<br>
gs/base/gscedata.h
<br>
gs/base/gscencs.c
<br>
gs/base/gscencs.h
<br>
gs/base/gschar.c
<br>
gs/base/gschar.h
<br>
gs/base/gschar0.c
<br>
gs/base/gscicach.c
<br>
gs/base/gscicach.h
<br>
gs/base/gscie.c
<br>
gs/base/gscie.h
<br>
gs/base/gsciemap.c
<br>
gs/base/gscindex.h
<br>
gs/base/gsclipsr.c
<br>
gs/base/gsclipsr.h
<br>
gs/base/gscms.h
<br>
gs/base/gscolor.c
<br>
gs/base/gscolor.h
<br>
gs/base/gscolor1.c
<br>
gs/base/gscolor1.h
<br>
gs/base/gscolor2.c
<br>
gs/base/gscolor2.h
<br>
gs/base/gscolor3.c
<br>
gs/base/gscolor3.h
<br>
gs/base/gscolorbuffer.c
<br>
gs/base/gscolorbuffer.h
<br>
gs/base/gscompt.h
<br>
gs/base/gscoord.c
<br>
gs/base/gscoord.h
<br>
gs/base/gscparam.c
<br>
gs/base/gscpixel.c
<br>
gs/base/gscpixel.h
<br>
gs/base/gscpm.h
<br>
gs/base/gscrd.c
<br>
gs/base/gscrd.h
<br>
gs/base/gscrdp.c
<br>
gs/base/gscrdp.h
<br>
gs/base/gscrypt1.c
<br>
gs/base/gscrypt1.h
<br>
gs/base/gscscie.c
<br>
gs/base/gscsel.h
<br>
gs/base/gscsepr.c
<br>
gs/base/gscsepr.h
<br>
gs/base/gscspace.c
<br>
gs/base/gscspace.h
<br>
gs/base/gscssub.c
<br>
gs/base/gscssub.h
<br>
gs/base/gsdcolor.h
<br>
gs/base/gsdevice.c
<br>
gs/base/gsdevice.h
<br>
gs/base/gsdevmem.c
<br>
gs/base/gsdfilt.c
<br>
gs/base/gsdfilt.h
<br>
gs/base/gsdll.h
<br>
gs/base/gsdllwin.h
<br>
gs/base/gsdparam.c
<br>
gs/base/gsdpnext.h
<br>
gs/base/gsdps.c
<br>
gs/base/gsdps.h
<br>
gs/base/gsdps1.c
<br>
gs/base/gsdsrc.c
<br>
gs/base/gsdsrc.h
<br>
gs/base/gsequivc.c
<br>
gs/base/gsequivc.h
<br>
gs/base/gserror.h
<br>
gs/base/gserrors.h
<br>
gs/base/gsexit.h
<br>
gs/base/gsfcid.c
<br>
gs/base/gsfcid2.c
<br>
gs/base/gsfcmap.c
<br>
gs/base/gsfcmap.h
<br>
gs/base/gsfcmap1.c
<br>
gs/base/gsflip.c
<br>
gs/base/gsflip.h
<br>
gs/base/gsfname.c
<br>
gs/base/gsfname.h
<br>
gs/base/gsfont.c
<br>
gs/base/gsfont.h
<br>
gs/base/gsfont0.c
<br>
gs/base/gsfont0c.c
<br>
gs/base/gsfunc.c
<br>
gs/base/gsfunc.h
<br>
gs/base/gsfunc0.c
<br>
gs/base/gsfunc0.h
<br>
gs/base/gsfunc3.c
<br>
gs/base/gsfunc3.h
<br>
gs/base/gsfunc4.c
<br>
gs/base/gsfunc4.h
<br>
gs/base/gsgc.h
<br>
gs/base/gsgcache.c
<br>
gs/base/gsgcache.h
<br>
gs/base/gsgdata.c
<br>
gs/base/gsgdata.h
<br>
gs/base/gshsb.c
<br>
gs/base/gshsb.h
<br>
gs/base/gsht.c
<br>
gs/base/gsht.h
<br>
gs/base/gsht1.c
<br>
gs/base/gsht1.h
<br>
gs/base/gshtscr.c
<br>
gs/base/gshtx.c
<br>
gs/base/gshtx.h
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc.h
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_cache.h
<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_create.c
<br>
gs/base/gsicc_create.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gsicc_manage.c
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gsicc_profilecache.c
<br>
gs/base/gsicc_profilecache.h
<br>
gs/base/gsimage.c
<br>
gs/base/gsimage.h
<br>
gs/base/gsimpath.c
<br>
gs/base/gsinit.c
<br>
gs/base/gsio.h
<br>
gs/base/gsiodev.c
<br>
gs/base/gsiodevs.c
<br>
gs/base/gsiodisk.c
<br>
gs/base/gsiomacres.c
<br>
gs/base/gsiorom.c
<br>
gs/base/gsiorom.h
<br>
gs/base/gsipar3x.h
<br>
gs/base/gsiparam.h
<br>
gs/base/gsiparm2.h
<br>
gs/base/gsiparm3.h
<br>
gs/base/gsiparm4.h
<br>
gs/base/gsistate.c
<br>
gs/base/gsjconf.h
<br>
gs/base/gsjmorec.h
<br>
gs/base/gslib.c
<br>
gs/base/gslib.h
<br>
gs/base/gslibctx.c
<br>
gs/base/gslibctx.h
<br>
gs/base/gsline.c
<br>
gs/base/gsline.h
<br>
gs/base/gslparam.h
<br>
gs/base/gsmalloc.c
<br>
gs/base/gsmalloc.h
<br>
gs/base/gsmatrix.c
<br>
gs/base/gsmatrix.h
<br>
gs/base/gsmchunk.c
<br>
gs/base/gsmchunk.h
<br>
gs/base/gsmdebug.h
<br>
gs/base/gsmemlok.c
<br>
gs/base/gsmemlok.h
<br>
gs/base/gsmemory.c
<br>
gs/base/gsmemory.h
<br>
gs/base/gsmemraw.h
<br>
gs/base/gsmemret.c
<br>
gs/base/gsmemret.h
<br>
gs/base/gsmisc.c
<br>
gs/base/gsnamecl.c
<br>
gs/base/gsnamecl.h
<br>
gs/base/gsncdummy.c
<br>
gs/base/gsncdummy.h
<br>
gs/base/gsnogc.c
<br>
gs/base/gsnogc.h
<br>
gs/base/gsnorop.c
<br>
gs/base/gsnotify.c
<br>
gs/base/gsnotify.h
<br>
gs/base/gsovrc.c
<br>
gs/base/gsovrc.h
<br>
gs/base/gspaint.c
<br>
gs/base/gspaint.h
<br>
gs/base/gsparam.c
<br>
gs/base/gsparam.h
<br>
gs/base/gsparam2.c
<br>
gs/base/gsparams.c
<br>
gs/base/gsparams.h
<br>
gs/base/gsparamx.c
<br>
gs/base/gsparamx.h
<br>
gs/base/gspath.c
<br>
gs/base/gspath.h
<br>
gs/base/gspath1.c
<br>
gs/base/gspath2.h
<br>
gs/base/gspcolor.c
<br>
gs/base/gspcolor.h
<br>
gs/base/gspenum.h
<br>
gs/base/gspmdrv.c
<br>
gs/base/gspmdrv.h
<br>
gs/base/gsptype1.c
<br>
gs/base/gsptype1.h
<br>
gs/base/gsptype2.c
<br>
gs/base/gsptype2.h
<br>
gs/base/gsrect.h
<br>
gs/base/gsrefct.h
<br>
gs/base/gsromfs0.c
<br>
gs/base/gsrop.c
<br>
gs/base/gsrop.h
<br>
gs/base/gsroprun.c
<br>
gs/base/gsropt.h
<br>
gs/base/gsroptab.c
<br>
gs/base/gsserial.c
<br>
gs/base/gsserial.h
<br>
gs/base/gsshade.c
<br>
gs/base/gsshade.h
<br>
gs/base/gsstate.c
<br>
gs/base/gsstate.h
<br>
gs/base/gsstruct.h
<br>
gs/base/gsstype.h
<br>
gs/base/gstext.c
<br>
gs/base/gstext.h
<br>
gs/base/gstparam.h
<br>
gs/base/gstrans.c
<br>
gs/base/gstrans.h
<br>
gs/base/gstrap.c
<br>
gs/base/gstrap.h
<br>
gs/base/gstype1.c
<br>
gs/base/gstype1.h
<br>
gs/base/gstype2.c
<br>
gs/base/gstype42.c
<br>
gs/base/gstypes.h
<br>
gs/base/gsuid.h
<br>
gs/base/gsutil.c
<br>
gs/base/gsutil.h
<br>
gs/base/gswts.c
<br>
gs/base/gswts.h
<br>
gs/base/gsxfont.h
<br>
gs/base/gx.h
<br>
gs/base/gxacpath.c
<br>
gs/base/gxalloc.h
<br>
gs/base/gxalpha.h
<br>
gs/base/gxarith.h
<br>
gs/base/gxband.h
<br>
gs/base/gxbcache.c
<br>
gs/base/gxbcache.h
<br>
gs/base/gxbitfmt.h
<br>
gs/base/gxbitmap.h
<br>
gs/base/gxbitops.h
<br>
gs/base/gxblend.c
<br>
gs/base/gxblend.h
<br>
gs/base/gxblend1.c
<br>
gs/base/gxccache.c
<br>
gs/base/gxccman.c
<br>
gs/base/gxcdevn.h
<br>
gs/base/gxchar.h
<br>
gs/base/gxchrout.c
<br>
gs/base/gxchrout.h
<br>
gs/base/gxcht.c
<br>
gs/base/gxcid.h
<br>
gs/base/gxcie.h
<br>
gs/base/gxcindex.h
<br>
gs/base/gxclbits.c
<br>
gs/base/gxcldev.h
<br>
gs/base/gxclfile.c
<br>
gs/base/gxclimag.c
<br>
gs/base/gxclio.h
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip.h
<br>
gs/base/gxclip2.c
<br>
gs/base/gxclip2.h
<br>
gs/base/gxclipm.c
<br>
gs/base/gxclipm.h
<br>
gs/base/gxclipsr.h
<br>
gs/base/gxclist.c
<br>
gs/base/gxclist.h
<br>
gs/base/gxcllzw.c
<br>
gs/base/gxclmem.c
<br>
gs/base/gxclmem.h
<br>
gs/base/gxclpage.c
<br>
gs/base/gxclpage.h
<br>
gs/base/gxclpath.c
<br>
gs/base/gxclpath.h
<br>
gs/base/gxclrast.c
<br>
gs/base/gxclread.c
<br>
gs/base/gxclrect.c
<br>
gs/base/gxclthrd.c
<br>
gs/base/gxclthrd.h
<br>
gs/base/gxclutil.c
<br>
gs/base/gxcmap.c
<br>
gs/base/gxcmap.h
<br>
gs/base/gxcolor2.h
<br>
gs/base/gxcomp.h
<br>
gs/base/gxcoord.h
<br>
gs/base/gxcpath.c
<br>
gs/base/gxcpath.h
<br>
gs/base/gxcspace.h
<br>
gs/base/gxctable.c
<br>
gs/base/gxctable.h
<br>
gs/base/gxcvalue.h
<br>
gs/base/gxdcconv.c
<br>
gs/base/gxdcconv.h
<br>
gs/base/gxdcolor.c
<br>
gs/base/gxdcolor.h
<br>
gs/base/gxdda.h
<br>
gs/base/gxdevbuf.h
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevmem.h
<br>
gs/base/gxdevndi.c
<br>
gs/base/gxdevndi.h
<br>
gs/base/gxdevrop.h
<br>
gs/base/gxdevsop.h
<br>
gs/base/gxdht.h
<br>
gs/base/gxdhtres.h
<br>
gs/base/gxdhtserial.c
<br>
gs/base/gxdhtserial.h
<br>
gs/base/gxdither.h
<br>
gs/base/gxdtfill.h
<br>
gs/base/gxfapiu.c
<br>
gs/base/gxfapiu.h
<br>
gs/base/gxfarith.h
<br>
gs/base/gxfcache.h
<br>
gs/base/gxfcid.h
<br>
gs/base/gxfcmap.h
<br>
gs/base/gxfcmap1.h
<br>
gs/base/gxfcopy.c
<br>
gs/base/gxfcopy.h
<br>
gs/base/gxfdrop.c
<br>
gs/base/gxfdrop.h
<br>
gs/base/gxfill.c
<br>
gs/base/gxfill.h
<br>
gs/base/gxfillsl.h
<br>
gs/base/gxfilltr.h
<br>
gs/base/gxfillts.h
<br>
gs/base/gxfixed.h
<br>
gs/base/gxfmap.h
<br>
gs/base/gxfont.h
<br>
gs/base/gxfont0.h
<br>
gs/base/gxfont0c.h
<br>
gs/base/gxfont1.h
<br>
gs/base/gxfont42.h
<br>
gs/base/gxfrac.h
<br>
gs/base/gxftype.h
<br>
gs/base/gxfunc.h
<br>
gs/base/gxgetbit.h
<br>
gs/base/gxhintn.c
<br>
gs/base/gxhintn.h
<br>
gs/base/gxhintn1.c
<br>
gs/base/gxhldevc.c
<br>
gs/base/gxhldevc.h
<br>
gs/base/gxht.c
<br>
gs/base/gxht.h
<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/gxhtbit.c
<br>
gs/base/gxhttile.h
<br>
gs/base/gxhttype.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxi16bit.c
<br>
gs/base/gxiclass.h
<br>
gs/base/gxicolor.c
<br>
gs/base/gxidata.c
<br>
gs/base/gxifast.c
<br>
gs/base/gximag3x.c
<br>
gs/base/gximag3x.h
<br>
gs/base/gximage.c
<br>
gs/base/gximage.h
<br>
gs/base/gximage1.c
<br>
gs/base/gximage2.c
<br>
gs/base/gximage3.c
<br>
gs/base/gximage3.h
<br>
gs/base/gximage4.c
<br>
gs/base/gximask.c
<br>
gs/base/gximask.h
<br>
gs/base/gximono.c
<br>
gs/base/gxino12b.c
<br>
gs/base/gxino16b.c
<br>
gs/base/gxiodev.h
<br>
gs/base/gxiparam.h
<br>
gs/base/gxipixel.c
<br>
gs/base/gxiscale.c
<br>
gs/base/gxistate.h
<br>
gs/base/gxline.h
<br>
gs/base/gxlum.h
<br>
gs/base/gxmatrix.h
<br>
gs/base/gxmclip.c
<br>
gs/base/gxmclip.h
<br>
gs/base/gxobj.h
<br>
gs/base/gxoprect.c
<br>
gs/base/gxoprect.h
<br>
gs/base/gxp1fill.c
<br>
gs/base/gxp1impl.h
<br>
gs/base/gxpageq.c
<br>
gs/base/gxpageq.h
<br>
gs/base/gxpaint.c
<br>
gs/base/gxpaint.h
<br>
gs/base/gxpath.c
<br>
gs/base/gxpath.h
<br>
gs/base/gxpath2.c
<br>
gs/base/gxpcache.h
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxpcolor.h
<br>
gs/base/gxpcopy.c
<br>
gs/base/gxpdash.c
<br>
gs/base/gxpflat.c
<br>
gs/base/gxrplane.h
<br>
gs/base/gxsample.c
<br>
gs/base/gxsample.h
<br>
gs/base/gxsamplp.h
<br>
gs/base/gxshade.c
<br>
gs/base/gxshade.h
<br>
gs/base/gxshade1.c
<br>
gs/base/gxshade4.c
<br>
gs/base/gxshade4.h
<br>
gs/base/gxshade6.c
<br>
gs/base/gxstate.h
<br>
gs/base/gxstdio.h
<br>
gs/base/gxstroke.c
<br>
gs/base/gxsync.c
<br>
gs/base/gxsync.h
<br>
gs/base/gxtext.h
<br>
gs/base/gxtmap.h
<br>
gs/base/gxttf.h
<br>
gs/base/gxttfb.c
<br>
gs/base/gxttfb.h
<br>
gs/base/gxtype1.c
<br>
gs/base/gxtype1.h
<br>
gs/base/gxwts.c
<br>
gs/base/gxwts.h
<br>
gs/base/gxxfont.h
<br>
gs/base/gzacpath.h
<br>
gs/base/gzcpath.h
<br>
gs/base/gzht.h
<br>
gs/base/gzline.h
<br>
gs/base/gzpath.h
<br>
gs/base/gzspotan.c
<br>
gs/base/gzspotan.h
<br>
gs/base/gzstate.h
<br>
gs/base/jerror_.h
<br>
gs/base/locale_.h
<br>
gs/base/macos_carbon_d_pre.h
<br>
gs/base/macos_carbon_pre.h
<br>
gs/base/macos_classic_d_pre.h
<br>
gs/base/macsystypes.h
<br>
gs/base/malloc_.h
<br>
gs/base/math_.h
<br>
gs/base/md5.c
<br>
gs/base/md5.h
<br>
gs/base/md5main.c
<br>
gs/base/memory_.h
<br>
gs/base/minftrsz.c
<br>
gs/base/mkromfs.c
<br>
gs/base/opdfread.h
<br>
gs/base/pipe_.h
<br>
gs/base/png_.h
<br>
gs/base/rinkj/evenbetter-rll.c
<br>
gs/base/rinkj/evenbetter-rll.h
<br>
gs/base/rinkj/rinkj-byte-stream.c
<br>
gs/base/rinkj/rinkj-byte-stream.h
<br>
gs/base/rinkj/rinkj-config.c
<br>
gs/base/rinkj/rinkj-config.h
<br>
gs/base/rinkj/rinkj-device.c
<br>
gs/base/rinkj/rinkj-device.h
<br>
gs/base/rinkj/rinkj-dither.c
<br>
gs/base/rinkj/rinkj-dither.h
<br>
gs/base/rinkj/rinkj-epson870.c
<br>
gs/base/rinkj/rinkj-epson870.h
<br>
gs/base/rinkj/rinkj-screen-eb.c
<br>
gs/base/rinkj/rinkj-screen-eb.h
<br>
gs/base/sa85d.c
<br>
gs/base/sa85d.h
<br>
gs/base/sa85x.h
<br>
gs/base/saes.c
<br>
gs/base/saes.h
<br>
gs/base/sarc4.c
<br>
gs/base/sarc4.h
<br>
gs/base/sbcp.c
<br>
gs/base/sbcp.h
<br>
gs/base/sbhc.c
<br>
gs/base/sbhc.h
<br>
gs/base/sbtx.h
<br>
gs/base/sbwbs.c
<br>
gs/base/sbwbs.h
<br>
gs/base/scanchar.h
<br>
gs/base/scantab.c
<br>
gs/base/scf.h
<br>
gs/base/scfd.c
<br>
gs/base/scfdgen.c
<br>
gs/base/scfdtab.c
<br>
gs/base/scfe.c
<br>
gs/base/scfetab.c
<br>
gs/base/scfparam.c
<br>
gs/base/scfx.h
<br>
gs/base/scommon.h
<br>
gs/base/sdcparam.c
<br>
gs/base/sdcparam.h
<br>
gs/base/sdct.h
<br>
gs/base/sdctd.c
<br>
gs/base/sdcte.c
<br>
gs/base/sddparam.c
<br>
gs/base/sdeparam.c
<br>
gs/base/seexec.c
<br>
gs/base/setjmp_.h
<br>
gs/base/sfilter.h
<br>
gs/base/sfilter2.c
<br>
gs/base/sfxboth.c
<br>
gs/base/sfxcommon.c
<br>
gs/base/sfxfd.c
<br>
gs/base/sfxstdio.c
<br>
gs/base/sha2.c
<br>
gs/base/sha2.h
<br>
gs/base/shc.c
<br>
gs/base/shc.h
<br>
gs/base/shcgen.c
<br>
gs/base/shcgen.h
<br>
gs/base/sidscale.c
<br>
gs/base/sidscale.h
<br>
gs/base/siinterp.c
<br>
gs/base/siinterp.h
<br>
gs/base/simscale.c
<br>
gs/base/simscale.h
<br>
gs/base/siscale.c
<br>
gs/base/siscale.h
<br>
gs/base/sisparam.h
<br>
gs/base/sjbig2.c
<br>
gs/base/sjbig2.h
<br>
gs/base/sjbig2_luratech.c
<br>
gs/base/sjbig2_luratech.h
<br>
gs/base/sjpeg.h
<br>
gs/base/sjpegc.c
<br>
gs/base/sjpegd.c
<br>
gs/base/sjpege.c
<br>
gs/base/sjpx.c
<br>
gs/base/sjpx_luratech.c
<br>
gs/base/sjpx_luratech.h
<br>
gs/base/slzwc.c
<br>
gs/base/slzwd.c
<br>
gs/base/slzwe.c
<br>
gs/base/slzwx.h
<br>
gs/base/smd5.c
<br>
gs/base/smd5.h
<br>
gs/base/smtf.c
<br>
gs/base/smtf.h
<br>
gs/base/spdiff.c
<br>
gs/base/spdiffx.h
<br>
gs/base/spngp.c
<br>
gs/base/spngpx.h
<br>
gs/base/spprint.c
<br>
gs/base/spprint.h
<br>
gs/base/spsdf.c
<br>
gs/base/spsdf.h
<br>
gs/base/srdline.h
<br>
gs/base/srld.c
<br>
gs/base/srle.c
<br>
gs/base/srlx.h
<br>
gs/base/ssha2.c
<br>
gs/base/sstring.c
<br>
gs/base/sstring.h
<br>
gs/base/stat_.h
<br>
gs/base/std.h
<br>
gs/base/stdint_.h
<br>
gs/base/stdio_.h
<br>
gs/base/stdpn.h
<br>
gs/base/stdpre.h
<br>
gs/base/stream.c
<br>
gs/base/stream.h
<br>
gs/base/strimpl.h
<br>
gs/base/string_.h
<br>
gs/base/strmio.h
<br>
gs/base/szlibc.c
<br>
gs/base/szlibe.c
<br>
gs/base/szlibx.h
<br>
gs/base/szlibxx.h
<br>
gs/base/time_.h
<br>
gs/base/ttcalc.c
<br>
gs/base/ttcalc.h
<br>
gs/base/ttcommon.h
<br>
gs/base/ttconf.h
<br>
gs/base/ttconfig.h
<br>
gs/base/ttfinp.c
<br>
gs/base/ttfinp.h
<br>
gs/base/ttfmain.c
<br>
gs/base/ttfmemd.c
<br>
gs/base/ttfmemd.h
<br>
gs/base/ttfoutl.h
<br>
gs/base/ttfsfnt.h
<br>
gs/base/ttinterp.c
<br>
gs/base/ttinterp.h
<br>
gs/base/ttload.c
<br>
gs/base/ttload.h
<br>
gs/base/ttmisc.h
<br>
gs/base/ttobjs.c
<br>
gs/base/ttobjs.h
<br>
gs/base/tttables.h
<br>
gs/base/tttype.h
<br>
gs/base/tttypes.h
<br>
gs/base/unistd_.h
<br>
gs/base/valgrind.h
<br>
gs/base/vdtrace.c
<br>
gs/base/vdtrace.h
<br>
gs/base/vms_x_fix.h
<br>
gs/base/vmsmath.h
<br>
gs/base/whitelst.c
<br>
gs/base/whitelst.h
<br>
gs/base/windows_.h
<br>
gs/base/wtsimdi.c
<br>
gs/base/x_.h
<br>
gs/contrib/defs.h
<br>
gs/contrib/eplaser/gdevescv.c
<br>
gs/contrib/eplaser/gdevescv.h
<br>
gs/contrib/gdevbjc_.c
<br>
gs/contrib/gdevbjc_.h
<br>
gs/contrib/gdevbjca.c
<br>
gs/contrib/gdevcd8.c
<br>
gs/contrib/gdevdj9.c
<br>
gs/contrib/gdevgdi.c
<br>
gs/contrib/gdevhl12.c
<br>
gs/contrib/gdevln03.c
<br>
gs/contrib/gdevlx32.c
<br>
gs/contrib/gdevlx50.c
<br>
gs/contrib/gdevlx7.c
<br>
gs/contrib/gdevmd2k.c
<br>
gs/contrib/gdevop4w.c
<br>
gs/contrib/gdevxes.c
<br>
gs/contrib/gomni.c
<br>
gs/contrib/japanese/dviprlib.c
<br>
gs/contrib/japanese/dviprlib.h
<br>
gs/contrib/japanese/gdev10v.c
<br>
gs/contrib/japanese/gdevalps.c
<br>
gs/contrib/japanese/gdevdmpr.c
<br>
gs/contrib/japanese/gdevespg.c
<br>
gs/contrib/japanese/gdevfmlbp.c
<br>
gs/contrib/japanese/gdevfmpr.c
<br>
gs/contrib/japanese/gdevj100.c
<br>
gs/contrib/japanese/gdevlbp3.c
<br>
gs/contrib/japanese/gdevmag.c
<br>
gs/contrib/japanese/gdevmjc.c
<br>
gs/contrib/japanese/gdevmjc.h
<br>
gs/contrib/japanese/gdevml6.c
<br>
gs/contrib/japanese/gdevnpdl.c
<br>
gs/contrib/japanese/gdevp201.c
<br>
gs/contrib/japanese/gdevrpdl.c
<br>
gs/contrib/lips4/gdevl4r.c
<br>
gs/contrib/lips4/gdevl4v.c
<br>
gs/contrib/lips4/gdevlips.c
<br>
gs/contrib/lips4/gdevlips.h
<br>
gs/contrib/lips4/gdevlprn.c
<br>
gs/contrib/lips4/gdevlprn.h
<br>
gs/contrib/opvp/gdevopvp.c
<br>
gs/contrib/opvp/opvp.h
<br>
gs/contrib/opvp/opvp_0_2_0.h
<br>
gs/contrib/opvp/opvp_common.h
<br>
gs/contrib/pcl3/eprn/eprnfs.c
<br>
gs/contrib/pcl3/eprn/eprnparm.c
<br>
gs/contrib/pcl3/eprn/eprnrend.c
<br>
gs/contrib/pcl3/eprn/gdeveprn.h
<br>
gs/contrib/pcl3/eprn/mediasize.c
<br>
gs/contrib/pcl3/eprn/mediasize.h
<br>
gs/contrib/pcl3/eprn/pagecount.c
<br>
gs/contrib/pcl3/ps/calign.ps
<br>
gs/contrib/pcl3/ps/levels-test.ps
<br>
gs/contrib/pcl3/src/pcl3opts.c
<br>
gs/contrib/pcl3/src/pclcap.c
<br>
gs/contrib/pcl3/src/pclcomp.c
<br>
gs/contrib/pcl3/src/pclgen.c
<br>
gs/contrib/pcl3/src/pclgen.h
<br>
gs/contrib/pcl3/src/pclscan.c
<br>
gs/contrib/pcl3/src/pclscan.h
<br>
gs/contrib/pcl3/src/pclsize.c
<br>
gs/contrib/pcl3/src/pclsize.h
<br>
gs/contrib/pscolor/black.ps
<br>
gs/contrib/pscolor/color.ps
<br>
gs/contrib/pscolor/input.ps
<br>
gs/contrib/pscolor/test.c
<br>
gs/icclib/icc.c
<br>
gs/icclib/icc.h
<br>
gs/icclib/icc9809.h
<br>
gs/ijs/ijs.c
<br>
gs/ijs/ijs_client.c
<br>
gs/ijs/ijs_client.h
<br>
gs/ijs/ijs_client_example.c
<br>
gs/ijs/ijs_exec_unix.c
<br>
gs/ijs/ijs_exec_win.c
<br>
gs/ijs/ijs_server.c
<br>
gs/ijs/ijs_server.h
<br>
gs/ijs/ijs_server_example.c
<br>
gs/ijs/ijs_spec.ps
<br>
gs/imdi/arch.h
<br>
gs/imdi/cctiff.c
<br>
gs/imdi/cgen.c
<br>
gs/imdi/config.h
<br>
gs/imdi/copyright.h
<br>
gs/imdi/imdi.c
<br>
gs/imdi/imdi.h
<br>
gs/imdi/imdi_gen.c
<br>
gs/imdi/imdi_gen.h
<br>
gs/imdi/imdi_imp.h
<br>
gs/imdi/imdi_k.c
<br>
gs/imdi/imdi_k.h
<br>
gs/imdi/imdi_tab.c
<br>
gs/imdi/imdi_tab.h
<br>
gs/lib/EndOfTask.ps
<br>
gs/lib/PDFA_def.ps
<br>
gs/lib/PDFX_def.ps
<br>
gs/lib/acctest.ps
<br>
gs/lib/addxchar.ps
<br>
gs/lib/align.ps
<br>
gs/lib/bdftops.ps
<br>
gs/lib/caption.ps
<br>
gs/lib/cat.ps
<br>
gs/lib/cid2code.ps
<br>
gs/lib/docie.ps
<br>
gs/lib/dumphint.ps
<br>
gs/lib/font2c.ps
<br>
gs/lib/font2pcl.ps
<br>
gs/lib/gs_ce_e.ps
<br>
gs/lib/gs_cmdl.ps
<br>
gs/lib/gs_fform.ps
<br>
gs/lib/gs_il2_e.ps
<br>
gs/lib/gs_kanji.ps
<br>
gs/lib/gs_ksb_e.ps
<br>
gs/lib/gs_lgo_e.ps
<br>
gs/lib/gs_lgx_e.ps
<br>
gs/lib/gs_pfile.ps
<br>
gs/lib/gs_rdlin.ps
<br>
gs/lib/gs_wl1_e.ps
<br>
gs/lib/gs_wl2_e.ps
<br>
gs/lib/gs_wl5_e.ps
<br>
gs/lib/gslp.ps
<br>
gs/lib/gsnup.ps
<br>
gs/lib/image-qa.ps
<br>
gs/lib/impath.ps
<br>
gs/lib/jispaper.ps
<br>
gs/lib/landscap.ps
<br>
gs/lib/lines.ps
<br>
gs/lib/markhint.ps
<br>
gs/lib/markpath.ps
<br>
gs/lib/mkcidfm.ps
<br>
gs/lib/opdfread.ps
<br>
gs/lib/packfile.ps
<br>
gs/lib/pcharstr.ps
<br>
gs/lib/pdf2dsc.ps
<br>
gs/lib/pdfopt.ps
<br>
gs/lib/pdfwrite.ps
<br>
gs/lib/pf2afm.ps
<br>
gs/lib/pfbtopfa.ps
<br>
gs/lib/ppath.ps
<br>
gs/lib/pphs.ps
<br>
gs/lib/prfont.ps
<br>
gs/lib/printafm.ps
<br>
gs/lib/ps2ai.ps
<br>
gs/lib/ps2ascii.ps
<br>
gs/lib/ps2epsi.ps
<br>
gs/lib/rollconv.ps
<br>
gs/lib/showchar.ps
<br>
gs/lib/stcinfo.ps
<br>
gs/lib/stcolor.ps
<br>
gs/lib/stocht.ps
<br>
gs/lib/traceimg.ps
<br>
gs/lib/traceop.ps
<br>
gs/lib/type1enc.ps
<br>
gs/lib/type1ops.ps
<br>
gs/lib/uninfo.ps
<br>
gs/lib/unprot.ps
<br>
gs/lib/viewcmyk.ps
<br>
gs/lib/viewgif.ps
<br>
gs/lib/viewjpeg.ps
<br>
gs/lib/viewmiff.ps
<br>
gs/lib/viewpbm.ps
<br>
gs/lib/viewpcx.ps
<br>
gs/lib/viewps2a.ps
<br>
gs/lib/viewrgb.ps
<br>
gs/lib/wftopfa.ps
<br>
gs/lib/winmaps.ps
<br>
gs/lib/wrfont.ps
<br>
gs/lib/zeroline.ps
<br>
gs/psi/bfont.h
<br>
gs/psi/btoken.h
<br>
gs/psi/dmmain.c
<br>
gs/psi/dpmain.c
<br>
gs/psi/dscparse.c
<br>
gs/psi/dscparse.h
<br>
gs/psi/dstack.h
<br>
gs/psi/dwdll.c
<br>
gs/psi/dwdll.h
<br>
gs/psi/dwimg.c
<br>
gs/psi/dwimg.h
<br>
gs/psi/dwinst.h
<br>
gs/psi/dwmain.c
<br>
gs/psi/dwmainc.c
<br>
gs/psi/dwnodll.c
<br>
gs/psi/dwreg.c
<br>
gs/psi/dwreg.h
<br>
gs/psi/dwres.h
<br>
gs/psi/dwsetup.h
<br>
gs/psi/dwtext.c
<br>
gs/psi/dwtext.h
<br>
gs/psi/dwtrace.c
<br>
gs/psi/dwtrace.h
<br>
gs/psi/dwuninst.h
<br>
gs/psi/dxmain.c
<br>
gs/psi/dxmainc.c
<br>
gs/psi/estack.h
<br>
gs/psi/fapi_ft.c
<br>
gs/psi/fapibstm.c
<br>
gs/psi/fapiufst.c
<br>
gs/psi/files.h
<br>
gs/psi/ghost.h
<br>
gs/psi/gs.c
<br>
gs/psi/gsdll.c
<br>
gs/psi/gserver.c
<br>
gs/psi/ialloc.c
<br>
gs/psi/ialloc.h
<br>
gs/psi/iapi.c
<br>
gs/psi/iapi.h
<br>
gs/psi/iastate.h
<br>
gs/psi/iastruct.h
<br>
gs/psi/ibnum.c
<br>
gs/psi/ibnum.h
<br>
gs/psi/ichar.h
<br>
gs/psi/ichar1.h
<br>
gs/psi/icharout.h
<br>
gs/psi/icid.h
<br>
gs/psi/icie.h
<br>
gs/psi/icolor.h
<br>
gs/psi/iconf.c
<br>
gs/psi/iconf.h
<br>
gs/psi/icontext.c
<br>
gs/psi/icontext.h
<br>
gs/psi/icremap.h
<br>
gs/psi/icsmap.h
<br>
gs/psi/icstate.h
<br>
gs/psi/iddict.h
<br>
gs/psi/iddstack.h
<br>
gs/psi/idebug.c
<br>
gs/psi/idebug.h
<br>
gs/psi/idict.c
<br>
gs/psi/idict.h
<br>
gs/psi/idictdef.h
<br>
gs/psi/idicttpl.h
<br>
gs/psi/idisp.c
<br>
gs/psi/idisp.h
<br>
gs/psi/idosave.h
<br>
gs/psi/idparam.c
<br>
gs/psi/idparam.h
<br>
gs/psi/idsdata.h
<br>
gs/psi/idstack.c
<br>
gs/psi/idstack.h
<br>
gs/psi/ierrors.h
<br>
gs/psi/iesdata.h
<br>
gs/psi/iestack.h
<br>
gs/psi/ifapi.h
<br>
gs/psi/ifcid.h
<br>
gs/psi/ifilter.h
<br>
gs/psi/ifilter2.h
<br>
gs/psi/ifont.h
<br>
gs/psi/ifont1.h
<br>
gs/psi/ifont2.h
<br>
gs/psi/ifont42.h
<br>
gs/psi/ifrpred.h
<br>
gs/psi/ifunc.h
<br>
gs/psi/ifwpred.h
<br>
gs/psi/igc.c
<br>
gs/psi/igc.h
<br>
gs/psi/igcref.c
<br>
gs/psi/igcstr.c
<br>
gs/psi/igcstr.h
<br>
gs/psi/igstate.h
<br>
gs/psi/iht.h
<br>
gs/psi/iimage.h
<br>
gs/psi/iimage2.h
<br>
gs/psi/iinit.c
<br>
gs/psi/iinit.h
<br>
gs/psi/ilevel.h
<br>
gs/psi/ilocate.c
<br>
gs/psi/imain.c
<br>
gs/psi/imain.h
<br>
gs/psi/imainarg.h
<br>
gs/psi/imemory.h
<br>
gs/psi/iminst.h
<br>
gs/psi/iname.c
<br>
gs/psi/iname.h
<br>
gs/psi/inamedef.h
<br>
gs/psi/inameidx.h
<br>
gs/psi/inames.h
<br>
gs/psi/inamestr.h
<br>
gs/psi/inobtokn.c
<br>
gs/psi/inouparm.c
<br>
gs/psi/interp.h
<br>
gs/psi/iosdata.h
<br>
gs/psi/iostack.h
<br>
gs/psi/ipacked.h
<br>
gs/psi/iparam.c
<br>
gs/psi/iparam.h
<br>
gs/psi/iparray.h
<br>
gs/psi/ipcolor.h
<br>
gs/psi/iplugin.c
<br>
gs/psi/iplugin.h
<br>
gs/psi/ireclaim.c
<br>
gs/psi/iref.h
<br>
gs/psi/isave.c
<br>
gs/psi/isave.h
<br>
gs/psi/iscanbin.c
<br>
gs/psi/iscanbin.h
<br>
gs/psi/iscannum.c
<br>
gs/psi/iscannum.h
<br>
gs/psi/isdata.h
<br>
gs/psi/isstate.h
<br>
gs/psi/istack.c
<br>
gs/psi/istack.h
<br>
gs/psi/istkparm.h
<br>
gs/psi/istream.h
<br>
gs/psi/istruct.h
<br>
gs/psi/iutil.c
<br>
gs/psi/iutil.h
<br>
gs/psi/iutil2.c
<br>
gs/psi/iutil2.h
<br>
gs/psi/ivmem2.h
<br>
gs/psi/ivmspace.h
<br>
gs/psi/main.h
<br>
gs/psi/oparc.h
<br>
gs/psi/opcheck.h
<br>
gs/psi/opdef.h
<br>
gs/psi/oper.h
<br>
gs/psi/opextern.h
<br>
gs/psi/ostack.h
<br>
gs/psi/sfilter1.c
<br>
gs/psi/store.h
<br>
gs/psi/wrfont.c
<br>
gs/psi/wrfont.h
<br>
gs/psi/write_t1.c
<br>
gs/psi/write_t1.h
<br>
gs/psi/write_t2.c
<br>
gs/psi/write_t2.h
<br>
gs/psi/zalg.c
<br>
gs/psi/zarith.c
<br>
gs/psi/zarray.c
<br>
gs/psi/zbfont.c
<br>
gs/psi/zbseq.c
<br>
gs/psi/zcfont.c
<br>
gs/psi/zchar.c
<br>
gs/psi/zchar1.c
<br>
gs/psi/zchar2.c
<br>
gs/psi/zchar32.c
<br>
gs/psi/zchar42.c
<br>
gs/psi/zchar42.h
<br>
gs/psi/zcharout.c
<br>
gs/psi/zcharx.c
<br>
gs/psi/zcid.c
<br>
gs/psi/zcidtest.c
<br>
gs/psi/zcie.c
<br>
gs/psi/zcie.h
<br>
gs/psi/zcolor.c
<br>
gs/psi/zcolor.h
<br>
gs/psi/zcolor1.c
<br>
gs/psi/zcolor2.c
<br>
gs/psi/zcolor3.c
<br>
gs/psi/zcontext.c
<br>
gs/psi/zcontrol.c
<br>
gs/psi/zcrd.c
<br>
gs/psi/zcsdevn.c
<br>
gs/psi/zcsindex.c
<br>
gs/psi/zcspixel.c
<br>
gs/psi/zcssepr.c
<br>
gs/psi/zdevcal.c
<br>
gs/psi/zdevice.c
<br>
gs/psi/zdevice2.c
<br>
gs/psi/zdfilter.c
<br>
gs/psi/zdict.c
<br>
gs/psi/zdosio.c
<br>
gs/psi/zdouble.c
<br>
gs/psi/zdpnext.c
<br>
gs/psi/zdps.c
<br>
gs/psi/zdps1.c
<br>
gs/psi/zdscpars.c
<br>
gs/psi/zfaes.c
<br>
gs/psi/zfapi.c
<br>
gs/psi/zfarc4.c
<br>
gs/psi/zfbcp.c
<br>
gs/psi/zfcid.c
<br>
gs/psi/zfcid0.c
<br>
gs/psi/zfcid1.c
<br>
gs/psi/zfcmap.c
<br>
gs/psi/zfdctd.c
<br>
gs/psi/zfdcte.c
<br>
gs/psi/zfdecode.c
<br>
gs/psi/zfile.c
<br>
gs/psi/zfile.h
<br>
gs/psi/zfile1.c
<br>
gs/psi/zfileio.c
<br>
gs/psi/zfilter.c
<br>
gs/psi/zfilter2.c
<br>
gs/psi/zfilterx.c
<br>
gs/psi/zfimscale.c
<br>
gs/psi/zfjbig2.c
<br>
gs/psi/zfjpx.c
<br>
gs/psi/zfmd5.c
<br>
gs/psi/zfont.c
<br>
gs/psi/zfont0.c
<br>
gs/psi/zfont1.c
<br>
gs/psi/zfont2.c
<br>
gs/psi/zfont32.c
<br>
gs/psi/zfont42.c
<br>
gs/psi/zfontenum.c
<br>
gs/psi/zfproc.c
<br>
gs/psi/zfrsd.c
<br>
gs/psi/zfrsd.h
<br>
gs/psi/zfsample.c
<br>
gs/psi/zfunc.c
<br>
gs/psi/zfunc.h
<br>
gs/psi/zfunc0.c
<br>
gs/psi/zfunc3.c
<br>
gs/psi/zfunc4.c
<br>
gs/psi/zfzlib.c
<br>
gs/psi/zgeneric.c
<br>
gs/psi/zgstate.c
<br>
gs/psi/zhsb.c
<br>
gs/psi/zht.c
<br>
gs/psi/zht1.c
<br>
gs/psi/zht2.c
<br>
gs/psi/zht2.h
<br>
gs/psi/zicc.c
<br>
gs/psi/zicc.h
<br>
gs/psi/zimage.c
<br>
gs/psi/zimage2.c
<br>
gs/psi/zimage3.c
<br>
gs/psi/ziodev2.c
<br>
gs/psi/ziodevs.c
<br>
gs/psi/ziodevsc.c
<br>
gs/psi/zmath.c
<br>
gs/psi/zmatrix.c
<br>
gs/psi/zmedia2.c
<br>
gs/psi/zmisc.c
<br>
gs/psi/zmisc1.c
<br>
gs/psi/zmisc2.c
<br>
gs/psi/zmisc3.c
<br>
gs/psi/zncdummy.c
<br>
gs/psi/zpacked.c
<br>
gs/psi/zpaint.c
<br>
gs/psi/zpath.c
<br>
gs/psi/zpath1.c
<br>
gs/psi/zpcolor.c
<br>
gs/psi/zpdfops.c
<br>
gs/psi/zrelbit.c
<br>
gs/psi/zrop.c
<br>
gs/psi/zshade.c
<br>
gs/psi/zstack.c
<br>
gs/psi/zstring.c
<br>
gs/psi/zsysvm.c
<br>
gs/psi/ztrans.c
<br>
gs/psi/ztrap.c
<br>
gs/psi/zupath.c
<br>
gs/psi/zusparam.c
<br>
gs/psi/zutf8.c
<br>
gs/psi/zvmem.c
<br>
gs/psi/zvmem2.c
<br>
gs/psi/zwinutf8.c
<br>
gs/toolbin/GenSubstCID.ps
<br>
gs/toolbin/bmpcmp.c
<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
gs/toolbin/color/icc_creator/ICC_Creator/CIELAB.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc34.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/resource.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/stdafx.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/targetver.h
<br>
gs/toolbin/drawafm.ps
<br>
gs/toolbin/encs2c.ps
<br>
gs/toolbin/extractFonts.ps
<br>
gs/toolbin/extractICCprofiles.ps
<br>
gs/toolbin/genfontmap.ps
<br>
gs/toolbin/jpxtopdf.c
<br>
gs/toolbin/pdf_info.ps
<br>
gs/toolbin/pdfinflt.ps
<br>
gs/toolbin/tests/fuzzy.c
<br>
pcl/pcbiptrn.c
<br>
pcl/pccid.c
<br>
pcl/pccolor.c
<br>
pcl/pccprint.c
<br>
pcl/pccrd.c
<br>
pcl/pccrd.h
<br>
pcl/pccsbase.c
<br>
pcl/pccsbase.h
<br>
pcl/pcdict.h
<br>
pcl/pcdraw.c
<br>
pcl/pcfont.c
<br>
pcl/pcfont.h
<br>
pcl/pcfontpg.c
<br>
pcl/pcfrgrnd.c
<br>
pcl/pcfrgrnd.h
<br>
pcl/pcfsel.c
<br>
pcl/pcfsel.h
<br>
pcl/pcht.c
<br>
pcl/pcht.h
<br>
pcl/pcimpl.c
<br>
pcl/pcindxed.c
<br>
pcl/pcindxed.h
<br>
pcl/pcjob.c
<br>
pcl/pclookup.c
<br>
pcl/pclookup.h
<br>
pcl/pcmacros.c
<br>
pcl/pcmisc.c
<br>
pcl/pcmtx3.c
<br>
pcl/pcmtx3.h
<br>
pcl/pcommand.c
<br>
pcl/pcommand.h
<br>
pcl/pcpage.c
<br>
pcl/pcpalet.c
<br>
pcl/pcpalet.h
<br>
pcl/pcparse.c
<br>
pcl/pcparse.h
<br>
pcl/pcpatrn.c
<br>
pcl/pcpatrn.h
<br>
pcl/pcpattyp.h
<br>
pcl/pcpatxfm.c
<br>
pcl/pcpatxfm.h
<br>
pcl/pcrect.c
<br>
pcl/pcsfont.c
<br>
pcl/pcstate.h
<br>
pcl/pcstatus.c
<br>
pcl/pcsymbol.c
<br>
pcl/pcsymbol.h
<br>
pcl/pctext.c
<br>
pcl/pctop.c
<br>
pcl/pctop.h
<br>
pcl/pctpm.h
<br>
pcl/pcuptrn.c
<br>
pcl/pcursor.c
<br>
pcl/pcwhtidx.c
<br>
pcl/pcxfmst.h
<br>
pcl/pgchar.c
<br>
pcl/pgcolor.c
<br>
pcl/pgconfig.c
<br>
pcl/pgdraw.c
<br>
pcl/pgdraw.h
<br>
pcl/pgfdata.c
<br>
pcl/pgfdata.h
<br>
pcl/pgfont.c
<br>
pcl/pgframe.c
<br>
pcl/pggeom.c
<br>
pcl/pggeom.h
<br>
pcl/pglabel.c
<br>
pcl/pglfill.c
<br>
pcl/pgmisc.c
<br>
pcl/pgmisc.h
<br>
pcl/pgparse.c
<br>
pcl/pgpoly.c
<br>
pcl/pgstate.h
<br>
pcl/rtgmode.c
<br>
pcl/rtgmode.h
<br>
pcl/rtmisc.c
<br>
pcl/rtraster.c
<br>
pcl/rtrstcmp.c
<br>
pcl/rtrstcmp.h
<br>
pcl/rtrstst.h
<br>
pl/dwimg.c
<br>
pl/dwimg.h
<br>
pl/dwmainc.c
<br>
pl/dwreg.c
<br>
pl/dwreg.h
<br>
pl/dwres.h
<br>
pl/pjparse.c
<br>
pl/pjparse.h
<br>
pl/pjparsei.c
<br>
pl/pjtop.c
<br>
pl/pjtop.h
<br>
pl/plalloc.c
<br>
pl/plalloc.h
<br>
pl/plapi.h
<br>
pl/plchar.c
<br>
pl/pldict.c
<br>
pl/pldict.h
<br>
pl/pldraw.c
<br>
pl/plfont.c
<br>
pl/plfont.h
<br>
pl/plftable.c
<br>
pl/plht.c
<br>
pl/plimpl.c
<br>
pl/pllfont.c
<br>
pl/plmain.c
<br>
pl/plplatf.c
<br>
pl/plplatf.h
<br>
pl/plplatfps.c
<br>
pl/plsrgb.c
<br>
pl/plsymbol.c
<br>
pl/plsymbol.h
<br>
pl/pltop.c
<br>
pl/pltop.h
<br>
pl/pltoputl.c
<br>
pl/pltoputl.h
<br>
pl/pluchar.c
<br>
pl/plufont.c
<br>
pl/plulfont.c
<br>
pl/plvocab.c
<br>
psi/psitop.c
<br>
pxl/pxasm.ps
<br>
pxl/pxbfont.c
<br>
pxl/pxbfont.ps
<br>
pxl/pxerrors.h
<br>
pxl/pxffont.c
<br>
pxl/pxfont.c
<br>
pxl/pxgstate.c
<br>
pxl/pxgstate.h
<br>
pxl/pximage.c
<br>
pxl/pximpl.c
<br>
pxl/pxink.c
<br>
pxl/pxoper.h
<br>
pxl/pxpaint.c
<br>
pxl/pxparse.c
<br>
pxl/pxparse.h
<br>
pxl/pxpthr.c
<br>
pxl/pxsessio.c
<br>
pxl/pxstate.c
<br>
pxl/pxstate.h
<br>
pxl/pxstream.c
<br>
pxl/pxsymbol.ps
<br>
pxl/pxtop.c
<br>
pxl/pxvalue.c
<br>
pxl/pxvalue.h
<br>
svg/ghostsvg.h
<br>
svg/svgcolor.c
<br>
svg/svgdoc.c
<br>
svg/svgshapes.c
<br>
svg/svgtop.c
<br>
svg/svgtransform.c
<br>
svg/svgtypes.c
<br>
svg/svgxml.c
<br>
tools/GOT/detag.c
<br>
tools/GOT/tagimage.c
<br>
tools/gslite/gslt.h
<br>
tools/gslite/gslt_alloc.c
<br>
tools/gslite/gslt_alloc.h
<br>
tools/gslite/gslt_font.h
<br>
tools/gslite/gslt_font_api.c
<br>
tools/gslite/gslt_font_api.h
<br>
tools/gslite/gslt_font_api_test.c
<br>
tools/gslite/gslt_font_cache.c
<br>
tools/gslite/gslt_font_cff.c
<br>
tools/gslite/gslt_font_encoding.c
<br>
tools/gslite/gslt_font_glyph.c
<br>
tools/gslite/gslt_font_int.h
<br>
tools/gslite/gslt_font_test.c
<br>
tools/gslite/gslt_font_ttf.c
<br>
tools/gslite/gslt_image.c
<br>
tools/gslite/gslt_image.h
<br>
tools/gslite/gslt_image_jpeg.c
<br>
tools/gslite/gslt_image_png.c
<br>
tools/gslite/gslt_image_test.c
<br>
tools/gslite/gslt_image_threads_test.c
<br>
tools/gslite/gslt_image_tiff.c
<br>
tools/gslite/gslt_init.c
<br>
tools/gslite/gslt_test.c
<br>
tools/tt2pcl.c
<br>
tools/xps2tiff/xps2tiff/stdafx.h
<br>
xps/xpsgradient.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 23:40:49 +0200></a>
2011-04-19 23:40:49 +0200</strong>
<br>Tor Andersson <tor.andersson@artifex.com><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0b17959f31afe3baffbc328e7f92e88e634ad8b8">0b17959f31afe3baffbc328e7f92e88e634ad8b8</a>
<blockquote>

<br>
Introduce end-of-line normalization.
<br>

<br>
.gitattributes
<br>
.gitignore
<br>
COPYING.AFPL
<br>
gs/.gitignore
<br>
gs/Resource/Init/FAPIcidfmap
<br>
gs/Resource/Init/FAPIconfig
<br>
gs/Resource/Init/FAPIfontmap
<br>
gs/Resource/Init/gs_agl.ps
<br>
gs/Resource/Init/gs_mgl_e.ps
<br>
gs/Resource/Init/gs_mro_e.ps
<br>
gs/base/gdevplib.c
<br>
gs/base/gs_agl.h
<br>
gs/base/gs_mgl_e.h
<br>
gs/base/gs_mro_e.h
<br>
gs/base/gsicc_lcms2.c
<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/lcups.mak
<br>
gs/base/lcupsi.mak
<br>
gs/base/opdfread.h
<br>
gs/base/whitelst.c
<br>
gs/base/whitelst.h
<br>
gs/cups/libs/filter/image-colorspace.c
<br>
gs/doc/Details9.htm
<br>
gs/doc/GS9_Color_Management.tex
<br>
gs/doc/History9.htm
<br>
gs/doc/figures/Overview.eps
<br>
gs/expat/examples/elements.dsp
<br>
gs/expat/examples/outline.dsp
<br>
gs/expat/expat.dsw
<br>
gs/expat/lib/expat.dsp
<br>
gs/expat/lib/expat_static.dsp
<br>
gs/expat/lib/expatw.dsp
<br>
gs/expat/lib/expatw_static.dsp
<br>
gs/expat/tests/benchmark/benchmark.dsp
<br>
gs/expat/tests/benchmark/benchmark.dsw
<br>
gs/expat/xmlwf/xmlwf.dsp
<br>
gs/freetype/builds/win32/vc2005/freetype.sln
<br>
gs/freetype/builds/win32/vc2005/freetype.vcproj
<br>
gs/freetype/builds/win32/vc2008/freetype.sln
<br>
gs/freetype/builds/win32/vc2008/freetype.vcproj
<br>
gs/freetype/builds/win32/visualc/freetype.dsp
<br>
gs/freetype/builds/win32/visualc/freetype.dsw
<br>
gs/freetype/builds/win32/visualc/freetype.sln
<br>
gs/freetype/builds/win32/visualc/freetype.vcproj
<br>
gs/freetype/builds/win32/visualce/freetype.dsp
<br>
gs/freetype/builds/win32/visualce/freetype.dsw
<br>
gs/freetype/builds/win32/visualce/freetype.vcproj
<br>
gs/freetype/builds/wince/vc2005-ce/freetype.sln
<br>
gs/freetype/builds/wince/vc2005-ce/freetype.vcproj
<br>
gs/freetype/builds/wince/vc2008-ce/freetype.sln
<br>
gs/freetype/builds/wince/vc2008-ce/freetype.vcproj
<br>
gs/ghostscript-ufst.vcproj
<br>
gs/ghostscript.vcproj
<br>
gs/jasper/src/msvc/imgcmp.dsp
<br>
gs/jasper/src/msvc/imginfo.dsp
<br>
gs/jasper/src/msvc/jasper.dsp
<br>
gs/jasper/src/msvc/jasper.dsw
<br>
gs/jasper/src/msvc/jiv.dsp
<br>
gs/jasper/src/msvc/libjasper.dsp
<br>
gs/jpegxr/APP.rc
<br>
gs/jpegxr/APP.vcproj
<br>
gs/jpegxr/DLL.rc
<br>
gs/jpegxr/DLL.vcproj
<br>
gs/jpegxr/JPEG-XR.sln
<br>
gs/lcms/Delphi/Samples/MAKETEST.BAT
<br>
gs/lcms/Delphi/Samples/gamutchk.pas
<br>
gs/lcms/Projects/BorlandC_5.5/lcms.rc
<br>
gs/lcms/Projects/BorlandC_5.5/lcmsdll.lk
<br>
gs/lcms/Projects/BorlandC_5.5/lcmsdll.lst
<br>
gs/lcms/Projects/BorlandC_5.5/mklcmsdll.bat
<br>
gs/lcms/Projects/VC2005/Python.vcproj
<br>
gs/lcms/Projects/VC2005/Testbed.vcproj
<br>
gs/lcms/Projects/VC2005/icc2ps.vcproj
<br>
gs/lcms/Projects/VC2005/icclink.vcproj
<br>
gs/lcms/Projects/VC2005/icctrans.vcproj
<br>
gs/lcms/Projects/VC2005/jpegicc.vcproj
<br>
gs/lcms/Projects/VC2005/lcms.rc
<br>
gs/lcms/Projects/VC2005/lcms.sln
<br>
gs/lcms/Projects/VC2005/lcms.vcproj
<br>
gs/lcms/Projects/VC2005/lcmsdll.vcproj
<br>
gs/lcms/Projects/VC2005/tiffdiff.vcproj
<br>
gs/lcms/Projects/VC2005/tifficc.vcproj
<br>
gs/lcms/Projects/VC2008/Python.vcproj
<br>
gs/lcms/Projects/VC2008/Testbed.vcproj
<br>
gs/lcms/Projects/VC2008/icc2ps.vcproj
<br>
gs/lcms/Projects/VC2008/icclink.vcproj
<br>
gs/lcms/Projects/VC2008/icctrans.vcproj
<br>
gs/lcms/Projects/VC2008/jpegicc.vcproj
<br>
gs/lcms/Projects/VC2008/lcms.rc
<br>
gs/lcms/Projects/VC2008/lcms.sln
<br>
gs/lcms/Projects/VC2008/lcms.vcproj
<br>
gs/lcms/Projects/VC2008/lcmsdll.vcproj
<br>
gs/lcms/Projects/VC2008/tiffdiff.vcproj
<br>
gs/lcms/Projects/VC2008/tifficc.vcproj
<br>
gs/lcms/Projects/VC6/Python.dsp
<br>
gs/lcms/Projects/VC6/Python.plg
<br>
gs/lcms/Projects/VC6/Testbed.dsp
<br>
gs/lcms/Projects/VC6/Testbed.plg
<br>
gs/lcms/Projects/VC6/icc2ps.dsp
<br>
gs/lcms/Projects/VC6/icclink.dsp
<br>
gs/lcms/Projects/VC6/icctrans.dsp
<br>
gs/lcms/Projects/VC6/jpegicc.dsp
<br>
gs/lcms/Projects/VC6/lcms.dsp
<br>
gs/lcms/Projects/VC6/lcms.dsw
<br>
gs/lcms/Projects/VC6/lcms.rc
<br>
gs/lcms/Projects/VC6/lcmsdll.dsp
<br>
gs/lcms/Projects/VC6/tifficc.dsp
<br>
gs/lcms/Projects/VC7/Python.vcproj
<br>
gs/lcms/Projects/VC7/Testbed.vcproj
<br>
gs/lcms/Projects/VC7/icc2ps.vcproj
<br>
gs/lcms/Projects/VC7/icclink.vcproj
<br>
gs/lcms/Projects/VC7/icctrans.vcproj
<br>
gs/lcms/Projects/VC7/jpegicc.vcproj
<br>
gs/lcms/Projects/VC7/lcms.rc
<br>
gs/lcms/Projects/VC7/lcms.sln
<br>
gs/lcms/Projects/VC7/lcms.vcproj
<br>
gs/lcms/Projects/VC7/lcmsdll.vcproj
<br>
gs/lcms/Projects/VC7/tiffdiff.vcproj
<br>
gs/lcms/Projects/VC7/tifficc.vcproj
<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcxproj
<br>
gs/lcms2/utils/delphi/delphidemo.dpr
<br>
gs/lcms2/utils/delphi/delphidemo.dproj
<br>
gs/lcms2/utils/delphi/demo1.pas
<br>
gs/lcms2/utils/delphi/lcms2dll.pas
<br>
gs/lcms2/utils/matlab/icctrans.c
<br>
gs/lib/opdfread.ps
<br>
gs/libpng/contrib/visupng/VisualPng.dsp
<br>
gs/libpng/contrib/visupng/VisualPng.dsw
<br>
gs/libpng/contrib/visupng/VisualPng.rc
<br>
gs/libpng/projects/cbuilder5/libpng.bpf
<br>
gs/libpng/projects/cbuilder5/libpng.bpg
<br>
gs/libpng/projects/cbuilder5/libpng.bpr
<br>
gs/libpng/projects/cbuilder5/libpng.cpp
<br>
gs/libpng/projects/cbuilder5/libpngstat.bpf
<br>
gs/libpng/projects/cbuilder5/libpngstat.bpr
<br>
gs/libpng/projects/visualc6/libpng.dsp
<br>
gs/libpng/projects/visualc6/libpng.dsw
<br>
gs/libpng/projects/visualc6/pngtest.dsp
<br>
gs/libpng/projects/visualc71/libpng.sln
<br>
gs/libpng/projects/visualc71/libpng.vcproj
<br>
gs/libpng/projects/visualc71/pngtest.vcproj
<br>
gs/libpng/projects/visualc71/zlib.vcproj
<br>
gs/psi/dw64c.def
<br>
gs/psi/dwmain64.def
<br>
gs/psi/gsdll64.def
<br>
gs/psi/msvc.mak
<br>
gs/psi/msvc64.mak
<br>
gs/psi/nsisinst.nsi
<br>
gs/tiff/man/tiffcrop.1
<br>
gs/toolbin/color/halftone/README
<br>
gs/toolbin/color/halftone/halfttoning.sln
<br>
gs/toolbin/color/halftone/halfttoning/halftone.c
<br>
gs/toolbin/color/halftone/halfttoning/halfttoning.vcproj
<br>
gs/toolbin/color/icc_creator/ICC_Creator.sln
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.vcproj
<br>
gs/toolbin/color/icc_creator/ucr_bg.txt
<br>
gs/toolbin/gen_ldf_jb2.py
<br>
gs/toolbin/pdf_info.ps
<br>
gs/zlib/contrib/dotzlib/DotZLib.build
<br>
gs/zlib/contrib/dotzlib/DotZLib.sln
<br>
gs/zlib/contrib/dotzlib/DotZLib/AssemblyInfo.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/CodecBase.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/Deflater.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/DotZLib.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/DotZLib.csproj
<br>
gs/zlib/contrib/dotzlib/DotZLib/GZipStream.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/Inflater.cs
<br>
gs/zlib/contrib/dotzlib/DotZLib/UnitTests.cs
<br>
gs/zlib/contrib/masm686/match.asm
<br>
gs/zlib/contrib/masmx64/bld_ml64.bat
<br>
gs/zlib/contrib/masmx64/gvmat64.asm
<br>
gs/zlib/contrib/masmx64/inffas8664.c
<br>
gs/zlib/contrib/masmx64/inffasx64.asm
<br>
gs/zlib/contrib/masmx86/bld_ml32.bat
<br>
gs/zlib/contrib/masmx86/gvmat32.asm
<br>
gs/zlib/contrib/masmx86/gvmat32c.c
<br>
gs/zlib/contrib/masmx86/inffas32.asm
<br>
gs/zlib/contrib/masmx86/mkasm.bat
<br>
gs/zlib/contrib/vstudio/vc7/miniunz.vcproj
<br>
gs/zlib/contrib/vstudio/vc7/minizip.vcproj
<br>
gs/zlib/contrib/vstudio/vc7/testzlib.vcproj
<br>
gs/zlib/contrib/vstudio/vc7/zlib.rc
<br>
gs/zlib/contrib/vstudio/vc7/zlibstat.vcproj
<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.def
<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.sln
<br>
gs/zlib/contrib/vstudio/vc7/zlibvc.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/miniunz.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/minizip.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/testzlib.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/testzlibdll.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/zlib.rc
<br>
gs/zlib/contrib/vstudio/vc8/zlibstat.vcproj
<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.def
<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.sln
<br>
gs/zlib/contrib/vstudio/vc8/zlibvc.vcproj
<br>
gs/zlib/projects/visualc6/example.dsp
<br>
gs/zlib/projects/visualc6/minigzip.dsp
<br>
gs/zlib/projects/visualc6/zlib.dsp
<br>
gs/zlib/projects/visualc6/zlib.dsw
<br>
pl/dwimg.c
<br>
pl/dwimg.h
<br>
pl/dwmainc.c
<br>
pl/dwreg.c
<br>
pl/dwreg.h
<br>
pl/dwres.h
<br>
tools/Acrobat2Tiff/Acrobat2Tiff.sln
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff.vbproj
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Application.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Application.myapp
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/AssemblyInfo.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Resources.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Resources.resx
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Settings.Designer.vb
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/Acrobat2Tiff/Settings.settings
<br>
tools/Acrobat2Tiff/Acrobat2Tiff/bin/Release/Acrobat2Tiff.xml
<br>
tools/GOT/detag.c
<br>
tools/GOT/tagimage.c
<br>
tools/cmpi/cmpi.bkl
<br>
tools/cmpi/cmpi.cpp
<br>
tools/cmpi/cmpi.dsp
<br>
tools/cmpi/cmpi.dsw
<br>
tools/cmpi/cmpi.pro
<br>
tools/cmpi/cmpi.rc
<br>
tools/cmpi/cmpi.sln
<br>
tools/cmpi/cmpi.vcp
<br>
tools/cmpi/cmpi.vcproj
<br>
tools/cmpi/cmpi.vcw
<br>
tools/cmpi/descrip.mms
<br>
tools/cmpi/makefile.bcc
<br>
tools/cmpi/makefile.dmc
<br>
tools/cmpi/makefile.dms
<br>
tools/cmpi/makefile.dos
<br>
tools/cmpi/makefile.gcc
<br>
tools/cmpi/makefile.sc
<br>
tools/cmpi/makefile.unx
<br>
tools/cmpi/makefile.va
<br>
tools/cmpi/makefile.vc
<br>
tools/cmpi/makefile.wat
<br>
tools/xps2tiff/README
<br>
tools/xps2tiff/xps2tiff.sln
<br>
tools/xps2tiff/xps2tiff/AssemblyInfo.cpp
<br>
tools/xps2tiff/xps2tiff/stdafx.cpp
<br>
tools/xps2tiff/xps2tiff/stdafx.h
<br>
tools/xps2tiff/xps2tiff/xps2tiff.cpp
<br>
tools/xps2tiff/xps2tiff/xps2tiff.vcproj
<br>
win32/GhostPDL.sln
<br>
win32/language_switch.vcproj
<br>
win32/pcl.vcproj
<br>
win32/svg.vcproj
<br>
win32/xps.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 14:01:55 +0000></a>
2011-04-19 14:01:55 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1eadba53383fad842dbc5e72ca137914a83b63e6">1eadba53383fad842dbc5e72ca137914a83b63e6</a>
<blockquote>

<br>
Changes to localcluster code to attempt to implement bmpcmphead. This certainly
<br>
doesn't break anything, but I don't actually ever seem to get any differences
<br>
out when running bmpcmphead.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12408 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/localcluster/build.pl
<br>
gs/toolbin/localcluster/clustermaster.pl
<br>
gs/toolbin/localcluster/run.pl
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-19 10:06:23 +0000></a>
2011-04-19 10:06:23 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c9e506d7e910f6560c97a81de704296236a782cb">c9e506d7e910f6560c97a81de704296236a782cb</a>
<blockquote>

<br>
Fix for bug 692152.
<br>

<br>
We 'bend' the size of pattern tiles, against the spec, ostensibly to better
<br>
match Acrobat. The fix here is simply to avoid such bending in the case where
<br>
TilingType is 2. According to the spec, TilingType 2 says specifically not
<br>
to use the same device pixel size for every repeat of the pattern, and that
<br>
is exactly what we were doing.
<br>

<br>
This cures the original bug, and produces 464 changes in the cluster tests.
<br>
Some (like ps3cet/18-02B.PS) are clear progressions. Others are less obviously
<br>
improvements, but comparison with Acrobat (and discussion with Ken/Chris)
<br>
shows that it's no worse than before, just 'different'.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12405 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsptype1.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-18 22:58:18 +0000></a>
2011-04-18 22:58:18 +0000</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a05ab8a88d5bc33c068a8e05ecba5f1adf3f3645">a05ab8a88d5bc33c068a8e05ecba5f1adf3f3645</a>
<blockquote>

<br>
Fix reading of an embedded ICC profile from DSC comments and a
<br>
potential SEGV when the value of /N exceeds 8. Bug 692156.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12404 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/Resource/Init/gs_icc.ps
<br>
gs/psi/zcolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-18 20:34:34 +0000></a>
2011-04-18 20:34:34 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=64bfc773be69bd422c95bca132c47782a421dc3a">64bfc773be69bd422c95bca132c47782a421dc3a</a>
<blockquote>

<br>
Further movement toward getting fast thresholding operations working for CMYK output devices.  Addition of special op to detect if a device is a planar type, creation of threshold screen for all the planes and spatial resampling of color input to output resolution for portrait case.   A commit to get things in trunk before we convert from SVN to git.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12403 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevplib.c
<br>
gs/base/gxdevsop.h
<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxicolor.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-18 18:41:26 +0000></a>
2011-04-18 18:41:26 +0000</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=25152b1f7b5317ef1c3efd438a4d5ce26bcca5ba">25152b1f7b5317ef1c3efd438a4d5ce26bcca5ba</a>
<blockquote>

<br>
Consider any xref entry with 0 offset as a free entry. Earlier revisions
<br>
rebuilt the xref table when offset == 0 but generation != 0.
<br>
However, rebuilding is an unreliable process and should be avoided if
<br>
possible. Bug 692159.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12402 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-18 07:58:13 +0000></a>
2011-04-18 07:58:13 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7169dc6a5af38e1955c660813ed6e62392dc0deb">7169dc6a5af38e1955c660813ed6e62392dc0deb</a>
<blockquote>

<br>
Add a fallback check for libpaper support.
<br>

<br>
Older versions of autogen appear to have a bug which causes the AC_CHECK_LIB
<br>
macro to mis-identify the libpaper development library as being present when
<br>
it is not.
<br>

<br>
So add a second check check based on the presence of paper.h using
<br>
AC_CHECK_HEADER().
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12401 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/configure.ac
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-16 14:21:57 +0000></a>
2011-04-16 14:21:57 +0000</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=848275e2554bb57ebf2e12dabc47fc2922e7b877">848275e2554bb57ebf2e12dabc47fc2922e7b877</a>
<blockquote>

<br>
Instead of searching for %%EOF marker (which is often damaged) and browsing the
<br>
file backwards, search for 'startxref' and take the next token as an xref
<br>
position. Besides fixing the reported bug, this greatly simplifies the search
<br>
for xref position. Bug 692153.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12400 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/Resource/Init/pdf_base.ps
<br>
gs/Resource/Init/pdf_main.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-14 20:59:18 +0000></a>
2011-04-14 20:59:18 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3be81f880b7f0a31d3c213ad4245d0bbfeb0b5ef">3be81f880b7f0a31d3c213ad4245d0bbfeb0b5ef</a>
<blockquote>

<br>
code to support rendering color source images to a mono device using thresholding.  The code is currently disabled pending additional testing.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12397 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gxicolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-13 22:17:12 +0000></a>
2011-04-13 22:17:12 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4a3666ee2833e877a26ef75fece00fd6fad14c93">4a3666ee2833e877a26ef75fece00fd6fad14c93</a>
<blockquote>

<br>
Reorganization of thresholding code to make it easier to get the threshold operation working for color images as input as well as the case when we go to a cmyk planar device.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12396 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gxht_thresh.c
<br>
gs/base/gxht_thresh.h
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-13 16:21:07 +0000></a>
2011-04-13 16:21:07 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3791878570227c7f5f1c07891c066fab3db2e5d3">3791878570227c7f5f1c07891c066fab3db2e5d3</a>
<blockquote>

<br>
Fix reference counting of compositors in clist rendering; previously
<br>
the code assumed that it was the only claimant of a compositor and
<br>
closed/freed the device regardless of the reference count.
<br>

<br>
Cluster testing shows no differences.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12394 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gxclrast.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-13 13:30:03 +0000></a>
2011-04-13 13:30:03 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=29ff2a6f7d27ac9b19887ecc9243a6a8bc6aa9b8">29ff2a6f7d27ac9b19887ecc9243a6a8bc6aa9b8</a>
<blockquote>

<br>
Fix (pdfwrite) : Restore TT->CIDFOnt conversion
<br>

<br>
When creating PDF/A output, the Acrobat pre-flight tool throws out subset TrueType fonts
<br>
which are symbolic. Its not clear why, since the spec says that subset TrueType fonts
<br>
are permitted and does not require any additional information (such as /CharSet for
<br>
type 1 fonts).
<br>

<br>
If we instead create a CIDFont with a CIDSet, then the pre-flight tool is happy (and
<br>
also, usefully, doesn't complain about multiple CMAP subtables), so here we spot
<br>
that there is no preferred Encoding (always the case with Symbolic fonts) and make
<br>
the conversion.
<br>

<br>
No differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12393 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevpdtf.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-13 04:47:52 +0000></a>
2011-04-13 04:47:52 +0000</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=124ab469aa0ad450a46d909e99c1b5d7072e646b">124ab469aa0ad450a46d909e99c1b5d7072e646b</a>
<blockquote>

<br>
Fix for PCL when NumRenderingThreads > 0. PCL uses a memory allocator that is
<br>
not thread safe (chunk memory) but the mt rendering needs a thread safe base
<br>
allocator since the main thread may be allocating as well as the rendering
<br>
threads. This problem was seen with a couple of 'performance' documents, but
<br>
could fail on any document. Bug 692111 for customer #661.
<br>

<br>
cluster testing showed no regressions, as expected since it didn't use MT
<br>
rendering.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12392 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsalloc.c
<br>
gs/base/gsmalloc.c
<br>
gs/base/gsmchunk.c
<br>
gs/base/gsmemlok.c
<br>
gs/base/gsmemory.h
<br>
gs/base/gsmemret.c
<br>
gs/base/gxclread.c
<br>
gs/base/gxclthrd.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 20:08:59 +0000></a>
2011-04-12 20:08:59 +0000</strong>
<br>Ray Johnston &lt;ray.johnston@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=fdac37730cb0f86e8cd1efad2c49243c5ea5ec0b">fdac37730cb0f86e8cd1efad2c49243c5ea5ec0b</a>
<blockquote>

<br>
Add some more useful stuff to pdf_info.ps: Default dumps Media paramters and
<br>
fonts that are needed, but not embedded and standard fonts. Media parameters
<br>
now include Rotate value and states if the page has transparency.
<br>

<br>
Also allow this to be used more conveniently with the -- syntax:
<br>
gs {-q} -- toolbin/pdf_info.ps  inputfile.pdf
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12391 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/pdf_info.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 15:19:15 +0000></a>
2011-04-12 15:19:15 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=78bb9a6585153e2cf0cbcc689706cd89d68b5b7b">78bb9a6585153e2cf0cbcc689706cd89d68b5b7b</a>
<blockquote>

<br>
Fix PostScript colour handling
<br>

<br>
    Bug #692116 &quot;gs crash while executing stop operator&quot;
<br>

<br>
The problem was caused by a mismatch between the graphics library and the PostScript
<br>
interpreter. When executing setcachedevice the graphcis library can set the colour
<br>
space to DeviceGray. Because it is unaware of the 'higher level' members of the graphics
<br>
state which belong to the PostScript interpreter it does not, and cannot, set the
<br>
*PostScript* graphics state colour space to the same space.
<br>

<br>
Normally this does not matter, because after the glyph is complete the colour space is
<br>
restored. However, if a currentgray/currentrgb/currentcmyk operator is executed after
<br>
the graphics library has set the space to DeviceGray, but before it has restored the
<br>
space, then the PostScript space will be incorrect. This leads to the PostScript
<br>
handling trying to access more elements from the stack than 'currentcolor' put there
<br>
(currentcolor uses the underlying space, not the PostScript space), and causes errors.
<br>

<br>
There isn't a really good way to handle this, because we can't put information about
<br>
the PostScript state into the graphics library. So I've chosen to check the underlying
<br>
colour space when processing currentgray etc, and if the space in the graphics
<br>
library is DeviceGray and does not match the expected PostScript space, then instead
<br>
of raising an error we proceed as if the PostScript space had been DeviceGray all
<br>
along.
<br>

<br>
No differences expected
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12389 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/zcolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 09:12:59 +0000></a>
2011-04-12 09:12:59 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b48fe7a0a2bd2aa49cd6cbf0ec5de3abcab7c89">1b48fe7a0a2bd2aa49cd6cbf0ec5de3abcab7c89</a>
<blockquote>

<br>
Fix the GS_LIB registry value.
<br>

<br>
    The GS_LIB registry entry was missing the &quot;lib&quot; directory.
<br>

<br>
Also, tidy up some of the uninstall rules.
<br>

<br>
No cluster differences.
<br>

<br>
Bug 692140
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12388 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/nsisinst.nsi
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 06:44:27 +0000></a>
2011-04-12 06:44:27 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f0a9ab32440ecade2d301187489805284cbf1a9d">f0a9ab32440ecade2d301187489805284cbf1a9d</a>
<blockquote>

<br>
Forgot to save the readme
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12387 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/color/icc_creator/README.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 06:38:17 +0000></a>
2011-04-12 06:38:17 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d90c248c90cb8e12c6613d32b347846a64f91ca6">d90c248c90cb8e12c6613d32b347846a64f91ca6</a>
<blockquote>

<br>
Addition of one more profile, which is a CMYK profile but which only outputs in the K channel and a ifdef in the code to generate this thing.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12386 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/color/icc_creator/ICC Profiles/cmyk_k_ouput_only.icc
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.cpp
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 06:17:59 +0000></a>
2011-04-12 06:17:59 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a031163dc9ada140b6e606582c29c9515fc7d839">a031163dc9ada140b6e606582c29c9515fc7d839</a>
<blockquote>

<br>
Fix for an issue related to white point for the cmyk profile also fix for when UCR/BG is used in the profile creation.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12385 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/color/icc_creator/ICC Profiles/ps_emulate_cmyk.icc
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.cpp
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 05:11:30 +0000></a>
2011-04-12 05:11:30 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6acec66087ba2de2d99c42c9e1d33cdb89473089">6acec66087ba2de2d99c42c9e1d33cdb89473089</a>
<blockquote>

<br>
Addition of ICC profiles that properly emulate the PS color mappings
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12384 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/color/icc_creator/ICC Profiles/ps_emulate_cmyk.icc
<br>
gs/toolbin/color/icc_creator/ICC Profiles/ps_emulate_gray.icc
<br>
gs/toolbin/color/icc_creator/ICC Profiles/ps_emulate_rgb.icc
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-12 05:02:03 +0000></a>
2011-04-12 05:02:03 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=151535c554165c2f03fbe07098cc45fb0b341f67">151535c554165c2f03fbe07098cc45fb0b341f67</a>
<blockquote>

<br>
Fix for bugs in ICC creator tool related primarily to the CMYK profile for simulating PS color conversions.  Added in a option so that we do the CPSI like conversion and also added in the ability to define UCR/BG and pack those mappings into ICC profiles.  These fixes were needed to take care of an issue found by customer 850.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12383 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/color/halftone/README
<br>
gs/toolbin/color/icc_creator/ICC_Creator/CIELAB.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp
<br>
gs/toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.cpp
<br>
gs/toolbin/color/icc_creator/ICC_Creator/icc_create.h
<br>
gs/toolbin/color/icc_creator/ICC_Creator/resource.h
<br>
gs/toolbin/color/icc_creator/README.txt
<br>
gs/toolbin/color/icc_creator/ucr_bg.txt
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-11 15:59:22 +0000></a>
2011-04-11 15:59:22 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=4509a49f66c24f3a5590aadaaee30325676df877">4509a49f66c24f3a5590aadaaee30325676df877</a>
<blockquote>

<br>
Fix (colour handling) : crash when executing 'stop'
<br>

<br>
This is part of the fix for bug #692116. The crash in that report is caused because the
<br>
continuation procedures for the colour handling are sometimes pushed with a
<br>
push_mark_estack where the opproc has a value of 0. This is not valid and I always
<br>
intended to fix it, but forgot.
<br>

<br>
This changes all uses of push_mark_estack so that the opproc is set to a valid routine
<br>
which does nothing, thus solving the crash and exposing the real problem. The only
<br>
reason we get a crash is because we are executing stop as part of the error handler,
<br>
because currentgray returned an error.
<br>

<br>
No differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12382 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/zcolor.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-09 07:06:43 +0000></a>
2011-04-09 07:06:43 +0000</strong>
<br>Alex Cherepanov &lt;alex.cherepanov@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6cb2c7110447967b01f19415ae0ff0f8dd1a251b">6cb2c7110447967b01f19415ae0ff0f8dd1a251b</a>
<blockquote>

<br>
Add special processing for a broken PDF file that uses bare stream
<br>
dictionaries instead of ICCBased color space arrays. Bug 692213.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12381 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/Resource/Init/pdf_draw.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-08 17:03:54 +0000></a>
2011-04-08 17:03:54 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=0791cc859ad38053ab3d3eef50169ac259f771cb">0791cc859ad38053ab3d3eef50169ac259f771cb</a>
<blockquote>

<br>
Fix for x11alpha device when the source file has transparency.  Two issues existed.  One, found by henry, was that the target device of the x11alpha device was not inheriting the icc profile of the x11alpha device.  The other was that the x11alpha device was using the bbox compositor procedure, which has some operations in it related to checking if the device has a target and the pdf14 device will target the target of the bbox device.  This is not what we want for the x11alpha device.   This should fix a lot of the x11alpha bugs  Basically any source files that had transparency would have failed prior to this fix.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12380 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevxini.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-08 13:34:53 +0000></a>
2011-04-08 13:34:53 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=507cbee1403b20b2c3fec692f746f41d9d985566">507cbee1403b20b2c3fec692f746f41d9d985566</a>
<blockquote>

<br>
Fix Bug 692129. If an image is scaled to zero height and interpolation
<br>
is on, we end up mallocing a zero byte buffer and then overrunning it.
<br>

<br>
The fix is to detect this scaling, and still allocate a 1 pixel high
<br>
buffer.
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12378 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/siscale.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-08 08:48:17 +0000></a>
2011-04-08 08:48:17 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1b6c7591e0f62007e4cf690d2f2fcbb56be9f989">1b6c7591e0f62007e4cf690d2f2fcbb56be9f989</a>
<blockquote>

<br>
Fix GSLite : update to changes in decode_glyph method
<br>

<br>
Revision 12374 altered the decode_glyph font method to take an additional parameter,
<br>
the character code. This commit updates the GSLite code routines to take the extra
<br>
parameter
<br>

<br>
No differences expected, I don't think this is tested (or even compiled)
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12377 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
tools/gslite/gslt_font_api.c
<br>
tools/gslite/gslt_font_cff.c
<br>
tools/gslite/gslt_font_ttf.c
<br>
tools/gslite/gslt_test.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-08 08:36:35 +0000></a>
2011-04-08 08:36:35 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=cc053e229b4a2dd03ff83673bfb819be51e970c3">cc053e229b4a2dd03ff83673bfb819be51e970c3</a>
<blockquote>

<br>
Fix XPS and PCL interpreters : Change to decode_glyph routine
<br>

<br>
The decode_glyph font method was changed to pass in the character code in revision
<br>
12374, but I missed the fact that these methods also exist in the XPS and PCL
<br>
interpreters.
<br>

<br>
This revision simply updates the methods with the additional parameter.
<br>

<br>
No differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12376 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
pl/plfont.c
<br>
xps/xpscff.c
<br>
xps/xpsttf.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-07 15:52:45 +0000></a>
2011-04-07 15:52:45 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a69dfc3caebd4f16ab8ba7f1c888bdbed6e5dbce">a69dfc3caebd4f16ab8ba7f1c888bdbed6e5dbce</a>
<blockquote>

<br>
Resolve a path problem when running mkcidfm.ps.
<br>

<br>
mkcidfm.ps did not handle the path to the Windows
<br>
font directory using back slash directory delimiters
<br>
so the nsis script now replaces all the back slash
<br>
delimiters with forward slash, with which mkcidfm.ps
<br>
works correctly.
<br>

<br>
Bug 691511
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12375 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/nsisinst.nsi
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-07 15:48:21 +0000></a>
2011-04-07 15:48:21 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=24c562b9bcedcd9e6bd1d63a06c09eba52a24cbd">24c562b9bcedcd9e6bd1d63a06c09eba52a24cbd</a>
<blockquote>

<br>
Fix (pdfwrite) : Not using ToUnicode CMaps under some conditions
<br>

<br>
    Bug #692119 &quot;Cannot copy text from Ghostscript generated PDF/A document&quot;
<br>

<br>
The PDF interpreter converts ToUnicode CMaps into GlyphNames2Unicode dictionaries, to
<br>
do this it uses the Encoding to convert the character codes into glyph names. Of course
<br>
for CIDFonts we don't want to do this, and so when there is no Encoding we instead
<br>
put the Unicode value directly into the dictionary using the CID as an index.
<br>

<br>
If the font has no Encoding (which is optional in PDF) then we do the same for a
<br>
regular font. However, by the time pdfwrite sees the font we have had to add an Encoding
<br>
as its not valid for us to define a regular font with no Encoding.
<br>

<br>
So pdfwrite converts the character code into a (bogus) glyph name, and then tries to
<br>
look up that glyph name in the GlyphNames2Unicode dictionary. Obviously this fails.
<br>

<br>
I've extended the 'decode_glyph' call so that it takes both the glyph name and the
<br>
character code, for CID fonts the character code is always -1. If the glyph name can't
<br>
be found in the GlyphNames2Unicode dictionary then we try to use the character code
<br>
instead.
<br>

<br>
This works for this test case, and I don't think its likely to produce worse results
<br>
than the old code. Regression tests show no differences, but since they don't test
<br>
ToUnicode CMaps they weren't expected to. My own tests seem to be OK but I can't say
<br>
I'm terribly sure about this one.
<br>

<br>
Expected Differences
<br>
None
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12374 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevpdtc.c
<br>
gs/base/gdevpdte.c
<br>
gs/base/gsfont.c
<br>
gs/base/gxfont.h
<br>
gs/psi/bfont.h
<br>
gs/psi/zbfont.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-07 03:30:16 +0000></a>
2011-04-07 03:30:16 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=8170bf69742a320e7e28bffa58cbf0f0f14f2eb0">8170bf69742a320e7e28bffa58cbf0f0f14f2eb0</a>
<blockquote>

<br>
Fix for 692123.  It was necessary to make sure that the blending state of the pdf14 device is updated when we have the alpha buffer device installed in front of the pdf14 device.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12373 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gspaint.c
<br>
gs/base/gstrans.c
<br>
gs/base/gstrans.h
<br>
gs/base/gxdevsop.h
<br>
gs/base/lib.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-06 18:33:27 +0000></a>
2011-04-06 18:33:27 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c03e320614893bb304b6c63e02a597d0153df031">c03e320614893bb304b6c63e02a597d0153df031</a>
<blockquote>

<br>
Change lcms2 memory handling and update lib.
<br>

<br>
As of this commit, we can (and do) run a completely unchanged library.
<br>

<br>
This includes our tiny tweak to be able to get the input/output formats for
<br>
a given transform. Also update our interface code so that we use the plugin
<br>
mechanism to redirect malloc/free etc through us rather than hacking the
<br>
code direct. Thanks to Marti Maria for both of these.
<br>

<br>
No cluster changes as this code is not tested. CLUSTER_UNTESTED.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12372 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_lcms2.c
<br>
gs/lcms2/AUTHORS
<br>
gs/lcms2/ChangeLog
<br>
gs/lcms2/Makefile.in
<br>
gs/lcms2/configure
<br>
gs/lcms2/configure.ac
<br>
gs/lcms2/doc/LittleCMS2.1 API.pdf
<br>
gs/lcms2/include/Makefile.in
<br>
gs/lcms2/include/lcms2.h
<br>
gs/lcms2/src/Makefile.in
<br>
gs/lcms2/src/cmscnvrt.c
<br>
gs/lcms2/src/cmserr.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/lcms2_internal.h
<br>
gs/lcms2/testbed/Makefile.in
<br>
gs/lcms2/utils/jpgicc/Makefile.in
<br>
gs/lcms2/utils/linkicc/Makefile.in
<br>
gs/lcms2/utils/linkicc/linkicc.1
<br>
gs/lcms2/utils/linkicc/linkicc.c
<br>
gs/lcms2/utils/psicc/Makefile.in
<br>
gs/lcms2/utils/tificc/Makefile.in
<br>
gs/lcms2/utils/transicc/Makefile.in
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-06 17:41:50 +0000></a>
2011-04-06 17:41:50 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a54df2d2b0e78777a037ceacfba76dd47d9993d3">a54df2d2b0e78777a037ceacfba76dd47d9993d3</a>
<blockquote>

<br>
Resolve a crash to due an unexpected CMap object type.
<br>

<br>
The code was not checking that the CMap object was a string or an array (of
<br>
strings) before trying read bytes from it. If the CMap actually turned out
<br>
to be an unexpected object, such as an integer, it would cause a crash.
<br>

<br>
Credit to Ken Sharp for the patch.
<br>

<br>
Bug 692124
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12371 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-06 12:13:55 +0000></a>
2011-04-06 12:13:55 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d97f8c354d97c8ec941c2d4b702b7d17ab0e03b3">d97f8c354d97c8ec941c2d4b702b7d17ab0e03b3</a>
<blockquote>

<br>
Fix (ps2write/pdfwrite) : bitmapped font problem
<br>

<br>
When producing an inline image representing a glyph which could not be embedded as text,
<br>
the code emitted the matrix setup for the image before opening the context. If there
<br>
was (for example) a pending text operation this caused the matrix setup to appear in
<br>
the text context instead of the image context, leading to the image disappearing.
<br>

<br>
Opening the image context before emitting the matrix solves the problem.
<br>

<br>
Expected Differences
<br>
The output from ps2write (resolution = 300 dpi) with the file
<br>
'metrics_no_bbox.ps'
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12370 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevpdfb.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-05 15:01:49 +0000></a>
2011-04-05 15:01:49 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2d72418b094cb62501d6af82a845848d01134119">2d72418b094cb62501d6af82a845848d01134119</a>
<blockquote>

<br>
The FAPI code was relying on the result of gx_compute_text_oversampling()
<br>
to ascertain whether anti-aliasing is in force.
<br>

<br>
This is insufficient, as it turns out, and we actually need to base the
<br>
decision on the alpha bits as requested by the device.
<br>

<br>
No cluster differences expected.
<br>

<br>
Bug 692120.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12369 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/zfapi.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-04 16:33:13 +0000></a>
2011-04-04 16:33:13 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f4a6e441bbe26758d4d3d9c62c369fde2b0e9643">f4a6e441bbe26758d4d3d9c62c369fde2b0e9643</a>
<blockquote>

<br>
Squash some warnings in the lcms v2 interface code. No expected differences.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12368 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_lcms2.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-04 14:42:57 +0000></a>
2011-04-04 14:42:57 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b359a954d93cd140b3e000c107854b021ccd9189">b359a954d93cd140b3e000c107854b021ccd9189</a>
<blockquote>

<br>
Squash 4 warnings in the lcmvs v1 stuff.
<br>

<br>
No cluster differences expected (and testing shows none, so CLUSTER_UNTESTED).
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12367 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_manage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-04 07:40:55 +0000></a>
2011-04-04 07:40:55 +0000</strong>
<br>Ken Sharp &lt;ken.sharp@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=1f92f1449bf208c8f7a878c8f149ca67cd62ab49">1f92f1449bf208c8f7a878c8f149ca67cd62ab49</a>
<blockquote>

<br>
Alter the generation of Decode array entries for images using Indexed colour spaces by
<br>
using bit shifting instead of simple 'exp' operator.
<br>

<br>
No differences expected, code is equivalent.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12366 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/opdfread.h
<br>
gs/lib/opdfread.ps
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:40:27 +0000></a>
2011-04-03 20:40:27 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b58247cecc1fd272e12adc26890d912346dd92c5">b58247cecc1fd272e12adc26890d912346dd92c5</a>
<blockquote>
<p>
    Bug 689093 #21/ HTML compatibility:
<br>
    Do not use SHORTTAGS (the &quot;&lt;tag ... /&gt;&quot; form) in HTML.
<br>

<br>
Bug 689093 #21/ HTML compatibility
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12365 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Drivers.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:39:48 +0000></a>
2011-04-03 20:39:48 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=d52ff94dea3bb3db0dc4c9ee1c8e89d48b1fb7ed">d52ff94dea3bb3db0dc4c9ee1c8e89d48b1fb7ed</a>
<blockquote>

<br>
Bug 689093 #20/ HTML compatibility
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12364 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Changes.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/Hershey.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
gs/doc/index.html
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:39:13 +0000></a>
2011-04-03 20:39:13 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=591b83fa9500a99ff8d24ddd7aa8962bd44312d6">591b83fa9500a99ff8d24ddd7aa8962bd44312d6</a>
<blockquote>

<br>
Bug 689093 #19/ CSS conformance:
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12363 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/gs.css
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:39:01 +0000></a>
2011-04-03 20:39:01 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=464ee97310cd5c003d3683f2a2ceb16691394813">464ee97310cd5c003d3683f2a2ceb16691394813</a>
<blockquote>

<br>
Bug 689093 #18bis/ SVN damage:
<br>
Replace ijs\ijs_spec.pdf, with a good copy.
<br>

<br>
This file is currently damaged in the SVN Repository. The damage seem to have
<br>
happened during the conversion of the Repository from CVS to Subversion. This copy
<br>
of the file comes from the last CVS version available; the copy in the 1st SVN
<br>
    checkout I have is already damaged. Note the &quot;/CreationDate&quot; inside the pdf is the
<br>
same as in the current (damaged) version and the last change to this file is very
<br>
old, so this file's substantive content did not change after the migration to SVN.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12362 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/ijs/ijs_spec.pdf
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:38:09 +0000></a>
2011-04-03 20:38:09 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bbb639d51f543398c6e318075656af4857ad58b5">bbb639d51f543398c6e318075656af4857ad58b5</a>
<blockquote>
<p>
    Bug 689093 #18/ SVN damage:
<br>
<br>

<br>
    This patch changes files that contain &quot;$Id...&quot; as text in order to
<br>
    protect the apparent keyword from being expanded by SubVersion. The
<br>
    methods used are as follows:
<br>
    - for HTML: use the numeric entity "&#36;" instead of &quot;$&quot;.
<br>
    - for C and Python: if the parser finds 2 consecutive string
<br>
      literals, separated by nothing but whitespace, then it
<br>
      automatically treats them as if it were a single, longer, string
<br>
      obtained from concatenating the 2 original ones. Thus, the patch
<br>
      replaces '"$Id"' =&gt; '"$" "Id$"'.
<br>

<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12361 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/scfdgen.c
<br>
gs/doc/C-style.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Hershey.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Use.htm
<br>
gs/toolbin/gen_ldf_jb2.py
<br>
gs/toolbin/split_changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:27:35 +0000></a>
2011-04-03 20:27:35 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5ff3a16a18372eff2b65054ced9b0cd283ad1ea9">5ff3a16a18372eff2b65054ced9b0cd283ad1ea9</a>
<blockquote>

<br>
<br>
    looks like a SVN keyword, toolbin\split_changelog.py outputs it as-is
<br>
    to HTML and later SVN expands it as a keyword. The result is the text
<br>
    displayed differs. This patch extends the substitutions done for
<br>
    character entities to include &quot;$&quot; =&gt; "&#36;"; there won't be any
<br>
    &quot;$&quot;-as-text, and thus no "$Keyword..$"-as-text, anymore.
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12360 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/split_changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:25:28 +0000></a>
2011-04-03 20:25:28 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=5b7d759adc6fb7f5ab85b72c195aaa4cc8a9882b">5b7d759adc6fb7f5ab85b72c195aaa4cc8a9882b</a>
<blockquote>

<br>
    toolbin\split_changelog.py encodes text coming from log messages as
<br>
    utf-8. The patch changes it to output a &quot;&lt;meta/&gt;&quot; element specifying
<br>
    the charset used, otherwise browsers that are not set for utf-8 by
<br>
    default won't necessarily display the file correctly [if message
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12359 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Details.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/toolbin/split_changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:25:06 +0000></a>
2011-04-03 20:25:06 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=399081713e3314b04fa4404e870434f0bacb4590">399081713e3314b04fa4404e870434f0bacb4590</a>
<blockquote>

<br>
Bug 689093 #15 (note: there's no #14)/ HTML conformance
<br>
    explicitly declare the encoding used. Files Details(|8|9).htm and
<br>
    History(8|9).htm may need extended characters coming from commit logs, and will
<br>
    be handled by a later patch. Other files only need 7-bit ASCII.
<br>

<br>
    This patch also contains a small change not related to HTML-conformance:
<br>
    a missing space in doc\Language.htm (&quot;... for[NO SPACE HERE]1-, ...&quot;).
<br>

<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12358 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Language.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/Ps2pdf.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:24:56 +0000></a>
2011-04-03 20:24:56 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ce833816683f46ec1acd966c4c86a01a33b2f687">ce833816683f46ec1acd966c4c86a01a33b2f687</a>
<blockquote>
<p>
    Bug 689093 #13/ HTML conformance:
<br>
    'align=&quot;middle&quot;' should be 'align=&quot;center&quot;'
<br>

<br>
    &quot;Middle&quot; is only for vertical alignment (&quot;valign=&quot;); for the
<br>
    horizontal alignment use &quot;center&quot;.
<br>

<br>
    git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12357 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Deprecated.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:24:48 +0000></a>
2011-04-03 20:24:48 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=394631da0981713367ca2472be75445bd0fb0d56">394631da0981713367ca2472be75445bd0fb0d56</a>
<blockquote>

<br>
Bug 689093 #12 (note: there's no #11)/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12356 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Changes.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:24:30 +0000></a>
2011-04-03 20:24:30 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a17d948ba8edffee3d5cdd710ed495da93d72bda">a17d948ba8edffee3d5cdd710ed495da93d72bda</a>
<blockquote>

<br>
Bug 689093 #10/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12355 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:24:19 +0000></a>
2011-04-03 20:24:19 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=01a5f1374998c9d24e021ee8851ae36cb58a8230">01a5f1374998c9d24e021ee8851ae36cb58a8230</a>
<blockquote>

<br>
Bug 689093 #09/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12354 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:24:04 +0000></a>
2011-04-03 20:24:04 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2692aa2af43e7f1d3655fabad728ceca9157f9b5">2692aa2af43e7f1d3655fabad728ceca9157f9b5</a>
<blockquote>

<br>
Bug 689093 #08/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12353 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Details8.htm
<br>
gs/doc/History8.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:23:39 +0000></a>
2011-04-03 20:23:39 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7215a52b4ae31ceb807da776b2c06f368dc9e275">7215a52b4ae31ceb807da776b2c06f368dc9e275</a>
<blockquote>

<br>
Bug 689093 #07/ HTML conformance
<br>
gs/doc/Details.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:22:54 +0000></a>
2011-04-03 20:22:54 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=9be02f9987043d2f1c4ea6bb1da403e9bbeaa535">9be02f9987043d2f1c4ea6bb1da403e9bbeaa535</a>
<blockquote>

<br>
Bug 689093 #06/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12351 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/split_changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:22:27 +0000></a>
2011-04-03 20:22:27 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=33674899f2fca8b2ed947862131bc57eb99c749a">33674899f2fca8b2ed947862131bc57eb99c749a</a>
<blockquote>

<br>
Bug 689093 #05/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12350 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Use.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:21:59 +0000></a>
2011-04-03 20:21:59 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=6b853264c8be1ce8efdf0f511889647d2e3251fa">6b853264c8be1ce8efdf0f511889647d2e3251fa</a>
<blockquote>

<br>
Bug 689093 #04/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12349 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Details8.htm
<br>
gs/doc/History8.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:21:48 +0000></a>
2011-04-03 20:21:48 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=24d88fd4b1c8c57e01ba295de69b6ff8a7c3431b">24d88fd4b1c8c57e01ba295de69b6ff8a7c3431b</a>
<blockquote>

<br>
Bug 689093 #03/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12348 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/split_changelog.py
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:20:32 +0000></a>
2011-04-03 20:20:32 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=81cda2e93b17532409bdea39168db92bf2552919">81cda2e93b17532409bdea39168db92bf2552919</a>
<blockquote>

<br>
Bug 689093 #02/ HTML conformance:
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12347 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/API.htm
<br>
gs/doc/C-style.htm
<br>
gs/doc/Commprod.htm
<br>
gs/doc/DLL.htm
<br>
gs/doc/Deprecated.htm
<br>
gs/doc/Details8.htm
<br>
gs/doc/Details9.htm
<br>
gs/doc/Develop.htm
<br>
gs/doc/Devices.htm
<br>
gs/doc/Drivers.htm
<br>
gs/doc/Fonts.htm
<br>
gs/doc/Helpers.htm
<br>
gs/doc/History1.htm
<br>
gs/doc/History2.htm
<br>
gs/doc/History3.htm
<br>
gs/doc/History4.htm
<br>
gs/doc/History5.htm
<br>
gs/doc/History6.htm
<br>
gs/doc/History7.htm
<br>
gs/doc/History8.htm
<br>
gs/doc/History9.htm
<br>
gs/doc/Install.htm
<br>
gs/doc/Issues.htm
<br>
gs/doc/Language.htm
<br>
gs/doc/Lib.htm
<br>
gs/doc/Make.htm
<br>
gs/doc/News.htm
<br>
gs/doc/Projects.htm
<br>
gs/doc/Ps-style.htm
<br>
gs/doc/Ps2epsi.htm
<br>
gs/doc/Ps2pdf.htm
<br>
gs/doc/Ps2ps2.htm
<br>
gs/doc/Psfiles.htm
<br>
gs/doc/Readme.htm
<br>
gs/doc/Release.htm
<br>
gs/doc/Source.htm
<br>
gs/doc/Unix-lpr.htm
<br>
gs/doc/Use.htm
<br>
gs/doc/Xfonts.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-03 20:19:46 +0000></a>
2011-04-03 20:19:46 +0000</strong>
<br>Gheorghe Savulescu &lt;sags@ghostscript.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a5a20b7b8c0443ac5fd8c88bdb3af37390e4bf5c">a5a20b7b8c0443ac5fd8c88bdb3af37390e4bf5c</a>
<blockquote>

<br>
Bug 689093 #01/ HTML conformance
<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12346 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/toolbin/makehist.tcl
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 23:17:22 +0000></a>
2011-04-01 23:17:22 +0000</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2674c673a3f4f29c9ca1620c36a97e0bd89c0e18">2674c673a3f4f29c9ca1620c36a97e0bd89c0e18</a>
<blockquote>

<br>
Remove temporary development definition used to identify the graphics
<br>
library supported the new ICC code.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12345 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_manage.h
<br>
pcl/pctop.c
<br>
pxl/pxgstate.c
<br>
pxl/pxpthr.c
<br>
pxl/pxtop.c
<br>
xps/xpstop.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 22:58:42 +0000></a>
2011-04-01 22:58:42 +0000</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ad470fdd8c23d7597260ec1c068da69075e1d7f8">ad470fdd8c23d7597260ec1c068da69075e1d7f8</a>
<blockquote>

<br>
Fixes 691870 where the banding code was using an ICC color and the
<br>
    &quot;setcolorspace&quot; so the image type was not being set to icc, we do this
<br>
"setcolorspace" so the image type was not being set to icc, we do this
<br>
now explicitly in the PCL/XL code now.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12344 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
pxl/pxgstate.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 18:42:42 +0000></a>
2011-04-01 18:42:42 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a51bd3e408207936f0e795280a71253695a9d57e">a51bd3e408207936f0e795280a71253695a9d57e</a>
<blockquote>

<br>
Add 2 files missed in commit 12341. These ones WILL have mattered.
<br>
Apoligies for this. A combination of git svn eating my first attempt
<br>
at committing it, and my own base level of incompetence caused this.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12343 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_cms.h
<br>
gs/base/gsicc_lcms.c
<br>
gs/base/lcms2.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 18:38:52 +0000></a>
2011-04-01 18:38:52 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3ce17fce356461895d536c65d39defdb0137b06">b3ce17fce356461895d536c65d39defdb0137b06</a>
<blockquote>

<br>
Add file that somehow got missed in the lcms2 commit (r12340).
<br>

<br>
Not enabled by default so CLUSTER_UNTESTED.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12342 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsicc_lcms2.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 18:05:33 +0000></a>
2011-04-01 18:05:33 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b3703b36cb5544d9defd00780d814caed4eae5b4">b3703b36cb5544d9defd00780d814caed4eae5b4</a>
<blockquote>

<br>
Fix so that we have proper antialiasing with softmasks.  Fixes bug 687674
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12341 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 18:00:12 +0000></a>
2011-04-01 18:00:12 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=50ecc84d5463bd013f794a9dd53254c2e295a85e">50ecc84d5463bd013f794a9dd53254c2e295a85e</a>
<blockquote>

<br>
Initial import of LittleCMS v2.1 into the Ghostscript/GhostPDL
<br>
build, with simple integration. LittleCMS version 1 is still used by default,
<br>
so no cluster differences expected.
<br>

<br>
The version of little cms imported was taken from the lcms git repository,
<br>
commit 314bc7201d340ab303b36a0ade2c37cf40b83a3b, and then a couple of
<br>
small tweaks were applied:
<br>

<br>
* lcms2 currently offers no way to get the input/output format for a
<br>
transform, so I add 2 functions (cmsGetTransformInputFormat and
<br>
cmsGetTransformOutputFormat) to do this.
<br>

<br>
* lcms2 currently offers no easy way to redirect malloc/free operations
<br>
away from it's internal implementation, so we add a define (LCMS_USER_ALLOC)
<br>
to allow us to be able to define our own functions. This mirrors the
<br>
work done in lcms1 by Michael, I believe.
<br>

<br>
The choice of which version of lcms to build with is made by the WHICH_CMS
<br>
define option in the makefile. Currently this is set to lcms by default,
<br>
but can be changed to lcms2 to allow lcms2 to be used instead.
<br>

<br>
To make this work, various small tweaks have been required. Firstly, we
<br>
rename gsicc_littlecms.h to gsicc_cms.h, reflecting the fact that this is
<br>
not littlecms specific - rather, it defines the interface that any cms
<br>
would have to provide in order to work with Ghostscript/GhostPDL.
<br>

<br>
Secondly, we rename gsicc_littlecms.c to gsicc_lcms.c to make the makefile
<br>
macros easier.
<br>

<br>
We add a gsicc_lcms2.c file (derived from copying and editing gsicc_lcms.c)
<br>
that interfaces with lcms2.
<br>

<br>
Currently lcms2 builds and appears to run without crashing, but gives
<br>
differing results in some cases. This will need to be solved before we can
<br>
swap over to using lcms2 by default.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12340 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
common/msvc_top.mak
<br>
common/ugcc_top.mak
<br>
gs/base/Makefile.in
<br>
gs/base/configure.ac
<br>
gs/base/gs.mak
<br>
gs/base/gsicc.c
<br>
gs/base/gsicc_cache.c
<br>
gs/base/gsicc_littlecms.c
<br>
gs/base/gsicc_littlecms.h
<br>
gs/base/gsicc_manage.h
<br>
gs/base/gxi12bit.c
<br>
gs/base/gxicolor.c
<br>
gs/base/gximono.c
<br>
gs/base/gxipixel.c
<br>
gs/base/lcms.mak
<br>
gs/base/lib.mak
<br>
gs/base/macos-mcp.mak
<br>
gs/base/macosx.mak
<br>
gs/base/msvclib.mak
<br>
gs/base/openvms.mak
<br>
gs/base/ugcclib.mak
<br>
gs/base/unix-gcc.mak
<br>
gs/base/unixansi.mak
<br>
gs/base/winlib.mak
<br>
gs/ghostscript.vcproj
<br>
gs/lcms2/AUTHORS
<br>
gs/lcms2/COPYING
<br>
gs/lcms2/ChangeLog
<br>
gs/lcms2/INSTALL
<br>
gs/lcms2/Lib/BC/BC.txt
<br>
gs/lcms2/Lib/MS/MS.TXT
<br>
gs/lcms2/Makefile.am
<br>
gs/lcms2/Makefile.in
<br>
gs/lcms2/NEWS
<br>
gs/lcms2/Projects/BorlandC_5.5/lcms2.rc
<br>
gs/lcms2/Projects/BorlandC_5.5/lcmsdll.lk
<br>
gs/lcms2/Projects/BorlandC_5.5/lcmsdll.lst
<br>
gs/lcms2/Projects/BorlandC_5.5/mklcmsdll.bat
<br>
gs/lcms2/Projects/VC2008/jpegicc/jpegicc.vcproj
<br>
gs/lcms2/Projects/VC2008/lcms2.rc
<br>
gs/lcms2/Projects/VC2008/lcms2.sln
<br>
gs/lcms2/Projects/VC2008/lcms2_DLL/lcms2_DLL.vcproj
<br>
gs/lcms2/Projects/VC2008/lcms2_static/lcms2_static.vcproj
<br>
gs/lcms2/Projects/VC2008/linkicc/linkicc.vcproj
<br>
gs/lcms2/Projects/VC2008/psicc/psicc.vcproj
<br>
gs/lcms2/Projects/VC2008/resource.h
<br>
gs/lcms2/Projects/VC2008/testbed/testbed.vcproj
<br>
gs/lcms2/Projects/VC2008/tiffdiff/tiffdiff.vcproj
<br>
gs/lcms2/Projects/VC2008/tifficc/tifficc.vcproj
<br>
gs/lcms2/Projects/VC2008/transicc/transicc.vcproj
<br>
gs/lcms2/Projects/VC2010/jpegicc/jpegicc.vcproj
<br>
gs/lcms2/Projects/VC2010/jpegicc/jpegicc.vcxproj
<br>
gs/lcms2/Projects/VC2010/jpegicc/jpegicc.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/lcms2.rc
<br>
gs/lcms2/Projects/VC2010/lcms2.sln
<br>
gs/lcms2/Projects/VC2010/lcms2_DLL/lcms2_DLL.vcproj
<br>
gs/lcms2/Projects/VC2010/lcms2_DLL/lcms2_DLL.vcxproj
<br>
gs/lcms2/Projects/VC2010/lcms2_DLL/lcms2_DLL.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcproj
<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcxproj
<br>
gs/lcms2/Projects/VC2010/lcms2_static/lcms2_static.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/linkicc/linkicc.vcproj
<br>
gs/lcms2/Projects/VC2010/linkicc/linkicc.vcxproj
<br>
gs/lcms2/Projects/VC2010/linkicc/linkicc.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/psicc/psicc.vcproj
<br>
gs/lcms2/Projects/VC2010/psicc/psicc.vcxproj
<br>
gs/lcms2/Projects/VC2010/psicc/psicc.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/resource.h
<br>
gs/lcms2/Projects/VC2010/testbed/testbed.vcproj
<br>
gs/lcms2/Projects/VC2010/testbed/testbed.vcxproj
<br>
gs/lcms2/Projects/VC2010/testbed/testbed.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/tiffdiff/tiffdiff.vcproj
<br>
gs/lcms2/Projects/VC2010/tiffdiff/tiffdiff.vcxproj
<br>
gs/lcms2/Projects/VC2010/tiffdiff/tiffdiff.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/tifficc/tifficc.vcproj
<br>
gs/lcms2/Projects/VC2010/tifficc/tifficc.vcxproj
<br>
gs/lcms2/Projects/VC2010/tifficc/tifficc.vcxproj.filters
<br>
gs/lcms2/Projects/VC2010/transicc/transicc.vcproj
<br>
gs/lcms2/Projects/VC2010/transicc/transicc.vcxproj
<br>
gs/lcms2/Projects/VC2010/transicc/transicc.vcxproj.filters
<br>
gs/lcms2/Projects/mac/._.DS_Store
<br>
gs/lcms2/Projects/mac/LittleCMS/._.DS_Store
<br>
gs/lcms2/Projects/mac/LittleCMS/English.lproj/InfoPlist.strings
<br>
gs/lcms2/Projects/mac/LittleCMS/Info.plist
<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/mariama.mode1v3
<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/mariama.pbxuser
<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS.xcodeproj/project.pbxproj
<br>
gs/lcms2/Projects/mac/LittleCMS/LittleCMS_Prefix.pch
<br>
gs/lcms2/Projects/mac/LittleCMS/TestBed-Info.plist
<br>
gs/lcms2/README.1ST
<br>
gs/lcms2/aclocal.m4
<br>
gs/lcms2/autogen.sh
<br>
gs/lcms2/bin/Bin.txt
<br>
gs/lcms2/bin/Thumbs.db
<br>
gs/lcms2/config.guess
<br>
gs/lcms2/config.sub
<br>
gs/lcms2/configure
<br>
gs/lcms2/configure.ac
<br>
gs/lcms2/depcomp
<br>
gs/lcms2/doc/LittleCMS2.0 API.pdf
<br>
gs/lcms2/doc/LittleCMS2.0 Plugin API.pdf
<br>
gs/lcms2/doc/LittleCMS2.0 tutorial.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 API.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 Plugin API.pdf
<br>
gs/lcms2/doc/LittleCMS2.1 tutorial.pdf
<br>
gs/lcms2/include/Makefile.am
<br>
gs/lcms2/include/Makefile.in
<br>
gs/lcms2/include/icc34.h
<br>
gs/lcms2/include/lcms2.h
<br>
gs/lcms2/include/lcms2_plugin.h
<br>
gs/lcms2/install-sh
<br>
gs/lcms2/lcms2.pc.in
<br>
gs/lcms2/ltmain.sh
<br>
gs/lcms2/missing
<br>
gs/lcms2/src/Makefile.am
<br>
gs/lcms2/src/Makefile.in
<br>
gs/lcms2/src/cmscam02.c
<br>
gs/lcms2/src/cmscgats.c
<br>
gs/lcms2/src/cmscnvrt.c
<br>
gs/lcms2/src/cmserr.c
<br>
gs/lcms2/src/cmsgamma.c
<br>
gs/lcms2/src/cmsgmt.c
<br>
gs/lcms2/src/cmsintrp.c
<br>
gs/lcms2/src/cmsio0.c
<br>
gs/lcms2/src/cmsio1.c
<br>
gs/lcms2/src/cmslut.c
<br>
gs/lcms2/src/cmsmd5.c
<br>
gs/lcms2/src/cmsmtrx.c
<br>
gs/lcms2/src/cmsnamed.c
<br>
gs/lcms2/src/cmsopt.c
<br>
gs/lcms2/src/cmspack.c
<br>
gs/lcms2/src/cmspcs.c
<br>
gs/lcms2/src/cmsplugin.c
<br>
gs/lcms2/src/cmsps2.c
<br>
gs/lcms2/src/cmssamp.c
<br>
gs/lcms2/src/cmssm.c
<br>
gs/lcms2/src/cmstypes.c
<br>
gs/lcms2/src/cmsvirt.c
<br>
gs/lcms2/src/cmswtpnt.c
<br>
gs/lcms2/src/cmsxform.c
<br>
gs/lcms2/src/lcms2.def
<br>
gs/lcms2/src/lcms2_internal.h
<br>
gs/lcms2/testbed/Makefile.am
<br>
gs/lcms2/testbed/Makefile.in
<br>
gs/lcms2/testbed/USWebCoatedSWOP.icc
<br>
gs/lcms2/testbed/UncoatedFOGRA29.icc
<br>
gs/lcms2/testbed/bad.icc
<br>
gs/lcms2/testbed/sRGBSpac.icm
<br>
gs/lcms2/testbed/sRGB_Color_Space_Profile.icm
<br>
gs/lcms2/testbed/sRGB_v4_ICC_preference.icc
<br>
gs/lcms2/testbed/testcms2.c
<br>
gs/lcms2/testbed/testthread.cpp
<br>
gs/lcms2/testbed/toosmall.icc
<br>
gs/lcms2/utils/common/utils.h
<br>
gs/lcms2/utils/common/vprf.c
<br>
gs/lcms2/utils/common/xgetopt.c
<br>
gs/lcms2/utils/delphi/delphidemo.dpr
<br>
gs/lcms2/utils/delphi/delphidemo.dproj
<br>
gs/lcms2/utils/delphi/delphidemo.res
<br>
gs/lcms2/utils/delphi/demo1.dfm
<br>
gs/lcms2/utils/delphi/demo1.pas
<br>
gs/lcms2/utils/delphi/lcms2dll.pas
<br>
gs/lcms2/utils/jpgicc/Makefile.am
<br>
gs/lcms2/utils/jpgicc/Makefile.in
<br>
gs/lcms2/utils/jpgicc/iccjpeg.c
<br>
gs/lcms2/utils/jpgicc/iccjpeg.h
<br>
gs/lcms2/utils/jpgicc/jpgicc.1
<br>
gs/lcms2/utils/jpgicc/jpgicc.c
<br>
gs/lcms2/utils/linkicc/Makefile.am
<br>
gs/lcms2/utils/linkicc/Makefile.in
<br>
gs/lcms2/utils/linkicc/linkicc.1
<br>
gs/lcms2/utils/linkicc/linkicc.c
<br>
gs/lcms2/utils/matlab/icctrans.c
<br>
gs/lcms2/utils/matlab/lcms_rsp
<br>
gs/lcms2/utils/psicc/Makefile.am
<br>
gs/lcms2/utils/psicc/Makefile.in
<br>
gs/lcms2/utils/psicc/psicc.1
<br>
gs/lcms2/utils/psicc/psicc.c
<br>
gs/lcms2/utils/samples/Makefile.am
<br>
gs/lcms2/utils/samples/Makefile.in
<br>
gs/lcms2/utils/samples/itufax.c
<br>
gs/lcms2/utils/samples/mkcmy.c
<br>
gs/lcms2/utils/samples/mkgrayer.c
<br>
gs/lcms2/utils/samples/mktiff8.c
<br>
gs/lcms2/utils/samples/roundtrip.c
<br>
gs/lcms2/utils/samples/vericc.c
<br>
gs/lcms2/utils/samples/wtpt.1
<br>
gs/lcms2/utils/samples/wtpt.c
<br>
gs/lcms2/utils/tificc/Makefile.am
<br>
gs/lcms2/utils/tificc/Makefile.in
<br>
gs/lcms2/utils/tificc/tifdiff.c
<br>
gs/lcms2/utils/tificc/tificc.1
<br>
gs/lcms2/utils/tificc/tificc.c
<br>
gs/lcms2/utils/transicc/Makefile.am
<br>
gs/lcms2/utils/transicc/Makefile.in
<br>
gs/lcms2/utils/transicc/transicc.1
<br>
gs/lcms2/utils/transicc/transicc.c
<br>
gs/psi/int.mak
<br>
gs/psi/msvc.mak
<br>
gs/psi/os2.mak
<br>
main/pcl6_gcc.mak
<br>
main/pcl6_msvc.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 16:44:50 +0000></a>
2011-04-01 16:44:50 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=b960ff15c895dbe5a7d6baf470ad8a12949ad054">b960ff15c895dbe5a7d6baf470ad8a12949ad054</a>
<blockquote>

<br>
Fix for mistaken double allocation of threshold array object.  Thanks to ray for finding this.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12339 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gsht.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-04-01 16:39:59 +0000></a>
2011-04-01 16:39:59 +0000</strong>
<br>Michael Vrhel &lt;michael.vrhel@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=66adf73f5cbaa010b6a7ee730384c3a58752bff3">66adf73f5cbaa010b6a7ee730384c3a58752bff3</a>
<blockquote>

<br>
Fix so that anti-aliasing works when the source file contains transparency.  This involved the addition of a copy_alpha procedure for the gdevp14 device.  In addition, the anti-aliasing parameters for the target device are passed along to the gdevp14 device.  The gdevp14 clist device uses the forward copy alpha operation, so that we end up using the clist_copy_alpha operation.  Then during the clist reading phase we use the gdevp14 device's copy_alpha command.
<br>

<br>
There are two things that I do need to do in relation to this commit.  One is that the operation that actually computes and applies the alpha associated with the transparency needs to be optimized so that we are not doing floating point math.  Also, support needs to be added for knockout fills.  However, for the vast majority of files with transparency we should now have support with -dGraphicAlphaBits and -dTextAlphaBits.
<br>

<br>
I will open a bug on the two outstanding issues so that I don't forget.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12338 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-31 17:30:58 +0000></a>
2011-03-31 17:30:58 +0000</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=7825ac4552256609c8060b5af13bb168170db6eb">7825ac4552256609c8060b5af13bb168170db6eb</a>
<blockquote>

<br>
Bug #692100, padding was being treated inconsistently within 2
<br>
procedures resulting in UMR's and incorrect results.  I'm afraid we
<br>
still don't understand the details of HP's seemingly bug-ridden
<br>
padding implementation but this fix at least makes the code internally
<br>
consistent.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12337 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
pxl/pximage.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-31 17:22:23 +0000></a>
2011-03-31 17:22:23 +0000</strong>
<br>Henry Stiles &lt;henry.stiles@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=91b7f320484904d60e8cf017611f5a8da4a6c685">91b7f320484904d60e8cf017611f5a8da4a6c685</a>
<blockquote>
<p>
    Fixes 692109, the &quot;no argument case&quot; of the HPGL/2 INPUT RELATIVE
<br>
Fixes 692109, the "no argument case" of the HPGL/2 INPUT RELATIVE
<br>
command did not properly initialized the operands to their defaults.
<br>
Only likely to be seen in unusual test cases.  Fixes indeterminacy
<br>
in CET 32-07.BIN reported in the regression tests.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12336 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
pcl/pgconfig.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-31 15:36:32 +0000></a>
2011-03-31 15:36:32 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=65ea9547d5760284c68da6b6b413d335e4e68ed1">65ea9547d5760284c68da6b6b413d335e4e68ed1</a>
<blockquote>

<br>
The last of Hintak's (usable) improvements to the nsis installer
<br>
script, plus a tweak or two.
<br>

<br>
Make the cidfmap generation a tickbox option on the final page.
<br>

<br>
Add a link to the uninstaller from the Start Menu group.
<br>

<br>
No cluster differences
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12335 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/nsisinst.nsi
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 15:33:28 +0000></a>
2011-03-30 15:33:28 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=700f41807524588d82a674c3618322f71bbe9d7b">700f41807524588d82a674c3618322f71bbe9d7b</a>
<blockquote>

<br>
Bring the nsis installer script and it's caller up
<br>
to date.
<br>

<br>
Vast majority of the credit to Hintak for this.
<br>

<br>
No cluster differences.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12334 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/psi/nsisinst.nsi
<br>
gs/psi/winint.mak
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 12:23:41 +0000></a>
2011-03-30 12:23:41 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=c428998ab5d6b6f164de9474c25ee788ae4ef77f">c428998ab5d6b6f164de9474c25ee788ae4ef77f</a>
<blockquote>

<br>
Squash a warning in a device call.
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12333 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gxclpath.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 11:13:37 +0000></a>
2011-03-30 11:13:37 +0000</strong>
<br>Tor Andersson <tor.andersson@artifex.com><br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=807af34ac8671f03b8c73cca2cdbebca796c716e">807af34ac8671f03b8c73cca2cdbebca796c716e</a>
<blockquote>

<br>
xps: Fix bug when parsing cluster mappings.
<br>

<br>
We incorrectly encoded and emitted all characters in a
<br>
Many-to-One cluster mapping, resulting in extraneous characters
<br>
where ligatures were used. A (2:1) cluster map for the ligature
<br>
    &quot;fi&quot; has two characters (f, i) and one glyph (fi). We showed it
<br>
as two glyphs (fi, i) instead of skipping the second character
<br>
while decoding the cluster map.
<br>

<br>
This fixes multiple errors in MXDW/TypeSamples.xps
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12332 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
xps/xpsglyphs.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:17:57 +0000></a>
2011-03-30 10:17:57 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=2e594aee0d69b99a17fa9cd3cf21696773afde43">2e594aee0d69b99a17fa9cd3cf21696773afde43</a>
<blockquote>

<br>
Add gs/doc to Visual Studio project, enabling documentation to be easily
<br>
edited in the Visual Studio editor.
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12331 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/ghostscript.vcproj
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:17:42 +0000></a>
2011-03-30 10:17:42 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=790f395b044a7e7179c3ca918e30475827c8a30b">790f395b044a7e7179c3ca918e30475827c8a30b</a>
<blockquote>

<br>
Add documentation for dev_spec_op to Devices.htm.
<br>

<br>
No cluster changes.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12330 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/doc/Drivers.htm
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:17:26 +0000></a>
2011-03-30 10:17:26 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=a243545401bf0fdb8b1a18e7e5379119c56aecfa">a243545401bf0fdb8b1a18e7e5379119c56aecfa</a>
<blockquote>

<br>
Add new copy_plane device procedure; arguments as for copy_color with an
<br>
extra int to identify which plane we want to work on.
<br>

<br>
    The call effectively says &quot;Copy this pixmap into the specified plane of this
<br>
    device&quot;. It is envisaged that it will only be defined for planar devices.
<br>

<br>
For now clients can detect whether or not to use this based on whether the
<br>
function pointer is non NULL. If need be (to cope with forwarding devices)
<br>
we can add a dev_spec_op.
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12329 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevmpla.c
<br>
gs/base/gxdevcli.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:17:10 +0000></a>
2011-03-30 10:17:10 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=3bdda000eabced6e4c015af4c6dbb5b02f1abdda">3bdda000eabced6e4c015af4c6dbb5b02f1abdda</a>
<blockquote>

<br>
Add new dev_spec_op operation for spotting that a device maps colours in
<br>
the 'standard' 1bit cmyk way, and use that rather than manually checking
<br>
function pointers. This allows bitcmyk, pamcmyk4 and plibk devices to
<br>
correctly spot the optimisation in get_bits (used for rops that use D).
<br>

<br>
Testing locally indicates that the special case is now taken, but that no
<br>
differences are seen in the results (as we would hope).
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12328 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevdgbr.c
<br>
gs/base/gdevdrop.c
<br>
gs/base/gxclpath.c
<br>
gs/base/gxdevsop.h
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:16:54 +0000></a>
2011-03-30 10:16:54 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=f81e8f47c06572ecc4f7e3fcc03ca4db60507ce4">f81e8f47c06572ecc4f7e3fcc03ca4db60507ce4</a>
<blockquote>

<br>
Tweak dev_spec_op implementations so that they correctly forward through
<br>
to the 'default' (or base) implementations for unknown operations. Stupid
<br>
of me to have got this wrong initially, as it is one of the main purposes
<br>
of this mechanism.
<br>

<br>
No cluster differences expected.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12327 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevpdfd.c
<br>
gs/base/gdevpdfi.c
<br>
gs/base/gxacpath.c
<br>
<p>
</blockquote>

<p><strong><a name=2011-03-30 10:15:18 +0000></a>
2011-03-30 10:15:18 +0000</strong>
<br>Robin Watts &lt;Robin.Watts@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=bca8531f23845a6c70cf938fb0ab1bc6e9f14fd9">bca8531f23845a6c70cf938fb0ab1bc6e9f14fd9</a>
<blockquote>

<br>
Add new dev_spec_op call to device procs table, along with gxdevsop.h header
<br>
that defines the operation enumeration for it.
<br>

<br>
Move existing calls of pattern_manage across to using dev_spec_op instead.
<br>
Add comments to the pattern management definitions noting that it is
<br>
deprecated and should not be used.
<br>

<br>
No cluster differences (aside from indeterminisms).
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12326 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/base/gdevbbox.c
<br>
gs/base/gdevdflt.c
<br>
gs/base/gdevdrop.c
<br>
gs/base/gdevnfwd.c
<br>
gs/base/gdevp14.c
<br>
gs/base/gdevpdfb.h
<br>
gs/base/gdevpdfd.c
<br>
gs/base/gdevpdfi.c
<br>
gs/base/gdevpdfx.h
<br>
gs/base/gdevrops.c
<br>
gs/base/gscolor3.c
<br>
gs/base/gsimage.c
<br>
gs/base/gsptype1.c
<br>
gs/base/gsptype2.c
<br>
gs/base/gxacpath.c
<br>
gs/base/gxcldev.h
<br>
gs/base/gxclip.c
<br>
gs/base/gxclip2.c
<br>
gs/base/gxclipm.c
<br>
gs/base/gxclist.c
<br>
gs/base/gxclrect.c
<br>
gs/base/gxdevcli.h
<br>
gs/base/gxdevice.h
<br>
gs/base/gxdevsop.h
<br>
gs/base/gxfill.c
<br>
gs/base/gximask.c
<br>
gs/base/gxpcmap.c
<br>
gs/base/gxshade6.c
<br>
gs/psi/zpcolor.c
xps/xpstile.c
<p>
</blockquote>

<p><strong><a name=2011-03-30 09:26:50 +0000></a>
2011-03-30 09:26:50 +0000</strong>
<br>Chris Liddell &lt;chris.liddell@artifex.com&gt;<br>
<a href="http://git.ghostscript.com/?p=ghostpdl.git;a=commitdiff;h=ed774ca984d2566b00e212d130644abd5529235f">ed774ca984d2566b00e212d130644abd5529235f</a>
<blockquote>

<br>
Update version number post-release.
<br>

<br>
git-svn-id: http://svn.ghostscript.com/ghostscript/trunk@12325 a1074d23-0009-0410-80fe-cf8c14f379e6
<br>

<br>
gs/Resource/Init/gs_init.ps
<br>
gs/base/gscdef.c
<br>
gs/base/version.mak
<br>
<p>
</blockquote>

<h2><a name="Version9.02"></a>Version 9.02 (2011-03-30)</h2>

<p>This is the third release in the stable 9.x series.

<p>This is an &quot;out of order&quot; release, primarily to ensure the
GPL Ghostscript release remains in version &quot;lock-step&quot; with the
Artifex commercial release.

<p> Highlights in this release include:

<p>For monochrome devices, there is a new halftone technique for sampled
image data. The existing technique is very efficient (and is is still used)
for large areas of color, such as an area fill, but encountered performance
problems dealing with sampled image data where a given colour value only
covered a few pixels at a time. The new approach applies the halftone threshold
array directly to the image samples.

<p> Further performance, memory use, and stability improvements with the new
features introduced in 9.00, as well as Unix/Linux build fixes, plus the usual
assorted bug fixes.

<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.02_Incompatible_changes"></a>Incompatible changes</h3>

<p>
No recorded incompatible changes.

<h3><a name="9.02_Changelog"></a>Changelog</h3>
<p><strong><a name="2011-03-30T064801.334550Z"></a>
2011-03-30T06:48:01.334550Z chrisl</strong></p>
<blockquote>
<pre>
Extend the SSE2 check in both configure scripts.

The check now attempts to declare a variable of a type missing in older
versions of gcc.

Bug 692102

No cluster differences expected.

</pre>
<p>[base/configure.ac /trunk/ghostpdl/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-03-28T084948.387061Z"></a>
2011-03-28T08:49:48.387061Z Chris Liddell</strong></p>
<blockquote>
<pre>
Reduce duplication of changelog and news by deprecating Changes.htm and
Details#.htm.

The information will now be in two places only: the highlights summary
in News.htm, and the detailed changes in History#.htm.

Update related documentation and html links to reflect this change.

CLUSTER_UNTESTED
</pre>
<p>[doc/Changes.htm doc/Readme.htm doc/Details9.htm doc/Release.htm]</p>
</blockquote>

<p><strong><a name="2011-03-26T145106.549590Z"></a>
2011-03-26T14:51:06.549590Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for issue found by Chris where we have a soft mask embedded in a softmask
and graphic state pushes and pops occurring.  In this case, the soft mask stack
that is saved gets out of sync compared to the one in the context state.
Use of the stack count can catch the issue and correct it.  Also a rename of
one of the variables in the pdf14 code to make it easier to debug.</pre>
<p>[base/gdevp14.c base/gdevp14.h]</p>
</blockquote>

<p><strong><a name="2011-03-25T121205.657797Z"></a>
2011-03-25T12:12:05.657797Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixes concerning the compatibility of the OpenPrinting Vector (&quot;opvp&quot;)
output device with Ghostscript 9.x.

1. If there is any ICCColor based image in the PostScript input, GS crashes.
2. Fallback when path is too complex for some kinds of printers. This problem
already existed in GS 8.x.

Thanks to Koji Otani from BBR Inc., Japan.

</pre>
<p>[contrib/opvp/gdevopvp.c]</p>
</blockquote>

<p><strong><a name="2011-03-25T102206.357287Z"></a>
2011-03-25T10:22:06.357287Z Chris Liddell</strong></p>
<blockquote>
<pre>
The code was erroneously attempting to get a glyph name for a case where
we already had a glyph index for a Truetype font.

Add a check for object type before trying to get a string from a name object.


Bug 692095

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2011-03-24T172617.397320Z"></a>
2011-03-24T17:26:17.397320Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve build issues with language_switch and UFST.

I had (wrongly) assumed that the PCL/language_switch builds with UFST
and COMPILE_INITS=1 would have the relevant paths correctly setup for
the PS/PDF world to access the Microtype FCOs. It turns out they are
done in an incompatible manner.

So, I've renamed the path variables (in the makefiles) so there isn't
a clash between PCL and PS/PDF, ensured that the variables are correctly
passed through recursive (n)make calls, and tidied up the FAPI options
for the language_switch build.

Not only does this allow language_switch to build with the UFST, but the
Postscript interpreter does now use FAPI/UFST to access the Microtype fonts
for the built-in fonts, and uses FAPI/Freetype for downloaded fonts.

Bug 692093

No cluster differences expected.

</pre>
<p>[/trunk/ghostpdl/common/msvc_top.mak /trunk/ghostpdl/language_switch/pspcl6_msvc.mak /trunk/ghostpdl/main/pcl6_gcc.mak psi/msvc.mak base/Makefile.in psi/int.mak]</p>
</blockquote>

<p><strong><a name="2011-03-24T042223.459616Z"></a>
2011-03-24T04:22:23.459616Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for compiler warning.</pre>
<p>[base/gdevp14.h]</p>
</blockquote>

<p><strong><a name="2011-03-23T213420.429081Z"></a>
2011-03-23T21:34:20.429081Z Michael Vrhel</strong></p>
<blockquote>
<pre>
This commit fixes several issues.

Memory leaks in the PDF14 device as well as the separation devices.
Fixes in PDF14 device so the the color encoder and decoder are properly updated
if soft masks occur with spot colors.
Proper copying of the devicen parameters to the clist devices in the MT
rendering.  This was the source of a problem when doing multi-threaded
rendering to separation devices.

This fixes bug 692087</pre>
<p>[base/gdevp14.c base/gsicc_cache.c base/gxclutil.c base/gdevpsd.c base/lib.mak base/gdevp14.h base/gxclthrd.c base/gdevtsep.c base/gdevdevn.c base/gxblend.c base/gdevdevn.h]</p>
</blockquote>

<p><strong><a name="2011-03-21T112417.021832Z"></a>
2011-03-21T11:24:17.021832Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for memory leaks in the pdf14 device.  These could occur with softmask and
graphic state changes as well as when we are going to a tiffsep device.  </pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2011-03-20T014019.345427Z"></a>
2011-03-20T01:40:19.345427Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 692087 crashes.   num_bytes - bytes_dropped was ending up negative
in cases where the transparency device was reducing the number of colorants
compared to the target device (mainly when we had a softmask) which was getting
passed into the clist as an unsigned value.   Now when this occurs we just use
the encoding of the full color value.  </pre>
<p>[base/gxclutil.c]</p>
</blockquote>

<p><strong><a name="2011-03-19T045652.259544Z"></a>
2011-03-19T04:56:52.259544Z Michael Vrhel</strong></p>
<blockquote>
<pre>
A temp fix for bugs 692038 and 692065.  The clist devices that are created for
the threads now inherit the icc profile from the target device.  I need to set
things up so that the device profile is no longer reference counted since we
could have a race condition problem if the different threads are incrementing
and decrementing the count and if the command is not atomic on a particular
architecture.  The plan will be to no longer ref count the device profile but
to have it maintained until the the actual target device is destroyed. There
will be a bit of work to do with respect to the pdf14 device, which can have
a device profile that is different than the actual target device.  That profile
can be altered with the transparency group pushes and pops.</pre>
<p>[base/gxclthrd.c]</p>
</blockquote>

<p><strong><a name="2011-03-19T003237.910024Z"></a>
2011-03-19T00:32:37.910024Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for some strange rendering with PDF 1.7 FTS files when we have shading and
transparency and are both filling and stroking text (Text Rendering modes 2
and 6). Customer 532.

</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2011-03-18T051608.669973Z"></a>
2011-03-18T05:16:08.669973Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that image_parent_type is properly initialized during clist image
reading.</pre>
<p>[base/gsiparm4.h base/gximage1.c base/gximage4.c]</p>
</blockquote>

<p><strong><a name="2011-03-17T152458.552348Z"></a>
2011-03-17T15:24:58.552348Z Chris Liddell</strong></p>
<blockquote>
<pre>
Escape/quote the UFST path settings in the makefile so that the macros
correctly expand to strings.

Bug 692082

No cluster differences expected

CLUSTER_UNTESTED
</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2011-03-17T095453.062174Z"></a>
2011-03-17T09:54:53.062174Z Chris Liddell</strong></p>
<blockquote>
<pre>
Uncached glyphs were ignoring rendering mode 3, and being imaged
directly to the device - for cached glyphs the decision occurred
in the &quot;show machinery&quot;.

This wasn't my first choice solution, but all the others I tried
caused problems with later use of a cached glyph (which wasn't
actually cached), or problems with pdfwrite, pswrite or ps2write.


Bug 692004

No cluster differences expected.

</pre>
<p>[base/gspaint.c]</p>
</blockquote>

<p><strong><a name="2011-03-17T094116.074991Z"></a>
2011-03-17T09:41:16.074991Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix some issue where user specified devices didn't get the requisite
&quot;$(DD)&quot; and &quot;.dev&quot; runes added to them.

Also, rearrange the &quot;pre-declared&quot; device strings to be more
consistent within configure.ac


Bug 692062

No cluster differences expected.


</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-03-15T175917.340024Z"></a>
2011-03-15T17:59:17.340024Z Robin Watts</strong></p>
<blockquote>
<pre>
Add special case mem_planar_copy_color_4to1 code for copying bits
from 4 1 bit planes into 1 4 bit chunky plane.

This helps with performance of the plibk device.

No cluster differences expected.</pre>
<p>[base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-03-15T083505.386182Z"></a>
2011-03-15T08:35:05.386182Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Indexed colour images have incorrect /Decode

Bug #691924 &quot;Differences in colour with ps2write&quot;

The problem was due to the opdfread code generating a /Decode for an Indexed
colour space where the value was [0 2^n] and should be [0 ((2^n) - 1)]. This
caused the highest image sample to be mapped to 1 past the end of the samples
in the colour space.

Normally this doesn't matter, because the values are clamped to 'hival' in the
Indexed space. In this case, however, the image was 2 bpp (4 values) but the
colour space was defined as a full 256 indices, with only the first 4 bein
used.

The incorrect Decode caused the image sample value 3 to be looked up as colour
space sample 4, which was set to all 0 (black) causing incorrect colour values.

</pre>
<p>[base/opdfread.h lib/opdfread.ps]</p>
</blockquote>

<p><strong><a name="2011-03-14T154615.599171Z"></a>
2011-03-14T15:46:15.599171Z Robin Watts</strong></p>
<blockquote>
<pre>
Reintroduce commented out PACIFY_VALGRIND definition in gximono.c - without it
the comment makes no sense.

Add new PACIFY_VALGRIND code (and commented out definition) in
gxht_threshold.c.

Fix some line endings.

No real code change, so no cluster differences expected.

</pre>
<p>[base/gximono.c base/gxht_thresh.c]</p>
</blockquote>

<p><strong><a name="2011-03-14T151608.036660Z"></a>
2011-03-14T15:16:08.036660Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix an indetermism in the halftoning code. When mapping a y offset into a
row index for a halftone tile, special care needs to be taken when y is
negative. Proof (as if more were needed) that the % operator in C is evil.

The command in question was a cutdown version of C306.bin rendered at 600bpi
to pbmraw with dMaxBitmap=10000.

It now runs into a clist UMR. Will keep looking.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-14T135351.702509Z"></a>
2011-03-14T13:53:51.702509Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Don't set a default halftone.

Bug #691923 &quot;Differences in dithered output with ps2write&quot;

The PDF interpreter emits a setpagdevice between every page of output, in case
the media size has changed. The implementation of setpagedevice resets the
halftone to be the default halftone (106 lpi 45 degree line screen).

This is a problem for ps2write, and potantially pdfwrite, as there is no way to
differentiate between a default halftone set by setpagdevice, and a halftone
contained in the input file.

To avoid embedding an unhelpful halftone, we now check the device parameter
'/HighLevelDevice' in the setpagedevice implementation, and if it is present
and true, we do not call .setdefaulthalftone.

Also updates documentation on device parameters.

This causes differences on every 1-bit rendering test (ie pkmraw) of the
ps2write output file, so approximately 1300 differences are to be expected.
</pre>
<p>[doc/Drivers.htm Resource/Init/gs_setpd.ps]</p>
</blockquote>

<p><strong><a name="2011-03-14T130003.503443Z"></a>
2011-03-14T13:00:03.503443Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 692064. Tiffscaled device was checking on page print time that the
expected size of the page wouldn't make the page too large to fit in a file.
This code was copied from the tiffgray device (as we render internally in
8bpp). As we output in monochrome however (and may use compression) the
test is in fact bogus, and should simply be removed. We do that here.

It's entirely possible that we should be removing the test from the
tiffgray device too - most systems with 32bit longs support large files these
days, and compression may apply here too anyway. I'll leave this until it
becomes an issue though.

No cluster differences expected.</pre>
<p>[base/gdevtsep.c]</p>
</blockquote>

<p><strong><a name="2011-03-13T115708.378919Z"></a>
2011-03-13T11:57:08.378919Z Ken Sharp</strong></p>
<blockquote>
<pre>
Some updates to the new device parameters. It turned out that the intended
parameter Type32ToUnicode was incorrectly implemented. This should actually
have used the WantsToUnicode parameter, because the code actually controls the
processing of  GlyphNames2Unicode tables from Windows PostScript.

This means we no longer need the Type32ToUnicode parameter and it has been
removed.

Added initial documentation of these parameters.

This appears to cause some differences in Bug690829.ps rendered at 300 dpi.
This is a surprise, because the changes should have no effect on devices other
than pdfwrite/ps2write, but the new result is better than the old, so this is
a progression.
</pre>
<p>[Resource/Init/gs_pdfwr.ps base/gdevpdfx.h base/gdevpdfp.c doc/Drivers.htm base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2011-03-13T012149.785339Z"></a>
2011-03-13T01:21:49.785339Z Ray Johnston</strong></p>
<blockquote>
<pre>
Remove spurious debug printout inserted in rev 12141 line 780:
1 index == 0 index ==
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-03-11T192457.067395Z"></a>
2011-03-11T19:24:57.067395Z Ken Sharp</strong></p>
<blockquote>
<pre>
Change the default value for the 'AllowPSRepeat' so that it defaults to allowed
instead of disallowed (doh!) This is important for those devices which don't
set the device parameter.

No differences expected.
</pre>
<p>[psi/zfunc4.c]</p>
</blockquote>

<p><strong><a name="2011-03-11T171451.124213Z"></a>
2011-03-11T17:14:51.124213Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a #if 0 accidentally left in the commit for revision 12282. Also
initialise a variable, just in case.

No differences expected.
</pre>
<p>[psi/zfunc4.c]</p>
</blockquote>

<p><strong><a name="2011-03-11T165834.690669Z"></a>
2011-03-11T16:58:34.690669Z Ken Sharp</strong></p>
<blockquote>
<pre>
The final removal of the reliance on testing the device name to influence
interpreter behaviour.

This tests the /AllowPSRepeat paramter and flags an error if a function tries
to use 'repeat' when it is disallowed.

Still to do: write some documentation on these new parameters.

No differences expected.
</pre>
<p>[psi/zfunc4.c]</p>
</blockquote>

<p><strong><a name="2011-03-11T151440.609962Z"></a>
2011-03-11T15:14:40.609962Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add the new third party library directories to the Windows nmake zip file
target.

No cluster differences.

Bug 691944

Credit to: Gennadiy Tsarenkov.

CLUSTER_UNTESTED

</pre>
<p>[psi/winint.mak]</p>
</blockquote>

<p><strong><a name="2011-03-11T150756.095474Z"></a>
2011-03-11T15:07:56.095474Z Chris Liddell</strong></p>
<blockquote>
<pre>
Rejig the romfs targets so that unix make can follow the dependencies.

This should prevent the pointless rebuilding of the romfs C source.

Bug 692053

No cluster differences expected.

</pre>
<p>[base/lib.mak base/unix-aux.mak]</p>
</blockquote>

<p><strong><a name="2011-03-11T090424.536166Z"></a>
2011-03-11T09:04:24.536166Z Chris Liddell</strong></p>
<blockquote>
<pre>
Some (broken) TrueType fonts have out of order loca tables, which can result
in the calculated glyph data lengths being larger than the actual
available glyph data. Normally this does not cause a problem, but if the glyph
in question is in the final bytes of the stream, we encounter an unexpected
end of data condition when creating the glyph data buffer to pass into
Freetype.

So the FAPI interface code will now ignore that error, and adjust the byte
length to correctly reflect the number of bytes available in the buffer.

It is safe to do this because, in the event we have a genuine out-of-data
condition, Freetype will return an error when it tries to interpret the
glyph outline.

Bug 692043

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2011-03-11T054519.450208Z"></a>
2011-03-11T05:45:19.450208Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix missing header problem on older versions of MSVC.
</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-03-11T041539.316030Z"></a>
2011-03-11T04:15:39.316030Z Michael Vrhel</strong></p>
<blockquote>
<pre>
A reorganization of the halftone code in preparation of doing thresholding of
color images.  This basically pulls out some code pieces that will be shared
in all the image thresholding cases.  No differences expected
(or seen in the cluster push).</pre>
<p>[base/gxht_thresh.h base/lib.mak base/gximono.c base/gxicolor.c base/gxht_thresh.c]</p>
</blockquote>

<p><strong><a name="2011-03-10T173138.501799Z"></a>
2011-03-10T17:31:38.501799Z Robin Watts</strong></p>
<blockquote>
<pre>
I missed one change in commit 12274. The detection of chunky modes should
look at num_planes being &lt;= 1, not == 1.

I tested this locally and then clearly missed it when cluster pushing.
</pre>
<p>[base/gdevdrop.c]</p>
</blockquote>

<p><strong><a name="2011-03-10T165615.200283Z"></a>
2011-03-10T16:56:15.200283Z Robin Watts</strong></p>
<blockquote>
<pre>
Planar device is broken w.r.t rops in a cmyk space - this commit fixes it.

The planar memory device sets itself to use gx_default_strip_copy_rop
rather than mem_strip_copy_rop. mem_strip_copy_rop knows that rops on
cmyk pixels should actually convert to rgb, perform the rop, and convert
back again, but doesn't know how to convert the results back when it's in
planar mode. gs_default_strip_copy_rop can cope with planar mode, but doesn't
know to convert to rgb first.

The first fix included here is to extend mem_strip_copy_rop to know how to
write back to planar format, and then to make the planar memory device use
mem_strip_copy_rop.

This then exposes various flaws in mem_strip_copy_rop, including the fact
that it relies on being able to set the offset in get_bits calls when this
is sometimes not possible. We therefore fix the code to manage offsets
by explicitly updating them.

Also, the raster used in mem_strip_copy_rop was incorrect - we use the
correct one and get much better results.

No cluster differences expected as the planar device is not tested.

</pre>
<p>[base/gdevdrop.c base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-03-10T164220.394889Z"></a>
2011-03-10T16:42:20.394889Z Robin Watts</strong></p>
<blockquote>
<pre>
The routines in gdevplib.c intended to map colors in cmyk form back to rgb
were incorrect. Fixed here.

No differences expected as this files isn't linked in by default.

CLUSTER_UNTESTED


</pre>
<p>[base/gdevplib.c]</p>
</blockquote>

<p><strong><a name="2011-03-10T162704.913812Z"></a>
2011-03-10T16:27:04.913812Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove the buffer blanking done in gximono.c. Previously removing this would
have caused indeterminisms. With the additional fix in here to limit
offset_bits to dest_width, however, we should get stable results.

This gives various differences in output (81 in pcl, presumably more in PDF
and PS). Bmpcmp of the pcl ones shows them as all progressions.

</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-10T145508.103488Z"></a>
2011-03-10T14:55:08.103488Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the remaining PostScript files (mostly the PDF interpreter) to use the
new device parameters instead of explicitly checking for the device being named
'pdfwrite' or 'ps2write'.

Some more modification is still required, but we're nearly there. We will
continue to check the device names in gs_pdfwr.ps when setting up the default
state for those specific devices.

Although not strictly a Distiller device, ps2write declares itself to be
'IsDistiller'. This is because some PostScript test files were found to behave
differently if the distillerparams operators were available, in particular
files would be oriented differently if the device was deemed to be a Distiller.

</pre>
<p>[Resource/Init/gs_pdfwr.ps Resource/Init/pdf_font.ps Resource/Init/pdf_draw.ps base/gdevpdfb.h Resource/Init/gs_setpd.ps]</p>
</blockquote>

<p><strong><a name="2011-03-10T073145.990562Z"></a>
2011-03-10T07:31:45.990562Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Ignore null object when it is used instead of the gstate dictionary.
Bug 692050.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2011-03-10T061917.004672Z"></a>
2011-03-10T06:19:17.004672Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change all instances of true, false, and null to //true, //false, and //null
to avoid interferance from PS files that redefine them. Bug 692041.
</pre>
<p>[Resource/Init/gs_typ32.ps Resource/Init/gs_cidfm.ps Resource/Init/gs_mgl_e.ps Resource/Init/pdf_rbld.ps Resource/Init/gs_resmp.ps Resource/Init/gs_dscp.ps Resource/Init/gs_fonts.ps Resource/Init/gs_wan_e.ps Resource/Init/gs_mex_e.ps Resource/Init/gs_ttf.ps Resource/Init/gs_cspace.ps Resource/Init/gs_cff.ps Resource/Init/gs_dps1.ps Resource/Init/gs_lev2.ps Resource/Init/pdf_sec.ps Resource/Init/gs_l2img.ps Resource/Init/gs_cet.ps Resource/Init/gs_dbt_e.ps Resource/Init/gs_pdf_e.ps Resource/Init/gs_statd.ps Resource/Init/gs_fapi.ps Resource/Init/gs_pdfwr.ps Resource/Init/gs_cidfn.ps Resource/Init/pdf_main.ps Resource/Init/gs_dps.ps Resource/Init/gs_res.ps Resource/Init/gs_ll3.ps Resource/Init/gs_css_e.ps Resource/Init/gs_epsf.ps Resource/Init/pdf_draw.ps Resource/Init/gs_dpnxt.ps Resource/Init/gs_icc.ps Resource/Init/gs_mro_e.ps Resource/Init/pdf_ops.ps Resource/Init/gs_init.ps Resource/Init/pdf_font.ps Resource/Init/gs_ciddc.ps Resource/Init/gs_trap.ps Resource/Init/gs_cidtt.ps Resource/Init/gs_diskn.ps Resource/Init/gs_fntem.ps Resource/Init/pdf_base.ps Resource/Init/gs_sym_e.ps Resource/Init/gs_img.ps Resource/Init/gs_btokn.ps Resource/Init/gs_cidcm.ps]</p>
</blockquote>

<p><strong><a name="2011-03-10T005808.762234Z"></a>
2011-03-10T00:58:08.762234Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 692038.

This fixes 3 issues when using a CIELAB based profile for the output device
ICC profile.

One was a problem when handling separation color spaces when they had the ALL
entry and we were going to an additive device.  AR does a 1-INK level for the
device values and no color management.  We were doing the same, but this approach
will not work if our destination color space is CIELAB.  Now if we are headed toward
CIELAB we do the 1-INK to RGB and then transform to CIELAB.

Another was that transparency blending should never be done in CIELAB or similar type
color spaces.  With transparency, the PDF14 device inherits the profile for the target
device and if the transparency groups don't specify a color space we would end up blending
in CIELAB.  The solution was to detect this situation and use the defaultRGB profile for blending.
Conversion to CIELAB occurs during the pdf14 put image operation.

Finally, with shading in transparency, we need to make sure to pass along the transparency device
through the shading parameters whenever we have a color mismatch between the pdf14 device and the
target device so that the shading will occur in the proper color space.

These changes are all related to a non-tested cluster case when we have -sOutputICCProfile=lab.icc</pre>
<p>[base/gdevp14.c base/gxcmap.c base/gstrans.c base/gxclist.h base/gdevtfnx.c base/gsfunc0.c base/devs.mak base/gsicc.c]</p>
</blockquote>

<p><strong><a name="2011-03-09T213258.461339Z"></a>
2011-03-09T21:32:58.461339Z Robin Watts</strong></p>
<blockquote>
<pre>
Add gxht_thresh.{c,h} to Visual C project.

CLUSTER_UNCHECKED</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-03-09T144440.068733Z"></a>
2011-03-09T14:44:40.068733Z Robin Watts</strong></p>
<blockquote>
<pre>
Disable PACIFY_VALGRIND in gximono.c. This define is intended to enable
extra code that can be performed so as to ensure that valgrind doesn't
report false positives. As such, disabling it should have no adverse
effects.

Unfortunately, it seems that in the portrait case, if we don't blank the
threshold array before we run, we get diffs. I have therefore taken this
memset out of the PACIFY_VALGRIND case and forced it to always happen.
This probably points to a bug and should be investigated properly.

No cluster differences expected.

</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-08T200017.821965Z"></a>
2011-03-08T20:00:17.821965Z Robin Watts</strong></p>
<blockquote>
<pre>
Simple optimisations to non SSE2 versions of halftoning code. There is
probably (certainly!) more performance to come with loop unrolling etc,
but this at least gets us the cheap win of avoiding repeated array accessing,
only setting, not blanking bits etc.

Cluster tests show no changes.

</pre>
<p>[base/gxht_thresh.c]</p>
</blockquote>

<p><strong><a name="2011-03-08T174051.077420Z"></a>
2011-03-08T17:40:51.077420Z Robin Watts</strong></p>
<blockquote>
<pre>
Change to gsroprun1.h to avoid over/underreading the source/texture buffers.

Given a valid byte range we expand that to the smallest enclosing CHUNK range
and guarantee never to access out of that range. Previously we could read
one CHUNK before/after it.

If this is a problem, simply ensure that CHUNK is byte rather than int on
your platform. This now behaves better than the original code which would
access one byte before/after the defined range.

No cluster differences seen in testing.

</pre>
<p>[base/gsroprun1.h]</p>
</blockquote>

<p><strong><a name="2011-03-08T163516.023687Z"></a>
2011-03-08T16:35:16.023687Z Tor Andersson</strong></p>
<blockquote>
<pre>
Add PNG reading support to the bmpcmp tool.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2011-03-08T151842.397978Z"></a>
2011-03-08T15:18:42.397978Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update to use the new device parameter /PreserveTrMode instead of explicitly checking
for the device name being 'pdfwrite'.

No differences expected.
</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2011-03-08T082754.788378Z"></a>
2011-03-08T08:27:54.788378Z Ken Sharp</strong></p>
<blockquote>
<pre>
Activate the new device parameters, and modify the resource code to use the first one
(AllowIncrementalCFF) instead of testing for the pdfwrite device name.

No differences expected.
</pre>
<p>[Resource/Init/gs_cidfn.ps base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2011-03-08T002607.330315Z"></a>
2011-03-08T00:26:07.330315Z Robin Watts</strong></p>
<blockquote>
<pre>
When using PACIFY_VALGRIND, don't call the memory blanking when the
mallocs have failed.

This should cure the SEGVs that were introduced, but otherwise cause no
changes.

</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T221929.253652Z"></a>
2011-03-07T22:19:29.253652Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Initialize ht landscape structure to zero when in portrait case.  There is
a conditional test on the value later.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T215702.879011Z"></a>
2011-03-07T21:57:02.879011Z Robin Watts</strong></p>
<blockquote>
<pre>
Correct line endings (were DOS, should be Unix).

No cluster differences.

CLUSTER_UNTESTED

</pre>
<p>[base/gxht_thresh.h base/gxht_thresh.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T211712.494498Z"></a>
2011-03-07T21:17:12.494498Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new debugging define to gximono.c, PACIFY_VALGRIND.

This enables various small tweaks in the code that stop valgrind throwing
errors. We believe that all the errors thrown are false positives, but
we enable this define anyway until we've sorted the current indeterminisms.
We'll disable it in a few days when we have solved the problems and check that
it really doesn't cause any more.

Cluster results unknown; probably no change. If this solves indetermisms
then we'll need to understand why.

</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T211156.916525Z"></a>
2011-03-07T21:11:56.916525Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix typos, one in a comment, one in an id string.

No cluster differences.

CLUSTER_UNTESTED

</pre>
<p>[base/gxipixel.c base/gzspotan.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T185808.149818Z"></a>
2011-03-07T18:58:08.149818Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for improper indexing of reversed portrait image line.  We were off
by one byte and ended up with one byte not set.  Def. a source of
indeterminism.  Thanks to Robin for tracking this down.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T154013.201330Z"></a>
2011-03-07T15:40:13.201330Z Ken Sharp</strong></p>
<blockquote>
<pre>
Undo revision 12243. The revision makes a debug print dependent on the value of the
'size_set' variable. Unfortunately, this variable is not defined in the cups_get_matrix
routine. It is defined in the other places it is used (cups_put_params).

This prevents a debug build from compiling on Windows, and I can't see how it would
work on any other OS when built for debug.

Reverted the change in order to build debug versions of Ghostscript.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T142111.345196Z"></a>
2011-03-07T14:21:11.345196Z Ken Sharp</strong></p>
<blockquote>
<pre>
Redo revision 12248 in a way which (hopefully!) doesn't cause seg faults.

Still no differences expected....
</pre>
<p>[base/gdevpdfx.h base/gdevpdfp.c base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2011-03-07T124047.052280Z"></a>
2011-03-07T12:40:47.052280Z Chris Liddell</strong></p>
<blockquote>
<pre>
Account for fonts in which (some) charstrings have been replaced with
Postscript procedures when FAPI decides an outline, or just a width
is required. The previous code only handled this case for rendered
glyphs from Freetype.

Bug 692029

No cluster differences expected.



</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T111219.973357Z"></a>
2011-03-07T11:12:19.973357Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite &amp; ps2write enhancement

Add some new keys to the device parameters dictionary for these devices. These will be
used to replace the explicit tests against the device name in various places in future
commits.

These will also later be documented and their use suggested for any devices requiring
the same capabilities.

No differences expected, these are not used yet.</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T094302.986503Z"></a>
2011-03-07T09:43:02.986503Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the second place where we may have to reset the Freetype glyph object.

Again, this means we only free the outline or bitmap data, and just let
Freetype &quot;reset&quot; its glyph object between glyphs.

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2011-03-07T070812.439689Z"></a>
2011-03-07T07:08:12.439689Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for compositor device chaining in the pdf14 device. This was detected in a
file that did overprint along with transparency. The pdf14 device incremented the
ref_count for the overprint_device, but never decremented it since the 'finalize'
of the pdf14 device was left at NULL rather than being set to the gx_forward_finalize
function which should be used. The gx_device_set_target, rather than rc_assign does
the proper set of the finalize proc pointer so that reference counts for the device
chain are properly maintained. Detected by customer 532 since their device freed
the clist buf_device resulting in the overprint_device having a 'target' pointer
to freed memory, causing a SEGV when the 'finalize' function executed.

No regressions expected since in the normal code, the GC frees the devices that
were left unreferenced by the free of the pdf14 device.
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2011-03-06T165219.765042Z"></a>
2011-03-06T16:52:19.765042Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to use proper DDA incrementation for interpolation.
We still maintain special loops for when there is no scalin
or for when it is 2x.  This should fix the intdeterminism issues.
Tested performance on customer files and no significant difference
was observed.   About 1500 cluster differences will be reported with
this fix.</pre>
<p>[base/lib.mak base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-06T111548.120325Z"></a>
2011-03-06T11:15:48.120325Z Chris Liddell</strong></p>
<blockquote>
<pre>
Instead of destroying and recreating freetype's glyph object for every glyph
we need to render, we can just free the &quot;transient&quot; parts: the bitmap or the
outline.

Saves a very small amount of time, and potentially reduces memory pool
fragmentation.

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2011-03-05T174646.608714Z"></a>
2011-03-05T17:46:46.608714Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Do not do debug output of an uninitialized variable

Thanks to Richard Hughes (hughsient at gmail dot com) for the patch.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-03-04T192750.114304Z"></a>
2011-03-04T19:27:50.114304Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Correction on Richard Hughes' patch for color management in the CUPS filters.
</pre>
<p>[cups/colord.c]</p>
</blockquote>

<p><strong><a name="2011-03-04T175100.067911Z"></a>
2011-03-04T17:51:00.067911Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix a warning and type error.  Code should produce the same results,
so no testing.

CLUSTER_UNTESTED

</pre>
<p>[base/gdevdgbr.c]</p>
</blockquote>

<p><strong><a name="2011-03-04T133411.568425Z"></a>
2011-03-04T13:34:11.568425Z Robin Watts</strong></p>
<blockquote>
<pre>
Add FIXME to gximono.c about possible future optimisation, so it is not
forgotten.

CLUSTER_UNTESTED

</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-04T093504.845642Z"></a>
2011-03-04T09:35:04.845642Z Chris Liddell</strong></p>
<blockquote>
<pre>
Only attempt to create files in the &quot;cups&quot; directory if it exists.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-03-04T064529.360251Z"></a>
2011-03-04T06:45:29.360251Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Reorganization of threshold code to move all the thresh holding operations into a new file. </pre>
<p>[base/gxht_thresh.h base/lib.mak base/gximono.c base/gximage.h base/gxht_thresh.c base/gsiparam.h]</p>
</blockquote>

<p><strong><a name="2011-03-04T061653.560659Z"></a>
2011-03-04T06:16:53.560659Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing test for /packedarraytype during recursive dereferencing
of composite PDF objects. Bug 692018, customer 850.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2011-03-03T222022.363870Z"></a>
2011-03-03T22:20:22.363870Z Henry Stiles</strong></p>
<blockquote>
<pre>
The get_bits() device call was assumed to return copied data and fill
in the allocated memory pointed to by the variable row, in fact the
gets_bit call can also just return a pointer and row is never
initialized, now we detect that.  This broke raster operations for the
display device and appears to have resulted in the use of
uninitialized data in other files.  A sampling of changed files showed
single pixel differences in files.

</pre>
<p>[base/gdevdgbr.c]</p>
</blockquote>

<p><strong><a name="2011-03-03T202923.683592Z"></a>
2011-03-03T20:29:23.683592Z Robin Watts</strong></p>
<blockquote>
<pre>
Update plibc and plibk to output pams when built with DEBUG_DUMP.

No cluster differences possible as this code is not used in cluster testing.

CLUSTER_UNTESTED</pre>
<p>[base/gdevplib.c]</p>
</blockquote>

<p><strong><a name="2011-03-03T202343.920044Z"></a>
2011-03-03T20:23:43.920044Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new pamcmyk4 device. Identical to pamcmyk32 device, but works in 1 bit
per component, rather than 8.

No cluster differences expected as this code isn't tested.</pre>
<p>[psi/msvc.mak base/unix-gcc.mak base/gdevpbm.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-03-03T175148.590954Z"></a>
2011-03-03T17:51:48.590954Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Enabling of thresholding code as default image rendering of monochrome/indexed
images for monochrome devices.  This will result in about 2432 differences reported.
I stepped through them in a bmpcmp to check for serious issues.  The minor halftone
differences were due to the fact that we step in the device space for pixel replication
in the threshold code but step in source space for the rect fill code.  Enabling this
code now will make it easier to track issues as we expand the use of the thresholding code.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-03-03T154846.192376Z"></a>
2011-03-03T15:48:46.192376Z Robin Watts</strong></p>
<blockquote>
<pre>
Add plib device (c and h) files to ghostscript project file.

No cluster differences expected as project file is not used by cluster.

CLUSTER_UNTESTED</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-03-03T000827.251299Z"></a>
2011-03-03T00:08:27.251299Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added the ability to specify bmpcmp in addition to a normal clusterpush.pl
operation.  Both commands will be queued in the correct order.

Examples:

./clusterpush.pl gs bmpcmp
./clusterpush.pl bmpcmp gs pcl xps ls

Note that the order of the options is not signficant.

The command line parser for clusterpush.pl changed signficantly with this
revision.  It should be backwards compatible with the previous version
but it's possible that subtle differences exist.  If a clusterpush.pl
command line behaves differently than you expect please open a bug.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/clusterpush.txt]</p>
</blockquote>

<p><strong><a name="2011-03-02T221239.208205Z"></a>
2011-03-02T22:12:39.208205Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix rop operation on plib device. Previously, I'd disabled get_bits_rectangle
on the buffer device as the data is normally in the format we need it in
anyway, so it's a NOP. Unfortunately it's needed for rop operation, so
reintroduce it.

To avoid infinite loops, we have to cope with GB_RETURN_POINTER. This is
easy to add to the gdevmpla.c device, but it's less clear that adding it
into the mem device is the right thing to do. We therefore introduce a
shim function to cope with GB_RETURN_POINTER with the mem device.

No cluster differences expected as this is disabled by default.

Testing shows that the planar device is now very close to the non planar
equivalent.</pre>
<p>[base/gdevplib.c base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-03-02T205046.635530Z"></a>
2011-03-02T20:50:46.635530Z regression</strong></p>
<blockquote>
<pre>
Minor bug fixes and improvements to the cluster system, the most
signifcant of which is the addition of &quot;CLUSTER_UNTESTED&quot; detection.
If this keyword appears anywhere within the log message of a commit that
revision will not be tested by the cluster.

Less interesting changes include:

Fix for bmpcmp if large numbers of differences are produced

Addition of 'svn cleanup' calls before 'svn update' to handle nodes that
crashed during previous 'svn update' and left the repositories locked

Set status of all nodes to idle after jobs are completed.

Fix bugs that caused bmpcmp completed emails to be appended to the
previous message.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/pngs2html.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2011-03-02T185123.645025Z"></a>
2011-03-02T18:51:23.645025Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Introduction of a member variable in gs_image1_t, which will let us know the
original source type of the image.  For example if, the parent source were type3
this spawns two type1 images.  One for the mask and one for the image data.  The
mask is rendered using image render simple.  If the image is monochrome or indexed,
it is rendered with the renderer in gximono.c .   If we are going to a halftone
monochrome device, we end up using the fast threshold based renderer which has its
interpolation stepping in device space as opposed to source space.  This causes very
minor differences between the mask and the image data.  To avoid this, we use the old
rect_fill code for the image type3 data to ensure a more exact spatial match.</pre>
<p>[base/gximono.c base/gximage1.c base/gximage2.c base/gximage3.c base/gximage4.c base/gximage.h base/gximag3x.c base/gsiparam.h]</p>
</blockquote>

<p><strong><a name="2011-03-02T133952.433442Z"></a>
2011-03-02T13:39:52.433442Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bmpcmp bug; the map array was being incorrectly sized, resulting in
occasional memory corruption.

No cluster differences expected.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2011-03-02T000925.760114Z"></a>
2011-03-02T00:09:25.760114Z Robin Watts</strong></p>
<blockquote>
<pre>
Debug output for gdevplibm (monochrome planar interlaced bands) was broken
and writing malformed pbms. Simple fix - move the mono output code to the
mono branch of the if rather than the grey one.

No cluster differences expected.</pre>
<p>[base/gdevplib.c]</p>
</blockquote>

<p><strong><a name="2011-03-01T193056.622647Z"></a>
2011-03-01T19:30:56.622647Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove DOS line endings from .gitignore files.</pre>
<p>[.gitignore /trunk/ghostpdl/.gitignore]</p>
</blockquote>

<p><strong><a name="2011-03-01T171830.158752Z"></a>
2011-03-01T17:18:30.158752Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for error introduced in non-SSE2 code when I removed the inclusion
of the transfer function into the threshold values.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-02-28T223128.419926Z"></a>
2011-02-28T22:31:28.419926Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Added color management support to the CUPS ...toraster filters

Replaced the ...toraster filters by one filter executable, gstoraster,
written in C. This filter converts both PostScript and PDF input into
the CUPS Raster format using Ghostscript with the &quot;cups&quot; output
device, controlled by settings in the print queue's PPD file, by
command line options, and by settings embedded in a PostScript input
stream. This is now done with color management based on
printer-specific ICC profiles referenced in the PPD file or supplied
by the color management daemon colord. The CUPS PPD extensions
concerning color management
(http://www.cups.org/documentation.php/doc-1.4/spec-ppd.html) are made
use of if used and the colord daemon is used if it is present. colord
is accessed via D-Bus, but the new filter can also be compiled without
D-Bus and in this case only the CUPS PPD extensions and ICC profiles
assigned to the print queue are used for color management.

Thanks to Richard Hughes for the patch.

</pre>
<p>[cups/pstoraster.in cups/pstoraster.convs cups/gstoraster.c cups/pdftoraster.c cups/cups.mak base/Makefile.in cups/colord.c base/configure.ac cups/gstoraster.convs cups/pdftoraster.convs cups/colord.h]</p>
</blockquote>

<p><strong><a name="2011-02-28T203043.994348Z"></a>
2011-02-28T20:30:43.994348Z Robin Watts</strong></p>
<blockquote>
<pre>
X offset in custom 24 -&gt; 888 planar copy_color routine was being miscalculated.
Simple fix.

No cluster differences expected as this is untested.</pre>
<p>[base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-02-28T193534.539587Z"></a>
2011-02-28T19:35:34.539587Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove silly debugging hack left in gdevmpla.c by accident. Only affects
planar 888 devices (i.e. none enabled by default).

No cluster differences expected.</pre>
<p>[base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-02-28T193237.270892Z"></a>
2011-02-28T19:32:37.270892Z Robin Watts</strong></p>
<blockquote>
<pre>
Add simple .gitignore files.</pre>
<p>[.gitignore /trunk/ghostpdl/.gitignore]</p>
</blockquote>

<p><strong><a name="2011-02-28T104811.852106Z"></a>
2011-02-28T10:48:11.852106Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence a compiler (scan-build) warning about a variable never being used.</pre>
<p>[base/gdevpdfo.c]</p>
</blockquote>

<p><strong><a name="2011-02-28T052346.157854Z"></a>
2011-02-28T05:23:46.157854Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for mis-scale on decode for render mono cache.  Fixes improper rendering
of 148-11.ps with new halftone code.</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2011-02-27T232610.406657Z"></a>
2011-02-27T23:26:10.406657Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal (or inactivation) of code to include inverse of transfer function in
the threshold values.  Also minor fix for scaling issue in halftone code in
portrait mode.  Code is inactive so no regression diffs expected.</pre>
<p>[base/gximono.c base/gsht.c]</p>
</blockquote>

<p><strong><a name="2011-02-27T232330.287293Z"></a>
2011-02-27T23:23:30.287293Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a bug that was introduced with the ICC branch.  This was causing a
mismatch between banded an unbanded rendering and in particular had rendering
errors in banded mode when rendering PS and PDF files that had a non identity
transfer function.  Minor progression diffs in many files with very visible
progressions in 246-01.ps, 258-01.ps as examples.  What was happening is that
when running in clist mode, we were not recognizing that a transfer function was
present when doing the ICC branch.  Stumble upon this working the transfer function
in with the new threshold based halftoning code.</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2011-02-27T015228.834714Z"></a>
2011-02-27T01:52:28.834714Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PDF with ASCII85Decode filter that has a dictionary (even if empty)
instead of a 'null' for the params. Stack has the param dict second on the
stack, not third. Bug 692003, customer 700.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2011-02-26T191752.838303Z"></a>
2011-02-26T19:17:52.838303Z Till Kamppeter</strong></p>
<blockquote>
<pre>
TCUPS Raster driver: The macros in the cups_put_params() function
could access uninitialized variables when logging error messages and
this could lead to a segmentation fault, making Ghostscript crashing
and many jobs not printed. Debian bug #615202.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-02-26T184059.351498Z"></a>
2011-02-26T18:40:59.351498Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PDF 1.7 fts_08_0808.pdf which can clip the corner of the really wide
diagonal (magenta) stroke when banding is used. This was due to the 'extension'
of a square line cap being incorrectly calculated. Customer 532 issue.
</pre>
<p>[base/gxstroke.c]</p>
</blockquote>

<p><strong><a name="2011-02-26T182508.170267Z"></a>
2011-02-26T18:25:08.170267Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix BUILD_SYSTEM conditional for 64 vs. 32 and add 'for Win64' message
to help avoid confusion during setup.
</pre>
<p>[psi/winint.mak]</p>
</blockquote>

<p><strong><a name="2011-02-25T235750.833144Z"></a>
2011-02-25T23:57:50.833144Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug reported by &quot;new customer feb 2011&quot;, whereby gs 8.71 on an embedded
ppc platform is getting the colours on an image in a pdf wrong.

Debugging shows that in gs_indexed_limit_and_lookup we take a floating point
value, clip it, convert it to an int and use it to lookup which colour to use.
On the reference x86 run we have a value of 1 (0x3f800000 as an IEEE float).
On the ppc we have 0.999999 (0x3f7fffff as an IEEE float). This tiny difference
results in values of 1 and 0 respectively when converted to the int, giving
the wrong colour.

The fix here is to add a small epsilon before conversion.

A quick experiment in adding 0.5 rather than epsilon shows worse results.

15 cluster differences in testing, none that actually survived a bmpcmp.


</pre>
<p>[base/gscolor2.c]</p>
</blockquote>

<p><strong><a name="2011-02-25T194939.160812Z"></a>
2011-02-25T19:49:39.160812Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that we only do the fast code if we are in portrait or landscape mode.
Skewed objects will have to use the rect fill method.</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-02-25T193355.727547Z"></a>
2011-02-25T19:33:55.727547Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition of code to incorporate the inverse of the transfer curve into the
threshold matrix.  If the curve is an inverting type (e.g. 0 to 1 and 1 to 0)
then a the thresholding comparison is switched.  Also, if the curve is not
monotonic, it can not be inverted and we revert to the old rect fill method.
This commit has the code disabled so there should not be any regressions.</pre>
<p>[base/lib.mak base/gximono.c base/gzht.h base/gxdht.h base/gsht.c]</p>
</blockquote>

<p><strong><a name="2011-02-25T181349.002375Z"></a>
2011-02-25T18:13:49.002375Z Ray Johnston</strong></p>
<blockquote>
<pre>
Set the GS_DLL to gsdll64.dll for a 64-bit build. The file list was correct,
but the registry was not. Related to bug 691975 but not verified (I just
checked the registry using regedit).
</pre>
<p>[psi/dwsetup.cpp]</p>
</blockquote>

<p><strong><a name="2011-02-25T074221.024741Z"></a>
2011-02-25T07:42:21.024741Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise how the UFST setting are handled in the makefiles.

The previous version relied on GNU make extensions (specifically
conditionals), whilst this version does not.

No cluster differences expected.

</pre>
<p>[base/lib.mak psi/msvc.mak base/Makefile.in psi/int.mak]</p>
</blockquote>

<p><strong><a name="2011-02-24T111312.751072Z"></a>
2011-02-24T11:13:12.751072Z Chris Liddell</strong></p>
<blockquote>
<pre>
Hopefully the final iteration of allowing SHARE_ZLIB
to work correctly with COMPILE_INITS=1.

This version changes only Unix-like builds, so Windows need
not suffer, and also removes the reliance GNU make specific
extensions.

Bug 691986


No cluster differences.

</pre>
<p>[base/unix-aux.mak]</p>
</blockquote>

<p><strong><a name="2011-02-24T005108.210054Z"></a>
2011-02-24T00:51:08.210054Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new plib family of devices (PLanar Interlaced Buffer). These 5 devices
(plib = r8g8b8, plibg = g8, plibm = mono, plibc = c8m8y8k8, plibk = c1m1y1k1)
use a new 'band donor' interface to request a band buffer, pass back
rendered bands, and release bands at the end of the page.

The idea is that other firmware can implement this simple interface, and
Ghostscript can thus easily drive systems that expect planar interlaced
input.

On the whole there is relatively little new code here; the majority of the
work is done using the existing planar device with the odd tweak here and
there. Firstly, we lift the (artifical) constraints of the number of components
supported (so greyscale is accepted as a planar device for simplicity).
We spot the num_components = 1 case and just use the existing memory device
interface.

Secondly, we add a fast 888chunky to 888planar unpacking routine for use
with copy_color.

Within the plib device itself, we make use of the facility to set the line
indexes to allow for interlaced operation. It would be easy to extend this
device to offer planar non-interlaced operation too built on the same band
donor interface simply by omitting this code.

For debugging purposes we have options within the plib devices to store the
data returned in each band into pxm files (as appropriate to the number of
components). This code is deactivated by default as the output of this
device is via the band donor interface, not the output file.

No cluster differences expected as this code is disabled currently.

Next job: discuss with Marcos how to cluster test this.

</pre>
<p>[base/gdevplib.c base/gdevmpla.c base/gdevplib.h base/gdevppla.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-02-23T160025.505362Z"></a>
2011-02-23T16:00:25.505362Z Robin Watts</strong></p>
<blockquote>
<pre>
Introduce and enable 8 bit rop run templated code.

No cluster differences shown.

</pre>
<p>[base/gsroprun8.h base/lib.mak base/gsroprun.c ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-23T144145.053687Z"></a>
2011-02-23T14:41:45.053687Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Remove commented out code left over from commit 12192</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-02-23T115400.145784Z"></a>
2011-02-23T11:54:00.145784Z Robin Watts</strong></p>
<blockquote>
<pre>
Reintroduce runrop changes to Visual Studio solution lost in recent merge
(r12189).

No cluster differences expected.

</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-23T082540.039813Z"></a>
2011-02-23T08:25:40.039813Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revision to the changes for using the system zlib.

r12184 caused problems on Windows.

This approach uses configure to determine whether
freetype should use the system zlib, based on whether
Ghostscript is using the system zlib.

Windows, of course, doesn't use configure, so it will
never attempt to the use the system zlib.

Bug 691986

No cluster differences expected

</pre>
<p>[base/freetype.mak base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-02-23T032618.063337Z"></a>
2011-02-23T03:26:18.063337Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Temporary fix to turn off fast code for cases where the bps of the index image is not 8bps</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2011-02-23T010908.645858Z"></a>
2011-02-23T01:09:08.645858Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Undo of rev 12184 by commenting out the changes for now.  This change broke the windows build.  </pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-02-22T213158.870907Z"></a>
2011-02-22T21:31:58.870907Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix warnings caused by merging the halftone branch to the trunk in r12189.

No cluster differences expected.

</pre>
<p>[base/gxipixel.c base/gximono.c base/gsht.c]</p>
</blockquote>

<p><strong><a name="2011-02-22T200337.651092Z"></a>
2011-02-22T20:03:37.651092Z Robin Watts</strong></p>
<blockquote>
<pre>
Forgot this file inthe last commit. Sorry!

</pre>
<p>[base/gsroprun24.h]</p>
</blockquote>

<p><strong><a name="2011-02-22T195243.275685Z"></a>
2011-02-22T19:52:43.275685Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Merge of halftone branch into the trunk.  The new rendering code is actually
disabled with this commit.  As such, there should not be any testing
differences.</pre>
<p>[base/gxipixel.c base/lib.mak base/Makefile.in base/gxcie.h /trunk/gs base/gsht.c base/gxcmap.c psi/msvc.mak ghostscript.vcproj base/gximono.c base/gzht.h base/gxidata.c base/configure.ac base/gxdht.h base/gxcmap.h base/gxicolor.c base/gximage.h base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2011-02-22T193857.296889Z"></a>
2011-02-22T19:38:57.296889Z Robin Watts</strong></p>
<blockquote>
<pre>
Add templated 24bit rops. Clusterpushing seems to indicate this works.

No cluster differences expected.

</pre>
<p>[base/lib.mak base/gsroprun.c base/gsroprun1.h]</p>
</blockquote>

<p><strong><a name="2011-02-22T161008.900201Z"></a>
2011-02-22T16:10:08.900201Z Chris Liddell</strong></p>
<blockquote>
<pre>
Tweak to allow compressed romfs to be built when we're configured
to use the system's zlib rather than our own.

As a side effect of this, freetype is now configured to use the
same zlib instance as Ghostscript (instead of freetype's own
subset of zlib sources).

Bug 691986

No cluster differences expected.

</pre>
<p>[base/freetype.mak base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-02-22T154409.440053Z"></a>
2011-02-22T15:44:09.440053Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new gsroprun files to Visual Studio solution.

No cluster differences expected.

</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-22T152803.132855Z"></a>
2011-02-22T15:28:03.132855Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix DO_FILL_RECT_BY_COPY_ROP code, and enable it by default.

The only thing wrong with the code before is the case when strip_tile_rectangle
is called with both color0 and color1 being gx_no_color_index. That translates
to rop=0xAA (i.e. D - no change). This is actually a special case that means
it's really doing a copy_color operation. We handle this by punting in the
same way as the old code used to.

No cluster differences expected.

</pre>
<p>[base/gdevm1.c]</p>
</blockquote>

<p><strong><a name="2011-02-22T001816.845591Z"></a>
2011-02-22T00:18:16.845591Z Robin Watts</strong></p>
<blockquote>
<pre>
Enable mono_copy_mono implemented in terms of mono_copy_rop.

Very small changes to the code to ensure that the copied area is correctly
clipped, this now gives identical results to the existing code, but should
be faster.

The tile_rectangle code is still misbehaving - will fix this in later
revisions (I hope).

No cluster differences expected.

</pre>
<p>[base/gdevm1.c]</p>
</blockquote>

<p><strong><a name="2011-02-21T171210.825257Z"></a>
2011-02-21T17:12:10.825257Z Robin Watts</strong></p>
<blockquote>
<pre>
Recommit of 12163 to the trunk.

The fit_copy macro checks for the start address being off the top of the
screen, and clips it to zero. When it does this, it does: data -= y * raster,
which gives problems if raster is a uint ( as uint * int == uint in C) and
data is a 64 bit pointer.

The fix is simply to cast the result to an int before using it. This solves
various SEGVs with the mono_copy_mono using mono_copy_rop code.

No cluster differences expected.

</pre>
<p>[base/gxdevice.h]</p>
</blockquote>

<p><strong><a name="2011-02-21T160425.039434Z"></a>
2011-02-21T16:04:25.039434Z Chris Liddell</strong></p>
<blockquote>
<pre>
The structure containing the pthreads native elements making up a
gp_semaphore structure was ending up incorrectly aligned on
sparc32 Linux systems, and caused a bus error. Annoyingly, sparc32
uses 32 bit pointers but requires 64 bit aligment.

This change enforces maximum alignment for the elements of
gp_semaphore, for the current platform.

No cluster differences expected.

Bug 691989

</pre>
<p>[base/lib.mak base/gpsync.h]</p>
</blockquote>

<p><strong><a name="2011-02-21T122920.951013Z"></a>
2011-02-21T12:29:20.951013Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix stupid typo in gsroprun.c that was causing templated rops to be different
to non templated rops. With this fixed the cluster shows identical results
(modulo indeterminisms), but the templated code is faster - so enable by
default.

No cluster differences expected.

</pre>
<p>[base/gsroprun.c]</p>
</blockquote>

<p><strong><a name="2011-02-20T124120.382249Z"></a>
2011-02-20T12:41:20.382249Z Robin Watts</strong></p>
<blockquote>
<pre>
Initial reorganisation of code towards using copy_rops for copy_mono.

Split the guts of mem_mono_strip_copy_rop out into a separate function
mem_mem_strip_copy_rop_dev. This new function handles the actual copy in
device space, leaving the original to cope with fiddling the rop according
to colors.

This 'inner' function is moved to gdevm1.c so it is present in both gs
and ghostpcl builds. The existing (bitrotted) code in gdevm1.c to
'USE_COPY_ROP' is revamped to call mem_strip_copy_rop_dev, but is disabled
currently as the cluster is showing a few differences that need to be
tracked down.

Also, this introduces new code to do gsroprun's using code in a generic
header file that gets repeatedly #included with different options. This
code is currently disabled until we can verify that it gives identical
results. The new 'templated' code uses native ints where possible, and
(in initial limited testing) seems to perform better than copy_mono.

No cluster differences expected.

</pre>
<p>[base/gdevmem.h base/lib.mak base/gsroprun.c base/gdevm1.c base/gsropt.h base/gsroprun1.h base/gdevmr1.c]</p>
</blockquote>

<p><strong><a name="2011-02-19T070113.923016Z"></a>
2011-02-19T07:01:13.923016Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add a missing check for null value during PDF resource enumeration.
Bug 691892, customer 532.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2011-02-18T132259.764503Z"></a>
2011-02-18T13:22:59.764503Z Robin Watts</strong></p>
<blockquote>
<pre>
Committing fix for Bug 689031 submitted by Shailesh Mistry under the
bug bounty program. Tests out fine (1 minor difference, looks like a
progression to me).

See bug for full discussion, but basically this removes a few calls to
path_position_valid in exchange for accessing the equivalent data kept
locally.


</pre>
<p>[base/gxchar.c base/gzpath.h base/gxccache.c base/gspath1.c]</p>
</blockquote>

<p><strong><a name="2011-02-18T115125.345393Z"></a>
2011-02-18T11:51:25.345393Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement (pdfwrite) : performance improvement

Bug #691946 &quot;Conversion to PDF becomes slower and slower&quot;

There are many places where pdfwrite compares composite objects for equality. This can
be a very slow process, depending on the nature of the object, and becomes progressively
slower as more object are added to storage.

Previously we had added a MD5 hash to the stream data of a cos_stream in order to
improve the performance when checking fonts for equality, this change takes the whole
process much further. We now store an MD5 'fingerprint' for each composite object,
initially this is not computed and is marked as not valid.

Whenever an equality test takes place we check to see if the composite object has an MD5
hash calculated, and if it does, we compare the MD5 hashes. If it does not then we
compute an MD5 hash, store it, and mark it as valid. Note that for cos_stream types
we store *two* hashes, one for the dictionary and one for the stream data.

If we alter the contents of a composite object then we mark its MD5 hash as invalid so
that we recompute it on the next occurence. Technically there could be a problem if
a composite object contains a composite object, and the descendant object is altered
after the MD5 hash is calculated for the parent. However this should not occur given
the way these structures are used (these are pdfwrite internal structures, *not* PS or
PDF objects available to the interpreter).

This very significantly improves performance on some files, the test file for bug
#691946 takes 2642 seconds without this change (and DetectDuplicateImages true) while
it takes 963 seconds after this change.

Note that this change depends on revision 12169 and should ideally be used with
revisions 12168 to 12171 inclusive.

No other differences expected.
</pre>
<p>[base/gdevpdfo.c base/gdevpdfo.h]</p>
</blockquote>

<p><strong><a name="2011-02-18T113756.561896Z"></a>
2011-02-18T11:37:56.561896Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : images being scaled incorrectly

Found while dealing with other problems. pdfwrite uses the image 'height' (rendered
height) and number of lines of data to calculate a 'scale' which it then applies to
the current Transformation Matrix in order to calculate an image matrix.

However, when an image was detected as a duplicate, the scale factor was calculated
from the first image's dimensions, and then applied to the CTM for the second matrix.

This did not appear to cause problems for PostScript and PDF but causes serious bugs
in a number of PCL files, and was clearly incorrect. We now save and restore the
height and width when substituting images to prevent this problem

</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2011-02-18T113207.033929Z"></a>
2011-02-18T11:32:07.033929Z Ken Sharp</strong></p>
<blockquote>
<pre>
enhancement (pdfwrite) : Allow duplication image detection to be disabled

pdfwrite tests every (non-inline) image against every other stored image to see if it is
a duplicate, and if so does not embed the duplicate in the output but simply references
the original.

This can be slow for files with many images (each stored image must be checked when a
new image is encountered) and may be of limited benefit.

The new flag DetectDuplicateImages (default true) can be used to enable or disable
this behaviour

No differences expected
</pre>
<p>[base/gdevpdfj.c base/gdevpdfx.h base/gdevpdfp.c doc/Ps2pdf.htm base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2011-02-18T112524.853829Z"></a>
2011-02-18T11:25:24.853829Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Correction to an equality test

This fixes a long-standing bug when checking the equality of patterns.

We need to ensure when substituting patterns that neither of the patterns is already
substituted. But the code only tested one of the patterns (and was a duplicate of
another test), which led to incorrect results. This should always have been a problem
but for some reason seems to have been masked in previous releases. New code for
testing equality of composite objects revealed the problem.

No differences expected, as the problem is only revealed with code which follows in a
subsequent commit.
</pre>
<p>[base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2011-02-18T111523.457563Z"></a>
2011-02-18T11:15:23.457563Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a typo in an enumerated type. No differences expected.
</pre>
<p>[base/gxhldevc.h base/gxhldevc.c base/gdevpdfg.c]</p>
</blockquote>

<p><strong><a name="2011-02-15T163659.934186Z"></a>
2011-02-15T16:36:59.934186Z Henry Stiles</strong></p>
<blockquote>
<pre>
Double the allowed space for cached chars and increase the maximum
byte size of a single glyph that can be cached.
</pre>
<p>[base/gsfont.c]</p>
</blockquote>

<p><strong><a name="2011-02-15T150755.282721Z"></a>
2011-02-15T15:07:55.282721Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for building the gs***w64.exe self extracting installer compatible with
the new 64-bit binary naming and makefile macro (BUILD_SYSTEM)
</pre>
<p>[psi/winint.mak]</p>
</blockquote>

<p><strong><a name="2011-02-15T092128.927211Z"></a>
2011-02-15T09:21:28.927211Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that the OpenPrinting drivers get removed from the drivers list
if iconv/libiconv are not available.

The strings used to identify the drivers in the list were incorrect.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-02-14T203933.924424Z"></a>
2011-02-14T20:39:33.924424Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691917. In revision 11146 I made op_array_table_global and
op_array_table_local be elements of the context rather than being
globals, and changed all the code to access these elements through
the context.

Unfortunately I forgot to cope with when new contexts are generated by
forking execution. The correct fix is, I believe to simply copy the
op_table pointers over to the new context. This has been done here, and
seems to solve the reported bug.

No cluster differences expected.

</pre>
<p>[psi/zcontext.c]</p>
</blockquote>

<p><strong><a name="2011-02-14T110439.509187Z"></a>
2011-02-14T11:04:39.509187Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed a tab accidentally introduced in rev 12082.
</pre>
<p>[Resource/Init/cidfmap]</p>
</blockquote>

<p><strong><a name="2011-02-10T171423.128533Z"></a>
2011-02-10T17:14:23.128533Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that a --build option is propogated to the other
configure scripts we call.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-02-10T132158.493309Z"></a>
2011-02-10T13:21:58.493309Z Ken Sharp</strong></p>
<blockquote>
<pre>
fix error in revision 12140

When fetching the size of the stream for a /Indexed colour space, omitted to check if the
/Length of the stream was an indirect object. Now dereference the object if this is the
case.

Should fix the 14 files with errors introduced in 12140.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-02-10T104326.255155Z"></a>
2011-02-10T10:43:26.255155Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : colour space handling bug and improved handling of broken ICC space

Bug #691941 &quot;Interpretation of PDF aborts with /typecheck&quot;

The PDF file in the specimen contains an invalid colour space of the form:

/Indexed [/ICCBased &lt;&lt;/N 1 /Alternate [/Indexed /DeviceRGB 255 7 0 R]&gt;&gt;] 255 7 0 R]

The number of components in the ICCBased specification is incorrect, as the profile has
3 channels. This was not detected previously. Falling back to the /Alternate we see
that we have a /Indexed space depending on a /Indexed space which is also invalid, but
we choose to ignore this.

There was also a bug in the colour space handling for ICCbased spaces which caused a
typecheck if the alternate space was a /Indexed space.

Finally, the PDF interpreter is updated so that when given a stream as the data source
for a /Indexed space it reads and returns a string which is the greater of the declared
size of the stream, or the calculated size required, given the number of components.
Previously we always returned the calculated size, which was too little in this case
as the number of components in the ICCBased space is incorrect.

With these changes the (invalid) specimen file runs to completion.

No differences expected.
</pre>
<p>[psi/zcolor.c psi/zicc.c Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-02-10T103323.506445Z"></a>
2011-02-10T10:33:23.506445Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix Bug #691918

Update the Unicode decodings applied to TrueType fonts to match the latest Adobe glyph
list. Fixes some problems with incorrect mappings and adds numerous new mappings. A
similar but less extensive change is made to the FCO_Unicode mappings as well.

Thanks to SaGS for the work on this problem.

No differences expected as these are only used for ToUnicode CMaps.</pre>
<p>[Resource/Decoding/Unicode Resource/Decoding/FCO_Unicode]</p>
</blockquote>



<h2><a name="Version9.01"></a>Version 9.01 (2011-02-07)</h2>

<p>This is the second release in the stable 9.x series.

<p> Highlights in this release include:

<p> A new, robust CFF parser implemented in C (replacing the previous
Poscript one),

<p> tiffscaled device - this renders internally as tiffgray, but then
downsamples by an integer scale factor (specified by -dDownScaleFactor=n)
and error diffuses to 1bpp output. The tiffscaled device also implements
limited minimum feature size functionality; by setting -dMinFeatureSize
to 1, 2 or 3, the device output is guaranteed to generate minimum dot
sizes as multiples of the final resolution, useful for devices that
offer finer position control than dot size control.


<p> Add DSC compatible output in ps2write.

<p> Windows makefiles now support 64 bit builds on 64 bit systems.

<p> A number of performance, memory use, and stability improvements with the new
features introduced in 9.00, plus the usual bug fixes.

<p> We have also dropped support for Watcom and Borland development environments.
These had not been maintained for some time, and were suffering "bit rot".


<p>For a list of open issues, or to report problems,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.01_Incompatible_changes"></a>Incompatible changes</h3>

<p>
No recorded incompatible changes.

<h3><a name="9.01_Changelog"></a>Changelog</h3>

<p><strong><a name="2011-02-07T141027.833602Z"></a>
2011-02-07T14:10:27.833602Z Chris Liddell</strong></p>
<blockquote>
<pre>
Some updates to the details of the UFST and Freetype related
information.

Plus adding the warning about Xfonts pending removal.
</pre>
<p>[doc/Make.htm doc/Xfonts.htm]</p>
</blockquote>

<p><strong><a name="2011-02-05T152932.296497Z"></a>
2011-02-05T15:29:32.296497Z Chris Liddell</strong></p>
<blockquote>
<pre>
As we plan to deprecate Xfonts in a future release, add a
warning message to this effect when an Xfont is used, as follows:

&quot;Warning: the Xfonts feature is deprecated and will be removed in a future release.&quot;

No cluster differences expected.

</pre>
<p>[base/gxccman.c]</p>
</blockquote>

<p><strong><a name="2011-02-05T152725.033646Z"></a>
2011-02-05T15:27:25.033646Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge r12117 from the &quot;halftone&quot; branch into trunk, the original commit
comment says:

Fix bug in bit devices rgb mapping procedure; in the ncomp == 1 case it
was only setting the first component. This was causing indeterminisms in
calling code, which has been giving vastly different timings in Norberts
tests.

This has apparently been here since revision 3318.

</pre>
<p>[base/gdevbit.c]</p>
</blockquote>

<p><strong><a name="2011-02-04T155142.379449Z"></a>
2011-02-04T15:51:42.379449Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix problem with shifting in gsroprun.c. I had systematically got this
wrong throughout the code, but fixed it everywhere except this one
case in an earlier commit. This completes the fix.

No cluster changes expected.

</pre>
<p>[base/gsroprun.c]</p>
</blockquote>

<p><strong><a name="2011-02-03T123028.178697Z"></a>
2011-02-03T12:30:28.178697Z Chris Liddell</strong></p>
<blockquote>
<pre>
A final tweak to the FAPI/UFST code to keep C compilers
less liberal than gcc happy (specifically Visual C).

No functional changes.

</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T182757.905008Z"></a>
2011-02-02T18:27:57.905008Z Chris Liddell</strong></p>
<blockquote>
<pre>
A couple of minor UFST related tweaks to account for differences between
UFST 6.2 and UFST 5.x.

</pre>
<p>[psi/fapiufst.c base/gxfapiu.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T171809.939035Z"></a>
2011-02-02T17:18:09.939035Z Ray Johnston</strong></p>
<blockquote>
<pre>
Change Windows makefiles extensively for 64-bit issues:
1. Command line nmake works now for 32-bit build on 64-bit OS
2. 64-bit builds use different directories for objects to allow 32 and
64 bit builds to be alternated without confusion. 64-bit objects have
'64' suffix to the 32-bit objects which remain in the same places
3. 64-bit binaries are now named uniquely, e.g. gsdll64.dll and gswin64.exe
Binaries coexist in 'bin' directory since names are unique.
4. 'Style' changes to the makefiles to remove the '32' suffix from files
that are not 32-bit specific -- hopefully will prevent future confusion.

Tested with VS 2005 and VS 2008 as well as with GhostPDL.sln (to make sure
the pcl, xps, and language_switch builds don't break.
</pre>
<p>[psi/msvc64.mak psi/gsdll64.def psi/dwsetup.cpp psi/msvc.mak psi/dwmain.c psi/dw64c.def psi/msvc32.mak psi/dwmain64.def psi/dwdll.c base/msvctail.mak psi/dwimg.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T153453.024741Z"></a>
2011-02-02T15:34:53.024741Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove 4 cases where lines had apparently spurious leading spaces, this seriously
confused nmake and refused to build on Windows.

No cluster differences expected.
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T151453.428205Z"></a>
2011-02-02T15:14:53.428205Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Enable ps2write on PCL

Bug #691881 &quot;ps2write broken with GhostPCL&quot;

ps2write formerly required 4 'resource' PostScript files stored on disk in order to
write a PostScript header to the output file. These files have now been converted into
'C' header files and included in the source in earlier revisions.

This commit removes the last barrier to ps2write working with PCL (and other
non-PostScript languages) by removing a disk-based check for opdfread.ps.

No differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-02-02T145537.673202Z"></a>
2011-02-02T14:55:37.673202Z Robin Watts</strong></p>
<blockquote>
<pre>
Add cups files to VS project. This is a very simple, clean patch to the
gs visual studio project file, so (famous last words) can't affect the
cluster build and shouldn't conflict with anyone else.

</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-02T141215.676565Z"></a>
2011-02-02T14:12:15.676565Z Chris Liddell</strong></p>
<blockquote>
<pre>
A set of changes to make it easier to use the UFST with Ghostscript
and to get us closer to having the option of the UFST handling font
types other than the Microtype fonts.

The UFST build, using the default COMPILE_INITS=1  will now include
the Microtype FCO files in the rom file system along with the other
initialisation files (it does not currently strip out the normal
Postscript fonts in Resource/Fonts), and setup default values for
the various paramters required to have Ghostscript use the
Microtype fonts (these can still be overridden on the command
line). For the build with COMPILE_INITS=0, the default paths
will use the path to the UFST you specify for configure, or
nmake on Windows.


Included in this revision are changes to prevent the UFST version
5.x (or less) from trying to handle non-Microtype fonts, and allow
it to safely fall back to the Freetype (or a.n.other FAPI plugin).
UFST 6.2 or better will try to handle all fonts types, but this is
not yet reliable.

Currently, this code only replaces the UFST memory management on
UFST 6.2 and above (this is purely because I haven't time to test
this capability on UFST 5 yet).

A further change will be committed shortly to the UFST 5 sources
to force the UFST to use the Ghostscript stream IO instead of the
standard lib file IO on the Windows builds (this has been in place
for the Unix/Linux UFST builds for some time).



</pre>
<p>[psi/zfapi.c base/Makefile.in Resource/Init/gs_fntem.ps base/configure.ac psi/fapiufst.c base/gxfapiu.c psi/msvc32.mak Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T133054.074131Z"></a>
2011-02-02T13:30:54.074131Z Ken Sharp</strong></p>
<blockquote>
<pre>
The ps2write dependency on the new header files was incorrect (over-enthusiastic
copy and paste error)
</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T112307.465859Z"></a>
2011-02-02T11:23:07.465859Z Chris Liddell</strong></p>
<blockquote>
<pre>
Allow building with the system (shared) lcms library.

Bug 691644.

</pre>
<p>[base/lib.mak base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-02-02T092815.868989Z"></a>
2011-02-02T09:28:15.868989Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove the check on opdfread.ps from gs_pdfwr.ps as this is no longer shipped as a
PostScript file in /gs/Resource</pre>
<p>[Resource/Init/gs_pdfwr.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T084611.323868Z"></a>
2011-02-02T08:46:11.323868Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update two make files that had dependencies on opdfread.ps, which has been removed from
the PostScript file system.</pre>
<p>[psi/psromfs.mak base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2011-02-02T082743.587977Z"></a>
2011-02-02T08:27:43.587977Z Ken Sharp</strong></p>
<blockquote>
<pre>
It seems that three of the files removed in revision 12093 are used by devices other
than ps2write. Replacing those files.
</pre>
<p>[Resource/Init/gs_mro_e.ps Resource/Init/gs_agl.ps Resource/Init/gs_mgl_e.ps lib/gs_mro_e.ps lib/gs_agl.ps lib/gs_mgl_e.ps]</p>
</blockquote>

<p><strong><a name="2011-02-02T081436.361918Z"></a>
2011-02-02T08:14:36.361918Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write : Don't depend on the PS file system for resources.

ps2write needs up to 4 resource files which are normally stored in the PostScript ROM
file system. However on PCL and other languages these resources are (obviously) not
present, so the output is incomplete.

Move the relevant files from PostScript into 'C' as header files. Remove the files from
the PostScript file system to save ROM file system space. Put the removed files into
the gs/lib folder for safe-keeping. Add the .h files as dependencies for gdevpdfu.c in
the build system so that changes to these files cause a rebuild.

No differences expected.
</pre>
<p>[base/opdfread.h Resource/Init/gs_mro_e.ps Resource/Init/gs_agl.ps Resource/Init/gs_mgl_e.ps base/gs_mro_e.h lib/opdfread.ps base/gs_agl.h base/gs_mgl_e.h Resource/Init/opdfread.ps base/gdevpdfu.c lib/gs_mro_e.ps base/devs.mak lib/gs_agl.ps lib/gs_mgl_e.ps]</p>
</blockquote>

<p><strong><a name="2011-02-01T221144.446124Z"></a>
2011-02-01T22:11:44.446124Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fix for missing arch.h when compiling gdevcups.c with parallel make.
</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-02-01T214627.115736Z"></a>
2011-02-01T21:46:27.115736Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PDF 1.7 fts_09_0910.pdf where the /Font is in an ExtGState instead of
set by the Tf operator. In this case, the font is an indirect reference, not
a font resource name. Reported by customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-02-01T170750.035956Z"></a>
2011-02-01T17:07:50.035956Z Chris Liddell</strong></p>
<blockquote>
<pre>
Freetype expects the resolution we supply it to be in
&quot;glyph orientation&quot; - not a problem until we have a
non-square resolution, and rotated glyphs!

Bug 691920.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2011-02-01T140046.378487Z"></a>
2011-02-01T14:00:46.378487Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Always write a ToUnicode CMap for TrueType fonts

Bug #691907 &quot;PDFs with TrueType fonts from Windows PostScript files not searchable&quot;

Patch from SaGS.

When choosing whether to embed a ToUnicode CMap, always embed if the font type is
TrueType. This is because TT fonts are always embedded as symbolic, and we now no longer
add Encodings to Symbolic TT fonts (violates spec), which results in PDF files where the
text is unsearchable and cannot be successfully copy/pasted in the absence of a
ToUnicode CMap.

It is possible that the ToUnicode CMap is incorrectly generated, but this is no worse
than having no CMap at all.

No expected differences since ToUnicode CMaps are not used in rendering.
</pre>
<p>[base/gdevpdtw.c]</p>
</blockquote>

<p><strong><a name="2011-02-01T115726.132691Z"></a>
2011-02-01T11:57:26.132691Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new 'Profile' configuration to Visual Studio targets. This builds
objects/binaries with debugging symbols enabled, but otherwise full
optimisation.

The changes are entirely within the VS files, except for a few small tweaks
to the MSVC makefile. These changes should mean that it is possible to use
the makefiles in a way that doesn't rely on recursive make calls (even though
we leave the 'debug' targets in for now that do use that).

No cluster differences expected or shown in testing.

</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript.vcproj /trunk/ghostpdl/win32/GhostPDL.sln /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj psi/msvc32.mak /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2011-02-01T083427.091701Z"></a>
2011-02-01T08:34:27.091701Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : permit symbolic fonts in PDF/A output

Bug #691877 &quot;Invalid text when converting to PDF/A&quot;

TrueType fonts were being emitted as non-symbolic when PDF/A output was selected. This
was causing the text to be incorrect, because the fonts actually are symbolic and
Acrobat was unable to apply the correct decoding.

This will result in more text being unsearchable/copyable but the rendering result is
correct, which is more important.

No differences expected, PDF/A output not tested on the cluster.</pre>
<p>[base/gdevpdtd.c]</p>
</blockquote>

<p><strong><a name="2011-01-31T181010.028647Z"></a>
2011-01-31T18:10:10.028647Z Robin Watts</strong></p>
<blockquote>
<pre>
While searching for performance on an ARM based dev board, I developed 2
new versions of the skip_white_pixels macro. The first uses native int sized
checking, and should be faster on long run matching. I have as yet been unable
to find any files that show this expected speedup.

The second should be faster on architectures (such as ARM) where the tradeoff
in the test is different (and where pointer arithmetic is cheaper than array
indexing).

Both versions are disabled by default until the case for their existence has
been proven, but are committed here to avoid bitrot.

No cluster differences expected, as the default code does not change.

</pre>
<p>[base/scf.h]</p>
</blockquote>

<p><strong><a name="2011-01-31T123210.322306Z"></a>
2011-01-31T12:32:10.322306Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to the PxM output code; spot that the output is /dev/null (or nul:)
and avoid saving it. This is a port of code from gdevbit and gdevwts, and is
purely useful for testing/timing/profiling purposes.

No cluster differences expected.

</pre>
<p>[base/gdevpbm.c]</p>
</blockquote>

<p><strong><a name="2011-01-31T111953.283257Z"></a>
2011-01-31T11:19:53.283257Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revert minor changes accidentally committed in revision 12082.
</pre>
<p>[Resource/Init/Fontmap.GS Resource/Init/cidfmap lib/PDFA_def.ps]</p>
</blockquote>

<p><strong><a name="2011-01-31T111505.175916Z"></a>
2011-01-31T11:15:05.175916Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add the two new make files required for the altered CUPS build, these were accidentally
omitted in revision 12080.
</pre>
<p>[Resource/Init/Fontmap.GS base/lcups.mak Resource/Init/cidfmap lib/PDFA_def.ps base/lcupsi.mak]</p>
</blockquote>

<p><strong><a name="2011-01-31T110911.349638Z"></a>
2011-01-31T11:09:11.349638Z Ken Sharp</strong></p>
<blockquote>
<pre>
Undo changes to PDFX_def.ps accidentally committed as part of the CPS changes.
</pre>
<p>[lib/PDFX_def.ps]</p>
</blockquote>

<p><strong><a name="2011-01-31T110611.139867Z"></a>
2011-01-31T11:06:11.139867Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes for CUPS, mostly to the build system.

We now build the CUPS device unconditionally on Windows, using the recently added local
partial copy of the CUPS library sources. This change also builds CUPS on Linux either
using the system shared libraries (if available) or using the same partial copy of the
library sources, if *specifically* directed to use this.

On Windows CUPS is now always built and installed. On Unix systems the behavious is as
follows:

./configure cups not installed  - no cups device
./configure cups is installed   - cups device linked to system cups shared libraries.
./configure --disable-cups      - no cups device, regardless of cups libs installed
on system
./configure --with-local-cups   - cups device with the partial cups code, regardless of
cups libs installed on system
./configure --with-local-cups --disable-cups results in no cups device.

No differences expected as the cluster should still build and run with the system
CUPS libraries just as it always has.
</pre>
<p>[base/winlib.mak lib/PDFX_def.ps base/unix-end.mak base/gs.mak cups/cups.mak base/Makefile.in base/configure.ac cups/libs/configlinux.h psi/msvc32.mak base/msvclib.mak base/devs.mak base/msvctail.mak]</p>
</blockquote>

<p><strong><a name="2011-01-29T153532.332503Z"></a>
2011-01-29T15:35:32.332503Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes to the CUPS sources so they will compile on various systems:

language.c - if __APPLE__ is true, includes code which uses what I think is Carbon
Framework calls and structures, but does not #include any of the .h files.
Modified to #undef __APPLE__ to avoid this.

ppd.c  -  Same problem as for MSVC, the include file string.h seems to prevent the C
string.h being included, and so leaves strchr undefined. Now unconditionally
provide a prototype for strchr.

localize.c - Another problem with string.h. This doesn't exist on the MSVC build, but
unconditionally providing a prototype fro strcmp doesn't cause an error.

The code now builds on MSVC, Linux and Mac. Lots of warnings, but I don't propose to
try and deal with those as they would require extensive alterations to the CUPS
sources.

No differences expected as this code is not yet in use.
</pre>
<p>[cups/libs/cups/localize.c cups/libs/cups/language.c cups/libs/cups/ppd.c]</p>
</blockquote>

<p><strong><a name="2011-01-28T132120.983748Z"></a>
2011-01-28T13:21:20.983748Z Robin Watts</strong></p>
<blockquote>
<pre>
Further rop run optimisations.

* Add mechanism for dumping ROPs used (including frequency and runlength).
Disabled by default.
* Add special case code for most common rops (invert and xor).
* Correct '1bit colors' code in various cases.

Cluster pushing shows no differences.

</pre>
<p>[base/gsroprun.c]</p>
</blockquote>

<p><strong><a name="2011-01-28T122737.269985Z"></a>
2011-01-28T12:27:37.269985Z Robin Watts</strong></p>
<blockquote>
<pre>
Optimisations to mem_mapped8_copy_mono. Driven initially by a desire to
speed up 100pagemono.pxl on ARM devices, but useful on all architectures.
This work may end up being subsumed by the run_rop work, but is a worthwhile
stepping stone.

On x86 this speeds 100pagemono.pxl in greyscale 600dpi from 4.2 seconds to
3.6seconds. On ARM it shows a definite improvement too, but I don't have
figures to hand.

Clusterpush shows no changes.

</pre>
<p>[base/gdevm8.c]</p>
</blockquote>

<p><strong><a name="2011-01-27T143346.308935Z"></a>
2011-01-27T14:33:46.308935Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the CUPS sources so that they can be compiled under Windows.

1) Remove config.h which was a Linux configure result, replace with configwin.h (from
the CUPS distribution for Windows) and configlinux.h which is config,h renamed. We
will copy and use the correct version at make time.

2) cups/debug.c guard the use of pthread_mutex so that we don't try to use it if
HAVE_PTHREAD_H is not defined, as the variable will not be declared. Guard use of
cups_debug_filter and cups_filter with a #ifndef WIN32 as these variables are not
defined in a Windows build. Replace gettimeofday with a Windows equivalent when
building on Windows as this function is not available.

3) ppd.c Add a definition of strchr when building for Windows. The use of an include
file called string.h confuses MSVC and it does not include the C string.h which leaves
strchr undefined.

4) string.h When defining equivalents to strcasecmp and strncasecmp, also define the
HAVE_* variables so that inclusion order doesn't lead to these being undefined when
we have declared equivalents.

5) image-bmp.c Guard the declaration of the BI_* constants with a #ifndef WIN32 as
these are Windows constants and already defined on a Windows build.

6) image-colorspace.c Define cbrt() in terms of pow() when WIN32 is set as the MSVC
compiler does not define a cube root function.

7) image-tiff.c Guard inclusion of unistd.h when HAVE_LIBTIFF is true as this include
file does not ship with MSVC on Windows.


These have been supplied to the CUPS development group, and at least some of the
problems are likely resolved in a newer version of CUPS.

No differences expected.
</pre>
<p>[cups/libs/cups/debug.c cups/libs/filter/image-bmp.c cups/libs/cups/string.h cups/libs/configwin.h cups/libs/config.h cups/libs/configlinux.h cups/libs/cups/ppd.c cups/libs/filter/image-tiff.c cups/libs/filter/image-colorspace.c]</p>
</blockquote>

<p><strong><a name="2011-01-27T130715.912561Z"></a>
2011-01-27T13:07:15.912561Z Tor Andersson</strong></p>
<blockquote>
<pre>
Relax version check in JPEG-XR to allow older version HDP and WDP images.</pre>
<p>[jpegxr/cr_parse.c]</p>
</blockquote>

<p><strong><a name="2011-01-26T181028.996727Z"></a>
2011-01-26T18:10:28.996727Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix the message for the new IJS check to read IJS, instead of jpeg!

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-01-26T145140.178552Z"></a>
2011-01-26T14:51:40.178552Z Chris Liddell</strong></p>
<blockquote>
<pre>
revert accidentally committed file.
</pre>
<p>[base/jpeg.mak]</p>
</blockquote>

<p><strong><a name="2011-01-26T122536.497890Z"></a>
2011-01-26T12:25:36.497890Z Chris Liddell</strong></p>
<blockquote>
<pre>
Allow IJS code to be linked as a library instead of using our distributed source.

This will permit distributions which include a separately built libijs to link the
the system's libijs.

Bug 691904

</pre>
<p>[base/winlib.mak base/gdevijs.c base/ijs.mak base/jpeg.mak base/ugcclib.mak base/macosx.mak base/Makefile.in base/configure.ac base/unix-gcc.mak base/unixansi.mak psi/msvc32.mak base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-01-26T010440.273776Z"></a>
2011-01-26T01:04:40.273776Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Old gs assumed TrueType font collections occur only as external resource.
It turned out that PDF can have embedded TrueType collection. So this patch
replaces --setfileposition-- with {... () /SubFileDecode filter flushfile}
for forward search. Bug 691908, customer 870.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2011-01-25T120322.384476Z"></a>
2011-01-25T12:03:22.384476Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add code to define cbrt, strcasecmp and stncasecmp when compiling for Windows, as these
are not present in the MSVC run-time.

Also alter the initialisation of the gs_cups_device structure. Previously this set three
matrices by including empty braces '{}', but MSVC throws a compilation error on this.
Altered to {0x00} which is not quite the same, but it compiles (with a warning from gcc)
and is no worse than leaving the members uninitialised.

No differences expected.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T235139.084611Z"></a>
2011-01-24T23:51:39.084611Z Tor Andersson</strong></p>
<blockquote>
<pre>
Add JPEG-XR makefile and library to XPS build.</pre>
<p>[/trunk/ghostpdl/xps/xps.mak /trunk/ghostpdl/xps/xps_msvc.mak base/jpegxr.mak /trunk/ghostpdl/xps/xps_gcc.mak]</p>
</blockquote>

<p><strong><a name="2011-01-24T235123.771340Z"></a>
2011-01-24T23:51:23.771340Z Tor Andersson</strong></p>
<blockquote>
<pre>
Import JPEG-XR reference software.

ITU-T Rec. T.835 (ex T.JXR-5) | ISO/IEC 29199-5.
JPEG XR reference software 1.8 (September 2009).</pre>
<p>[jpegxr/jpegxr.h jpegxr/io.c jpegxr/jpegxr_pixelformat.c jpegxr/api.c jpegxr/my_getopt-1.5/getopt.h jpegxr/stdint_minimal.h jpegxr/r_strip.c jpegxr/qp.tab.c jpegxr/JPEG-XR.sln jpegxr/cw_emit.c jpegxr/w_strip.c jpegxr/x_strip.c jpegxr/qp.tab.h jpegxr/r_parse.c jpegxr/r_tile_spatial.c jpegxr/app_resource.h jpegxr/Makefile jpegxr/DLL.rc jpegxr/cr_parse.c jpegxr/APP.vcproj jpegxr/w_tile_frequency.c jpegxr/COPYRIGHT.txt jpegxr/jxr_priv.h jpegxr/my_getopt-1.5/LICENSE jpegxr/sample.qp jpegxr jpegxr/file.c jpegxr/my_getopt-1.5/my_getopt.c jpegxr/dllmain.c jpegxr/algo.c jpegxr/file.h jpegxr/my_getopt-1.5/my_getopt.h jpegxr/w_emit.c jpegxr/my_getopt-1.5 jpegxr/dll_resource.h jpegxr/qp_lexor.c jpegxr/README.txt jpegxr/flags.c jpegxr/DLL.vcproj jpegxr/versions-windows.txt jpegxr/jpegxr.c jpegxr/qp_lexor.lex jpegxr/r_tile_frequency.c jpegxr/qp_parse.y jpegxr/w_tile_spatial.c jpegxr/APP.rc jpegxr/init.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T181640.240500Z"></a>
2011-01-24T18:16:40.240500Z Robin Watts</strong></p>
<blockquote>
<pre>
We want to be able to use planar buffers in a line interleaved format.
Unfortunately, at the moment the planar device is hardcoded to use
contiguous buffers. Fortunately this appears to be a 1 line fix; rather than
calculting raster from the width, we instead calculate it as the difference
between line pointers.

This does assume that we can always safely read line_ptrs[1], even if we only
have 1 line in the band. (The value is unimportant in this case, but we must
be able to read it without crashing.)


</pre>
<p>[base/gdevmpla.c]</p>
</blockquote>

<p><strong><a name="2011-01-24T145630.755196Z"></a>
2011-01-24T14:56:30.755196Z Chris Liddell</strong></p>
<blockquote>
<pre>
Make sure the X11 drivers get removed from the DEVICE_DEVS declaration
if the --enable-dynamic option is give to configure. Also, fix up the
the non shared library builds, so they will still work with
--enable-dynamic  (only really useful for debugging).

Bug 691905.

Reorganise and correct the names of the devices specified in
configure.ac so that the options --with-drivers=[FILES,PRINTERS,X11]
actually work.

Finally, make the &quot;make debug&quot; compiler options originate from
configure, instead of being hard coded into the Makefile. A first
step in making some of useful debugging features of modern compilers
available when we can.

</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2011-01-20T042302.586888Z"></a>
2011-01-20T04:23:02.586888Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Search for 'trailer' harder: at the end and at the beginning of the file.
This helps to recover some more of broken linearized files.
Bug 691894, customer 580.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2011-01-19T202554.918598Z"></a>
2011-01-19T20:25:54.918598Z Robin Watts</strong></p>
<blockquote>
<pre>
Revision 12038 revealed a bug in the transparency code; an operation with
a blend mode of 'Normal' and a solid alpha would be allowed to use the
fast stroking code, even though it had transparency in due to being a pattern.

Here we fix the code to check for transparency. As noted on bug 691900 this
test treats all type 2 patterns as being transparent, so could be improved.

The cluster differences this gives have been checked and correct the
regressions of revision 12038.


</pre>
<p>[base/gdevp14.c base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2011-01-19T180059.394482Z"></a>
2011-01-19T18:00:59.394482Z Robin Watts</strong></p>
<blockquote>
<pre>
Bug 691897 shows a PDF that is much slower when transparency is enabled than
when it is not. The time is primarily spent in the stroke filling code due
to the fact that when transparency is enabled strokes need to be rendered
all at once, rather than segment by segment. This causes the scan conversion
code to have to work much harder.

In fact, the code uses solid alpha and &quot;compatible&quot; blend mode for most
strokes, so we would be perfectly safe to use the normal mechanism. The
code attempts to recognise this case already, but was only spotting &quot;Normal&quot;
blend mode and not it's synonym &quot;Compatible&quot;. We now roll the two together.

Cluster testing shows this produces various differences; none to do with
blending, all to do with different roundings in the positions of the stroked
paths. Bug 690845 is open for this already.

</pre>
<p>[base/gdevp14.c base/gstrans.c base/gstparam.h]</p>
</blockquote>

<p><strong><a name="2011-01-18T215256.712015Z"></a>
2011-01-18T21:52:56.712015Z regression</strong></p>
<blockquote>
<pre>
Temporarily add 75 dpi pgmraw output to GhostPCL and disable ps2write output to the cluster regressions.
</pre>
<p>[toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2011-01-18T102212.280482Z"></a>
2011-01-18T10:22:12.280482Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve some problems with the shared library build on Sparc/Solaris,
with the SunStudio tools.

Have configure select between the GNUism -soname and the more convetional
-h option to set the &quot;internal&quot; name of the shared library.

SunStudio 12 has changed the default optimization level option for cc to
be -O3 (previously was -02), which results in Ghostscript crashing.

No cluster differences expected.

Bug 689490

</pre>
<p>[base/macosx.mak base/Makefile.in base/configure.ac base/unix-dll.mak base/unix-gcc.mak base/macos-mcp.mak]</p>
</blockquote>

<p><strong><a name="2011-01-17T213708.425154Z"></a>
2011-01-17T21:37:08.425154Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
I don't know any version of VC compiler that can compile embedded assembly
code in Luratech JPEG 2000 library. (and other compilers are excluded on
the preprocessor level). So the library is now always compiled with
NO_ASSEMBLY flag. Perhaps, a new version of the library will be better.
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-01-17T173350.118892Z"></a>
2011-01-17T17:33:50.118892Z Robin Watts</strong></p>
<blockquote>
<pre>
Add code for using run_rops for 8 and 24 bit targets too. Cluster testing shows
that this gives the same results, but limited local testing suggests the setup
costs mean this isn't yet a win. Therefore leaving disabled for now.

</pre>
<p>[base/gdevmr8n.c base/gsroprun.c base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-17T121139.376205Z"></a>
2011-01-17T12:11:39.376205Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused lop_ral definitions, and move pdf14 lop bit down into the freed
space (for neatness).

No changes expected in cluster.

</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-16T012536.175335Z"></a>
2011-01-16T01:25:36.175335Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added missing std.h dependency to gstoptab.c to fix parallel make
under linux.
</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-15T160130.937666Z"></a>
2011-01-15T16:01:30.937666Z Robin Watts</strong></p>
<blockquote>
<pre>
First commit of new scheme for rop acceleration; offer functions that do
'runs' of rops rather than single rops. This enables us to hide optimised
versions (or even dynamically created code) under a single interface.

The current code is only used in 1bpp cases, but is already showing a
signficant speed up, with lots of scope for future optimisations.

No cluster differences shown.

</pre>
<p>[base/lib.mak base/gsroprun.c base/gsropt.h base/gdevmr1.c]</p>
</blockquote>

<p><strong><a name="2011-01-15T155350.166886Z"></a>
2011-01-15T15:53:50.166886Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix loooong standing bug in rop3_swap_S_T, in that it doesn't actually work.
This shouldn't affect anything as it's not currently used, but WILL be used
in my next commit.

</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2011-01-14T185846.405071Z"></a>
2011-01-14T18:58:46.405071Z Henry Stiles</strong></p>
<blockquote>
<pre>
Bracket off gs_debug_c with #ifdef DEBUG so it is not called in
production builds.

</pre>
<p>[base/gxht.c base/gxclimag.c base/gxttfb.c base/gxpcmap.c base/gxccman.c base/gsfcmap1.c base/gspaint.c]</p>
</blockquote>

<p><strong><a name="2011-01-14T165647.376046Z"></a>
2011-01-14T16:56:47.376046Z Chris Liddell</strong></p>
<blockquote>
<pre>
Changes to the Unix configure based builds to tidy up specifying
subsets of output devices.

Some devices were always being included regardless of the options
given to configure, resolved by tidying up the macro expansions
in Makefile.in done by the configure script.

Also the page device and clist device are effectively required by
all configurations, so those are now included in the core build.

Finally, the contrib/gomni.c driver relied on two functions in
base/gdevbmpc.c which is an optional driver, so configuring
the Omni driver to be built it, and bmp16 not would result
in undefined symbols. contrib/gomni.c now has its own
equivalents of those functions.

The bbox device remains as the ultimate &quot;fallback&quot; device.

Bug 689546

</pre>
<p>[base/lib.mak contrib/gomni.c base/Makefile.in base/configure.ac base/devs.mak]</p>
</blockquote>

<p><strong><a name="2011-01-13T161939.522851Z"></a>
2011-01-13T16:19:39.522851Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the bogus C++ requirement in the copy of Jasper we
ship with Ghostscript by recreating the autotools related
files for Jasper.

I can't be sure, but it seems that a bug in one of the
autotools originally used for our Jasper had a bug which
resulted in C++ being misidentified as a required,
rather than optional, feature of the build environment.

Bug 691563.

No cluster differences expected.



</pre>
<p>[jasper/src/libjasper/jpc/Makefile.in jasper/src/libjasper/bmp/Makefile.in jasper/configure.ac jasper/src/libjasper/jpg/Makefile.in jasper/src/appl/Makefile.in jasper/src/libjasper/include/Makefile.in jasper/src/libjasper/ras/Makefile.in jasper/src/Makefile.in jasper/aclocal.m4 jasper/src/libjasper/pnm/Makefile.in jasper/src/libjasper/jp2/Makefile.in jasper/configure jasper/src/msvc/Makefile.in jasper/src/libjasper/pgx/Makefile.in jasper/Makefile.in jasper/src/libjasper/Makefile.in jasper/src/libjasper/include/jasper/Makefile.in jasper/src/libjasper/base/Makefile.in jasper/src/libjasper/mif/Makefile.in]</p>
</blockquote>

<p><strong><a name="2011-01-13T143733.986698Z"></a>
2011-01-13T14:37:33.986698Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 689698 by prefixing scan_token (and other externally exported
scanning related symbols) by gs_.

No changes in cluster testing (other than 1 timeout, and 2 indeterminisms).


</pre>
<p>[psi/ztoken.c psi/ztype.c psi/imain.c psi/iscan.c psi/itoken.h psi/ziodev.c psi/interp.c psi/iscan.h psi/imainarg.c]</p>
</blockquote>

<p><strong><a name="2011-01-12T211153.461044Z"></a>
2011-01-12T21:11:53.461044Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691682 - cryptic error messages when misspecifying compression type
for tiff devices.

This patch makes the tiff devices take heed of errors propogated up from the
tiff library. This means we'll now drop out at the first error rather than
carry on through and give a broken file at the end silently.

Also, we output a more helpful error message in the case where the
compression type is misselected.

Cluster testing shows no changes.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T213354.972732Z"></a>
2011-01-11T21:33:54.972732Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a number of issues found by Ray with the halftone creation tool.

These include a crash for a divide by zero in the gcd function (caused failure
at 0 degree screen generation)
Fix so that the Holladay screen is no longer created as an output option.
Fix in  ppm output header.
Fix in how the lpi is selected.
Fix for when we have a screen that has essentially one dot (also caused a crash).
Addition of a ReadMe.

A lot more testing is needed, in particular, the dithering of the dots in the
macro-screens needs additional testing and the relationship between the desired
number of quantization levels and the size of the screen needs to be properly
computed.  There is a list of features that need to be added described in the ReadMe.  </pre>
<p>[toolbin/color/halftone/halfttoning/halfttoning.vcproj toolbin/color/halftone/README toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T011759.815496Z"></a>
2011-01-11T01:17:59.815496Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add output modes for PostScript HalftoneType 3 threshold arrays (-ps) and
PPM files (-ppm) that have the width in the file rather than only encoded
in the filename. The -ppm mode is untested and marginally useful.

The -ps mode was tested (on Windoze) with:

toolbin/color/halftone/Debug/halfttoning.exe -ps -r 300 -l 23 -a 45

gswin32c -r300 -dDisplayFormat=16#20102 -c &quot;(Screen_Holladay_Shift10_20x10.ps) \
run sethalftone (examples/tiger.eps) run&quot;

The result doesn't look very good, but at least it runs and we can examine
the problems.
</pre>
<p>[toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2011-01-11T004920.559732Z"></a>
2011-01-11T00:49:20.559732Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Hopefully a fix for indeterminism introduced in rev 12005.  The
source of this was that the cups and psdcmyk device are now using
the older slower color image rendering function due to the fact that
they have non-standard color mapping procedures.  Missing parenthesis
were introduced when the ICC branch was merged into the trunk which was
the source of the issue.  This was causing a check for color range mask
testing even when the image was not a type 4.</pre>
<p>[base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2011-01-10T220019.847574Z"></a>
2011-01-10T22:00:19.847574Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Added the source code of the CUPS libraries to the Ghostscript source
package

Like with zlib, libpng, libjpeg, ... it is now possible to
build the complete Ghostscript (including the CUPS Raster output
device) on systems where there is no CUPS library available.

Note that currently only the CUPS library source code is added, the
results of the ./configure run in the Makedefs and config.h files, and
the Makefiles are stripped to only build the libraries and nothing
else. The CUPS ./configure command line which was used to obtain
makedefs and config.h was

./configure --enable-static --without-shared --disable-dbus --without-php \
--disable-slp --disable-gssapi --disable-ldap --disable-ssl \
--disable-cdsassl --disable-gnutls --disable-openssl --disable-pam \
--disable-dnssd --disable-launchd

This way the built CUPS libraries do not need any system services or
hardware interfaces of Linux. In addition to standard libraries they
use only libz, libpng, libjpeg, and libtiff. These libraries
Ghostscript needs anyway and copies of their source code also ship
with Ghostscript.

What is still missing is the integration into the build system of
Ghostscript and also the operating-system-independent base/cups.mak
file (like base/png.mak etc.).

No changes expected in the built Ghostscript as the code is not yet
integrated in the build system.

</pre>
<p>[cups/libs/cups/backend.c cups/libs/cups/testadmin.c cups/libs/filter/image-pix.c cups/libs/cups/testoptions.c cups/libs/cups/backend.h cups/libs/cups/http-private.h cups/libs/filter/image.c cups/libs/cups/testpwg.c cups/libs/filter/image-sun.c cups/libs/cups/ppd-private.h cups/libs/filter/image.h cups/libs/filter/error.c cups/libs/cups/Dependencies cups/libs/cups/ipp-private.h cups/libs/cups/md5passwd.c cups/libs/cups/notify.c cups/libs/cups/dir.c cups/libs/cups/testarray.c cups/libs/cups/file.c cups/libs/cups/testhttp.c cups/libs/filter/image-png.c cups/libs/filter/image-zoom.c cups/libs/cups/getdevices.c cups/libs/cups/transcode.c cups/libs/cups/dir.h cups/libs/cups/globals.c cups/libs/cups/testppd.c cups/libs/filter/image-tiff.c cups/libs/cups/file.h cups/libs/filter/image-pnm.c cups/libs/cups/transcode.h cups/libs/cups/testipp.c cups/libs/cups/globals.h cups/libs/filter cups/libs/filter/image-photocd.c cups/libs/cups/options.c cups/libs/cups/emit.c cups/libs/cups/localize.c cups/libs/cups/tempfile.c cups/libs cups/libs/cups/testcups.c cups/libs/cups/custom.c cups/libs/cups/pwg-media.c cups/libs/cups/util.c cups/libs/cups/array.c cups/libs/cups/pwg-ppd.c cups/libs/cups/testi18n.c cups/libs/cups/http.c cups/libs/filter/image-jpeg.c cups/libs/filter/Dependencies cups/libs/cups/array.h cups/libs/cups/http-addrlist.c cups/libs/cups/language.c cups/libs/cups/ppd.c cups/libs/cups/http.h cups/libs/cups/md5.c cups/libs/cups/debug.c cups/libs/cups/ipp.c cups/libs/cups/language.h cups/libs/cups/ppd.h cups/libs/cups/backchannel.c cups/libs/cups/http-support.c cups/libs/cups/mark.c cups/libs/cups/md5.h cups/libs/cups/snmp-private.h cups/libs/cups/debug.h cups/libs/cups/Makefile cups/libs/cups/ipp.h cups/libs/cups/dest.c cups/libs/config.h cups/libs/cups/auth.c cups/libs/cups/ipp-support.c cups/libs/filter/common.c cups/libs/cups/langprintf.c cups/libs/filter/image-sgilib.c cups/libs/cups/raster.h cups/libs/filter/common.h cups/libs/cups/attr.c cups/libs/filter/image-private.h cups/libs/cups/sidechannel.c cups/libs/cups/testsnmp.c cups/libs/cups/usersys.c cups/libs/cups cups/libs/cups/cups.h cups/libs/cups/sidechannel.h cups/libs/cups/i18n.h cups/libs/Makedefs cups/libs/cups/testconflicts.c cups/libs/filter/image-colorspace.c cups/libs/cups/adminutil.c cups/libs/cups/http-addr.c cups/libs/filter/interpret.c cups/libs/cups/request.c cups/libs/cups/versioning.h cups/libs/cups/md5-apple.h cups/libs/cups/adminutil.h cups/libs/cups/file-private.h cups/libs/cups/encode.c cups/libs/filter/image-gif.c cups/libs/cups/snprintf.c cups/libs/cups/string.c cups/libs/filter/Makefile cups/libs/cups/getputfile.c cups/libs/filter/image-bmp.c cups/libs/cups/pwg-private.h cups/libs/cups/pwg-file.c cups/libs/cups/string.h cups/libs/filter/raster.c cups/libs/cups/page.c cups/libs/cups/getifaddrs.c cups/libs/cups/snmp.c cups/libs/filter/image-sgi.c cups/libs/cups/testfile.c cups/libs/cups/testlang.c cups/libs/filter/image-sgi.h cups/libs/cups/conflicts.c]</p>
</blockquote>

<p><strong><a name="2011-01-10T032952.464842Z"></a>
2011-01-10T03:29:52.464842Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add support for MSVC 10 to msvc32.mak .
</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2011-01-09T021919.656942Z"></a>
2011-01-09T02:19:19.656942Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for color related warnings in bug 691459</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxiscale.c base/gsicc_manage.c base/gxcmap.h base/gxicolor.c base/gscspace.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T195651.307278Z"></a>
2011-01-08T19:56:51.307278Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't discard encoding of a TrueType PDF font when it is not embedded.
Ghyph indexes vary between font versions, and encoding-based mapping
yelds better results in this case. Bug 691693.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2011-01-08T194231.743686Z"></a>
2011-01-08T19:42:31.743686Z regression</strong></p>
<blockquote>
<pre>
Additional changes to support ps2write in the cluster (and nightly and weekly) regression.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2011-01-08T175607.987718Z"></a>
2011-01-08T17:56:07.987718Z regression</strong></p>
<blockquote>
<pre>
Add ps2write testing to the cluster regression.
</pre>
<p>[toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2011-01-08T175526.179279Z"></a>
2011-01-08T17:55:26.179279Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix the code that repairs missing or incorrect /Subtype attribute. Write
a valid attribute (always /Type1) into the font resource. This helps to
avoid confusion caused by an invalid value later on. Bug 691872.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2011-01-08T105004.294111Z"></a>
2011-01-08T10:50:04.294111Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed typo.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T104712.179146Z"></a>
2011-01-08T10:47:12.179146Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster device: Some clean-up.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-08T103656.827100Z"></a>
2011-01-08T10:36:56.827100Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster: Another approach to fix both bug #691733 and #690435: Set _old
values at the beginning of the cups_put_params() function.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T233317.663910Z"></a>
2011-01-07T23:33:17.663910Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Use positive values (1) as dummy values to mark
that the color depth has changed and therefore memory needs to get rallocated

WEith this both bug #691733 and bug #690435 get fixed, but this is not
necessarily he right and best solution.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T140517.614099Z"></a>
2011-01-07T14:05:17.614099Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed search-and-replace error in &quot;cups&quot; output device, bug 691871.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2011-01-07T044942.455234Z"></a>
2011-01-07T04:49:42.455234Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that we do not do the ICC optimized flow for color images when our
target device does not have standard color mapping procedures.  This occurs
for example, in the case for the CUPs device where the color mapping procedures
map CMYK, RGB and Gray to the current CUPs device color space.   For standard
gray, RGB and CMYK devices these procedures are avoided as the CMM performs
all the required mappings.  This commit will show differences in the files for the
cups device as well as the psdcmyk device, which also should be using the non-optimized
flow due to the use of CMYK + spot colorants, which will not be managed correctly by
the CMM in general.  The differences int the psdcmyk files that do not have extra spot
colorants are tiny.  This should fix bug 691760.</pre>
<p>[base/gxi12bit.c base/gdevp14.c base/lib.mak base/gxcmap.c base/gxiscale.c base/gdevnfwd.c base/gxcmap.h base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2011-01-06T191856.657732Z"></a>
2011-01-06T19:18:56.657732Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a cut-ant-paste error in setting QuantTables for JPXEncode filter.
Bug 691868.
</pre>
<p>[base/sdeparam.c]</p>
</blockquote>

<p><strong><a name="2011-01-06T110852.017177Z"></a>
2011-01-06T11:08:52.017177Z Ken Sharp</strong></p>
<blockquote>
<pre>
Minor enhancement to ps2write for DSC output, remove trailing EOF.

Prevent ps2write emitting a trailing EOF (0x04) byte when producing DSC-compliant
output. The emission of this byte was leading to warnings about the output containing
binary.

No differences expected.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2011-01-05T173542.089947Z"></a>
2011-01-05T17:35:42.089947Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Reverting of commit 11995</pre>
<p>[base/gxipixel.c base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-05T160522.763938Z"></a>
2011-01-05T16:05:22.763938Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write DSC enhancement. Alter the default setting of CompressPages and CompressFonts to
true. Gives better conforming output at present (as well as smaller output)
</pre>
<p>[Resource/Init/gs_pdfwr.ps]</p>
</blockquote>

<p><strong><a name="2011-01-05T154341.972063Z"></a>
2011-01-05T15:43:41.972063Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix three compiler warnings in revision 11997
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-05T152839.325806Z"></a>
2011-01-05T15:28:39.325806Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Use the &quot;x11&quot; output device as default output device for an X-enabled
Ghostscript, as &quot;x11alpha&quot; is too buggy

The simple call &quot;gs &lt;file&gt;&quot; is a common call to check a PostScript
file when debugging printing problems. Unfortunately, this call uses
the &quot;x11alpha&quot; output device which has a lot of bugs, especially on
complex input files. This makes easily a wrong impression of the input
file then. Having a somewhat inferior screen output quality (no
anti-aliasing) is no problem as the mentioned Ghostscript call is only
used for debugging purposes.

</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2011-01-05T141741.770782Z"></a>
2011-01-05T14:17:41.770782Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write DSC enhancement. Belt and braces approach when emitting a serialised array/proc

This code should break an (already serialised) array or procedure emission if the total
length of the data to write exceeds 255 bytes. The data will be broken at name, array,
string or procedure tokens (ie '/', '[', '(', '&lt;') or a space character. If none of
these occurs in the preceding 255 bytes then we emit a line break anyway and carry on.

I do not have any test cases which exercise this code path with a data size &gt; 255
bytes, so I'm not certain that it works as expected.

No differences expected as the regression test doesn't exercise ps2write.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-04T185636.226711Z"></a>
2011-01-04T18:56:36.226711Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix spelling errors in a German man page. Thanks to Peter Dyballa for
the patch. Bug 691863.
</pre>
<p>[man/de/gsnd.1]</p>
</blockquote>

<p><strong><a name="2011-01-04T181941.129921Z"></a>
2011-01-04T18:19:41.129921Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the presence of source black and white are properly detected
with the ICC color management changes.  This detection is useful for the
optimization of certain ROPs.  Previously black and white were detected
from looking at the device color.  This was a problem since the device
black color is usually not pure for a CMYK printer with the ICC changes.
This fix updates the detection function so that it looks at the source
color and maps it to the default RGB color space where black and white
are well defined.
</pre>
<p>[base/gxipixel.c base/lib.mak]</p>
</blockquote>

<p><strong><a name="2011-01-04T163538.827232Z"></a>
2011-01-04T16:35:38.827232Z Ken Sharp</strong></p>
<blockquote>
<pre>
More DSC-compliant ps2write work.

When emitting strings for ps2write, write them as hex strings instead of regular
strings, if the ps2write output is to be DSC-compliant, break the hex strings every
255 bytes or less. Prepend and append newlines to the hex string when emitting
DSC-compliant PostScript to ensure that preceding or following data doesn't cause the
line length to exceed 255 bytes.

No differences expected as ps2write is not currently regression tested.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2011-01-04T104832.930138Z"></a>
2011-01-04T10:48:32.930138Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Write ToUnicode CMap files which Acrobat likes

Bug #691862 (and also bug #691849) &quot;Unable to copy text from the converted PDF&quot;

It seems the Adobe documentation lies (or more generously is inconsistent). The
CMap tech note (5014) says that entries are not zero padded, so values less
than 256 are emitted as single bytes, values 256-&gt;65535 are two bytes etc.
However the ToUnicode CMap tech note (5411) says:

&quot;Because a “ToUnicode” mapping file is used to covert from CIDs (which begin at
decimal 0, which is expressed as 0x0000 in hexadecimal notation) to Unicode
code points, the following “codespacerange” definition, without exception,
shall always be used: 1 begincodespacerange  &lt;0000&gt; &lt;FFFF&gt;endcodespacerange&quot;

(This is somewhat restrictive, since CIDs can exceed 2 bytes, even though
UTF-16 can't, I could forsee a need to map high CIDs to lower UTF-16 values)

Finally, the PDF Reference (1.7) says:

&quot;The CMap file must contain begincodespacerange and endcodespacerangeoperators
that are consistent with the encoding that the font uses. In particular, for a
simple font, the codespace must be one byte long.&quot;

So the PDF Reference conflicts with the tech note which it references!

In fact none of the above seems to be quite what Acrobat actually does.

It seems that Acrobat does not care what size (in bytes) the codespacerange is,
no matter what kind of font is present. However it *does* care what size the
bfrange entries are. For simple fonts the bfrange entries must be single bytes,
for CIDFonts the bfrange entries must be two bytes. Deviation in either case
leads to files which Acrobat cannot process and either causes errors or
incorrect text when copying and pasting.

Changed the ToUnicode emission (mostly restoring revision 11170 which was removed in
revision 11795 because of bug #691849) so that we emit single byte bfrange and
codespacerange arguments for simple (non-CID) fonts, and emit double byte, padded with
00 arguments to bfrange and codespacerange for CID fonts.

No differences expected as this only affects text search/copy in Acrobat.
</pre>
<p>[base/gsfcmap.c base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T201958.048424Z"></a>
2011-01-03T20:19:58.048424Z Ray Johnston</strong></p>
<blockquote>
<pre>
Don't bump the 'used' element of the chunk manager structure if the allocation
of a chunk fails. Thanks to Norbert Janssen for noticing this. Bug 691720.
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T185800.432432Z"></a>
2011-01-03T18:58:00.432432Z Henry Stiles</strong></p>
<blockquote>
<pre>
The optimization in gdevdgbr to detect a device with a &quot;plain&quot; cmyk 1
bit to rgb mapping was broken because the procedure
cmyk_1bit_map_color_rgb() is obsolete.  The hack here is to detect
output formats compatible with gx_get_bits_copy_cmyk_1bit() which is
significantly faster since it does not have to call the device color
decode procedure.  The device API should have a member that indicates
the most frequently encountered pixel organizations.
</pre>
<p>[base/gdevdgbr.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T162021.454447Z"></a>
2011-01-03T16:20:21.454447Z Henry Stiles</strong></p>
<blockquote>
<pre>
Decode image samples with single precision calculations only.  This
area of the code is performance sensitive and there is no need to
convert to and from doubles.  Also, &quot;image_set_gray&quot; is now inline but
still not enabled.

</pre>
<p>[base/gximono.c base/gximage.h]</p>
</blockquote>

<p><strong><a name="2011-01-03T143356.098558Z"></a>
2011-01-03T14:33:56.098558Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write : Attach Encoding for symbolic TrueType fonts

The recent change to not attach Encodings to Sy,bolic TrueType fonts, as per the PDF
spec, meant that ps2write also wrote symbolic TT fonts without a /Encoding. This is not
ideal, because opdfread.ps then attaches a default StandardEncoding to the font. This
simply will not work correctly.

After some experimentation with extracting (in PostScript) the POST table from the TT
font, sense prevailed. This patch modifies the condition so that if we are producing
output for ps2write we continue to attach a /Encoding. (in this case it doesn't
matter whether we are producing DSC output, we always want the Encoding)

No differences expected.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2011-01-03T062152.574265Z"></a>
2011-01-03T06:21:52.574265Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Adjust pdfemptycount variable during .execgroup execution to reflect the
actual stack count. Avoid errors in sc1/scn caused by wrong operand count.
Bug 691624.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2011-01-01T161749.255469Z"></a>
2011-01-01T16:17:49.255469Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change all &quot;/foo /bar load def&quot; into &quot;/foo {bar} bind 0 get def&quot;
in PDF interpreter to ebable operator redefinition with -dDELAYBIND.
Bug 691669, customer 850.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-12-31T062359.391706Z"></a>
2010-12-31T06:23:59.391706Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Trap errors that may happen during loading of embedded fonts and try
to load the font by the name. Bug 691045.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-12-30T190959.966731Z"></a>
2010-12-30T19:09:59.966731Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use -fPIC instead of -KPIC on SunOS for &quot;so&quot; target when compiler is gcc.
Bug 690630, customer 200.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-12-30T141142.974030Z"></a>
2010-12-30T14:11:42.974030Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Clip excessive size of the radial gradient extensions to the fixed point
range. To avoid trivial differences, try the old fixed point function first
and use new floating point one only when the old function fails. Bug 691775.
</pre>
<p>[base/gspath.h base/gxshade1.c base/gspath.c]</p>
</blockquote>

<p><strong><a name="2010-12-29T130145.722135Z"></a>
2010-12-29T13:01:45.722135Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Ignore transparency group XObject without /Group attribute and issue a
warning about it. Bug 691854.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-12-28T031357.856572Z"></a>
2010-12-28T03:13:57.856572Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement correct defaults for /FontMatrix attribute in composite CFF
font following analysis by Ken and Masaki (see the comment). Bug 690724.
</pre>
<p>[psi/zfont2.c]</p>
</blockquote>

<p><strong><a name="2010-12-27T233439.189121Z"></a>
2010-12-27T23:34:39.189121Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix unterminated string used by &quot;%%CreationDate:&quot; comment in ps2write
device. Partial fix for 691853.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T110847.918403Z"></a>
2010-12-24T11:08:47.918403Z Chris Liddell</strong></p>
<blockquote>
<pre>
Put a check in place to ensure that the UFST pre version 6
does not attempt to handle anything other than its own
Microtype fonts.

This ensures that the UFST 5.x FAPI plugin can coexist
safely with the Freetype FAPI plugin.


</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T095039.994493Z"></a>
2010-12-24T09:50:39.994493Z Chris Liddell</strong></p>
<blockquote>
<pre>
Where FAPI finds a TTF glyf description to pass into the target font
library, fix the decision on the length of the offset to the glyph
data. Previously, the condition was wrong, and always ended up reading
2 bytes for the offset.

Bug 691850


No cluster differences expected.


</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-12-24T002830.327488Z"></a>
2010-12-24T00:28:30.327488Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Limit the use of -rdynamic flag to GCC on Linux. This flags is supported
by GCC only if the platform has ELF executable format. Bug 691453.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-12-23T143936.123969Z"></a>
2010-12-23T14:39:36.123969Z Ken Sharp</strong></p>
<blockquote>
<pre>
fix pdfwrite : Always write 2 bytes for ToUnicode CMap ranges

Bug #691849 &quot;pdfwriter regression: pdf text element is broken&quot;

revision 11170 modified CMap emission so that bfchar/bfrange entries less than 256 were
emitted as a single byte, as specified in the CMAp specification. However ToUnicode
CMaps don't follow the normal specification (I suspect this is a bug which has been
pickled into the spec by Adobe), and require that values always have 2 bytes.

reverted 11170 so that we write 2 byte ToUnicode CMap entries.

No differences expected.</pre>
<p>[base/gsfcmap.c]</p>
</blockquote>

<p><strong><a name="2010-12-23T114120.825457Z"></a>
2010-12-23T11:41:20.825457Z Ken Sharp</strong></p>
<blockquote>
<pre>
ps2write enhancement

Initialise the SetPageSize flag to true when ProduceDSC is set, so that page sizes are
properly requested by the output PostScript file.

No differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T184813.456231Z"></a>
2010-12-22T18:48:13.456231Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Initial commit of code for creating halftone screens.  This code needs
additional debugging, especially in the case of edge parameters.  It
will currently create threshold arrays based upon desired lpi, angle,
quantization levels, and device resolution.  The method is restricted
to angles that are the arctangent of rational numbers. Every attempt is
made to achieve the requested lpi by using the rational angle that achieves
an lpi over the requested value.  Since there is a trade off between lpi
and quantization levels, the requested quantization levels are obtained
through dithering of the dot cells within the supercell.  Essentially, the
dots within the supercell do not all take on the same values and can grow at
different rates in a visually pleasing manner.  There is still a bit of work
to do still on this dithering as well as controlling the rate of growth for
the dots.</pre>
<p>[toolbin/color/halftone toolbin/color/halftone/halfttoning.sln toolbin/color/halftone/halfttoning/halfttoning.vcproj toolbin/color/halftone/halfttoning toolbin/color/halftone/halfttoning/halftone.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T161758.830786Z"></a>
2010-12-22T16:17:58.830786Z Ken Sharp</strong></p>
<blockquote>
<pre>
Just remove a commented out line of code that should have been removed before commit.
</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T140556.481488Z"></a>
2010-12-22T14:05:56.481488Z Ken Sharp</strong></p>
<blockquote>
<pre>
More enhancement work for type 3 fonts with PCL

Previously we set the horizontal advance argument to the d1 (setcachedevice) operator to
0, and set the Widths entry to 0, for all type 3 bitmap fonts created by rendering the
original font.

This was required to prevent regression errors with the test suite when we altered the
type 3 font accumulation so that it made more effort to preserve the input character
code, in an attempt to improve searching.

Revision 11969 fixes a problem with cached characters which was leading to the /Widths
array containing garbage values. With that revision we can now properly set the 'd1'
horizontal advance, and also set the /Widths array correctly.

No expected differences
</pre>
<p>[base/gdevpdfb.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T135829.830017Z"></a>
2010-12-22T13:58:29.830017Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix ps2write/pdfwrite : Up date the show enumerator with the cached character width

When capturing a character bitmap on the first time it is rendered, pdfwrite and
ps2write get the width of the glyph in the cache device. This is then used to update
values in the show enumerator, and these values are used as the Widths entry for the
glyph.

When imaging an already cached character, however, the enumerator values are not updated
which can lead to garbage (uninitialised data) being written as values in the /Widths
array. This patch takes the value from the cached character 'wxy' and updates the show
enumerator 'wxy' with it. This is then used as the value for the /Widths array.

Bug #691836, zweiseit01d4-1.pdf, limitcheck --nostringval--

No differences expected.
</pre>
<p>[base/gxccache.c]</p>
</blockquote>

<p><strong><a name="2010-12-22T003556.638864Z"></a>
2010-12-22T00:35:56.638864Z regression</strong></p>
<blockquote>
<pre>
Fixed bug with r11967 that redirected output to the wrong directory on the
cluster nodes.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T230747.064606Z"></a>
2010-12-21T23:07:47.064606Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Attempt to remove obj directories before build and report failure.
This detects the situation where a user manually built on one of
the cluster nodes, leaving an obj directory that can't be overwritten
by the cluster software.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T230104.915150Z"></a>
2010-12-21T23:01:04.915150Z regression</strong></p>
<blockquote>
<pre>
Merge run.pl and build.pl with nightly regression versions.
</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-21T175345.618494Z"></a>
2010-12-21T17:53:45.618494Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise how we set the font types which FAPI should handle, and
ensure that the &quot;dummy&quot; CharStrings dict we set up for Microtype
fonts doesn't get replaced.

Bug 691810

No cluster differences expected.

</pre>
<p>[Resource/Init/gs_fntem.ps Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-12-21T104401.003179Z"></a>
2010-12-21T10:44:01.003179Z Chris Liddell</strong></p>
<blockquote>
<pre>
Handle Charstrings being replaced by a procedure. This can happen
even with Microtype fonts (which &quot;pretend&quot; to be Type 1, but don't
actually use CharStrings).

This commit also includes some UFST 6.x related changes, the complete
UFST 6.x integration should follow in the not too distant future.

Bug 691834

Not cluster differences.


</pre>
<p>[psi/fapiufst.c base/gxfapiu.c]</p>
</blockquote>

<p><strong><a name="2010-12-20T163854.977548Z"></a>
2010-12-20T16:38:54.977548Z Chris Liddell</strong></p>
<blockquote>
<pre>
When we're handling a Type42 font in FAPI, handle the possibility that
the &quot;CharString&quot; we get might be a null object, by falling back to
the notdef glyph.

Bug 691848


No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-12-18T192714.937495Z"></a>
2010-12-18T19:27:14.937495Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement correct bit packing for an indexed image with 4 bit/pixel color
depth in the interface to Luratech JPX library. Bug 691843, customer 532.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-12-18T152443.064303Z"></a>
2010-12-18T15:24:43.064303Z Ken Sharp</strong></p>
<blockquote>
<pre>
Bug #691835

Temporary work-around. It is possible to get into gsicc_init_device_profile with the
graphics state pointer (pgs) being NULL. This happens if ps2write or pdfwrite convert
a masked image into a regular image.

Because pgs is dereferenced without checking for NULL, this causes a crash.

Its not immediately clear to me if I need to modify ps2write/pdfwrite so that this
condition doesn't occur, but for now, if pgs is NULL we return from the routine in order
to prevent a crash.

No differences expected
</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T165835.097740Z"></a>
2010-12-17T16:58:35.097740Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Install the CJK examples.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T165651.880152Z"></a>
2010-12-17T16:56:51.880152Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Mention &quot;ps2pdf14&quot; in the man page for ps2pdf.
</pre>
<p>[man/ps2pdf.1 man/de/ps2pdf.1]</p>
</blockquote>

<p><strong><a name="2010-12-17T165453.331106Z"></a>
2010-12-17T16:54:53.331106Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Let Ghostscript work with the libjasper provided by the system.
</pre>
<p>[base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T165049.932561Z"></a>
2010-12-17T16:50:49.932561Z Till Kamppeter</strong></p>
<blockquote>
<pre>
pphs is a script and not a library, put it into the correct group of files in the Makefile.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T164802.245525Z"></a>
2010-12-17T16:48:02.245525Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fix stone-old security advisory CVE-2009-4270.
</pre>
<p>[base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-12-17T164302.736497Z"></a>
2010-12-17T16:43:02.736497Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Build gsx and gsc executables correctly as executables and not as shared libraries.
</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-12-17T001641.356524Z"></a>
2010-12-17T00:16:41.356524Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed patch noise file.
</pre>
<p>[contrib/pcl3/eprn/eprnrend.c.orig]</p>
</blockquote>

<p><strong><a name="2010-12-16T170024.131587Z"></a>
2010-12-16T17:00:24.131587Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't clamp rectfill to the page.

Bug #691839 &quot;Invalid EPS conversion with -dEPSCrop&quot;

Rectangular fills (and only the special case of rectangles) were being clamped to the
width/height of the device when emitted. This can cause problems when a matrix is in
force which reduces the actual co-ordinates, in this case a Pattern with a 0.25 scaling.

The clamping caused co-ordinates to be reduced, and part of the fill went missing.

The comment indicated this was to 'work-around' the limit in Acrobat of 32k on user
co-ordinates, but this is too sever a clamp to apply, also the general case path code
does not apply this limit. Altered to make the limit the 32k enforced by Acrobat.

</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-12-15T161254.275384Z"></a>
2010-12-15T16:12:54.275384Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : Final DSC changes

Fix a compiler warning, make ProduceDSC=true the default condition so that we create
DSC-compliant PostScript unless told otherwise.

Update the documentation for pswrite and ps2write in devices.htm and Ps2ps2.htm. Note
that pswrite is now deprecated.

Modify the pdf2ps and ps2ps scripts to use ps2write instead of pswrite.

No differences expected.
</pre>
<p>[lib/pdf2ps doc/Ps2ps2.htm lib/pdf2ps.cmd lib/pdf2ps.bat lib/ps2ps doc/Devices.htm base/gdevpdfu.c lib/ps2ps.cmd base/gdevpdfb.h lib/ps2ps.bat]</p>
</blockquote>

<p><strong><a name="2010-12-15T082258.985898Z"></a>
2010-12-15T08:22:58.985898Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : more DSC related activity

Defer the output of the header and the opdfread.ps 'prcoset' until the output file is
closed. This allows us to count the pages and emit the %%Pages: comment in the header
instead of at the end of the file.

Fix the PageBoundingBox comment to have two % characters instead of one.

Check for a new flag 'DSC_OPDFREAD' at the start of opdfread.ps (and write its
definition as part of the header emission in ps2write). If present this prevents the
SetupPageView routine from using setmatrix to reset the CTM to the one saved during
document setup. Because the DSC-compliant output puts save/restore around each page
we don't need to reset the matrix, and the reset prevents the output from working
properly with psnup. If the flag is not present, it is treated as false.

The output now works with GSView, psselect and psnup. The only remaining work is to
track the usage of ProcessDSC and see if we can reuse any of the comments parsed out
of the input.

No differences expected
</pre>
<p>[base/gdevpdfx.h base/gdevpdf.c Resource/Init/opdfread.ps base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-13T115736.965203Z"></a>
2010-12-13T11:57:36.965203Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : DSC output

Add some more comments, and re-arrange a few to make better sense. Initial tests
indicate the output of the code with ProduceDSC does not introduce any new errors.

Still to do: See if we can re-order the output so that we can write the %%Pages: comment
in the header with the correct number of pages. This requires us to defer writing the
header and ProceSet until the end of the job.

No differences expected.
</pre>
<p>[base/gdevpdfg.h base/gdevpdf.c base/gdevpdfe.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-12T161859.870768Z"></a>
2010-12-12T16:18:59.870768Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make const_90_degrees an external variable to stop smart optimizers from
converting angle/const_90_degrees to angle*(1/const_90_degrees). Bug 689794.
</pre>
<p>[base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-12-11T230225.039826Z"></a>
2010-12-11T23:02:25.039826Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't break ANSI aliasing rules. Use memcpy() to assign Ghostscript classes
i.e. structures of different type. Fix SEGV on GCC 4.5.1, release build.
Thanks to ubitux@gmail.com for analysis of the problem. Bug 691831.
</pre>
<p>[base/gximag3x.c]</p>
</blockquote>

<p><strong><a name="2010-12-10T195053.800825Z"></a>
2010-12-10T19:50:53.800825Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of Smask_is_CIE flag in the code as well as removal of code that
is no longer used in the soft mask rendering.</pre>
<p>[base/gdevp14.c base/gdevp14.h base/gstrans.c base/gstparam.h base/gxblend.c base/gstrans.h base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-12-10T132611.089772Z"></a>
2010-12-10T13:26:11.089772Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : More work towards DSC compliance

This is a resubmission of revision 11941, with some additional changes so that it
doesn't crash with pdfwrite on Linux systems.

We now pass around the 'type' of an object much more when writing. This is so that
we can emit &quot;%%BeginResource/%%EndResource&quot; comment pairs around the resources we write.
It is also required so that we *don't* write these comments around pages.

The code now emits %%BeginProlog, then writes the opdfread.ps procedure. It then writes
all the various resources used in the document, each with a reasonable DSC comment. Then
it writes %%EndProlog. After this come the page descriptions, each is written with a
%%Page: comment and a %%PageTrailer. Finally we write the %%Trailer, %%Pages
comment (NB we write %%Pages: (atend) in the header comments as we don't know how many
pages there will be until the end) and %%EOF.

The resources are mostly defined as being of type 'file', as most of them are not normal
PostScript resources. The DSC specification says under the %%BeginResource definition
(file note on p72) &quot;The enclosed segment is a fragment of PostScript language code or
some other item that does not fall within the other resource categories&quot; and so this
seems the best type to use for our purposes.

The output is now minimally DSC compliant, though there are a few other comments I'd
like to add if possible. Given the way the file is created we are always going to have a
large prolog, and that will need to be copied to all the pages if they are split
individually, in order to make sure that all the required resources are present.

Technically we could follow the resource chain and write %%IncludeResource comments,
at the page level at least, but this is probably more effort than it is realistically
worth.

Still need to add some more DSC comment types, and run some extensive testing.

No differences expected currently. Minimal testing with GSView suggests that the output
so far is DSC-compliant as-is.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-10T030640.558274Z"></a>
2010-12-10T03:06:40.558274Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Apply proper alpha blending to compute luminosity of mask per the PDF
specification.  Fixes bug 691822</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T165055.001506Z"></a>
2010-12-09T16:50:55.001506Z Ken Sharp</strong></p>
<blockquote>
<pre>
undo revision 11941 and 11942 as this causes seg faults on Linux.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T153910.142451Z"></a>
2010-12-09T15:39:10.142451Z Chris Liddell</strong></p>
<blockquote>
<pre>
A change to how we get the advance width of the glyph from Freetype.

Previously, we used the data in the glyph metrics structure, which
are scaled, and the undid the scaling. This is correct method for
everything except the horizontal and vertical advance distances.

We now get the two advance distances from the glyph structure,
and tell Freetype not to scale them, this avoids the rounding
errors that occur due to Freetype's fixed point number
format. It also saves the (less significant) error when we
previously unscaled the value, and saves a couple of
fairly large double precision calculations.

This does cause a number of changes in the regression suite,
the vast majority are pixel or so differences in glyph
positions. A very few are improvements.

Bugs 691778 and 691777

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T143526.421173Z"></a>
2010-12-09T14:35:26.421173Z Ken Sharp</strong></p>
<blockquote>
<pre>
fix pdfwrite

Revision 11941 had a typo in gdevpdf.c which spelled %%EndProlog with too many %
characters.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-12-09T142046.589285Z"></a>
2010-12-09T14:20:46.589285Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : More work towards DSC compliance

We now pass around the 'type' of an object much more when writing. This is so that
we can emit &quot;%%BeginResource/%%EndResource&quot; comment pairs around the resources we write.
It is also required so that we *don't* write these comments around pages.

The code now emits %%BeginProlog, then writes the opdfread.ps procedure. It then writes
all the various resources used in the document, each with a reasonable DSC comment. Then
it writes %%EndProlog. After this come the page descriptions, each is written with a
%%Page: comment and a %%PageTrailer. Finally we write the %%Trailer, %%Pages
comment (NB we write %%Pages: (atend) in the header comments as we don't know how many
pages there will be until the end) and %%EOF.

The resources are mostly defined as being of type 'file', as most of them are not normal
PostScript resources. The DSC specification says under the %%BeginResource definition
(file note on p72) &quot;The enclosed segment is a fragment of PostScript language code or
some other item that does not fall within the other resource categories&quot; and so this
seems the best type to use for our purposes.

The output is now minimally DSC compliant, though there are a few other comments I'd
lie to add if possible. Given the way the file is created we are always going to have a
large prolog, and that will need to be copied to all the pages if they are split
individually, in order to make sure that all the required resources are present.

Technically we could follow the resource chain and write %%IncludeResource comments,
at the page level at least, but this is probably more effort than it is realistically
worth.

Still need to add some more comments, and run some extensive testing.

No differences expected currently. Minimal testing with GSView suggests that the output
so far is DSC-compliant as-is.

</pre>
<p>[base/gdevpdfk.c base/gdevpdfm.c base/gdevpdfx.h base/gdevpdfo.c base/gdevpdf.c base/gdevpdfb.c base/gdevpdtd.c base/gdevpdfc.c base/gdevpdfo.h base/gdevpdfe.c base/gdevpdfu.c base/gdevpdtw.c base/gdevpdfg.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-07T141420.090005Z"></a>
2010-12-07T14:14:20.090005Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : more work towards DSC compliant ps2write output

This should now output pages in the correct order, with %%Page:/%%PageTrailer
comments.
Still need to address Resource comments and definitions.

Committed so that a user can try out the code. No differences expected.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-12-06T203042.463413Z"></a>
2010-12-06T20:30:42.463413Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691466.  Problem was caused by the DeviceN alternate color
space being Lab and the color values not being properly decoded to enable
use of the lab ICC profile.  A few progressions in the cluster data base
with this commit.</pre>
<p>[base/gscdevn.c base/gdevp14.c base/gsicc.c]</p>
</blockquote>

<p><strong><a name="2010-12-06T163946.324844Z"></a>
2010-12-06T16:39:46.324844Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Bring JPX Luratech decoder up to the level of Jasper decoder.
1. Don't expand indexed colors when the PDF expects an indexed color space.
Fix rendering of the sample file attached to the bug.
2. Recognize indexed CMYK color space and accept the palettes that are shorter
than 256 colors. Fix comparefiles/Bug689362.pdf
3. Fix memory corruption that happened with 4-bit-per-pixel grayscale image
and pack the nibbles by PS rules. Fix comparefiles/Bug690174.pdf

Luratech now renders every file in our test suite correctly. We don't have
tests for low values of bits per plane. Bug 691816, customer 532.
</pre>
<p>[base/sjpx_luratech.c base/sjpx_luratech.h]</p>
</blockquote>

<p><strong><a name="2010-12-06T160730.222320Z"></a>
2010-12-06T16:07:30.222320Z regression</strong></p>
<blockquote>
<pre>
Limit clusterpush.pl bmpcmp jobs to 10 megs of changes per file in addition
to the 100 changes per file limit.
</pre>
<p>[toolbin/localcluster/checkSize.pl toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-12-04T211237.349224Z"></a>
2010-12-04T21:12:37.349224Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691724.  The issue was due to a bug in the code that creates
equivalent ICC profiles from CIEABC types.  This has a pile of progressions
in the cluster data base.  I stepped through them with bmpcmp and they
appeared to be correct to me.  I also altered the DefaultRGB PS color space
to by in-sync with the D50 ICC sRGB based default that we are currently using.   </pre>
<p>[base/gsicc_create.c Resource/ColorSpace/DefaultRGB]</p>
</blockquote>

<p><strong><a name="2010-12-04T120200.835522Z"></a>
2010-12-04T12:02:00.835522Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some extraneous debugging code and variables left in accidentally with the commit
for revision 11932.
</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-12-04T115313.468703Z"></a>
2010-12-04T11:53:13.468703Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Hashing /Subrs didn't check all subrs.

Bug #691815 &quot;ps2pdf fails on attached ps file&quot;

The new code for hashing /Subrs, to improve font checking performance, stopped comparing
/Subrs between two fonts as soon as either font had an error getting a specific /Subr.

However it transpires that some fonts can have a null object for a /Subr (used to skip
Subrs that do nothing), and this returns a typecheck error. This led to two fonts which
differed only in the fact that one has (and uses) more Subrs than the other being
perceived as identical. This could lead to pdfwrite using the wrong font when
converting type 1 into CFF fonts and cause errors.

The code now continues checking remainign /Subrs if a typecheck error occurs, and as an
additional measure also checks the number of /Subrs in each font before deciding if
they are compatible.

</pre>
<p>[base/gxfont1.h base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-12-03T092028.129989Z"></a>
2010-12-03T09:20:28.129989Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Work around Acrobat bug with /Encoding

Bug #691809 &quot;Regression: some PDF files produced by GhostPCL r11913 cannot be read by
Acrobat 8.2.5&quot;

Acrobat 4 &amp; 8 have a peculiar bug, if a type 3 font (may affect other font types, but
it seems unlikely) has a WinAnsiEncoding, and no /Differences, then text set in that
font is not displayed by these versions of Acrobat. This may be limited to glyphs
which consist of a bitmap only.

Forcing the emission of a /Differences array for each glyph used results in these
versions of Acrobat displaying correctly (even though the 'differences' are in fact the
standard Encodings).

This does seem to be quite definitely an Acrobat bug which we are working around, no
other PDF consumer seems to have a problem with these files.

</pre>
<p>[base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-12-02T181653.794801Z"></a>
2010-12-02T18:16:53.794801Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Remove unused variable.</pre>
<p>[base/gxblend.c]</p>
</blockquote>

<p><strong><a name="2010-12-02T170945.886919Z"></a>
2010-12-02T17:09:45.886919Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691803.  This provides a fix for cases where we have soft masks
embedded within other soft masks.  Such rare cases are detected and when they
occur and the soft mask type is luminosity, the alpha channel of the soft
mask buffer is pre-blended with the luminosity data to give the proper mask
values.  There appears to a be change in fts_33xx.xps from this commit.
However, it appears to me that this file was not being rendered properly,
compared to the windows xps viewer, prior to the commit either.  I will file
a bug related to this issue.</pre>
<p>[base/gdevp14.c base/gdevp14.h base/gxblend.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-12-02T095828.497029Z"></a>
2010-12-02T09:58:28.497029Z Ken Sharp</strong></p>
<blockquote>
<pre>
minor bug, warning message point to incorrect source directory.

Bug #691811 &quot;incorrect error message&quot;

Simply alter the source path in a warning.

No differences expected.
</pre>
<p>[psi/imain.c]</p>
</blockquote>

<p><strong><a name="2010-12-01T164120.443841Z"></a>
2010-12-01T16:41:20.443841Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Additional debug code to help in soft mask problems.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-12-01T051655.267986Z"></a>
2010-12-01T05:16:55.267986Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the blend compositor actions are only removed from the clist
compositor queue if they are completely over-ridden by a subsequent compositor
action.  Previously no check was made to see that the same settings were being
up-dated by the new action.

This fixes two P1 customer bugs and has several progressions in the test suite
but one file Bug691783.pdf has both regressions and progressions.  I will get
the page 18 regressions into a bug.</pre>
<p>[base/gdevp14.c base/gxclimag.c base/gxcldev.h]</p>
</blockquote>

<p><strong><a name="2010-11-29T211232.441057Z"></a>
2010-11-29T21:12:32.441057Z regression</strong></p>
<blockquote>
<pre>
Additonal improvement in the cluster's ability to be able to recover from
machines going down late in the run.  Machines are put into a standby state
when there are no jobs left to send and they have processed all of their jobs
until all machines are in the standby state, then all the machines are released
from standby and can upload their logs
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-11-29T185503.883221Z"></a>
2010-11-29T18:55:03.883221Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for issues with the default ICC directory.  The PS interpreter now checks
if the default name is OK before setting to LIBPATH/iccprofiles .  Also, the
current name is first tested before we prepend with the directory name, to avoid
doing double applications of the profile directory.  Thanks to Ray for the fixes
in gs_lev2.ps</pre>
<p>[base/gsicc_manage.c Resource/Init/gs_lev2.ps]</p>
</blockquote>

<p><strong><a name="2010-11-29T183038.060525Z"></a>
2010-11-29T18:30:38.060525Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691748.  The idle optimizations for the softmask are not
really valid since we have since created the proper bounding box for
the soft mask in a previous commit.  In the cluster push testing, some
files came back as having problems with the psdcmyk device.  Checking,
it appears that these issues are not related to this fix but are another
bug.  I am working on this now and will submit a bug.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-11-29T144517.958276Z"></a>
2010-11-29T14:45:17.958276Z Chris Liddell</strong></p>
<blockquote>
<pre>
Due to &quot;lazy evaluation&quot; of softmask groups, the graphics state can change between
the creation of the softmask group form, and when it is executed.

We'll now save the gstate and (most of) the ExtGState when the softmask group is
defined, and then set both before evaluting the object. A few ExtGState entries
are not easily set directly, so those are missing.

This partially fixes Bug 691157, and fixes Bugs 690351, 691348 and 690535. It
also resolves the remaining issue with 690535.

Cluster differences as follows:
Bug690535.pdf (noted above)
Bug690022.pdf, Bug690115.pdf, Bug690208.pdf, fts_26_2601.pdf and
fts_26_2603.pdf are all improved when compared to Acrobat.

A few xps-&gt;pdf conversions thru pdfwrite render differently, but they were
wrong before, and slightly differently wrong now. I believe the PDFs are
&quot;incorrect&quot;.


</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-11-29T143525.792013Z"></a>
2010-11-29T14:35:25.792013Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Type 3 font capture and charpath operations

Bug #691033 &quot;Regression: 14-01.PS fails with pdfwrite&quot;

The first time a type 3 glyphis  encountered we start a charproc accumulatiopn and
exit to run the BuildChar/BuildGlyph. On return to the text processing, if the
operation was a charpath, this would take precedence over closing the accumulator which
would lead to significant later problems.

Modified the code path to allow for the charproc accumulation to finish and if this is
a charpath operation to rerun the operation using the newly captured glyph program.

Note this can only occur if the first operation on a given glyph in a type 3 font is
for a charpath.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-11-27T182343.131547Z"></a>
2010-11-27T18:23:43.131547Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : pointers not marked for garbage collection

Bug #691779 &quot;SegFault with pdfwrite and more than one cid font&quot;

pdfwrite does lazy creation of Identity ToUnicode CMaps for inclusion in output PDF
files (2 CMaps, one for horizontal and one for vertical writing). These pointers were
not marked for the garabge collector, but were stored directly in the pdf device
structure.

The CMaps were assigned to a pdfont resource type, where the pointer to the CMap *was*
marked for the garbage collector. This meant that if the pdfont resource was moved as
a result of garbage collection, the CMap could be moved as well. This left a dangling
pointer in the device structure.

If another font resource required an identity CMap then the now garbage pointer from
the device structure would be assigned. If the new font resource was moved as a result
of garbage collection, then the attempt to relocate the CMap would fail and cause a
crash.

Fixed by marking the pointers in the device structure for the garbage collector.

No differences expected.
</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-11-26T105951.673656Z"></a>
2010-11-26T10:59:51.673656Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the FAPI/UFST interface to correctly scale the points when retrieving an outline.
Since FAPI now expects points in 32.32 fixed point form.
</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-11-25T210322.187304Z"></a>
2010-11-25T21:03:22.187304Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691785.

The bitmap mask clip device has a long standing bug when attempting to clip
a bitmap through a 1bpp bitmap (gxclipm.c, clip_runs_enumerate, line 283ish).

The code detects runs of 'on' pixels in the mask. It then keeps the last run
it found in a 1 place buffer (called 'previous'). This therefore represents
the previous run found. Whenever we find a new run, we check to see if we can
add it to the previous run to try to form a larger (vertical) rectangle. If
we can't, we should write the previous rectangle out and remember the current
one.

Unfortunately the code was writing the current rectangle out, rather than the
previous one. This has the effect of losing the first run on most lines out.

130 differences shown in cluster testing; confirmed in bmpcmp as
progressions.

</pre>
<p>[base/gxclipm.c]</p>
</blockquote>

<p><strong><a name="2010-11-25T091213.562173Z"></a>
2010-11-25T09:12:13.562173Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a now-unused variable to silence a compiler warning.

No differences expected.</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-11-24T221834.999818Z"></a>
2010-11-24T22:18:34.999818Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Style clean up of gdevp14.c for white space, comments, long lines and dead code.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-11-24T174439.808162Z"></a>
2010-11-24T17:44:39.808162Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that we handle the \B command properly when we have transparency.  The stroke
should be drawn in a knock-out fashion rather than blended with the fill.  This was
achieved by adding in the push of a knockout transparency group for the stroke operation.
The opacity for that group had to be 1 rather than what ever the current graphic state was
(otherwise you end up with the opacity applied twice).  That change revealed an issue in the
clist when a transparency group is pushed where the opacity for the pdf14 clist device was
being altered without having the information passed into the clist.  Fixing that required a
few changes to make sure that the blend parameter changes for the transparency group end up
written in the same bands as the group push rather than all bands like the normal blend parameter
change compositor action does.  A few changes were needed in the clist compositor writing code to
make sure that this special blend parameter change did not push a new cropping item on the cropping
stack.  This commit results in a lot of progressions.  However, the cluster push revealed a couple
files fts_06_0608.pdf.pdf.ppmraw for example, which may have an issue.  These are being checked and
if found to be an issue a new bug report will be filed.</pre>
<p>[Resource/Init/pdf_ops.ps base/gdevp14.c base/gxclimag.c base/gxblend.c base/gstrans.h base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-11-24T162125.266704Z"></a>
2010-11-24T16:21:25.266704Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : attempt to make PCL bitmap fonts into searchable type 3

In general pdfwrite only resorts to making a bitmap from a font when it cannot handle
the original font type, which is rare for PostScript, PDF and XPS. However all PCL
bitmap fonts are handled this way.

When this happens, the bitmap is stored into a general type 3 font, a 'bucket' where all
such glyphs are stored. When this font is full, a new one is started and so on. The text
stored in the PDF page stream references the correct type 3 font, but usually the
character code will be unrelated to the original character code.

For PCL bitmap fonts pdfwrite actually starts by creating a type 3 font to hold the
PCL bitmaps, but doesn't use it. This patch tries to store the bitmaps in the type
3 font where possible, using the character code from the original PCL document.
Although this will not create searchable text in the general case, it does seem that
there are a good number of PCL documents which do use an ASCII encoding and so will
produce a searchable PDF file.

There are several caveats:

1) This only works at all with cached glyphs. Glyphs which are too big to fit in the
cache are instead rendered as images, not text at all. The cache has a compiled limit
of 2500 for the height of the bitmap, but this needs to take the resolution which is
being used for rendering into account. The default resolution for pdfwrite is 720 dpi
which means that bitmaps larger than ~125 rows will not be cached. (see below for more)

2) Certain kinds of text operations can't be handled at all; any case where a character
code does, or may, exceed 256 cannot be handled. These cases are handled as before by
placing in a special font with a unique character code and called from there.

3) If the font matrix is not the identity we cannot handle the glyphs, as the bitmaps
stored in the cache already include any transformations present in the Fontmatrix and
we can't undo those transformations to the bitmap. In practice this means that if the
canvas orientation (not the media) is not portrait, then this will cause the text to
be non-searchable.

4) The Acrobat searching algorithm does not work very well with this kind of text. In
our case each glyph is individually positioned on the page rather than being written
as a continuous stream of characters. Acrobat seems unable to find more than about
three glyphs in succession this way.


There is no further scope for improvement in pdfwrite as far as I can see. The only
way to handle this better would be to make changes in the PCL interpreter so that the
bitmap PCL font is created as an actual font (probably a TrueType). This would mean that
the text would be stored in the PDF file as real text, the FontMatrix would not be a
problem, caching would not be an issue. This is probably a large project, but I suspect
less of a pain than this enhancement was.

Caching
========
In gsfont.c is a #define:
#define blimit_LARGE 2500	/* blimit/upper - max size of a single cached char */

Increasing this will allow larger glyphe to be cached. There is another limit in
gxchar.c:
static const uint MAX_TEMP_BITMAP_BITS = 80000;

This should not be altered. Care should be exercised if increasing the maximum size
of cached characters as these are emitted in the PDF file as inline images in a type
3 font. The PDF spec recommends that inline images should not exceed 4Kb and some
consumers may not be able to cope with images which exceed this limit.

</pre>
<p>[base/gdevpdfb.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T160144.675647Z"></a>
2010-11-23T16:01:44.675647Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix chunk_free_all_remaining typo so that mulitple object chunk list gets
traversed and freed first, then the single object chunk list. Thanks to
Norbert Janssen for spotting this. Bug 691791.
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T153628.976110Z"></a>
2010-11-23T15:36:28.976110Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for Bug 691783. A tiny tweak to that submitted by Sebastian Rasmussen.
Many thanks!

When closing down render threads we check to see if the underlying
allocator had to be wrapped to make it thread safe. If it was, we free the
wrapped version too. Unfortunately the test to see &quot;did we have to wrap it&quot;
was accessing memory we'd just freed.

The fix is to move the code that finds the underlying allocator to before
we free the memory.

Cluster testing shows no differences.

</pre>
<p>[base/gxclthrd.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T123356.433376Z"></a>
2010-11-23T12:33:56.433376Z Robin Watts</strong></p>
<blockquote>
<pre>
In an effort to understand the shading code I put together a 'map' of the
function calls as comments. This has been hanging around my harddisc for ages
and I'm now committing it to avoid it being lost.

Comment change only - no cluster changes expected.

</pre>
<p>[base/gxshade1.c]</p>
</blockquote>

<p><strong><a name="2010-11-23T084610.878077Z"></a>
2010-11-23T08:46:10.878077Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revert revision 11901.

Because of the way that PCL draws bitmap fonts directly to the cache there is no
possibility of making uncached glyphs work properly. Also the code for cached glyphs is
much too forgiving and attempts to add glyphs which cannot be handled. Finally there is
no provision for type 3 fonts with non-identity matrices. Because the bitmaps in the
cache already have the scaling/rotation/shearing and clipping applied, we cannot have
a type 3 font with a non-identity matrix.

The code will be revised and recommitted.
</pre>
<p>[base/gdevpdti.h base/gdevpdfx.h base/gdevpdfb.c base/gdevpdt.h base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-11-20T225509.754787Z"></a>
2010-11-20T22:55:09.754787Z regression</strong></p>
<blockquote>
<pre>
Improved the cluster code's ability to be able to recover from machines going down late in the run.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-11-18T192131.928351Z"></a>
2010-11-18T19:21:31.928351Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure we set SHARE_FT correctly when we end up using the system installed
freetype library.

Bug 691776.

No cluster differences expected.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-11-18T005220.670104Z"></a>
2010-11-18T00:52:20.670104Z regression</strong></p>
<blockquote>
<pre>
Two changes to the local cluster system:

1.  A warnings check is now performed on the code under test (both commit
and user tests).

2.  In order to better recover from nodes going offline near the end
of a cluster run nodes are paused after all their jobs have been sent.
This way the jobs from an unresponsive node that isn't detected until
all jobs have been distributed can be reassigned.

Also some minor cleanup (dividing the clustermaster log into .log and
.dbg files, supressing some uneeded debugging messages, etc.)

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/pngs2html.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-11-16T224926.969992Z"></a>
2010-11-16T22:49:26.969992Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for PCL that uses the chunk allocator (which is not inherently thread safe)
when NumRenderingThreads &gt; 1. Adds 'is_thread_safe' to the gs_memory_status so
that clist_setup_render_threads can wrap an unsafe allocator in a locking wrapper.

Also restore the optimizations to the chunk memory allocator to keep two lists
(one for multiple object chunks and another for single object chunks) and fixes
the chunk_free_object so that the correct list is chosen. Even if not found on
the selected list, the other list will be scanned and a diagnostic printed if
the wrong chunk list was selected (belt and suspenders). My testing with the
lj*.prn files did not show this problem.
</pre>
<p>[base/lib.mak base/gsmemlok.c base/gsmchunk.c base/gxclthrd.c base/gsmalloc.c base/gsmemret.c base/gsalloc.c base/gsmemory.h base/gsmemraw.h]</p>
</blockquote>

<p><strong><a name="2010-11-16T144831.620067Z"></a>
2010-11-16T14:48:31.620067Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the initial gray color spaces in the graphic state are properly color
managed. Previously, if we immediately started drawing in the document with a gray
color space, the initial un-managed color space in the graphic state was used
and this was not associated with the specified gray source profile.  With this
fix we initialize the stroking and filling color spaces to be ICC color spaces
associated with the profile for default_gray in the icc manager.  Also a fix for
an issue in littleCMS.  When merging profiles, littleCMS will often do an optimization
where it approximates 1-D LUTs with an exponent operation for use during merging and
interpolation of the profile structures.  If the curve is very steep, as in like a step
function, it should not do this approximation.  This was an issue when we had profiles
that provided thresholding operations with their 1-D LUTs.   I spoke with Marti about
this issue a couple weeks ago.  This commit will create over 6000 differences in the
regression test.   I reviewed many of these and they all are minor differences in gray
colors as expected.  These are differences where we were drawing unmanaged colors.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c base/gsicc_manage.h lcms/src/cmsgmt.c]</p>
</blockquote>

<p><strong><a name="2010-11-16T143357.040738Z"></a>
2010-11-16T14:33:57.040738Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : attempt to make PCL bitmap fonts into searchable type 3

In general pdfwrite only resorts to making a bitmap from a font when it cannot handle
the original font type, which is rare for PostScript, PDF and XPS. However all PCL
bitmap fonts are handled this way.

When this happens, the bitmap is stored into a general type 3 font, a 'bucket' where all
such glyphs are stored. When this font is full, a new one is started and so on. The text
stored in the PDF page stream references the correct type 3 font, but usually the
character code will be unrelated to the original character code.

For PCL bitmap fonts pdfwrite actually starts by creating a type 3 font to hold the
PCL bitmaps, but doesn't use it. This patch tries to store the bitmaps in the type
3 font where possible, using the character code from the original PCL document.
Although this will not create searchable text in the general case, it does seem that
there are a good number of PCL documents which do use an ASCII encoding and so will
produce a searchable PDF file.

There are 3 parts to this enhancement:

1) Cached glyphs. When the current font is a type 3 font, and the text operation is
one which might result in an ASCII character code, and we can manufacture a glyph name
for the resulting character code, store the glyph in the type 3 font (rather than the
general 'bucket' font), using the character code and glyph name. Glyphs which can't
be handled this way for any reason are still stored in the general recipient 'bucket'
font.

2) Uncached glyphs. Glyphs which are too large for the cache are rendered as images. The
image handling code has been extensively reworked to try and detect this situation and,
if the criteria for cached glyphs above also holds true, to store the image as a glyph
in a type 3 font and draw text in the PDF content stream instead of an image. Images
which do not fulfil these criteria are still handled as images.

3) Recached glyphs. If the glyph cache fills up, glyphs will be flushed to make space.
If a glyph is then reused we go through the caching case again (for large glyphs which
are uncached we end up repeating the code every time the glyph is used). We now attempt
to spot this by determining that the glyph in the font has already been used, and rather
than storing a new copy of the glyph, as the old code did, we simply emit text into
the page content stream.

Note that there is a recommendation that inline images in PDF should not exceed 4KB.
Since CharProcs must use inline images, bitmaps which exceed this size will be rendered
as images, not text (they will also exceed the cache size and so are always rendered
uncached).

</pre>
<p>[base/gdevpdti.h base/gdevpdfx.h base/gdevpdfb.c base/gdevpdt.h base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-11-16T135836.196330Z"></a>
2010-11-16T13:58:36.196330Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Prefer character codes &lt; 256 during construction of /CharStrings and
/Encoding attributes of a symbolic Type 42 font. Bug 691753.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-11-15T183050.012584Z"></a>
2010-11-15T18:30:50.012584Z Henry Stiles</strong></p>
<blockquote>
<pre>
reverts 11877 which needs a bit more work</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-11-15T091150.168011Z"></a>
2010-11-15T09:11:50.168011Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix a memory leak when interpolating image data. We were allocating a colour
management buffer for every interpolated scan line from the currently
buffered image data, but only releasing the last one.

We'll now allocate the buffer (and initialise the buffer desc structure)
only once, and free the buffer once when we're done.

No cluster differences expected.

Bug 691772

(NOTE: the test file for this still appears to go into an infinite loop
during interpolation).

</pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-11-14T211615.954493Z"></a>
2010-11-14T21:16:15.954493Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Make a macro for the default ICC profile name and set it in the proper locations.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c base/gsicc_manage.h]</p>
</blockquote>

<p><strong><a name="2010-11-06T153618.568592Z"></a>
2010-11-06T15:36:18.568592Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a string handling bug that occurred when the device ICC profile name
was smaller than the default device profile name.  Also, additional code to
ensure that the ICC path and the device profile name are properly combined
when needed.  Finally, if the device profile name is given as an absolute
name the icc directory is not added to it.</pre>
<p>[base/lib.mak base/gsdparam.c base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-11-05T221205.617541Z"></a>
2010-11-05T22:12:05.617541Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that when compositing with tags, the tos tag data has no effect on
the nos tag data if the pixel alpha value is 0.  Fixes Bug 691752.</pre>
<p>[base/gxblend1.c]</p>
</blockquote>

<p><strong><a name="2010-11-05T155335.817121Z"></a>
2010-11-05T15:53:35.817121Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event that we've decided not to cache a glyph generated by FAPI, we
need to make sure that zsetcachedevice2() doesn't opt to try to cache said
glyph. To do that we were setting in_cachedevice to CACHE_DEVICE_NOT_CACHING
before calling zchar_set_cache(), and setting it back to its previous value
on return. Unfortunately, a font with a CDevProc causes the call to
zsetcachedevice2() to be delayed until after execution of the CDevProc, so
in_cachedevice was (probably) no longer set to CACHE_DEVICE_NOT_CACHING.

Amongst other effects, this caused some anti-aliased glyphs to be render
with incorrect, scaling as well as the potential for marking glyphs to have
empty (but valid) cached bitmaps.

Expected cluster differences: fts_23_2306.pdf at 72dpi shows some (benign)
pixel differences on the pattern filled glyphs - this is actually a behaviour
progression, as it is caused by cache being properly bypassed for an uncached
glyph, rather than the glyph being rendered uncached but the cache receiving
an emtpy glyph.

Bug 691750.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-11-04T191308.201769Z"></a>
2010-11-04T19:13:08.201769Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Increase in curve size to enable sharper cut offs (i.e. no interpolation of
curve points) for thresholding profiles.  </pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.cpp]</p>
</blockquote>

<p><strong><a name="2010-11-03T204407.993086Z"></a>
2010-11-03T20:44:07.993086Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to avoid potential crash instead of error if an improper file name
is given for the device ICC profile.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-11-02T171624.985382Z"></a>
2010-11-02T17:16:24.985382Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove some unnecessary, and detrimental endian related code
in the GS/lcms interface.

Bug 691696

No cluster differences expected.

</pre>
<p>[base/gsicc_cache.c base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-11-01T235927.933765Z"></a>
2010-11-01T23:59:27.933765Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Performance fix so that the md5 code is not used to hash the rendering
conditions for the icc link.  </pre>
<p>[base/gsicc_cache.c base/gscms.h]</p>
</blockquote>

<p><strong><a name="2010-10-31T032619.022477Z"></a>
2010-10-31T03:26:19.022477Z Ray Johnston</strong></p>
<blockquote>
<pre>
Optimize large allocations in the chunk memory manager maintaining separate lists
for chunks with only a single block (that will never have any free space) from
the multiple object chunks which are searched for free space when the requests
are for small objects. Testing with a 28 files benchmark suite shows improvements
against rev 11876 by over 9% (real time), to get within 2% of version 8.71.
(testing 600 dpi ppmraw to /dev/null on peeves).
</pre>
<p>[base/gsmchunk.c]</p>
</blockquote>

<p><strong><a name="2010-10-30T034036.798714Z"></a>
2010-10-30T03:40:36.798714Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check for negative object nunbers and consider such objects as null.
Bug 691740, customer 384.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2010-10-29T234030.279741Z"></a>
2010-10-29T23:40:30.279741Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that the image clues array is dynamically allocate only when needed
as opposed to being a static array in gx_image_enum.  clues is used only
in the case of monochrome or indexed with bps &lt;= 8 and masked images.
Another optimization to do is to make it allocate only 2 entries for the
masked case rather than all 256.</pre>
<p>[base/gxipixel.c base/gxidata.c base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-10-29T193548.071618Z"></a>
2010-10-29T19:35:48.071618Z Henry Stiles</strong></p>
<blockquote>
<pre>
Revision 10823 removed an optimization to strength reduce the logical
operation when rendering an image - the optimization in fact was
incorrect (see the bug referenced in the commit entry #691147) however
the optimization is correct and gives us a good speedup if the current
color is black.  This is due to the peculiarities of the pcl
transparency model which only effects the opacity/transparency of
white.
</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2010-10-29T163741.020300Z"></a>
2010-10-29T16:37:41.020300Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Added features and fixed bugs to enable creation of thresholding ICC profiles.</pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/resource.h toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp]</p>
</blockquote>

<p><strong><a name="2010-10-29T090542.895454Z"></a>
2010-10-29T09:05:42.895454Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : DeviceN not permitting multiple identical inks

Bug #691740

The DeviceN checking code did not permit multiple inks to have the same name. The
comment in the code says this is not permitted, but I am unable to find any
documentation in any of the specifications in support of this, and other interpreters
(including CPSI) do not make this restriction.

Restriction removed, and also the 'continuation' procedures used for much of the colour
space parsing/validation have been given names so that future error messages use these
instead of printing the function address.

No differences expected.
</pre>
<p>[base/gscdevn.c psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T204114.761110Z"></a>
2010-10-28T20:41:14.761110Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition in profile creation tool to create Gray ICC profiles with
abrupt thresholds.   Needed for solution to bug 691737</pre>
<p>[toolbin/color/icc_creator/ICC_Creator/icc_create.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/resource.h toolbin/color/icc_creator/ICC_Creator/ICC_Creator.rc toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp]</p>
</blockquote>

<p><strong><a name="2010-10-28T195751.569853Z"></a>
2010-10-28T19:57:51.569853Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for issues that arise when the embedded icc profile is the same as one
of the default icc profiles and we are using pdfwrite.  This should fix 691731.</pre>
<p>[base/gsicc_create.c base/gsicc_manage.c base/gscms.h base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T190245.723574Z"></a>
2010-10-28T19:02:45.723574Z Robin Watts</strong></p>
<blockquote>
<pre>
Marcos points out that tiffscaled with -rR -dDownScaleFactor=D can produce
different sized images than just using -r(R*D) and a normal tiff device.
(Bug 691730). I'll concede he's probably right that this isn't ideal.

The difference was caused by me rounding the size up on a downscale so that
no information is lost.

This patch removes the rounding up. We can always add it again later if
we actually find a file where it makes a difference.

No expected cluster differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T150037.200667Z"></a>
2010-10-28T15:00:37.200667Z Chris Liddell</strong></p>
<blockquote>
<pre>
Work around the &quot;no rule to make target&quot; with tif_config.h (actually it
affects tiffconf.h, too). This involves the rather unpleasant requirement
of calling a configure script (for libtiff) from a makefile (the top level
makefile for the ghostpdl builds). It must be done there, before the PDL
specific makefiles start setting CFLAGS, which confuses the configure.

Also, update the GS dist-clean and GhostPDL clean targets to remove
the two tiff header files generated during the tiff configure.

THIS IS NOT A FIX! It really is a &quot;workaround&quot;.

Bug 691700.


</pre>
<p>[/trunk/ghostpdl/Makefile base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-10-28T061253.429268Z"></a>
2010-10-28T06:12:53.429268Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Code to speed up cases where a file contains a lot of small images that are
embedded in the clist as high level images.  Previously, for every high level
image, the serialized ICC source data was read out of the clist at a different
clist file location, which required a fseek, a fread and then another fseek.
This occurred even if all the images shared the same profile.  The cost of
file i/o for this can become significant if we have a lot of images.  With
this commit, the reading of the profile data is delayed and will only occur
if a link using that profile does not already exist in the link cache.  </pre>
<p>[base/gxclpath.c base/gxclimag.c base/gxclist.h base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-10-28T041255.507828Z"></a>
2010-10-28T04:12:55.507828Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added dependencies to devs.mak to allow minftrsz.c to compile with concurrent make.

</pre>
<p>[base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-10-27T233042.045125Z"></a>
2010-10-27T23:30:42.045125Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix compiler warning.

No expected differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T194801.087645Z"></a>
2010-10-27T19:48:01.087645Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new version of tiffscaled device, that supports -dMinFeatureSize=2.
(Solves bug 691718).

Also add support for AdjustWidth in tiffscaled device.

Also update documentation.

No expected differences.

</pre>
<p>[base/gdevfax.h base/gdevtifs.c base/minftrsz.c base/gdevtifs.h base/gdevtsep.c base/minftrsz.h doc/Devices.htm base/gdevfax.c base/gdevtfnx.c base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T124549.361211Z"></a>
2010-10-27T12:45:49.361211Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691727.

Black and White Tiff based devices were not respecting the AdjustWidth
parameter. Fax based devices were applying it regardless, non faxed based
devices were not applying it at all. The documentation says they should
all default to applying it, but be controlled by the option.

In this commit, we change so that all black and white tiff based devices
(except tiffscaled) respect this parameter. We default to applying it in
fax devices, and not applying it in non-fax devices, so default behaviour
does not change. We also update the docs.

No expected differences.

</pre>
<p>[doc/Devices.htm base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-27T111838.076346Z"></a>
2010-10-27T11:18:38.076346Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix Bug 691726, memory corruption in tiffscaled device when
(resolution % DownScaleFactor) != 0.

The problem specifically occurred when the page had 'stray' lines at the end.
The code I had written to cope with this was calling the Tiff writing code
with the wrong row number, causing the tiff lib to try to extend the buffer.
This, it seems, is a bad thing.

The miscalculation is fixed here, and the bug goes away.

No expected cluster differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T235413.691521Z"></a>
2010-10-26T23:54:13.691521Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug reported by Norbert Janssen. Inaccuracies in the floating point maths
can cause 'no-scales' to look like 'downscales', and so high level images are
skipped.

This shouldn't actually matter in most cases as the two rendering paths should
give the same results, but when people hook the clist for their own purposes
this can cause problems. The workaround is to introduce a fudge factor and to
accept very slight downscales.

Thanks to Norbert for the first version of this patch.

Minimal differences in cluster testing due to bug 691697.


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T203032.970049Z"></a>
2010-10-26T20:30:32.970049Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for RGB byte order expected by new CMM compared to imdi libray.</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T202245.373077Z"></a>
2010-10-26T20:22:45.373077Z Robin Watts</strong></p>
<blockquote>
<pre>
Silence gcc warning.

</pre>
<p>[base/gdevfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T194135.752819Z"></a>
2010-10-26T19:41:35.752819Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of accidental commit of my own path for the wts halftone planes.

</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T185049.267717Z"></a>
2010-10-26T18:50:49.267717Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that wtsimidi device works again.   I had the device using the wrong
structure for maintaining its device link that maps the contone RGB data to
CMYK.</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T181015.277289Z"></a>
2010-10-26T18:10:15.277289Z Robin Watts</strong></p>
<blockquote>
<pre>
Add Rays MinFeatureSize magic. Ray had originally integrated this into the
fax devices, which had the effect of working for the tiff based fax
devices too. Unfortunately the reworking of the tiff based devices to
use libtiff meant that the output function changed, causing the patch to
stop working with those devices.

Here we split the new code out into a separate .c/.h pair, so it can be
used by both tiff and fax devices, and hook it up to all the black and
white tiff devices (except tiffscaled) and to the fax based ones.

We also document the device (including it's current limitations).

No expected changes.

</pre>
<p>[base/gdevfax.h base/gdevtifs.c base/minftrsz.c base/gdevtifs.h ghostscript.vcproj base/minftrsz.h base/gdevtsep.c doc/Devices.htm base/gdevfax.c base/gdevtfnx.c base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-26T141424.874268Z"></a>
2010-10-26T14:14:24.874268Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Generate fully opaque mask when /SMaskInData attribute is specified in PDF
but JPX stream has no opacity channel. Fix the case of missing images on
Luratech decoder in fts_17_1717.pdf and fts_17_1718.pdf.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T165126.885213Z"></a>
2010-10-25T16:51:26.885213Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change the interface to Luratech JPX library to extract image data or
opacity depending on the alpha parameter.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T155910.973330Z"></a>
2010-10-25T15:59:10.973330Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite : Do not emit DeviceRGB/CMYK as an Alternate when disallowed by PDF/A or X

If a /Separation colour space had an /Alternate of /DeviceRGB or DeviceCMYK it was not
checked to see if it was valid for PDF/A or PDF/X production, if these were set.

As a result invalid PDF/A or PDF/X files could be written.

The code now tests these flags and if the base space is not valid, converts to an
appropriate base space by; sampling the tint transform function at 0 and 1, converting
the resulting colours to the appropriate base space (using the Red Book methods for
DeviceRGB/DeviceCMYK conversion), creating a new linear interpolation function for
the new base space, using the converted sampled values for /Co and C1.

The new base space is then written to the PDF file.

No differences expected as we don't test PDF/A and PDF/X on the cluster.</pre>
<p>[base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T062322.846885Z"></a>
2010-10-25T06:23:22.846885Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Move initialization of state-&gt;alpha flag to the place where it has effect.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-10-25T043951.229054Z"></a>
2010-10-25T04:39:51.229054Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Merge rev. 11790, 11795, 11802, 11805, 11809, 11810, 11812, 11813, 11818
into the trunk. JPX files without SMaskInData are now rendered correctly.
Other JPX files are rendered incorrectly. Trunk PostScript code and Jasper
use separate access to opacity and data. Luratech is still using pixel-
interleaved format.
</pre>
<p>[base/sjpx_luratech.c base/sjpx_luratech.h psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-10-25T041646.177854Z"></a>
2010-10-25T04:16:46.177854Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Rev. 11785 have introduced double decrement of the reference counter in
gx_pattern_cache_free_entry() that caused warnings with -Z? option and
SEGV on Windows, esp. with Luratech JPX library. This patch resolves
all warnings and crashes. Bug 691714.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-10-24T222355.448411Z"></a>
2010-10-24T22:23:55.448411Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement /SMaskInData using images with /SMask and separate streams for the
mask and image data. Our /ImageType 103 seems to have issues and cannot be
used directly. /JPXDecode filter now takes /Alpha parameter, which controls
whether opacity or image data stream is extracted.

This commit introduces a PS error on pdfwrite device in fts_18_1805.pdf
and a few other files with the same image. However, this image has never
been combined with SMask before and the actual bug may predate the commit.
Bug 691489, customer 532.
</pre>
<p>[base/sjpx.c Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-10-23T223817.069244Z"></a>
2010-10-23T22:38:17.069244Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Move checking for /JPXDecode filter in front of checking for missing color
spaces to handle /SMaskInData attribute in all cases. Fix handling of filter
arrays and a wrong name /DecodeParms.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-10-22T092910.157074Z"></a>
2010-10-22T09:29:10.157074Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a debug-clean target (which in turn calls the existing debugclean target)
to be more consistent with the ghostpdl langauge builds.

No cluster differences expected.

</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-10-22T075212.054756Z"></a>
2010-10-22T07:52:12.054756Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a spurious space that was causing a compiler warning, and remove an unused
function, also causing a compiler warning.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-22T063849.083740Z"></a>
2010-10-22T06:38:49.083740Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make oforce_recursive more robust in preparation to SMaskInData commit.
Don't execute tint transform functions and similar executable arrays
that may be added by our PDF interpreter to PDF objects.
</pre>
<p>[Resource/Init/pdf_base.ps]</p>
</blockquote>

<p><strong><a name="2010-10-22T041930.192593Z"></a>
2010-10-22T04:19:30.192593Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize /SMaskInData attribute as an indicator that the page has
transparency features. Establish a base level for a future regression
testing.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-10-21T155737.250433Z"></a>
2010-10-21T15:57:37.250433Z Ken Sharp</strong></p>
<blockquote>
<pre>
More DSC work. Altered Procset emission to strip comments (but not line endings), as
some of the ProcSets included %%BeginPrologue and %%EndPrologue comments which isn't
(I don't think) allowed. Also makes the output file smaller.

When producing DSC output, don't set the FitPages/RoatePages/CenterPages/SetPageSize
operations.

Don't permit the entire file to be compressed when emitting DSC PostScript
(clearly won't be DSC compliant that way)

Produce some very basic DSC Comments; the correct header, %%Pages, %%Beginprologue.
%%EndPrologue, %%EndComments.

Don't emit %PDF header when producing DSC PostScript.

Count the number of pages and emit a %%Pages: comment at the end of the file. Don't
write the Info dict when producing DSC PostScript. Emit %%Trailer and $$EOF.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T140927.225155Z"></a>
2010-10-21T14:09:27.225155Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Updated the cluster new node instructions to test the cups device
when verifying the installation is complete.

</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-10-21T133900.821724Z"></a>
2010-10-21T13:39:00.821724Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added the cups dev repositories to the cluster node sertup read.me

</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-10-21T111731.420556Z"></a>
2010-10-21T11:17:31.420556Z Ken Sharp</strong></p>
<blockquote>
<pre>
When producing DSC compliant PostScript from ps2write, do not emit the following;
Pages tree, outlines, articles, named destinations, PageLabels array, document metadata,
document Catalog, threads, encrypt dictionary, xref, trailer.

These objects are not required by PostScript, and cannot be easily
placed in a DSC-conforming file. This does mean that, unlike the general output from
ps2write, the output file is *not* a valid PDF file and cannot be opened as such by a
PDF consumer.

No differences expected.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T110740.293085Z"></a>
2010-10-21T11:07:40.293085Z Ken Sharp</strong></p>
<blockquote>
<pre>
Correct a bug in revision 11828 which tried to copy too many bytes from the source
buffer, if fewer bytes were read then were requested, when copying a ProcSet.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T082247.321512Z"></a>
2010-10-21T08:22:47.321512Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some unused variables to silence compiler warnings.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-21T024848.797956Z"></a>
2010-10-21T02:48:48.797956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't search for a font named / on disk, because operator findlibfile
throws an error in this case. Just fail the request when such font is
not defined in VM. Bug 691698, customer 384.
</pre>
<p>[Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-10-20T170027.929678Z"></a>
2010-10-20T17:00:27.929678Z Robin Watts</strong></p>
<blockquote>
<pre>
Add a helpful valgrind header, and call it from gsmdebug.h.

The valgrind header here serves 2 purposes.

Firstly, it insulates us from platforms on which Valgrind does not exist -
if we build without defining ENABLE_VALGRIND then no dependency on any
valgrind headers exists. The standard Valgrind macros are all defined in
this header to do nothing, so they can safely be called in our code
without needing ugly #ifdef ENABLE_VALGRIND wrapping.

Secondly, it insulates us from changes in the valgrind/memcheck.h file -
if ENABLE_VALGRIND is defined we will use whatever version is defined by
the system. If new macros are defined by new versions of valgrind/memcheck.h
we simply need to add new 'empty' definitions to valgrind.h.

To start with, the only use of this code is to mark the contents of newly
allocated blocks as being undefined. Thanks to AlexCher for spotting a
cunning place to do this.

</pre>
<p>[base/valgrind.h base/gsmdebug.h]</p>
</blockquote>

<p><strong><a name="2010-10-20T165951.575415Z"></a>
2010-10-20T16:59:51.575415Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add /ZapfDingbats to the list of known symbolic fonts, which ignore bogus
/Encoding attribute. Fix fts_23_2300.pdf rendering.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-10-20T160528.326890Z"></a>
2010-10-20T16:05:28.326890Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initial work on DSC compliant PostScript. When ProduceDSC is true, do not strip the
ProcSet, this is because DSC-compliant files have a line limit of 256. Later we will
want to wrap the ProcSet emissions with %%BeginResource/%%EndResource as well.

No effect if ProduceDSC is not true, so no differences expected.
</pre>
<p>[base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-20T144548.119859Z"></a>
2010-10-20T14:45:48.119859Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add a new switch to ps2write, working title 'ProduceDSC'. This will be used to control
whether the output of ps2write is DSC-compliant or not.

No differences expected.
</pre>
<p>[base/gdevpdfx.h base/gdevpdfp.c base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2010-10-20T105923.603495Z"></a>
2010-10-20T10:59:23.603495Z Robin Watts</strong></p>
<blockquote>
<pre>
Disable the use of high level images in the clist if we are downscaling;
this serves 2 purposes.

Firstly, it fixes the potential problems with banded/unbanded mismatch
of rendering due to the 'support' calculations done in the high level image
code. These calculations are no longer correct for downscales since the
change to use a simpler interpolated image scaler.

Secondly, when downscaling we will probably end up copying more data than
we would if we just kept the original, so high level images are a bad idea
anyway.

This *should* produce no differences, but actually produces lots.

Most of these might be ignorable (slight rendering differences that appear to
result in the new images being a little lighter, but a significant number
appear to be noticable progressions, which hints that the high level image
clist code is broken. Specifically high level images fail to  render the
same as the non high level code does. In particular halftoning seems to
be enabled for some examples when high level images are used, for no good
reason. This has been opened as bug 691697.


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-20T102150.512085Z"></a>
2010-10-20T10:21:50.512085Z Robin Watts</strong></p>
<blockquote>
<pre>
Unpack a hideously complex if statement into a series of if statements.
Any reasonable compiler (if such a thing can be said to exist) should
compile to the same code, but this is a lot easier to use under a debugger/
read.

No changes expected in testing (and clusterpush agrees).


</pre>
<p>[base/gxclimag.c]</p>
</blockquote>

<p><strong><a name="2010-10-19T080432.778817Z"></a>
2010-10-19T08:04:32.778817Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Update CFF interpreter to handle gsubr while searching for SEAC

Bug #691680 &quot;PDF Writer drops many accented characters&quot;

pdfwrite makes use of a routine 'gs_type1_piece_codes' while copying fonts to determine
if a glyph is a SEAC, and therefore includes two subsidiary glyphs. This code was
updated previously (rev 10076) but on encountering a callgsubr in a CFF font, assumed
that the glyph was not a SEAC&gt;

This patch adds support for callgsubr and continues searching glyphs which use a gsubr
to see if the gsubr is actually a SEAC type endchar.

No differences expected.
</pre>
<p>[base/gxtype1.c]</p>
</blockquote>

<p><strong><a name="2010-10-18T154420.143696Z"></a>
2010-10-18T15:44:20.143696Z Chris Liddell</strong></p>
<blockquote>
<pre>
Silence a compiler warning from my previous commit.

</pre>
<p>[psi/zchar42.c]</p>
</blockquote>

<p><strong><a name="2010-10-18T141144.566085Z"></a>
2010-10-18T14:11:44.566085Z Chris Liddell</strong></p>
<blockquote>
<pre>
In a CIDType2 font with a gsub table, when/if we substitute the glyph index
with an index for a vertical glyph, make sure we change the value of the
Truetype glyph index, and *not* the value of the Postscript CID.

Bug 691692

No cluster differences expected.

</pre>
<p>[psi/zchar42.c]</p>
</blockquote>

<p><strong><a name="2010-10-16T155253.774342Z"></a>
2010-10-16T15:52:53.774342Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite: Don't use CFF font format if CompatibilityLevel &lt; 1.2

We permit CompatibilityLevel down to 1.1, but PDF 1.1. doesn't support CFF (Type 1C)
fonts, so don't use this format if CompatibilityLevel &lt; 1.2.

No differences expected.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T151236.033471Z"></a>
2010-10-15T15:12:36.033471Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Scale up type 3 font outlines to give more accuracy

Bug #691383, #691287, #691595 various type 3 font problems.

Although this is being fixed for the FreeType implementation, the Artifex font
interpreter had similar problems.

The issue is caused by using an identity scale at 72 dpi to capture font outlines.
Quark often uses a type 3 font which runs a type 1 font, in order to achieve text
special effects, such as stroke+fill. The stroke was achieved by a 'charpath/fill'
combination, because pdfwrite doesn't have a charpath, this meant that the path was
captured and emitted. Because the scale was so low, the interpreter could run out of
arithmetic precision, resulting in poorly formed outlines.

We can't simply use the CTM in force at the time, as that includes the font scale, but
we need to use something other than the identity. A scale facto of 1000 proved too
likely to cause arithmetic overflow, or clipping, and also meant writing large values
to the PDF file, which is inefficient. A factor of 10 turned out to be insufficient, so
a factor of 100 has been used.

Because the CharProc is effectively interpreted at the page level, this can result in
large values being used for paths, so we need to scale the device width and height by
100 as well, to prevent clipping (and undo it afterwards!)

</pre>
<p>[base/gdevpdtt.c base/gdevpdti.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T150705.687999Z"></a>
2010-10-15T15:07:05.687999Z Chris Liddell</strong></p>
<blockquote>
<pre>
With the latest release of Freetype, reinstate the &quot;sensible&quot; method of
limiting the size of the bitmap that we let Freetype create. It is
limited to 1.5x the current maximum cacheable glyph bitmap, as it is *vital*
that we avoid creating an outline when the cache expects a bitmap,
but not a problem if we create a bitmap for a non-cached glyph.

Bug 691569.

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-10-15T142151.952651Z"></a>
2010-10-15T14:21:51.952651Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Properly scale co-ordinates into Acrobat's range

When emitting various co-ordinates pdfwrite is careful to stay within +/- 32,767 in
order to ensure all versions of Acrobat can properly deal with them. To achieve this it
emits a matrix which scales values up, and then writes the co-ordinates scaled down
by this factor. Thus ensuring that they stay within permitted values, but are still
correct.

However, when emitting a rectangular fill, the scale was applied backwards, the
co-ordinates were scaled *up* instead of down by the scale factor. This led to wildly
incorrect values being written for rectangular paths.

No differences expected with this in the test suite, however it forms part of the fix
for type 3 fonts which will follow and does rely on this change.
</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T202315.984226Z"></a>
2010-10-14T20:23:15.984226Z Henry Stiles</strong></p>
<blockquote>
<pre>
The image_set_gray function needed to take the address of the pointer
to the device color, the parameter should have been passed by
reference, as it must be set to &amp;penum-&gt;clues[sample_value].dev_color
and returned.  We'd like to get rid of the macro entirely and use the
image_set_gray as an inline function but have not tested performance.
The function might be too complex for inlining on some compilers.
</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T150601.276381Z"></a>
2010-10-14T15:06:01.276381Z Chris Liddell</strong></p>
<blockquote>
<pre>
In gx_alloc_char_bits() the &quot;target&quot; device can be NULL, in which case
avoid trying to decrement the ICC profile object for the target device.

patch credit to William Bader.

Bug 691651.

No cluster differences expected.

</pre>
<p>[base/gxccman.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T150156.645831Z"></a>
2010-10-14T15:01:56.645831Z Chris Liddell</strong></p>
<blockquote>
<pre>
If we're passed an unexpected object instead of a glyph name object
fall back to rendering the notdef.

This is not identical, but is closer to the behaviour of the AFS code
under these conditions.

Highlighted by Bug 691656.

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T145736.364971Z"></a>
2010-10-14T14:57:36.364971Z Chris Liddell</strong></p>
<blockquote>
<pre>
Rename libpng.mak to png.mak to make it consistent with the other
third part libraries.

Bug 691681

No cluster differences expected.

</pre>
<p>[base/openvms.mmk base/ugcclib.mak base/libpng.mak base/Makefile.in base/unix-gcc.mak base/macos-mcp.mak base/winlib.mak base/png.mak psi/os2.mak base/openvms.mak base/macosx.mak base/configure.ac /trunk/ghostpdl/common/ugcc_top.mak psi/msvc32.mak base/unixansi.mak base/msvclib.mak base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-10-14T142322.009615Z"></a>
2010-10-14T14:23:22.009615Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Fixed access to uninitialized variable, the margins array is only set when size_set is true (bug #691683).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-10-14T115731.187468Z"></a>
2010-10-14T11:57:31.187468Z Chris Liddell</strong></p>
<blockquote>
<pre>
Rename libtiff.mak to tiff.mak to be more consistent with the other third party libs.

Bug 691681

No cluster differences expected.

</pre>
<p>[base/winlib.mak base/tiff.mak base/Makefile.in /trunk/ghostpdl/common/ugcc_top.mak base/unix-gcc.mak base/unixansi.mak base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-10-13T171459.959208Z"></a>
2010-10-13T17:14:59.959208Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix 2 build warnings in gdevtifs.c

No expected differences.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-10-13T160151.166726Z"></a>
2010-10-13T16:01:51.166726Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new tiffscaled device. This renders internally as tiffgray, but then
downsamples by an integer scale factor (specified by -dDownScaleFactor=n)
and error diffuses to 1bpp output.

This device is also included in pcl builds (windows ones at least), enabling
a solution for dropouts caused by rendering pcl at 200dpi. (Render at 600dpi
and scale down by a factor of 3). This should hopefully solve bug 690085.

Future work to consider: work on bringing libtiff based devices into unix PCL
builds, consider stochastic thresholding rather than FS error diffusion.

</pre>
<p>[base/gdevtifs.c base/openvms.mak base/gdevtifs.h base/gdevtsep.c base/configure.ac base/unix-gcc.mak doc/Devices.htm base/unixansi.mak psi/msvc32.mak base/gdevtfnx.c base/macos-mcp.mak base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-10-13T104804.352147Z"></a>
2010-10-13T10:48:04.352147Z Chris Liddell</strong></p>
<blockquote>
<pre>
We have far fewer font Decodings than there are &quot;well known&quot; Encodings, so
assuming that for such an Encoding we always have a predefined Decoding
is problematic.

We'll now try to find a predefined Decoding, and if one isn't found
we'll derive one from the Encoding (as we previously did only for
non-well known Encodings).

Bug 691677

No cluster differences expected.

</pre>
<p>[Resource/Init/gs_fntem.ps]</p>
</blockquote>

<p><strong><a name="2010-10-12T232736.478231Z"></a>
2010-10-12T23:27:36.478231Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable in siscale.c that was causing warnings.

No expected differences.

</pre>
<p>[base/siscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-12T162632.204667Z"></a>
2010-10-12T16:26:32.204667Z Robin Watts</strong></p>
<blockquote>
<pre>
Update interpolation filter. When we are downscaling an image on either axis
we now use a simpler (less computationally complex) linear interpolation
filter rather than the existing mitchell filter.

For downscaling the difference in quality between mitchell and simple
linear interpolation is not that noticable. (But the CPU/memory usage is a
quarter what it would be for proper mitchell downscaling).

What is noticable is that the existing downscaling code is 'bent' to avoid
having to hold more than 8 temporary scaled scanlines of the image. The effect
of this is to incorrectly limit the pixels that actually go into contributing
to an output pixel, producing dropouts.

We update the code here to remove this limit. This means that downscales
may potentially take more memory and more computation to perform, but the
overall quality is better.

Regression tests show both noticable and unnoticable differences in files that
enable interpolation (270 or so). The noticable differences are all that the
new output looks smoother, at the expense of losing some contrast and solving
some 'jaggy' looking edges.

Testing with my custom dropout test file shows a huge improvement with the
new code. I'll add this to the test repo shortly.

</pre>
<p>[base/siscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-12T055216.851470Z"></a>
2010-10-12T05:52:16.851470Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for a large memory leak that can occur when a pattern cache entry
is freed and a transparency buffer exists in the entry.  A problem was
that the pdf14 device, which contains pointers to the buffer, had its
close device procedure set to forward due to the device being set in a
disabled state during pattern_paint_finish.  The close device proc for
the pdf14 device contains the calls to actually free the buffers so this
was not occurring (instead we were forwarding to another device).  In addition,
the pdf14 device itself was not being destroyed.  With this commit, when the
pattern entry is freed, the  pdf14 device is now closed, which frees the buffers,
and the pdf14 device is properly reference count decremented to result in the
device itself getting freed.  Regression run revealed no problems.</pre>
<p>[psi/zpcolor.c base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-10-11T075326.581165Z"></a>
2010-10-11T07:53:26.581165Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update Freetype to 2.4.3

Revise fapi_ft.c to take into account new font(s) being added to Freetype's
&quot;tricky&quot; font list. &quot;Tricky&quot; fonts need the bytecode interpreter to produce
&quot;correct&quot; output. But for GS, in the case of (even &quot;tricky&quot;) fonts which
produce an error in the bytecode interpreter, we want to try to produce
some output, even just a notdef glyph. So in the non-hinted, and notdef
fallback cases, remove the &quot;tricky&quot; flag from the Freetype face.

No cluster differences expected.


</pre>
<p>[freetype/src/pshinter/pshalgo.c psi/fapi_ft.c freetype/builds/unix/config.sub freetype/src/type42/t42parse.c freetype/builds/win32/visualce/freetype.dsp freetype/docs/reference/ft2-toc.html freetype/docs/reference/ft2-computations.html freetype/builds/unix/configure.ac freetype/builds/wince/vc2008-ce/index.html freetype/builds/unix/ftconfig.in freetype/src/sfnt/ttload.c freetype/ChangeLog.23 freetype/docs/reference/ft2-sizes_management.html freetype/src/cache/ftccache.c freetype/docs/reference/ft2-quick_advance.html freetype/include/freetype/freetype.h freetype/configure freetype/docs/reference/ft2-pfr_fonts.html freetype/docs/reference/ft2-gasp_table.html freetype/docs/reference/ft2-system_interface.html freetype/builds/unix/configure freetype/docs/reference/ft2-mac_specific.html freetype/docs/reference/ft2-basic_types.html freetype/docs/reference/ft2-lcd_filtering.html freetype/src/truetype/ttgload.c freetype/docs/reference/ft2-cid_fonts.html freetype/include/freetype/internal/ftobjs.h freetype/docs/reference/ft2-winfnt_fonts.html freetype/docs/reference/ft2-bitmap_handling.html freetype/docs/reference/ft2-cache_subsystem.html freetype/Jamfile freetype/include/freetype/ftimage.h freetype/src/base/ftobjs.c freetype/builds/win32/visualce/index.html freetype/docs/reference/ft2-glyph_variants.html freetype/docs/reference/ft2-glyph_stroker.html freetype/builds/win32/visualc/freetype.vcproj freetype/docs/reference/ft2-sfnt_names.html freetype/docs/reference/ft2-raster.html freetype/include/freetype/ftlcdfil.h freetype/builds/win32/visualce/freetype.vcproj freetype/docs/reference/ft2-bdf_fonts.html freetype/docs/reference/ft2-truetype_tables.html freetype/src/truetype/ttobjs.c freetype/builds/unix/config.guess freetype/include/freetype/config/ftconfig.h freetype/docs/reference/ft2-glyph_management.html freetype/src/autofit/aflatin.c freetype/src/raster/ftraster.c freetype/builds/win32/visualc/index.html freetype/builds/wince/vc2005-ce/index.html freetype/docs/reference/ft2-version.html freetype/docs/reference/ft2-gx_validation.html freetype/docs/reference/ft2-multiple_masters.html freetype/src/cff/cffgload.c freetype/docs/reference/ft2-base_interface.html freetype/docs/reference/ft2-header_file_macros.html freetype/builds/win32/vc2005/index.html freetype/src/cid/cidgload.c freetype/docs/reference/ft2-ot_validation.html freetype/builds/unix/unix-cc.in freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/src/base/ftsynth.c freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/builds/win32/vc2005/freetype.vcproj freetype/docs/reference/ft2-index.html freetype/builds/win32/vc2008/freetype.vcproj freetype/src/cache/ftcsbits.c freetype/docs/reference/ft2-outline_processing.html freetype/docs/reference/ft2-lzw.html freetype/src/truetype/ttpload.c freetype/src/smooth/ftgrays.c freetype/builds/win32/visualc/freetype.dsp freetype/src/truetype/ttinterp.c freetype/docs/reference/ft2-module_management.html freetype/src/cff/cffload.c freetype/docs/reference/ft2-user_allocation.html freetype/src/base/ftstream.c freetype/src/truetype/ttinterp.h freetype/builds/unix/configure.raw freetype/docs/reference/ft2-type1_tables.html freetype/src/sfnt/ttpost.c freetype/builds/win32/vc2008/index.html freetype/src/cff/cffobjs.c freetype/docs/reference/ft2-font_formats.html freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/docs/reference/ft2-incremental.html freetype/src/smooth/ftsmooth.c freetype/ChangeLog freetype/docs/VERSION.DLL freetype/docs/reference/ft2-truetype_engine.html freetype/include/freetype/ftcache.h freetype/docs/reference/ft2-list_processing.html freetype/docs/reference/ft2-gzip.html freetype/README freetype/include/freetype/ftmodapi.h freetype/docs/CHANGES]</p>
</blockquote>

<p><strong><a name="2010-10-10T055109.780940Z"></a>
2010-10-10T05:51:09.780940Z regression</strong></p>
<blockquote>
<pre>
Various minor fixed to the local cluster code:

clustermonitor.pl now deals with terminal windows being resize
clustermaster.pl logs messages to clustermaster.log
build.pl now adds -dcupsColorSpace=0 to command line
run.pl now longer runs fuzzy after bmpcmp

</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-10-08T144218.915016Z"></a>
2010-10-08T14:42:18.915016Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Process text in Tr 3 even if the Widths are non-standard

Bug #691605 &quot;Invisible text not preserved by pdfwrite&quot;

The problem was that if text in text rendering mode 4 (neither stroke nor fill) used a
font where the entries in the FontDescriptor /Widths array did not match the actual
widths in the font, the code took a path where the glyphs were not added to the 'used'
list, and so were never emitted.

Text in regular fonts where the /Widths array was missing, or matched the widths in the
font (as the spec says they must) worked correctly.

Fixed by processing text whose operation properties include TEXT_RENDER_MORE_3 the
same as text with the TEXT_DO_DRAW property.</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T134241.451688Z"></a>
2010-10-08T13:42:41.451688Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused variable (flagged by static analysis).
</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133705.002251Z"></a>
2010-10-08T13:37:05.002251Z Ken Sharp</strong></p>
<blockquote>
<pre>
Prevent a possible attempt to memset a NULL pointer. This was probably safe since the
size of the memset would be 0 bytes, but its best to be safe.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133400.715868Z"></a>
2010-10-08T13:34:00.715868Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused variable (flagged by static analysis)</pre>
<p>[base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T133111.163393Z"></a>
2010-10-08T13:31:11.163393Z Chris Liddell</strong></p>
<blockquote>
<pre>
A stringwidth operation does not always result in a call to fapi_finish_render()
which can cause Freetype glyph objects to not be freed.

Add a firewall so we don't simply overwrite the pointer to the Freetype glyph
object, but correctly dispose of the object.

Bug 691668

No cluster differences expected.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T120124.908534Z"></a>
2010-10-08T12:01:24.908534Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Check encoding compatibility when finding base fonts

Bug #691656 &quot;crash in Chinese font: /typecheck in --.FAPIBuildGlyph--&quot;

A typecheck error is not a crash of course, but when using the built in font interpreter
this did not produce an error, silently discarded the text instead. This was still
incorrect.

The problem is caused when dealing with type 0 fonts and producing multiple type 1 fonts
to handle the large number of glyphs. The code for finding an existing font (in order
to minimise the number of new fonts) or create a new font, did not consider the
encoding of an existing font when trying to match it (this did work for regular fonts).

This could lead to a font with an incompatible encoding being used, which caused an
error later in text processing where a routine is supposed to be guaranteed no font
encoding problems. That led to an attempted fallback to the 'bitmapped type 3 font'
solution, but the text processing was passing ridiculous values to the font interpreter.

In the old font code this caused a silent discard of the text, with the FreeType code
it produces an error.

Fixed by checking the base font we find to see if its encoding is compatible with the
current text encoding, and manufacturing a new font if it is not.

No differences expected.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-10-08T050927.837431Z"></a>
2010-10-08T05:09:27.837431Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for miscalculation of clist_color_info.depth when tags are part of
the PDF14 device color. While 8 * num_components is usually enough, when
we have tags, we need the extra byte. Seen with fts_16_1601.pdf in clist
mode on HEAD and with customer 532 code when PDF14_transparency + tags is
included.
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T135949.890609Z"></a>
2010-10-07T13:59:49.890609Z Ken Sharp</strong></p>
<blockquote>
<pre>
Put back some statements. It turns out that we can either have gcc be warning free or
the static analysis warning free. The problem is gs_note_error which uses
gs_log_error, on a release build gs_log_error is defined as the error value.

If we don't do something with that value then gcc complains that the 'statement has no
effect'. So the code was set like this:

ecode = gs_note_error(error code);

But if we want to actually ignore the error and just note the problem, then we don't use
ecode and the static analysis complains that the variable is unused....

I'd rather have no warnings from gcc so I've restored that.
</pre>
<p>[base/gdevpdfj.c base/gdevpdfp.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T124954.318945Z"></a>
2010-10-07T12:49:54.318945Z Ken Sharp</strong></p>
<blockquote>
<pre>
More changes to silence static analysis warnings. Mostly removing unused variables or
assignments.
</pre>
<p>[base/gdevpdfj.c base/gdevpdfm.c base/gdevpdfp.c base/gdevpdtb.c base/gdevpdtc.c base/gdevpdtd.c base/gdevpdtt.c base/gdevpdtf.c base/gdevpdfu.c base/gdevpdti.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T083558.544234Z"></a>
2010-10-07T08:35:58.544234Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence (hopefully) some compiler warnings.
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T080415.270260Z"></a>
2010-10-07T08:04:15.270260Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove some unused variables and assignments flagged by static analysis.</pre>
<p>[base/gdevpdfg.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T075743.664608Z"></a>
2010-10-07T07:57:43.664608Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a potential NULL pointer dereference flagged by static analysis.

Other potential occurrences flagged by the analyser in this module are deemed not to be
possible, as these are picked up at a higher level.

For instance, dereferencing a pointer to a path structure in a path handling method. We
can assume the path pointer is not NULL as we would not be called if the path was empty.
</pre>
<p>[base/gdevpdfd.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T075009.274081Z"></a>
2010-10-07T07:50:09.274081Z Ken Sharp</strong></p>
<blockquote>
<pre>
Static analysis discovered two variables being altered that are not subsequently used.
Although this is safe, removed the code anyway.
</pre>
<p>[base/gdevpdfb.c]</p>
</blockquote>

<p><strong><a name="2010-10-07T074913.279339Z"></a>
2010-10-07T07:49:13.279339Z Ken Sharp</strong></p>
<blockquote>
<pre>
static analysis found that the result of fread was not being used. Add code to test the
result and flag a warning if expected data not read.</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T140332.653153Z"></a>
2010-10-06T14:03:32.653153Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 2 of Bug 691484, valgrind warnings about uninitialised values
in clist code.

The problem is that we are writing out a cmd_block without initialising it all.
The fix is simply to initialise it (using a memset, so accounting for all
padding bytes too) before starting to use it.

This stops the valgrind warnings. No changes in localcluster testing.


</pre>
<p>[base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T134815.425458Z"></a>
2010-10-06T13:48:15.425458Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add some body parentheses to 'if' statements in order to silence some clang warnings.
</pre>
<p>[base/gdevpdfp.c base/gdevpdtf.c]</p>
</blockquote>

<p><strong><a name="2010-10-06T120646.017717Z"></a>
2010-10-06T12:06:46.017717Z Robin Watts</strong></p>
<blockquote>
<pre>
Whitespace tweaks to gxiscale.c. The complexity in the file is more than
enough for my tiny brain without expecting it to cope with inconsistent
indentation too :)

</pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T213811.272406Z"></a>
2010-10-05T21:38:11.272406Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 1 of bug 691484 - uninitialised memory usage in clist code.

The FAPI code copies bitmaps and pads them out so that each raster line
is appropriately aligned. Previously the padding bytes were left
uninitialised. Unfortunately the clist code reads the padding when
compressing the bitmaps, which a) upsets valgrind and b) means that the
exact size of the clist will vary from run to run.

Here we tweak the copying code to ensure that the padding bytes are always
set to zero.

No differences shown in local cluster. This solves part 1 of the bug.


</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T202754.714250Z"></a>
2010-10-05T20:27:54.714250Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Clean up of a few comments about device profiles</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T201810.046358Z"></a>
2010-10-05T20:18:10.046358Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for error in detecting the presence of a device profile set in the
command line.  Unfortunately, the device was not being reset from the
default profile based upon the setting.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T135722.688207Z"></a>
2010-10-05T13:57:22.688207Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing decoding of #nn escape to encrypted PDF reader. Besides fixing the
bug sample file, this patch also corrects a colorant name in IA3Z0440.pdf on
psdcmyk device. Bug 691636.
</pre>
<p>[Resource/Init/pdf_sec.ps]</p>
</blockquote>

<p><strong><a name="2010-10-05T124816.473671Z"></a>
2010-10-05T12:48:16.473671Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : ConvertCMYKImagesToRGB not working

Bug #691647 &quot;-dConvertCMYKImagesToRGB no longer works&quot;

Originally caused by the conversion to the ICC workflow, which meant that all images
appear to be in a ICC space, and only images originally natively CMYK are converted.

Probing the ICC space using the provided utility to return the original colour space
allows the code to work, but reveals a more serious error. The code in
psdf_setup_image_filteres() alters the image colour space and decrements the reference
count of the original colour space.

This seems logically correct, and in one of the three calling paths it is correct, but
under one of the other two conditions it causes a crash. The routine
pdf_begin_typed_image_impl() makes two copies of the original image parameters, and
when it does so it does *not* increment the reference counts of any counted objects.
This copied data is presented to the image filter setup several times, and if CMUK
to RGB conversion is going on the original colour space is decremented each time. This
leads to obvious problems.

The simplest solution would be to increment the reference counts when the copy is made,
but that would mean checking all the error condition break outs, and decrementing the
reference count in each case.

Since the colour space is only decremented in the filter setup, this patch increments
the count before the call, and if the colour space is the same afterwards (whether
an error occurred or not) decrements it back again. If the colour space changes we do
not decrement the space of course, as the filter setup routine has done that.

In addition, extended the test for whether CMYK images should be converted to include
the original test of the native space, in case we get here after an image has been
converted to a base space and no longer has an ICC space.

No expected differences, this configuration is not tested by the regression suite.
</pre>
<p>[base/gdevpsdi.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-10-05T121046.672154Z"></a>
2010-10-05T12:10:46.672154Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for part 1 of Bug 691635, supplied by Norbert Janssen. Many thanks.

In the recent work to remove global variables where possible, I had failed to
change an instance of iodev_default to be iodev_default(mem).

No expected changes.

</pre>
<p>[base/gsiodisk.c]</p>
</blockquote>

<p><strong><a name="2010-10-03T161300.326561Z"></a>
2010-10-03T16:13:00.326561Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Change the order of operands in a logical expression to avoid dereferencing
an uninitialized variable. Bug 690214.
</pre>
<p>[psi/zfont2.c]</p>
</blockquote>

<p><strong><a name="2010-10-01T193606.952768Z"></a>
2010-10-01T19:36:06.952768Z Ray Johnston</strong></p>
<blockquote>
<pre>
Drop support for these less popular compilers. This will be the first step to
changing to project files for Windows.
</pre>
<p>[base/wctail.mak base/watclib.mak base/bcwin32.mak base/gp_iwatc.c base/watcw32.mak base/wccommon.mak]</p>
</blockquote>

<p><strong><a name="2010-10-01T025815.408387Z"></a>
2010-10-01T02:58:15.408387Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Replace sequential CFF parser coded in PostScript with a parser that uses
direct access to the data and coded in C. Solve numerous problems caused by
the old parser. New -dOLDCFF option can revert to the old parser. Differences
in 16-01.PS.pdf and 16-01.PS.pdf are progressions.
</pre>
<p>[doc/Use.htm psi/int.mak psi/zfont1.c psi/zfont2.c Resource/Init/gs_cff.ps]</p>
</blockquote>

<p><strong><a name="2010-09-29T155022.840688Z"></a>
2010-09-29T15:50:22.840688Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix calculation of offset to tag plane in pdf14_mark_fill_rectangle to cure
writing past the end of an allocated buffer. Detected with customer 532 on
fts_08_0808.pdf. Only affects devices with object tagging (bitrgbtags).
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-28T123641.051799Z"></a>
2010-09-28T12:36:41.051799Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't unreasonably limit the PDF output level

Bug #691318 &quot; -dCompatibilityLevel=1.6 produces PDF 1.5&quot;

Although the highest output level for pdfwrite features is 1.5, it is possible to use
pdfmarks to create a PDF file which uses higher level features. In this case its
reasonable to have pdfwrite produce a higher level PDF file.

This patch allows pdfwrite to produce output up to PDF 1.7, the highest currently
specified.

No differences expected.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-09-28T122613.182021Z"></a>
2010-09-28T12:26:13.182021Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : allow for UserPasword and OwnerPassword in page device

Bug #691256 &quot;OwnerPassword and UserPassword don't work as device parameters&quot;

pdfwrite sets up encryption filters when the device is opened, and the device is not
(currently) closed until Ghostscript shuts down. This means that changes to the page
device dictionary which require a restart (eg the encryption parameters) do not affect
the current setup, though they may be (incorrectly) written when the device is closed.

This patch addresses the specific issue of OwnerPassword by closing the device if the
password is changed *and* we have not yet written any pages. If we have already begun
the output when a password change occurs then we ignore it and flag a warning.

This is also a first step in the direction of making pdfwrite open and close properly
so that we don't need to restart Ghostscript to use it.

No expected differences.
</pre>
<p>[base/gdevpdfp.c]</p>
</blockquote>

<p><strong><a name="2010-09-27T120517.449032Z"></a>
2010-09-27T12:05:17.449032Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (Fonts): Prevent xfont being used in composefont

On platforms supporting X-Windows xfonts can be used with Ghostscript, however we don't
want to find an xfont (eg Courier) when using composefont to create a CID-Keyed instance
as this will not work.

Test to see if the top level font is a type 0, and if it is, don't search for a matching
xfont, but instead go through the usual PostScript machinery.

No differences expected.
</pre>
<p>[base/gxchar.c]</p>
</blockquote>

<p><strong><a name="2010-09-27T093355.410495Z"></a>
2010-09-27T09:33:55.410495Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite/ps2write) : Don't dereference mask colour spaces

Bug #691106 &quot;-sDEVICE=pdfwrite -dConvertCMYKImagesToRGB=true&quot;

When checking to see if an image needs to be converted to RGB, the image space is
checked to see if it is CMYK. However an image mask does not have a colour space (it
is NULL), firstly so that we can tell its an image mask, and secondly because masks
genuinely do not have a colour space, they take on the current colour.

Attempting to dereference the NULL colour space causes a crash. Since a mask never
needs converting to RGB, we short circuit the test by detecting a NULL colour space.

</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-09-25T020822.451780Z"></a>
2010-09-25T02:08:22.451780Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
For long time ps2pdf*.bat files failed when they were used with some
options and a single argument. findstr is now used to identify
options by the leading '-' and handle this case. Bug 691622.
</pre>
<p>[lib/ps2pdf.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat]</p>
</blockquote>

<p><strong><a name="2010-09-24T132507.243032Z"></a>
2010-09-24T13:25:07.243032Z Chris Liddell</strong></p>
<blockquote>
<pre>
For disk based TTFs, only lookup the character code in the TTF cmap if the font is
not using an Identity ordering.

No cluster differences expected.

Bug 691623.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-09-24T090334.206583Z"></a>
2010-09-24T09:03:34.206583Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (TrueType fonts) : memory leak

Bug #691088 This does not affect the PostScript/PDF interpreters which now use FreeType
but is relevant still for XPS and PCL.

A buffer was allocated to contain the GSUB table from the TT font, but was never freed
leading to memory leaks. I've adopted the same approach as that taken for the 'glyph
length' array and added a notification procedure which is called when the font is
released, and that procedure frees the GSUB buffer.

At the same time, removed the functions:
add_quadratic_curve
append_simple
check_component

These were only called by each other, or by append_component which had already been
removed as unused.

No expected differences.
</pre>
<p>[base/gstype42.c]</p>
</blockquote>

<p><strong><a name="2010-09-24T032745.689228Z"></a>
2010-09-24T03:27:45.689228Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of debug code that was accidentally committed.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T194527.249371Z"></a>
2010-09-23T19:45:27.249371Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that objects tag information makes it through transparency rendering
AND the clist.  An issue was that the pdf14 encode and decode procedures are
used as opposed to the target device encode and decode procedures and it is
through a value in the color index that we currently communicate the object
type through the clist.  When we are in page rendering mode, it is easy to
get the current object from mem-&gt;gs_lib_ctx-&gt;BITTAG, but this is not set
correctly in clist rendering if for example a glyph is stored in the clist as a
mask fill.  Instead the information about the object is extracted from the color
index.  So, to make this work, we had to introduce an encode method for the
pdf14 device that incorporates the tag information and also make sure that the bit
depth for the pdf14 color info value is incremented appropriately so that the extra
byte is stored and extracted from the clist.  The object type is then recovered
during the pdf14 mark fill rect procedure.  This was tested with the updated
bitrgbtags device using a custom file that has overlapping text, image and path
objects with varying transparency amounts.   </pre>
<p>[base/gdevp14.c base/gsimage.c base/gsutil.h base/gstext.c base/gsdps1.c base/gdevbit.c base/gdevmem.c base/gxblend1.c base/gspaint.c base/gdevddrw.c base/gsutil.c base/gxclrast.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-09-23T144650.766627Z"></a>
2010-09-23T14:46:50.766627Z Robin Watts</strong></p>
<blockquote>
<pre>
Final part of the fix for bug 691612.

Currently the code blindly sets the &quot;lop_pdf14&quot; whenever the pdf14 device is
in use. This forces the 'lop_is_idempotent' test to fail, which in turn forces
slower cases to be taken through the code.

This patch alters that logic, so that the pdf14 device can leave that bit
unset if the parameters are set up in such a way that the lop really can
be idempotent (i.e. normal blending, solid alphas etc).

This vastly improves the speed of rendering non-alpha content, so we are no
longer penalised for having just a small amount of transparent content on a
page.

Testing shows 398 files that change, but bmpcmp reveals these all to be very
small changes to do with whether individual pixels are filled or not. This
is consistent with the typical mismatches between special case and normal
renderings, so can safely be ignored for now.


</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T121757.296649Z"></a>
2010-09-23T12:17:57.296649Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the investigation into bug 691612, we noticed that the clist
band playback code doesn't call the device stroke_path method, but instead
calls the default implementation directly.

In order the fix the bug, we'd like it to call through the device version
(pdf14_stroke_path). Consensus is that it's an oversight that it's not calling
the device version already, and tests indicate no differences (*) so this
patch changes it to call via the vector.

(* Actually regression testing shows 2 pdfwrite differences, but they are
in unbanded tests, so can't be executing this code, so are probably just
indeterminisms).

</pre>
<p>[base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-09-23T104633.821569Z"></a>
2010-09-23T10:46:33.821569Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the investigation into bug 691612, a problem was found with the
rop3_is_idempotent (and hence lop_is_idempotent) macros. This patch fixes
this definition and adds some more comments explaining the rop operations.

Thanks to lpd for confirming this change.

This produces 78 differences in the regression tests, bmpcmp reveals these to
all be neutral or progressions (in some cases, significant progressions).


</pre>
<p>[base/gsropt.h]</p>
</blockquote>

<p><strong><a name="2010-09-23T081636.207911Z"></a>
2010-09-23T08:16:36.207911Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Do not write Encodings with Symbolic TrueType fonts

Bug #690744, #691036, #691319. The PDF specification makes it clear that Symbolic
TrueType fonts should not have a FontDescriptor which contains an Encoding entry.
pdfwrite has specifically been doing this, the reason being (code comments) :

* We write True Types with Symbolic flag set.
* PDF spec says that &quot;symbolic font should not specify Encoding entry&quot;
* (see section 5.5, the article &quot;Encodings for True Type fonts&quot;, paragraph 3).
* However Acrobat Reader 4,5,6 fail when TT font with no Encoding
* appears in a document together with a CID font with a non-standard CMap
* (AR 4 and 5 claim &quot;The encoding (CMap) specified by a font is corrupted.&quot;
* (we read it as &quot;The encoding or CMap specified by a font is corrupted.&quot;,
* and apply the 1st alternative)). We believe that AR is buggy,
* and therefore we write an Encoding with non-CID True Type fonts.
* Hopely other viewers can ignore Encoding in such case. Actually in this case
* an Encoding doesn't add an useful information.

Since this is working around a bug in old versions of Acrobat, and the presence of an
Encoding causes preflight errors and is specifically forbidden in PDF/A, this work
around has been removed. I would like to check recent versions of Acrobat to see if
this issue persists, but am unable to find an example file. The change predates the
adoption of Subversion, the first logged change is October 2003.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-09-22T151320.906048Z"></a>
2010-09-22T15:13:20.906048Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Removed unused label from base/gxicolor.c that caused compiler warning.

Fixes Bug #691633 reported by Norbert Janssen.

</pre>
<p>[base/gxicolor.c]</p>
</blockquote>

<p><strong><a name="2010-09-21T120352.655546Z"></a>
2010-09-21T12:03:52.655546Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add the new entries for produce outlines and maximum bitmap size
to the FAPI server declarations in the UFST and Bitstream code.

No cluster differences expected.

Bug 691634

</pre>
<p>[psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-20T012614.070109Z"></a>
2010-09-20T01:26:14.070109Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix end-of-file detection in reusable streams. Don't try to read non-existing
blocks after the last one. Just return EOF flag and the data that are already
in the buffer. Bug 691625.
</pre>
<p>[psi/zfrsd.c]</p>
</blockquote>

<p><strong><a name="2010-09-17T102936.728794Z"></a>
2010-09-17T10:29:36.728794Z Robin Watts</strong></p>
<blockquote>
<pre>
In revision 11723 I'd copied a prototype, but forgotten to edit the name.
(bytes_copy_rectangle to bytes_copy_rectangle_zero_padding).
This was resulting in a couple of warnings about 'no previous prototype'.

No expected differences.

</pre>
<p>[base/gsbitops.h]</p>
</blockquote>

<p><strong><a name="2010-09-17T064427.206613Z"></a>
2010-09-17T06:44:27.206613Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of unused variable introduced in last commit.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-09-17T054048.428712Z"></a>
2010-09-17T05:40:48.428712Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition of support to enable persistence of objects tag information through
transparency rendering.    In the current code base, transparency blending
erases all knowledge about the objects that were drawn and blended, setting
the entire object to image type.   With this commit, the tag information is
retained through blending by doing a bit-wise or of the tag values.  When a
evice supports tags, the pdf14 device will create an additional plane to
maintain the tag data information.  Blending of the tag information occurs
in pdf14_mark_fill_rectangle, pdf14_mark_fill_rectangle_ko_simple and
pdf14_compose_group.   A new device procedure called put_image is added.
This is called by the pdf14_put_image operation, which enables the communication
of the tag information to the target device.  pdf14_put_image will first attempt
to pass the alpha channel and the image data not scaled by the alpha channel and
the tag data to the target device.  The planar offset location of the alpha and
tag data is communicated in the put_image procedure interface.  If the target
device cannot handle this form of the data, it should return 0.  The
pdf14_put_image operation will then blend the alpha data and attempt the
put_image again but this time with an alpha offset of 0 to indicate that there
is no alpha data.  Note that the alpha data remains valid for those devices that
still want the alpha but also want to have the graphics library do a premultiplcation
of the alpha with the data.  Details of this interface will be added to the documentation.
In addition, the bitrgbtags device is being updated to demonstrate the use of the
put_image procedure.</pre>
<p>[base/gdevp14.c base/gxdevcli.h base/gxclist.c base/gdevp14.h base/gdevbbox.c cups/gdevcups.c base/gsovrc.c base/gxblend.c base/gxblend1.c base/gdevprn.c base/gsutil.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-09-16T145706.777148Z"></a>
2010-09-16T14:57:06.777148Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a problem introduced by the rev. 11497 that broke ps2pdf*.bat scripts
when they receive optional arguments. The bug results from interaction between
&quot;shift&quot; and %~dp0 that is used after the &quot;shift&quot;.
</pre>
<p>[lib/ps2pdf.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat]</p>
</blockquote>

<p><strong><a name="2010-09-16T110931.082242Z"></a>
2010-09-16T11:09:31.082242Z Robin Watts</strong></p>
<blockquote>
<pre>
Another partial fix for Bug 690993. The sole remaining Valgrind warning
is that memcpy is called on overlapping src/dst blocks in cmd_read_data.

Investigation supports this, and suggests that we should be using memmove
instead. This does stop the error, and leaves us valgrind warning free.

This also appears to resolve the indeterminism, in that repeated runs
of the command line given in the bug return identical results.

The bug remains open though, as there is still a mismatch between banded and
non-banded mode.

No expected differences.

</pre>
<p>[base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-09-16T110547.689000Z"></a>
2010-09-16T11:05:47.689000Z Robin Watts</strong></p>
<blockquote>
<pre>
Partial 'fix' for Bug 690993. When encoding a bitmap into a clist, we
copy it into a block with potentially larger padding requirements. These
extra padding bytes were left undefined, causing subsequent attempts to
compress the bitmap to cause valgrind to give warnings.

The fix is simply to introduce and use a new function that copies a bitmap
and zeros the padding. This should eliminate the warnings, produce better
compression, and (more importantly) mean that every run uses the same amount
of memory, hence eliminating potential odd effects where clists may be of
different lengths on different runs.

This still leaves bug 690993 open.

No expected differences.

</pre>
<p>[base/gsbitops.c base/gsbitops.h base/gxclbits.c]</p>
</blockquote>

<p><strong><a name="2010-09-15T081552.075230Z"></a>
2010-09-15T08:15:52.075230Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (ps2write) : Bug #689419 &quot;Text missing if nested BT with opdfread.ps&quot;

Type 3 fonts which select another font and then draw text from it (a common feature of
Quark Xpress) can result in nested 'BT' operators when processed by ps2write.

The opdfread prologue does not cater for this, specifically the TextMatrix is not saved
and restored around a BT/ET pair. If the text matrix is altered by the font
selection, then the 'ET' will not restore the old matrix leading to incorrectly sized or
disappearing text.

The patch (supplied by SaGS) saves the TextMatrix in a stack (stored in an array) and
restores the matrix after an ET, in case it is nested. Currently this allows for
nesting up to 20 deep, which should be more than adequate. Note that if we were to
encounter a nested BT with no ET this would still fail, but in this case the file
produced by ps2write would be invalid, and the missing ET should be fixed.

No differences expected, the regression suite doesn't test ps2write.
</pre>
<p>[Resource/Init/opdfread.ps]</p>
</blockquote>

<p><strong><a name="2010-09-14T125809.089527Z"></a>
2010-09-14T12:58:09.089527Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't colour convert SMask images

Bug #690612 &quot;PDF sRGB conversion loses images&quot;

The handling of SMask images in pdfwrite is a bit convoluted. These are handled by
converting initially to a DevicePixel colour space, then detecting that later and
replacing with a DeviceGray space. However, after doing so, if ColorConversionStrategy
was set, the space (and image samples) would be converted to another colour space. This
is not legal for SMask images.

This code simply checks to see if the image is an SMask before setting colour conversion
and doesn't convert the colour space/samples if it is and SMask.

No expected differences.
</pre>
<p>[base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-09-14T090706.998296Z"></a>
2010-09-14T09:07:06.998296Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a compiler warning.</pre>
<p>[base/gdevpdfo.c]</p>
</blockquote>

<p><strong><a name="2010-09-14T080603.949247Z"></a>
2010-09-14T08:06:03.949247Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement : performance improvement with type 3 fonts

Bug #690575 &quot;PS to PDF Conversion extremely slow (possibly endless)&quot;

The type 3 font code assembles CharProcs for type 3 fonts by writing them individually
into a 'cos_stream'. Each time a new one is completed it is compared to all the existing
CharProcs to see if it is a duplicate. This was done by fseek/fread/memcmp operations.

As the number of CharProcs increases, the time spent seeking, reading and comparing
the data increases dramatically and performance becomes very poor. Not only that, but
the test is actually done twice for each new CharProc.

This patch tackles the problem by creating an md5 hash of the data written to a
cos_write_stream (a subclassed cos_stream) as it is written. The cos_stream 'equal'
routine checks to see if the md5 hash is valid and if it is then compares the hashes.
If the md5 hash is not valid (ie not a cos_write_stream) then it uses the old
seek/read/compare mechanism. This will improve the performance of any stored data
if it is stored using a cos_write_stream and compared against other data of the same
type. (I don't believe we do this anywhere else currently, but I'm not suer)

This does improve the performance significantly, and the code no longer spends most of
its time waiting for I/O operations to complete. It is still slow, but this is the
result of using lots of type 3 fonts. Because of the way these must be processed in
order to capture the outlines they are never going to be fast.

In my test this runs 2-3 times faster than before. There should be no differences in
output from the old code.
</pre>
<p>[base/gdevpdfo.c base/gdevpdfo.h]</p>
</blockquote>

<p><strong><a name="2010-09-14T074911.816447Z"></a>
2010-09-14T07:49:11.816447Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bump version number to 9.01 and associated changes.

</pre>
<p>[base/gscdef.c base/version.mak Resource/Init/gs_init.ps]</p>
</blockquote>


<h2><a name="Version9.00"></a>Version 9.00 (2010-09-14)</h2>

<p>This is the first release in the stable 9.x series.

<p>This release includes a move to an ICC-based color rendering workflow. The
design allows easy integration of 3rd party color management modules (CMMs)
and management of DeviceN and spot source colors with ICC profiles as well
as with non-ICC proprietary methods. The default CMM is the well known littleCMS.
Postscript color objects and non-ICC CIE-based PDF color spaces are converted to
equivalent ICC profiles enabling complete color management for all color spaces by
an ICC-based CMM. New command line options enable the specification of gray, rgb
and cmyk default ICC profiles as well as output device ICC profiles. The new
work flow provides performance improvements in the rendering of images, shadings
and transparencies. In addition, the color conversions are designed to work
efficiently in multithreaded display list (c-list) rendering through the use of a
shared link cache. Finally, proper ICC based rendering now occurs for ALL XPS
objects including Named colors, N-Channel colors and images with internally embedded
ICC profiles.

<p>The second major change in this release is that glyph rendering for all font types
except Type 3 is now handled by Freetype (via a much improved and enhanced Font API).
The most obvious benefit of this is a complete, and proven implementation of the
TrueType byte code interpreter (now unencumbered by patents).

<p> Another major change is that the Postscript interpreter's graphics state now
stores two separate colour space settings for stroking and filling, to better
support the stroke and fill colours required by the PDF interpreter.

<p>Finally, support for optional content has been added to the PDF interpreter.

<p> This release also includes a number of improvements to the pdfwrite device
to improve reliability and quality with PCL and XPS input. Many improvements to
the support of JPX images in PDF files, PDF annotation rendering and the usual
number of general bug and robustness fixes.

<p>For security reasons, Ghostscript no longer searches the current directory
by default. Use -P option to revert to old behavior.

<p>For a list of open issues, or to report problems with this release,
please visit <a href="http://bugs.ghostscript.com/">bugs.ghostscript.com</a>.

<h3><a name="9.00_Incompatible_changes"></a>Incompatible changes</h3>

<p>
No recorded incompatible changes.

<h3><a name="9.00_Changelog"></a>Changelog</h3>

<p><strong><a name="2010-09-13T150940.310889Z"></a>
2010-09-13T15:09:40.310889Z Chris Liddell</strong></p>
<blockquote>
<pre>
Commit the missing header changes from the previous checkin.
</pre>
<p>[psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-09-13T145346.788657Z"></a>
2010-09-13T14:53:46.788657Z Chris Liddell</strong></p>
<blockquote>
<pre>
Another revision of the FAPI code. Due to a problem in Freetype which needs
further investigation, we cannot produce an outline, then decide to produce
a bitmap if it is small enough. We work around this by producing a bitmap,
and if it is too large, dispose of it, and retry with an outline, thus although
we still risk larger than ideal memory use, it is very short lived. A glyph
too large to be cached (for which we will now usually use an outline) does
not suffer from the Freetype issue mentioned above.

The maximum allowable bit for Freetype to produce is now 1.5 x the maximum
cache bitmap as set in the Postscript state - it is set larger than the
cache bitmap since it is *vital* that if GS expects a bitmap to be cache
we supply a bitmap. Given that the bounding boxes arrived at the GS cache
device and the Freetype rendering code arrived at slightly differently, there
would be the chance of edge cases where FAPI would produce an outline, when
the cache expects a bitmap. Allowing FAPI plenty of leeway avoids that.

The calculation to convert a quadratic to a cubic spline in the
Freetype interface code was slightly wrong.

Also, FAPI now sets the fill adjust to 0 for filling outline glyph, instead
of inhereting the value from the originating graphics state, which gives
*much* more consistent output between the bitmap and outline cases, and
addresses the slightly excessive boldness observed for outline glyphs since
the adoption of Freetype/FAPI as the default font scaler/renderer.

Finally, support for the existing Ghostscrit text anti-aliasing
capability is improved.

Bug 691604

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-13T102534.372202Z"></a>
2010-09-13T10:25:34.372202Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revert revisions 11690 and later from the FAPI code (and revert version no. to 9.00)
to get a &quot;good&quot; base version, in preparation for a corrected version of the changes
in 11690 (and subsequent changes in the FAPI code).

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c base/version.mak Resource/Init/gs_init.ps psi/ifapi.h psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-09T135148.502020Z"></a>
2010-09-09T13:51:48.502020Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a case where /Width attribute was not checked for null.
Bug 691602, customer 700.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-09-09T072652.042155Z"></a>
2010-09-09T07:26:52.042155Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix broken version number in gs_init.ps in trunk
</pre>
<p>[Resource/Init/gs_init.ps]</p>
</blockquote>


<p><strong><a name="2010-09-09T062654.427296Z"></a>
2010-09-09T06:26:54.427296Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a couple of &quot;.0&quot;s to ensure we get floating point division
to arrive at intermediate values for the conic to cubic
spline conversion.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-09-09T034512.738999Z"></a>
2010-09-09T03:45:12.738999Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for compiler complaint from commit of rev 11700</pre>
<p>[base/gdevpdfb.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-09-08T232036.969829Z"></a>
2010-09-08T23:20:36.969829Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to enable proper mask filling with patterns that have transparency.
Major change is in gdevp14.c where begin_type_image and mask_fill procedures
now will (if we are filling with a pattern that has transparency) push a
transparency group.  When we are finished processing the image, the group is
popped which enables proper blending.  There remains an issue with a special
file that Ken created when it is run in c-list mode.  A new bug will be opened
for this issue.  Thanks to Ray for helping with this project and finding a
bounding box issue in the creation of the transparency group during c-list
reading.</pre>
<p>[base/gdevp14.c base/gxclimag.c base/gsptype1.c base/lib.mak base/gxpcmap.c base/gdevpdfb.c base/gsptype1.h base/gstrans.c base/gxpcolor.h base/gxblend1.c base/gxp1fill.c base/gxp1impl.h base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-09-08T162242.112334Z"></a>
2010-09-08T16:22:42.112334Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : incorrect pattern matrix calculation

Bug #690504 &quot;ps2write does not work with asymmetric resolutions, like 600x1200dpi &quot;

The problem was caused by frankly totally incorrect calculations when generating the
/Matrix for a pattern. Because we always see the CTM including the resolution scaling
but need to output a matrix with this removed, we scale the CTM by the inverse of the
resolution scaling.

But the calculation simply divided the CTM through by the scale factors, which is
totally incorrect and fails badly if the matrix involves rotation. The code now
correctly creates and multiplies a scale matrix. Note, the order of multiplication is
important here.

No differences expected.
</pre>
<p>[base/gdevpdfv.c]</p>
</blockquote>

<p><strong><a name="2010-09-08T083015.885002Z"></a>
2010-09-08T08:30:15.885002Z Chris Liddell</strong></p>
<blockquote>
<pre>
Slight refinement in the how the FAPI character generation detects we are
producing anti-aliased glyphs.

Also, it seems that when assigning variable value to a second, larger data
type, whilst gcc promotes the data type before the assignment, MSVC promotes
the variable later, so shifting a 32 bit integer up during an assignment to
a 64 bit integer variable works find on gcc, but MSVC loses the most
significant bits. So we need to force the promotion to happen with a cast.

Bug 691588

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-09-07T165136.404533Z"></a>
2010-09-07T16:51:36.404533Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add a further header to ifapi.h required for Unix/Linux builds, and
add the two additional headers to ifapi.h's dependencies.

</pre>
<p>[psi/ifapi.h psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-09-07T162646.989782Z"></a>
2010-09-07T16:26:46.989782Z Chris Liddell</strong></p>
<blockquote>
<pre>
Pull in gp.h in ifapi.h for the int64_t type - it seems to be required on Windows.</pre>
<p>[psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-09-07T153217.143998Z"></a>
2010-09-07T15:32:17.143998Z Chris Liddell</strong></p>
<blockquote>
<pre>
Some fairly substantial changes to the FAPI code to get very high resolutions and
anti-aliased text working reliably.

For AA text, we now make *sure* to produce outlines for non-cached glyphs, thus
the GS path code can anti-alias correctly (for cached glyphs, the &quot;show&quot; machinery
does the anti-aliasing from the cache bitmap).

The high res problems were highlighted by the bbox device (which runs at 4000 dpi).
To resolve these the width and height parameters for Freetype had to have value
overflow compensation added, to match the existing underflow compensation.

FAPI/Freetype also now will only create a glyph bitmap if the bitmap size is smaller
than the allowable glyph cache bitmap. It may still produce a bitmap for a non-cached
glyph, if the cache is full, but the individual glyph bitmap is not larger than the
allowable glyph item - this is allow for better consistency when we're near the limit
of the total cache size.

Finally, the FAPI outline retrieval code now requires 32.32 fixed point variables (rather
than the previous 16.16), which prevents overflow, and improves accuracy. If also provides
us with the opportunity to check for overflow/underflow of the GS internal fixed point
variables, before calling the GS path code.

There are quite a few cluster changes. I have checked them all, and one is a progression
(missing glyphs now render) and the rest are the pixel level differences expected by
having GS render a path, rather than Freetype - most are due to Freetype grid fitting to
the glyph bitmap, and GS grid fitting to the page raster.

Bug 691592 - bbox issue
Bug 691588 - anti-aliasing




</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-09-06T101425.582663Z"></a>
2010-09-06T10:14:25.582663Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : string not being re-encoded

Bug #690441 &quot; Files render properly with gs, but are misformatted by ps2pdf&quot;

A Coverity fix in revision 9072 prevented a crash, but also circumvented code that was
essential to run under some conditions. (This is described by comments in the code as a
'trick'). The routine created a text string with the encoded text for a font with a
custom encoding derived from a CIDFont with an unusual CMap.

In order to avoid the potential crash, but still re-encode the string, which is
essential, the relevant portion of the code has been copied and is exercised instead of
executing 'pdf_reserve_char_code_in_pdfont()'. This produces the reencoded string we
need, but if the encoding fails, where we would have caused a crash by dereferencing a
NULL pointer, we instead return an error.

No differences expected, we obviously don't have a test case in the regression suite.
</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-09-03T154954.010009Z"></a>
2010-09-03T15:49:54.010009Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for hang condition in the stream logic for the luratech JPXDecode.
We need to return EOFC with the final bit of data. Found with PDF 1.7 FTS.
</pre>
<p>[base/sjpx_luratech.c]</p>
</blockquote>

<p><strong><a name="2010-09-03T083132.767708Z"></a>
2010-09-03T08:31:32.767708Z Chris Liddell</strong></p>
<blockquote>
<pre>
A Type 0 font dictionary in a PDF which contained a spurious FontDescriptor
object confused the interpreter, which resulted in creating a Font resource
directly, rather than instantiating the DescendantFonts for the Type 0.

We'll now remove the spurious entry from the Type 0 dictionary, to prevent
any on-going confusion.

No cluster differences expected.

Bug 691589

</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-09-03T072106.059509Z"></a>
2010-09-03T07:21:06.059509Z Ken Sharp</strong></p>
<blockquote>
<pre>
typo, misplaced quote in revision 11684
</pre>
<p>[lib/lpgs.bat]</p>
</blockquote>

<p><strong><a name="2010-09-03T071933.619992Z"></a>
2010-09-03T07:19:33.619992Z Ken Sharp</strong></p>
<blockquote>
<pre>
Typo, misplaced quote in revision 11684
</pre>
<p>[lib/pdfopt.bat]</p>
</blockquote>

<p><strong><a name="2010-09-03T065244.087509Z"></a>
2010-09-03T06:52:44.087509Z Ken Sharp</strong></p>
<blockquote>
<pre>
More Windows batch file madness.

Guard all path expansion with quotes, since the Windows command shell processor is too
stupid to do so, even when expanding variables/arguments itself.

Add a trailing separator to the %TEMP% variable before specifying the filename, as
apparently some setups don't get a trailing separator by default. A paired separator
(ie \\) doesn't seem to cause a problem so this ought to be safe even if the setup
does have a trailing separator.

</pre>
<p>[lib/pf2afm.bat lib/gsdj500.bat lib/ps2ascii.bat lib/ps2pdfxx.bat lib/lpr2.bat lib/gsndt.bat lib/gstt.bat lib/eps2eps.bat lib/pdf2dsc.bat lib/gsbj.bat lib/ps2epsi.bat lib/gsdj.bat lib/dumphint.bat lib/ps2ps2.bat lib/gsnd.bat lib/font2c.bat lib/pdfopt.bat lib/gst.bat lib/pdf2ps.bat lib/ps2pdf.bat lib/gslj.bat lib/bdftops.bat lib/pfbtopfa.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat lib/lpgs.bat lib/gslp.bat lib/ps2ps.bat lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-09-02T155750.419060Z"></a>
2010-09-02T15:57:50.419060Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a couple of duplicated font names form the embedding white list, and reduce the
list length #define appropriately.</pre>
<p>[base/whitelst.c]</p>
</blockquote>

<p><strong><a name="2010-09-02T141539.116953Z"></a>
2010-09-02T14:15:39.116953Z Ken Sharp</strong></p>
<blockquote>
<pre>
Include the header file purely to get the prototype for the function, otherwise gcc
complains.
</pre>
<p>[base/whitelst.c]</p>
</blockquote>

<p><strong><a name="2010-09-02T135013.043694Z"></a>
2010-09-02T13:50:13.043694Z Ken Sharp</strong></p>
<blockquote>
<pre>
pdfwrite enhancement

The addition of code to test and honour the 'embedding flags' in TrueType fonts has
led to problems because PostScript producers are embedding type 42 fonts in the
PostScript which are non-embeddable and worse use a custom non-reversible encoding,
so that the  resulting PDF file has garbage text when a normally encoded font is used
as a replacement.

It seems that Adobe has published a 'white list' of fonts which have been granted
at least some embeddable rights. It isn't obvious if these are fonts which were type
1 (and therefore could be converted to TrueType and get incorrect embedding rights) or
if the fonts were originally released as TrueType with the wrong embedding rights.

In any event, this list has now been added to pdfwrite; if a font is encountered which
has restricted embedding, then its name will be checked against this list, if it is
found in the list then it will be considered as embeddable. We have already
encountered one font on this list which has a slightly different name to the original
(a space was removed) so spaces in the font names are ignored.

This list will have to change over time, and we may find other examples of characters
which we want to handle specially (eg oumlaut treated as o and e)

No differences expected as this is not tested in the current regression suite.
</pre>
<p>[base/whitelst.c base/gdevpdtf.c base/devs.mak base/whitelst.h]</p>
</blockquote>

<p><strong><a name="2010-09-01T184752.658366Z"></a>
2010-09-01T18:47:52.658366Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the release notes, dates etc for a second 9.00 release candidate
</pre>
<p>[doc/History7.htm doc/Projects.htm doc/History8.htm doc/History9.htm man/dvipdf.1 man/ps2ascii.1 doc/Use.htm doc/Readme.htm doc/Source.htm doc/Deprecated.htm man/ps2epsi.1 doc/Install.htm doc/API.htm doc/Issues.htm doc/DLL.htm doc/Drivers.htm man/pfbtopfa.1 doc/Release.htm doc/Commprod.htm doc/Xfonts.htm doc/Devices.htm doc/Language.htm man/gs.1 man/pf2afm.1 doc/Ps2ps2.htm doc/Fonts.htm man/printafm.1 doc/Ps2pdf.htm doc/Develop.htm doc/Helpers.htm man/pdf2dsc.1 doc/Psfiles.htm doc/Lib.htm doc/gs-vms.hlp man/font2c.1 man/gsnd.1 base/version.mak man/pdfopt.1 man/pdf2ps.1 man/ps2pdf.1 doc/Make.htm doc/Details8.htm doc/Details9.htm doc/Unix-lpr.htm doc/C-style.htm doc/Ps-style.htm doc/History1.htm doc/History2.htm man/gslp.1 man/wftopfa.1 doc/History3.htm man/ps2ps.1 doc/Ps2epsi.htm doc/History4.htm man/ps2pdfwr.1 doc/History5.htm doc/History6.htm]</p>
</blockquote>

<p><strong><a name="2010-09-01T174918.515475Z"></a>
2010-09-01T17:49:18.515475Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the release notes for the second 9.00 release candidate.
</pre>
<p>[doc/History9.htm doc/News.htm doc/Details9.htm doc/Details.htm]</p>
</blockquote>

<p><strong><a name="2010-09-01T135934.488373Z"></a>
2010-09-01T13:59:34.488373Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler warnings.

Altered a static function to 'void' from 'int' as it returns no values and the callers
don't test any putative return value.

#ifdef a boolean declaration, as the code which uses it has been #ifdef'ed

Add some parameters to two functions, so that they match the prototypes, the
parameters are not used in these functions.

</pre>
<p>[base/gdevpdfk.c base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-09-01T060851.456140Z"></a>
2010-09-01T06:08:51.456140Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to avoid issues with subtractive monochrome devices when we have
transparency.  The gray device pdf14 prototype is used in this case.
VERY limited testing indicates that this fixes a crash with the cups
device with its default settings and gives proper rendering.  More
complete testing is required to ensure that proper blending is being
performed and to investigate the other process color models that the
cups device supports (e.g. cmy).  </pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-08-31T232115.562664Z"></a>
2010-08-31T23:21:15.562664Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Revert back to having pdfwrite handle what to do with PS color spaces
instead of using the V4 profile that gsicc_create generates.  Also, fix a
few issues that existed with pdfwrites handling of those spaces, in particular
adjustments are made for non D50 white points.  D50 is the required white point
for the ICC profile.  About 189 pdfwrite test files will report differences.
I went through them with bmpcmp.    Since the profiles that were generated
differ between gsicc_create and pdfwrite minor color differences exist.  In
addition, there were some regressions that existed, which this revision will
fix.  </pre>
<p>[psi/zcolor.c base/gdevpdfk.c psi/zimage.c base/gdevpdfc.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-08-31T153427.935572Z"></a>
2010-08-31T15:34:27.935572Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : linewidth corruption when Tr is 1

Bug #690436 &quot; (regression) re-distilling pdf causes R graphics to go block-single-color.&quot;

The problem was cause din the pdfwrite-specific text rendering routines. When the text
render mode is 1 (stroke), the linewidth is adjusted by the current text matrix. However
the routine to do this is called each time any element of the text 'graphics state'
changes. So if multiple calls to (eg) Td were made, the linewidth would be altered
even though there had been no change in 'w'.

Fixed by getting the current linewidth before the text rendering routine, and setting
it back to this value after the text rendering routine.

No expected differences. However z400454b01d4-1.pdf seems to exhibit some minor
differences which I am unable to reproduce locally. They are so minor that bmpcmp
ignores them, and on my tests the PDF files are identical bar the date/time stamps
and other metadata. I don't believe this is a real difference.
</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2010-08-28T220455.196791Z"></a>
2010-08-28T22:04:55.196791Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of /Highlight annotation. Acrobat always uses transparency
and ignores appearance streams. Bug 691572, customer 532.

Progressions or minor differences (when the annotation has an appearance
stream) are observed in annots.pdf, CATX1385.pdf, CATX6166.pdf, CATX6508.pdf,
CATX7659.pdf, CATX8255.pdf, IA3Z4030.pdf, fts_32_3225.pdf
</pre>
<p>[Resource/Init/pdf_main.ps Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-27T135414.847396Z"></a>
2010-08-27T13:54:14.847396Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : faulty matrix transformations for Pattern dictionaries

Bug #690398 &quot;Geometric issue with pattern&quot;
The problem is the definition of the default co-ordinate space. When a Pattern is at the
page level or drawn inside a form, we need to remove our 0.1 scaling in order to return
to the 'default co-ordinate space'. However, when painted on a form nested inside a
form, the default co-ordinate space is the parent form, so we don't need to undo
the scaling.

This is the same problem addressed for shading dictionaries in revision 11347.

</pre>
<p>[base/gdevpdfv.c]</p>
</blockquote>

<p><strong><a name="2010-08-27T121054.938774Z"></a>
2010-08-27T12:10:54.938774Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : FormDepth not tracked properly.

Part of the fix for Bug#690398. In order to know whether a pattern matrix should be
converted to the top level CTM, or to an enclosing Form CTM, we track the Form Depth
by noting when transparency groups begin and end (currently this is the only way to get
a form output by pdfwrite).

There was a problem with mask groups, because although pdf_begin_transparency_mask calls
pdf_begin_transparency_group, pdf_end_transparency_mask doe snot call
pdf_end_transparency_group. This resulted in the depth being incremented at the start
of the mask, but not decremented at the end, so patterns could be emitted at the page
level but with the CTM for a Form level, leading to missing content.

Fixed by decrementing the FormDepth appropriately.

</pre>
<p>[base/gdevpdft.c]</p>
</blockquote>

<p><strong><a name="2010-08-27T120246.764612Z"></a>
2010-08-27T12:02:46.764612Z regression</strong></p>
<blockquote>
<pre>
Added the ability to specify which regression test files will only be
run during nightly regression testing (i.e. not for commit regression
tests).  To skip files add them, one per line, to the nightly_only.lst
file in the corresponding directory (creating this file if none exists).
See tests_private/customer_tests/nightly_only.lst for an example.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-08-26T233428.641761Z"></a>
2010-08-26T23:34:28.641761Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of /Squiggly annotation without an appearance stream.
Bug 691572, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-26T154951.752958Z"></a>
2010-08-26T15:49:51.752958Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove an unused local variable (gcc compiler warning)

No differences expected
</pre>
<p>[base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-08-24T213729.611143Z"></a>
2010-08-24T21:37:29.611143Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge a couple of corrections from the 9.00 tag.
</pre>
<p>[doc doc/History9.htm doc/News.htm doc/Details9.htm]</p>
</blockquote>

<p><strong><a name="2010-08-24T203140.602213Z"></a>
2010-08-24T20:31:40.602213Z Chris Liddell</strong></p>
<blockquote>
<pre>
Merge doc changes from 9.00 and bump version number to 9.01
</pre>
<p>[doc/Projects.htm man/dvipdf.1 man/ps2ascii.1 doc/Use.htm man/ps2epsi.1 doc/DLL.htm doc/Drivers.htm doc/Release.htm man/gs.1 doc/Ps2pdf.htm man/printafm.1 psi/psromfs.mak psi/dxmain.c toolbin/tests/check_dirs.py doc/Helpers.htm psi/dxmainc.c man/gsnd.1 man/pdfopt.1 base/version.mak Resource/Init/gs_init.ps man/ps2pdf.1 man/pdf2ps.1 doc/News.htm doc/Details8.htm doc/Make.htm doc/Unix-lpr.htm doc/Details9.htm doc/History1.htm doc/History2.htm man/wftopfa.1 doc/History3.htm doc/History4.htm doc/Details.htm man/ps2ps.1 doc/History5.htm doc/History6.htm doc/History7.htm doc/History8.htm doc/History9.htm doc/Readme.htm doc/Source.htm doc/Deprecated.htm /trunk/gs doc/Install.htm doc/Changes.htm doc/API.htm doc/Issues.htm man/pfbtopfa.1 doc/Commprod.htm doc/Xfonts.htm doc/Devices.htm doc/Language.htm psi/dmmain.c doc/Fonts.htm doc/Ps2ps2.htm man/pf2afm.1 doc/Develop.htm man/pdf2dsc.1 psi/dmmain.r doc/Psfiles.htm doc/Lib.htm doc/gs-vms.hlp man/font2c.1 doc/C-style.htm doc/Ps-style.htm man/gslp.1 doc/Ps2epsi.htm man/ps2pdfwr.1]</p>
</blockquote>

<p><strong><a name="2010-08-24T134629.931715Z"></a>
2010-08-24T13:46:29.931715Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement - Font copying (pdfwrite)

Bug #691573 &quot; invalidfont in xshow&quot;. The file does in fact contain an invalidfont, the
type 42 embedded fonts are defined by adding /.notdef to the CharStrings dictionary as
if it were the Encoding array. The key /.notdef is added 256 times with values ranging
from 0 to 255. Of course only the last one is actually defined.

This means that when we come to copy the /.notdef glyph for our font copy, the type 42
GID is 255. However the font does not contain a glyph with GID 255, so the copy of the
font fails.

Although this is an illegal font, Adobe Acrobat Distiller does produce a PDF file from
it. In order to duplicate this, code has been added when copying a font. If we fail to
copy a glyph, and the glyph is /.notdef and the GID is non-zero, we try to copy a glyph
with GID 0 instead. If that fails we error out, otherwise we use the glyph with GID 0.
(TrueType font /.notdef glyph has GID 0)

This works for the supplied file but is not, of course, a guaranteed solution since
another badly formed font may not contain a glyph with GID 0.

No Expected Differences
</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-08-24T122959.958275Z"></a>
2010-08-24T12:29:59.958275Z Chris Liddell</strong></p>
<blockquote>
<pre>
In preparation for the release, add my username to real name mapping
in AUTHORS, add an initially empty History9.htm, and update News.htm
to point to it.

</pre>
<p>[doc/History9.htm doc/News.htm doc/AUTHORS]</p>
</blockquote>

<p><strong><a name="2010-08-23T164947.032287Z"></a>
2010-08-23T16:49:47.032287Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : errors in XMP metadata parsing

Bug #691562 &quot;ERROR -15 closing pdfwrite device&quot;.

This use of a DOCINFO pdfmark exposed 3 separate bugs in pdfwrite's handling of XMP
metadata.

1) Decoding an escaped PostScript string. Unescaped characters and octal escapes worked
correctly, but non-octal escapes moved the index into the string one place too many.

2) The escape '\b' (backspace) wasn't handled and returned incorrect data. Although not
tested by this issue, the form feed (\f) also wasn't handled.

3) When converting UTF16 data to UTF-8, the end of the destination (UTF-8) buffer was
calculated incorrectly, causing a spurious buffer overrun error.

The code now handles the missing escapes, does not advance the character position after
decoding a non-octal escape and correctly defines the end of buffer. After this the
Title string displays the same in Acrobat as the same pdfmark sent through Adobe
Distiller.

No expected differences as this only affects the document metadata.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-08-21T080346.086781Z"></a>
2010-08-21T08:03:46.086781Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Remove unnecessary version checks for libtiff in configure.ac.

Since the local copy is preferred over the system's (see r11635), comparing the
version of the two libraries is unnecessary.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-08-20T160722.239869Z"></a>
2010-08-20T16:07:22.239869Z Chris Liddell</strong></p>
<blockquote>
<pre>
When we produce a glyph uncached, and it's to be filled with a
pattern colour space *and* there is PDF transparency involved
force FAPI to (try to) produce an outline (for lower level
code to use as a clip) instead of a bitmap (to use as a
mask).

This does produce some pixel level differences in a few
cluster files, but improves a load of PDF 1.7 FTS jobs.

Bug 691550

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-19T040105.188148Z"></a>
2010-08-19T04:01:05.188148Z henrys</strong></p>
<blockquote>
<pre>
Fix bug #691564.  The assignment of the target device did not use the
proper reference counting assignment procedure resulting in a lost
reference to the target device.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>


<p><strong><a name="2010-08-17T143158.354019Z"></a>
2010-08-17T14:31:58.354019Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Skip opacity and unknown components during reading of JPX image data. This
improves image quality (compared to the previous state that interpreted an
opacity channel as yet another data sample) and serves as a transition to full
support of opacity in JPX images. Bug 691489, customer 532.
</pre>
<p>[base/sjpx.h psi/zfjpx.c base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-08-17T012218.729560Z"></a>
2010-08-17T01:22:18.729560Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't include opacity channels in the number-of-components count.
Recognize general ICC profile (type 3) and construct a corresponding
ICC-based color space. Bug 691470, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-15T094903.044306Z"></a>
2010-08-15T09:49:03.044306Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure we only check the compatibility of the system libtiff
if we're actually going to use it.

No cluster differences expected.

Bug 691548
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-08-15T094221.565047Z"></a>
2010-08-15T09:42:21.565047Z Chris Liddell</strong></p>
<blockquote>
<pre>
The &quot;shortcut&quot; for rendering masks use by the FAPI code for uncached
glyph bitmaps (gx_image_fill_masked) is only safe, in the general case
when drawing &quot;plain&quot; colours to the output. For complex colour spaces
(like patterns) we must use the &quot;long hand&quot; version.

This causes minor pixel level differences in some cluster tests (due
to rounding differences), and some (very small) progressions: there
are differences in about 20 cluster jobs.

Bug 691549.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-14T211029.198491Z"></a>
2010-08-14T21:10:29.198491Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a memory corruption problem introduced by the rev. 11588 on some systems.
Free the string returned by systempapername() but don't free the static string
returned by defaultpapername() . Bug 691557.
</pre>
<p>[base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-13T194628.340691Z"></a>
2010-08-13T19:46:28.340691Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite( : Invalid compression filter emitted.

Bug #691556 &quot;Images compressed with the RunLengthDecode filter are invalid&quot; A typo in
gdevpdfx.h caused the /Filter entry of an image dictionary to be written with a
trailing comma if the filter was RunLength.

No differences expected
</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-08-12T181430.164084Z"></a>
2010-08-12T18:14:30.164084Z Till Kamppeter</strong></p>
<blockquote>
<pre>
pstoraster: Removed unneeded &quot;-dDEBUG&quot; from Ghostscript command line.
</pre>
<p>[cups/pstoraster.in]</p>
</blockquote>

<p><strong><a name="2010-08-12T181047.335830Z"></a>
2010-08-12T18:10:47.335830Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Do verbose degug logging only if compiled in debug mode. Bug 690581.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-08-12T063908.575092Z"></a>
2010-08-12T06:39:08.575092Z regression</strong></p>
<blockquote>
<pre>
Added support for regression testing of the cups device.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-08-12T025540.283339Z"></a>
2010-08-12T02:55:40.283339Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix to handle case where the profiledir is NOT set AND there is a change in
the process color model for the device AFTER a profile had already been set.  </pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-08-12T014217.270497Z"></a>
2010-08-12T01:42:17.270497Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement variable text rendering for widget annotations.
Bug 691536, customer 532.
</pre>
<p>[Resource/Init/pdf_main.ps Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-11T233148.385487Z"></a>
2010-08-11T23:31:48.385487Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminism issue that was introduced with changes in 16bit image
handling.  Last subpixel element was not getting unpacked properly.  </pre>
<p>[base/gxi16bit.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T230548.288399Z"></a>
2010-08-11T23:05:48.288399Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Another compiler complaint fix.  Proper cast of device.</pre>
<p>[base/gdevpsdi.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T213103.877037Z"></a>
2010-08-11T21:31:03.877037Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for compiler error due to implicit declaration</pre>
<p>[base/gdevpsdi.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-08-11T185451.837319Z"></a>
2010-08-11T18:54:51.837319Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that if the device process color model changes the profile is updated accordingly.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T161745.421152Z"></a>
2010-08-11T16:17:45.421152Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix bug # 691532.  Do not attempt to clone an image that does not exist,
each completed page should have an associated image.  We'd like to handle
this corrupt file with a better fix, for example the absence of an end page
segement is clearly a problem with respect to the specification, but Adobe and
Artifex have chosen to support other &quot;off spec&quot; streams so more subtle
and less obvious error checking is needed.  Thanks to Tim Waugh for analysis on
this problem.
</pre>
<p>[jbig2dec/jbig2_page.c]</p>
</blockquote>

<p><strong><a name="2010-08-11T152222.427529Z"></a>
2010-08-11T15:22:22.427529Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add some words about the ps2write device to the devices documentation.
</pre>
<p>[doc/Devices.htm]</p>
</blockquote>

<p><strong><a name="2010-08-10T164420.491267Z"></a>
2010-08-10T16:44:20.491267Z regression</strong></p>
<blockquote>
<pre>

Several minor changes to the cluster regression system, the most
signifcant of which are:

seg. faults are now reported for every case (previously they were only
reported if they were new)

skip.lst files are now checked for errors

changes to gs/psi now test the pcl/pxl/xps products since changes to
Ghostscript can affect the pdfwrite path

the tests_private/pdf/PDF_1.7_FTS repository was added


</pre>
<p>[toolbin/localcluster/clustermonitor.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-08-10T162019.775613Z"></a>
2010-08-10T16:20:19.775613Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Commit to move the ICC profile for the device within the device structure.
This will make it easier to handle dynamic changes that may occur to the
process color model for the device.  Also a move of device profiles into non gc
memory and removal of any references to profiles to the GC.    A few progressions
occur with this commit including Bug689918.pdf testpage.pdf. </pre>
<p>[base/gxi12bit.c base/gsdevice.c base/gdevpdfk.c base/gxpcmap.c base/gxdevice.h /trunk/ghostpdl/xps/xpsgradient.c base/gdevprn.c base/gdevpsdi.c base/gscsepr.c base/gscpixel.c base/gxcmap.c base/gdevbit.c base/gxclip.c base/gxicolor.c base/gximag3x.c base/gscspace.c base/gsicc.c base/gscdevn.c base/gscolor2.c base/lib.mak base/gxiscale.c base/gsicc_manage.c base/gxcspace.h base/gscicach.c base/gdevnfwd.c base/gxdevcli.h base/gdevp14.c psi/zdevice.c base/gsicc_create.c base/gsicc_cache.c base/gdevp14.h base/gsicc_cache.h base/gxccman.c base/gscms.h base/gxclist.h psi/zusparam.c base/gxshade.c base/gxblend.c base/gsequivc.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-08-10T091550.312005Z"></a>
2010-08-10T09:15:50.312005Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement : pdfwrite

performance enhancement for pdfwrite when handling files with large amounts of text.

Bug #689859 &quot;Performance comparison versions 7.07 and 8.62 on HP-UX ia64&quot; Alex's
analysis shows that pdfwrite was spending a lot of time trying to to see if two type 1
fonts were the same before deciding whether a glyph could be added to a font, or was
already present in a font copy.

Most of the time was spent extracting and comparing /Subrs. The new code creates a hash
(MD5) of both the local and global Subrs (if present) and stores that in the type 1
'data' field in the font (16 bytes). The hashes are created by pdfwrite only as they
are required, so there is no performance penalty for rendering. The hash comparison is
considerably quicker than the long winded Subrs comparison.

For many files the performance difference is minimal but for file containing lots of
pages, mostly composed of text, there is a considerable saving. The text files run in
about 60% of the time they did before this change.

</pre>
<p>[base/gxfont1.h base/gxfcopy.c psi/zfont1.c]</p>
</blockquote>

<p><strong><a name="2010-08-10T081335.250205Z"></a>
2010-08-10T08:13:35.250205Z Chris Liddell</strong></p>
<blockquote>
<pre>
A small revision to the fix for Bug 691326: the glyphs array must have
at least one entry.

No cluster differences expected.

Bug 691343
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-08-09T004131.173587Z"></a>
2010-08-09T00:41:31.173587Z Ray Johnston</strong></p>
<blockquote>
<pre>
Free the pattern-clist devices that are created (and left for the GC to
free) when pattern-clist patterns are used with a device that is using the
clist for the page. Those that were allocated during the print_page clist
playback would be those that leaked. Since the devices were closed, this
could lead to GC referencing objects that were invalid. Related to, but
not the final fix to Bug 691527.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-08-09T000727.505245Z"></a>
2010-08-09T00:07:27.505245Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove spurious &quot;cvx&quot; operators after .pushextendedgstate and
.popextendedgstate . Do .popextendedgstate after checking that &quot;Q&quot;
has a correspondingh &quot;q&quot;. Bug 691538.
</pre>
<p>[Resource/Init/pdf_ops.ps]</p>
</blockquote>

<p><strong><a name="2010-08-07T155808.066501Z"></a>
2010-08-07T15:58:08.066501Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of Widget annotation border background specified by
/BC and /BG entries of the appearance characteristics dictionary /MK.
Bug 691524, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-06T202111.891509Z"></a>
2010-08-06T20:21:11.891509Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix segfault seen with fts_17_1704.pdf when the clist playback of patterns
that had been stored as clists were attempted to be read from the clist
as bitmaps. This happened when -dMaxPatternBitmap=1000000 was used which
is smaller than the default, confusing a HACK that attempted to force
the use of the pattern-clist mode. Also remove some #if 0 idle code.
</pre>
<p>[base/gsptype1.c base/gxpcmap.c base/gxcolor2.h]</p>
</blockquote>

<p><strong><a name="2010-08-06T172216.521958Z"></a>
2010-08-06T17:22:16.521958Z Chris Liddell</strong></p>
<blockquote>
<pre>
I missed a couple of now unused variables in the previous commit.
</pre>
<p>[psi/iname.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T154921.355481Z"></a>
2010-08-06T15:49:21.355481Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add documentation on -dMaxPatternBitmap=# parameter in the 'Improving
Performance' section of the Use.htm file. The actual parameter was
added in rev 11605.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-08-06T150300.994141Z"></a>
2010-08-06T15:03:00.994141Z Chris Liddell</strong></p>
<blockquote>
<pre>
Prevent doing a gc &quot;unmark&quot; on memory already (potentially)
freed.

Relates to Bug 691380. I could not reproduce the seg fault
as reported, but valgrind reported the write to freed memory
in the same place as the reported seg fault.

</pre>
<p>[psi/iname.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T111522.616992Z"></a>
2010-08-06T11:15:22.616992Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite
There is a hack in type 3 font creation in pdfwrite which increases the FontMatrix if
all the elements are very small, apparently Acrobat is unable to cope with very small
FontMatrix entries.

However, if all the entries are 0, it ends up running round a loop multiplying by 10
indefinitely. This change simply avoids the loop if all the matrix elements are 0.
Naturally this isn't a useful font, its a Quality Logic test file.

</pre>
<p>[base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T111140.511965Z"></a>
2010-08-06T11:11:40.511965Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revision 11600 introduced a sever regression with text in XPS files. This revision
addresses that by only applying the fix to preserve glyph data when the text operation
is TEXT_FROM_SINGLE_GLYPH as this is the only case where the affected union is a glyph
not a pointer to a series of glyphs, and is therefore the only case which is affected.

Expected Differences: All XPS files with text should again work correctly.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-08-06T082720.529691Z"></a>
2010-08-06T08:27:20.529691Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise some of the FAPI related information.

</pre>
<p>[doc/Use.htm doc/Make.htm doc/Develop.htm doc/Psfiles.htm]</p>
</blockquote>

<p><strong><a name="2010-08-06T055342.503244Z"></a>
2010-08-06T05:53:42.503244Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of standard Stamp and Text annotations. Ghostscript uses
different font than Acrobat in Stamp icons and uses the same icon for the Text
annotation regardless of the /Name attribute. Bug 691525, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-06T042459.663647Z"></a>
2010-08-06T04:24:59.663647Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add a new paramter MaxPatternBitmap with a default value of 8Mb. Formerly
the pattern_clist mode would be used when the bitmap size exceeded 1Mb
and prior to rev 11___ this calculation was flawed and could allow pattern
bitmaps as large as 64Mb to avoid the pattern_clist mode. While the clist
based pattern tiling is slow, setting the threshold to 8Mb should be rare
enough to minimize performance impact. Bug 691512.
</pre>
<p>[base/gsdevice.c base/gdevp14.c base/gxdevcli.h base/gsdparam.c base/gxpcmap.c base/gxdevice.h base/gdevbit.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T232612.261846Z"></a>
2010-08-05T23:26:12.261846Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Segmentation fault on mid-job changes of the color depth.

This patch prevents the crash by forcing a memory reallocation on
color depth changes. The approach principally works but we did not
decide yet whether it is the final solution, as Michael Vrhel is still
doing major changes in the color handling. Bug 690435.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T191611.698734Z"></a>
2010-08-05T19:16:11.698734Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix comment about no support for BITS=4
</pre>
<p>[lib/viewrgb.ps]</p>
</blockquote>

<p><strong><a name="2010-08-05T191400.403158Z"></a>
2010-08-05T19:14:00.403158Z Ray Johnston</strong></p>
<blockquote>
<pre>
Minor correction to usage string left over from when this was split out
from setupgs.
</pre>
<p>[psi/mkfilelt.cpp]</p>
</blockquote>

<p><strong><a name="2010-08-05T174036.908437Z"></a>
2010-08-05T17:40:36.908437Z Chris Liddell</strong></p>
<blockquote>
<pre>
The &quot;show&quot; machinery expected that even non-marking text operations
(such as stringwidth) would result in a glyph bitmap which
could be cached (assuming the glyph would be a candidate for the
cache with a normal marking operation, like show).

FAPI, however, did not create a glyph bitmap for non-marking
operations, thus the cache would receive a valid, but
&quot;empty&quot; glyph. This caused Postscript that used stringwidth
before a show to sometimes &quot;lose&quot; glyphs, by using the empty
cached glyph.

FAPI's behaviour now matches the expectations of the show/cache
management code.

Causes cluster differences in Bug688372.ps, fts_31_3111.pdf, and
14-08.PS, these are all progressions.

Bug 691517

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-05T154939.430735Z"></a>
2010-08-05T15:49:39.430735Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite)
A piece of data (pointer to glyph data) was stored and passed into a routine
'process_text_modify_width' which expected the glyph data to remain unchanged but
modified the text enumerator data. This doesn't work if the glyph data is a pointer
to the text enumerator data. NB the text enumerator is saved and restored around the
call.

Modified so that the calling routine makes a copy of the glyph data before calling
'process_text_modify_width'.

This should prevent 13-10.ps from entering an infinite loop.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-08-04T231524.779084Z"></a>
2010-08-04T23:15:24.779084Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for Bug 691504 (gs taking a long time to render a file).

Revision 8694 changes code from using a simple cast to an int to using
a call to (int)floor. This fixes problems, but costs a factor of 3 in
processing time for heavily tiled files.

Here we change to using a macro version of floor instead. This removes
the function call and NaN handling overheads and returns us to the
same kind of performance as we had before.

We apply the same change throughout the file (i.e. all the calls to (int)floor,
not just the two changed in r8694.

There is still scope for optimising this code further, but this closes the
regression.

No differences seen in local cluster testing.

</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-08-04T225904.842835Z"></a>
2010-08-04T22:59:04.842835Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement rendering of Underline and StrikeOut annotations without
appearance streams. Bug 691526, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-08-03T120247.197684Z"></a>
2010-08-03T12:02:47.197684Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : FAPI (no bug number, discovered working on a different problem)

Another place where the FAPI code assumes that a text enumerator is a show_enum and
casts it as such. While this is true for rendering, it is not the case when capturing
glyphs for pdfwrite.

Altered the code to test if the enumerator is a show_enum and if not, to get the
graphics state from the enumerator 'pis' pointer instead if possible. Signal an error
if this is not possible.

No differences expected.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-08-03T080213.862491Z"></a>
2010-08-03T08:02:13.862491Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement : PDF interpreter. Bug #691503

When creating an outline (/OUT pdfmark), especially for the pdfwrite device, check the
destination page to see that it lies between FirstPage and LastPage; if it does not, then
don't emit it. This is an extension to the existing control which checked that the
destination page wasn't greater than the number of pages in the PDF file.</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-08-03T075650.987568Z"></a>
2010-08-03T07:56:50.987568Z Ken Sharp</strong></p>
<blockquote>
<pre>
In the section 'Using Unicode True Type fonts', replace the example CSI array with one
whose values are strings, not names. These must be string values.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-08-02T213029.939498Z"></a>
2010-08-02T21:30:29.939498Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Partly revert rev. 11392 that over-simplified the check for a valid obj line
in the PDF file. Use --search-- to reject impossible cases but revert to the
old logic to verify the results. Bug 691502.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2010-08-02T164500.756282Z"></a>
2010-08-02T16:45:00.756282Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a compiler warning about a missing prototype for free()
caused by my previous commit.
</pre>
<p>[base/lib.mak base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T134903.975996Z"></a>
2010-08-02T13:49:03.975996Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix a memory leak. Free the paper name string allocated amd
returned by libpaper.
</pre>
<p>[base/gp_upapr.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T092004.666066Z"></a>
2010-08-02T09:20:04.666066Z Ken Sharp</strong></p>
<blockquote>
<pre>
Missing ';' in r11586 replaced. Should build now.</pre>
<p>[base/gdevpdfx.h]</p>
</blockquote>

<p><strong><a name="2010-08-02T090647.523074Z"></a>
2010-08-02T09:06:47.523074Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a few minor compiler warnings from gcc. No differences expected.
</pre>
<p>[base/gdevpdfx.h base/gdevpdf.c]</p>
</blockquote>

<p><strong><a name="2010-08-02T063925.229115Z"></a>
2010-08-02T06:39:25.229115Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Applied patch to fix &quot;imagen&quot; output device (bug 690561).
</pre>
<p>[base/gdevimgn.c]</p>
</blockquote>

<p><strong><a name="2010-08-01T085915.942136Z"></a>
2010-08-01T08:59:15.942136Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the now redundant --disable-cairo directives.

</pre>
<p>[toolbin/localcluster/readme toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-07-31T160737.431496Z"></a>
2010-07-31T16:07:37.431496Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the &quot;dead&quot; devcairo device.

No cluster differences expected.

Bug 690009

</pre>
<p>[ghostscript.vcproj base/configure.ac base/gdevcairo.c base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-31T154539.194094Z"></a>
2010-07-31T15:45:39.194094Z Chris Liddell</strong></p>
<blockquote>
<pre>
Reapply r11570

Copying converted samples to the output raster used the byte
length of the input raster, rather than the byte length of
the converted data. Change to use the correct length.

Bug 691494 - credit to SaGS for the patch.

</pre>
<p>[base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-31T150424.124204Z"></a>
2010-07-31T15:04:24.124204Z Till Kamppeter</strong></p>
<blockquote>
<pre>
No need to install Resources and iccprofiles if COMPILE_INITS=1

When COMPILE_INITS=1, the mentioned directories are not used and just waste
disk space and also confusing. Bug 689253.

</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-07-31T003707.940018Z"></a>
2010-07-31T00:37:07.940018Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix the calculation of the size of the pattern bitmap by correcting the
calculation of the effective depth (bits per pixel). PaintType 2 is the
uncolored (mask == 1 bit per pixel) mode, PaintType 1 is colored, thus
needs the full target device color_info.depth bits per pixel. Bug 691514
detected running the PDF 1.7 FTS for customer 532.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T231352.534878Z"></a>
2010-07-30T23:13:52.534878Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Distinguish the two uses of cdev - one from icc merge, one the from very old lpd code (bug 691463).

This causes a warning when building with gcc, msvc, and also DEC CC.

</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T213419.596701Z"></a>
2010-07-30T21:34:19.596701Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded &quot;;&quot; characters from C code to silence warnings of DEC CC (bug 691463)

</pre>
<p>[contrib/gdevbjc_.h base/gxpcolor.h base/strmio.h base/gdevrinkj.c base/gdevbit.c base/gdevpdtf.h base/gsovrc.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T203848.303275Z"></a>
2010-07-30T20:38:48.303275Z Till Kamppeter</strong></p>
<blockquote>
<pre>
configure script: Hide error message when &quot;sed&quot; does not have a &quot;--version&quot; option.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T200921.607711Z"></a>
2010-07-30T20:09:21.607711Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Tips about cross-compiling 64-bit ghostscript  on 32-bit windows

This procedure is slightly simplier(?) than the cross-compiling instruction
which Russell removed with r9807 about a year ago. Note that
ARCH_STRUCT_ALIGN_MOD mentioned in Russell's instruction was removed
r6773 (in 2006) and note also that all the &quot;genconf&quot; references in r9807
should be &quot;genarch&quot; instead.

</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-07-30T171523.787490Z"></a>
2010-07-30T17:15:23.787490Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691488.

This commit fixes the issues that we are seeing with the JPEG2000 images in
the FTS files EXCEPT for the issues related to SmaskInData.  Those images
will be addressed in a separate commit and will now be handled in bug
691470.
With this commit, support is in place for faster 16 bit image rendering due
to the improved ICC support, which lets us avoid the multiple conversions from
16 bit to frac to float to unsigned short to byte which occurred in the old
flow.  Also, the jasper interface will now, when it encounters a 16 bit or
12 bit image, use the higher bit depth renderer and pass the data along.
Previously, we were truncating to 8bits in our jasper interface.  These
changes have been regression tested and checked with bmpcmp.


</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c Resource/Init/gs_lev2.ps Resource/Init/gs_res.ps base/sjpx.c Resource/Init/pdf_draw.ps base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T171346.325084Z"></a>
2010-07-30T17:13:46.325084Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for double to float conversion warnings. Bug 691498.  </pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T170659.251898Z"></a>
2010-07-30T17:06:59.251898Z Henry Stiles</strong></p>
<blockquote>
<pre>
rollback to revision 11564, 11565 broke the build</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c contrib/gdevbjc_.h base/gdevbbox.c base/gxpcolor.h Resource/Init/gs_res.ps Resource/Init/pdf_draw.ps base/gsovrc.h base/gdevpdtf.h base/gsicc_create.c autogen.sh Resource/Init/gs_lev2.ps base/strmio.h base/configure.ac base/gdevrinkj.c base/sjpx.c base/gdevbit.c base/gximage.h base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T142707.462183Z"></a>
2010-07-30T14:27:07.462183Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691488.

This commit fixes the issues that we are seeing with the JPEG2000 images
in the FTS files EXCEPT for the issues related to SmaskInData.  Those images
will be addressed in a separate commit and will now be handled in bug 691470.
With this commit, support is in place for faster 16 bit image rendering due to
the improved ICC support, which lets us avoid the multiple conversions from 16
bit to frac to float to unsigned short to byte which occurred in the old flow.
Also, the jasper interface will now, when it encounters a 16 bit or 12 bit image,
use the higher bit depth renderer and pass the data along.  Previously, we were
truncating to 8bits in our jasper interface.  These changes have been regression
tested and checked with bmpcmp.


</pre>
<p>[base/gxi12bit.c base/lib.mak base/gxi16bit.c Resource/Init/gs_lev2.ps Resource/Init/gs_res.ps base/sjpx.c Resource/Init/pdf_draw.ps base/gximage.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T140814.058178Z"></a>
2010-07-30T14:08:14.058178Z Chris Liddell</strong></p>
<blockquote>
<pre>
Copying converted samples to the output raster used the byte
length of the input raster, rather than the byte length of
the converted data. Change to use the correct length.

Bug 691494 - credit to SaGS for the patch.

</pre>
<p>[base/gdevdbit.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T135952.334818Z"></a>
2010-07-30T13:59:52.334818Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for double to float conversion warnings. Bug 691498</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T113715.489627Z"></a>
2010-07-30T11:37:15.489627Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Distinguish the two uses of cdev - one from icc merge, one the from very old lpd code (bug 691463).

This causes a warning when building with gcc, msvc, and also DEC CC.

</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T112007.130600Z"></a>
2010-07-30T11:20:07.130600Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Suppressed error message during ./configure if &quot;sed&quot; does not support &quot;--version&quot; (bug 691463)
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T111617.321612Z"></a>
2010-07-30T11:16:17.321612Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded &quot;;&quot; characters from C code to silence warnings of DEC CC (bug 691463)
</pre>
<p>[contrib/gdevbjc_.h base/gxpcolor.h base/strmio.h base/gdevrinkj.c base/gdevbit.c base/gdevpdtf.h base/gsovrc.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T111247.691429Z"></a>
2010-07-30T11:12:47.691429Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed unneeded quotes in autogen.sh.
</pre>
<p>[autogen.sh]</p>
</blockquote>

<p><strong><a name="2010-07-30T111035.977735Z"></a>
2010-07-30T11:10:35.977735Z Till Kamppeter</strong></p>
<blockquote>
<pre>
On Tru64 stdint.h does not exist but the types required by jbig2 are in inttypes.h there (bug 691463).

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T110327.732163Z"></a>
2010-07-30T11:03:27.732163Z Till Kamppeter</strong></p>
<blockquote>
<pre>
On Tru64 the integer types are in inttypes.h and not in stdint.h as in VMS

Bug 691463, required for jbig2dec.

</pre>
<p>[base/stdint_.h jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T110025.895059Z"></a>
2010-07-30T11:00:25.895059Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Replace &quot;==&quot; bashism by &quot;=&quot; in configure.ac

&quot;==&quot; is a bash extension. See bash's manpage recommending &quot;=&quot; for posix
compliance (bug 691463). This causes various tests to fail and resulted
in the link failure from mis-detecting omni.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T105644.338677Z"></a>
2010-07-30T10:56:44.338677Z Till Kamppeter</strong></p>
<blockquote>
<pre>
'%' in printf() needs to be '%%'

Tru64 C issues a warning (bug 691463).
</pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T105330.576036Z"></a>
2010-07-30T10:53:30.576036Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Removed duplicate AC_PATH_PROG(pkg-config) check in ./configure.

The extra check caused

./configure: !: not found

messages on some platforms. Bug 691463.

</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-30T101447.310782Z"></a>
2010-07-30T10:14:47.310782Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Update documentation as --enable-dynamics is no longer required for &quot;make so&quot; to work.
</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-07-30T101041.906626Z"></a>
2010-07-30T10:10:41.906626Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Added some missing initializations in DeviceN

This should have been part of the DeviceN change. If left unset,
the code path assumes color display and goes down the color display
path and eventually segfaults. Bug 690428.
</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T095623.737093Z"></a>
2010-07-30T09:56:23.737093Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fix time-struct related build failure with SunStudio (bug 691453).

Apparently many platforms and compilers, including gcc and intel C,
require both &lt;sys/time.h&gt; and &lt;time.h&gt;. This patch just adds Sun Pro C
to the list of such platforms and compilers.

</pre>
<p>[base/time_.h]</p>
</blockquote>

<p><strong><a name="2010-07-30T094551.500432Z"></a>
2010-07-30T09:45:51.500432Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Avoid that the x11 output device can create huge windows which crash the X server. Bug 690444.
</pre>
<p>[base/gdevxini.c]</p>
</blockquote>

<p><strong><a name="2010-07-30T085817.493418Z"></a>
2010-07-30T08:58:17.493418Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Assorted fixes for the modularized X11 output device

All object files destined for shared libraries needed to be compiled
with -fPIC but this is not the case for gsparamx.c, gdevemap.c, and
gdevxcmp.c which are required by other parts to be built as standard.

This change makes x11 not depend on gsparamx.c and gdevemap.c (and not
geeting them included in the shared library X11.so). gsparamx.c is
part of psdf and is usually included and available, and gdevemap.c is
small enough to be inserted completely where it is used.

gdevxcmp.c is addressed by building it with &#36;(GLCCSHARED) and not with
&#36;(GLCC).

In addition, &#36;(CC_SHARED) is only used for object files, rather than
for linking, so DYNAMIC_CFLAGS is more appropiate here than
DYNAMIC_LDLAGS.

Bug 691510

</pre>
<p>[base/gdevxxf.c base/Makefile.in base/devs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-29T182806.621749Z"></a>
2010-07-29T18:28:06.621749Z Ray Johnston</strong></p>
<blockquote>
<pre>
Add a comment recommending -sstdout=%stderr with -sOutputFile=- to prevent
PostScript files that print from messing up the output. Bug 691507.
</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-07-29T142919.627579Z"></a>
2010-07-29T14:29:19.627579Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable left over from removal of pattern_cache_alt.

No expected changes.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-07-29T140539.594612Z"></a>
2010-07-29T14:05:39.594612Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : try not to write out invalid xref

Exposed by bug #691503. There are circumstances under which we create a reference to a
/Page object which does not yet exist (creating an outline tree for example). In this
case we create a reference to the page, and set its initial offset to the current
position in the PDF file. When we later write the real object we update the position
to reflect the point in the file where it is actually stored.

However, if we don't actually ever write the object (in the case above, because
LastPage is set before the destination page), then the object remains pointing to the
wrong location in the file. This is then written into the xref table, and this confuses
the current version of Ghostscript.

The patch creates new pages with an offset of 0 (which is always invalid because the
PDF header means the minimum offset for any object is 15). If the page is later
created then the offset gets updated. If it is not written, however, we now check in
the xref writing code to see if an object has an offset of 0. If it does, then we
break the xref table up and do not write an xref entry for the missing object.

Ghostscript is happy with this and processes the file.

NB the proper fix is to not emit the Outline entry for the page which will not be
present in the output, and a patch has been suggested to achieve this. This code has
some uses, however, as it may prevent this kind of problem in the future. It also
permits objects to be created and never referenced (presumably because they are never
used) without leaving invalid entries in the xref, which might be useful.

No expected differences.
</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-07-29T135953.090810Z"></a>
2010-07-29T13:59:53.090810Z Chris Liddell</strong></p>
<blockquote>
<pre>
Two changes for two primarily pdfwrite problems with FAPI/FT.

The first is to only replace whichever of BuildGlyph or BuildChar
procedures the original font actually contained, replacing both
regardless confused some of &quot;decoding&quot; code elsewhere in GS
(op_show_continue_dispatch()) and we ended up receiving a valid
glyph to render instead of notdef. In this case we ended up incorrectly
stroking a charpath (this was seen with Quark's Type 3 &quot;special effects&quot;
font). With rendering output this resulted in a boldening effect on the glyph,
in pdfwrite, the result was strange extra lines through the glyph.

The second change is to due pdfwrite's use of a unit matrix for some of
its work. This resulted in small glyph metrics rounding to zero within
Freetype, and pdfwrite thinking a glyph had a width of zero. So make
the scale value at which we consider a glyph to be &quot;small&quot; an order of magnitude
larger, which gets compensated for in the calculation of Freetype's final
matrix.

Unfortunately this does cause ~2600 differences in the cluster tests: some
are progressions, most are pixel differences due to rounding differences
because the scaling numbers have changed in Freetype.

Fixes Bug 691383

</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T184446.282683Z"></a>
2010-07-28T18:44:46.282683Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug #691493. Revert some of the work done for gs_2_colors.

I had needlessly attempted to have 2 pattern_cache's, one for stroking
colors and one for non-stroking colors. Given that the pattern_cache is
indexed by color id number, this is not necessary as all the data can
live happily in just one instance.

This removes the problem seen in the bug (where it was getting into an
infinite loop trying to populate the cache).

Local cluster testing shows this produces 57 differences, all (I think)
non-determinisms.


</pre>
<p>[base/gsstate.c base/gxistate.h base/gsistate.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T123751.588339Z"></a>
2010-07-28T12:37:51.588339Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device &quot;cups&quot;: Improved support for rendering jobs with high memory demands.

Let Ghostscript determine the memory buffer sizes automatically (as it
does with all the other output devices) if the environment variable
RIP_MAX_CACHE is not set, zero, or does not begin with a number (like
&quot;auto&quot;). If RIP_MAX_CACHE defines a valid value, use the actual value
for BufferSpace and not 1/10 of it. MaxBitmap is the maximum buffer
size to be used when rendering in full page mode, BufferSpace is the
buffer size used in banding mode. Banding mode is used if MaxBitmap is
too small to hold one page. Bug 691499.

</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-07-28T092249.016213Z"></a>
2010-07-28T09:22:49.016213Z Robin Watts</strong></p>
<blockquote>
<pre>
Add new gp_thread_start, gp_thread_finish abstraction, and deprecate old
gs_create_thread function. Adapt multiple rendering thread code to use
this new style instead. Hopefully this should solve the problems seen
in rare cases when a test thread doesn't get scheduled until after the
DLL has exited and the code isn't around any more.

No expected differences.

This code has been tested with MSVC and on linux with pthreads. While it
should work with Borland and Watcom (as all the headers appear consistent)
I have not been able to properly test it. Therefore the code is currently
configured to fall back to the old code, thus hopefully guaranteeing that
this commit won't make the operation under Borland/Watcom any worse than
it is now. This fallback is controlled by a single define for each of
these systems in gp_wsync.c, so it's easy to test. If users can report
success with the new code we can remove the fallback trivially.


</pre>
<p>[base/gp_wsync.c base/gxclthrd.c base/gp_nsync.c base/gp_psync.c base/gxclthrd.h base/gpsync.h]</p>
</blockquote>

<p><strong><a name="2010-07-28T073652.403693Z"></a>
2010-07-28T07:36:52.403693Z Ken Sharp</strong></p>
<blockquote>
<pre>
As pointed out by SaGS in Bug #691440, comment 5(C) there was a typo in revision 11498,
a '&gt;&gt;' was accidentally dropped form the batch file.
</pre>
<p>[lib/ps2pdf.bat]</p>
</blockquote>

<p><strong><a name="2010-07-27T071003.221027Z"></a>
2010-07-27T07:10:03.221027Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add missing free of the new bitmap data.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-27T070247.392994Z"></a>
2010-07-27T07:02:47.392994Z Chris Liddell</strong></p>
<blockquote>
<pre>
Slightly revise comment for why we might need to create a new bitmap
in fapi_finish_render_aux()

No cluster differences expected.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-26T084833.786696Z"></a>
2010-07-26T08:48:33.786696Z Chris Liddell</strong></p>
<blockquote>
<pre>
A much better solution for Bug 691328.

The bitmap data coming from a font scaler/renderer may not have its raster
alignment as Ghostscript expects, so in the event that is the case, create
a bitmap which is GS compatible in the FAPI layer, before calling any
further operations on it.

This reverts the previous &quot;hack&quot; from r11362.

No cluster differences expected.

</pre>
<p>[base/gsbitops.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-24T225746.607791Z"></a>
2010-07-24T22:57:46.607791Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Render 3D annotations (using appearance stream) on the printer device even
if Print flag (0x4) is not set. This is done following AR8 and AR9 example
but contrary to PDF 1.7 spec. Bug 691486, customer 532.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-23T200128.232264Z"></a>
2010-07-23T20:01:28.232264Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Make *clean targets remove generated tif*.h files. Bug 691485.
</pre>
<p>[base/gs.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T190145.196186Z"></a>
2010-07-23T19:01:45.196186Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove .dividesfnts procedure, which is not needed by PS interpreter after
the introduction and use of string_array_access_proc() way back in
revision 176. FreeType doesn't require a particular way to split sfnts
either. ps2write includes procedures to create a well formed Type 42 from
a TrueType font.

The error is caused by .dividesfnts only spliting strings when the split
offset is even. The sample file has a *long* run of cases where the split
offsets are odd. When an even offset is finally found, the number of buffered
bytes exceeds the maximum length of the string causing /rangecheck error.
Thanks to Chris Liddell for the analysis of the problem.
Bug 691473, customer 532.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-07-23T092028.484085Z"></a>
2010-07-23T09:20:28.484085Z Chris Liddell</strong></p>
<blockquote>
<pre>
Commit the correct change for Bug 691427



</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T082243.299979Z"></a>
2010-07-23T08:22:43.299979Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change the gsicc* targets from using GCFLAGS to CFLAGS. This ensure that the
options for building .so objects are correct.

Additionally, add the extra dependencies to the sodebug target so it works
correctly.

No cluster differences expected.

Bug 691427

</pre>
<p>[base/lib.mak base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-07-23T025737.996803Z"></a>
2010-07-23T02:57:37.996803Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Handle the case when, contrary to the spec, default viewing optional content
configuration dictionary has /BaseState attribute equal /OFF. Mark all OCGs
/OFF and unmark ON UCGs. Bug 691491, customer 532.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-07-21T192614.458296Z"></a>
2010-07-21T19:26:14.458296Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691478

Note that string objects that are maintained as user params must be either
allocated in non-gc memory or be a constant in the executable. The problem stems
from the way userparams are retained during garbage collection in a param_list
(collected by currentuserparams).  For some reason this param_list does not get
the pointers to strings relocated during the GC. Note that the param_dict itself
is correctly updated by reloc, it is just the pointers to the strings in the
param_list that are not traced and updated. In this particular case, ICCProfilesDir
sets a string in the icc_manager. When a reclaim occurs, the string is relocated
(when in non-gc memory and when it is noted to the gc with the proper object
descriptor).  Then if a set_icc_directory occurs, the user params pointer has NOT
been updated and validation problems will occur.  Fix for this was to make the string
not known to the GC and to allocate in non-gc memory.  When icc manager is deallocated,
the string is also deallocated.</pre>
<p>[base/gsicc_manage.c psi/zusparam.c]</p>
</blockquote>

<p><strong><a name="2010-07-21T000316.900862Z"></a>
2010-07-21T00:03:16.900862Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that non-isolated transparency groups are rendered correctly.  This fixes a
rendering issue with fts_25_2524 and with a few in the test suite.  A future optimization
will be to avoid the extra buffer push if the blend mode is normal, since in that case we
can draw directly into the parent buffer.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-20T094634.095118Z"></a>
2010-07-20T09:46:34.095118Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Add support for user defined huffman table.

This code adds support for segment type 53 segments, which supplies
inline huffman code table.  Bug 689853.

Many thanks to Justin Greer.


</pre>
<p>[jbig2dec/jbig2_segment.c jbig2dec/jbig2_huffman.c jbig2dec/jbig2_text.c jbig2dec/jbig2_symbol_dict.c jbig2dec/jbig2_huffman.h]</p>
</blockquote>

<p><strong><a name="2010-07-20T082305.218485Z"></a>
2010-07-20T08:23:05.218485Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Catching up to the latest jbig2dec source.

This includes following jbig2dec git commits:

commit d26c7e4f39f76fe70cc61d6dc14d05a042a9be48
Author: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;
Date:   Tue Jul 20 08:01:29 2010 +0000

Fix jbig2_image_set_pixel function prototype

The declaration of jbig2_image_set_pixel was differenct between
jbig2_image.h and jbig2_image.c (int value vs bool value).  And
prevented compiling it by MSVC comiler in C++ mode.
This patch fixes it.  Bug #691461.

commit c5d61c78c0de785b74b86d4e5298e3cc7b9e2b68
Author: Masaki Ushizaka &lt;masaki@ghostscript.com&gt;
Date:   Fri Jul 16 09:13:41 2010 +0000

A little fix to allocating memory size

commit e12fa07da845515911db8be2f7cfa8ef551061ba
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:49:09 2010 +0200

Use the jbig2_new and jbig2_renew macros instead of calling
jbig2_alloc and jbig2_realloc directly. Also adds a few typecasts
and #defines required to compile the source as C++.

commit 31dd7ef66dbd1c34df08365aa3c36e6391617f37
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:42:38 2010 +0200

Update VERSION define in config_win32.h

commit 941b73315a166fe07e0f1a1b81171477285280f7
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:41:46 2010 +0200

Add Makefile.unix -- a simple makefile for unix-like systems.

commit f6066822041bbffd7169fd4bfc19c48daae8f155
Author: Tor Andersson &lt;tor.andersson@gmail.com&gt;
Date:   Thu Jul 15 00:35:58 2010 +0200

Fix memory leak of the word stream struct.


No visible difference expected.




</pre>
<p>[jbig2dec/config_win32.h jbig2dec/jbig2.c jbig2dec/jbig2_image_pbm.c jbig2dec/jbig2_metadata.c jbig2dec/jbig2_image.c jbig2dec/jbig2_huffman.c jbig2dec/jbig2_text.c jbig2dec/jbig2_priv.h jbig2dec/jbig2_image.h jbig2dec/jbig2_refinement.c jbig2dec/jbig2dec.c jbig2dec/jbig2_arith_iaid.c jbig2dec/jbig2_halftone.c jbig2dec/Makefile.unix jbig2dec/jbig2_segment.c jbig2dec/jbig2_arith.c jbig2dec/jbig2_symbol_dict.c jbig2dec/jbig2_generic.c jbig2dec/jbig2_page.c]</p>
</blockquote>

<p><strong><a name="2010-07-20T055604.938511Z"></a>
2010-07-20T05:56:04.938511Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Remove noisy warnings if embedded icc profile is not valid.  In those
cases, we use the default and move on.  </pre>
<p>[psi/zicc.c]</p>
</blockquote>

<p><strong><a name="2010-07-19T212235.957060Z"></a>
2010-07-19T21:22:35.957060Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug691474.  Source of error was due to icc hash code being read from clist
after the transfer function.  It should have been read prior to the transfer function.
This was the first file we have seen that had a soft mask with a transfer function.
Also fix for rendering of this file.  The softmasks only uses the alpha channel as
opposed to the luminosity of the object.  Progression with CityMap-evnice.pdf in test
suite.  That file must have a alpha style softmask.</pre>
<p>[base/gdevp14.c base/gstparam.h]</p>
</blockquote>

<p><strong><a name="2010-07-19T154536.535276Z"></a>
2010-07-19T15:45:36.535276Z Chris Liddell</strong></p>
<blockquote>
<pre>

Update trunk to FreeType 2.4.1

The important change (from Ghostscript's point of view) is that the previously
patented TrueType hinting operations have been enabled by default after the
expiration of the patents in question.

This change (the hinting being enabled) causes 3060 non-pdfwrite cluster
changes, and 655 pdfwrite changes - these are expected, and are
progressions.

</pre>
<p>[freetype/builds/unix/config.sub freetype/src/pshinter/pshglob.c freetype/src/base/ftpfr.c freetype/src/pshinter/pshglob.h freetype/src/type1/t1objs.c freetype/docs/DEBUG freetype/builds/win32/w32-dev.mk freetype/src/type1/t1objs.h freetype/docs/reference/ft2-gasp_table.html freetype/src/pshinter freetype/docs/INSTALL.CROSS freetype/src freetype/docs/reference/ft2-lcd_filtering.html freetype/src/truetype/ttgload.c freetype/builds/win32/win32-def.mk freetype/src/type1 freetype/builds/wince/vc2005-ce freetype/src/truetype/ttgload.h freetype/src/tools/ftrandom/ftrandom.c freetype/devel/ft2build.h freetype/src/tools/docmaker/formatter.py freetype/src/autofit/Jamfile freetype/src/bdf/module.mk freetype/docs/reference/ft2-glyph_stroker.html freetype/include/freetype/config/ftheader.h freetype/src/cff/Jamfile freetype/src/cff/cffparse.c freetype/src/raster/ftraster.c freetype/src/cff/cffparse.h freetype/src/cff/cffcmap.c freetype/src/raster/ftraster.h freetype/src/cff/cffcmap.h freetype/src/raster/ftrend1.c freetype/include/freetype/internal/services/svttglyf.h freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/src/raster/ftrend1.h freetype/docs/INSTALL.ANY freetype/src/psnames/module.mk freetype/src/base/ftutil.c freetype/src/autofit/afglobal.c freetype/src/cache/ftcsbits.c freetype/builds/mac/ftmac.c freetype/src/autofit/afglobal.h freetype/src/pcf/rules.mk freetype/src/base/ftsystem.c freetype/src/cache/ftcsbits.h freetype/builds/amiga/include/freetype freetype/builds/mac/FreeType.m68k_cfm.make.txt freetype/src/psaux/psaux.c freetype/builds/ansi freetype/src/cff/module.mk freetype/src/pshinter/rules.mk freetype/src/pcf/pcfread.c freetype/src/bdf/bdflib.c freetype/docs/reference/ft2-list_processing.html freetype/include/freetype/ftcache.h freetype/src/pcf/pcfread.h freetype/builds/unix/ft2unix.h freetype/src/raster/Jamfile freetype/builds/atari/FREETYPE.PRJ freetype/src/gzip/rules.mk freetype/src/pshinter/pshalgo.c freetype/include/freetype/internal/services/svcid.h freetype/include/freetype/ftincrem.h freetype/src/lzw freetype/builds/compiler/bcc-dev.mk freetype/src/pshinter/pshalgo.h freetype/src/tools/test_afm.c freetype/src/psnames/psnamerr.h freetype/src/cache/ftccache.c freetype/src/cache/ftcmru.c freetype/include/freetype/config/ftstdlib.h freetype/src/cid/cidtoken.h freetype/vms_make.com freetype/include/freetype/freetype.h freetype/docs/INSTALL.UNIX freetype/src/cache/ftccache.h freetype/src/cache/ftcmru.h freetype/src/tools/cordic.py freetype/src/pfr/Jamfile freetype/src/pfr/pfrload.c freetype/src/pfr/pfr.c freetype/builds/amiga/src freetype/src/pfr/pfrload.h freetype/include/freetype/fterrdef.h freetype/builds/detect.mk freetype/src/tools/ftrandom freetype/docs/reference/ft2-cache_subsystem.html freetype/builds/win32/vc2005 freetype/src/type1/t1gload.c freetype/builds/win32/vc2008 freetype/src/base/ftbbox.c freetype/builds/dos freetype/src/otvalid/otvgdef.c freetype/src/type1/t1gload.h freetype/include/freetype/ftsystem.h freetype/docs/reference/ft2-glyph_variants.html freetype/src/bdf/bdferror.h freetype/builds/unix/aclocal.m4 freetype/src/gxvalid/rules.mk freetype/docs/reference/ft2-bdf_fonts.html freetype/src/pcf/pcf.c freetype/src/otvalid/rules.mk freetype/include/freetype/internal/services/svotval.h freetype/src/bdf/Jamfile freetype/src/gxvalid/gxvbsln.c freetype/src/pfr/pfrdrivr.c freetype/src/pcf/pcf.h freetype/builds/compiler/win-lcc.mk freetype/src/type1/Jamfile freetype/src/pfr/pfrdrivr.h freetype/src/pcf/pcferror.h freetype/src/sfnt/ttsbit0.c freetype/src/base/ftmac.c freetype/builds/mac/FreeType.ppc_classic.make.txt freetype/src/base/ftgloadr.c freetype/src/base/ftbase.c freetype/docs freetype/builds/win32/vc2005/freetype.vcproj freetype/docs/reference/.gitignore freetype/src/base/ftbase.h freetype/builds/compiler freetype/src/gxvalid/gxvmort0.c freetype/src/bdf/bdf.c freetype/builds/amiga/src/base/ftsystem.c freetype/src/bdf/bdf.h freetype/src/cff/cff.c freetype/src/gxvalid/gxvalid.c freetype/builds/win32/w32-lcc.mk freetype/include/freetype/internal/services freetype/include/freetype/internal/psaux.h freetype/src/gxvalid/gxvalid.h freetype/autogen.sh freetype/src/base/fttype1.c freetype/docs/reference/ft2-type1_tables.html freetype/src/autofit/afmodule.c freetype/builds/unix/detect.mk freetype/include freetype/src/autofit/afmodule.h freetype/builds/vms freetype/src/pfr/pfrcmap.c freetype/objs/README freetype/builds/dos/dos-wat.mk freetype/builds/exports.mk freetype/src/pfr/pfrcmap.h freetype/src/psaux/Jamfile freetype/src/cff/cffpic.c freetype/builds/amiga/smakefile freetype/src/base/ftdebug.c freetype/src/gzip/inflate.c freetype/src/cff/cffpic.h freetype/src/type1/t1driver.c freetype/src/otvalid/otvbase.c freetype/include/freetype/ftmoderr.h freetype/src/gxvalid/gxvopbd.c freetype/src/type1/t1driver.h freetype/builds/win32/vc2005/freetype.sln freetype/builds/mac freetype/builds/atari freetype/builds/compiler/visualage.mk freetype/builds/newline freetype/builds/vms/ftsystem.c freetype/src/base/basepic.c freetype/src/type1/t1parse.c freetype/src/otvalid/otvmath.c freetype/src/gxvalid/gxvmort1.c freetype/src/base/basepic.h freetype/src/psnames/rules.mk freetype/src/type1/t1parse.h freetype/docs/reference/ft2-winfnt_fonts.html freetype/src/pcf/Jamfile freetype/src/gzip/Jamfile freetype/src/base/ftbdf.c freetype/builds/mac/ascii2mpw.py freetype/builds/unix/.gitignore freetype/src/raster/module.mk freetype/src/type1/t1afm.c freetype/src/cid/cidobjs.c freetype/include/ft2build.h freetype/include/freetype/internal/services/svgxval.h freetype/include/freetype/internal/ftrfork.h freetype/builds/win32/ftdebug.c freetype/src/tools freetype/src/type1/t1afm.h freetype/src/type1/t1tokens.h freetype/src/pshinter/pshrec.c freetype/src/cid/cidobjs.h freetype/builds/dos/dos-emx.mk freetype/src/pshinter/pshrec.h freetype/src/autofit/autofit.c freetype/builds/win32/w32-wat.mk freetype/builds/wince/vc2008-ce freetype/src/truetype/ttobjs.c freetype/include/freetype/ftchapters.h freetype/src/type1/t1errors.h freetype/include/freetype/ftlzw.h freetype/src/otvalid/otvgsub.c freetype/src/truetype/ttobjs.h freetype/src/tools/apinames.c freetype/src/winfonts/fnterrs.h freetype/src/cache/ftcache.c freetype/builds/win32/visualc/freetype.sln freetype/include/freetype/ftglyph.h freetype/docs/reference/ft2-gx_validation.html freetype/builds/vms/ftconfig.h freetype/builds/win32/vc2005/index.html freetype/builds/unix/unixddef.mk freetype/src/raster/rasterrs.h freetype/src/autofit/aflatin2.c freetype/builds/dos/detect.mk freetype/src/type42/Jamfile freetype/src/base/ftpic.c freetype/builds/wince freetype/src/autofit/aflatin2.h freetype/builds/win32/w32-mingw32.mk freetype/include/freetype/fttypes.h freetype/src/cache/ftcglyph.c freetype/src/gxvalid/gxvmort2.c freetype/builds/link_std.mk freetype/src/cache/ftcglyph.h freetype/src/pshinter/pshinter.c freetype/src/cache/Jamfile freetype/src/tools/test_bbox.c freetype/include/freetype/internal/services/svpsinfo.h freetype/src/type42/t42types.h freetype/builds/os2/os2-dev.mk freetype/builds/mac/ftlib.prj.xml freetype/src/gxvalid/gxvmort.c freetype/src/raster/rastpic.c freetype/builds/win32/vc2008/index.html freetype/src/gxvalid/gxvmort.h freetype/src/gxvalid/README freetype/src/raster/rastpic.h freetype/src/tools/docmaker/docbeauty.py freetype/builds/amiga/include freetype/docs/reference/ft2-incremental.html freetype/src/gzip/ftgzip.c freetype/include/freetype/ftcid.h freetype/include/freetype/internal/services/svpfr.h freetype/builds/compiler/watcom.mk freetype/builds/dos/dos-gcc.mk freetype/src/sfnt/module.mk freetype/src/psnames freetype/docs/INSTALL freetype/src/type1/t1load.c freetype/src/gzip/inftrees.c freetype/src/gzip freetype/builds/amiga/src/base/ftdebug.c freetype/docs/INSTALL.VMS freetype/src/type1/t1load.h freetype/src/gzip/inftrees.h freetype/src/pfr/pfrsbit.c freetype/src/gxvalid/gxvfeat.c freetype/src/cff/cfftoken.h freetype/include/freetype/internal/ftgloadr.h freetype/docs/PROBLEMS freetype/builds/wince/vc2008-ce/freetype.sln freetype/src/pfr/pfrsbit.h freetype/src/truetype/Jamfile freetype/src/gxvalid/gxvfeat.h freetype/builds/unix/configure freetype/docs/reference/ft2-basic_types.html freetype/src/otvalid freetype/src/gxvalid/gxvkern.c freetype/docs/INSTALL.MAC freetype/src/cid/Jamfile freetype/include/freetype/ftmm.h freetype/builds/symbian/freetype.mmp freetype/src/base/ftglyph.c freetype/src/sfnt freetype/src/otvalid/otverror.h freetype/docs/UPGRADE.UNIX freetype/src/autofit/afcjk.c freetype/src/autofit/aftypes.h freetype/src/sfnt/sfdriver.c freetype/src/psaux/afmparse.c freetype/src/autofit/afcjk.h freetype/src/sfnt/sfobjs.c freetype/src/base/ftobjs.c freetype/src/sfnt/sfdriver.h freetype/src/psaux/afmparse.h freetype/src/sfnt/sfobjs.h freetype/src/pfr/rules.mk freetype/docs/reference/ft2-sfnt_names.html freetype/builds/win32/visualc/freetype.vcproj freetype/builds/atari/deflinejoiner.awk freetype/src/psaux/module.mk freetype/src/base/ftstroke.c freetype/src/base/ftfstype.c freetype/docs/GPL.TXT freetype/src/base/ftbitmap.c freetype/src/pshinter/pshpic.c freetype/src/winfonts freetype/builds/dos/dos-def.mk freetype/src/pshinter/pshpic.h freetype/builds/win32/w32-gcc.mk freetype/src/psnames/pstables.h freetype/src/sfnt/rules.mk freetype/builds/wince/vc2005-ce/index.html freetype/src/autofit/afpic.c freetype/docs/raster.txt freetype/builds/atari/FNames.SIC freetype/builds/atari/ATARI.H freetype/src/autofit/afpic.h freetype/src/otvalid/otvgpos.c freetype/docs/reference/ft2-multiple_masters.html freetype/src/cff/cffdrivr.c freetype/docs/reference/ft2-base_interface.html freetype/src/cid/cidriver.c freetype/builds/mac/README freetype/src/otvalid/otvgpos.h freetype/include/freetype/ftgasp.h freetype/builds/unix/unix-cc.in freetype/src/autofit/afindic.c freetype/src/cff/cffdrivr.h freetype/src/cid/cidriver.h freetype/src/autofit/afindic.h freetype/docs/INSTALL.GNU freetype/src/raster freetype/builds/unix/ft-munmap.m4 freetype/src/winfonts/module.mk freetype/src/sfnt/ttkern.c freetype/docs/reference/ft2-index.html freetype/src/gzip/infutil.c freetype/src/sfnt/sferrors.h freetype/src/psaux/t1cmap.c freetype/src/sfnt/ttkern.h freetype/src/gxvalid/gxvmort4.c freetype/src/gzip/infutil.h freetype/include/freetype/ttnameid.h freetype/src/psaux/t1cmap.h freetype/builds/os2/detect.mk freetype/src/gzip/zconf.h freetype/docs/reference/ft2-user_allocation.html freetype/src/base/ftpatent.c freetype/src/truetype/rules.mk freetype/src/truetype freetype/src/base/ftadvanc.c freetype/src/tools/docmaker/tohtml.py freetype/builds/unix/unix-dev.mk freetype/src/otvalid/otvcommn.c freetype/src/otvalid/otvalid.c freetype/include/freetype/config/ftmodule.h freetype/src/otvalid/otvcommn.h freetype/src/otvalid/otvalid.h freetype/include/freetype/ftxf86.h freetype/include/freetype/internal/ftserv.h freetype/Jamrules freetype/src/type1/module.mk freetype/builds/win32/vc2008/freetype.sln freetype/src/base/ftapi.c freetype/docs/VERSION.DLL freetype/docs/LICENSE.TXT freetype/docs/reference/ft2-gzip.html freetype/builds/compiler/emx.mk freetype/include/freetype/ftstroke.h freetype/builds/unix/unix.mk freetype/include/freetype/ftlist.h freetype/include/freetype/ftbitmap.h freetype/objs/.gitignore freetype/src/type42/t42parse.c freetype/src/bdf/bdfdrivr.c freetype/modules.cfg freetype/docs/reference/ft2-toc.html freetype/docs/reference/ft2-computations.html freetype/builds/win32/visualce/freetype.dsp freetype/ChangeLog.20 freetype/src/cid/ciderrs.h freetype/src/type42/t42parse.h freetype/ChangeLog.21 freetype/builds/unix/configure.ac freetype/ChangeLog.22 freetype/builds/unix/ftconfig.in freetype/builds/beos freetype/ChangeLog.23 freetype/src/bdf/bdfdrivr.h freetype/builds/win32/visualce/freetype.dsw freetype/include/freetype/tttables.h freetype/docs/reference/ft2-quick_advance.html freetype/builds/unix/freetype2.in freetype/src/cid/module.mk freetype/src/autofit/afdummy.c freetype/src/gxvalid freetype/docs/reference/ft2-mac_specific.html freetype/src/tools/chktrcmp.py freetype/include/freetype/internal/services/svxf86nm.h freetype/src/autofit/afdummy.h freetype/src/pcf/pcfdrivr.c freetype/include/freetype/internal/ftobjs.h freetype/builds/symbian/bld.inf freetype/src/gxvalid/gxvmort5.c freetype/src/psnames/Jamfile freetype/src/pcf/pcfdrivr.h freetype/builds/unix/ftsystem.c freetype/docs/MAKEPP freetype/Jamfile freetype/builds/win32/visualce/index.html freetype/builds/compiler/gcc-dev.mk freetype/include/freetype/ftotval.h freetype/src/tools/test_trig.c freetype/src/tools/docmaker/content.py freetype/include/freetype/ftadvanc.h freetype/builds freetype/include/freetype/internal/services/svpostnm.h freetype/builds/unix/mkinstalldirs freetype/src/cff/rules.mk freetype/src/gzip/zlib.h freetype/src/type42/t42error.h freetype/src/smooth/module.mk freetype/src/sfnt/sfnt.c freetype/docs/reference/ft2-truetype_tables.html freetype/builds/compiler/gcc.mk freetype/builds/unix/config.guess freetype/src/otvalid/Jamfile freetype/src/autofit/afloader.c freetype/include/freetype/internal/services/svkern.h freetype/builds/beos/beos-def.mk freetype/src/autofit/afloader.h freetype/src/cache/ftcerror.h freetype/src/sfnt/Jamfile freetype/src/psaux/psobjs.c freetype/src/gzip/infcodes.c freetype/src/truetype/ttpic.c freetype/src/psaux/psobjs.h freetype/docs/reference/ft2-header_file_macros.html freetype/src/pshinter/pshnterr.h freetype/docs/reference/ft2-ot_validation.html freetype/src/base/ftcalc.c freetype/src/gzip/infcodes.h freetype/src/truetype/ttpic.h freetype/src/bdf/rules.mk freetype/include/freetype/internal/tttypes.h freetype/src/psaux freetype/builds/unix/freetype2.m4 freetype/docs/reference/ft2-outline_processing.html freetype/src/gxvalid/gxvmorx0.c freetype/include/freetype/internal/ftvalid.h freetype/include/freetype/fterrors.h freetype/builds/win32/visualc/freetype.dsp freetype/src/gzip/infblock.c freetype/builds/win32/visualc/freetype.dsw freetype/src/base/ftlcdfil.c freetype/include/freetype/internal/ftmemory.h freetype/src/type1/type1.c freetype/include/freetype/ftpfr.h freetype/src/gzip/infblock.h freetype/src/type42/rules.mk freetype/src/tools/ftrandom/Makefile freetype/src/pshinter/module.mk freetype/builds/amiga/include/freetype/config/ftmodule.h freetype/src/gxvalid/gxvmorx.c freetype/docs/formats.txt freetype/builds/amiga/makefile.os4 freetype/src/cff/cffobjs.c freetype/src/smooth/ftsmooth.c freetype/src/gxvalid/gxvmorx.h freetype/include/freetype/ftoutln.h freetype/src/cff/cffobjs.h freetype/docs/reference/ft2-truetype_engine.html freetype/builds/beos/detect.mk freetype/src/smooth/ftsmooth.h freetype/include/freetype/ftsynth.h freetype/src/winfonts/rules.mk freetype/src/tools/ftrandom/README freetype/src/pcf freetype/docs/CHANGES freetype freetype/src/base freetype/src/base/ftotval.c freetype/include/freetype/tttags.h freetype/src/autofit freetype/src/truetype/module.mk freetype/include/freetype/internal/autohint.h freetype/src/tools/glnames.py freetype/src/sfnt/ttload.c freetype/src/gxvalid/gxvfgen.c freetype/builds/atari/gen-purec-patch.sh freetype/src/sfnt/ttload.h freetype/src/pfr/pfrtypes.h freetype/docs/reference/ft2-system_interface.html freetype/builds/win32/w32-bcc.mk freetype/src/pcf/README freetype/src/gxvalid/gxvtrak.c freetype/include/freetype/internal/ftdriver.h freetype/objs freetype/include/freetype/ftgzip.h freetype/include/freetype/internal/services/svbdf.h freetype/src/base/ftrfork.c freetype/src/smooth/rules.mk freetype/src/base/rules.mk freetype/src/gxvalid/gxvmorx1.c freetype/src/autofit/afwarp.c freetype/src/cid/cidload.c freetype/include/freetype/ftgxval.h freetype/src/autofit/afwarp.h freetype/builds/win32/w32-intl.mk freetype/include/freetype/internal/services/svgldict.h freetype/src/cid/cidload.h freetype/src/gxvalid/gxvprop.c freetype/docs/reference/ft2-raster.html freetype/include/freetype/ftlcdfil.h freetype/src/type42/type42.c freetype/src/tools/docmaker/sources.py freetype/src/raster/rules.mk freetype/src/truetype/ttgxvar.c freetype/src/pshinter/Jamfile freetype/src/truetype/ttdriver.c freetype/src/gxvalid/Jamfile freetype/src/truetype/ttgxvar.h freetype/src/pfr/pfrgload.c freetype/builds/unix/unix-lcc.mk freetype/src/Jamfile freetype/src/pshinter/pshmod.c freetype/src/autofit/aflatin.c freetype/src/truetype/ttdriver.h freetype/src/base/ftsnames.c freetype/src/pfr/pfrgload.h freetype/src/pshinter/pshmod.h freetype/include/freetype/internal/ftcalc.h freetype/include/freetype/ftrender.h freetype/builds/unix freetype/src/base/ftgasp.c freetype/src/autofit/aflatin.h freetype/src/base/ftdbgmem.c freetype/src/smooth/ftspic.c freetype/include/freetype/t1tables.h freetype/src/cid/cidgload.c freetype/src/base/ftoutln.c freetype/src/smooth/ftspic.h freetype/builds/compiler/intelc.mk freetype/src/base/ftwinfnt.c freetype/src/base/ftsynth.c freetype/src/cid/cidgload.h freetype/include/freetype/internal/internal.h freetype/src/sfnt/ttbdf.c freetype/src/lzw/ftlzw.c freetype/src/sfnt/ttbdf.h freetype/builds/win32/vc2008/freetype.vcproj freetype/builds/win32/w32-bccd.mk freetype/src/truetype/ttpload.c freetype/src/gxvalid/gxvmorx2.c freetype/src/truetype/ttinterp.c freetype/src/lzw/rules.mk freetype/src/truetype/ttpload.h freetype/src/base/ftxf86.c freetype/src/base/ftstream.c freetype/src/truetype/ttinterp.h freetype/src/sfnt/ttcmap.c freetype/builds/ansi/ansi.mk freetype/include/freetype/internal/services/svmm.h freetype/src/pfr freetype/builds/compiler/ansi-cc.mk freetype/src/sfnt/ttcmap.h freetype/src/gxvalid/module.mk freetype/src/gxvalid/gxvjust.c freetype/builds/toplevel.mk freetype/src/truetype/tterrors.h freetype/builds/win32 freetype/builds/symbian freetype/src/pcf/pcfutil.c freetype/src/cid/type1cid.c freetype/src/pcf/pcfutil.h freetype/src/base/ftgxval.c freetype/builds/win32/visualce freetype/include/freetype/internal/pshints.h freetype/builds/amiga freetype/builds/amiga/src/base freetype/builds/win32/w32-icc.mk freetype/src/sfnt/ttmtx.c freetype/src/psnames/psmodule.c freetype/src/sfnt/ttmtx.h freetype/builds/wince/vc2008-ce/index.html freetype/src/psaux/psauxmod.c freetype/src/pfr/module.mk freetype/src/base/ftcid.c freetype/src/psnames/psmodule.h freetype/include/freetype/ftsnames.h freetype/src/psaux/psauxmod.h freetype/README.git freetype/configure freetype/src/gzip/inffixed.h freetype/src/bdf freetype/docs/reference/ft2-pfr_fonts.html freetype/src/sfnt/ttcmapc.h freetype/docs/reference freetype/builds/os2/os2-gcc.mk freetype/builds/compiler/bcc.mk freetype/builds/link_dos.mk freetype/docs/reference/ft2-cid_fonts.html freetype/include/freetype/ftwinfnt.h freetype/builds/unix/freetype-config.in freetype/src/pfr/pfrobjs.c freetype/src/base/Jamfile freetype/docs/release freetype/include/freetype/ftimage.h freetype/src/lzw/ftzopen.c freetype/src/pfr/pfrobjs.h freetype/src/lzw/Jamfile freetype/src/truetype/truetype.c freetype/Makefile freetype/src/base/fttrigon.c freetype/builds/win32/w32-vcc.mk freetype/src/lzw/ftzopen.h freetype/src/autofit/afhints.c freetype/builds/unix/install.mk freetype/src/autofit/afhints.h freetype/builds/win32/visualce/freetype.vcproj freetype/include/freetype/ftmac.h freetype/src/psaux/rules.mk freetype/src/type1/rules.mk freetype/src/cache/ftcimage.c freetype/src/psnames/pspic.c freetype/builds/atari/README.TXT freetype/src/cache/ftcimage.h freetype/include/freetype/config/ftconfig.h freetype/src/cid/cidparse.c freetype/src/psnames/pspic.h freetype/src/cff/cfferrs.h freetype/src/cid/cidparse.h freetype/docs/reference/ft2-version.html freetype/src/smooth/Jamfile freetype/src/tools/docmaker freetype/src/gzip/adler32.c freetype/src/tools/docmaker/.gitignore freetype/include/freetype/internal/sfnt.h freetype/docs/reference/README freetype/builds/compiler/unix-lcc.mk freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/builds/wince/ftdebug.c freetype/src/gzip/zutil.c freetype/src/sfnt/sfntpic.c freetype/builds/unix/unix-def.in freetype/src/winfonts/winfnt.h freetype/builds/os2/os2-def.mk freetype/src/smooth/smooth.c freetype/src/gzip/zutil.h freetype/src/sfnt/sfntpic.h freetype/devel freetype/src/smooth/ftgrays.c freetype/src/raster/ftmisc.h freetype/docs/reference/ft2-module_management.html freetype/src/gxvalid/gxvmorx4.c freetype/include/freetype/internal/pcftypes.h freetype/src/pfr/pfrerror.h freetype/src/smooth/ftgrays.h freetype/src/winfonts/Jamfile freetype/builds/beos/beos.mk freetype/src/raster/raster.c freetype/include/freetype/internal/services/svwinfnt.h freetype/docs/CUSTOMIZE freetype/include/freetype/config freetype/builds/unix/configure.raw freetype/include/freetype/internal/t1types.h freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/docs/reference/ft2-font_formats.html freetype/src/otvalid/module.mk freetype/include/freetype/internal/services/svpscmap.h freetype/ChangeLog freetype/include/freetype/fttrigon.h freetype/builds/win32/visualc freetype/src/cache/ftcmanag.c freetype/docs/FTL.TXT freetype/src/sfnt/ttsbit.c freetype/README freetype/src/cache/ftcmanag.h freetype/src/sfnt/ttsbit.h freetype/builds/mac/FreeType.ppc_carbon.make.txt freetype/builds/wince/vc2005-ce/freetype.sln freetype/docs/reference/ft2-sizes_management.html freetype/src/type42/t42drivr.c freetype/src/psaux/psconv.c freetype/include/freetype/ftbdf.h freetype/include/freetype/ftsizes.h freetype/src/type42/t42drivr.h freetype/src/cff freetype/include/freetype/internal/services/svtteng.h freetype/src/psaux/psconv.h freetype/include/freetype/internal/ftdebug.h freetype/src/tools/docmaker/docmaker.py freetype/src/gxvalid/gxverror.h freetype/src/autofit/module.mk freetype/include/freetype/internal/ftstream.h freetype/src/cff/cfftypes.h freetype/builds/modules.mk freetype/src/smooth freetype/docs/reference/ft2-bitmap_handling.html freetype/src/gxvalid/gxvmorx5.c freetype/src/gxvalid/gxvmod.c freetype/builds/freetype.mk freetype/include/freetype/internal/ftpic.h freetype/src/type42 freetype/src/gxvalid/gxvmod.h freetype/include/freetype/ftbbox.h freetype/src/otvalid/otvmod.c freetype/builds/unix/install-sh freetype/src/psnames/psnames.c freetype/builds/os2 freetype/src/cid/rules.mk freetype/src/psaux/psauxerr.h freetype/src/type42/t42objs.c freetype/src/otvalid/otvmod.h freetype/src/cache/ftccmap.c freetype/src/cache/ftcbasic.c freetype/src/cache freetype/src/smooth/ftsmerrs.h freetype/src/type42/t42objs.h freetype/include/freetype/internal/services/svttcmap.h freetype/version.sed freetype/builds/amiga/include/freetype/config/ftconfig.h freetype/src/psaux/t1decode.c freetype/docs/reference/ft2-glyph_management.html freetype/src/autofit/rules.mk freetype/src/tools/docmaker/utils.py freetype/builds/win32/visualc/index.html freetype/src/psaux/t1decode.h freetype/builds/ansi/ansi-def.mk freetype/src/otvalid/otvjstf.c freetype/src/type42/module.mk freetype/src/cff/cffgload.c freetype/src/autofit/aferrors.h freetype/src/gxvalid/gxvlcar.c freetype/builds/amiga/makefile freetype/include/freetype/internal/services/svsfnt.h freetype/src/bdf/README freetype/src/base/ftinit.c freetype/src/cff/cffgload.h freetype/src/cache/ftccback.h freetype/include/freetype/internal freetype/src/base/ftmm.c freetype/src/pcf/module.mk freetype/docs/TODO freetype/docs/reference/ft2-lzw.html freetype/src/tools/Jamfile freetype/builds/win32/detect.mk freetype/builds/unix/ltmain.sh freetype/src/autofit/afangles.c freetype/include/freetype/config/ftoption.h freetype/src/gxvalid/gxvcommn.c freetype/src/cff/cffload.c freetype/include/freetype freetype/src/autofit/afangles.h freetype/builds/compiler/visualc.mk freetype/src/gxvalid/gxvcommn.h freetype/src/cff/cffload.h freetype/builds/mac/FreeType.m68k_far.make.txt freetype/builds/amiga/include/freetype/config freetype/src/sfnt/ttpost.c freetype/src/sfnt/ttpost.h freetype/src/cid freetype/src/cache/rules.mk freetype/include/freetype/ttunpat.h freetype/builds/amiga/README freetype/include/freetype/ftmodapi.h freetype/include/freetype/internal/fttrace.h]</p>
</blockquote>

<p><strong><a name="2010-07-18T053008.091459Z"></a>
2010-07-18T05:30:08.091459Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Implement halftones type 6, 10, 16 in PDF interpreter.
Use default halftone when the halftone type is incorrect.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-18T000337.786299Z"></a>
2010-07-18T00:03:37.786299Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize enumerated color space #12 as CMYK following JPX baseline spec.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-07-17T212339.853613Z"></a>
2010-07-17T21:23:39.853613Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Re-implement handling of named page sizes to avoid dependence on
the definitions of compatibility operators (a4, letter, etc.)
in userdict. Bug 691458.
</pre>
<p>[Resource/Init/gs_init.ps Resource/Init/gs_setpd.ps Resource/Init/gs_statd.ps]</p>
</blockquote>

<p><strong><a name="2010-07-17T000709.985181Z"></a>
2010-07-17T00:07:09.985181Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove unused variables CC_D and CC_INT from all makefiles.
</pre>
<p>[psi/os2.mak base/unixhead.mak base/bcwin32.mak base/openvms.mak base/watcw32.mak base/msvccmd.mak base/wccommon.mak]</p>
</blockquote>

<p><strong><a name="2010-07-16T204049.337914Z"></a>
2010-07-16T20:40:49.337914Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix the bug that prevented recognition of GenericResourceDir/Category/Name
as a valid resource path and required inclusion of GenericResourceDir in
the search path to find the same resource by searching.

New procedure does the following:
1. Returns GenericResourceDir/Category/Name if it exists.
2. Searches for Category/Name in LIBPATH. Returns actual path if found.
3. For non-existing resources return the same path as (1).

Old implementation added GenericResourceDir twice, didn't close files,
used system memory, called expensive procedures twice, etc.

Regression testing shows trivial differences in 23-07.ps, which prints
the length of ResourceFileName procedure.
This is a partial fix for bug 691408.
</pre>
<p>[Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-07-16T195803.971410Z"></a>
2010-07-16T19:58:03.971410Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Prepend icc directory to device profile name if the default name is
used so that we have it during clist reading.  This is a fix for the
iccprofiles/ problem in 691408 when compile inits is not used.  Also,
fix so that the profile name is allocated in non-gc memory.  This was
a source of issues with the userparams dict not seeming to be traced
or at least not getting its members relocated if a profile in the icc
manager was relocated.  This fixes the breaking of the psdcmyk device
in rev  11499.  Also removal of spurious warning messages.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-07-15T204206.487509Z"></a>
2010-07-15T20:42:06.487509Z Ray Johnston</strong></p>
<blockquote>
<pre>
Change pdf14_put_image so that the gx_default_begin_typed_image will
be able to call the device's 'begin_image' which is often hooked for
device specific (hardware accelerated) image rendering. This avoids
the default image rendering which results in LOTS of fill_rectangle
calls. Found with customer 532.
</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-15T192838.670595Z"></a>
2010-07-15T19:28:38.670595Z Ray Johnston</strong></p>
<blockquote>
<pre>
The other half of the version.mak change.
</pre>
<p>[Resource/Init/gs_init.ps]</p>
</blockquote>

<p><strong><a name="2010-07-15T181417.190964Z"></a>
2010-07-15T18:14:17.190964Z Ray Johnston</strong></p>
<blockquote>
<pre>
Update version to 9.00 PRE-RELEASE (with a bogus date, but before Aug 1)
This will serve to notify folks what the next release will be (not 8.72)
</pre>
<p>[base/version.mak]</p>
</blockquote>

<p><strong><a name="2010-07-15T144939.770856Z"></a>
2010-07-15T14:49:39.770856Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Improve Ghostscript operation when current directory is not included in the
search path.
1. Make file path separators at the end of LIBPATH entries optional to reduce
the number of trivial configuration errors.
2. Search LIBPATH list for valid iccprofiles/ directory as a sibling to
(Resource) and set it as a default to ensure a valid default.
This code follows /GenericResourceDir example.
3. Make sure that the path name derived from /GenericFontDir is is not
searched but other font file names are searched. Earlier code relied on
a feature of .libfile not searching for an absolute path and failed
when the path was relative.
Partial fix for bugs 691350, 691408.
</pre>
<p>[Resource/Init/gs_lev2.ps Resource/Init/gs_fonts.ps Resource/Init/gs_res.ps]</p>
</blockquote>

<p><strong><a name="2010-07-15T054255.376283Z"></a>
2010-07-15T05:42:55.376283Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add copying default ICC profiles to disk-install location. This is necessary
for the builds with COMPILE_INITS=0, which looks for ICC profiles on disk.
Thanks to Hin-Tak for the patch. Bug 691449.
</pre>
<p>[base/unixinst.mak]</p>
</blockquote>

<p><strong><a name="2010-07-14T212533.726848Z"></a>
2010-07-14T21:25:33.726848Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Allow the CUPS Raster backend alternatively output compressed (version 2)
CUPS Raster data (bug #689885).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T183029.088597Z"></a>
2010-07-13T18:30:29.088597Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure the local variable into which we read Truetype cmap table data
(platform ID, encoding ID etc) is actually large enough to hold all
the data we read into it.

Bug 691452 (part 1)

No cluster differences expected.</pre>
<p>[base/gsfcid2.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T082456.010563Z"></a>
2010-07-13T08:24:56.010563Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the documentation on producing PDF/X to make it clear that -sProcessColorModel
is an absolute requirement, even when using -dUseCIEColor, and that the PDFA_def.ps
file must be edited, at the very least to alter the ICCProfile entry.

Also made some minor syntax changes in PDF/A and PDF/X documentation for greater clarity.
</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-07-13T070459.625768Z"></a>
2010-07-13T07:04:59.625768Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691444.  Issue was introduced when interpolation max output range
was set to be 65535 so that the output could be fed directly into CMM.
Problem was for HT output devices like pbmraw the interpolation filter
ignored the max range setting and used a max value of the frac range as
output.  This fixes a number of files that had regressions.  Files checked
with bmpcmp.</pre>
<p>[base/sidscale.c]</p>
</blockquote>

<p><strong><a name="2010-07-13T012010.578834Z"></a>
2010-07-13T01:20:10.578834Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug 691445.  pdf14 mapping procs were not paying attention to the
trans device in the imager state.  bmpcmp showed that this fixed several
files.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-07-12T150357.186505Z"></a>
2010-07-12T15:03:57.186505Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event the FAPI code has to replace the FontBBox array, make sure the new
array is marked executable.

No cluster differences expected.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-07-11T152614.804339Z"></a>
2010-07-11T15:26:14.804339Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for overprint regressions introduced with icc branch merge.  Review of bmp
compares reveals that this fixes a number of issues hence the large number of
differences with the commit.  There is one regression introduced with this commit,
which is IA3Z0302.pdf.pdf.pkmraw.300 page 2 a bug will be opened for this.   Also,
review of Atona_Technical_1v1_x3.pdf.pam.72 reveals there some overprint issues may
still exist with bitmap and halftone image overprinting on top of spotcolors when
Overprint is true and and Overprint mode is set to On.  This issue may have existed
prior to the icc commit.  Will open a bug to investigate.</pre>
<p>[base/gsicc_create.c base/gxcspace.h base/gscspace.c base/gsicc.c]</p>
</blockquote>

<p><strong><a name="2010-07-10T012854.795367Z"></a>
2010-07-10T01:28:54.795367Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix 'status' operator to return false when the IODevice prefix is
not found instead of undefinedfilename. Found while working on 691408.
</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-07-09T183119.790276Z"></a>
2010-07-09T18:31:19.790276Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix to use stable memory for profiledir in icc_manager structure and change
all 'current_' functions to return the actual value set, the default, or
an empty string if no default. Also set the default ICCProfilesDir to
%rom%iccprofiles which will work if COMPILE_INITS=1. This should also be
set by the PS init code (see bug 691408).
</pre>
<p>[psi/zusparam.c]</p>
</blockquote>

<p><strong><a name="2010-07-09T094017.170342Z"></a>
2010-07-09T09:40:17.170342Z Ken Sharp</strong></p>
<blockquote>
<pre>
Improve Windows batch files.
Bug #691440 &quot;Windows bat files use relative paths and write to non-temp dir&quot;

As suggested by Bjorn Martensson in bug #691440. Altered all batch files which call
other batch files so that they prepend the call with the location the original
batch file was executed from. This allows batch files such as ps2pdf.bat to be called
from locations other than the Ghostscript 'lib' directory.

Also altered the location of temporary files created by the batch files to the Windows
temporary folder by using the %TEMP% environment variable. If this variable is not set
for some reason then this will still default to the current directory, as it does now.
This allows batch files to be run from directories which are read only.

Since these files are not used by our (Linux) cluster there will be no differences. I
have tested a number of the scripts, but not all of them. The ones I have tested seem
to work well.

I finally found a reference which states that the %~d batch parameter was introduced
to Windows in NT4, this means that these batch files will likely fail on older versions
of Windows (ie Windows 3.x/95/98). I don't believe we need to support such antiquated
Operating Systems any further.</pre>
<p>[lib/pf2afm.bat lib/gsdj500.bat lib/ps2ascii.bat lib/ps2pdfxx.bat lib/lpr2.bat lib/gsndt.bat lib/gstt.bat lib/eps2eps.bat lib/pdf2dsc.bat lib/gsbj.bat lib/ps2epsi.bat lib/gsdj.bat lib/dumphint.bat lib/ps2ps2.bat toolbin/msvcxml.bat lib/gsnd.bat lib/font2c.bat lib/pdfopt.bat lib/gst.bat lib/pdf2ps.bat lib/ps2pdf.bat lib/gslj.bat lib/bdftops.bat lib/pfbtopfa.bat lib/ps2pdf12.bat lib/ps2pdf13.bat lib/ps2pdf14.bat lib/gslp.bat lib/lpgs.bat lib/ps2ps.bat lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-07-08T200159.912724Z"></a>
2010-07-08T20:01:59.912724Z Robin Watts</strong></p>
<blockquote>
<pre>
Extend the experimental ENABLE_TRAP_AMALGAMATION code to the
TEMPLATE_slant_into_trapezoids cases too. The current code generates 3
trapezoids; the new code will (if the option is enabled) attempt to
amalgamate the top/bottom traps into the middle one.

Enabling this code (but disabling the existing code for trap amalgamation)
shows no differences. Enabling all the trap amalgamation code shows 888
differences, all fairly innocuous.

As this code is going in disabled, no cluster differences are expected.

</pre>
<p>[base/gxfillts.h base/gxfill.c]</p>
</blockquote>

<p><strong><a name="2010-07-08T162020.892723Z"></a>
2010-07-08T16:20:20.892723Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update the Ghostscript man page to reflect the new default for -P option
made by the rev. 11494.
</pre>
<p>[man/gs.1]</p>
</blockquote>

<p><strong><a name="2010-07-07T212755.422122Z"></a>
2010-07-07T21:27:55.422122Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
clusterpush.pl with no options now tests language_switch build as well as gs, pcl, and xps.

Also some minor documentation improvements.
</pre>
<p>[toolbin/localcluster/clusterpush.pl toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-07-07T174709.812924Z"></a>
2010-07-07T17:47:09.812924Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Dont't search for initialization files in the current directory first
by default because this leads to well-known security and confusion problems.
Do this only on the user's request by -P switch. Also revert rev. 11468,
which is no longer needed. Bug 691350.
</pre>
<p>[base/openvms.mmk psi/zfile.c doc/Use.htm base/bcwin32.mak base/ugcclib.mak base/Makefile.in base/unix-gcc.mak base/macos-mcp.mak toolbin/msvcxml.bat psi/os2.mak base/watclib.mak base/openvms.mak base/macosx.mak base/watcw32.mak psi/msvc32.mak base/unixansi.mak base/msvclib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-07T134957.894248Z"></a>
2010-07-07T13:49:57.894248Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix : temporary memory device not finalized.

clist_init_data creates a temporary memory device in order to &quot;get the memory planarity
set up&quot;, using a local variable to hold the device. When the function exits the
variable goes out of scope and disappears.

Because the memory device is a forwarding device it increments the reference count of
its target, but because it is never finalized it does not decrement the reference count
when it is destroyed, leading to an incorrect target reference count.

This only affects pdfwrite at present, but it prevents valid PDF files being written
because the file is only terminated when the pdfwrite device reference count reaches
0 and the pdfwrite device is closed.

Added calls to finalize the device before discarding it.

No expected differences.
</pre>
<p>[base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T222732.077335Z"></a>
2010-07-06T22:27:32.077335Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Increase the max number of color components to 14 to accomodate a new
record (13) found in the wild. Bug 691425.
</pre>
<p>[base/gsccolor.h]</p>
</blockquote>

<p><strong><a name="2010-07-06T092540.558632Z"></a>
2010-07-06T09:25:40.558632Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Named destinations with no /Page not working properly

Bug #691344 &quot;REGRESSION: ps2pdf of 8.70 generates correct hyperlinks but not ps2pdf of
8.71&quot;

The revisions 9779 and 9788 fixed a problem where DOCVIEW pdfmarks without a /Page or
/View entry were producing invalid PDF files, and a problem with DEST pdfmarks arising
from it.

Because DOCVIEW and DEST pdfmarks share some common code in pdfwrite to create a
Destination annotation in the outptu PDF, this still left some confusion in the code.
The problem was that DOCVIEW pdfmarks need not contain Page or View data, but named
destinations *must*, but pdfmarks need not specify, in which case the current page is
used.

Added a parameter to pdf_make_dest which allows us to differentiate the two cases and
use the current page number for a named destination if no page is supplied.

The regression suite can't test this non-printing feature, so no differences are
expected.
</pre>
<p>[base/gdevpdfm.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T070453.806003Z"></a>
2010-07-06T07:04:53.806003Z Ken Sharp</strong></p>
<blockquote>
<pre>
Improve handling an error condition as suggested by Alex Cherepanov in Bug #691435,
comment 9. </pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-06T001144.270183Z"></a>
2010-07-06T00:11:44.270183Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix BAND_LIST_STORAGE=memory to handle files that create compressed memory
files &gt; 2Gb. Also add code to make the reporting of these file sizes a bit
better, but portability may still be an issue. Reference Bug 690199 for
customers 850 and 531.

</pre>
<p>[base/gxclmem.c base/gxclist.c]</p>
</blockquote>

<p><strong><a name="2010-07-05T235146.696108Z"></a>
2010-07-05T23:51:46.696108Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Replace all '==' executable names with '//== exec' in Ghostscript start-up
code because MS driver redefines '==' in a way that requires write access to
the top dictionary, and this is not always the case. Bug 689957.
</pre>
<p>[Resource/Init/gs_cmap.ps Resource/Init/gs_pdfwr.ps Resource/Init/pdf_main.ps Resource/Init/gs_resmp.ps Resource/Init/pdf_font.ps Resource/Init/gs_fonts.ps Resource/Init/pdf_base.ps Resource/Init/pdf_sec.ps Resource/Init/gs_ttf.ps Resource/Init/pdf_draw.ps Resource/Init/gs_cff.ps Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-07-05T161838.343520Z"></a>
2010-07-05T16:18:38.343520Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Set svn:ignore property for all remaining generated files in jasper,
jbig2dec, and tiff directories.
</pre>
<p>[tiff/contrib/iptcutil tiff/contrib/tags tiff/build tiff/tools tiff tiff/contrib tiff/contrib/mac-mpw tiff/contrib/acorn tiff/html jasper/src/libjasper/include/jasper tiff/contrib/mac-cw tiff/contrib/dbs tiff/html/images tiff/man tiff/contrib/win_dib tiff/html/man tiff/libtiff tiff/test tiff/contrib/addtiffo jbig2dec tiff/port tiff/contrib/ras tiff/contrib/mfs tiff/contrib/pds tiff/contrib/dbs/xtiff tiff/contrib/stream]</p>
</blockquote>

<p><strong><a name="2010-07-05T151009.278642Z"></a>
2010-07-05T15:10:09.278642Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add a pair of parentheses to silence a gcc compiler warning. Also extend the comment
slightly to be a little more informative.

No differences expected.
</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-05T051316.304757Z"></a>
2010-07-05T05:13:16.304757Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use the presence of /CIDSystemInfo instead of /Subtype value to decide
whether the object is a CID font. The former is required by Acrobat, the
latter appears to be ignored by Acrobat, and so may be wrong. Bug 691426.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-07-05T012343.139942Z"></a>
2010-07-05T01:23:43.139942Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
test for emptiness of HAVE_FONTCONFIG is better than non-yes-ness of
enable_fontconfig;
fine-tuning of r11448 to --disable-cairo when fontconfig is not available or
user-disabled</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-07-05T011830.861454Z"></a>
2010-07-05T01:18:30.861454Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
new/renamed documentation file libpng-1.2.44.txt missed in r11482 for
libpng 1.2.42-&gt;1.2.44 upgrade</pre>
<p>[libpng/libpng-1.2.44.txt]</p>
</blockquote>

<p><strong><a name="2010-07-04T190417.740307Z"></a>
2010-07-04T19:04:17.740307Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Reaplly Hin-Tak's patch, rev. 11453, which was rolled back by the rev. 11462.

Apply diff between stock 1.2.42 &lt;-&gt; 1.2.44 to upgrade to libpng 1.2.44
- bug
fixes - CVE-2010-1205. Bug 691438.
</pre>
<p>[libpng/pngrtran.c libpng/scripts/makefile.gcmmx libpng/contrib/pngminim/encoder/gather.sh libpng/scripts/makefile.sgi libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def libpng/scripts/makefile.nommx libpng/scripts/makefile.linux libpng/pngmem.c libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu libpng/scripts/makefile.elf libpng/scripts/libpng-config-head.in libpng/png.h libpng/CMakeLists.txt libpng/pngrio.c libpng/pngpread.c libpng/Y2KINFO libpng/scripts/makefile.netbsd libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc libpng/README libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 libpng/libpng-1.2.42.txt libpng/contrib/pngminim/preader/makefile libpng/scripts/makefile.solaris libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh libpng/scripts/makefile.mingw libpng/scripts/makefile.aix libpng/scripts/makefile.hp64 libpng/scripts/png32ce.def libpng/scripts/makefile.beos libpng/scripts/makefile.ne12bsd libpng/pngread.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/projects/wince.txt libpng/libpng.3 libpng/example.c libpng/scripts/makefile.so9 libpng/pngwrite.c libpng/pngconf.h libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec libpng/scripts/README.txt libpng/scripts/makefile.cygwin libpng/pngtest.c libpng/ANNOUNCE libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-07-03T002940.754683Z"></a>
2010-07-03T00:29:40.754683Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
missed linker defines needed to build under 64-bit windows in a
previous commit r11388 for bug 691302</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-07-01T215829.492747Z"></a>
2010-07-01T21:58:29.492747Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Bubble up of error when allocation of default profile cmm handle fails. Fix for bug 691429</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T211355.381754Z"></a>
2010-07-01T21:13:55.381754Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
revert r11469(r11455) - wrong fix to bug 690428</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T190829.177579Z"></a>
2010-07-01T19:08:29.177579Z Ken Sharp</strong></p>
<blockquote>
<pre>
Enhancement (pdfwrite) : Fall back to Flate instead of JPEG when an image turns out
short.

Bug #691435 &quot;any PDFSETTINGS besides /default gives dictfull error&quot;

There are two problems; firstly when an error is encountered closing a filter the
error code (-1 or -2 usually) is returned and interpreted as a regular GS error,
resulting in ridiculous error messages. Modified to return ioerror instead.

Secondly, when an image terminates with insufficient data and pdfwrite is creating a
DCT encoded image, we can't complete the image. In this case try to fall back to the
simple Flate compressed stream instead.

No differences expected.
</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T171423.564053Z"></a>
2010-07-01T17:14:23.564053Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691431.  This was caused by a PS CIE color space being
used for a transparency group color space.  That really should not
be allowed since those color spaces are unidirectional.  They are
installed though when -dUseCIEColor is used with a PDF file that has
transparency. Solution is to use the default ICC profiles for the group
color space when this occurs.</pre>
<p>[base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T121920.914734Z"></a>
2010-07-01T12:19:20.914734Z Robin Watts</strong></p>
<blockquote>
<pre>
Revert revision 11472 as it breaks almost every file in the cluster tests,
and it's preventing other meaningful work being done.

</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T004157.037474Z"></a>
2010-07-01T00:41:57.037474Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11457</pre>
<p>[base/gs_dll_call.h]</p>
</blockquote>

<p><strong><a name="2010-07-01T004043.889090Z"></a>
2010-07-01T00:40:43.889090Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11456</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-07-01T003616.428446Z"></a>
2010-07-01T00:36:16.428446Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply 11454 for outdated config.guess config.sub. see original commit log</pre>
<p>[jpeg/config.guess jpeg/config.sub]</p>
</blockquote>

<p><strong><a name="2010-07-01T003305.624689Z"></a>
2010-07-01T00:33:05.624689Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
typo that causes linker error if one does not do make clean between builds</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-07-01T000022.982087Z"></a>
2010-07-01T00:00:22.982087Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
reapply r11455 - see original commit log for details</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-06-30T233411.835858Z"></a>
2010-06-30T23:34:11.835858Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
security patch from Werner Fink, to disable loading init files from
group/world-writable directories - bug 691350</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-06-30T221202.295636Z"></a>
2010-06-30T22:12:02.295636Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Initialize profile member variables that are part of serialization.
Fix for Bug 691433
</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T180629.735123Z"></a>
2010-06-29T18:06:29.735123Z Henry Stiles</strong></p>
<blockquote>
<pre>
remove obsolete clusterpush scripts.
</pre>
<p>[/trunk/ghostpdl/tools/clusterpush.sh toolbin/clusterpush.sh]</p>
</blockquote>

<p><strong><a name="2010-06-29T171745.269232Z"></a>
2010-06-29T17:17:45.269232Z Henry Stiles</strong></p>
<blockquote>
<pre>
revert back to 11450.
</pre>
<p>[/trunk/ghostpdl/main/pcl6_gcc.mak libpng/pngrtran.c libpng/scripts/makefile.gcmmx base/ugcclib.mak libpng/contrib/pngminim/encoder/gather.sh /trunk/ghostpdl/xps/xpspath.c base/unix-gcc.mak libpng/scripts/makefile.sgi base/gp_unifn.c base/macos-mcp.mak libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc /trunk/ghostpdl/main/pcl6_msvc.mak libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def base/macosx.mak libpng/scripts/makefile.nommx libpng/scripts/makefile.linux jpeg/config.guess base/unixansi.mak libpng/pngmem.c base/msvclib.mak libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu jpeg/config.sub libpng/scripts/libpng-config-head.in libpng/scripts/makefile.elf libpng/png.h base/lib.mak libpng/CMakeLists.txt libpng/pngrio.c libpng/Y2KINFO libpng/pngpread.c libpng/scripts/makefile.netbsd /trunk/ghostpdl/xps/xps_msvc.mak libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc /trunk/ghostpdl/xps/xpsglyphs.c libpng/README doc/Make.htm libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 /trunk/ghostpdl/language_switch/pspcl6_msvc.mak libpng/libpng-1.2.42.txt libpng/contrib/pngminim/preader/makefile libpng/libpng-1.2.44.txt libpng/scripts/makefile.solaris base/Makefile.in libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh /trunk/ghostpdl/xps/xpstile.c /trunk/ghostpdl/xps/xpsgradient.c libpng/scripts/makefile.hp64 base/gs_dll_call.h libpng/scripts/makefile.aix libpng/scripts/makefile.mingw libpng/scripts/png32ce.def /trunk/ghostpdl/common/msvc_top.mak libpng/scripts/makefile.beos base/watclib.mak /trunk/ghostpdl/xps/xpsopacity.c libpng/scripts/makefile.ne12bsd libpng/pngread.c /trunk/ghostpdl/xps/xpspage.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/libpng.3 libpng/example.c libpng/projects/wince.txt base/bcwin32.mak libpng/scripts/makefile.so9 libpng/pngconf.h libpng/pngwrite.c libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c base/openvms.mak base/gdevxcmp.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec base/watcw32.mak base/unix-dll.mak libpng/scripts/README.txt libpng/scripts/makefile.cygwin psi/msvc32.mak libpng/pngtest.c libpng/ANNOUNCE /trunk/ghostpdl/xps/xpsimage.c libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-06-29T070829.009258Z"></a>
2010-06-29T07:08:29.009258Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
more cygwin/mingw-related patches from Jan Nieuwenhuizen (lilypond/gub) ; this
one depends on features of GNU make, so it is added as comments to avoid
breaking build with non-GNU make</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T070545.877229Z"></a>
2010-06-29T07:05:45.877229Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
avoid re-define _Windows if it is already defined; one of the cygwin/mingw-related
patches from Jan Nieuwenhuizen (lilypond/gub)</pre>
<p>[base/gs_dll_call.h]</p>
</blockquote>

<p><strong><a name="2010-06-29T070425.796552Z"></a>
2010-06-29T07:04:25.796552Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
cygwin is one platform which uses the unix file name interface but is
sensitive to binary/text mode; one of the cygwin/mingw-related patches from
Jan Nieuwenhuizen (lilypond/gub)</pre>
<p>[base/gp_unifn.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T064759.438186Z"></a>
2010-06-29T06:47:59.438186Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
gx_device_has_color() was changed 8 years ago in the deviceN commit (r2925),
from just color_info.numcomponents &gt; 1 to
|| (dev)-&gt;color_info.gray_index == GX_CINFO_COMP_NO_INDEX .

This has some unfortunate side-effect for continuous tone gray devices which
doesn't support transparency, such as a 8-bit gray X11 display, which goes
down the wrong code path. These are quite rare so it took 7 years for the bug
(bug 690428) to be seen.

</pre>
<p>[base/gdevxcmp.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T060526.121392Z"></a>
2010-06-29T06:05:26.121392Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating jpeg config.sub config.guess to that from
libpng 1.2.44; bug 690486</pre>
<p>[jpeg/config.guess jpeg/config.sub]</p>
</blockquote>

<p><strong><a name="2010-06-29T053019.407679Z"></a>
2010-06-29T05:30:19.407679Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
apply diff between stock 1.2.42 &lt;-&gt; 1.2.44 to upgrade to
libpng 1.2.44 - bug fixes - CVE-2010-1205</pre>
<p>[libpng/pngrtran.c libpng/scripts/makefile.gcmmx libpng/contrib/pngminim/encoder/gather.sh libpng/scripts/makefile.sgi libpng/scripts/makefile.sco libpng/scripts/makefile.hpgcc libpng/KNOWNBUG libpng/projects/xcode/libpng.xcodeproj/project.pbxproj libpng/scripts/pngos2.def libpng/scripts/makefile.nommx libpng/scripts/makefile.linux libpng/pngmem.c libpng/png.c libpng/contrib/pngminim/decoder/gather.sh libpng/scripts/makefile.64sunu libpng/scripts/makefile.elf libpng/scripts/libpng-config-head.in libpng/png.h libpng/CMakeLists.txt libpng/pngrio.c libpng/pngpread.c libpng/Y2KINFO libpng/scripts/makefile.netbsd libpng/pngwio.c libpng/pngrutil.c libpng/scripts/makefile.hpux libpng/scripts/makefile.darwin libpng/scripts/makefile.sggcc libpng/README libpng/contrib/pngminim/decoder/makefile libpng/scripts/makefile.32sunu libpng/libpngpf.3 libpng/scripts/makefile.solaris-x86 libpng/libpng-1.2.42.txt libpng/libpng-1.2.44.txt libpng/contrib/pngminim/preader/makefile libpng/scripts/makefile.solaris libpng/pngwtran.c libpng/contrib/pngminim/preader/gather.sh libpng/scripts/makefile.mingw libpng/scripts/makefile.aix libpng/scripts/makefile.hp64 libpng/scripts/png32ce.def libpng/scripts/makefile.beos libpng/scripts/makefile.ne12bsd libpng/pngread.c libpng/scripts/pngw32.def libpng/pngget.c libpng/INSTALL libpng/scripts/makefile.cegcc libpng/CHANGES libpng/contrib/pngminim/encoder/makefile libpng/libpng.3 libpng/projects/wince.txt libpng/example.c libpng/scripts/makefile.so9 libpng/pngwrite.c libpng/pngconf.h libpng/pngset.c libpng/LICENSE libpng/png.5 libpng/pngwutil.c libpng/scripts/makefile.openbsd libpng/scripts/makefile.dec libpng/scripts/README.txt libpng/scripts/makefile.cygwin libpng/pngtest.c libpng/ANNOUNCE libpng/scripts/libpng.pc.in]</p>
</blockquote>

<p><strong><a name="2010-06-29T052507.282125Z"></a>
2010-06-29T05:25:07.282125Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
change documentation as --enable-dynamics is no longer required
for &quot;make so&quot; to work</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-29T052009.043972Z"></a>
2010-06-29T05:20:09.043972Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
split lcms code build into arch-specific targets; try to make both windows
inline assembly and unix &quot;make so&quot; work simultaneously; bug 691427</pre>
<p>[base/watclib.mak base/lib.mak base/bcwin32.mak base/openvms.mak base/ugcclib.mak base/macosx.mak base/watcw32.mak base/Makefile.in base/unix-gcc.mak base/unixansi.mak psi/msvc32.mak base/macos-mcp.mak base/msvclib.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T051638.524502Z"></a>
2010-06-29T05:16:38.524502Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
move the DYNAMIC_* defines out of the --enable-dynamic condition so that it
applies generally; try to &quot;make so&quot; work with just
./configure ; many bugs ask for make so to work</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T043410.440639Z"></a>
2010-06-29T04:34:10.440639Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
switch autoconf png test away from testing for a soon-to-be-obsolete routine
to one we actually use, to smooth over the libpng 1.2.x to 1.4.x
transition; bug 691111</pre>
<p>[jbig2dec/configure.ac base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T041547.742872Z"></a>
2010-06-29T04:15:47.742872Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make --disable-fontconfig imples --disable-cairo; bug 690690</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T040453.158322Z"></a>
2010-06-29T04:04:53.158322Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
tries to remove empty *obj/*bin directories when invoking &quot;make distclean&quot;; bug 690871</pre>
<p>[base/unix-end.mak base/Makefile.in base/unix-dll.mak base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T034817.519902Z"></a>
2010-06-29T03:48:17.519902Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
check for GNU sed and switch to alternative sed options if sed is non-GNU; bug 691292</pre>
<p>[cups/pstopxl.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T034430.895095Z"></a>
2010-06-29T03:44:30.895095Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Part 2 of update (new files) posted to 687983, corrected for current svn HEAD.</pre>
<p>[contrib/pscolor/black.pdf contrib/pscolor/color.pdf contrib/pscolor/colorsplit.vcproj contrib/pscolor/black.ps contrib/pscolor/color.ps contrib/pscolor/common.mak contrib/pscolor/input.ps contrib/pscolor/windows.mak]</p>
</blockquote>

<p><strong><a name="2010-06-29T034118.718227Z"></a>
2010-06-29T03:41:18.718227Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Part 1 of the update (modifications to checked-in files)
to the pscolor code posted in 687983, corrected for current svn head.

</pre>
<p>[contrib/pscolor/Makefile contrib/pscolor/test.c contrib/pscolor/instream.yy]</p>
</blockquote>

<p><strong><a name="2010-06-29T033846.508455Z"></a>
2010-06-29T03:38:46.508455Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
ijs communication should be all binary; left-over uncommitted patch from past ijs-related work</pre>
<p>[ijs/ijs_server_example.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T033445.878285Z"></a>
2010-06-29T03:34:45.878285Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
implements ./configure --with-ufst=UFST_ROOT_DIR ; bug 691293</pre>
<p>[doc/Make.htm base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-29T023238.254860Z"></a>
2010-06-29T02:32:38.254860Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of static prototype that has no function.</pre>
<p>[base/gsicc_cache.c]</p>
</blockquote>

<p><strong><a name="2010-06-29T005032.521441Z"></a>
2010-06-29T00:50:32.521441Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix lack of end-of-line in file.</pre>
<p>[base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T150431.998704Z"></a>
2010-06-28T15:04:31.998704Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix a typo, thanks to Ken for spotting this in review.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T105053.201708Z"></a>
2010-06-28T10:50:53.201708Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Warnings of problems within lcms only occur now in debug mode.  Fix for Bug 691401</pre>
<p>[base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-28T051659.820980Z"></a>
2010-06-28T05:16:59.820980Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Interface with lcms so that the memory allocators make use of ghostscript's
allocator.  This required fixing a few bugs in littlecms where he was using
free instead of _cmsFree and also having lcms.h provide the prototypes if the
external mem alloc is defined.  Performed cluster push with no problem.  Thanks
to Henry for helping me track down a 64 bit issue.</pre>
<p>[lcms/include/lcms.h base/lib.mak lcms/src/cmslut.c base/lcms.mak lcms/src/cmsio1.c base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-26T200613.718954Z"></a>
2010-06-26T20:06:13.718954Z Henry Stiles</strong></p>
<blockquote>
<pre>
The ad hoc gstate setup for patterns should not call grestore after
gsave when erasing colored patterns because it results in
&quot;wraparound&quot;, creating another gstate (no saved gstate exists when the
pattern is painted), see gsstate.c:gs_grestore() vs
gsstate.c:gs_grestore_only().  Thanks to Ken Sharp for noticing the the
extra gstate.  No expected differences.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-26T175906.494303Z"></a>
2010-06-26T17:59:06.494303Z Henry Stiles</strong></p>
<blockquote>
<pre>
This file should have been checked in with revision 11433 which will
not compile without this change.
</pre>
<p>[base/gdevpxat.h]</p>
</blockquote>

<p><strong><a name="2010-06-25T120050.643763Z"></a>
2010-06-25T12:00:50.643763Z Chris Liddell</strong></p>
<blockquote>
<pre>
Provide more robust behaviour when FT fails to render a glyph. Inistead
of silently continuing when FT errors on a glyph, we'll now attempt to use
the notdef, if the notdef triggers an error, we signal the error to the GS
world. This ensures that any time we expect processing to continue there is
valid glyph information available to the cache and other downstream devices.
This causes one regression difference with 34_all.PS, where an extra TTF
notdef is rendered.

Bug 691416</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-06-24T071111.011423Z"></a>
2010-06-24T07:11:11.011423Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove a couple of currently unused variables to silence a harmless compiler warning.
</pre>
<p>[base/gdevpsft.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T171440.891928Z"></a>
2010-06-23T17:14:40.891928Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Simplify and fix the implementation of operator --mul--, which mishandled
some cases like &quot;16#80000000 -1 mul&quot;. Bug 691412.
</pre>
<p>[psi/zarith.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T155639.786311Z"></a>
2010-06-23T15:56:39.786311Z Ken Sharp</strong></p>
<blockquote>
<pre>
This patch adds limited support for TrueType collection fonts to pdfwrite and ps2write.

In the PostScript world TTC fonts are never passed down to pdfwrite, we only ever see
TrueType fonts. XPS, however, can pass back TrueType collection SNFTS data. This patch
uses the first font from the TrueType collection and writes that to the output file.
This may be too limited and may require further work in future.

</pre>
<p>[base/gdevpsft.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T143308.852324Z"></a>
2010-06-23T14:33:08.852324Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug691415.  When equivalent ICC profile is already created we
should just use it.  Thanks to Ken for getting the details together.</pre>
<p>[base/gscsepr.c]</p>
</blockquote>

<p><strong><a name="2010-06-23T050213.734047Z"></a>
2010-06-23T05:02:13.734047Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for 691359. Problem tracked down by Alex.

What lcms is trying to do is to figure out the best prelinearization
for the incoming data prior to doing the CLUT interpolation.  In the
case when the input is RGB based and the output Gray, lcms was using
uninitialized data in constructing is prelinearization.
Tangentially related, there could still be problems with what lcms is
doing here if the number of Input channels is 1 and the number of Output
channels is 3.  In that case, it is possible (but not likely) that I could
have radically different gamma behavior in each of the RGB channels.  Trans
in such a case would be constructed based upon only one curve based on the
red channel.   In the real world, this is probably not a problem but ideally
it would be optimal to use something that provides the best prelinearization
in all three channels.  That is an optimization for Marti to do and perhaps
is already in lcms2.</pre>
<p>[lcms/src/cmsgmt.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T145459.999510Z"></a>
2010-06-22T14:54:59.999510Z Henry Stiles</strong></p>
<blockquote>
<pre>
Erase patterns with the color white instead of filling the pattern
bitmap with 0 or 255.

Previously the initialization was only used when anti aliasing was
enabled, now initial erasing is done for all colored patterns,
eliminating a long standing UMR in the pcl code where the pattern was
combined with the destination/source with indeterminate results.  The
UMR manifested in frequent regression reports in the pcl tests
(c321.bin for example), these reports should go away with this change,
though (NB) the change only masks the underlying issue.

</pre>
<p>[psi/zpcolor.c base/gxpcmap.c base/gxpcolor.h]</p>
</blockquote>

<p><strong><a name="2010-06-22T061254.377174Z"></a>
2010-06-22T06:12:54.377174Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fix for bug 689836 and 691248.

Bug 689836 - Huffman tables with only positive values are decoded incorrectly
Bug 691248 - jbig2dec doesn't handle 042_11 (Huffman Symbol Region)

This patch fixes mulfunctions seen on standard huffman table K, L, M and N.
A difference will be seen on tests_private/comparefiles/Bug690360.pdf.
This file was affected by table K mulfunction and this is a improvement.

</pre>
<p>[jbig2dec/jbig2_hufftab.h]</p>
</blockquote>

<p><strong><a name="2010-06-22T060012.605983Z"></a>
2010-06-22T06:00:12.605983Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Revert rev. 7964 and use a different approach: allocate all structures
and proceed with their initialization only if all allocations were
successful. Fix memory corruption that happens at the PostScript
stack overflow. Bug 691295.
</pre>
<p>[psi/idosave.h psi/ialloc.c psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T055923.952778Z"></a>
2010-06-22T05:59:23.952778Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Added test code for every line of each standard huffman tables.

</pre>
<p>[jbig2dec/jbig2_huffman.c]</p>
</blockquote>

<p><strong><a name="2010-06-22T051553.089456Z"></a>
2010-06-22T05:15:53.089456Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add a /.notdef entry to /CharStrings dictionary if it's missing from an
embedded Type1 font. Bug 691406, customer 130.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-06-21T164155.147464Z"></a>
2010-06-21T16:41:55.147464Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of improper error message.  Source of a potential access violation.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-21T150703.992218Z"></a>
2010-06-21T15:07:03.992218Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add the 'gs_error_Remap_Color' pseudo-error, a duplicate -f e_Remap_Color in the
PostScript interpreter, to the 'base' error list so that PDL clients other than
PostScript can make use of it for high-level pattern support.
</pre>
<p>[base/gserrors.h]</p>
</blockquote>

<p><strong><a name="2010-06-21T011418.832712Z"></a>
2010-06-21T01:14:18.832712Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
auto-detect host as *BSD and use a differently named obj directory;
no effect on non-*BSDs. fixes bug 687214</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-06-21T003243.898825Z"></a>
2010-06-21T00:32:43.898825Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding more borland-related build tips; part of borland build fixes (bug 691400)</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-21T001242.541103Z"></a>
2010-06-21T00:12:42.541103Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
got some garbage in the beginning of the file introduced in an earlier commit</pre>
<p>[doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-21T000112.712437Z"></a>
2010-06-21T00:01:12.712437Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
nsis-based installer script, makefile adaptation, documentation update; bug 691363</pre>
<p>[psi/winint.mak doc/Release.htm psi/nsisinst.nsi doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-20T233847.757390Z"></a>
2010-06-20T23:38:47.757390Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build fix (bug 691400): borland defines P_tmpdir but not
_P_tmpdir; similiar difference between borlandc and msvc has been
seen with setmode/_setmode in the ijs code in ijs/ijs_server.c</pre>
<p>[jasper/src/libjasper/base/jas_stream.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T233224.162240Z"></a>
2010-06-20T23:32:24.162240Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build fix (bug 691400): update and complete documentation on
working around for too-many-warnings-equal-error problem of borland c++</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-06-20T232934.775566Z"></a>
2010-06-20T23:29:34.775566Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland fix (bug 691400): Borland c++ does not support c99 LL nor
ULL, but use i64/ui64 like MSVC for 64-bit integer literals</pre>
<p>[base/sha2.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T231137.618908Z"></a>
2010-06-20T23:11:37.618908Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
4 borland build fixes (bug 691400):

- hook up libtiff
- build mkromfs
- build import library *.lib corresponding to the dll
- build the split-out make_filelist (see also r11388 for Bug 691302,
which does it for msvc)

</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T230349.551572Z"></a>
2010-06-20T23:03:49.551572Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
borland build does not create the obj and bin directories. part of borland build fix (691400)</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T225732.647408Z"></a>
2010-06-20T22:57:32.647408Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
defines a unix target, since win32 requires specific compiler flags;
HP-UX make/MS nmake both issues a warning and borland make issues an
error for duplicate targets; fixes bug 691337, and also part of the
problems with borland build (bug 691400)</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-06-20T034503.823204Z"></a>
2010-06-20T03:45:03.823204Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix malformed ICC profile generation on big endian systems, which was caused
by confusion between internal and external representation of an integer.
</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-20T030150.289956Z"></a>
2010-06-20T03:01:50.289956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't leave wild bytes at the end of a generated ICC profile. Fix Valgrind
warnings and spurious hash value differences.
</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T235923.662717Z"></a>
2010-06-18T23:59:23.662717Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that when the CIE color spaces are released, the icc equivalent
space is also rc decremented as is the profile.</pre>
<p>[base/gscscie.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T180659.517404Z"></a>
2010-06-18T18:06:59.517404Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for memory leak in creation of icc profile from def(g) objects.</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-18T020013.716745Z"></a>
2010-06-18T02:00:13.716745Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Use operator --search-- instead of --token-- during PDF rebuilding
to reduce the load on the name table, slightly improve the speed, and
work around the bug 691005 in a few cases.
</pre>
<p>[Resource/Init/pdf_rbld.ps]</p>
</blockquote>

<p><strong><a name="2010-06-17T202333.279930Z"></a>
2010-06-17T20:23:33.279930Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adjust self-reference of bswin32.mak to correct location.
Part 1 of fix to bug 691400</pre>
<p>[base/bcwin32.mak]</p>
</blockquote>

<p><strong><a name="2010-06-17T200330.325885Z"></a>
2010-06-17T20:03:30.325885Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
mentioning -P-/-P and further reference to the INITIALIZATION FILES and
Use.htm in the man page. bug 691350</pre>
<p>[man/gs.1]</p>
</blockquote>

<p><strong><a name="2010-06-17T194605.887718Z"></a>
2010-06-17T19:46:05.887718Z Michael Vrhel</strong></p>
<blockquote>
<pre>
add missing type def for gsicc_create_mashed_clut</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T193839.362075Z"></a>
2010-06-17T19:38:39.362075Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
split make_filelist functionality out of setupgs, to allow UAC restriction
during packaging of the installer. Bug 691302</pre>
<p>[psi/dwsetup.cpp psi/winint.mak psi/msvc32.mak psi/mkfilelt.cpp]</p>
</blockquote>

<p><strong><a name="2010-06-17T193128.160475Z"></a>
2010-06-17T19:31:28.160475Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add info about silent batch installation; bug 691268</pre>
<p>[doc/Install.htm]</p>
</blockquote>

<p><strong><a name="2010-06-17T192820.229863Z"></a>
2010-06-17T19:28:20.229863Z Michael Vrhel</strong></p>
<blockquote>
<pre>
rc_decrement any icc objects that may exist in the imager state that was
created for handling the conversion from PS CIE objects to ICC profiles.</pre>
<p>[base/gscie.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T180435.295987Z"></a>
2010-06-17T18:04:35.295987Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Free up tag list when done creating icc profile from PDF cal type.</pre>
<p>[base/gsicc_create.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T171334.616951Z"></a>
2010-06-17T17:13:34.616951Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Change to help track down any memory leaks related to the new icc code.
Also fix so that gs_init_iccmanager copies the null character from the default
profile string names.  There was a mismatch between what happened here and what
happens when the default user params are set.  This was causing the profiles to
reset in the manager when they did not need to be.</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-17T092018.689467Z"></a>
2010-06-17T09:20:18.689467Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI) move two FAPI related members from the show enumerator structure to the text
enumerator structure. This ensures that these members are always available for rendering
and eliminates a GPF caused when a device's text_begin method returns a text enumerator
rather than the show enumerator returned by gx_default_text_begin.

No differences expected.
</pre>
<p>[base/gxchar.h base/gxtext.h]</p>
</blockquote>

<p><strong><a name="2010-06-16T061125.298134Z"></a>
2010-06-16T06:11:25.298134Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
a few more CRLF eol and svn property corrections</pre>
<p>[zlib/contrib/dotzlib/LICENSE_1_0.txt zlib/contrib/vstudio/readme.txt zlib/contrib/masmx64/readme.txt base/gsicc_cache.h base/gsicc_manage.c base/gsicc_manage.h zlib/projects/visualc6/README.txt zlib/contrib/dotzlib/readme.txt]</p>
</blockquote>

<p><strong><a name="2010-06-15T171715.944441Z"></a>
2010-06-15T17:17:15.944441Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Rename of a few functions to match documentation, update of gdevwts.c to
use new color architecture, addition of minor utility functions for use in gxps.
This should not generate regressions.</pre>
<p>[base/lib.mak base/gsicc_littlecms.h base/gsicc_cache.h base/gsicc_manage.c base/gscms.h base/gdevwts.c base/gsicc_manage.h base/gsicc_littlecms.c]</p>
</blockquote>

<p><strong><a name="2010-06-15T165440.171304Z"></a>
2010-06-15T16:54:40.171304Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of Color Architecture document in preparation for release of GS 9.0</pre>
<p>[doc/Color_Architecture.tex doc/figures/XPS_Integer_Gray_RGB_Image.eps doc/figures/Overview.eps doc/figures/XPS_DeviceN.eps doc/figures/PDF_Render.eps doc/figures/XPS_Render.eps doc/GS9_Color_Management.pdf doc/figures/XPS_Vector_Color.eps doc/figures/XPS_RGB_Image_Float.eps doc/figures/PS_Spec.eps doc/Color_Architecture.pdf doc/GS9_Color_Management.tex doc/figures/PS_Render.eps doc/figures/PDF_Spec.eps]</p>
</blockquote>

<p><strong><a name="2010-06-14T231027.633844Z"></a>
2010-06-14T23:10:27.633844Z Henry Stiles</strong></p>
<blockquote>
<pre>
Modified line endings from CRLF -&gt; LF and propset to native.
</pre>
<p>[base/gsicc_cache.c base/gsicc_cache.h base/gsicc_manage.c base/gsicc_manage.h]</p>
</blockquote>

<p><strong><a name="2010-06-14T184247.881614Z"></a>
2010-06-14T18:42:47.881614Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix yet another case where memcpy() copies a memory block on itself.
This doesn't cause any problems on Linux or Windows but violates the
spec and irks Valgrind. Bug 691394.
</pre>
<p>[base/gsline.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T180749.834071Z"></a>
2010-06-14T18:07:49.834071Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the &quot;&lt;font&gt; is being rendered with FAPI=&lt;renderer&gt;&quot;
messages. But leave a warning if we fall back to the old GS renderer.</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-06-14T111907.131026Z"></a>
2010-06-14T11:19:07.131026Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : limit composite object sizes when producing PDF/A

Bug #691370 &quot;Dictionary size not limited for PDF/A-1&quot;

The PDF/A specification insists that the implementation limitations of Acrobat as
defined in PDF 1.4 should be followed when producing PDF/A files. Accordingly this
limits the size of dictionaries to 4095 and arrays to 8191 when producing PDF/A output.

Since there is no way to ignore the problem, setting the PDFACompatibiltyPolicy to 1
'don't emit the object, carry on producing PDF/A' can't be made to work. Since the
user has expressed a desire for an output file, we fall back to Policy 0 'Produce a
regular PDF file' instead.

Also extend PDFACompatibilityPolicy to include policy 2 'abort'.

No test file for this case, no differences expected.
</pre>
<p>[base/gdevpdfo.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T111418.794921Z"></a>
2010-06-14T11:14:18.794921Z Ken Sharp</strong></p>
<blockquote>
<pre>
Extend to PDF/X emission the enhancement in revision 11369 which prevents emitting
invalid PDF/A files when glyphs are missing from fonts.
</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-06-14T111240.380849Z"></a>
2010-06-14T11:12:40.380849Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the ps2pdf documenataion to reflect the fact that PDF/X-3 conversion now also
uses the PDFACompatibilityPolicy to control behaviour when a conforming file cannot be
produced.

Also applied some general grammatical correction to the text.
</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-06-14T093417.990404Z"></a>
2010-06-14T09:34:17.990404Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) : Don't emit invalid PDF/A files

Bug #691383 &quot;pdfwrite emits invalid PDF/A when glyphs are missing in the input font.&quot;

If the input file references glyphs which are not in the font, then we could emit a
PDF/A file which also referenced glyph which were not present in the fonts embedded
in the PDF file.

This patch uses the PDFACompatibilityPolicy to control the action in this case, and
avoid emitting invalid PDF/A files.

Also extended the functionality of the PDFACompatibilityPolicy to allow the user to
abort PDF file production when a valid PDF/A file cannot be produced.

No expected differences as PDF/A production is not tested by regression code.
</pre>
<p>[base/gdevpdfm.c base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-06-12T151956.267658Z"></a>
2010-06-12T15:19:56.267658Z Henry Stiles</strong></p>
<blockquote>
<pre>
The ICC profile file name buffer was too small to accommodate the
trailing null appended by strcat resulting in an invalid write to
memory.
</pre>
<p>[base/gsicc_manage.c]</p>
</blockquote>

<p><strong><a name="2010-06-11T172406.899434Z"></a>
2010-06-11T17:24:06.899434Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the event of a FreeType error when scaling a font face, don't clean
up the FT data, but leave it to the garbage collector
to call the font object's &quot;finalize&quot; function, which will then
clean up the FT data.
Secondly, add code to deal with very low resolutions underflowing some of FT's
fixed point code (similar to code for small scale factors).
Bug 691381
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-06-11T075337.156852Z"></a>
2010-06-11T07:53:37.156852Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite - device reference counting problem with patterns and XPS

When using XPS as the input PDL, and pdfwrite as the output device, the pdfwrite device
was counted up by pattern accumulator allocation, but the clist accumulator never
counted the device down, leading to a reference count &gt; 1 at EOJ. This meant that
the pdfwrite device wasn't closed, since pdfwrite only emits the PDF file when it is
closed this led to invalid unfinished PDF files.

The code here modifies the behaviour of the pattern management so that we don't use the
'clist' path for accumulating patterns *if* the device can accumulate patterns itself
*and* the PDL doesn't have_pattern_streams (to avoid pathological PDF file problems)

This resolves the issue with device reference counts and all the FTS XPS files now
produce complete PDF files.
</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-06-10T161108.241878Z"></a>
2010-06-10T16:11:08.241878Z Chris Liddell</strong></p>
<blockquote>
<pre>
When extracting a path from the FAPI world (for a charpath, for example),
only close the path if it has been &quot;opened&quot;.
This prevents empty paths from non-marking glyphs resulting in a point being
rendered on the page.
Another part of Bug 691252.
This change causes ~195 differences to be reported on the cluster, but they
are all progressions.

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-06-10T140640.549557Z"></a>
2010-06-10T14:06:40.549557Z Chris Liddell</strong></p>
<blockquote>
<pre>
Make the rendering of the Truetype notdef glyph optional with the FAPI interface
(as per the previous behaviour).
A few cluster differences are expected as we have test files which use the TTF notdef,
I have checked all the differences, and they are correct.
This is part of Bug 691252

</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-06-09T185909.419344Z"></a>
2010-06-09T18:59:09.419344Z Robin Watts</strong></p>
<blockquote>
<pre>
Update comparerevs.pl script so that it no longer ignores hash values
on files taht have a non-zero error return. It now only ignores hash
values on timeouts (because runs can easily produce different numbers of
pages on each run).

Also, the output is updated to show error values together with hash results.
Error values are now always in brackets, on a red background.

</pre>
<p>[toolbin/localcluster/comparerevs.pl]</p>
</blockquote>

<p><strong><a name="2010-06-08T162039.058317Z"></a>
2010-06-08T16:20:39.058317Z Chris Liddell</strong></p>
<blockquote>
<pre>
In bytes_copy_rectangle() clamp the length of each row to be copied to the
stride of the raster. This takes care of problems copying bitmaps from FT
(or potentially other font libraries) which use different alignment to
the &quot;internal&quot; rasters. Bug 691328.</pre>
<p>[base/gsbitops.c]</p>
</blockquote>

<p><strong><a name="2010-06-08T010410.677952Z"></a>
2010-06-08T01:04:10.677952Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check whether the font has /Encoding before trying to use it. Recent FAPI
changes give /BuildChar procedure to all fonts including CIDFont resources.
So the check for non-null pfdata-&gt;BuildChar no longer guaranteed that the
font has /Encoding. Bug 691311.
</pre>
<p>[psi/zchar.c]</p>
</blockquote>

<p><strong><a name="2010-06-07T171420.171809Z"></a>
2010-06-07T17:14:20.171809Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691368.

lcms appears not to check its handles of link transforms when a profile is
released, to clear out xform-&gt;InputProfile.  Probably due to the fact that
lcms may not expect a change of the formatters after the link is created.
That would imply that we would need to create links based upon data types,
which is not so efficient.  Disable this check in lcms since it is only related
to named color profiles, which we will not run into.  Will kick this up to Marti.</pre>
<p>[lcms/src/cmspack.c]</p>
</blockquote>

<p><strong><a name="2010-06-06T180036.332831Z"></a>
2010-06-06T18:00:36.332831Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691367.  Seg fault should no longer occur.  If an attempt is
made to set a color space in the graphic state and the ICC manager's
profiles have not yet been initialized, it will be taken care of.  </pre>
<p>[base/gsicc_manage.c base/gscspace.c]</p>
</blockquote>

<p><strong><a name="2010-06-05T200355.912155Z"></a>
2010-06-05T20:03:55.912155Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't copy memory block into itself; clear a Valgrind warning.
</pre>
<p>[base/gsdparam.c]</p>
</blockquote>

<p><strong><a name="2010-06-05T192040.615579Z"></a>
2010-06-05T19:20:40.615579Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminisms in some PS files where the alternate tint transform
color space for a DeviceN or Separation color space is CIE based.  Previously
we were  returning either CMYK, or RGB based based upon the channel count for
the CIE space.  Now we are returning an equivalent ICC based color space.  Also
minor fix for uninitialized memory in generated profile.</pre>
<p>[base/gscdevn.c base/gsicc_create.c base/gscsepr.c]</p>
</blockquote>

<p><strong><a name="2010-06-03T165717.441589Z"></a>
2010-06-03T16:57:17.441589Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
observe minst-&gt;search_here_first condition in file search; bug 691350</pre>
<p>[psi/zfile.c]</p>
</blockquote>

<p><strong><a name="2010-06-03T003207.629281Z"></a>
2010-06-03T00:32:07.629281Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Adding -P- and -dSAFER to many POSIX shell scripts, win32 and OS/2 batch scripts; bug 691355</pre>
<p>[lib/bjc610b4.upp lib/bjc610b6.upp lib/lp386.bat lib/bjc610b7.upp lib/bjc610b8.upp lib/gsndt.bat lib/pdf2dsc lib/eps2eps.bat lib/st640plg.upp lib/ras8m.upp lib/ras24.upp lib/pv.sh lib/bj8oh06n.upp lib/necp2x.upp lib/stc600p.upp lib/pfbtopfa.bat lib/stc640p.upp lib/wftopfa lib/ps2ps lib/stc2s_h.upp lib/stc500ph.upp lib/ps2ps.cmd lib/pphs lib/stcany_h.upp lib/pf2afm lib/gsdj500 lib/dnj750c.upp lib/pf2afm.cmd lib/stc600pl.upp lib/stc800pl.upp lib/gsbj lib/ps2epsi lib/ps2epsi.cmd lib/dnj750m.upp lib/dumphint lib/gsnd lib/font2c lib/gsdj.bat lib/pdfopt lib/ras32.upp lib/ps2ps2.bat lib/pdf2ps lib/ps2pdf.cmd lib/pdf2ps.cmd lib/stc500p.upp lib/cdj690.upp lib/stc600ih.upp lib/st640p.upp lib/stc_h.upp lib/gslj.bat lib/stcany.upp lib/stc800ih.upp lib/bdftops.bat lib/stc_l.upp lib/ras1.upp lib/gslp.bat lib/lpgs.bat lib/st640ihg.upp lib/ras3.upp lib/stc1520h.upp lib/ras4.upp lib/stc300.upp lib/bj8ts06n.upp lib/eps2eps lib/ps2ascii.bat lib/eps2eps.cmd lib/stc2_h.upp lib/pdf2dsc.bat lib/stc.upp lib/stc300bl.upp lib/stc300bm.upp lib/bj8pp12f.upp lib/pfbtopfa lib/stc800p.upp lib/bjc610a0.upp lib/bj8gc12f.upp lib/st640pg.upp lib/bjc610a1.upp lib/cdj690ec.upp lib/bjc610a2.upp lib/ps2ps.bat lib/bjc610a3.upp lib/bjc610a4.upp lib/bjc610a5.upp lib/bj8hg12f.upp lib/stc2.upp lib/st640pl.upp lib/bjc610a6.upp lib/printafm lib/bjc610a7.upp lib/pf2afm.bat lib/gsdj500.bat lib/bjc610a8.upp lib/ps2pdfxx.bat lib/lpr2.bat lib/lp386r2.bat lib/stc200_h.upp lib/unix-lpr.sh lib/gsdj lib/necp2x6.upp lib/ps2ps2 lib/ps2epsi.bat lib/gsbj.bat lib/bj8pa06n.upp lib/ps2ps2.cmd lib/dumphint.bat lib/cdj550.upp lib/gslj lib/gsnd.bat lib/font2c.bat lib/bdftops lib/pdfopt.bat lib/pdf2ps.bat lib/st640ih.upp lib/gslp lib/ps2pdfwr lib/bjc610b1.upp lib/bjc610b2.upp lib/dvipdf lib/ps2ascii lib/bjc610b3.upp lib/pftogsf.bat]</p>
</blockquote>

<p><strong><a name="2010-06-02T174539.111970Z"></a>
2010-06-02T17:45:39.111970Z Robin Watts</strong></p>
<blockquote>
<pre>
Introduce new ENABLE_TRAP_AMALGAMATION build define. If set at build time
then code is introduced to gxfillts.h to try to amalgamate some of the
rectangles produced into the surrounding trapezoids.

This can cause small rendering differences due to the difference in rounding
within scan conversion and trap extraction.

The option is disabled by default.

No expected differences with it disabled. 439 non pdfwrite differences, 99
differences with it enabled.

</pre>
<p>[base/gxfillts.h]</p>
</blockquote>

<p><strong><a name="2010-06-02T083707.985901Z"></a>
2010-06-02T08:37:07.985901Z Ken Sharp</strong></p>
<blockquote>
<pre>
Revision 11348 accidentally included a number of font definitions in an updated cidfmap,
This removes those definitions, which should not be present.
</pre>
<p>[Resource/Init/cidfmap]</p>
</blockquote>

<p><strong><a name="2010-06-02T082923.801870Z"></a>
2010-06-02T08:29:23.801870Z Ken Sharp</strong></p>
<blockquote>
<pre>
Documentation change
Updated the comments at the head of the file to make it plain that the entries in the
CSI array must be strings, not names. Although this is clearly documented in use.htm
we have recently had several reports in which users have been trying to set name values
in the array.

Also added a pointer to the documentation as a further hint.
</pre>
<p>[Resource/Init/cidfmap]</p>
</blockquote>

<p><strong><a name="2010-06-02T074657.542525Z"></a>
2010-06-02T07:46:57.542525Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix pdfwrite, faulty matrix transformations for Shading dictionaries

Bug #691352 &quot;cairo pdf mis-distilled&quot;

Patterns in PDF are unpleasantly complicated by the need to transform the pattern to
the 'default co-ordinate space'. Normally this means that we undo the resolution scaling
which is normally applied to the CTM.

For page streams this works well, but for forms the 'default co-ordinate space' is
the space of the parent. For one level of form there is therefore no difference between
the page and the form. When forms are nested however, the lower form's space becomes
that of the parent. This means that patterns inside forms, which are nested inside
another form, need to be transformed to the parent form co-ordinate space, not the
page space.

Since we don't currently emit forms from pdfwrite for anything except transparency
groups what this means in practice is that we don't undo the CTM transformation if
we are rendering a pattern inside a form, nested inside at least one other form.

</pre>
<p>[base/gdevpdfx.h base/gdevpdft.c base/gdevpdfv.c base/gdevpdfb.h]</p>
</blockquote>

<p><strong><a name="2010-06-01T174120.224359Z"></a>
2010-06-01T17:41:20.224359Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Rename of gsicccache.c/h to gsicc_cache.c/h  and gsiccmanage.c/h to
gsicc_manage.c/h to fall in line with the name space of the other files
that came from the icc branch.  Currently working on the documentation
and it is clear that this is needed (and I wish I had done it earlier).</pre>
<p>[/trunk/ghostpdl/pxl/pxpthr.c /trunk/ghostpdl/pxl/pxl.mak /trunk/ghostpdl/xps/ghostxps.h base/gsiccmanage.c base/gxshade1.c base/gsiccmanage.h base/gscsepr.c base/gxshade4.c base/gxshade6.c /trunk/ghostpdl/pxl/pxtop.c base/gxcmap.c ghostscript.vcproj base/gsistate.c /trunk/ghostpdl/pcl/pcl.mak base/gdevrinkj.c base/gdevwts.c base/gdevxcf.c base/gxicolor.c base/devs.mak base/gsicc.c base/gdevimdi.c base/gscdevn.c base/gxclread.c base/gdevpsd.c base/lib.mak base/gxiscale.c base/gsicc_manage.c psi/int.mak /trunk/ghostpdl/pxl/pxgstate.c /trunk/ghostpdl/pcl/pctop.c base/gsicc_manage.h psi/zicc.c psi/zdevice.c base/gdevp14.c base/gsstate.c base/gsicc_cache.c base/gsicc_create.c psi/zcie.c base/gsicccache.c base/gxclist.c base/gsicc_cache.h base/gsicccache.h base/gstrans.c base/gscms.h base/gxidata.c base/gdevpdfc.c base/gxblend.c base/gxshade.c psi/zusparam.c base/gdevpdfg.c base/gxp1fill.c base/gxclrast.c base/gsciemap.c]</p>
</blockquote>

<p><strong><a name="2010-05-31T144914.514014Z"></a>
2010-05-31T14:49:14.514014Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
for &quot;ln -s base/unix-gcc.mak Makefile; make&quot; builds, do
not modularize X, nor build most of the modularzed linux modules,
since they depend on the linux GNU linker</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-31T144108.956692Z"></a>
2010-05-31T14:41:08.956692Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
another attempt to make &quot;ln -s base/unix-gcc.mak Makefile; make&quot;
to work; libtiff really want configure so we hook it in</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-31T095814.532526Z"></a>
2010-05-31T09:58:14.532526Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
more icc branch merge related change to make
&quot;make -f base/unix-gcc.mak&quot; and other targets work&quot;</pre>
<p>[base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-28T180708.826907Z"></a>
2010-05-28T18:07:08.826907Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #690793.  PJL Formlines was not set correctly if the paper
size changed.  Also, refactors such that PXL and PJL get paper sizes
from the same source table.

</pre>
<p>[/trunk/ghostpdl/pl/pl.mak /trunk/ghostpdl/pxl/pxl.mak /trunk/ghostpdl/pl/pjparse.c /trunk/ghostpdl/pxl/pxsessio.c /trunk/ghostpdl/pxl/pxstate.h base/gdevpxen.h base/gdevpxut.c]</p>
</blockquote>

<p><strong><a name="2010-05-27T210221.460781Z"></a>
2010-05-27T21:02:21.460781Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix so that shading strokes that go through the clist transparency code
communicate the transparency device so that the proper color information
is used as opposed to the color information related to the final target
device.  This should fix the indeterminism with bug688807.pdf when going
out to a monochrome device.</pre>
<p>[base/gdevp14.c base/gxshade.c]</p>
</blockquote>

<p><strong><a name="2010-05-27T153001.093150Z"></a>
2010-05-27T15:30:01.093150Z Henry Stiles</strong></p>
<blockquote>
<pre>
Forward declarations for statics functions were accidentally placed in
the header file instead of the c file.
</pre>
<p>[base/gdevp14.c base/gdevp14.h]</p>
</blockquote>

<p><strong><a name="2010-05-27T004457.701730Z"></a>
2010-05-27T00:44:57.701730Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for indeterminism when using psdcmyk device and interpolated images.
For cases where the device profile has fewer components than the actual
number of device colorants we need to use the slower interpolation code.
Otherwise we end up encoding uninitialized memory. </pre>
<p>[base/gxiscale.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T220150.106123Z"></a>
2010-05-26T22:01:50.106123Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for bug690218.   For clist reader the pdf14 device was getting its color
information set based upon the number of spot colorants in the page.  The real
number should be based upon the number of actual components the device is capable
of handling.  This occurs when using separation device with a limited set of
colorants invoked via a command like
-c &quot;&lt;&lt; /SeparationColorNames [ /Cyan /Magenta /Yellow /Black ]

/SeparationOrder [ /Cyan /Magenta /Yellow /Black ] &gt;&gt; setpagedevice&quot;</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T181652.113331Z"></a>
2010-05-26T18:16:52.113331Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Improvements and fixes in icc search path description and bolder alert with
respect to Windows delimiter \&quot; interpretation . Thanks to Ray.</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-26T160836.881438Z"></a>
2010-05-26T16:08:36.881438Z Henry Stiles</strong></p>
<blockquote>
<pre>
The languages (pcl, xps, pclxl) debug builds were broken with the icc
branch merge, gs_abort() is not supported.  The code has been changed
similarly to the old exit upon failed assertion code in gsalloc.c
where gs_abort() is replaced with return, fixes bug #691340.
</pre>
<p>[base/gsicc_profilecache.c]</p>
</blockquote>

<p><strong><a name="2010-05-26T030702.463936Z"></a>
2010-05-26T03:07:02.463936Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Addition of lcms and new icc files to Visual studio solution.  Also did a
little organizing of the files in the explorer window base folder.</pre>
<p>[ghostscript.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-25T204302.039929Z"></a>
2010-05-25T20:43:02.039929Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of documentation, clarifying the search methods used for finding the icc profiles.</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-25T193823.177347Z"></a>
2010-05-25T19:38:23.177347Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Removal of iccprofiles/ from default icc profile names and post-pend %rom%
with iccprofiles/ .  This is in preparation for having the ps init code
initialize a default value for ICCProfilesDir (which will be ./iccprofiles/ )
so that code works with COMPILE_INITS=0 when not in the base directory and
when -sICCProfilesDir is not specified on the command line.</pre>
<p>[base/gsiccmanage.c base/gsiccmanage.h]</p>
</blockquote>

<p><strong><a name="2010-05-25T171559.119523Z"></a>
2010-05-25T17:15:59.119523Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make static some private functions to remove compiler warnings</pre>
<p>[contrib/gdevgdi.c base/gdevcairo.c contrib/gdevlx50.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T171427.480893Z"></a>
2010-05-25T17:14:27.480893Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make private functions static to silence some missing prototype warning</pre>
<p>[imdi/cgen.c imdi/imdi_k.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T171318.238667Z"></a>
2010-05-25T17:13:18.238667Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
silent one compiler warning</pre>
<p>[base/gxstroke.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T135021.339560Z"></a>
2010-05-25T13:50:21.339560Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix copy CIDFontType 2 properly
Bug #690930 &quot;Unicode Output: DEVICE=pdfwrite&quot;

When making a copy of a CIDFont with TrueType outlines (CIDFontType 2) for the
benefit of pdfwrite, do not simply copy the subst_CID_on_WMode structure member as
this will be restored away along with the font at end of page. Instead make a new
structure and store that in the copied font.


No differences expected, local cluster test shows a few but I think (hope) these are
related to the ICC branch merge.</pre>
<p>[base/gxfcopy.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T102209.642632Z"></a>
2010-05-25T10:22:09.642632Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691336: Resolve some confusion between the original global variable
removal changes, and subsequent changes, that could result in warning emprintf
calls using a memory pointer that could not exist at that stage.
</pre>
<p>[psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-05-25T083157.775100Z"></a>
2010-05-25T08:31:57.775100Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence a couple of gcc compiler warnings introduced with the ICC merge.
</pre>
<p>[base/gdevpdfk.c base/gdevpdfc.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T230659.017275Z"></a>
2010-05-24T23:06:59.017275Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Another bunch of CRLF to LF's.

find . -type f | grep -v 'svn-base' | xargs file | grep CRLF | \
grep -v -E '\.(dsp|dsw|sln|rc):' | grep -v -E \
'(cbuilder5|masm|dotzlib|vstudio|BorlandC_5.5|visualc6)' | cut -d ':' -f 1 | \
xargs -n 1 svn propset svn:eol-style native
find . -type f | grep -v 'svn-base' | xargs file | grep CRLF | \
grep -v -E '\.(dsp|dsw|sln|rc):' | grep -v -E \
'(cbuilder5|masm|dotzlib|vstudio|BorlandC_5.5|visualc6)' | cut -d ':' -f 1 | \
xargs dos2unix

</pre>
<p>[tiff/nmake.opt psi/zcolor.h toolbin/color/icc_creator/ICC_Creator/stdafx.h lib/cat.ps toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.cpp toolbin/color/icc_creator/example/cielab_values.txt toolbin/color/icc_creator/ICC_Creator/icc34.h contrib/lxm3200-tweaked/LICENSE toolbin/color/icc_creator/README.txt toolbin/color/icc_creator/ICC_Creator/ICC_Creator.cpp toolbin/color/named_color/named_color_table.txt zlib/contrib/testzlib/testzlib.txt lib/Fontmap.URW-136.T1 toolbin/color/icc_creator/example/tritone_names.txt zlib/contrib/testzlib/testzlib.c toolbin/color/icc_creator/ICC_Creator/CIELAB.h toolbin/color/icc_creator/ICC_Creator/icc_create.h base/gsicc_profilecache.c toolbin/color/icc_creator/ICC_Creator/stdafx.cpp toolbin/color/icc_creator/ICC_Creator/resource.h base/gsicc_profilecache.h toolbin/color/icc_creator/example/tritone_cielab.txt base/gsicc_create.c toolbin/color/icc_creator/ICC_Creator/targetver.h toolbin/color/icc_creator/ICC_Creator/ICC_CreatorDlg.h toolbin/color/icc_creator/ICC_Creator/res/ICC_Creator.rc2 psi/zcie.h psi/write_t2.c base/gsicc_create.h toolbin/color/icc_creator/example/color_names.txt base/gscms.h toolbin/color/icc_creator/ICC_Creator/icc_create.cpp toolbin/color/icc_creator/ICC_Creator/ICC_Creator.h psi/fapibstm.c lib/Fontmap.URW-136.TT]</p>
</blockquote>

<p><strong><a name="2010-05-24T223400.748368Z"></a>
2010-05-24T22:34:00.748368Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove some more CR's and more eol-style native.

find . -type f   -exec file {} \; |grep 'CRLF' | grep -v '/Projects' | \
grep -v 'svn-base' | cut -f 1 -d ':' | xargs -n 1 svn propset \
svn:eol-style native
find . -type f   -exec file {} \; |grep 'CRLF' | grep -v '/Projects' | \
grep -v 'svn-base' | cut -f 1 -d ':' | xargs -n 1 dos2unix

</pre>
<p>[lcms/Delphi/delphidemo.dof lcms/src/makefile.simple lcms/Delphi/demo1.pas lcms/python/testbed/srgb2xyz.py lcms/Delphi/Samples/create.pas lcms/python/testbed/srgb2lab.py lcms/Delphi/delphidemo.dpr lcms/python/testbed/cam02.py lcms/makefile.simple lcms/samples/makefile.simple lcms/Delphi/Samples/TEST.PAS lcms/Delphi/delphidemo.cfg lcms/python/testbed/createmsh.py lcms/python/testbed/lab2adobe.py lcms/Delphi/Samples/testfrm.pas lcms/Delphi/Samples/testwp.pas lcms/src/lcms.def lcms/Delphi/Samples/getxyz.pas]</p>
</blockquote>

<p><strong><a name="2010-05-24T222637.131050Z"></a>
2010-05-24T22:26:37.131050Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
manually fixing the last few files which escaped fileutils' identification.

</pre>
<p>[lcms/python/lcms.py lcms/COPYING lcms/src/cmscam97.c lcms/aclocal.m4 lcms/ltmain.sh lcms/README.1ST lcms/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-24T222052.689626Z"></a>
2010-05-24T22:20:52.689626Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Changes c/c++/shell script/english text to native text and strip off CR.

find . -type f   -exec grep -l '\r\n' {} \; | grep -v 'svn-base' | \
grep -v '\.vcproj' | grep -v '/Projects' | xargs -n 1 file |  \
grep -E '(ASCII C\+\+ program text|ISO\-8859 English text|ASCII \
C program text|shell script text executable)' | cut -f 1 -d ':'  |\
xargs dos2unix
find . -type f   -exec grep -l '\r\n' {} \; | grep -v 'svn-base' | \
grep -v '\.vcproj' | grep -v '/Projects' | xargs -n 1 file |  grep -E \
'(ASCII C\+\+ program text|ISO\-8859 English text|ASCII C program text|\
shell script text executable)' | cut -f 1 -d ':'  | xargs svn propset \
svn:eol-style native


</pre>
<p>[lcms/doc/TUTORIAL.TXT lcms/matlab/icctrans.c lcms/src/cmswtpnt.c lcms/tifficc/getopt.c lcms/src/cmsgamma.c lcms/src/cmsnamed.c lcms/samples/vprf.c lcms/src/cmserr.c lcms/samples/mkcmy.c lcms/src/cmsmtrx.c lcms/src/cmsxform.c.orig lcms/samples/icc2ps.c lcms/python/lcms_wrap.cxx lcms/tifficc/tiffdiff.c lcms/src/cmssamp.c lcms/samples/xgetopt.c lcms/Delphi/lcmsdll.pas lcms/include/icc34.h.in lcms/src/cmsmatsh.c lcms/src/cmspack.c lcms/jpegicc/jpegicc.c lcms/jpegicc/iccjpeg.c lcms/samples/icctrans.c lcms/testbed/testcms.c lcms/samples/mktiff8.c lcms/jpegicc/iccjpeg.h lcms/tifficc/tifficc.c lcms/src/cmsvirt.c lcms/src/cmspcs.c lcms/samples/icclink.c lcms/src/cmsgmt.c lcms/src/cmsio0.c lcms/src/cmsio1.c lcms/samples/mkgrayer.c lcms/filter.c lcms/python/lcms.i lcms/src/cmsxform.c lcms/src/cmsintrp.c lcms/src/cmscnvrt.c lcms/include/lcms.h lcms/doc/LCMSAPI.TXT lcms/src/cmscgats.c lcms/src/cmscam02.c lcms/include/icc34.h lcms/src/cmslut.c lcms/src/cmsps2.c lcms/samples/wtpt.c lcms/samples/itufax.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T220741.207483Z"></a>
2010-05-24T22:07:41.207483Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove executable bits from files which don't need them.

find . -type f -executable  -exec file {} \; \
| grep -v 'shell script text executable' \
| cut -f 1 -d ':' |xargs -n 1 svn propdel svn:executable

The last commit was created by:


find . -type f -executable  -exec file {} \; \
| grep 'script text executable' \
| cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native

</pre>
<p>[lcms/Projects/VC6/lcms.rc lcms/Projects/VC7/lcms.rc lcms/bin/Bin.txt lcms/Delphi/Samples/create.pas lcms/samples/vprf.c lcms/configure.ac lcms/README.1ST lcms/lcms.pc.in lcms/Projects/VC2008/lcms.sln lcms/testbed/sRGBSpac.icm lcms/Projects/VC2008/lcms.vcproj lcms/python/testbed/lab2adobe.py lcms/Delphi/demo1.dfm lcms/samples/xgetopt.c lcms/Projects/VC2005/icclink.vcproj lcms/Projects/VC6/icclink.dsp lcms/Projects/VC7/lcms.vcproj lcms/src/cmscam97.c lcms/testbed/testcms.c lcms/Projects/VC6/icc2ps.dsp lcms/Projects/VC7/icctrans.vcproj lcms/python/testbed/srgb2lab.py lcms/Projects/VC7/tifficc.vcproj lcms/filter.c lcms/Projects/VC6/lcms.dsp lcms/Delphi/delphidemo.cfg lcms/Projects/VC7/icc2ps.vcproj lcms/Projects/VC6/lcms.dsw lcms/Delphi/Samples/testwp.pas lcms/Projects/VC7/lcms.sln lcms/Projects/VC2008/tifficc.vcproj lcms/Projects/VC2005/resource.h lcms/python/testbed/whtpnt.py lcms/doc/TUTORIAL.TXT lcms/src/cmswtpnt.c lcms/Projects/VC2005/Python.vcproj lcms/Projects/BorlandC_5.5/mklcmsdll.bat lcms/include/Makefile.am lcms/Projects/VC7/jpegicc.vcproj lcms/install.gcc lcms/samples/wtpt.1 lcms/Projects/BorlandC_5.5/lcmsdll.lk lcms/src/cmserr.c lcms/makefile.simple lcms/Projects/BorlandC_5.5/lcms.rc lcms/samples/mkcmy.c lcms/src/cmsmtrx.c lcms/Makefile.am lcms/python/testbed/sRGB Color Space Profile.icm lcms/Projects/VC2008/jpegicc.vcproj lcms/Projects/VC7/lcmsdll.vcproj lcms/AUTHORS lcms/samples/icc2ps.1 lcms/Projects/VC2008/resource.h lcms/src/makefile.simple lcms/samples/mktiff8.c lcms/python/testbed/virtprf.py lcms/python/testbed/clamp.py lcms/Projects/BorlandC_5.5/lcmsdll.lst lcms/src/cmsvirt.c lcms/src/cmspcs.c lcms/src/cmsio0.c lcms/python/testbed/cam02.py lcms/Projects/VC6/resource.h lcms/src/cmsxform.c lcms/python/lcms.i lcms/src/cmsintrp.c lcms/Projects/VC2008/lcmsdll.vcproj lcms/jpegicc/jpegicc.1 lcms/COPYING lcms/Projects/VC2005/lcms.rc lcms/samples/icctrans.1 lcms/Projects/VC7/tiffdiff.vcproj lcms/src/cmscgats.c lcms/Projects/VC2008/lcms.rc lcms/tifficc/tifficc.1 lcms/src/cmscam02.c lcms/matlab/icctrans.matlab.pdf lcms/python/testbed/createmsh.py lcms/src/cmslut.c lcms/tifficc/Makefile.am lcms/Lib/MS/MS.TXT lcms/samples/wtpt.c lcms/Projects/VC6/tifficc.dsp lcms/Projects/VC7/Testbed.vcproj lcms/python/testbed/gamma.py lcms/samples/itufax.c lcms/python/Makefile.am lcms/Delphi/demo1.pas lcms/src/cmsgamma.c lcms/Projects/VC6/Python.dsp lcms/Projects/VC2008/Python.vcproj lcms/src/cmsnamed.c lcms/src/cmsxform.c.orig lcms/Projects/VC6/lcmsdll.dsp lcms/Projects/VC2008/Testbed.vcproj lcms/Projects/VC2005/lcms.vcproj lcms/python/testbed/AdobeRGB1998.icc lcms/samples/icc2ps.c lcms/tifficc/tiffdiff.c lcms/samples/makefile.simple lcms/Delphi/Samples/TEST.PAS lcms/src/cmssamp.c lcms/NEWS lcms/samples/Makefile.am lcms/Projects/VC2005/icctrans.vcproj lcms/Projects/VC2005/tifficc.vcproj lcms/Delphi/lcmsdll.pas lcms/Projects/VC2008/icctrans.vcproj lcms/include/icc34.h.in lcms/Delphi/delphidemo.dof lcms/Projects/VC6/lcms.opt lcms/src/cmsmatsh.c lcms/src/cmspack.c lcms/Projects/VC6/Python.plg lcms/jpegicc/jpegicc.c lcms/samples/icctrans.c lcms/Delphi/Samples/MAKETEST.BAT lcms/Projects/VC2005/icc2ps.vcproj lcms/ltmain.sh lcms/Delphi/Samples/gamutchk.pas lcms/tifficc/tifficc.c lcms/Projects/VC2005/lcms.sln lcms/src/cmsio1.c lcms/Projects/VC6/Testbed.dsp lcms/INSTALL lcms/Projects/VC7/icclink.vcproj lcms/jpegicc/makefile.simple lcms/jpegicc/Makefile.am lcms/Projects/VC2005/jpegicc.vcproj lcms/samples/icclink.1 lcms/Delphi/Samples/testfrm.pas lcms/Projects/VC6/jpegicc.dsp lcms/Projects/VC6/icctrans.dsp lcms/src/lcms.def lcms/Delphi/demo1.dcu lcms/Delphi/Samples/getxyz.pas lcms/matlab/icctrans.c lcms/ChangeLog lcms/Projects/VC2008/icclink.vcproj lcms/tifficc/getopt.c lcms/Lib/BC/BC.txt lcms/testbed/makefile.simple lcms/Projects/VC6/Testbed.plg lcms/Delphi/delphidemo.dpr lcms/testbed/Makefile.am lcms/Projects/VC2005/lcmsdll.vcproj lcms/Projects/VC7/resource.h lcms/Projects/VC7/Python.vcproj lcms/Delphi/demo1.ddp lcms/python/testbed/cam97.py lcms/jpegicc/iccjpeg.c lcms/python/testbed/constant.py lcms/Projects/VC2005/tiffdiff.vcproj lcms/python/testbed/srgb2xyz.py lcms/python/testbed/info.py lcms/jpegicc/iccjpeg.h lcms/Projects/VC2008/tiffdiff.vcproj lcms/Projects/VC2008/icc2ps.vcproj lcms/src/Makefile.am lcms/samples/icclink.c lcms/src/cmsgmt.c lcms/Projects/VC2005/Testbed.vcproj lcms/samples/mkgrayer.c lcms/include/lcms.h lcms/Delphi/delphidemo.res lcms/src/cmscnvrt.c lcms/python/swig_lcms lcms/doc/LCMSAPI.TXT lcms/python/testbed/sRGB2adobe.py lcms/tifficc/makefile.simple lcms/include/icc34.h lcms/src/cmsps2.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T220213.500457Z"></a>
2010-05-24T22:02:13.500457Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
make all shell scripts in the lcms directory eol-style native.
</pre>
<p>[lcms/depcomp lcms/compile lcms/missing lcms/config.guess lcms/config.sub lcms/install-sh lcms/mkinstalldirs lcms/configure]</p>
</blockquote>

<p><strong><a name="2010-05-24T183616.496917Z"></a>
2010-05-24T18:36:16.496917Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing EOL to the last line in one of the new ICC files
because MSVC 6 requires this.
</pre>
<p>[base/gsiccmanage.c]</p>
</blockquote>

<p><strong><a name="2010-05-24T163158.315172Z"></a>
2010-05-24T16:31:58.315172Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Merge of icc_work branch into trunk.
These changes make the color architecture of the graphics library ICC-based.
All colors are now managed in terms of ICC profiles including PS CIE color
spaces, for which equivalent ICC profiles are created.    A big feature of
this change is that it makes it very easy to interface a color management
module (CMM) to ghostscript.   The default CMM is now littleCMS and the
interface to littleCMS is contained in gsicc_littlecms.c .
New member variables were added to the imager state including an ICC manager,
which stores the default ICC profiles; a link cache, which reduces the cost of
creating links between ICC profiles, and a profile cache which stores color
spaces created from PS CIE, PDF CalRGB and PDF CalGray colors spaces.
A new directory named iccprofiles has been added.  It contains the default
ICC profiles used if none are specified in the command line.  If
COMPILE_INITS=1, these will be included in the ROM file system.  The new
command line options related to ICC profiles are described in the Use.htm
documentation.
For c-list based rendering, all ICC profiles used in the rendering are stored in
the c-list.   During multi-threaded c-list reading, a link cache is associated with
the primary reader device and is shared amongst the various threads.
Efficiency improvements were made in the handling of soft mask groups, shading
smoothness calculations, and color image rendering.
For details on the branch, please see the commits that were made within the
branch.  There remain indeterminisms to fix.  The files affected include
Bug688807.pdf,  Bug688845.eps, Bug690208.pdf, 09-34.PS, CATX0988.pdf,
CATX1028.pdf,  CATX1101.pdf,  CATX5529.pdf.
Rendering issues to investigate include Bug689830.pdf, fts43xx.xps (page 3)
(shopping cart image), Bug689880.pdf, Bug691002.pdf, Bug689968.pdf,
Bug688584.ps (page 4), catx4949.pdf.
Note that the number of differences generated with the merge amounts to
pretty much every file.
Thanks to everyone who helped and provided input in this work, especially
Ray Johnston.
</pre>
<p>[base/gdevpdfk.c base/gxclimag.c doc/Use.htm base/gdevdflt.c psi/icie.h base/gxpcmap.c base/gxpcolor.h lcms base/gscsepr.c base/gxshade4.c base/gxclthrd.c base/gxcmap.c base/gscscie.c base/gdevwts.c base/gsistate.c base/msvclib.mak base/gxclpage.c base/gscolor2.c base/gsicc_profilecache.c base/gxistate.h base/gscolor2.h base/gsicc_profilecache.h iccprofiles base/gdevp14.c base/gsicc_create.c base/gdevp14.h base/gsicc_create.h psi/write_t2.c psi/zusparam.c base/gdevpbm.c psi/zcolor.c psi/ztrans.c base/gdevpdft.c base/gxshade1.c /trunk/gs base/gdevpsdi.c psi/ireclaim.c psi/os2.mak base/watclib.mak Resource/Init/gs_lev2.ps base/gdevpsdu.c base/gscie.c base/gxclutil.c base/gscolor3.c base/gdevpsd.c base/gscie.h base/gxiscale.c base/gxcldev.h Resource/Init/gs_res.ps base/gxifast.c base/gxdevcli.h base/openvms.mak base/watcw32.mak base/gscms.h psi/msvc32.mak base/gsalloc.c base/lcms.mak base/gxp1fill.c base/gximage.h base/gsciemap.c base/gdevpx.c psi/zcsdevn.c base/ugcclib.mak base/unix-gcc.mak base/gsovrc.c base/gxcie.h base/macos-mcp.mak base/gxshade6.c base/macosx.mak base/gsccolor.h base/gdevrinkj.c base/unixansi.mak base/devs.mak base/gsicc.c base/gxipixel.c base/lib.mak psi/zimage.c base/gsicc.h psi/dxmain.c psi/dxmainc.c Resource/Init/pdf_draw.ps base/gscolor.c Resource/Init/pdf_ops.ps psi/zdevice.c psi/zcie.c psi/zdpnext.c base/gxclist.c psi/zcie.h base/gximono.c base/gxidata.c base/gstrans.c psi/iimage.h base/gdevpdfb.c base/gxclist.h base/gxshade.c base/gstrans.h base/gxclrast.c psi/zncdummy.c base/gxshade.h toolbin/color base/gsiccmanage.c base/Makefile.in base/gdevpdfv.c base/gsiccmanage.h base/gsicc_littlecms.c base/gxclpath.c base/gsicc_littlecms.h psi/icontext.c base/gxclpath.h base/gsstruct.h base/gdevxcf.c base/gxicolor.c base/gscspace.c base/gdevimdi.c base/gscdevn.c base/gscolor1.c base/gxclread.c base/gscspace.h base/bcwin32.mak base/gsdparam.c base/gs.mak psi/zshade.c base/gdevbbox.c psi/int.mak base/gxcspace.h psi/zicc.c base/gsstate.c base/winlib.mak base/gsicccache.c psi/zicc.h psi/zimage3.c base/gsicccache.h base/gdevpdfc.c base/gstparam.h base/gxblend.c base/gdevpdfg.c base/gxblend.h]</p>
</blockquote>

<p><strong><a name="2010-05-24T020113.653152Z"></a>
2010-05-24T02:01:13.653152Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Recognize Corel tint transform function and replace it with an equivalent
calculator function. Bug 690986.
</pre>
<p>[psi/zfunc4.c]</p>
</blockquote>

<p><strong><a name="2010-05-23T001525.592930Z"></a>
2010-05-23T00:15:25.592930Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Decide whether load a CFF font as a simple font or a CIDFont based on the
/Subtype of the font object instead of the /Subtype of the font stream.
Acrobat appears to ignore the latter. Bug 691334.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-05-22T091730.088324Z"></a>
2010-05-22T09:17:30.088324Z Ken Sharp</strong></p>
<blockquote>
<pre>
Explicit pointer cast to silence a gcc compiler warning.
</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-05-21T151607.910956Z"></a>
2010-05-21T15:16:07.910956Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Following Acrobat implementation but contrary to TTF spec, consider cmap entry
that has endCode &lt; startCode as an entry with endCode == startCode.
According to the spec, &quot;to use these arrays, it is necessary to search for the
first endCode that is greater than or equal to the character code to be
mapped. If the corresponding startCode is less than or equal to the character
code ...&quot;. I.e. an entry with endCode &lt; startCode should have no effect.
Thanks to Ken for the patch. Bug 691326.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-05-21T081456.354805Z"></a>
2010-05-21T08:14:56.354805Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix: device reference counting problem with patterns and clipping

Bug #690572 more details here. The problem was caused by installing a clip device while
drawing a pattern tile. This patch initialises the finalize member of the structure
where the clip device will be created to NULL. If a clip device is required, the member
will be initialised to a real routine. After drawing the pattern cell, if the finalize
routine is non-NULL we execute it.

This correctly dereferences the forwarded device if we create a clipping device.

</pre>
<p>[base/gxp1fill.c]</p>
</blockquote>

<p><strong><a name="2010-05-21T063511.431787Z"></a>
2010-05-21T06:35:11.431787Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding missing dependencies so that setupgs and uninstgs can be built ahead or independent of the main targets</pre>
<p>[psi/winint.mak psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-05-20T073106.101672Z"></a>
2010-05-20T07:31:06.101672Z regression</strong></p>
<blockquote>
<pre>
The clustermaster.pl code now checks the pid in the lock file to see if the
task is running.  Also no longer test pdfwrite with the language switch build.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2010-05-20T062443.585523Z"></a>
2010-05-20T06:24:43.585523Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fix up the eol-style of the rest of the executable files by hand.
Remove executable bit from toolbin/bmpcmp.c

</pre>
<p>[toolbin/bmpcmp.c jbig2dec/ltmain.sh tiff/config/ltmain.sh libpng/contrib/pngminim/encoder/gather.sh libpng/contrib/pngminim/preader/gather.sh libpng/scripts/libpng-config-body.in libpng/contrib/pngminim/decoder/gather.sh toolbin/tests/gsvalidate.py]</p>
</blockquote>

<p><strong><a name="2010-05-20T061020.265063Z"></a>
2010-05-20T06:10:20.265063Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Set other type of shell script as native text.

find . -type f -executable  -exec file {} \; | \
grep 'script text executable'  | grep -v 'POSIX'  | \
cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/tests/dump_checksum.py toolbin/tests/gscheck_testfiles.py toolbin/tests/dump_checksum_plus.py toolbin/localcluster/readlog.pl toolbin/search-svn-revs toolbin/localcluster/clustermonitor.cgi toolbin/localcluster/clusterpush.pl toolbin/tests/dump_checksum_raw.py toolbin/localcluster/compare.pl toolbin/localcluster/comparerevs.pl toolbin/tests/find_unique_file.py toolbin/localcluster/clustermaster.pl toolbin/localcluster/weekly.sh toolbin/localcluster/build.pl toolbin/tests/build_revision.py toolbin/htmldiff.pl toolbin/tests/compare_checksumdb.py toolbin/tests/update_baseline.py toolbin/tests/make_baselinedb.py toolbin/tests/validate.py toolbin/bugsByEngineer.pl toolbin/localcluster/clusterpull.sh toolbin/tests/regen_filelist.py toolbin/localcluster/pngs2html.pl toolbin/localcluster/nightly.pl freetype/builds/mac/ascii2mpw.py toolbin/tests/compare_checksums.py toolbin/tests/run_nightly.py toolbin/tests/regen_baseline.py toolbin/tests/myoptparse.py toolbin/tests/get_baselines.py toolbin/tests/run_regression.py toolbin/localcluster/setupcluster toolbin/localcluster/clustermonitor.pl toolbin/tests/testdiff.py toolbin/tests/updatelistpdf.py toolbin/tests/run_series.py toolbin/tests/updatelist.py toolbin/localcluster/run.pl toolbin/tests/get_baseline_log.py toolbin/performance.pl toolbin/localcluster/cachearchive.pl toolbin/tests/make_testdb.py toolbin/tests/collate.py]</p>
</blockquote>

<p><strong><a name="2010-05-20T060141.643170Z"></a>
2010-05-20T06:01:41.643170Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Set all identifiable shell script as native text

find . -type f -executable  -exec file {} \; | \
grep 'POSIX shell script text executable' | \
cut -f 1 -d ':' |xargs -n 1 svn propset svn:eol-style native

</pre>
<p>[libpng/missing cups/pstoraster.in libpng/test-pngtest.sh cups/pstopxl.in libpng/install-sh jbig2dec/configure libpng/configure contrib/pcl3/ppd/catppd toolbin/clusterpush.sh libpng/depcomp jpeg/install-sh jbig2dec/config.guess contrib/pcl3/lib/if-pcl3 freetype/configure libpng/config.guess jasper/configure tiff/config/missing jbig2dec/config.sub jpeg/configure libpng/config.sub tiff/config/install-sh jpeg/config.guess zlib/configure jpeg/config.sub tiff/config/depcomp libpng/scripts/libpng-config-head.in tiff/config/compile libpng/scripts/libpng-config.in libpng/autogen.sh tiff/config/config.guess jbig2dec/mkinstalldirs jpeg/ltconfig tiff/config/config.sub libpng/mkinstalldirs contrib/epson740/ps-to-printer.fpi_rh5.2 jasper/acaux/missing jasper/acaux/install-sh tiff/autogen.sh freetype/builds/unix/install-sh freetype/builds/unix/mkinstalldirs tiff/configure jasper/acaux/depcomp jasper/acaux/compile tiff/config/mkinstalldirs jasper/acaux/config.guess contrib/pcl3/lib/cups-pcl3 jasper/acaux/config.sub]</p>
</blockquote>

<p><strong><a name="2010-05-20T055235.456761Z"></a>
2010-05-20T05:52:35.456761Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Avoid raw carriage returns in configure which confuses svn

This is a known bug apparently of autoconf 2.63 which was fixed. Here is the upstream log entry:
http://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=commitdiff;h=cb34ecf

2008-10-27  Eric Blake  &lt;ebb9@byu.net&gt;

Avoid raw carriage return in scripts.
* lib/autoconf/status.m4 (_AC_OUTPUT_FILES_PREPARE): Generate CR
via tr, rather than with literal byte.
* THANKS: Update.
Reported by Steven R. Loomis; patch suggested by Thomas Dickey.


</pre>
<p>[jbig2dec/configure]</p>
</blockquote>

<p><strong><a name="2010-05-19T145138.835112Z"></a>
2010-05-19T14:51:38.835112Z Robin Watts</strong></p>
<blockquote>
<pre>
Some work towards (but not a complete cure for) bug 691030.

Previously XXX_slant_into_trapezoids would check for 2 'simple' cases,
and bale into the fully general fill_slant_adjust function otherwise.
The simple cases were where the top span was a subset of the bottom one, or
vice versa.

Unfortunately the way the code to test for these cases was originally written,
one of these special cases could be used for shaped with vertical sides, and
the other couldn't.

By rewriting the test slightly, both cases can be used with trapezoids that
have one vertical side.

For good measure we also extract the 'rectangle' case out separately.

Cluster testing shows no differences (barring a couple of indeterminisms).

This reduces the output from 5 shapes (2 rectangles, 3 traps) to 3 (2
rectangles, 1 trap). One of the rectangles is still a repeat, but it's
a step in the right direction.



</pre>
<p>[base/gxfillts.h]</p>
</blockquote>

<p><strong><a name="2010-05-19T100905.486708Z"></a>
2010-05-19T10:09:05.486708Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Bug 691291. Fix reading uninitialized memory.

The change I made in r10603 had a problem comparing with
uninitialized data when using Roman fonts.
The side effect was slowing down font rendering a little.
In this change I added extra initializer and made
intention of the 'if' condition more clear.
No difference on outputs expected nor observed by localcluster
tests.</pre>
<p>[base/gschar0.c]</p>
</blockquote>

<p><strong><a name="2010-05-19T074220.717044Z"></a>
2010-05-19T07:42:20.717044Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Follow-up to r11278.  Removing jbig2dec/config.h.

r11278 enabled jbig2dec/configure to be run.
I agree with the change but jbig2dec/config.h was also under
subversion control.  With r11278, after someone runs
'configure' or 'autogen.sh', jbig2dec/config.h become
modified status.
jbig2dec/config.h doesn't need to be here.  Deleting.

Related bug: 691304 &amp; 691312.</pre>
<p>[jbig2dec/config.h]</p>
</blockquote>

<p><strong><a name="2010-05-18T224039.023883Z"></a>
2010-05-18T22:40:39.023883Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
define -DHAVE_CONFIG_H and run jbig2dec/configure from top-level configure.
The fixes some portability issues seen on opensolaris; further follow-up to bug 691304</pre>
<p>[base/Makefile.in base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-18T222947.346946Z"></a>
2010-05-18T22:29:47.346946Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
typo in one word. bug 691323</pre>
<p>[doc/Readme.htm]</p>
</blockquote>

<p><strong><a name="2010-05-18T222313.250745Z"></a>
2010-05-18T22:23:13.250745Z regression</strong></p>
<blockquote>
<pre>
Minor changes to cluster code:

support language switch build testing
recover from disk full errors
automatically create directories needed for new nodes in run.pl
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/clusterpull.sh toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-18T122248.908526Z"></a>
2010-05-18T12:22:48.908526Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Disabling compiler warnings for discarding 'const'.

</pre>
<p>[jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-05-18T085518.202611Z"></a>
2010-05-18T08:55:18.202611Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691313: remove the IBM Omni driver from the default build on Linux.
Previously it could be excluded by giving configure &quot;--without-omni&quot;,
this revision reverses the logic, so Omni can be include by giving
configure &quot;--with-omni&quot;.</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-18T043225.607601Z"></a>
2010-05-18T04:32:25.607601Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Change the order in which jobs that take too long are killed on the cluster
nodes to prevent leftover jobs when running bmpcmp.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-17T154838.534341Z"></a>
2010-05-17T15:48:38.534341Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix - type 1/CFF font interpreter.
The gs_type1_piece_codes routine interprets a type 1 or CFF glyph program to determine
whether the glyph is composed of two subglyphs (a SEAC).

There was a problem with the CFF opcode cntrmask which did not cater for the case where
it is called with a number of operands on the stack. In this case the operands are to
be interpreted as vstem hints. Because this was not done, the interpreter had the wrong
number of hints, and so did not interpret enough of the following bytes as mask data for
the cntrmask operation. This led to attempting to interpret data as operands, which
caused corrupted glyphs as well as potential crashes.

This does not appear to be tested by any of our current test files (according to a
cluster test), so no differences are expected.
</pre>
<p>[base/gxtype1.c]</p>
</blockquote>

<p><strong><a name="2010-05-17T082506.874101Z"></a>
2010-05-17T08:25:06.874101Z Ken Sharp</strong></p>
<blockquote>
<pre>
white space change only, committed to make a regression run as the test for the
previous revision was interrupted.</pre>
<p>[psi/write_t1.c]</p>
</blockquote>

<p><strong><a name="2010-05-17T075543.268496Z"></a>
2010-05-17T07:55:43.268496Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler and make warnings.
</pre>
<p>[psi/write_t1.c psi/int.mak psi/write_t1.h]</p>
</blockquote>

<p><strong><a name="2010-05-17T043957.140765Z"></a>
2010-05-17T04:39:57.140765Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding check for header stringprep.h; fix bug 691312</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-05-17T035931.965365Z"></a>
2010-05-17T03:59:31.965365Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fixes portability issue properly with r11256 (which is identical with r11520),
first discovered by Ralph 6 months ago with r10520
which results in its being reverted in r10540 .

******************************
Revert c10520 which causes problems with the MSVC build.

&#36;(CC_) enforces 'ansi' C under msvc32.mak, disabling any Microsoft
extensions. This often causes problems with 3rd party libraries
which try to take advantage of those extensions.

This means that the -fPIC flag is again not propagated in the GCC
build; this is just to unbreak the build until I can test a different
solution which works on both platforms.
******************************
As Ralph explained then, some of libtiff requires non-ansi extensions to work.

The main culpit is tif_win32.c (which includes &lt;windows.h&gt;) and some of the
file IO flags not being defined. So this commit fix the ansi issue properly.

</pre>
<p>[tiff/libtiff/tiffiop.h base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-17T034702.654413Z"></a>
2010-05-17T03:47:02.654413Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix windows build breakage in r11249

This change (defining TIFFCONFIG_SUFFIX) should have been part of
r11249 (create tif_config.h for non-autoconf build)
which in turn should have been part of
r11241 (hook up libtiff with non-autoconf build via
&quot;make -f base/unix-gcc.mak&quot; and &quot;make -f base/unixansi.mak&quot;)

The explanation is that in r10317 where Lars originally hooked up libtiff,
tif_config.h is generated by libtiff/configure (which is driven by the
top-level configure), but special provision is provided for non-autoconf build
(win32 and VMS) by copying from a canned header file.
If one chooses to bypass the top-level configure, *on every platform*
(win32, VMS, and non-autoconf unix build), one must provide similiar special
provision as well.

Personally I'll prefer not to support non-autoconf unix build.

</pre>
<p>[base/unix-gcc.mak base/unixansi.mak base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-16T183240.253209Z"></a>
2010-05-16T18:32:40.253209Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Changes to the nightly regression testing system to support weekly testing.
</pre>
<p>[toolbin/localcluster/nightly.pl toolbin/localcluster/weekly.sh toolbin/localcluster/runNightly.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-15T105714.279373Z"></a>
2010-05-15T10:57:14.279373Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
rename PDEP to TIFFDEP to avoid clashing with PDEP from libpng.mak; bug 691299</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T105547.722308Z"></a>
2010-05-15T10:55:47.722308Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
comment out a later duplcate definition; bug 691299</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T095005.378608Z"></a>
2010-05-15T09:50:05.378608Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
latest version of these files from Adobe's web site: http://download.macromedia.com/pub/opensource/cmap/</pre>
<p>[Resource/CMap/UniGB-UTF8-H Resource/CMap/UniJIS2004-UTF32-H Resource/CMap/UniJIS2004-UTF16-H Resource/CMap/UniJIS2004-UTF8-H Resource/CMap/UniCNS-UTF32-H Resource/CMap/UniJISX0213-UTF32-H Resource/CMap/UniCNS-UTF16-H Resource/CMap/UniJIS-UTF32-H Resource/CMap/UniCNS-UTF8-H Resource/CMap/UniJIS-UTF16-H Resource/CMap/UniGB-UTF32-H Resource/CMap/UniJIS-UTF8-H Resource/CMap/UniJISX02132004-UTF32-H Resource/CMap/UniGB-UTF16-H]</p>
</blockquote>

<p><strong><a name="2010-05-15T094615.270585Z"></a>
2010-05-15T09:46:15.270585Z Ken Sharp</strong></p>
<blockquote>
<pre>
Add skeleton support for the Bitstream font engine. In its current form this only allows
for type 1 PostScritp fonts, CFF is trivial to add, as should be support for Bitstream's
own compressed format. Addition of type 42/TrueType fonts should be patterned after
FreeType, as there is support in Bitstream for a callback to provide TrueType
outlines. There is no such provision for PostScript fonts.

To build; define BITSTREAM_BRIDGE=1 and BITSTREAM_ROOT=&quot;&quot;, the root should point one
level above the 'core' directory. In the current code this would be :
&quot;/bitstream/FontFusion 4.5a SDK&quot;
</pre>
<p>[psi/zfapi.c psi/ifapi.h psi/write_t1.c psi/int.mak psi/msvc32.mak psi/fapibstm.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T081759.395641Z"></a>
2010-05-15T08:17:59.395641Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
better way of defining SOC_LOADER when try ing to do &quot;make -f base/unix-gcc.mak so&quot;</pre>
<p>[base/unix-dll.mak base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T080646.613460Z"></a>
2010-05-15T08:06:46.613460Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
The final part of trying to &quot;ln -s base/unix-gcc.mak Makefile ; make so&quot; work.

There were some fundamental problems with the older version: The so target really
should be built in three distinct stages with three different FLAGS - the
utils (genarch, gechogs) executable part, the shared library part, and the two final
executable part. The library should be built with the shared-object flags, but neither
of the utils nor the final executables should be built with &quot;-shared&quot;, since they are
executables and not libraries. Hope this is clear.

There is also a little problem from SOC_LOADER not being defined if this file
is not used from ./configure's Makefile.

</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T075816.778296Z"></a>
2010-05-15T07:58:16.778296Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
use CC_ instead of CC like everywhere else, to make the &quot;so&quot; target work</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T063020.380857Z"></a>
2010-05-15T06:30:20.380857Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
&quot;-shared&quot; is a linker flag and not a compiler (object code
generation) flag; another piece of trying to
make &quot;make -f base/unix-gcc.mak&quot; work</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T062741.486639Z"></a>
2010-05-15T06:27:41.486639Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
try to make 'make -f base/unix-gcc.mak so' work
When not run through ./configure, HAVE_CONFIG_H isn't defined and
the jbig2 codes drop through to generic unknown unix platform - so we put some
generic unix values here.

</pre>
<p>[jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-15T062335.840946Z"></a>
2010-05-15T06:23:35.840946Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
correct documentation on how make so should work -
./configure --enable-dynamic is required</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T033629.389869Z"></a>
2010-05-15T03:36:29.389869Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding new header dependencies from the recent remove-globals effort</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T031349.664716Z"></a>
2010-05-15T03:13:49.664716Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding a needed include to silent a compiler warning introduced by the
recent remove-globals effort</pre>
<p>[base/gslibctx.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T031231.280935Z"></a>
2010-05-15T03:12:31.280935Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
another fix to bug 691306
This was broken in r2746 (June 2002) which nobody has noticed for 8 years.
This code path is only used for 'make -f unixansi.mak' (very generic unix cc compiler).

</pre>
<p>[base/gp_unifs.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T030909.671905Z"></a>
2010-05-15T03:09:09.671905Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
generate tif_config.h if it is not there. part of fixes to bug 691306</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T030653.120732Z"></a>
2010-05-15T03:06:53.120732Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding comments about the vga devices being Linux specific</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T030554.250134Z"></a>
2010-05-15T03:05:54.250134Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
part of fix to bug 691306.

These two devices has been broken since r2925 (DeviceN, August 2002),
but not built by default at all. They were blindly enabled in
unix-gcc.mak amongst the ESP merge from Till, and it would appear that
nobody has noticed since the merge (8.57-8.60) until now.

</pre>
<p>[base/gdevl256.c base/gdevvglb.c]</p>
</blockquote>

<p><strong><a name="2010-05-15T025814.802157Z"></a>
2010-05-15T02:58:14.802157Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
freetype2 dependency in base/unixansi.mak to
make &quot;make -f base/unixansi.mak&quot; work;
another part for bug 691306</pre>
<p>[base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T025722.770443Z"></a>
2010-05-15T02:57:22.770443Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
freetype2 dependency in base/unix-gcc.mak to
make &quot;make -f base/unix-gcc.mak&quot; work; bug 691306</pre>
<p>[base/unix-gcc.mak]</p>
</blockquote>

<p><strong><a name="2010-05-15T025530.474135Z"></a>
2010-05-15T02:55:30.474135Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add documentation about the default internal resolution for pdfwrite is 720dpi</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T025408.145913Z"></a>
2010-05-15T02:54:08.145913Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
add documentation about how to force-embedding the basic 14 fonts</pre>
<p>[doc/Ps2pdf.htm]</p>
</blockquote>

<p><strong><a name="2010-05-15T025247.037525Z"></a>
2010-05-15T02:52:47.037525Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix an obvious typo in the makefile</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T164605.198340Z"></a>
2010-05-14T16:46:05.198340Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added support to unix-gcc.mak and unixansi.mak to build/use libtiff
(also fixed some typos and made the device lists more similar).

Note because of the FreeType code these files do not work with
the current head (they work with ghostscript-8.71).

Fixes Bug 691301.

</pre>
<p>[base/unix-gcc.mak base/unixansi.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T042314.678757Z"></a>
2010-05-14T04:23:14.678757Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
remove one extra tab introduced in r10994; non-GNU Make on Tru64 and HP-UX is
picky. Bug 688184 and bug 691299</pre>
<p>[psi/psromfs.mak]</p>
</blockquote>

<p><strong><a name="2010-05-14T042029.682174Z"></a>
2010-05-14T04:20:29.682174Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
HP compiler quirk - apparently the same workaround is needed for SUN Pro C and
GCC 1.x (see a few lines before this change) ; bug 688184</pre>
<p>[contrib/opvp/opvp.h]</p>
</blockquote>

<p><strong><a name="2010-05-14T041842.997881Z"></a>
2010-05-14T04:18:42.997881Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
uint8_t type located in usual header on HP-UX needed for jbig2dec ; bug 688184</pre>
<p>[jbig2dec/os_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-14T041654.357328Z"></a>
2010-05-14T04:16:54.357328Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fix conflicting types against HP-UX system header in jasper; bug 688184</pre>
<p>[jasper/src/libjasper/include/jasper/jas_types.h]</p>
</blockquote>

<p><strong><a name="2010-05-13T200808.900471Z"></a>
2010-05-13T20:08:08.900471Z Robin Watts</strong></p>
<blockquote>
<pre>
Nudge the windows solution/makefiles closer to supporting 64 bit builds
by defining WIN64 and amending makefiles to pass the define on through
recursive calls.

</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript-ufst.vcproj ghostscript.vcproj /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj psi/msvc32.mak /trunk/ghostpdl/main/pcl6_msvc.mak /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-13T164947.848287Z"></a>
2010-05-13T16:49:47.848287Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding NULL check before closedevice - bug report 691296 and patch from Tim Waugh. Thanks.</pre>
<p>[base/gdevbbox.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T085542.013750Z"></a>
2010-05-13T08:55:42.013750Z Ken Sharp</strong></p>
<blockquote>
<pre>
Changes only in white space, to provoke another regression test.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T083002.236776Z"></a>
2010-05-13T08:30:02.236776Z Ken Sharp</strong></p>
<blockquote>
<pre>
No changes, just an attempt to provoke some regression runs.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-13T080516.555333Z"></a>
2010-05-13T08:05:16.555333Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FAPI interface
There is code in the FAPI interface for replacing a font's /FontBBox entry, this
sometimes has to create a new array to insert into the dictionary, if the old array is
not suitable for storing real values.

The code to do this continued using ref_assign_old, as it had done for replacing the
values in an existing array. This appears to be incorrect, when created the refs in a
new array are uninitialised so attempting to use ref_assign_old tries to use
uninitialised data.

Modified to use ref_assign_new instead, as indicated by the comments in store.h

This *may* reduce some of the non-deterministic behaviour, possibly with files such
as ShadowText.eps
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-12T084416.052741Z"></a>
2010-05-12T08:44:16.052741Z Chris Liddell</strong></p>
<blockquote>
<pre>
Elimate an irksome compiler warning introduced in r11221</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-05-12T014318.946640Z"></a>
2010-05-12T01:43:18.946640Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding documentation about the -dDisableFAPI=true switch in various places</pre>
<p>[doc/Use.htm doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-11T220522.389565Z"></a>
2010-05-11T22:05:22.389565Z regression</strong></p>
<blockquote>
<pre>
The local cluster now tests the language switch build (ls).
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/clusterpush.txt]</p>
</blockquote>

<p><strong><a name="2010-05-11T212119.118628Z"></a>
2010-05-11T21:21:19.118628Z Robin Watts</strong></p>
<blockquote>
<pre>
Add x64 platform target to Visual Studio projects. I can't
test it myself due to not having a 64bit Windows setup,
but it at least starts building and then falls over when
it tries to run a 64bit exe as part of the build process.



</pre>
<p>[/trunk/ghostpdl/win32/xps.vcproj ghostscript-ufst.vcproj /trunk/ghostpdl/win32/pcl.vcproj /trunk/ghostpdl/win32/svg.vcproj /trunk/ghostpdl/win32/language_switch.vcproj]</p>
</blockquote>

<p><strong><a name="2010-05-11T210209.407086Z"></a>
2010-05-11T21:02:09.407086Z regression</strong></p>
<blockquote>
<pre>
Minor improvement to cluster node log collection code.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-11T204110.123188Z"></a>
2010-05-11T20:41:10.123188Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp was reporting the wrong page number for images, due to me forgetting
to increment the imagecount when images were loaded. Fixed here.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T172501.376580Z"></a>
2010-05-11T17:25:01.376580Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bugs 690356 and 690832: have the colour space object take a copy of string
data associated with an indexed colour space lookup table. This prevents the
colour space finalising code (gx_final_Indexed) freeing the contents of a
Postscript object which may still be in use.</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T154421.967848Z"></a>
2010-05-11T15:44:21.967848Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI)
The PDF interpreter, when a font is missing, and it has the 'small caps' flag set,
creates a substitute by altering the CharStrings of the substitute font, replacing
the lower case glyph CharStrings with procedures which 'show' the upper case glyph at a
reduced size.

This ends up in the FAPI code as a t_mixedarray type which was being missed by the check
for a t_array, added previously to handle arbitrary procedures in a type 1 font. After
extending the check to include t_mixedarray it was clear that the SEAC processing was
also messing up the dictionary lookup, so it was necessary to restore a value which
had been overwritten in case a SEAC turned up.

zero-length-font.pdf should now work as it does without FAPI, no other differences
expected.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T143432.672494Z"></a>
2010-05-11T14:34:32.672494Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise the UFST interface code for PCL/PXL and GS to work with the changes to
eliminate global variables in the Artifex code base.
NOTE: the UFST_REENTRANT configuration was broken, and still is (it has been
since the creation of gxfapiu.[ch] files. To be resolved in the future. At
this time, therefore, no build integrating UFST can be thread safe.


</pre>
<p>[/trunk/ghostpdl/pl/plulfont.c psi/fapiufst.c base/gxfapiu.c base/gxfapiu.h]</p>
</blockquote>

<p><strong><a name="2010-05-11T132443.420456Z"></a>
2010-05-11T13:24:43.420456Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691249 - error caused by failing to initialise new member of
libctx that was previously a global.

We now memset the contents of libctx to 0 after mallocing it, and then
explicitly set the non-zero/NULL/false values. This is safer long term as
it protects us from making the same mistake in future.

</pre>
<p>[base/gslibctx.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T124144.704781Z"></a>
2010-05-11T12:41:44.704781Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
replace &quot;/*&quot; by &quot;&lt;slash&gt;&lt;star&gt;&quot; to avoid
compiler warning about comments inside comment </pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T115510.416074Z"></a>
2010-05-11T11:55:10.416074Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Debug code for helping in debug of 689737.  The pattern that is created is 1
bpp.  With this code the pattern bit map is dumped for opening with photoshop
as a raw 8bit image.  The source of the problem appears to be incorrect
creation of the pattern bit map when GraphicAlphaBits is set to greater than
1.</pre>
<p>[base/gxpcmap.c]</p>
</blockquote>

<p><strong><a name="2010-05-11T093516.657505Z"></a>
2010-05-11T09:35:16.657505Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (fonts)
Bug #691290 &quot;new freetype code gives error /typecheck in definefont&quot;

When creating a Decoding from an Encoding array, treat null objects the same as /.notdef
(ie not encoded).

No differences expected.
</pre>
<p>[Resource/Init/gs_fntem.ps]</p>
</blockquote>

<p><strong><a name="2010-05-10T151725.103327Z"></a>
2010-05-10T15:17:25.103327Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FreeType) : illegal use of setcurrentpoint not handled as per Adobe.
Bug #691172, file type1-ce1_setcurrentpoint.ps

The PostScript file includes a font which illegally uses setcurrentpoint to establish an
absolute x/y position. The spec is quite clear that this operator is *only* meaningful
when processing the results of an OtherSubr, so this usage is definitely illegal.

Not only does it use setcurrentpoint but, unlike previous uses we have seen, it does not
simply establish 0,0 as the initial point, which can be safely ignored, it actually
uses it to displace the outline vertically.

FreeType normally just puts two uninitialised variables on the stack, ignores the
setcurrentpoint and pops the two dummy values. Instead, we now push the current x and
y co-ordinates when we get a '0 callothersubr'. In setcurrentpoint we then use the
top two values on the stack to set the current point. This now works for the illegal
usage seen here, the previous illegal usage, and does not break well-formed fonts
which actually use the OtherSubrs to set the point.

</pre>
<p>[freetype/src/psaux/t1decode.c]</p>
</blockquote>

<p><strong><a name="2010-05-10T122909.676516Z"></a>
2010-05-10T12:29:09.676516Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Retry of fix for Bug 69048 (this one actually builds...) Again this should
only be a factor when using GraphicsAlphaBits.  The fix was to make sure
that when GraphicsAlphaBits is used we initialize the pattern bits buffer.
Otherwise the get_bits operation used during the gx_default_copy_alpha grabs
uninitialized memory.  Since we do not test with GraphicsAlphabits in the
regression testing I don't expect there to be any differences.</pre>
<p>[base/lib.mak base/gxpcmap.c base/gxdevmem.h base/gdevabuf.c base/gspaint.c]</p>
</blockquote>

<p><strong><a name="2010-05-10T015742.574530Z"></a>
2010-05-10T01:57:42.574530Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Reversion to 11210 until I figure out what went wrong...</pre>
<p>[base/gsutil.h base/lib.mak base/gxpcmap.c base/gspaint.c base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-05-09T231059.799862Z"></a>
2010-05-09T23:10:59.799862Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 690487.  This should only be a factor when using GraphicsAlphaBits.
The fix was to make sure that when GraphicsAlphaBits is used we initialize the
pattern bits buffer.  Otherwise the get_bits operation used during the
gx_default_copy_alpha grabs uninitialized memory.  Since we do not test with
GraphicsAlphabits in the regression testing I don't expect there to be any
differences.</pre>
<p>[base/gsutil.h base/lib.mak base/gxpcmap.c base/gspaint.c base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T223046.926748Z"></a>
2010-05-08T22:30:46.926748Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update license headers of a few retaining files with AFPL header.
Bug 691285.
</pre>
<p>[Resource/Decoding/StandardEncoding Resource/Decoding/Latin1]</p>
</blockquote>

<p><strong><a name="2010-05-08T212213.614092Z"></a>
2010-05-08T21:22:13.614092Z regression</strong></p>
<blockquote>
<pre>
Whitespace changes only.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-08T211223.981766Z"></a>
2010-05-08T21:12:23.981766Z regression</strong></p>
<blockquote>
<pre>
Minor changes to cluster software:

Check svn commands for errors and retry.

Gather individual logs and md5sums after each job is completed
rather than at the end of all jobs.
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-08T204725.658412Z"></a>
2010-05-08T20:47:25.658412Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Minor changes to the cluster software:

Added a lock file to the clusterpull.sh task
Updated the documentation to explain how to temporarily disable a node.

</pre>
<p>[toolbin/localcluster/clusterpull.sh toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-05-08T155646.469253Z"></a>
2010-05-08T15:56:46.469253Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Detect and break an infinite loop when some of the image data source are
at EOF, some are not, and the image code doesn't take more data.
Bug 691285.
</pre>
<p>[psi/zimage.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T095955.023824Z"></a>
2010-05-08T09:59:55.023824Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initialise a structure to silence a Coverity warning.</pre>
<p>[base/gdevpdfj.c]</p>
</blockquote>

<p><strong><a name="2010-05-08T085757.923764Z"></a>
2010-05-08T08:57:57.923764Z Ken Sharp</strong></p>
<blockquote>
<pre>
Really, properly, silence the gcc compiler this time....</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T143008.276765Z"></a>
2010-05-07T14:30:08.276765Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix clist_band_height to use the macro defined in gxband.h as other
code does to prevent future bitrot. Also use macros for the clist_ cfname,
cfile, bfname, bfile.</pre>
<p>[base/gxclist.h]</p>
</blockquote>

<p><strong><a name="2010-05-07T142318.978837Z"></a>
2010-05-07T14:23:18.978837Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix number of elements in the BAND_PARAMS_INITIAL initializer macro to
correspond to the size of gx_band_params_t (needed since rev 5751).</pre>
<p>[base/gxband.h]</p>
</blockquote>

<p><strong><a name="2010-05-07T121650.113521Z"></a>
2010-05-07T12:16:50.113521Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence some compiler warnings about not checking the return value from fread.</pre>
<p>[base/gdevpdf.c base/gdevpdfu.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T121247.989467Z"></a>
2010-05-07T12:12:47.989467Z Ken Sharp</strong></p>
<blockquote>
<pre>
Initialise the members of a local structure to silence a (spurious) compiler and
Coverity warning.</pre>
<p>[base/gdevpdte.c]</p>
</blockquote>

<p><strong><a name="2010-05-07T081729.050795Z"></a>
2010-05-07T08:17:29.050795Z Ken Sharp</strong></p>
<blockquote>
<pre>
Silence a GCC compiler warning, no differences expected.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160427.459137Z"></a>
2010-05-06T16:04:27.459137Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove gs_debug_out global variable as it is never used.

No differences expected or seen with local cluster testing.

</pre>
<p>[base/bench.c base/gsmisc.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160343.016324Z"></a>
2010-05-06T16:03:43.016324Z Robin Watts</strong></p>
<blockquote>
<pre>
Update overprint device to avoid writing back to 3 global variables
({generic,no,sep}_overptint_procs). We still have those global variables
but each instantiated device takes copies of them and does any writing back
into the copies. This is part of the work for bug 691207.

No differences expected or shown by local cluster testing.

</pre>
<p>[base/gsovrc.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T160028.103268Z"></a>
2010-05-06T16:00:28.103268Z Robin Watts</strong></p>
<blockquote>
<pre>
Move gs_interp_reschedule_proc, gs_interp_time_slice_proc, and
gs_interp_time_slice_ticks into context to avoid global variables as
part of the work for bug 691207.

No differences expected or seen with local cluster testing.

</pre>
<p>[psi/icontext.c psi/zcontext.c psi/icstate.h psi/interp.c]</p>
</blockquote>

<p><strong><a name="2010-05-06T152510.815510Z"></a>
2010-05-06T15:25:10.815510Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (FAPI &amp; FreeType)

Bug #691284 &quot;Error: /unknownerror in --.FAPIBuildChar&quot;
The issue is caused because the PostScript file adds to an existing type 1 font a
CharString entry which is not in type 1 CharString format. I would have thought this
to be illegal but other PostScript interpreters (specifically Distiller) are happy
with it.

Modifed the FAPI interface so that after retrieving a type 1, non-CID, CharString we
test to see if it is a procedure, if it is, then we return an error from the FAPI
code to the caller (in this case the FreeType interface).

Modified the FreeType interface so that if the CharString retrieval returns an error
we return a  specific (otherwise unused) error to the caller, in this case the
FreeType engine. On return from FreeType to the interface we test for the specific
FreeType error (FT_ERR_Invalid_File_Format) and if this is detected then instead of
returning an error to FAPI, we add one to the character index (to ensure it isn't 0)
and return that to FAPI.

Finally, in the FAPI code, after 'rendering' the glyph, if we were returned a value
&gt; 0 then we assume that 'something went wrong' with the CharString. As a last-ditch
effort we use the return value -1 to retrieve the CharString, and then 'exec' it.

NB if we fail to retrieve the CharString at this level, we return an invalidfont error.


</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h]</p>
</blockquote>

<p><strong><a name="2010-05-06T030441.737028Z"></a>
2010-05-06T03:04:41.737028Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix compilation errors on Visual C that wants &quot;ui64&quot; suffix instead of &quot;ULL&quot;
for &quot;unsigned long long&quot; numerals.
</pre>
<p>[base/sha2.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T203019.371369Z"></a>
2010-05-05T20:30:19.371369Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove 2 unused globals. These should have been removed as part of 11146.

No differences expected.

</pre>
<p>[psi/iinit.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T195805.790577Z"></a>
2010-05-05T19:58:05.790577Z regression</strong></p>
<blockquote>
<pre>
Minor changes to the local cluster:

Report md5sum differences even in files that generate an error during processing.
Archive the email and log files for all revisions, including those which had compile errors.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-05-05T181421.583279Z"></a>
2010-05-05T18:14:21.583279Z Robin Watts</strong></p>
<blockquote>
<pre>
More work towards bug 691207 (global variable removal).

There are 4 places is xps where we do eprintfs that access mem_err_print.
This resolves 1, the other 3 should never be called in files we support.

Resolve 4 const warnings from jasper.

Remove 2 calls to gs_lib_ctx_get_non_gc_memory_t from the cups driver. This
means the only places left calling this are devices in gs\contrib.

Convert calls to errprint_nomem to calls to errprint (in gdevx.c, gxttb.c,
gdevupd.c)

The only places using mem_err_print are therefore:

* calls to debug printing functions
* devices in gs/contrib calling gs_lib_gtx_get_non_gc_memory, errprint_nomem,
and eprintf.
* jasper calling eprintf.
* gdevsco.c (but that seems intrinsically single threaded to me as only one
thing can be using the console at a time, presumably)
* signal handlers in os2 and iwatc for catching numeric exceptions.
* Various devices in gs/base still call errprintf_nomem - some in DEBUG only
code, but some not.
* The gs_throw_imp function.

I think this may be as good as we can get at this point.

No differences expected, or shown by local cluster testing.

</pre>
<p>[/trunk/ghostpdl/xps/xpsfont.c base/gdevx.c base/gdevupd.c base/gxttfb.c cups/gdevcups.c jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-05-05T162549.238174Z"></a>
2010-05-05T16:25:49.238174Z Robin Watts</strong></p>
<blockquote>
<pre>
More work for bug 691207 (remove global vars). Change the gp_ interface and
all its implementations to pass a gs_memory_t in some cases to allow eprintf
calls to be made safely.

Also fix a 'const' warning in pxl/pxfont.c and pcl/pcsymbol.c

No differences expected, or shown by local cluster testing.

</pre>
<p>[base/gp_os2.c base/gdevos2p.c base/gsdevice.c psi/zfile.c base/gp_os2pr.c base/gp_vms.c base/gdevwprn.c base/gxclfile.c base/gp_iwatc.c base/gp_os2.h base/gp_os9.c base/gdevwpr2.c /trunk/ghostpdl/pcl/pcsymbol.c /trunk/ghostpdl/xps/xpstop.c base/gp_unix.c /trunk/ghostpdl/psi/psitop.c base/gp_unifs.c base/gp.h base/gp_macio.c base/bench.c base/gdevpdf.c base/gp_os2fs.c /trunk/ghostpdl/pxl/pxfont.c base/gp_mswin.c base/gp_dvx.c]</p>
</blockquote>

<p><strong><a name="2010-05-05T064720.379288Z"></a>
2010-05-05T06:47:20.379288Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 691164 &quot;PDF loads blank when not Administrator on Vista using GS 8.7&quot;.

The problem was in JasPer library.  It tried to create temporary file in
current directory (HAVE_MKSTEMP), or root directory (Windows and others).
When those directories are read only, it failed to decode images.

This patch introduces searching of TMPDIR, TEMP and TMP environment varibales
and use them for temporary files.

Localcluster test reported no differences.

</pre>
<p>[jasper/src/libjasper/base/jas_stream.c jasper/src/libjasper/include/jasper/jas_stream.h]</p>
</blockquote>

<p><strong><a name="2010-05-05T030800.170436Z"></a>
2010-05-05T03:08:00.170436Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding --ldflags to cups.mak ; bug 690268</pre>
<p>[cups/cups.mak]</p>
</blockquote>

<p><strong><a name="2010-05-04T231146.700325Z"></a>
2010-05-04T23:11:46.700325Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Incoporate the reporter's suggested change to config.guess , bug 69020

It appears that the same change is already in automake-1.11 (and after 1.7),
so the change is correct. If we merge with upstream again, it is possible that
this might be overwritten. Hopefully when that happens, the config.guess from
newer upstream will have this change.
</pre>
<p>[jasper/acaux/config.guess]</p>
</blockquote>

<p><strong><a name="2010-05-04T225233.245666Z"></a>
2010-05-04T22:52:33.245666Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
minor wording and grammar corrections. Bug 690005</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-05-04T190537.567635Z"></a>
2010-05-04T19:05:37.567635Z Robin Watts</strong></p>
<blockquote>
<pre>
A couple of calls to eprintf missed from the previous commit.

No expected changes.

</pre>
<p>[base/gsfcid.c]</p>
</blockquote>

<p><strong><a name="2010-05-04T190451.514942Z"></a>
2010-05-04T19:04:51.514942Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Improved the localcluster readme instructions.
</pre>
<p>[toolbin/localcluster/readme]</p>
</blockquote>

<p><strong><a name="2010-05-04T184712.330141Z"></a>
2010-05-04T18:47:12.330141Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the work for bug 691207 (remove global variables) we introduce
a new set of macros, &quot;emprintfX&quot;. These do the same as the &quot;eprintfX&quot;
macros, except they take an explicit memory reference rather than using
the mem_err_print global.

The plan is to move everything possible over to using emprintf, leaving
callers of eprintf as 'unsafe' in multithreaded builds.

This review changes all callers of eprintf in ghostscript except:
gdevsco.c, gp_iwatc.c, gp_macio.c, gp_mswin.c, gp_os2.c, gp_os2pr.c,
gp_unifs.c, gp_vms.c, gsfid.c, contrib\*, jasper\*.

1 instance in gzspotan.c remains unchanged, but it should never be used.

Local cluster testing shows no build problems.

</pre>
<p>[psi/fapi_ft.c base/gdevpdfj.c base/gsdevice.c base/gdevos2p.c psi/zfapi.c base/gdevijs.c base/gdevpdfm.c base/gdevpx.c base/gxclfile.c base/gdevpdtb.c base/gdevpdfp.c base/gdevpdtc.c psi/fapiufst.c base/gdevpdtf.c base/gdevpdfu.c base/gxblend1.c base/gspaint.c base/gdevxini.c base/gxcmap.c base/gxclthrd.c base/gdevpsdu.c base/gdevpdtt.c base/gstype42.c base/gdevpsft.c base/gsmisc.c base/gdevsgi.c base/gxclmem.c base/gxttfb.c base/std.h base/gslib.c base/gxtype1.c base/gzspotan.c psi/imainarg.c base/gdevpe.c base/gdevsun.c base/gdevxcmp.c psi/imain.c base/gsiorom.c base/gdevpdf.c base/gdevtsep.c contrib/japanese/gdevdmpr.c base/gxclrast.c base/gdevpdfi.c]</p>
</blockquote>

<p><strong><a name="2010-05-04T160329.077971Z"></a>
2010-05-04T16:03:29.077971Z regression</strong></p>
<blockquote>
<pre>
Changed casper3.ghostscript.com to casper.ghostscript.com (no reason to test this, how can it possibly fail?).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-05-04T123427.748154Z"></a>
2010-05-04T12:34:27.748154Z Robin Watts</strong></p>
<blockquote>
<pre>
As part of the efforts towards bug 691207 (global variables must be removed)
this commit reduces the reliance on mem_err_print.

Currently all calls to errwrite and errflush get the stdin/out/err details
from a global mem_err_print. For multithreaded gs this will result in output
going to the wrong place if any of them are redirected. This review splits
errwrite into 2 variants, errwrite and errwrite_nomem. The first takes an
explicit mem pointer. The second continues to assume a global one.

The plan is to make everything possible use the first. Currently debugging
calls and some 'stubborn' devices continue to call errwrite_nomem.

Local cluster testing shows no differences.


</pre>
<p>[base/gdevos2p.c base/gdevsppr.c base/gdevpdfm.c base/gdevsunr.c base/gdevpx.c base/gdevupd.c base/gdevimgn.c base/gdevwpr2.c base/ttfmain.c base/ttfoutl.h base/gp_unifs.c /trunk/ghostpdl/psi/psitop.c base/gdev4693.c /trunk/ghostpdl/xps/xpsfont.c base/strmio.c /trunk/ghostpdl/pxl/pxtop.c contrib/pcl3/src/gdevpcl3.c base/gsmisc.c base/gdevwddb.c base/gsargs.c base/szlibd.c /trunk/ghostpdl/pl/plmain.c base/gxttfb.c base/std.h base/gdevifno.c /trunk/ghostpdl/xps/xpscff.c /trunk/ghostpdl/pcl/pctop.c contrib/pcl3/eprn/gdeveprn.c base/gdevcdj.c psi/ziodevsc.c base/gdevx.c base/gslibctx.c contrib/pcl3/eprn/eprnparm.c toolbin/localcluster/run.pl base/gdevhl7x.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T165735.641421Z"></a>
2010-05-03T16:57:35.641421Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fix compiler warning (return from incompatible pointer type)
introduced with making the font cache part of the library context,
revision 11165.
</pre>
<p>[psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T164816.934577Z"></a>
2010-05-03T16:48:16.934577Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Applied Michael Constant's patch to support reading 256-bit AES encrypted PDFs
(bug #690702).

Minor modifications were made to the original patch to make it work with the
current trunk.

Aaron Gifford's SHA-2 implementation is included (BSD licensed).

Libidn is added as an optional dependency to support unicode passwords.  If it
is not installed, only ASCII passwords are supported.


</pre>
<p>[base/errno_.h psi/zfaes.c psi/gs.c base/saes.c base/lib.mak base/sha2.c doc/Use.htm base/saes.h base/Makefile.in psi/int.mak psi/zutf8.c base/sha2.h base/locale_.h psi/zpdfops.c psi/zfsha2.c psi/zwinutf8.c psi/winint.mak base/ssha2.c base/configure.ac Resource/Init/pdf_sec.ps psi/msvc32.mak base/ssha2.h]</p>
</blockquote>

<p><strong><a name="2010-05-03T132552.802113Z"></a>
2010-05-03T13:25:52.802113Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) incorrect ToUnicode CMap.
Bug #691274 &quot;Missing or incorrect ToUnicode when using Identity ordering&quot;

pdfwrite emits ToUnicode CMaps in PDF files which always use 2 bytes for the key
length. That is 0x21 is represented as &lt;0021&gt;, since these are hex strings there should
in fact be no difference between &lt;21&gt; and &lt;0021&gt;. It is clear from the ToUnicode
Mapping file tutorial that this is correct for mapping files.

However, a PDF file is not a CMap file. It appears that Acrobat does not like
beginbfrange data which is padded with zeros (it seems happy with codespacerange and
destination codes which are 0 padded though).

This patch outputs ToUnicode CMaps which are not padded with 0, ie 0x21 is emitted as
&lt;0021&gt;, for the srcCodeLo and SrcCodeHi parameters in a beginbfrange operation. The
destination codes remain zero-padded.

Technically this would be incorrect for a real CMap file, but we don't write those
out so this should not be an issue. The change is limited to ToUnicode CMaps and does
not affect any other kind of CMap.

I believe the change will affect the data emitted for the beginbfrange,
beginbfchar, begincidchar, beginnotdefchar, beginnotdefrange and begincidrange
operators. It does *not* affect the begincodespacerange operator; although Acrobat
Distiller writes this without zero padding tests show that Acrobat is happy reading
zero-padded code space ranges.

ToUnicode information is not used in rendering PDF files, so regression testing should
show no differences. Local testing of a limited number of files doesn't reveal any
problems, but this change has not been well tested.
</pre>
<p>[base/gsfcmap.c]</p>
</blockquote>

<p><strong><a name="2010-05-03T041330.766321Z"></a>
2010-05-03T04:13:30.766321Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Fix unix so build regression; fixes regression from r9948 which was committed for bug 690695</pre>
<p>[base/unix-dll.mak]</p>
</blockquote>

<p><strong><a name="2010-05-03T035903.969165Z"></a>
2010-05-03T03:59:03.969165Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
fixes multiple jpeg devices listed in gs -h (bug 691176)</pre>
<p>[base/libtiff.mak]</p>
</blockquote>

<p><strong><a name="2010-05-03T031434.052929Z"></a>
2010-05-03T03:14:34.052929Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Rewording build instructions for unix systems, and adding more warnings about
instructions for legacy old systems being deprecated; bug 691264.
</pre>
<p>[doc/Make.htm]</p>
</blockquote>

<p><strong><a name="2010-05-02T001952.718987Z"></a>
2010-05-02T00:19:52.718987Z Robin Watts</strong></p>
<blockquote>
<pre>
Script to generate an html page that graphically show the differences
between local cluster regression run results between arbitrary revisions.

Usage information given in file. Must be run on the cluster master machine
(i.e. casper).


</pre>
<p>[toolbin/localcluster/comparerevs.pl]</p>
</blockquote>

<p><strong><a name="2010-05-01T232233.008186Z"></a>
2010-05-01T23:22:33.008186Z Henry Stiles</strong></p>
<blockquote>
<pre>
Continue work to remove globals (691207).  The font cache is no longer
global but part of the library context.
</pre>
<p>[psi/isave.h psi/bfont.h base/gslibctx.c psi/zfcid0.c psi/zfcid1.c psi/zfont.c psi/zfont0.c psi/zfont1.c psi/zbfont.c psi/zusparam.c base/gslibctx.h psi/zfont32.c psi/zfont42.c psi/isave.c]</p>
</blockquote>

<p><strong><a name="2010-05-01T092324.281883Z"></a>
2010-05-01T09:23:24.281883Z Ken Sharp</strong></p>
<blockquote>
<pre>
Modify the 'C' defaults of the pdfwrite device

Bug #691259 &quot;HPGL graphic followed by raster graphic results in incorrect pdf&quot;
The pdfwrite device is initialised in 'C', and then partly overridden by PostScript
initialisation. The problem is that non-PostScript input does not (cannot) execute the
PostScript initialisation, and so the defaults are left as those done in 'C'.

Not only do these defaults not match the documented defaults in ps2pdf.htm, they are
not particularly well selected. In this case the problem was caused by sending image
data at 150 dpi, but only a single scan line at a time. The default setting for
pdfwrite was to downsample image data to 72 dpi, this caused us to subsample (the
default downsampling) by a factor of more than 2, which led to our single scan line
becoming less than half a scan line, and so disappearing altogether.

This patch addresses this issue by altering a number of the defaults to more sensible
values. In particular we disable downsampling and enable image compression for gray
and colour images. This has the fortunate result of making most PDF output files
smaller than before, even though we are now storing more image data.

</pre>
<p>[base/gdevpsdf.h]</p>
</blockquote>

<p><strong><a name="2010-05-01T015946.738263Z"></a>
2010-05-01T01:59:46.738263Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Check all PDF files for transparency features because some files have
incorrect version number but Acrobat renders them just fine. Bug 691273.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-04-30T155408.117709Z"></a>
2010-04-30T15:54:08.117709Z Ken Sharp</strong></p>
<blockquote>
<pre>
Testing a white space change for cluster regression tests, this will be overwritten later.</pre>
<p>[base/gdevpsdf.h]</p>
</blockquote>

<p><strong><a name="2010-04-29T215134.733741Z"></a>
2010-04-29T21:51:34.733741Z Till Kamppeter</strong></p>
<blockquote>
<pre>
rev 11149 for fixing bug 691014 had still some compiler warnings. This rev fixes them.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-29T183244.398974Z"></a>
2010-04-29T18:32:44.398974Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove the 'parent' parameter from gs_malloc_init calls. It only serves to
allow libctx's to be shared between instances, and we'll never want to do
that. It's unused at the moment anyway, so this doesn't impact anything.

No expected differences.

</pre>
<p>[psi/gs.c base/gsinit.c base/gslib.c base/gsmalloc.c /trunk/ghostpdl/pl/plalloc.c psi/iapi.c base/gsmalloc.h]</p>
</blockquote>

<p><strong><a name="2010-04-29T041915.713592Z"></a>
2010-04-29T04:19:15.713592Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
Doubling the arbitrary 0x100000 alloc size limit; the alloc_size_is_ok() check is
complied out and replaced with DO_NOTHING in release build so this has effect only
on debug builds. Fixes Bug 691271 .

</pre>
<p>[base/gsalloc.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T231901.308642Z"></a>
2010-04-28T23:19:01.308642Z Robin Watts</strong></p>
<blockquote>
<pre>
Eliminate some warnings in gxcht.c (keep shifts &lt; size of uint).

No local cluster differences reported, or expected.

</pre>
<p>[base/gxcht.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T223701.089543Z"></a>
2010-04-28T22:37:01.089543Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixed segfaults caused by setting and changing the page geometry parameters incorrectly (bug #691014).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T215729.180527Z"></a>
2010-04-28T21:57:29.180527Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Associate cached font instance with PDF font resource dictionary instead of
font descriptor. The latter may be shared by font resource dictionaries with
different encodings causing incorrect rendering. Bug 690714.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-28T202441.808400Z"></a>
2010-04-28T20:24:41.808400Z Robin Watts</strong></p>
<blockquote>
<pre>
Move op_array_table_global and op_array_table_local away from being
globals and into i_ctx_p. This requires various knock on changes
throughout the code to enable them to be recovered from the context
(which may itself need to be recovered from a memory pointer).

Also, the garbage collection is altered slightly; rather than the
op_arrays being special cased (as special objects that have to have
their component parts registered as roots for the garbage collection) we
move them inline into i_ctx_t and amend the gc routines for that
structure. Thanks to Alex for his help with this.

No differences expected, or shown with local cluster testing.

</pre>
<p>[psi/iinit.c psi/icontext.c psi/imain.c psi/idebug.c psi/icstate.h psi/interp.c psi/igc.c psi/opdef.h psi/zmisc.c psi/iutil.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T201940.848310Z"></a>
2010-04-28T20:19:40.848310Z Robin Watts</strong></p>
<blockquote>
<pre>
Simple fix to remove dict_default_pack from being a global bool.
(Make it an enum instead).

No changes expected or shown by local cluster testing.

</pre>
<p>[psi/idict.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T171852.709002Z"></a>
2010-04-28T17:18:52.709002Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that multiplication gets applied prior to type casting.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T144102.575217Z"></a>
2010-04-28T14:41:02.575217Z Robin Watts</strong></p>
<blockquote>
<pre>
Add missing cast to fapi_ft.c to quiet a warning. This was missed out of
yesterdays commit of such fixes.

No expected diffs.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-28T114024.316225Z"></a>
2010-04-28T11:40:24.316225Z Robin Watts</strong></p>
<blockquote>
<pre>
Small tweaks to Ghostscript initialisation to check for malloc failures etc.
This would very rarely have been a problem in current code, but would be
more of an issue in multithreaded operation as running out of memory
while forking a new instance is more likely.

No expected differences, but the local cluster code seems to be claiming
differences for an unchanged tree at the moment, so if 3 or so non-pdfwrite
errors and 1800ish pdfwrite errors show up, it's not because of this.

</pre>
<p>[psi/gs.c psi/imain.c base/gsmalloc.c psi/iapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T160605.631664Z"></a>
2010-04-27T16:06:05.631664Z Chris Liddell</strong></p>
<blockquote>
<pre>
Add back in a call removed in (a merging) error in my previous commit (11137).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T145314.939131Z"></a>
2010-04-27T14:53:14.939131Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bug 691260: make the FAPI and Freetype related warning messages debug only,
and depend on -Zm for the FAPI warnings or -Z1 for the Freetype warnings.
Also address compiler warnings in fapi_ft.c.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T142708.849186Z"></a>
2010-04-27T14:27:08.849186Z Robin Watts</strong></p>
<blockquote>
<pre>
Silence some warnings, either by including new headers or by introducing
explicit casts.

No differences shown by local cluster testing (of pcl and gs only as xps is
currently broken).

</pre>
<p>[base/gxdcconv.c base/gsptype1.c base/gdevpx.c base/gstrans.c base/gdevrinkj.c base/gxfill.c base/gxstroke.c psi/zmisc.c]</p>
</blockquote>

<p><strong><a name="2010-04-27T095626.779813Z"></a>
2010-04-27T09:56:26.779813Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Made the CUPS Raster output device working in a multi-threaded mode, removing all
global variables. Thanks to James Cloos for the patch. Fixes bug #691241.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-26T152928.937213Z"></a>
2010-04-26T15:29:28.937213Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remember the allocator in the dynamically allocated scanner_state to ensure
proper deallocation. Current allocation may be reset when a PS error occurs.
Bug 691167.
</pre>
<p>[psi/ztoken.c psi/iscan.c psi/iscan.h]</p>
</blockquote>

<p><strong><a name="2010-04-26T090435.569612Z"></a>
2010-04-26T09:04:35.569612Z Chris Liddell</strong></p>
<blockquote>
<pre>
Ensure that the BuildChar object is not the null object before trying access its contents.
</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-26T055846.519692Z"></a>
2010-04-26T05:58:46.519692Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Change so that when a graphic state is restored, the overprint compositor
action only occurs if there is a change from the current overprint state.
This fixes a problem in one of the files associated with bug 691014.  In
the particular file, overprint compositor actions were getting placed into
a pattern clist.  The file in fact had no overprint settings.
Ran regression test, no differences expected.</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T234756.048527Z"></a>
2010-04-25T23:47:56.048527Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add ANSI/ASME Y14.1 A - F paper sizes named ANSI_A - ANSI_F for completeness.
Bug 691217.
</pre>
<p>[Resource/Init/gs_statd.ps]</p>
</blockquote>

<p><strong><a name="2010-04-25T224548.099475Z"></a>
2010-04-25T22:45:48.099475Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Minor clean-ups: Added some parantheses to casts and initialized allocated memory.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T223209.854994Z"></a>
2010-04-25T22:32:09.854994Z Michael Vrhel</strong></p>
<blockquote>
<pre>
(empty)</pre>
<p>[base/gximono.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T215242.447453Z"></a>
2010-04-25T21:52:42.447453Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Introduced a real get_color_comp_index() method, to fix bug #690338 correctly.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-04-25T184728.775496Z"></a>
2010-04-25T18:47:28.775496Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add -dNONATIVEFONTMAP option to disable the use of font map and corresponding
fonts installed on underlying platform. This may be needed to ensure consistent
rendering on the platforms with different fonts, for instance,
during regression testing. Bug 691240.
</pre>
<p>[doc/Use.htm Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-04-25T004140.540207Z"></a>
2010-04-25T00:41:40.540207Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix for Bug 691014.  Problem was caused by the fact that we had a soft
mask present and a pattern with no transparency.  This means the PDF14
device is installed and more importantly that transparency state pushes
and pops occur to keep the softmask in sync with the graphic state.  This
particular files pattern is installed as a clist, which happens to not have
any transparency.  The transparency state pushes and pops were getting placed
into the pattern clist when the Q and q operations occurred in the pattern, which
was causing problems since the pattern clist device had no pdf14 device installed to
handle such commands.
The solution is to check, when a transparency compositor action is to occur, if the
current device is a pattern accumulator or a pattern-clist device.  If it is, then
the pattern instance is checked to see if it has transparency.  If it does not, then
the transparency state chance is ignored.  This all occurs on the clist writing phase
in the gs_trans functions.

In addition, a fix was made so that the pdf14custom device sets up it's color information
correctly.  For subtractive devices that do not have cmyk process colorants the custompdf14
device is installed.  This pdf14 device was obtaining its color_info from the target device.
The pdf14 device must be continuous tone even if the target device is not.

Ran a regression test and saw no differences.</pre>
<p>[base/gdevp14.c base/lib.mak base/gstrans.c]</p>
</blockquote>

<p><strong><a name="2010-04-24T222126.893815Z"></a>
2010-04-24T22:21:26.893815Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Remove rudimentary code that maps out-of-range character codes to 0 causing
dictionary overflow in some cases. Unlike earlier array, dictionary
representation of 'cmap' table doesn't need this. Bug 691253, customer 780.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-04-23T125600.372874Z"></a>
2010-04-23T12:56:00.372874Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve issues with the language_switch Ghostscript build for Windows, since
Freetype enabled became the default for the normal GS build.
</pre>
<p>[/trunk/ghostpdl/common/msvc_top.mak /trunk/ghostpdl/language_switch/pspcl6_msvc.mak /trunk/ghostpdl/psi/psitop.c psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-23T041050.732099Z"></a>
2010-04-23T04:10:50.732099Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Fix of minor memory leak found by Ray.  maskbuf entry of transparency ctx
object was not getting freed.  The large mask buffer, which is a member
variable of maskbuf was getting freed but not this 12 byte structure.
No expected differences.</pre>
<p>[base/gdevp14.c]</p>
</blockquote>

<p><strong><a name="2010-04-23T032533.581070Z"></a>
2010-04-23T03:25:33.581070Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Always load CFF font as a CIDFont when it is used as a descendant font of a
composite font in PDF file. Bug 691253.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-22T122816.186930Z"></a>
2010-04-22T12:28:16.186930Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Trap errors that happen in the font reader, issue a warning, and proceed as
if the font was not embedded. Bug 691242.
</pre>
<p>[Resource/Init/pdf_font.ps]</p>
</blockquote>

<p><strong><a name="2010-04-22T042000.389442Z"></a>
2010-04-22T04:20:00.389442Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't use precompiled headers on MSVC 6 and 7 because it causes compilation
error C2006 in freetype, which uses #include MACRO .
</pre>
<p>[base/msvccmd.mak]</p>
</blockquote>

<p><strong><a name="2010-04-21T195107.227636Z"></a>
2010-04-21T19:51:07.227636Z Robin Watts</strong></p>
<blockquote>
<pre>
Add missing header file from revision 11097.

</pre>
<p>[base/gdevpdtd.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T192613.171574Z"></a>
2010-04-21T19:26:13.171574Z Robin Watts</strong></p>
<blockquote>
<pre>
Revert macro magic from gserror.h introduced in r11097, due to it being
broken when used as an expression. Sorry.

</pre>
<p>[base/gserror.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T181256.928835Z"></a>
2010-04-21T18:12:56.928835Z Robin Watts</strong></p>
<blockquote>
<pre>
Another set of very simple tweaks to a range of source files to remove
warnings. Nothing contentious in here I hope!

base/gdevpdf.c: Make the fact we're ignoring the return value of fread
explicit by casting to void.

base/gdevsj48.c: Remove unused var.

base/gdevtknk.c: Avoid gcc warning by not needlessly assigning within
expression.

base/gdevimgn.c: Fix type declaration, make function static.

base/gxdcolor.c: Remove unused var.

base/gdevwts.c: Comment out unused function, cast unused return value from
fread to void, remove unused vars.

base/gdevo182.c: Be more explicit in type definition to stop warning.

base/gdevlp8k.c: Remove unused var.

base/gdevpdfu.c: Cast unused return value from fread to void.

base/gdevlbp8.c: Cast unused return value from fread to void.

base/gdevokii.c: Explicit cast to int to shut up stupid compiler.

base/gdevpdtd.c: Add const to arg to avoid warning.

base/gserror.h: Do some macro magic to ensure that the macro always evaluates
it's arg strictly once, insists on being followed by a semicolon, and behaves
well with surrounding if/else structures etc.

base/gxp1fill.c: Remove unused var.

</pre>
<p>[base/gdevlbp8.c base/gdevtknk.c base/gdevsj48.c base/gdevo182.c base/gdevpdf.c base/gdevimgn.c base/gdevokii.c base/gdevpdtd.c base/gxdcolor.c base/gdevwts.c base/gdevlp8k.c base/gdevpdfu.c base/gxp1fill.c base/gserror.h]</p>
</blockquote>

<p><strong><a name="2010-04-21T175508.584502Z"></a>
2010-04-21T17:55:08.584502Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for a problem in the rinkj driver for Epson Stylus Photo 2200.
The code was accessing indexes 4,5,6 in plane_offsets[6] and hence was
running off the end of the array. This was causing a warning at compile time
but never caused a segv as it was merely corrupting the next entry in the
structure which was reset to 0 shortly afterwards.

Presumably the offset for one of the planes would be wrong though causing
a loss of quality.

</pre>
<p>[base/rinkj/rinkj-epson870.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T172331.243056Z"></a>
2010-04-21T17:23:31.243056Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove several occurrences of calls to gs_lib_ctx_get_non_gc_memory_t().
The only code that now needs this is gp_macpoll.c and gp_mspol.c for when
CHECK_INTERRUPTS is defined. This reduces the need for mem_err_print.

The only other code that uses mem_err_print is errflush() and errwrite().
Potentially these could be nobbled for a multithreaded build.

The changes here rely on the memory pointers being set up correctly. While
local cluster testing gives this a clean bill of health, it's possible that
problems will appear with files in the wider world - we'll just have to fix
these as they are reported.

</pre>
<p>[base/gdevjpeg.c base/sjpx_luratech.c base/strmio.c base/gxttfb.c psi/zfdctd.c base/sdctc.c psi/zfdcte.c psi/zfjpx.c base/sjpx.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T150847.471495Z"></a>
2010-04-21T15:08:47.471495Z Robin Watts</strong></p>
<blockquote>
<pre>
Move CPSI_mode from being a global to living in the libctx, as part of the
efforts for bug 691207 (remove global variables).

I originally tried moving CPSI_mode into the imager state, which would have
been slightly nicer, but had to abandon this due to problems interacting
with the command list code. My first thought to make this work was to
push the value of CPSI_mode into the clist at initial clist creation time.
As the setting of CPSI_mode isn't vectored through the device, we can't
detect changes in its setting, but then changing CPSI_mode during the
lifespan of a clist would give unpredictable results anyway in many cases.

Sadly this was doomed to failure as if a page device is started up that
uses the clist code to do banding, then the command list is created before
CPSI_mode is enabled, and we'd operate with the incorrect value.

Moving CPSI_mode into libctx means we keep exactly the same behaviour as
we have now. This has required various functions throughout the code to
pass a gs_memory_t * around.

Localcluster testing reveals no problems.

</pre>
<p>[psi/zfunc3.c psi/zupath.c base/gsdps1.c base/gdevdevn.c base/gxblend1.c base/gspaint.c base/gxstroke.c psi/zmisc.c base/gdevperm.c base/gxdcconv.c base/gdevpsds.c base/gxcmap.c base/gxdcconv.h psi/zfont.c base/gdevrinkj.c base/gdevbit.c base/gsmisc.c base/gxfill.c base/gdevxcf.c base/gxicolor.c base/gdevpsd.c psi/zimage.c base/gsfont.c contrib/opvp/gdevopvp.c base/gsfont.h base/gsstate.c base/gslibctx.c base/gsstate.h psi/zcharx.c psi/zusparam.c base/gslibctx.h base/gsequivc.c psi/zchar.c]</p>
</blockquote>

<p><strong><a name="2010-04-21T072014.808042Z"></a>
2010-04-21T07:20:14.808042Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for a regression introduced by r11074 (bug 690094).

As I changed image number to be incremented when 'exflag' is false,
the problem of 'exrunlength' when SDHUFF == 1 was unveiled.
This fixes it.
JBIG2 images with SDHUFF == 1 should have been having trouble
between r11074 and this revision.  No other difference expected.

</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-20T185236.186732Z"></a>
2010-04-20T18:52:36.186732Z Robin Watts</strong></p>
<blockquote>
<pre>
A series of tiny changes to various files to stop compiler warnings.
Nothing contentious in here, so I hope component owners don't object.

psi/zpdfops.c: Make zpdfinkpath function static.

psi/zcie.c: cie_cache_finish1 is an unused function; #if 0 it with a note.

psi/zicc.c: Remove 2 unused variables from a function.

psi/zcolor.c: Add a 'default' case to a switch to stop a 'variable RGB
might be used uninitialised' warning. Remove out of date comment and make
zswapcolors static.

psi/zfcid1.c: Convert some unused variables to comments.

base/gp_unix_cache.c: Make the fact we are ignoring the return value from
fread explicit by casting to void.

base/gstype42.c: Move an unused var into a #if 0 section, comment out an
unused function.

base/gstrans.c: Use 'any_abs' rather than 'abs' (to avoid abs being used
without definition).

base/gxshade6.c: Remove unused function

base/gxclfile.c: Make the fact we are ignoring the return value to freopen
explicit by casting to void.

</pre>
<p>[base/gxshade6.c psi/zcolor.c psi/zicc.c psi/zcie.c base/gp_unix_cache.c base/gxclfile.c base/gstrans.c base/gstype42.c psi/zfcid1.c psi/zpdfops.c base/echogs.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T161513.462842Z"></a>
2010-04-19T16:15:13.462842Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Made oog_encode in tif_luv.c reentrant by precalculating oog_tables.

oog_tables was calculated on-demand when writing TIFF files in LogLuv Encoding.
Since it didn't depend on anything dynamic, I replaced this code with a static
const array.  The array only consisted of 100 ints - the net library size
actually went down a few bytes after this change.

This is part of bug #691207 (global variables must be removed).

</pre>
<p>[tiff/libtiff/oog_table.h tiff/libtiff/tif_luv.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T115627.260655Z"></a>
2010-04-19T11:56:27.260655Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Removed global variables in libtiff's tif_pixarlog.c.

This is part of #691207 (global variables must be removed).

</pre>
<p>[tiff/libtiff/tif_pixarlog.c]</p>
</blockquote>

<p><strong><a name="2010-04-19T094714.697946Z"></a>
2010-04-19T09:47:14.697946Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Removed TIFFReassignTagToIgnore in the local libtiff copy.

It wasn't reentrant due to static variables and has been deprecated for a while
now.  GhostScript does not use it at all.  Libtiff HEAD also has this function
removed, it was only kept in 3.x for backwards compatibility.

</pre>
<p>[tiff/libtiff/tif_dir.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T185800.960218Z"></a>
2010-04-15T18:58:00.960218Z Robin Watts</strong></p>
<blockquote>
<pre>
New Visual Stdio project file for building ufst version of ghostscript.

Currently assumes that the ufst code will be found in C:\ufst, but this can
be edited in the nmake invocation lines within the Project settings.

</pre>
<p>[ghostscript-ufst.vcproj]</p>
</blockquote>

<p><strong><a name="2010-04-15T184131.569934Z"></a>
2010-04-15T18:41:31.569934Z Robin Watts</strong></p>
<blockquote>
<pre>
Update msvc32.mak with various ufst make targets. This allows a
ghostscript-ufst Visual Studio project to be constructed.

No differences to existing builds.

</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-15T171330.072845Z"></a>
2010-04-15T17:13:30.072845Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove invalid_file_stream and invalid_file_entry global variables,
as part of the effort for bug 691207 (remove global variables).

We move invalid_file_stream to be a non-gc chunk allocated to be in
i_ctx_t, and invalid_file_entry can then be replaced by
i_ctx_p-&gt;invalid_file_stream. The only tricky bits are a) the need to ensure
that i_ctx_p is available everywhere where it is needed, and b) making sure
that invalid_file_stream doesn't move when i_ctx_p is relocated.

No changes shown by localcluster testing (though a previous version of the
patch did fail during gc, so the relavent code is getting tested).

</pre>
<p>[psi/zfile.c psi/ztoken.c psi/zcontrol.c psi/zshade.c psi/zcontext.c psi/zfcid0.c psi/zfcid1.c psi/zicc.c psi/zfrsd.c psi/icontext.c psi/zvmem.c psi/ziodev.c psi/zfileio.c psi/interp.c psi/icstate.h psi/files.h]</p>
</blockquote>

<p><strong><a name="2010-04-15T161310.848189Z"></a>
2010-04-15T16:13:10.848189Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Backported and applied libtiff patches from libtiff bugs #2125 and #2125.
These get rid of some of the global variables in libtiff (in particular
rgb_refblackwhite and whitepoint in tif_aux.c).

This is part of the multi-threaded gs effort (bug #691207).

</pre>
<p>[tiff/libtiff/tif_dirinfo.c tiff/libtiff/tif_aux.c tiff/libtiff/tif_dir.c tiff/man/TIFFGetField.3tiff tiff/libtiff/tif_dir.h tiff/libtiff/tif_ojpeg.c tiff/libtiff/tif_jpeg.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T144836.373936Z"></a>
2010-04-15T14:48:36.373936Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691244, reported/patch supplied by Norbert Janssen. In
revision 11045, I'd moved some globals into the libctx, which is
accessed via the gs_memory_t pointer. This has required certain
functions to now take a gs_memory_t pointer as an extra arg. In
this particular case the gs_memory_t pointer in question could be
NULL. The fix is to use one obtained from gs_lib_ctx_get_non_gc_memory_t,
a call to which happens conveniently to be on the previous line.

gs_lib_ctx_get_non_gs_memory_t is going to be painful to remove later on,
but at least this fix gets us up and running again now.

No expected differences.

</pre>
<p>[base/strmio.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T095333.313864Z"></a>
2010-04-15T09:53:33.313864Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 690094, &quot;missing letters replaced by little vertical lines&quot;.

This problem was in jbig2dec function jbig2_decode_symbol_dict().
The image number was not incremented correctly when it built
symbol dictionary.
No difference expected, other than JBIG2 pdf files suffered by
this problem.
</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-15T083048.171463Z"></a>
2010-04-15T08:30:48.171463Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve a Freetype build problem on Mac - solution suggested by Tor and Henry.

</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-04-14T192956.362613Z"></a>
2010-04-14T19:29:56.362613Z Robin Watts</strong></p>
<blockquote>
<pre>
Update the clist band list compressor code to work without using global
variables as part of the workd for bug 691207 (remove global variables).

The old code used to call a function to read an initialise global structure,
then based on that allocate storage and copy the structure into it. The new
code essentially does 2 calls; one that serves to get the size, and another
that serves to initialise the newly allocated structure.

To facilitate testing, this introduces a new TEST_BAND_LIST_COMPRESSION
define. If built with this as a define, the code sets the compression
threshold to 1K, thus forcing the use of compression. A local cluster
push with this in reveals just one problem, and that seems to be in the
existing code whereby inflateEnd can be incorectly called on a NULL derived
pointer. A fix for that is included too.

No expected differences.

</pre>
<p>[base/gxcllzw.c base/gxclmem.c base/lib.mak base/gxclzlib.c base/gxclmem.h base/szlibd.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T162511.391305Z"></a>
2010-04-14T16:25:11.391305Z Chris Liddell</strong></p>
<blockquote>
<pre>
Reverse the previous build options for Freetype integration: now
--disable-freetype for configure on Unix type systems or pass FT_BRIDGE=0
to nmake on Windows if you do not want to integrate Freetype.
</pre>
<p>[base/configure.ac psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-04-14T160329.953276Z"></a>
2010-04-14T16:03:29.953276Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType FAPI
No bug for this (probably should be). Noticed while testing that using a TrueType to
replace a missing CIDFont (ie entry in cidfmap) was rendering the wrong glyphs, and
applying a vertical advance.

The incorrect glyph seems to be because we were incorrectly stating that the character
index was not a glyph ID, which it is in this case.

The second problem was more difficult. FreeType manufactures vertical advance metrics
for all TrueType glyphs, we override those in the incremental interface callback, but
when the TT is a CIDFont on disk, we don't use the incremental interface and so have
no opportunity to override the metric.

Addressed this by checking in load_glyph to see if the current font is not type 1
(ie its TT), *is* a CIDFont, and is not a vertical font (WMode is 0). In this case
we simply override the vertical advance and maek it 0.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T141119.891045Z"></a>
2010-04-14T14:11:19.891045Z Robin Watts</strong></p>
<blockquote>
<pre>
Move real_time_0 from being a static variable in zmisc.c to being an entry
int libctx. Instead of initialisation happening in zmisc it now happens in
gslibctx.c. Part of the effort for bug 691027 (remove global vars).

This variable isn't strictly speaking necessary, but apparently some FTS
tests behave better if realtime starts from 0, and it isn't a big problem.

No differences shown in localcluster testing.

</pre>
<p>[base/gslibctx.c base/gslibctx.h psi/zmisc.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T100331.189133Z"></a>
2010-04-14T10:03:31.189133Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
a few more comments about some microsoft CJK fonts</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-04-14T023158.209185Z"></a>
2010-04-14T02:31:58.209185Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fixed jbig2dec command getopt() parameter for -v option.  Not used by
ghostscript itself but worth for standalone debugging.</pre>
<p>[jbig2dec/jbig2dec.c]</p>
</blockquote>

<p><strong><a name="2010-04-14T022616.603254Z"></a>
2010-04-14T02:26:16.603254Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fixed an indent. No influence on code.</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T145216.370358Z"></a>
2010-04-13T14:52:16.370358Z Henry Stiles</strong></p>
<blockquote>
<pre>
Gets rid us of 2 global variables in jasper (jas_image_numfmts and
jas_image_fmtinfos).  In so doing we take the liberty of simplifiying
jasper's startup.  The configured codecs (we only use 2: jpc and jp2)
were set at compile time anyway so the the methods to &quot;add formats&quot;
and &quot;clear formats&quot; have been replaced with a static table.

</pre>
<p>[jasper/src/appl/imgcmp.c jasper/src/appl/jasper.c jasper/src/appl/imginfo.c jasper/src/libjasper/base/jas_image.c jasper/src/libjasper/base/jas_init.c jasper/src/libjasper/include/jasper/jas_image.h]</p>
</blockquote>

<p><strong><a name="2010-04-13T142959.699580Z"></a>
2010-04-13T14:29:59.699580Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove BITTAG global variable by moving it into the libctx, as part of
efforts towards bug 691207 (multithreaded gs). This has required several
accessor functions to gain gs_memory_t * arguments.

No differences expected, or shown by localcluster testing.

</pre>
<p>[base/gsnamecl.c base/gsutil.h base/gslibctx.c base/gdevbit.c base/gslibctx.h base/gsutil.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T130654.792469Z"></a>
2010-04-13T13:06:54.792469Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
A prior update which re-initialised a glyph index to prevent old Metrics override
values persisting after a glyph was discarded did not check the ft_inc_int member of
the 'FF_face' structure before dereferncing it, leading to a potential crash if the
font was not incrementally loaded.

The code now checks the value before attempting to dereference the pointer.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T125040.024266Z"></a>
2010-04-13T12:50:40.024266Z Ken Sharp</strong></p>
<blockquote>
<pre>
Modify FAPI support files
Moved FAPIConfig, FAPIcidfmap and FAPIfontmap from the 'lib' directory to the
'Resource/Init' directory, so that they get built in when COMPILE_INITS=1.

Also modified gs_fapi.ps to contain default values for the contents of FAPIConfig which
map all fonts to the FAPI engine (FreeType for now). Modified FAPIConfig so that the
usual contents are commented out. This should allow the possibility of overriding the
default values by putting new values in FAPIConfig.
</pre>
<p>[lib/FAPIcidfmap lib/FAPIfontmap lib/FAPIconfig Resource/Init/FAPIcidfmap Resource/Init/FAPIfontmap Resource/Init/FAPIconfig Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-13T121542.067350Z"></a>
2010-04-13T12:15:42.067350Z Robin Watts</strong></p>
<blockquote>
<pre>
Move global variables from gshtscr.c (screen_accurate_screens,
screen_min_screen_levels, screen_use_wts) into libctx. This has
meant updating the functions to read/write these to take a
gs_memory_t pointer too. Part of the efforts for bug 691207.

No differences shown by localcluster testing.

</pre>
<p>[base/gshtscr.c base/gxht.h psi/zusparam.c base/gslibctx.h base/gsht.c base/gsht1.c psi/zht.c psi/zht2.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T095008.611008Z"></a>
2010-04-13T09:50:08.611008Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A fix for 691081, 691206, and part of 690094.

From r9769, jbig2dec wasn't capable of decoding some JBIG2 files and throwing
a error &quot;jbig2dec FATAL ERROR runlength too large in export symbol table
(XXX &gt; XX - XX) (segment 0xXX)&quot;.
This was caused by accidentaly bound checking export symbol table size with
number of non-export symbol.  This fixes it.
No differences expected, other than JBIG2 files suffered from this problem.
</pre>
<p>[jbig2dec/jbig2_symbol_dict.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T093822.017180Z"></a>
2010-04-13T09:38:22.017180Z Chris Liddell</strong></p>
<blockquote>
<pre>
Minor revision to FAPI code to better ensure GS errors in callbacks
survive through the font renderer library.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-04-13T032558.022387Z"></a>
2010-04-13T03:25:58.022387Z Henry Stiles</strong></p>
<blockquote>
<pre>
Make the CIESpaces array and its elements constant so it is not
confused with global modifiable data.
</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-04-12T104443.428786Z"></a>
2010-04-12T10:44:43.428786Z Chris Liddell</strong></p>
<blockquote>
<pre>
Remove the hardcoded identity matrix in the Type 1 serialization code in
favour of the new FAPI call allowing the interface code to dictate the matrix
to be used.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-10T093554.039788Z"></a>
2010-04-10T09:35:54.039788Z Ken Sharp</strong></p>
<blockquote>
<pre>
Remove extraneous debug statement in revision 11050.</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-10T092850.393011Z"></a>
2010-04-10T09:28:50.393011Z Ken Sharp</strong></p>
<blockquote>
<pre>
FAPI Enhancement
We need a way in the initial release where we set FreeType as the default font scaler to
switch it off and revert back to the Ghostscript internal font scaler, in case there
are significant problems. Bug #691237

This allows the user to either send PostScript or set a command line value to create
a key called DisableFAPI, if the value is true then FAPI will no longer be active, and
so the GS font scaler will be used.

Can also be set with -dDisableFAPI=true at the command line.
</pre>
<p>[Resource/Init/gs_fapi.ps]</p>
</blockquote>

<p><strong><a name="2010-04-09T182238.657773Z"></a>
2010-04-09T18:22:38.657773Z regression</strong></p>
<blockquote>
<pre>
Fixed a recently introduced bug in the cluster that caused gs head to
be used when compiling GhostPCL/GhostXPS even if a previous revision
should have been used (as is the case when two or more commits occur
while the cluster is busy).
</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-04-09T174920.410599Z"></a>
2010-04-09T17:49:20.410599Z regression</strong></p>
<blockquote>
<pre>
Minor tweaks/improvements to the cluster code:

Fixed bug which occasionally left jobs running on macpro.

Clusterpush.pl when run with user==Michael Vrhel now compares to icc_work branch.

Report all icc_work branch errors (not just new ones).

Collect time to run information.

No longer cache mupdf results.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-04-09T145126.314389Z"></a>
2010-04-09T14:51:26.314389Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix UFST and enhance FAPI
Define a new API call for FAPI to allow font engines to replace a FontMatrix. This is
to allow FreeType to replace the FotnMatrix with the identity as it makes the 2-step
scaling performed by FreeType simpler.

Modified compute_em_scale so that it uses the new API call instead of blindly replacing
the FontMatrix.

Restored the calculation in FAPI_do_char which unwinds the FontMatrix from the CTM
when calculating the scale factor. Use the new API call to retrieve the desired
FontMatrix rather than pulling it directly from the font as before.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c psi/ifapi.h psi/fapiufst.c]</p>
</blockquote>

<p><strong><a name="2010-04-09T081356.362732Z"></a>
2010-04-09T08:13:56.362732Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix Bug #691180
This alters the described 'odd behaviour' of the font substitution code whereby fonts
whose name does not contain either 'Serif' or 'Sans' are substituted with Helvetica,
but those which contain 'Italic' are substituted with Times. Italic fonts are now
treated the same as Oblique fonts, and substituted with Helvetica, unless the font
is identified as a serif font.

This may cause some substitution differences with regression files.</pre>
<p>[Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-04-08T214254.260278Z"></a>
2010-04-08T21:42:54.260278Z Robin Watts</strong></p>
<blockquote>
<pre>
Move io_device_table from being a global static in gsiodev.c into
the library context. In order to retrieve it we need to update
lots of functions to take a gs_memory_t * as well.

Localcluster testing shows no expected differences.

</pre>
<p>[base/gsdevice.c psi/zfile.c base/gdevupd.c base/gsiodev.c base/gxdevice.h psi/ziodev2.c base/gdevprn.c psi/ziodevsc.c base/sfxcommon.c psi/zfrsd.c base/gxiodev.h base/strmio.c base/gslibctx.c base/gsfname.c psi/ziodev.c base/gdevtsep.c psi/zcrd.c base/gslibctx.h base/gsfname.h base/gdevps.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T160550.601517Z"></a>
2010-04-08T16:05:50.601517Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix TrueType interpreter Bug #691227
Another nasty hack for another broken TrueType font. In this case the font tries to
execute a DeltaP instruction with an argument greater than the number of points in the
glyph, which is an error.

FreeType's interpreter has this comment

/* XXX: Because some popular fonts contain some invalid DeltaP */
/*      instructions, we simply ignore them when the stacked   */
/*      point reference is off limit, rather than returning an */
/*      error.  As a delta instruction doesn't change a glyph  */
/*      in great ways, this shouldn't be a problem.            */

This patch more or less mimics this in our code.
</pre>
<p>[base/ttinterp.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T155431.828558Z"></a>
2010-04-08T15:54:31.828558Z Ralph Giles</strong></p>
<blockquote>
<pre>
Remove the commented out invocations of autoheader and aclocal/automake
in the autotools bootstrap script.

The various autotools modules must be invoked in a specific order, and
usually with non-default options. We only use autoconf in our build,
not any of the other tools which layer on top of it, but I had left
their invocations in the script, but commented out, so make it easier
to add them at a later date.

It's been some years since autogen.sh was added, and we still have no
plans to adopt automake. Also, the script didn't include support for
libtoolize (which is glibtoolize of MacOS X)  nor for detecting the
appropriate automake version, so it seems simpler to just remove the
commented out lines to avoid confusion.
</pre>
<p>[autogen.sh]</p>
</blockquote>

<p><strong><a name="2010-04-08T153926.443280Z"></a>
2010-04-08T15:39:26.443280Z Robin Watts</strong></p>
<blockquote>
<pre>
Stop a function scope static from being static as nothing was gained by it,
and this removes it from the list of global variables as part of the efforts
for bug 691207 (multithreaded safety).

No expected differences.

</pre>
<p>[base/gdevupd.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T152926.540666Z"></a>
2010-04-08T15:29:26.540666Z Robin Watts</strong></p>
<blockquote>
<pre>
Change a static (that happens to be const) to be a static const to remove
it from the global variable list for bug 691207.

No expected differences.

</pre>
<p>[base/gdevifno.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T152228.719732Z"></a>
2010-04-08T15:22:28.719732Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove globals from gdevmgr.c as part of efforts on bug 691207 (multithreaded
safety).

Move 5 tables from being file level statics to living in the device structure.

Checked by doing back to back builds and verifying that the same output is
given for tiger.eps in both cases.

No expected differences.

</pre>
<p>[base/gdevmgr.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T151651.654028Z"></a>
2010-04-08T15:16:51.654028Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove the function scope static variables from gdevcdj.c as part of the
efforts for bug 691207 (multithreaded safety). These only affect the
ESC/P driver.

There are 4 variables in play here. real_rows doesn't actually need to be
static at all as it is always set before being used. The other 3 (ln_idx,
vskip1 and vskip2) all go into the 'ep_globals' structure.

There is a subtle change in behaviour here; previously these variables were
initialised to zero on execution start (and again on every flush). Now they
are initialised to zero at the start of every page (and again on every flush).
This means that leftover vskips are no longer carried forwards from page to
page. This seems like a good thing to me.

</pre>
<p>[base/gdevcdj.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T143041.679319Z"></a>
2010-04-08T14:30:41.679319Z Robin Watts</strong></p>
<blockquote>
<pre>
Make a table of 4 zeros be static const, and update the cast where they are
used to also be static const. This should remove them from the global variable
list in bug 691207.

</pre>
<p>[contrib/japanese/gdev10v.c]</p>
</blockquote>

<p><strong><a name="2010-04-08T115629.059369Z"></a>
2010-04-08T11:56:29.059369Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove global variables in gdevcdj.c as part of the effort for bug 691207.

The ESC/P based printing code in gdevcdj.c uses various global variables; we
gather them into a struct here, and pass the struct between the 2 functions
concerned.

This device isn't used in the default build, so no point in testing with the
localcluster. Enabling it locally and doing before/after tests shows that
identical results are given for rendering tiger.eps.

A side effect of this commit is to remove the nasty shadowing of the img_rows
variable (doubly nasty because of it's use within a macro). This meant that I
had the code wrong for a while, so I know the test is actually testing the
right thing.

</pre>
<p>[base/gdevcdj.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T171846.406090Z"></a>
2010-04-07T17:18:46.406090Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove global variable lbp8_end from gdevlbp8.c - it was permanently NULL
so removing it isn't hard, or risky. This will help towards the &quot;No global
variables&quot; goal (bug 691207).

No expected differences.

</pre>
<p>[base/gdevlbp8.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T132337.938542Z"></a>
2010-04-07T13:23:37.938542Z Chris Liddell</strong></p>
<blockquote>
<pre>
Revise the interface code and the use of FT so that both use GS managed
memory, rather than the stdlib memory routines (malloc/free and co.).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-07T131357.741241Z"></a>
2010-04-07T13:13:57.741241Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691228, problems with wide strokes with round caps/joins with
antialiasing enabled.

2 small problems in the same code. In the antialiased case, we stroke by
forming 2 paths (one up either side of the line) and then reverse one and
concatenate it. This should happen whenever we meet a closepath, but due to
a misplaced return, was being missed out in some round join cases.

Also, when using a round join in the case where 2 lines meet 'in-line' we
would inadvertently leave the point on the wrong side of the line.

No changes in localcluster testing as this only affects antialiased results
and that's not tested currently.

</pre>
<p>[base/gxstroke.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T192640.921375Z"></a>
2010-04-06T19:26:40.921375Z Robin Watts</strong></p>
<blockquote>
<pre>
Another attempt to fix Bug 691115. This corrects the clipping of a trapezoid
to a rectangle within the shading code. My previous attempt had failed to
allow for one case.

This causes 116 non-pdfwrite diffs, and 23 pdfwrite ones, all checked using
bmpcmp and found to be acceptable.

</pre>
<p>[base/gxshade6.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T171554.520182Z"></a>
2010-04-06T17:15:54.520182Z Michael Vrhel</strong></p>
<blockquote>
<pre>
Update of fuzzy to report average and max color errors.  This is useful
for continuous tone images only.  If the max error reaches the largest
possible, the calculations for these values are not performed.</pre>
<p>[toolbin/tests/fuzzy.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T141443.252652Z"></a>
2010-04-06T14:14:43.252652Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FAPI and FreeType interface.
The Metrics override was broken, the code to retrieve the /Metrics entries (1 to 4
values) stored the results in an array in a different order to the code which read the
values back.

In addition the FreeType code did not reset the 'glyph_metrics_index' if a glyph had no
metrics override, which could lead to us using the metrics overrides from a prior glyph
if we had already encountered one using an override.
</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T100831.160988Z"></a>
2010-04-06T10:08:31.160988Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType.
The revision 11012 fixed a problem with an invalid font but accidentally introduced a
regression because an 'else' clause was missed.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-06T081444.802475Z"></a>
2010-04-06T08:14:44.802475Z Chris Liddell</strong></p>
<blockquote>
<pre>
Resolve two compiler warnings - no behaviour change expected</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T235000.539571Z"></a>
2010-04-05T23:50:00.539571Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding comments about using globs not expandable by shell; bug 691229</pre>
<p>[base/mkromfs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T172412.188391Z"></a>
2010-04-05T17:24:12.188391Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding escaped quotes around &#36;0 in &quot;basename &#36;0&quot; ; 2nd part of bug 691219</pre>
<p>[lib/pdf2ps lib/eps2eps lib/pfbtopfa lib/ps2epsi lib/ps2pdfwr lib/ps2ps lib/dumphint lib/ps2ps2 lib/dvipdf lib/pdfopt]</p>
</blockquote>

<p><strong><a name="2010-04-05T172210.077618Z"></a>
2010-04-05T17:22:10.077618Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding escaped quotes around &#36;0 in &quot;dirname &#36;0&quot; ; bug 691219</pre>
<p>[lib/printafm lib/eps2eps lib/pdf2dsc lib/gsbj lib/ps2epsi lib/gsdj lib/dumphint lib/gsnd lib/font2c lib/pdfopt lib/pdf2ps lib/ps2pdf lib/gslj lib/pfbtopfa lib/bdftops lib/ps2pdf12 lib/ps2pdf13 lib/ps2pdf14 lib/gslp lib/wftopfa lib/ps2pdfwr lib/ps2ps lib/pphs lib/pf2afm lib/gsdj500]</p>
</blockquote>

<p><strong><a name="2010-04-05T171334.259627Z"></a>
2010-04-05T17:13:34.259627Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
adding reference to msmin04, msgoth04 and ngulim,nbantang; fixes the remaining issues in bug 689456</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-04-05T154847.768122Z"></a>
2010-04-05T15:48:47.768122Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix line endings. The previous commit (11012) accidentally used DOS line endings which
made it appear every line in the file was different.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T153111.441559Z"></a>
2010-04-05T15:31:11.441559Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
When using bitmaps from a TrueType/Type42 font FreeType uses a heuristic approach to
synthesize vertical metrics for the glyphs, including a horizontal advance. As in the
past, this works well as long as the client knows whether the advance direction is
horizontal or vertical and uses the correct advance.

However we don't know that, so we don't want the vertical advance.

Its easiest jut to have FreeType ignore embedded bitmaps and use the outlines, in which
case we don't get the invented vertical advance. Not only that but the rendered bitmap
is a better match for the cases where we don't have a pre-built bitmap, so consistency
is improved with this patch as well.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T152725.365922Z"></a>
2010-04-05T15:27:25.365922Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
The test file objlune_font2_mine.ps contains a Type 1 font which has a technically
invalid glyph. The glyph executes a 'lineto' class operation before a 'moveto' class
operation.

Although illegal it seems that all other PostScript RIPs ignore this requirement, this
patch removes the error check in FreeType to conform with other interpreters.
</pre>
<p>[freetype/src/psaux/psobjs.c]</p>
</blockquote>

<p><strong><a name="2010-04-05T113332.361294Z"></a>
2010-04-05T11:33:32.361294Z Chris Liddell</strong></p>
<blockquote>
<pre>
Update the to latest FT code from the FT git repository.</pre>
<p>[freetype/src/pshinter/pshglob.c freetype/src/base/ftpfr.c freetype/src/pshinter/pshglob.h freetype/src/type1/t1objs.c freetype/docs/DEBUG freetype/src/type1/t1objs.h freetype/docs/INSTALL.CROSS freetype/src/truetype/ttgload.c freetype/src/truetype/ttgload.h freetype/src/tools/ftrandom/ftrandom.c freetype/devel/ft2build.h freetype/src/tools/docmaker/formatter.py freetype/src/autofit/Jamfile freetype/src/bdf/module.mk freetype/include/freetype/config/ftheader.h freetype/src/cff/Jamfile freetype/src/cff/cffparse.c freetype/src/raster/ftraster.c freetype/src/cff/cffparse.h freetype/src/cff/cffcmap.c freetype/src/raster/ftraster.h freetype/src/cff/cffcmap.h freetype/src/raster/ftrend1.c freetype/include/freetype/internal/services/svttglyf.h freetype/src/raster/ftrend1.h freetype/builds/wince/vc2005-ce/freetype.vcproj freetype/docs/INSTALL.ANY freetype/src/psnames/module.mk freetype/src/base/ftutil.c freetype/src/autofit/afglobal.c freetype/src/cache/ftcsbits.c freetype/src/autofit/afglobal.h freetype/src/pcf/rules.mk freetype/src/base/ftsystem.c freetype/src/cache/ftcsbits.h freetype/src/psaux/psaux.c freetype/src/cff/module.mk freetype/src/pshinter/rules.mk freetype/src/pcf/pcfread.c freetype/src/bdf/bdflib.c freetype/src/pcf/pcfread.h freetype/include/freetype/ftcache.h freetype/src/raster/Jamfile freetype/src/gzip/rules.mk freetype/src/pshinter/pshalgo.c freetype/include/freetype/ftincrem.h freetype/include/freetype/internal/services/svcid.h freetype/src/pshinter/pshalgo.h freetype/src/psnames/psnamerr.h freetype/src/tools/test_afm.c freetype/src/cache/ftccache.c freetype/src/cache/ftcmru.c freetype/include/freetype/config/ftstdlib.h freetype/src/cid/cidtoken.h freetype/include/freetype/freetype.h freetype/vms_make.com freetype/src/cache/ftccache.h freetype/src/cache/ftcmru.h freetype/docs/INSTALL.UNIX freetype/src/tools/cordic.py freetype/src/pfr/Jamfile freetype/src/pfr/pfr.c freetype/src/pfr/pfrload.c freetype/src/pfr/pfrload.h freetype/include/freetype/fterrdef.h freetype/src/type1/t1gload.c freetype/src/base/ftbbox.c freetype/src/otvalid/otvgdef.c freetype/src/type1/t1gload.h freetype/include/freetype/ftsystem.h freetype/src/bdf/bdferror.h freetype/src/gxvalid/rules.mk freetype/src/pcf/pcf.c freetype/src/bdf/Jamfile freetype/src/gxvalid/gxvbsln.c freetype/include/freetype/internal/services/svotval.h freetype/src/otvalid/rules.mk freetype/src/pfr/pfrdrivr.c freetype/src/pcf/pcf.h freetype/src/type1/Jamfile freetype/src/pfr/pfrdrivr.h freetype/src/pcf/pcferror.h freetype/src/sfnt/ttsbit0.c freetype/src/base/ftmac.c freetype/src/base/ftgloadr.c freetype/src/base/ftbase.c freetype/builds/win32/vc2005/freetype.vcproj freetype/src/base/ftbase.h freetype/src/gxvalid/gxvmort0.c freetype/src/bdf/bdf.c freetype/src/bdf/bdf.h freetype/src/gxvalid/gxvalid.c freetype/src/cff/cff.c freetype/include/freetype/internal/psaux.h freetype/src/gxvalid/gxvalid.h freetype/autogen.sh freetype/src/base/fttype1.c freetype/src/autofit/afmodule.c freetype/src/autofit/afmodule.h freetype/src/pfr/pfrcmap.c freetype/src/pfr/pfrcmap.h freetype/src/psaux/Jamfile freetype/src/cff/cffpic.c freetype/src/base/ftdebug.c freetype/src/gzip/inflate.c freetype/src/cff/cffpic.h freetype/src/type1/t1driver.c freetype/src/otvalid/otvbase.c freetype/include/freetype/ftmoderr.h freetype/src/gxvalid/gxvopbd.c freetype/src/type1/t1driver.h freetype/src/base/basepic.c freetype/src/type1/t1parse.c freetype/src/otvalid/otvmath.c freetype/src/gxvalid/gxvmort1.c freetype/src/base/basepic.h freetype/src/psnames/rules.mk freetype/src/type1/t1parse.h freetype/src/pcf/Jamfile freetype/src/gzip/Jamfile freetype/src/base/ftbdf.c freetype/src/type1/t1afm.c freetype/src/raster/module.mk freetype/src/cid/cidobjs.c freetype/include/ft2build.h freetype/include/freetype/internal/services/svgxval.h freetype/include/freetype/internal/ftrfork.h freetype/src/type1/t1tokens.h freetype/src/type1/t1afm.h freetype/src/pshinter/pshrec.c freetype/src/cid/cidobjs.h freetype/src/pshinter/pshrec.h freetype/src/truetype/ttobjs.c freetype/src/autofit/autofit.c freetype/include/freetype/ftchapters.h freetype/src/type1/t1errors.h freetype/include/freetype/ftlzw.h freetype/src/truetype/ttobjs.h freetype/src/otvalid/otvgsub.c freetype/src/tools/apinames.c freetype/src/winfonts/fnterrs.h freetype/src/cache/ftcache.c freetype/include/freetype/ftglyph.h freetype/builds/win32/vc2005/index.html freetype/src/raster/rasterrs.h freetype/src/autofit/aflatin2.c freetype/src/type42/Jamfile freetype/src/base/ftpic.c freetype/src/autofit/aflatin2.h freetype/include/freetype/fttypes.h freetype/src/cache/ftcglyph.c freetype/src/gxvalid/gxvmort2.c freetype/src/pshinter/pshinter.c freetype/src/cache/ftcglyph.h freetype/src/tools/test_bbox.c freetype/src/cache/Jamfile freetype/src/type42/t42types.h freetype/include/freetype/internal/services/svpsinfo.h freetype/src/gxvalid/gxvmort.c freetype/src/raster/rastpic.c freetype/builds/win32/vc2008/index.html freetype/src/gxvalid/gxvmort.h freetype/src/gxvalid/README freetype/src/tools/docmaker/docbeauty.py freetype/src/raster/rastpic.h freetype/src/gzip/ftgzip.c freetype/include/freetype/ftcid.h freetype/include/freetype/internal/services/svpfr.h freetype/src/sfnt/module.mk freetype/src/type1/t1load.c freetype/docs/INSTALL freetype/src/gzip/inftrees.c freetype/docs/INSTALL.VMS freetype/src/type1/t1load.h freetype/src/gzip/inftrees.h freetype/src/pfr/pfrsbit.c freetype/src/cff/cfftoken.h freetype/src/gxvalid/gxvfeat.c freetype/include/freetype/internal/ftgloadr.h freetype/docs/PROBLEMS freetype/src/pfr/pfrsbit.h freetype/src/gxvalid/gxvfeat.h freetype/src/truetype/Jamfile freetype/src/gxvalid/gxvkern.c freetype/docs/INSTALL.MAC freetype/src/cid/Jamfile freetype/src/base/ftglyph.c freetype/include/freetype/ftmm.h freetype/src/otvalid/otverror.h freetype/docs/UPGRADE.UNIX freetype/src/autofit/afcjk.c freetype/src/autofit/aftypes.h freetype/src/psaux/afmparse.c freetype/src/sfnt/sfdriver.c freetype/src/autofit/afcjk.h freetype/src/sfnt/sfobjs.c freetype/src/base/ftobjs.c freetype/src/psaux/afmparse.h freetype/src/sfnt/sfdriver.h freetype/src/sfnt/sfobjs.h freetype/src/pfr/rules.mk freetype/src/psaux/module.mk freetype/src/base/ftstroke.c freetype/src/base/ftfstype.c freetype/docs/GPL.TXT freetype/src/base/ftbitmap.c freetype/src/pshinter/pshpic.c freetype/src/pshinter/pshpic.h freetype/src/psnames/pstables.h freetype/src/sfnt/rules.mk freetype/builds/wince/vc2005-ce/index.html freetype/src/autofit/afpic.c freetype/docs/PATENTS freetype/docs/raster.txt freetype/src/autofit/afpic.h freetype/src/cff/cffdrivr.c freetype/src/otvalid/otvgpos.c freetype/src/cid/cidriver.c freetype/src/cff/cffdrivr.h freetype/include/freetype/ftgasp.h freetype/src/autofit/afindic.c freetype/src/otvalid/otvgpos.h freetype/src/cid/cidriver.h freetype/src/autofit/afindic.h freetype/docs/INSTALL.GNU freetype/src/winfonts/module.mk freetype/src/sfnt/ttkern.c freetype/src/gzip/infutil.c freetype/src/sfnt/sferrors.h freetype/src/psaux/t1cmap.c freetype/src/sfnt/ttkern.h freetype/src/gxvalid/gxvmort4.c freetype/src/gzip/infutil.h freetype/include/freetype/ttnameid.h freetype/src/psaux/t1cmap.h freetype/src/gzip/zconf.h freetype/src/base/ftpatent.c freetype/src/truetype/rules.mk freetype/src/base/ftadvanc.c freetype/src/tools/docmaker/tohtml.py freetype/src/otvalid/otvalid.c freetype/src/otvalid/otvcommn.c freetype/include/freetype/config/ftmodule.h freetype/include/freetype/ftxf86.h freetype/src/otvalid/otvalid.h freetype/src/otvalid/otvcommn.h freetype/include/freetype/internal/ftserv.h freetype/Jamrules freetype/src/type1/module.mk freetype/src/base/ftapi.c freetype/docs/VERSION.DLL freetype/docs/LICENSE.TXT freetype/include/freetype/ftstroke.h freetype/include/freetype/ftlist.h freetype/include/freetype/ftbitmap.h freetype/src/type42/t42parse.c freetype/src/bdf/bdfdrivr.c freetype/modules.cfg freetype/builds/win32/visualce/freetype.dsp freetype/src/cid/ciderrs.h freetype/ChangeLog.20 freetype/ChangeLog.21 freetype/src/type42/t42parse.h freetype/ChangeLog.22 freetype/src/bdf/bdfdrivr.h freetype/include/freetype/tttables.h freetype/src/cid/module.mk freetype/src/autofit/afdummy.c freetype/src/tools/chktrcmp.py freetype/include/freetype/internal/services/svxf86nm.h freetype/src/autofit/afdummy.h freetype/include/freetype/internal/ftobjs.h freetype/src/pcf/pcfdrivr.c freetype/src/gxvalid/gxvmort5.c freetype/src/pcf/pcfdrivr.h freetype/src/psnames/Jamfile freetype/docs/MAKEPP freetype/Jamfile freetype/builds/win32/visualce/index.html freetype/include/freetype/ftotval.h freetype/src/tools/test_trig.c freetype/src/tools/docmaker/content.py freetype/include/freetype/ftadvanc.h freetype/include/freetype/internal/services/svpostnm.h freetype/src/cff/rules.mk freetype/src/gzip/zlib.h freetype/src/type42/t42error.h freetype/src/smooth/module.mk freetype/src/sfnt/sfnt.c freetype/src/autofit/afloader.c freetype/src/otvalid/Jamfile freetype/include/freetype/internal/services/svkern.h freetype/src/autofit/afloader.h freetype/src/cache/ftcerror.h freetype/src/psaux/psobjs.c freetype/src/sfnt/Jamfile freetype/src/gzip/infcodes.c freetype/src/truetype/ttpic.c freetype/src/psaux/psobjs.h freetype/src/base/ftcalc.c freetype/src/pshinter/pshnterr.h freetype/src/gzip/infcodes.h freetype/src/truetype/ttpic.h freetype/src/bdf/rules.mk freetype/include/freetype/internal/tttypes.h freetype/src/gxvalid/gxvmorx0.c freetype/include/freetype/internal/ftvalid.h freetype/include/freetype/fterrors.h freetype/builds/win32/visualc/freetype.dsp freetype/src/gzip/infblock.c freetype/src/base/ftlcdfil.c freetype/include/freetype/internal/ftmemory.h freetype/src/type1/type1.c freetype/include/freetype/ftpfr.h freetype/src/gzip/infblock.h freetype/src/pshinter/module.mk freetype/src/tools/ftrandom/Makefile freetype/src/type42/rules.mk freetype/src/gxvalid/gxvmorx.c freetype/docs/formats.txt freetype/src/cff/cffobjs.c freetype/src/smooth/ftsmooth.c freetype/src/gxvalid/gxvmorx.h freetype/src/cff/cffobjs.h freetype/include/freetype/ftoutln.h freetype/src/smooth/ftsmooth.h freetype/include/freetype/ftsynth.h freetype/src/tools/ftrandom/README freetype/src/winfonts/rules.mk freetype/docs/CHANGES freetype/src/base/ftotval.c freetype/include/freetype/tttags.h freetype/src/truetype/module.mk freetype/include/freetype/internal/autohint.h freetype/src/tools/glnames.py freetype/src/sfnt/ttload.c freetype/src/gxvalid/gxvfgen.c freetype/src/sfnt/ttload.h freetype/src/pfr/pfrtypes.h freetype/src/gxvalid/gxvtrak.c freetype/src/pcf/README freetype/include/freetype/internal/ftdriver.h freetype/include/freetype/ftgzip.h freetype/src/base/ftrfork.c freetype/include/freetype/internal/services/svbdf.h freetype/src/smooth/rules.mk freetype/src/gxvalid/gxvmorx1.c freetype/src/base/rules.mk freetype/src/autofit/afwarp.c freetype/src/cid/cidload.c freetype/include/freetype/ftgxval.h freetype/src/autofit/afwarp.h freetype/include/freetype/internal/services/svgldict.h freetype/src/cid/cidload.h freetype/src/gxvalid/gxvprop.c freetype/include/freetype/ftlcdfil.h freetype/src/tools/docmaker/sources.py freetype/src/type42/type42.c freetype/src/raster/rules.mk freetype/src/truetype/ttgxvar.c freetype/src/pshinter/Jamfile freetype/src/truetype/ttdriver.c freetype/src/gxvalid/Jamfile freetype/src/truetype/ttgxvar.h freetype/src/pfr/pfrgload.c freetype/src/Jamfile freetype/src/pshinter/pshmod.c freetype/src/truetype/ttdriver.h freetype/src/autofit/aflatin.c freetype/src/pfr/pfrgload.h freetype/src/base/ftsnames.c freetype/src/pshinter/pshmod.h freetype/include/freetype/internal/ftcalc.h freetype/include/freetype/ftrender.h freetype/src/base/ftgasp.c freetype/src/autofit/aflatin.h freetype/src/base/ftdbgmem.c freetype/docs/TRUETYPE freetype/src/smooth/ftspic.c freetype/include/freetype/t1tables.h freetype/src/cid/cidgload.c freetype/src/base/ftoutln.c freetype/src/smooth/ftspic.h freetype/src/base/ftsynth.c freetype/src/base/ftwinfnt.c freetype/src/cid/cidgload.h freetype/include/freetype/internal/internal.h freetype/src/sfnt/ttbdf.c freetype/src/sfnt/ttbdf.h freetype/src/lzw/ftlzw.c freetype/builds/win32/vc2008/freetype.vcproj freetype/src/truetype/ttpload.c freetype/src/gxvalid/gxvmorx2.c freetype/src/truetype/ttinterp.c freetype/src/lzw/rules.mk freetype/src/truetype/ttpload.h freetype/src/truetype/ttinterp.h freetype/src/base/ftxf86.c freetype/src/base/ftstream.c freetype/src/sfnt/ttcmap.c freetype/include/freetype/internal/services/svmm.h freetype/src/sfnt/ttcmap.h freetype/src/gxvalid/module.mk freetype/src/gxvalid/gxvjust.c freetype/src/truetype/tterrors.h freetype/src/pcf/pcfutil.c freetype/src/cid/type1cid.c freetype/src/pcf/pcfutil.h freetype/src/base/ftgxval.c freetype/include/freetype/internal/pshints.h freetype/src/sfnt/ttmtx.c freetype/src/psnames/psmodule.c freetype/src/sfnt/ttmtx.h freetype/src/psaux/psauxmod.c freetype/builds/wince/vc2008-ce/index.html freetype/src/pfr/module.mk freetype/src/psnames/psmodule.h freetype/src/base/ftcid.c freetype/include/freetype/ftsnames.h freetype/src/psaux/psauxmod.h freetype/README.git freetype/configure freetype/src/sfnt/ttcmapc.h freetype/src/gzip/inffixed.h freetype/include/freetype/ftwinfnt.h freetype/src/pfr/pfrobjs.c freetype/src/base/Jamfile freetype/include/freetype/ftimage.h freetype/docs/release freetype/src/pfr/pfrobjs.h freetype/src/lzw/ftzopen.c freetype/src/truetype/truetype.c freetype/src/lzw/Jamfile freetype/Makefile freetype/src/lzw/ftzopen.h freetype/src/base/fttrigon.c freetype/src/autofit/afhints.c freetype/src/autofit/afhints.h freetype/builds/win32/visualce/freetype.vcproj freetype/include/freetype/ftmac.h freetype/src/psaux/rules.mk freetype/src/type1/rules.mk freetype/src/cache/ftcimage.c freetype/src/psnames/pspic.c freetype/src/cache/ftcimage.h freetype/include/freetype/config/ftconfig.h freetype/src/cid/cidparse.c freetype/src/psnames/pspic.h freetype/src/cff/cfferrs.h freetype/src/cid/cidparse.h freetype/src/smooth/Jamfile freetype/src/gzip/adler32.c freetype/include/freetype/internal/sfnt.h freetype/docs/reference/README freetype/src/winfonts/winfnt.c freetype/devel/ftoption.h freetype/src/sfnt/sfntpic.c freetype/src/gzip/zutil.c freetype/src/winfonts/winfnt.h freetype/src/smooth/smooth.c freetype/src/sfnt/sfntpic.h freetype/src/gzip/zutil.h freetype/src/smooth/ftgrays.c freetype/src/raster/ftmisc.h freetype/src/gxvalid/gxvmorx4.c freetype/src/winfonts/Jamfile freetype/include/freetype/internal/pcftypes.h freetype/src/smooth/ftgrays.h freetype/src/pfr/pfrerror.h freetype/src/raster/raster.c freetype/include/freetype/internal/services/svwinfnt.h freetype/docs/CUSTOMIZE freetype/builds/unix/configure.raw freetype/include/freetype/internal/t1types.h freetype/builds/wince/vc2008-ce/freetype.vcproj freetype/src/otvalid/module.mk freetype/ChangeLog freetype/include/freetype/internal/services/svpscmap.h freetype/include/freetype/fttrigon.h freetype/docs/FTL.TXT freetype/src/cache/ftcmanag.c freetype/src/sfnt/ttsbit.c freetype/README freetype/src/cache/ftcmanag.h freetype/src/sfnt/ttsbit.h freetype/src/type42/t42drivr.c freetype/src/psaux/psconv.c freetype/include/freetype/ftbdf.h freetype/include/freetype/ftsizes.h freetype/src/type42/t42drivr.h freetype/src/psaux/psconv.h freetype/include/freetype/internal/services/svtteng.h freetype/include/freetype/internal/ftdebug.h freetype/src/tools/docmaker/docmaker.py freetype/src/gxvalid/gxverror.h freetype/src/autofit/module.mk freetype/include/freetype/internal/ftstream.h freetype/src/cff/cfftypes.h freetype/src/gxvalid/gxvmorx5.c freetype/src/gxvalid/gxvmod.c freetype/include/freetype/internal/ftpic.h freetype/src/gxvalid/gxvmod.h freetype/include/freetype/ftbbox.h freetype/src/otvalid/otvmod.c freetype/src/psnames/psnames.c freetype/src/cid/rules.mk freetype/src/psaux/psauxerr.h freetype/src/type42/t42objs.c freetype/src/otvalid/otvmod.h freetype/src/cache/ftccmap.c freetype/src/cache/ftcbasic.c freetype/src/type42/t42objs.h freetype/src/smooth/ftsmerrs.h freetype/include/freetype/internal/services/svttcmap.h freetype/version.sed freetype/src/psaux/t1decode.c freetype/src/autofit/rules.mk freetype/src/tools/docmaker/utils.py freetype/builds/win32/visualc/index.html freetype/src/psaux/t1decode.h freetype/src/type42/module.mk freetype/src/otvalid/otvjstf.c freetype/src/autofit/aferrors.h freetype/src/cff/cffgload.c freetype/src/gxvalid/gxvlcar.c freetype/include/freetype/internal/services/svsfnt.h freetype/src/base/ftinit.c freetype/src/bdf/README freetype/src/cache/ftccback.h freetype/src/cff/cffgload.h freetype/src/base/ftmm.c freetype/src/pcf/module.mk freetype/docs/TODO freetype/src/tools/Jamfile freetype/src/autofit/afangles.c freetype/include/freetype/config/ftoption.h freetype/src/cff/cffload.c freetype/src/gxvalid/gxvcommn.c freetype/src/autofit/afangles.h freetype/src/cff/cffload.h freetype/src/gxvalid/gxvcommn.h freetype/src/sfnt/ttpost.c freetype/src/sfnt/ttpost.h freetype/src/cache/rules.mk freetype/include/freetype/ttunpat.h freetype/include/freetype/ftmodapi.h freetype/include/freetype/internal/fttrace.h]</p>
</blockquote>

<p><strong><a name="2010-04-05T100359.155794Z"></a>
2010-04-05T10:03:59.155794Z Chris Liddell</strong></p>
<blockquote>
<pre>
Fix the FAPI implementation of finding the appropriate bytes for a given
character code from an array of strings representing a CMap.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T123123.439338Z"></a>
2010-04-02T12:31:23.439338Z Ken Sharp</strong></p>
<blockquote>
<pre>
'Fix' FAPI with FreeType.

FreeType's hinting is worse than useless for type 1 fonts, its actually harmful. It
distorts the glyph shape because it hints an unscaled outline. While it would be best
to fix FreeType's hinting this is a large project. For now this patch disables FreeType
hinting when handling type 1 fonts.

This resolves many spacing issues as well as fixing the stroke/fill mismatch with
ia3z3519.pdf and the incorrectly scaled outline in womanface.pdf.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T091923.286738Z"></a>
2010-04-02T09:19:23.286738Z Chris Liddell</strong></p>
<blockquote>
<pre>
Extend Ken's change to avoid using FT's &quot;synthetic&quot; vertical metrics
for Type42 fonts to cover all fonts using TTF outlines (so CIDType 2 fonts, as
well).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-04-02T090653.941441Z"></a>
2010-04-02T09:06:53.941441Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix a bug in the FreeType scan conversion.

A multiply and divide to calculate the slope of a line did not account for the
possibility of overflow during multiplication. Using the supplied SMulDiv routine fixes
the problem.

The patch has been supplied upstream to the FreeType development team.
</pre>
<p>[freetype/src/raster/ftraster.c]</p>
</blockquote>

<p><strong><a name="2010-04-01T133252.153614Z"></a>
2010-04-01T13:32:52.153614Z Robin Watts</strong></p>
<blockquote>
<pre>
Slight tidy up to gs_2_colors code: Given that the cie_joint_caches_alt is
now kept in the imager state rather than the graphics state, move the
reference counting/initialisation for the same into the imager state
too. No difference in operation, but just a bit tidier.

No expected differences, though the cluster may show 2colCIEtest.pdf as
failing if it hasn't propogated around the nodes yet.

</pre>
<p>[base/gsstate.c base/gsistate.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T154306.179195Z"></a>
2010-03-31T15:43:06.179195Z Chris Liddell</strong></p>
<blockquote>
<pre>
Bounds check the correct object when looking up a CID map</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T144031.704728Z"></a>
2010-03-31T14:40:31.704728Z Chris Liddell</strong></p>
<blockquote>
<pre>
Correct a logical error/typo in the fallback to non-hinted condition.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T132201.442343Z"></a>
2010-03-31T13:22:01.442343Z Chris Liddell</strong></p>
<blockquote>
<pre>
Prevent applying the nominalWidthX for T2 fonts, when FT already applies
it for us. Previously, the code was actually erroneously adding the
defaultWidthX. Since this use of nominalWidthX *may* be renderer dependent,
it is now controlled by the can_replace_metrics() call.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T131641.790764Z"></a>
2010-03-31T13:16:41.790764Z Chris Liddell</strong></p>
<blockquote>
<pre>
In the even a glyph name is not found in the CharStrings dictionary, fall
back to using the .notdef (instead of returning an error).</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T130744.152960Z"></a>
2010-03-31T13:07:44.152960Z Chris Liddell</strong></p>
<blockquote>
<pre>
For certain errors from FT, retry interpretting the glyph without hinting - this more
closely matches the existing behaviour.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T113210.299125Z"></a>
2010-03-31T11:32:10.299125Z Robin Watts</strong></p>
<blockquote>
<pre>
Remove unused variable. No expected differences.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-03-31T012018.778513Z"></a>
2010-03-31T01:20:18.778513Z Ray Johnston</strong></p>
<blockquote>
<pre>
Temporary reversion of previous mkromfs commit to remove -g until it works
correctly (fooled by a GS_LIB environment variable during testing)
</pre>
<p>[psi/psromfs.mak]</p>
</blockquote>

<p><strong><a name="2010-03-30T225953.311321Z"></a>
2010-03-30T22:59:53.311321Z Ray Johnston</strong></p>
<blockquote>
<pre>
Implement '-g' option in mkromfs to fold in some of the older 'genint'
functions (collect all init files into a single gs_init.ps, strip
whitespace and comments). Also change mkromfs so that wildcard expansion
must be specified using '*' on the command line which also means that
single explicit files can now be put into the %rom% file system.

Add many missed dependencies to the list for the 'gsromfs.c' %rom% file
system (CMap, ColorSpace, Decoding, Encoding, Font, IdiomSet, ProcSet,
SubstCID) and separate out miscellenaeous files.

Remove old geninit references from makefiles: psi/int.mak psi/os2.mak,
base/bcwin32.mak, base/msvctail.mak, base/winlib.mak, base/macos-mcp.mak,
base/openvms.mak, base/lib.mak, base/unix-aux.mak base/watcw32.mak,
base/wctail.mak
</pre>
<p>[base/wctail.mak psi/os2.mak base/lib.mak base/bcwin32.mak base/openvms.mak base/mkromfs.c base/gs.mak base/watcw32.mak psi/psromfs.mak psi/int.mak base/unix-aux.mak base/macos-mcp.mak base/msvctail.mak]</p>
</blockquote>

<p><strong><a name="2010-03-30T184034.337393Z"></a>
2010-03-30T18:40:34.337393Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug 691132 by ensuring that whenever we set a line width, we set
it to the absolute value of the line width. This seems consistent with
PDF, and cures the clipping problem in PCL referred to by the bug.

No expected differences.

</pre>
<p>[base/gxline.h]</p>
</blockquote>

<p><strong><a name="2010-03-30T144656.884951Z"></a>
2010-03-30T14:46:56.884951Z Robin Watts</strong></p>
<blockquote>
<pre>
In the gs_2_colors branch I had made 2 copies of the color state and swapped
between them. I had included dev_ht as part of this 'split' state, which
was a significant contributor to the slowdown due to it forcing repeated
writing of the halftone data to the clist. Also, it required significant
extra work on every setscreen or setcolorscreen operation.

Discussions with Henry/Ray/Kens et al lead to the realisation this wasn't
required. This patch therefore backs out the dev_ht split, and the changes
to zsetscreen and zsetcolorscreen. Additional code is however required to
clear the 'alternative' dev_color when a halftone is installed to stop the
'swapped out' color pointing to an illegal halftone cache.

This runs through local testing with no diffs showing (though some
strangeness was observed with an earlier version of this patch in
regression testing - Marcos has captured this with bug 691223).

This seems to have helped with the largest slowdowns, but there are still
significant differences in some cases. Very preliminary investigations seem
to show more time being spent in the interpreter/gc mechanism. Continuing
to investigate.


</pre>
<p>[base/gsstate.c base/gxistate.h base/gsht.c base/gxdcolor.h base/gzstate.h psi/zht.c psi/zht1.c]</p>
</blockquote>

<p><strong><a name="2010-03-30T101657.091024Z"></a>
2010-03-30T10:16:57.091024Z Ken Sharp</strong></p>
<blockquote>
<pre>
New Fontmap files for the URW fonts, both type 1 and TrueType formats.

The file Fontmap.URW-136.T1 contains definitions for the type 1 fonts (the URW PFB
fonts must be in the search path).

The file Fontmap.URW-136.TT contains definitions for the TrueType fonts (the URW TTF
fonts must be in the search path).

Currently neither of these work 100% because of problems with the URW font sets
(several incorrectly named fonts, and in one case an illegal type 1 font)

</pre>
<p>[lib/Fontmap.URW-136.T1 lib/Fontmap.URW-136.TT]</p>
</blockquote>

<p><strong><a name="2010-03-29T191049.447074Z"></a>
2010-03-29T19:10:49.447074Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Drop 'loca' entries that point beyond 'glyf' table during re-spliting
sfnts glyfs strings. Bug 691221.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-03-29T075249.284823Z"></a>
2010-03-29T07:52:49.284823Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change the FT interface code so we always use metrics retrieved from Freetype,
rather than attempting to &quot;fabricate&quot; metrics (which have already
been handled correctly by FT).</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-27T015955.922560Z"></a>
2010-03-27T01:59:55.922560Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix compilation error in pngs2html.pl (forgot to define variable).

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-26T102856.873949Z"></a>
2010-03-26T10:28:56.873949Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
A leftover from r10603 (Makefile change).</pre>
<p>[base/lib.mak]</p>
</blockquote>

<p><strong><a name="2010-03-26T002016.302228Z"></a>
2010-03-26T00:20:16.302228Z Robin Watts</strong></p>
<blockquote>
<pre>
Updated localcluster bmpcmp html generation script. Bitmaps produced are now
zoomable.


</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-24T124759.902550Z"></a>
2010-03-24T12:47:59.902550Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix for bug 691115.

In some circumstances, the shading code can get all the way to the point of
marking the screen/page without ever clipping to the relavent region. This
produces cases where we &quot;draw outside the lines&quot;. Often this is masked by
the fact that we only ever draw as far out of the lines as would be covered
by an area of constant color (typically a small area).

The fix for this is to spot the unclipped case when we come to render
trapezoids to the screen, and to clip the trapezoid into (at most) 3
smaller trapezoids.

This causes 104 non-pdfwrite differences, and 24 pdfwrite ones. Examination
using localcuster bmpcmp shows them all to be acceptable.

</pre>
<p>[base/gxshade6.c]</p>
</blockquote>

<p><strong><a name="2010-03-24T120547.469905Z"></a>
2010-03-24T12:05:47.469905Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to bmpcmp: Darken the third image (the diff image) to make changes
stand out better.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-24T001027.875727Z"></a>
2010-03-24T00:10:27.875727Z Robin Watts</strong></p>
<blockquote>
<pre>
Correct DOS line endings in bmpcmp.c.

Fix bug whereby areas with no changes in were still be saved out.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T191432.177681Z"></a>
2010-03-23T19:14:32.177681Z Robin Watts</strong></p>
<blockquote>
<pre>
Correct problem with bmpcmp whereby certain sizes of changed areas within
images could cause overlapping output bitmaps. This causes problems with
the output of bitmaps now due to the new 'in-place' generation of the diff
bitmap. Fixed by choosing sizes more smartly.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T090216.120692Z"></a>
2010-03-23T09:02:16.120692Z Till Kamppeter</strong></p>
<blockquote>
<pre>
CUPS Raster output device: Error out correctly with the return_error() macro
and not with &quot;gs_exit(); exit()&quot;, force banding mode as there are
files which do not render otherwise (Bug #691170).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-23T000659.853037Z"></a>
2010-03-23T00:06:59.853037Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Code clean-ups in the &quot;cups&quot; output device to fix the segfaults
in bug #691170 and bug #691014 (but does not fix the bugs yet).
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-22T141842.718453Z"></a>
2010-03-22T14:18:42.718453Z Chris Liddell</strong></p>
<blockquote>
<pre>
Handle CID fonts whose GDBytes != 2 - previously GDBytes was hardcoded as 2.</pre>
<p>[psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-22T064308.806820Z"></a>
2010-03-22T06:43:08.806820Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Added the ability to specify bmpcmp options when running clusterpush.pl, e.g.:

clusterpush.pl bmpcmp -w 9 -t 10

No validation is done on the options; bad options will result in no bmpcmp output being generated.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-21T050150.135122Z"></a>
2010-03-21T05:01:50.135122Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fixed maxdiffs argument in bmpcmp.c (was acting as maxpage).
</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-21T032353.245152Z"></a>
2010-03-21T03:23:53.245152Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Fixed a couple of compiler warnings in bmpcmp.c
</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-19T183004.447497Z"></a>
2010-03-19T18:30:04.447497Z Ralph Giles</strong></p>
<blockquote>
<pre>
Compute AES cypher tables at compile time instead of run time.

The aes implementation needs some tables of data to perform its
calculations. In a thread-safety review, Henry spotted that the
tables were global variables with no mutex isolation.

I believe this is actually ok. There is a static flag marking whether
the tables are initialized. If they are not, a call to aes_setkey_*
will invoke aes_gen_tables to initialize them, then set the flag.
However, aes_gen_tables operates deterministically, always writing
the same data sequence to the globals. So while there is a race
where two threads could be executing aes_gen_tables at the same time,
or while another thread is accessing the same tables, there is no
read-modify-write step which could create inconsistent data.

Nevertheless, the tables are small relative to our application, and
there is a compile time option XYSSL_AES_ROM_TABLES which generates
the data at compile time and stores it static const. This commit
turns on that option, allowing the compiler to put the data in a
non-writable segment and making the careful thread safety analysis
above unnecessary.

There should be no difference in behaviour, and Henry has verified
that the two code paths result in identical table data.</pre>
<p>[base/aes.c]</p>
</blockquote>

<p><strong><a name="2010-03-18T113938.599047Z"></a>
2010-03-18T11:39:38.599047Z Ken Sharp</strong></p>
<blockquote>
<pre>
Update the list of face substitutions in .substitutefaces to include all the fonts we
define in Fontmap.GS (if not already defined).

Bug #691180, if we have a font defined in the Fontmap then we don't use the additional
information in a PDF file FontDescriptor. Instead we stick with whatever font the PS
substitution comes up with (if the font is not present). If a member of the family is
not defined we do use the FontDescriptor. This can lead to different choices for the
substitute font. By defining the font in the substitutefaces array we can attempt to get
a consistent result.

This *will* lead to differences in the regression suite as we are now substituting
different fonts for some missing faces. Apparently only with the test file for this
bug though.</pre>
<p>[Resource/Init/gs_fonts.ps]</p>
</blockquote>

<p><strong><a name="2010-03-18T005710.529905Z"></a>
2010-03-18T00:57:10.529905Z Robin Watts</strong></p>
<blockquote>
<pre>
Merge gs_2_colors branch down to trunk.

This adds a new set of color state information to the graphics/imager
state, along with a new non-standard postscript operator .swapcolors to
toggle between them.

The Postscript interpreter is updated to use one set of color information
for stroking, and the other for all non-stroking colors.

This produces differences in just 2 pdfwrite tests, due to rounding errors
due to changes in the way pdf with non-zero rendering modes is emitted now.

</pre>
<p>[psi/zcolor.c base/gsdps1.c base/gdevpdft.c base/gxccache.c /trunk/gs base/gspaint.c base/gscsepr.c base/gsimage.c base/gxchar.c base/gsptype1.c base/gxcmap.c psi/interp.c base/gzstate.h psi/dmmain.c base/gscspace.c base/gscolor1.c base/gscdevn.c base/gscolor2.c base/gscie.c base/gxistate.h psi/psromfs.mak psi/dxmain.c base/gxcspace.h base/gxhldevc.c psi/dxmainc.c psi/dmmain.r Resource/Init/pdf_draw.ps psi/zht1.c base/gscolor.c psi/zicc.c psi/zchar1.c base/gxpaint.c base/gsstate.c Resource/Init/pdf_ops.ps psi/zcie.c base/gstext.c Resource/Init/pdf_font.ps base/gstrans.c psi/zht.c base/gsequivc.c base/gxdcolor.h psi/igstate.h base/gspcolor.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T214113.190501Z"></a>
2010-03-17T21:41:13.190501Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp tweak to allow maximum/minimum bitmap sizes to be set from the
command line.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T201225.972208Z"></a>
2010-03-17T20:12:25.972208Z Robin Watts</strong></p>
<blockquote>
<pre>
MSVC whinges when asked to shift by 32 or more bits at once. Simple tweaks
to fool the compiler and eliminate warnings.

No expected differences.

</pre>
<p>[base/gdevm64.c base/gdevm56.c base/gdevm48.c base/gdevm40.c base/gxclrast.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T185412.480084Z"></a>
2010-03-17T18:54:12.480084Z Robin Watts</strong></p>
<blockquote>
<pre>
Tweak to gxcmap.c to remove warnings about shifting by more than 32 bits on
MSVC builds.

No expected differences.

</pre>
<p>[base/gxcmap.c]</p>
</blockquote>

<p><strong><a name="2010-03-17T173027.541399Z"></a>
2010-03-17T17:30:27.541399Z Robin Watts</strong></p>
<blockquote>
<pre>
Revised bmpcmp.
* Redone command line handling
* Ability to read PAMs (so we can read CMYK stuff now)
* &quot;Fuzzy&quot; behaviour (both compatible and exhaustive modes)
* New behaviour using map bitmap to avoid rediffing multiple times.
* CMYK -&gt; RGB conversion as last step before PNG/BMP writing.

Still to do:
* Output number of fuzzy matches etc to the meta file.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T191855.825828Z"></a>
2010-03-15T19:18:55.825828Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Change default TIFF strip size to one megabyte.

Many fax readers have problems reading TIFF images which are chunked into
strips, and one megabyte is larger than the biggest expected fax page.  Hence,
ghostscript's default TIFF output will be accepted by those readers.


</pre>
<p>[base/gdevtifs.h]</p>
</blockquote>

<p><strong><a name="2010-03-15T190043.589302Z"></a>
2010-03-15T19:00:43.589302Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Write TIFF directories before the page data.  This might help bug #691172 and
probably some other non-conforming TIFF readers.

</pre>
<p>[base/gdevtifs.c base/gdevtsep.c base/gdevtfnx.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T152155.436137Z"></a>
2010-03-15T15:21:55.436137Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Don't throw an error when a filter returns 0 bytes and a normal return code.
This often happens with eexecDecode filter, which has to return the control
to the interpreter after every space character since Adobe no longer adds
zeros at the end of the encoded block. Document new return code 2 used by
eexecDecode filter. Bug 690909.
</pre>
<p>[base/sstring.c base/seexec.c psi/iscan.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T145615.278449Z"></a>
2010-03-15T14:56:15.278449Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Partial fix for bug #691172: The tiff resolution tags are floating point values
and need to be passed as such to TIFFSetField.

</pre>
<p>[base/gdevtifs.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T074438.447170Z"></a>
2010-03-15T07:44:38.447170Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Applied Tim Waugh's patch from bug #691171: A NULL check for the argument of
TIFFCleanup was missing, which caused a segfault when opening the output device
failed for any of the devices in gdevtfax.c.

</pre>
<p>[base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-03-15T063434.317078Z"></a>
2010-03-15T06:34:34.317078Z regression</strong></p>
<blockquote>
<pre>
Added support for mupdf testing in local regression suite.
</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-15T063125.268888Z"></a>
2010-03-15T06:31:25.268888Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>
Changes to the local cluster code:

added bmpcmp documentation to clusterpush.txt
new file, runNightly.pl, for nightly regression testing
readlog.pl, build.pl, and run.pl changes for nightly regression use
</pre>
<p>[toolbin/localcluster/readlog.pl toolbin/localcluster/build.pl toolbin/localcluster/runNightly.pl toolbin/localcluster/run.pl toolbin/localcluster/clusterpush.txt]</p>
</blockquote>

<p><strong><a name="2010-03-11T173630.596061Z"></a>
2010-03-11T17:36:30.596061Z Chris Liddell</strong></p>
<blockquote>
<pre>
Apply a change submitted to FT and accepted - see FT bug #27442</pre>
<p>[freetype/src/raster/ftraster.c]</p>
</blockquote>

<p><strong><a name="2010-03-11T050122.057384Z"></a>
2010-03-11T05:01:22.057384Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Run svn update on the ghostscript source even for clusterpush runs to make sure that bmpcmp.c is current.

</pre>
<p>[toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T174109.765460Z"></a>
2010-03-10T17:41:09.765460Z regression</strong></p>
<blockquote>
<pre>

Minor cleanup of the local cluster code.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/pngs2html.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T164226.014885Z"></a>
2010-03-10T16:42:26.014885Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix bug in bmpcmp.c: When reading images from multi-image sets, we stop
the comparison process as soon as we fail to find any differences in the
current image. With this fix we correctly keep searching to the end.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T150557.116970Z"></a>
2010-03-10T15:05:57.116970Z Chris Liddell</strong></p>
<blockquote>
<pre>
Change how we derive the glyph metrics from FT: we now interpret the glyph
description only once, scaled and hinted, and then calculate the metrics
from that. It's more accurate, accounts for hints that extend the glyph outline
and should be a worthwhile speed improvement.</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T125150.027959Z"></a>
2010-03-10T12:51:50.027959Z Robin Watts</strong></p>
<blockquote>
<pre>
Change the condition under which we update the overprint device when restoring
a graphics state to be more relaxed; rather than updating if the overprint
state has changed we now update if it was enabled, or it if it is enabled.

The logic behind this is that it will still fire in all the same conditions
it did before, but will also fire when we restore from a state that had it
enabled to another state that had it enabled. This should be entirely
harmless, but will allow the state to be updated in the case where a
colorspace has been updated.

This causes 2 differences in the tests, that only show up in psd files.
All indications seem to be that these files really are identical. But if
they aren't, I believe they should be progressions, rather than regressions.

This moves the trunk more into line with the output of the gs_2_colors branch.

</pre>
<p>[base/gsstate.c]</p>
</blockquote>

<p><strong><a name="2010-03-10T061323.278865Z"></a>
2010-03-10T06:13:23.278865Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added local modes to build.pl and run.pl in preparation for use as part of the nightly regression.

</pre>
<p>[toolbin/localcluster/build.pl toolbin/localcluster/run.pl]</p>
</blockquote>

<p><strong><a name="2010-03-10T051959.535554Z"></a>
2010-03-10T05:19:59.535554Z Ray Johnston</strong></p>
<blockquote>
<pre>
Fix for SEGV with the psdcmyk device on 258-01.ps. This was a fundamental memory
problem with any device that used the compressed_color_list functions in gdevdevn.c
since a 'restore' could free structures which were still needed by the device.
Use stable_memory to avoid this. Bug 691150.
</pre>
<p>[base/gdevdevn.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T172707.400171Z"></a>
2010-03-09T17:27:07.400171Z Robin Watts</strong></p>
<blockquote>
<pre>
Another tweak to the local cluster bmpcmp html page generation. I managed to
miss renaming the images in the second column.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T172239.470336Z"></a>
2010-03-09T17:22:39.470336Z Robin Watts</strong></p>
<blockquote>
<pre>
Another tweak to the localcluster bmpcmp html page generation javascript;
quote the string to avoid it being converted to an int.


</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T172235.452303Z"></a>
2010-03-09T17:22:35.452303Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Let pdftoraster not exit before the Ghostscript sub-process finishes. Thanks to Tim Waugh from Red Hat for the patch.
</pre>
<p>[cups/pdftoraster.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T171522.155871Z"></a>
2010-03-09T17:15:22.155871Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix pngs2html.pl to number images according to both directory and image
number (needed now as images restart from 0 within each directory). This
really should fix the bmpcmp html output.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T170842.132281Z"></a>
2010-03-09T17:08:42.132281Z Robin Watts</strong></p>
<blockquote>
<pre>
More fixes for the bmpcmp html page generations javascript.

Change code to pass numbers to swap() rather than strings as javascripts
conversion of strings to ints is... unhelpful.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T165048.278966Z"></a>
2010-03-09T16:50:48.278966Z Robin Watts</strong></p>
<blockquote>
<pre>
Misplaced bracket in the javascript meant that only the first images would
swap on mouseover properly. Fixed here.


</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T163921.328229Z"></a>
2010-03-09T16:39:21.328229Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix javascript problems in bmpcmp output page generation. What sort of
stupid broken language depends on whitespace?

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T163506.527087Z"></a>
2010-03-09T16:35:06.527087Z Till Kamppeter</strong></p>
<blockquote>
<pre>
Fixes on CUPS Raster output device:
- Fixed memory reallocation on bitmap size change. Reallocation is not only
needed when dimendions and margins change, but also when the color depth
changes. Fixes bugs #691029 and #691108.
- Fixed arrayoption() macro in cups_put_params() function. Array values did
not get actually set in cups.header data structure. Bug only showed via
a compiler warning.
- Silenced compiler warning by presetting c0..c3 in cups_map_cmyk() to zero.
</pre>
<p>[cups/gdevcups.c]</p>
</blockquote>

<p><strong><a name="2010-03-09T162931.666786Z"></a>
2010-03-09T16:29:31.666786Z Robin Watts</strong></p>
<blockquote>
<pre>
Attempted fix for bmpcmp output javascript problems with the coordinate
tracking.

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T161159.669918Z"></a>
2010-03-09T16:11:59.669918Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix typos in the javascript code for pngs2html.pl and bmps2html.pl; this should
get at least some of it working, but the coord stuff still baffles me.

Also fix a typo that was causing the wrong &quot;third image&quot; to appear.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-09T014606.865448Z"></a>
2010-03-09T01:46:06.865448Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Fixed longstanding bug fuzzy.c that caused pbm files to be misread.

</pre>
<p>[toolbin/tests/fuzzy.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T215705.576067Z"></a>
2010-03-08T21:57:05.576067Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating documentation to mention how to run mkcidfm.ps manually; bug 688437</pre>
<p>[doc/Use.htm]</p>
</blockquote>

<p><strong><a name="2010-03-08T215437.005008Z"></a>
2010-03-08T21:54:37.005008Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
convert font file name to lowser case before matching; make it possible for upper case ARIALUNI.TTF to match; bug 688437</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T214956.216990Z"></a>
2010-03-08T21:49:56.216990Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
updating windows CJK font substitution list for more commonly found MS CJK fonts; bug 688437</pre>
<p>[lib/mkcidfm.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T214715.240330Z"></a>
2010-03-08T21:47:15.240330Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
revert to r8185 version of the korean example - it was removed in r8190 and a
corrupted version r9325 was subsequently checked in; found during fixing bug
688437 (incompete font substitution list)</pre>
<p>[examples/cjk/gscjk_ak.ps]</p>
</blockquote>

<p><strong><a name="2010-03-08T162053.842289Z"></a>
2010-03-08T16:20:53.842289Z Ken Sharp</strong></p>
<blockquote>
<pre>
Ongoing bug fixes for #690448.
The FreeType code will synthesize vertical metrics for TrueType (Type 42) fonts which do
not contain a vmtx table. This includes the vertical advance, which will be returned
to the FAPI code, and used even if there were originally no vertical metrics and the
font should not have any vertical advance.

Modified the metrics override callback, called by FT, so that if the font is a TT font,
and this is a vertical metrics call, we set the advance to 0. This prevents the
synthesized metrics from incorrectly advancing the glyph vertically.

This may eventually be a problem if we find a CIDFont with Type42 outlines which relies
on the vmtx table in the font rather than the Metrics2 or CDevProc overrides to position
the glyphs. Since this facility was only added in CPSI 3011 it is unlikely we will ever
encounter such a font. THis has not been done at present, as the information (WMode=1)
is not currently available to the code called from FreeType to override the metrics,
and would need to be added.

Also, fixed an issue where the 'advance_v' member of the metrics structure was left
uninitialised if a horizontal override took place. This could cause glyphs to be
mis-positioned vertically.
</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T154120.817468Z"></a>
2010-03-08T15:41:20.817468Z Ken Sharp</strong></p>
<blockquote>
<pre>
revert revision 10871, we will tackle this problem in the FAPI FreeType interface code
instead of in FreeType itself.

</pre>
<p>[psi/fapi_ft.c]</p>
</blockquote>

<p><strong><a name="2010-03-08T152257.356559Z"></a>
2010-03-08T15:22:57.356559Z Ken Sharp</strong></p>
<blockquote>
<pre>
revert revision 10871, we will address the matter of FreeType creating synthetic vertical
metrics when none exist by overriding the synthetic metrics in the FAPI FreeType interface
code instead.
</pre>
<p>[freetype/src/truetype/ttgload.c freetype/include/freetype/freetype.h]</p>
</blockquote>

<p><strong><a name="2010-03-08T092849.484133Z"></a>
2010-03-08T09:28:49.484133Z Chris Liddell</strong></p>
<blockquote>
<pre>
Latest improvements to the FAPI/FT bridge code. This code resolves the
issues with font matrices which do more than just scale. It is not yet
&quot;finished&quot;, but is too big a step forward to risk losing.</pre>
<p>[psi/fapi_ft.c psi/zfapi.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T210134.974121Z"></a>
2010-03-05T21:01:34.974121Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added bmpcmp option to clusterpush.pl.

</pre>
<p>[toolbin/localcluster/clusterpush.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T192534.812546Z"></a>
2010-03-05T19:25:34.812546Z regression</strong></p>
<blockquote>
<pre>

Export results of local cluster bmpcmp command to web.

</pre>
<p>[toolbin/localcluster/clustermaster.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T165000.654216Z"></a>
2010-03-05T16:50:00.654216Z regression</strong></p>
<blockquote>
<pre>

Update the local cluster code to use the new pbm-&gt;png mode of bmpcmp.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T164710.049203Z"></a>
2010-03-05T16:47:10.049203Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Minor changes due to bugzilla update.

</pre>
<p>[toolbin/bugsByEngineer.pl]</p>
</blockquote>

<p><strong><a name="2010-03-05T132434.158774Z"></a>
2010-03-05T13:24:34.158774Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix FreeType
Ongoing fixes for bug #690448. In this case FreeType generates vertical metrics for
TrueType (in our case Type 42) fonts which lack vhea/vmtx tables, which is generally
the case.

These metrics are useful to a 'normal' TrueType consumer which has a notion of the
orientation of the writing direction. However in PostScript we don;t know that, so we
apply both the horizontal and vertical advance widths.

If the vertical advance should be 0 (because its not specified) then creating one causes
the glyphs to be misplaced.

This code adds a new load flag to FreeType 'FT_LOAD_NO_SYNTHETIC_METRICS', and sets
this flag in the FAPI FreeType interface code, which prevents FreeType from manufacturing a bogus vertical advance.
</pre>
<p>[psi/fapi_ft.c freetype/src/truetype/ttgload.c freetype/include/freetype/freetype.h]</p>
</blockquote>

<p><strong><a name="2010-03-05T092347.698736Z"></a>
2010-03-05T09:23:47.698736Z Lars Uebernickel</strong></p>
<blockquote>
<pre>
Open tiffsep and tiffsep1 output files as seekable.

All files written by libtiff have to be seekable when writing multiple pages,
because libtiff tries to access previously written page dictionaries.  This
fixes bug 691160.

</pre>
<p>[base/gdevtsep.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T070113.637667Z"></a>
2010-03-05T07:01:13.637667Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Fix pbm reading and png writing in bmpcmp.c.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-05T053224.962092Z"></a>
2010-03-05T05:32:24.962092Z regression</strong></p>
<blockquote>
<pre>

Added pngs2html.pl to repository: take a directory full of png files
generated by the increasingly poorly named bmpcmp.c and generate web pages
(like bmps2html.pl but without the bmp-&gt;png conversion).

</pre>
<p>[toolbin/localcluster/pngs2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-03T212107.833457Z"></a>
2010-03-03T21:21:07.833457Z Ralph Giles</strong></p>
<blockquote>
<pre>
Flip images from RGB to BGR pixel format when reading ppm files,
and flip them back to RGB when writing png files.

This adapts all the current routines to assume the BGRx storage
format used by the bmp image format for the internal representation,
as is already done with the row order.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T212104.624166Z"></a>
2010-03-03T21:21:04.624166Z Ralph Giles</strong></p>
<blockquote>
<pre>
Also save the difference image as a png when bmpcmp is compiled with HAVE_LIBPNG.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T203001.695369Z"></a>
2010-03-03T20:30:01.695369Z Robin Watts</strong></p>
<blockquote>
<pre>
Fix stupid memory overwrite bug on bmp load.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T200329.767395Z"></a>
2010-03-03T20:03:29.767395Z Robin Watts</strong></p>
<blockquote>
<pre>
bmpcmp.c tweaks: Add (largely untested) code to allow &quot;plain&quot; (ascii) ppm,
pgm, pbm files. Also fix some compile warnings on 64bit platforms. Now
compiles cleanly with -Wall.


</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-03T190712.236947Z"></a>
2010-03-03T19:07:12.236947Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add optional support for png output to the bmpcmp utility.

When compiled with the HAVE_LIBPNG preprocessor symbol defined, and
linking with libpng, the utility will save its output focus images
in RGB png format. Currently, only 32 bit RGBx pixel data is supported.</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-02T224902.357333Z"></a>
2010-03-02T22:49:02.357333Z Robin Watts</strong></p>
<blockquote>
<pre>
Attempt to fix the javascript in the created files. The change to use
numeric filenames padded to 5 chars had broken the javascript. This
might fix it.

</pre>
<p>[toolbin/localcluster/bmps2html.pl]</p>
</blockquote>

<p><strong><a name="2010-03-02T212636.100914Z"></a>
2010-03-02T21:26:36.100914Z regression</strong></p>
<blockquote>
<pre>

More changes towards having a bmpcmp running on the local cluster.

</pre>
<p>[toolbin/localcluster/bmps2html.pl toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl]</p>
</blockquote>

<p><strong><a name="2010-03-02T211259.888859Z"></a>
2010-03-02T21:12:59.888859Z Robin Watts</strong></p>
<blockquote>
<pre>
Updated bmpcmp to avoid inverting pnms on reading.

Also improve reading of non 32bpp bitmaps - still not quite right.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-03-02T001558.939654Z"></a>
2010-03-02T00:15:58.939654Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Added partial support for &quot;clusterpush.pl bmpcmp&quot; (which will allow
users to generate bitmap comparisons of their most recent clusterpush
job and trunk).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/clusterpush.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-03-01T174440.662743Z"></a>
2010-03-01T17:44:40.662743Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add support to the autoconf and msvc builds to compile in a copy of
the FreeType2 library from local source.

Previously, the FAPI bridge for freetype required that the library
be compiled externally and include and link flags passed through
the FT_CFLAGS and FT_LIBS makefile variables. We now include a copy
of the freetype source in the tree, to make it easier to find a
compatible version of the source and to simplify building for
platforms that don't provide a system freetype.

Now, to enable both freetype and the FAPI bridge, pass --enable-freetype
to the configure script. This will set FT_BRIDGE=1 and the other required
variables. The configure script will prefer local source in gs/freetype2
to the copy in gs/freetype to simplify testing against upstream.

To enable freetype in the msvc build, pass FT_BRIDGE=1 on the nmake command
line.

Note that the fallback is now FT_BRIDGE=0, not FT_BRIDGE undefined; this
will require changes in any custom top-level makefiles.
</pre>
<p>[base/winlib.mak doc/Make.htm base/gs.mak base/Makefile.in psi/int.mak base/configure.ac psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-03-01T153456.724940Z"></a>
2010-03-01T15:34:56.724940Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #691154 and the regressions associated with revision 10823.
Unfortunately, performance-wise, the wtsimdi device must always use a
contone buffer until we've had a chance to see which raster operations
can be eliminated correctly.
</pre>
<p>[base/gdevwts.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T225702.883228Z"></a>
2010-02-28T22:57:02.883228Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
First half of patch from John Wehle for bug 691149 - vac C compiler on AIX 5.2 does
not like function with a void prototype returning a void function e.g.

------------------
void func1();

void funct2() {
return funct1();
}
------------------

The 2nd half of the submitted patch was committed as part of r10826 .

</pre>
<p>[base/gdevpx.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T172609.949555Z"></a>
2010-02-28T17:26:09.949555Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes part of 691149 - void function returning value, thanks to John
Wehle for the fix.  Also, there were several compiler warnings in this
file related to the casting of the gs memory type pointer which have
been cleaned up as well.
</pre>
<p>[base/gsnogc.c]</p>
</blockquote>

<p><strong><a name="2010-02-28T145200.838160Z"></a>
2010-02-28T14:52:00.838160Z Hin-Tak Leung</strong></p>
<blockquote>
<pre>
The distclean make target should call pgclean to clean up profile build also.</pre>
<p>[base/Makefile.in]</p>
</blockquote>

<p><strong><a name="2010-02-28T011926.994088Z"></a>
2010-02-28T01:19:26.994088Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Following PDF reference, version 1.7, section 10.10, crop /TrimBox and /CropBox
by the /MediaBox. Bug 691145.
</pre>
<p>[Resource/Init/pdf_main.ps]</p>
</blockquote>

<p><strong><a name="2010-02-27T232931.437722Z"></a>
2010-02-27T23:29:31.437722Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug #691147 customer 861, the optimization to strength reduce
the raster operation here is wrong, it is premised on the assumption
the colors are opaque.  If either texture or source is transparent the
strength reduction which effectively ignores the source or pattern is
wrong and it will subsequently cause opaque painting.  We've simply
removed the optimization instead of conditionalizing on opaque cases,
because tests indicate the reduction not that significant.  The
example in the bug report was reduced from a file in the XL ATS 305
test suite.  The following customer reported bugs in that test suite
are fixed by this change:

FH905UJ1.BIN pp 1,2,3,4
FH906UJ1.BIN pp 1-6
MA2K7UJ2.BIN pp 1-10
PW2K6UJ1.BIN pp 2
PWTTDUJ3.BIN pp 1
</pre>
<p>[base/gxipixel.c]</p>
</blockquote>

<p><strong><a name="2010-02-27T202413.417473Z"></a>
2010-02-27T20:24:13.417473Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Upgrade Adobe Glyph List to v. 2.0. AGL is used for character mapping in
non-symbolic TrueType fonts in PDF files. Bug 691116.
</pre>
<p>[Resource/Init/gs_agl.ps]</p>
</blockquote>

<p><strong><a name="2010-02-27T165647.050522Z"></a>
2010-02-27T16:56:47.050522Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing newline in a TTF debug message.
</pre>
<p>[Resource/Init/gs_ttf.ps]</p>
</blockquote>

<p><strong><a name="2010-02-26T171128.684024Z"></a>
2010-02-26T17:11:28.684024Z Ralph Giles</strong></p>
<blockquote>
<pre>
Correct a typo in the freetype makefile which prevented the inclusion
of ftlzw.c.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-26T064131.056673Z"></a>
2010-02-26T06:41:31.056673Z Ralph Giles</strong></p>
<blockquote>
<pre>
Fixes to our makefile for the third-party freetype library.

I'd missed a number of &quot;optional&quot; files in the original commit, but
didn't notice because other dependencies, which themselves link to
the system freetype library on linux were providing definitions of
the missing symbols. These are now included in our build.

We now generate freetype.dev by copying freetype_&#36;(SHARE_FT) within
freetype.mak, the same was this option is handled in the other third-
party makefiles.

We set native line endings and Id keyword substitution for this file
in the Subversion repository.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-25T110459.765077Z"></a>
2010-02-25T11:04:59.765077Z Chris Liddell</strong></p>
<blockquote>
<pre>
add quotes around the expansion of DEVSTUDIO variable when it's used for
the recursive nmake call for debug targets - in case it has white space in it.</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-02-25T082146.259499Z"></a>
2010-02-25T08:21:46.259499Z Masaki Ushizaka</strong></p>
<blockquote>
<pre>
Fix for bug 691103.  The pdfwrite device now considers FDArray fonts'
FontMatrix and writes correct W/W2/DW/DW2 widths for CIDFont with unusual
FontMatrix.  This also fixes a problem gs_font::orig_FontMatrix not being
initialized for CIDFont.
Bug687832.pdf and Bug690834.ps will show differences which are improvements.
</pre>
<p>[Resource/Init/gs_cidfn.ps base/gdevpdtt.c]</p>
</blockquote>

<p><strong><a name="2010-02-24T202657.347460Z"></a>
2010-02-24T20:26:57.347460Z Ralph Giles</strong></p>
<blockquote>
<pre>
Add a generic makefile for compiling the freetype library
as part of the Ghostscript monolithic build.

Including makefiles should define FTSRCDIR, FTGENDIR and FTOBJDIR,
similar to other third party libraries.
</pre>
<p>[base/freetype.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T195905.197182Z"></a>
2010-02-24T19:59:05.197182Z Ralph Giles</strong></p>
<blockquote>
<pre>
Copy our local branch of the freetype library source into the gs tree.

This was the intended result of commit 10804, but an ommitted path element
placed it in the repository root instead.
</pre>
<p>[freetype]</p>
</blockquote>

<p><strong><a name="2010-02-24T193811.435012Z"></a>
2010-02-24T19:38:11.435012Z Ralph Giles</strong></p>
<blockquote>
<pre>
Correct a typo in a dependency specification for wrfont.c.

The typo (stdio_h for stdio__h) prevented the dependency on arch.h
from being declared, generating a temporary error in a sufficiently
parallel make invocation.
</pre>
<p>[psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T192711.525322Z"></a>
2010-02-24T19:27:11.525322Z regression</strong></p>
<blockquote>
<pre>

Changed naming scheme for regressions from 00000-00000 to 00000 (i.e. no longer treat Ghostscript and GhostPDL revisions independently).

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl]</p>
</blockquote>

<p><strong><a name="2010-02-24T182235.905364Z"></a>
2010-02-24T18:22:35.905364Z Ralph Giles</strong></p>
<blockquote>
<pre>
Move the fontconfig check into the libraries section of the configure script.
</pre>
<p>[base/configure.ac]</p>
</blockquote>

<p><strong><a name="2010-02-24T181645.225914Z"></a>
2010-02-24T18:16:45.225914Z Chris Liddell</strong></p>
<blockquote>
<pre>
ensure the DEVSTUDIO value is propagated when we recursively nmake for the debug targets.</pre>
<p>[psi/msvc32.mak]</p>
</blockquote>

<p><strong><a name="2010-02-24T172823.116518Z"></a>
2010-02-24T17:28:23.116518Z Ralph Giles</strong></p>
<blockquote>
<pre>
Remove a spurious circular symlink accidentally included in the libpng-1.2.42
source import.
</pre>
<p>[libpng/libpng]</p>
</blockquote>

<p><strong><a name="2010-02-24T095802.654907Z"></a>
2010-02-24T09:58:02.654907Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix, ignore a class of broken TrueType font.
Bug #691121 &quot;gs stops in interpreting tt instructions&quot;. The font executes an MDRP
instruction with point number 28, the glyph only contains 28 points numbered 0 to 27 so
the interpreter (correctly) flags an error.

Windows and FT both appear to silently ignore the error and the instruction (definitely
the case for FreeType). Modified Ins_MDRP to simply return if the indicated point is
outside the number of points in this case.
</pre>
<p>[base/ttinterp.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T222918.142249Z"></a>
2010-02-23T22:29:18.142249Z Henry Stiles</strong></p>
<blockquote>
<pre>
Fixes bug 690967, a diagnostic problem with dumping memory the debug
-ZA option.  See the comment in the code for details, the change has
no effect on production builds.
</pre>
<p>[base/gsalloc.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T215815.181686Z"></a>
2010-02-23T21:58:15.181686Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Fix obviously wrong code in .fixsethalftonescreen procedure that is used by
the setscreen (and setcolorscreen) procedure and caused a PS error if the
third 'proc' argument to setscreen is a read-only Halftone type 1 dictionary.
Thanks to Jonathan Dagresta for the patch. Bug 691130, customer 1130.
</pre>
<p>[Resource/Init/gs_dps2.ps]</p>
</blockquote>

<p><strong><a name="2010-02-23T205621.262529Z"></a>
2010-02-23T20:56:21.262529Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Simplify sed script that extracts libTiff version number for compatibility
with AIX sed. Include our portable header before tiff.h to make sure that
all stdint types are found. Bug 691102.
</pre>
<p>[base/gdevtifs.c base/gdevtsep.c base/configure.ac base/gdevtfnx.c base/devs.mak base/gdevtfax.c]</p>
</blockquote>

<p><strong><a name="2010-02-23T100154.545437Z"></a>
2010-02-23T10:01:54.545437Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite)
Bug #691133. If producing PDF/A output. and a DOCINFO pdfmark string was UTF_16BE
encoded *and* contained a numeric character, then decode_escape incorrectly consumed
any numeric characters following the first octal byte of the UTF16 code.

This was caused by decode_escape assuming that octal sequences are terminated by
non-numeric characters which is clearly wrong. The octal escape decoding loop is now
terminated when :
1) 3 numeric characters are read from the string
2) No more data is available in the string
3) A non-numeric character is encountered in the string.

</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-22T114533.943563Z"></a>
2010-02-22T11:45:33.943563Z Chris Liddell</strong></p>
<blockquote>
<pre>
resolve inappropriate variable type (signed vs unsigned) and comparisons with
the wrong variable when writing the local subrs info to the serialized T2 Private
dictionary.</pre>
<p>[psi/write_t2.c]</p>
</blockquote>

<p><strong><a name="2010-02-21T175724.841443Z"></a>
2010-02-21T17:57:24.841443Z regression</strong></p>
<blockquote>
<pre>

Added regression testing of the icc_work branch to the local cluster.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/run.pl toolbin/localcluster/cachearchive.pl]</p>
</blockquote>

<p><strong><a name="2010-02-21T035726.068286Z"></a>
2010-02-21T03:57:26.068286Z Marcos H. Woehrmann</strong></p>
<blockquote>
<pre>

Add cast to bmpcmp.c to quiet useless compiler warning.

</pre>
<p>[toolbin/bmpcmp.c]</p>
</blockquote>

<p><strong><a name="2010-02-21T035151.891247Z"></a>
2010-02-21T03:51:51.891247Z regression</strong></p>
<blockquote>
<pre>
Several minor changes to local cluster code to improve reliability and increase performance.

</pre>
<p>[toolbin/localcluster/clustermaster.pl toolbin/localcluster/build.pl toolbin/localcluster/run.pl toolbin/localcluster/compare.pl]</p>
</blockquote>

<p><strong><a name="2010-02-21T033829.059238Z"></a>
2010-02-21T03:38:29.059238Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Update pdf2dsc.ps to match the changes in pdf_main.ps introduced by
the rev. 10341. Thanks to William Bader for the patch. Bug 691124.
</pre>
<p>[lib/pdf2dsc.ps]</p>
</blockquote>

<p><strong><a name="2010-02-21T025705.611462Z"></a>
2010-02-21T02:57:05.611462Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Include stat_.h before estack.h, which defines esp macro.
Prevent a spurious macro substitution in Cygwin version of signal.h.
Bug 691123, customers 661.
</pre>
<p>[psi/zfapi.c psi/int.mak]</p>
</blockquote>

<p><strong><a name="2010-02-17T170227.004947Z"></a>
2010-02-17T17:02:27.004947Z Henry Stiles</strong></p>
<blockquote>
<pre>
Adds placeholder files to trunk so the other languages (pcl, xps and
svg) can built with the icc branch and trunk.  Each of these files
will be replaced with real files when the icc branch is merged into
the trunk.
</pre>
<p>[base/lcms.mak base/gsiccmanage.h]</p>
</blockquote>

<p><strong><a name="2010-02-16T181257.832463Z"></a>
2010-02-16T18:12:57.832463Z Robin Watts</strong></p>
<blockquote>
<pre>
Tiny tweaks to clusterpush.pl to make it work on windows. First, wrap the
&#36;HOME directory in additional quotes to allow for awkward windows users
with spaces in their names. Secondly, add a crude mapping for people whos
windows names are not the same as the usernames. This can unquestionably
be done more nicely, but the simple version will do for now.

</pre>
<p>[toolbin/localcluster/clusterpush.pl]</p>
</blockquote>

<p><strong><a name="2010-02-16T170749.079920Z"></a>
2010-02-16T17:07:49.079920Z Alex Cherepanov</strong></p>
<blockquote>
<pre>
Add missing dereferencing of indirect objects in /Mask array.
Bug 691112, customers 870.
</pre>
<p>[Resource/Init/pdf_draw.ps]</p>
</blockquote>

<p><strong><a name="2010-02-12T152723.315268Z"></a>
2010-02-12T15:27:23.315268Z Ken Sharp</strong></p>
<blockquote>
<pre>
Sort out some minor benign compiler warnings. No differences expected.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-12T151716.629322Z"></a>
2010-02-12T15:17:16.629322Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix colour processing. It was possible for nested ICCBased colour spaces (ie an ICCBased
space whose Alternate is another ICCBased space) to cause segmentation faults.

This was due to the fact that the conversion to base colour continuation procedure
'currentbasecolor_cont' was supposed to scan the space from the initial declaration
each time round a loop. However a reassignment of an array pointer caused it to
rescan from the last processed colour array instead.

Normally this does not cause problems, but in the case of nested ICCBased it caused
us to generate an error.

Fixed by re-initialising the array pointer at the start of the loop.
</pre>
<p>[psi/zcolor.c]</p>
</blockquote>

<p><strong><a name="2010-02-11T162820.347398Z"></a>
2010-02-11T16:28:20.347398Z Ken Sharp</strong></p>
<blockquote>
<pre>
Fix (pdfwrite) bug #691104 &quot;pdfwrite emits garbage in the XMP metadata when DOCINFO
pdfmarks contain UTF-16BE text strings&quot;

There were several problems. Firstly the undoing of PostScript string escapes was wrong,
Octal escapes consumed too many characters, and several escape sequences weren't
recognised.

Secondly the XMP emission didn't expect to receive UTF-16BE strings and didn't convert
them to UTF-8 for inclusion in the metadata.

This patch fixes the broken octal escapes, adds teh unprocessed escapes and checks the
DOCINFo strings before sending to XMP. If they include the UTF-16BE Byte Order Mark
then convert the strings to UTF-8.
</pre>
<p>[base/gdevpdfe.c]</p>
</blockquote>

<p><strong><a name="2010-02-10T202733.989189Z"></a>
2010-02-10T20:27:33.989189Z Ralph Giles</strong></p>
<blockquote>
<pre>
Bump the versioning after the 8.71 release.
</pre>
<p>[base/gscdef.c base/version.mak Resource/Init/gs_init.ps doc/News.htm]</p>
</blockquote>

<!-- [2.0 end contents] ==================================================== -->

<!-- [3.0 begin visible trailer] =========================================== -->
<hr>

<p>
<small>Copyright &copy; 2000-2011 Artifex Software, Inc.  All rights reserved.</small>

<p>
This software is provided AS-IS with no warranty, either express or
implied.

This software is distributed under license and may not be copied, modified
or distributed except as expressly authorized under the terms of that
license.  Refer to licensing information at http://www.artifex.com/
or contact Artifex Software, Inc.,  7 Mt. Lassen Drive - Suite A-134,
San Rafael, CA  94903, U.S.A., +1(415)492-9861, for further information.

<p>
<small>Ghostscript version 9.07, 12 February 2013

<!-- [3.0 end visible trailer] ============================================= -->

</body>
</html>
