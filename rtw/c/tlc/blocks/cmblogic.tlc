%% 
%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: Combinatorial Logic block target file

%implements CombinatorialLogic "C"

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
  %<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: Output ===========================================================
%% Abstract:
%%      Simulink returns a row of the matrix by computing the row's index from
%%      the input vector elements. Simulink computes the index by building a
%%      binary number where input vector elements having zero values are 0 and
%%      elements having nonzero values are 1, then adds 1 to the result. For
%%      an input vector, u, of m elements:
%% 
%%      row index = 1 + u(m)*20 + u(m-1)*21 + ... + u(1)*2m-1
%%
%%      where number of rows = 2 ^ (number of inputs)
%%
%function Outputs(block, system) Output
{
  int_T rowidx=0;
\
  /* Compute the truth table row index corresponding to the input */
  %%
  %with DataInputPort
  %assign rollVars = ["U"]
  %roll sigIdx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
    %assign    U = LibBlockInputSignal(0, "", lcv, sigIdx)
    %if LibBlockInputSignalAliasedThruDataTypeId(0) == tSS_BOOLEAN
      rowidx = (rowidx << 1) + (int_T)(%<U> != 0);
    %else
      rowidx = (rowidx << 1) + (int_T)(%<U> != 0.0);
    %endif
  %endroll
  %endwith
  %%
  %%
  /* Copy the appropriate row of the table into the block output vector */
  %%
  %assign noutputs = LibBlockOutputSignalWidth(0)
  %if noutputs == 1
    %assign ans = LibBlockMatrixParameter(TruthTable,"rowidx","",0,"","",0)
    %assign y = LibBlockOutputSignal(0, "", "", 0)
    %<y> = %<ans>;
  %else
    %assign rollVars = ["Y"]
    %assign rollRegions = [0:%<noutputs-1>]
    %roll sigIdx = rollRegions, lcv = RollThreshold, block, "Roller", rollVars
      %assign y = LibBlockOutputSignal(0, "", lcv, sigIdx)
      %<y> = %<LibBlockMatrixParameter(TruthTable,"rowidx","",0,lcv,"",sigIdx)>;
    %endroll
  %endif
}

%endfunction
 
%% [EOF] cmblogic.tlc
