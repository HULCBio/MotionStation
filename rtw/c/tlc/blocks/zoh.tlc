%% 
%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: zero order hold block target file

%implements ZeroOrderHold "C"

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
  %<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: Outputs ===========================================================
%% Abstract:
%%      Y = U
%%
%function Outputs(block, system) Output
  %if LibBlockInputSignalBufferDstPort(0) == 0
    /* no op */
  %else
    %assign isRateTransitionBlock = LibIsRateTransitionBlock(system, block)
    %if isRateTransitionBlock
      if (%<LibIsSpecialSampleHit(SampleTimeIdx, TID)>) {
    %endif
    %assign outputIsComplex = LibBlockInputSignalIsComplex(0)
    %assign rollVars = ["U", "Y"]
    %roll idx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
      %if !outputIsComplex
        %assign ur = LibBlockInputSignal( 0, "", lcv, idx)
        %assign yr = LibBlockOutputSignal(0, "", lcv, idx)
        %<yr> = %<ur>;
      %else
        %assign ur = LibBlockInputSignal( 0, "", lcv, "%<tRealPart>%<idx>")
        %assign yr = LibBlockOutputSignal(0, "", lcv, "%<tRealPart>%<idx>")
        %<yr> = %<ur>;
	%assign ui = LibBlockInputSignal( 0, "", lcv, "%<tImagPart>%<idx>")
	%assign yi = LibBlockOutputSignal(0, "", lcv, "%<tImagPart>%<idx>")
	%<yi> = %<ui>;
      %endif
    %endroll
    %if isRateTransitionBlock
      }
    %endif
  %endif

%endfunction %% Outputs

%% [EOF] zoh.tlc
