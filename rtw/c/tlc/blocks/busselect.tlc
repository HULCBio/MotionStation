%% 
%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: Bus selector block target file

%implements BusSelector "C"

%% Function: BlockInstanceSetup ==============================================
%% Abstract:
%%   Set expression folding compliance
%%
%function BlockInstanceSetup(block, system) void
%<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: Outputs ==========================================================
%% Abstract:
%%
%function Outputs(block, system) Output
  %assign numOutputs = NumDataOutputPorts
  %assign u = LibBlockInputSignal(0, "", "", 0)
  %foreach idx = numOutputs
    %if !LibBlockOutputSignalIsExpr(idx)
      %assign elemWidth = LibBlockOutputSignalWidth(idx)
      %if LibBlockOutputSignalIsComplex(idx)
	%assign elemWidth = elemWidth * 2
      %endif 
      %assign y = LibBlockOutputSignal(idx, "", "", 0)
      %assign elemName = SelectorString[idx]
      %if elemWidth == 1
	%<y> = %<u>%<elemName>;
      %else
	%assign eTypeName = LibGetDataTypeNameFromId(...
	  LibBlockOutputSignalDataTypeId(idx))
	(void) memcpy(&(%<y>), &%<u>%<elemName>, %<elemWidth>*sizeof(%<eTypeName>));
      %endif
    %endif
  %endforeach
%endfunction

%% Function: BlockOutputSignal =================================================
%% Abstract:
%%      Return an output expression.  This function *may*
%%      be used by Simulink when optimizing the Block IO data structure.
%%
%function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
  %switch retType
    %case "Signal"
      %assign u = LibBlockInputSignal(0, "", "", 0)
      %assign elemName  = SelectorString[portIdx]
      %assign portWidth = LibBlockOutputSignalWidth(portIdx)
      %assign tmpVect   = SLibGetReimAndIdx(idx)
      %assign reim      = tmpVect[0]
      %assign offset    = tmpVect[1]
      %assign indexer   = SLibGet1DArrayIndexer(portWidth, ucv, lcv, offset)
      %if LibBlockOutputSignalIsComplex(portIdx) && reim != ""
        %return u + elemName + indexer + "." + reim
      %else
        %return u + elemName + indexer
      %endif
      %%START_ASSERT
    %default
      %assign errTxt = "Unsupported return type: %<retType>"
      %<LibBlockReportError(block,errTxt)>
      %%END_ASSERT
  %endswitch
%endfunction  


%% [EOF] busselect.tlc
