%% File : width.tlc generated from width.ttlc revsion 1.11
%% $Date: 2004/04/14 23:47:10 $
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: Width block target file

%implements Width "C"

%% Function: Start =============================================================
%% Abstract:
%% 	If this block does not have a constant TID (i.e., InlineParameters = 0)
%%      then its output has to be in the global BlockIO structure and since this
%%      output value does not change, initialize it in MdlStart and forget about
%%      it. On the other hand if InlineParameters=1, then this block output will
%%      be invariant and hence it will get appropriately initialized either in
%%      the ConstBlockIO structure or as #define in the model.h 
%%      (or model_common.h file). Therefore no need to worry about it here.
%%
%function Start(block, system) Output
  %if !ISEQUAL(TID, "constant")
    %if !LibBlockOutputSignalIsInBlockIO(0)
      %%START_ASSERT
      %assign errTxt = "The output of the width block " ...
	    "is required in the BlockIO Structure"
      %<LibBlockReportFatalError(block, errTxt)>
      %%END_ASSERT
    %endif
    %assign outDTypeName = LibBlockOutputSignalDataTypeName(0,tRealPart)
    /* %<Type> Block: %<Name> */
    %<LibBlockOutputSignal(0, "", "", 0)> = \
      (%<outDTypeName>)%<DataInputPort.Width>;

  %endif
%endfunction

%% [EOF] width.tlc
