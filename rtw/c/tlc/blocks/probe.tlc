%% $Revision: 1.1.6.2 $
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: Probe block target file

%implements Probe "C"


%% Function: FcnOutputPeriodAndOffset =========================================
%% Abstract:
%%      Function to output Sample Time and Offset
%%
%function FcnOutputPeriodAndOffset(TID)
  %if TYPE(TID) == "Number"
    %return                                                  \
    [%<CAST("Real", CompiledModel.SampleTime[TID].PeriodAndOffset[0])>, \
    %<CAST("Real", CompiledModel.SampleTime[TID].PeriodAndOffset[1])>]
  %else                            %% The TID will be "triggered" then.
    %return [-1.0, -1.0]
  %endif
%endfunction


%% Function: Start =============================================================
%% Abstract:
%% 	If this block does not have a constant TID (i.e., InlineParameters = 0)
%%      then its output has to be in the global BlockIO structure and since this
%%      output value does not change, initialize it in MdlStart and forget about
%%      it. On the other hand if InlineParameters=1, then this block output will
%%      be invariant and hence it will get appropriately initialized either in
%%      the ConstBlockIO structure or as #define in the model.h 
%%      (or model_common.h) file. Therefore no need to worry about it here.
%%
%function Start(block, system) Output
  %if !ISEQUAL(TID, "constant")
    %if !LibBlockOutputSignalIsInBlockIO(0)
      %%START_ASSERT
      %assign errTxt = "The output of the probe block " ...
        "is required in the BlockIO Structure."
      %<LibBlockReportFatalError(block, errTxt)>
      %%END_ASSERT
    %endif
    %%
    %assign outputPort = 0
    %openfile tmpBuffer
    %if ParamSettings.ProbeWidth == "on"
      %assign dTypeName = LibBlockOutputSignalDataTypeName(outputPort, "")
      %assign y = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign inputWidth = LibBlockInputSignalWidth(0)
      %<y> = (%<dTypeName>) %<inputWidth>;
      %assign outputPort = outputPort + 1
    %endif
    %if ParamSettings.ProbeSampleTime == "on"
      %assign dTypeName = LibBlockOutputSignalDataTypeName(outputPort, "")
      %assign periodAndOffset = FcnOutputPeriodAndOffset(TID)
      %assign yPeriod = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign yOffset = LibBlockOutputSignal(outputPort, "", "", 1)            
      %<yPeriod> = (%<dTypeName>) %<periodAndOffset[0]>;
      %<yOffset> = (%<dTypeName>) %<periodAndOffset[1]>;
      %assign outputPort = outputPort + 1
    %endif
    %if ParamSettings.ProbeComplexSignal == "on"
      %assign dTypeName = LibBlockOutputSignalDataTypeName(outputPort, "")
      %assign y = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign isComplex = LibBlockInputSignalIsComplex (0)
      %<y> = (%<dTypeName>) %<isComplex>;
      %assign outputPort = outputPort + 1
    %endif
    %if ParamSettings.ProbeSignalDimensions == "on"
      %assign dTypeName = LibBlockOutputSignalDataTypeName(outputPort, "")
      %assign y       = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign numDims = LibBlockInputSignalNumDimensions(0)
      %assign y1      = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign inDims  = LibBlockInputSignalDimensions(0)
      %<y1> = (%<dTypeName>) %<inDims[0]>;
      %if numDims == 2
	%assign y2 = LibBlockOutputSignal(outputPort, "", "", 1)
	%<y2> = (%<dTypeName>) %<inDims[1]>;
      %endif
      %assign outputPort = outputPort + 1
    %endif
    %if ParamSettings.ProbeFramedSignal == "on"
      %assign dTypeName = LibBlockOutputSignalDataTypeName(outputPort, "")
      %assign y = LibBlockOutputSignal(outputPort, "", "", 0)
      %assign isFrame = LibBlockInputSignalIsFrameData(0)
      %<y> = (%<dTypeName>) %<isFrame>;
    %endif
    
    %closefile tmpBuffer
    %%
    %if !WHITE_SPACE(tmpBuffer)
      /* %<Type> Block: %<Name> */
      %<tmpBuffer>\

    %endif
  %endif %% !InlineParameters
%endfunction


%% [EOF] probe.tlc
