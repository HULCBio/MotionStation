%% $RCSfile: fixptrelop.tlc,v $
%% $Revision: 1.2 $
%% $Date: 2002/01/06 04:20:23 $
%%
%% This file contains tlc code for generation of fixed point relational ops
%%
%% Copyright 1994-2002 The MathWorks, Inc.
%%

%% Function: FixPt_RelOp ==========================================
%%
%% Abstract:
%%  Relational Operator
%%
%%  Vc = ( Va == Vb )
%%  Vc = ( Va ~= Vb )
%%  Vc = ( Va <  Vb )
%%  Vc = ( Va <= Vb )
%%  Vc = ( Va >= Vb )
%%  Vc = ( Va >  Vb )
%%
%%  The records C, A, and B must contain
%%  all the fixed point data type and scaling fields.
%%  They must also contain a field called "Label"
%%  In C_Language terms cLabel must be an l-value.
%%  aLabel and bLabel are treated as read only and
%%  they must provide the values (stored integers) for
%%  A and B.  Please note none of the Labels can be addresses.
%%
%% Synopsis:
%%      FixPt_RelOp(C,A,B,relOp)
%%
%%     C = record describing output
%%     A = record describing input 1
%%     B = record describing input 2
%%     relOp = string contain relational operator (don't pad, no spaces at all)
%%
%% aDominant has the following meaning
%%
%%   0    aDT has the exact same data type as bDT
%%   1    aDT has greater positive range than bDT
%%  -1    otherwise
%%
%function FixPt_RelOp(cLabel,cDT,aLabel,aDT,bLabel,bDT,relOp,aDominant) Output
        %%
        %% handle case when both inputs have same precision
        %% and same IsSigned status
        %%     If one has a larger word size, ISO-C will automatically
        %% convert the comparison to that larger size/range.
        %%
        %if aDominant == 0
            %%
            %if cDT.NativeType != "real32_T"
                %<cLabel> = (%<aLabel>) %<relOp> (%<bLabel>);
            %else
                %<cLabel> = (float)((%<aLabel>) %<relOp> (%<bLabel>));
            %endif
            %%
        %%
        %% handle case where inputs have different data types
        %%
        %else
            %%
            %openfile gutsOfUtil
            %%
            %assign castInWasUsed = 0
            %%
            %% when A has a higher positive range convert B to that DT
            %% 
            %if ISEQUAL(aDominant,1)
                %%
                %assign dLabel = "temp"
                %assign dDT = aDT
                %%
                %assign retVecStr = FixPt_Fix2Fix(dLabel,aDT,bLabel,bDT,"Floor","Saturate")
                %%
                %if SIZE(retVecStr,1) == 3
                    %%
                    %%  do relational comparison using converted value
                    %%
                    %<cLabel> = (%<aLabel>) %<relOp> (%<retVecStr[1]>);
                %else
                    %%
                    %assign castInWasUsed = 1
                    %%
                    %%  do relational comparison using converted value
                    %%
                    %<cLabel> = (%<aLabel>) %<relOp> (%<dLabel>);
                %endif
            %%
            %% when B has a higher (or equal) positive range 
            %% convert A to that DT
            %% 
            %else
                %%
                %assign dLabel = "temp"
                %assign dDT = bDT
                %%
                %assign retVecStr = FixPt_Fix2Fix(dLabel,bDT,aLabel,aDT,"Floor","Saturate")
                %%
                %if SIZE(retVecStr,1) == 3
                    %%
                    %%  do relational comparison using converted value
                    %%
                    %if cDT.NativeType != "real32_T"
                        %<cLabel> = (%<retVecStr[1]>) %<relOp> (%<bLabel>);
                    %else
                        %<cLabel> = (float)((%<retVecStr[1]>) %<relOp> (%<bLabel>));
                    %endif
                %else
                    %%
                    %assign castInWasUsed = 1
                    %%
                    %%  do relational comparison using converted value
                    %%
                    %if cDT.NativeType != "real32_T"
                        %<cLabel> = (%<dLabel>) %<relOp> (%<bLabel>);
                    %else
                        %<cLabel> = (float)((%<dLabel>) %<relOp> (%<bLabel>));
                    %endif
                %endif
            %endif                
            %%
            %closefile gutsOfUtil
            %%
            %if castInWasUsed
            {
                %<dDT.NativeType> %<dLabel>;
             
                %<gutsOfUtil>
            }
            %else
                %<gutsOfUtil>
            %endif
        %endif

%endfunction  %% FixPt_RelOp
