%% 
%% $Revision: 1.1.6.2 $ 
%% 
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%% Abstract: general roller target file

%implements Roller "C"
 
%%
%% RollHeader
%%
%% C language:
%%   {
%%     int_T i;
%%

%function RollHeader(block, rollVars) Output
  %assign ::CompiledModel.LoopControlIdx = ::CompiledModel.LoopControlIdx + 1
  %assign loopVariable = "i%<LoopControlIdx>"
    {
      int_T %<loopVariable>;
  %return loopVariable
%endfunction %% Outputs

%%
%% LoopHeader
%%
%%     real_T non-scalarU's;
%%     real_T non-scalarP's;
%%     real_T non-scalarY's;
%%
%% C language:
%%     for(i = 0; i < numIterations; i++) {
%%

%function LoopHeader(block, sigOffset, numIterations, rolledCount, rollVars) Output
  %assign loopVariable = "i%<LoopControlIdx>"
  %assign ::CompiledModel.CurrentLoopOffset = sigOffset
  %<LibDeclareRollVariables(block, sigOffset, numIterations, rolledCount, rollVars)>
  for (%<loopVariable>=0; %<loopVariable> < %<numIterations>; %<loopVariable>++) {
%endfunction

%%
%% LoopTrailer
%%
%% C language:
%%     }
%%

%function LoopTrailer(block, sigOffset, numIterations, rolledCount, rollVars) Output
    }
%endfunction

%%
%% RollTrailer
%%
%% C language:
%%     }
%%

%function RollTrailer(block, rollVars) Output
    }
  %assign ::CompiledModel.LoopControlIdx = ::CompiledModel.LoopControlIdx - 1
  %if LoopControlIdx < 0
    %assign errTxt = "Something is wrong with loop rolling. " ...
      "LoopControlIdx = %<LoopControlIdx>"
    %<LibReportFatalError(errTxt)>
  %endif
%endfunction
