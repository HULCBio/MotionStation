%% ==============================================================================
%% $RCSfile: bareboard_mrmain.tlc,v $
%% $Revision: 1.1.6.1 $
%% $Date: 2003/11/19 21:22:04 $
%%
%% Abstract:
%%   Example main for bare board target (multirate model)
%%
%% Copyright 1994-2003 The MathWorks, Inc.
%%
%selectfile NULL_FILE

%function FcnMultiTaskingMain() void
  
  %if GenerateSampleERTMain
    %assign CompiledModel.GenerateSampleERTMain = TLC_FALSE
    %warning Overriding example ert_main.c!
  %endif

  %assign cFile = LibCreateSourceFile("Source", "Custom", "ert_main")
  
  %openfile tmpBuf
  static boolean_T OverrunFlags[%<LibNumDiscreteSampleTimes()>];
  %<LibWriteModelData()>\
  %closefile tmpBuf
  
  %<LibSetSourceFileSection(cFile, "Definitions", tmpBuf)>
  
  %openfile tmpBuf
  #include "%<LibGetMdlPubHdrBaseName()>.h"
  %closefile tmpBuf
  
  %<LibSetSourceFileSection(cFile, "Includes", tmpBuf)>
  
  %openfile tmpBuf
  void rt_OneStep()
  {
    boolean_T eventFlags[%<LibNumDiscreteSampleTimes()>];
    int_T i;
    
    /* Disable interrupts here */
    
    /* Check for overun */
    if (OverrunFlags[0]++) {
      %<LibSetRTModelErrorStatus("\"Overrun\"")>;
      return;
    }
    
    /* Save FPU context here (if necessary) */
    /* Re-enable timer or interrupt here */
    %assign varbuf = LibWriteModelInput(0,RollThreshold)
    %if !WHITE_SPACE(varbuf)
      /* Remove conditional, and set model inputs associated with base rate here */
      #if 0
      %<varbuf>\
      #endif
    %endif
    
    %<LibCallSetEventForThisBaseStep("eventFlags")>\
    %<LibCallModelStep(0)>\
    
    %assign varbuf = LibWriteModelOutput(0,RollThreshold)
    %if !WHITE_SPACE(varbuf)
      /* Remove conditional, and get model outputs associated with base rate here */
      #if 0
      %<varbuf>\
      #endif
    %endif
    
    OverrunFlags[0]--;
    
    for (i = 1; i < %<LibNumDiscreteSampleTimes()>; i++) {
      if (eventFlags[i]) {
	if (OverrunFlags[i]++) {
	  %<LibSetRTModelErrorStatus("\"Overrun\"")>;
	  return;
	}
	
	%foreach idx = LibNumDiscreteSampleTimes()
	  %assign varbuf = LibWriteModelInput(idx+1,RollThreshold)
	  %if !WHITE_SPACE(varbuf)
	    /* Remove conditional and set model inputs associated with subrates here */
	    #if 0
	    if (i == %<idx+1>) {
	      %<varbuf>\
	    }
	    #endif
	  %endif
	%endforeach
	
	%<FcnCallMdlStep("i")>\
      
	%foreach idx = LibNumDiscreteSampleTimes()
	  %assign varbuf = LibWriteModelOutput(idx+1,RollThreshold)
	  %if !WHITE_SPACE(varbuf)
	    /* Remove conditional and set model outputs associated with subrates here */
	    #if 0
	    if (i == %<idx+1>) {
	      %<varbuf>\
	    }
	    #endif
	  %endif
	%endforeach

	OverrunFlags[i]--;
      }
    }
    
    /* Disable interrupts here */
    /* Restore FPU context here (if necessary) */
    /* Enable interrupts here */
  }
  
  int_T main(int_T argc, const char_T *argv[])
  {
    /* Initialize model */
    %<LibCallModelInitialize()>\
    
    /* Associate rt_OneStep() with a timer that executes at the base rate of the model */

    %<LibCallModelTerminate()>\
    return 0;
  }
  %closefile tmpBuf
  
  %<LibSetSourceFileSection(cFile, "Functions", tmpBuf)>
  
%endfunction
